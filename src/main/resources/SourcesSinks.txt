SOURCE|<libcore.icu.NativeDecimalFormat: int getGroupingSize()>
SOURCE|<android.content.ContentValues: java.lang.Byte getAsByte(java.lang.String)>
SOURCE|<android.webkit.CacheManager$CacheResult: java.lang.String getExpiresString()>
SOURCE|<com.android.internal.telephony.gsm.UsimServiceTable: java.lang.Object[] getValues()>
SOURCE|<com.android.videoeditor.service.MovieEffect: android.graphics.Rect getStartRect()>
SOURCE|<org.apache.harmony.xnet.provider.jsse.CipherSuite: java.lang.String getHmacName()>
SOURCE|<android.view.View: android.os.IBinder getApplicationWindowToken()>
SOURCE|<java.io.FileInputStream: void <init>(java.io.File)>
SOURCE|<java.lang.reflect.Array: int getLength(java.lang.Object)>
SOURCE|<com.android.gallery3d.app.GalleryActionBar: java.lang.String getClusterByTypeString(android.content.Context,int)>
SOURCE|<android.content.ContextWrapper: android.content.res.Resources$Theme getTheme()>
SOURCE|<com.android.org.bouncycastle.asn1.ASN1OctetString: com.android.org.bouncycastle.asn1.ASN1OctetString getInstance(java.lang.Object)>
SOURCE|<android.content.ContextWrapper: java.lang.String getPackageResourcePath()>
SOURCE|<android.nfc.tech.MifareUltralight: int getType()>
SOURCE|<android.telephony.SignalStrength: int getLteDbm()>
SOURCE|<android.graphics.drawable.Drawable: int getMinimumWidth()>
SOURCE|<java.util.FormatFlagsConversionMismatchException: java.lang.String getFlags()>
SOURCE|<android.speech.tts.TextToSpeechService: java.util.Set onGetFeaturesForLanguage(java.lang.String,java.lang.String,java.lang.String)>
SOURCE|<java.util.concurrent.ForkJoinPool: int getQueuedSubmissionCount()>
SOURCE|<java.text.NumberFormat: java.text.NumberFormat getNumberInstance(java.util.Locale)>
SOURCE|<com.android.inputmethod.keyboard.internal.KeyStylesSet$DeclaredKeyStyle: int getFlag(android.content.res.TypedArray,int)>
SOURCE|<java.io.File: java.lang.String getName()>
SOURCE|<android.net.wifi.p2p.nsd.WifiP2pServiceResponse: android.net.wifi.p2p.WifiP2pDevice getSrcDevice()>
SOURCE|<com.android.contacts.model.dataitem.StructuredPostalDataItem: java.lang.String getFormattedAddress()>
SOURCE|<com.android.browser.homepages.Template: com.android.browser.homepages.Template getCachedTemplate(android.content.Context,int)>
SOURCE|<libcore.io.ForwardingOs: int getegid()>
SOURCE|<android.webkit.CacheManager$CacheResult: java.lang.String getMimeType()>
SOURCE|<android.app.admin.DevicePolicyManager: long getMaximumTimeToLock(android.content.ComponentName,int)>
SOURCE|<android.hardware.SensorManager: void getQuaternionFromVector(float[],float[])>
SOURCE|<android.filterfw.core.FilterContext: android.filterfw.core.GLEnvironment getGLEnvironment()>
SOURCE|<android.content.SyncManager: long access$3000()>
SOURCE|<android.net.sip.SipManager: android.net.sip.SipSession createSipSession(android.net.sip.SipProfile,android.net.sip.SipSession$Listener)>
SOURCE|<org.apache.harmony.security.x509.GeneralSubtrees$1: java.lang.Object getDecodedObject(org.apache.harmony.security.asn1.BerInputStream)>
SOURCE|<org.apache.http.impl.conn.tsccm.ThreadSafeClientConnManager: org.apache.http.conn.ClientConnectionOperator createConnectionOperator(org.apache.http.conn.scheme.SchemeRegistry)>
SOURCE|<java.text.FieldPosition: int getField()>
SOURCE|<org.apache.http.impl.conn.tsccm.BasicPoolEntry: org.apache.http.impl.conn.tsccm.BasicPoolEntryRef getWeakRef()>
SOURCE|<android.os.storage.IObbActionListener$Stub: android.os.IBinder asBinder()>
SOURCE|<com.android.internal.util.StateMachine$LogRecords: com.android.internal.util.StateMachine$LogRec get(int)>
SOURCE|<com.android.internal.telephony.DataConnection: boolean isRetryNeeded()>
SOURCE|<android.preference.ListPreference: java.lang.CharSequence getEntry()>
SOURCE|<javax.security.auth.Subject: java.util.Set getPrincipals()>
SOURCE|<libcore.net.http.ResponseHeaders: java.lang.String getEtag()>
SOURCE|<java.security.cert.CertPathBuilder: java.security.cert.CertPathBuilder getInstance(java.lang.String)>
SOURCE|<com.android.server.display.DisplayAdapter: android.content.Context getContext()>
SOURCE|<gov.nist.javax.sip.header.SIPHeaderList: int indexOf(java.lang.Object)>
SOURCE|<android.view.MotionEvent: float getHistoricalToolMajor(int,int)>
SOURCE|<android.content.pm.IPackageManager$Stub$Proxy: int getComponentEnabledSetting(android.content.ComponentName,int)>
SOURCE|<com.android.inputmethod.keyboard.MainKeyboardView: com.android.inputmethod.keyboard.KeyboardActionListener getKeyboardActionListener()>
SOURCE|<android.graphics.Canvas: javax.microedition.khronos.opengles.GL getGL()>
SOURCE|<com.android.gallery3d.filtershow.cache.ImageLoader: com.android.gallery3d.filtershow.FilterShowActivity getActivity()>
SOURCE|<com.android.browser.DataController: com.android.browser.DataController getInstance(android.content.Context)>
SOURCE|<android.widget.EdgeEffect: android.graphics.Rect getBounds(boolean)>
SOURCE|<com.adobe.xmp.impl.ByteBuffer: java.lang.String getEncoding()>
SOURCE|<com.android.email.activity.MessageListFragment: com.android.email.MessageListContext getListContext()>
SOURCE|<com.android.server.display.HeadlessDisplayAdapter$HeadlessDisplayDevice: com.android.server.display.DisplayDeviceInfo getDisplayDeviceInfoLocked()>
SOURCE|<com.android.gallery3d.data.FilterEmptyPromptSet: java.util.ArrayList getMediaItem(int,int)>
SOURCE|<java.io.EmulatedFields: long get(java.lang.String,long)>
SOURCE|<java.math.BigInteger: byte[] toByteArray()>
SOURCE|<java.net.URLDecoder: java.lang.String decode(java.lang.String,java.lang.String)>
SOURCE|<com.android.internal.util.TypedProperties: short getShort(java.lang.String)>
SOURCE|<gov.nist.javax.sip.header.TimeStamp: float getTimeStamp()>
SOURCE|<android.accessibilityservice.IAccessibilityServiceConnection$Stub$Proxy: float findAccessibilityNodeInfoByViewId(int,long,int,int,android.view.accessibility.IAccessibilityInteractionConnectionCallback,long)>
SOURCE|<android.content.IContentService$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
SOURCE|<android.webkit.WebViewClassic: android.graphics.Rect sendOurVisibleRect()>
SOURCE|<com.coremedia.iso.boxes.MediaBox: com.coremedia.iso.boxes.MediaInformationBox getMediaInformationBox()>
SOURCE|<com.android.internal.view.menu.MenuItemImpl: int getGroupId()>
SOURCE|<com.android.browser.homepages.RequestHandler: java.lang.String getUriResourcePath()>
SOURCE|<com.android.vcard.VCardProperty: java.lang.String getRawValue()>
SOURCE|<android.renderscript.Element: android.renderscript.Element getSubElement(int)>
SOURCE|<gov.nist.javax.sip.ListeningPointImpl: gov.nist.javax.sip.SipProviderImpl getProvider()>
SOURCE|<org.apache.harmony.xml.dom.AttrImpl: java.lang.String getValue()>
SOURCE|<java.util.regex.PatternSyntaxException: int getIndex()>
SOURCE|<java.lang.Thread: void setContextClassLoader(java.lang.ClassLoader)>
SOURCE|<android.view.MotionEvent: int getFlags()>
SOURCE|<libcore.net.http.HttpsURLConnectionImpl: java.lang.String getHeaderField(java.lang.String)>
SOURCE|<java.util.logging.LogRecord: java.lang.String getLoggerName()>
SOURCE|<com.googlecode.mp4parser.AbstractContainerBox: java.util.List getBoxes()>
SOURCE|<com.android.internal.app.ActionBarImpl$ActionModeImpl: android.view.View getCustomView()>
SOURCE|<org.apache.harmony.xnet.provider.jsse.ClientSessionContext: javax.net.ssl.SSLSession getSession(java.lang.String,int)>
SOURCE|<com.android.server.wm.WindowState: int getDisplayId()>
SOURCE|<android.renderscript.Program: android.renderscript.Type getConstant(int)>
SOURCE|<java.util.ListResourceBundle: java.util.Enumeration getKeys()>
SOURCE|<com.android.vcard.VCardParserImpl_V40: java.util.Set getKnownPropertyNameSet()>
SOURCE|<com.android.mms.data.Conversation: com.android.mms.data.ContactList getRecipients()>
SOURCE|<com.android.gallery3d.exif.ExifTag: java.lang.String getString()>
SOURCE|<com.android.gallery3d.data.FaceClustering: int getNumberOfClusters()>
SOURCE|<android.filterpacks.imageproc.SimpleImageFilter: android.filterfw.core.FrameFormat getOutputFormat(java.lang.String,android.filterfw.core.FrameFormat)>
SOURCE|<android.net.IConnectivityManager$Stub$Proxy: android.net.NetworkState[] getAllNetworkState()>
SOURCE|<com.android.browser.BrowserSettings: int getRawTextZoom(int)>
SOURCE|<com.android.uiautomator.core.UiDevice: int getDisplayHeight()>
SOURCE|<org.apache.http.conn.params.ConnRouteParams: org.apache.http.HttpHost getDefaultProxy(org.apache.http.params.HttpParams)>
SOURCE|<com.google.android.mms.pdu.PduHeaders: com.google.android.mms.pdu.EncodedStringValue getEncodedStringValue(int)>
SOURCE|<android.view.AbsSavedState: android.os.Parcelable getSuperState()>
SOURCE|<android.content.pm.ApplicationInfo: android.content.pm.ApplicationInfo getApplicationInfo()>
SOURCE|<android.view.GLES20DisplayList: int getNativeDisplayList()>
SOURCE|<android.content.Intent: float[] getFloatArrayExtra(java.lang.String)>
SOURCE|<com.android.inputmethod.keyboard.MainKeyboardView: int getAltCodeKeyWhileTypingAnimAlpha()>
SOURCE|<android.app.ApplicationPackageManager: android.content.pm.ActivityInfo getActivityInfo(android.content.ComponentName,int)>
SOURCE|<com.google.common.collect.Lists$ReverseList: java.lang.Object get(int)>
SOURCE|<com.android.org.bouncycastle.asn1.DERGeneralizedTime: java.util.Date getDate()>
SOURCE|<org.apache.harmony.security.x509.TBSCertList$RevokedCertificate: java.math.BigInteger getUserCertificate()>
SOURCE|<android.content.res.TypedArray: android.content.res.ColorStateList getColorStateList(int)>
SOURCE|<android.net.wifi.WifiSsid: byte[] getOctets()>
SOURCE|<android.media.ExifInterface: boolean getLatLong(float[])>
SOURCE|<com.android.internal.telephony.cdma.SmsMessage: com.android.internal.telephony.cdma.SmsMessage$SubmitPdu getSubmitPdu(java.lang.String,java.lang.String,int,byte[],boolean)>
SOURCE|<android.app.DownloadManager$Query: android.database.Cursor runQuery(android.content.ContentResolver,java.lang.String[],android.net.Uri)>
SOURCE|<java.net.DatagramSocketImpl: java.io.FileDescriptor getFileDescriptor()>
SOURCE|<android.view.View: float getHorizontalScrollFactor()>
SOURCE|<java.time.DayOfWeek: int get(java.time.temporal.TemporalField)>
SOURCE|<android.view.accessibility.IAccessibilityInteractionConnection$Stub: android.os.IBinder asBinder()>
SOURCE|<java.lang.Class: java.lang.reflect.Field[] getDeclaredFields()>
SOURCE|<org.apache.http.util.VersionInfo: java.lang.String getUserAgent(java.lang.String,java.lang.String,java.lang.Class)>
SOURCE|<gov.nist.javax.sip.header.ims.PAccessNetworkInfo: java.lang.String getDSLLocation()>
SOURCE|<com.android.browser.provider.SnapshotProvider: android.database.sqlite.SQLiteDatabase getReadableDatabase()>
SOURCE|<java.security.KeyPair: java.security.PrivateKey getPrivate()>
SOURCE|<javax.xml.parsers.FactoryConfigurationError: java.lang.String getMessage()>
SOURCE|<java.nio.IntBuffer: java.lang.Object array()>
SOURCE|<android.telephony.TelephonyManager: java.lang.String getSubscriberId()>
SOURCE|<java.lang.ClassLoader: java.lang.ClassLoader access$000()>
SOURCE|<com.android.browser.BrowserSettings: int getDoubleTapZoom()>
SOURCE|<com.android.internal.os.BatteryStatsImpl: int getDischargeAmountScreenOnSinceCharge()>
SOURCE|<gov.nist.javax.sip.stack.SIPTransaction: gov.nist.javax.sip.stack.MessageProcessor getMessageProcessor()>
SOURCE|<com.google.common.collect.MapMakerInternalMap$AbstractReferenceEntry: com.google.common.collect.MapMakerInternalMap$ValueReference getValueReference()>
SOURCE|<com.android.deskclock.widget.multiwaveview.GlowPadView: int getTargetResourceId()>
SOURCE|<com.android.server.LocationManagerService: java.lang.String getFromLocationName(java.lang.String,double,double,double,double,int,android.location.GeocoderParams,java.util.List)>
SOURCE|<com.android.gallery3d.gadget.MediaSetSource: android.net.Uri getContentUri(int)>
SOURCE|<com.android.contacts.activities.PhotoSelectionActivity$PhotoHandler: long getWritableEntityId()>
SOURCE|<android.renderscript.ProgramRaster: android.renderscript.ProgramRaster$CullMode getCullMode()>
SOURCE|<com.google.common.collect.Multimaps$UnmodifiableListMultimap: java.util.Collection get(java.lang.Object)>
SOURCE|<android.widget.ImageView: int getImageAlpha()>
SOURCE|<gov.nist.javax.sip.header.RequestLine: java.lang.String getSipVersion()>
SOURCE|<android.graphics.drawable.StateListDrawable: android.graphics.drawable.StateListDrawable$StateListState getStateListState()>
SOURCE|<com.android.mms.dom.NodeImpl: org.w3c.dom.Node getFirstChild()>
SOURCE|<com.android.providers.contacts.NameSplitter$Name: java.lang.String getGivenNames()>
SOURCE|<com.android.mms.model.RegionModel: java.lang.String getFit()>
SOURCE|<com.coremedia.iso.boxes.MovieHeaderBox: long getModificationTime()>
SOURCE|<org.apache.http.impl.AbstractHttpServerConnection: org.apache.http.io.HttpMessageParser createRequestParser(org.apache.http.io.SessionInputBuffer,org.apache.http.HttpRequestFactory,org.apache.http.params.HttpParams)>
SOURCE|<com.android.emailcommon.utility.AttachmentUtilities: android.net.Uri getAttachmentUri(long,long)>
SOURCE|<android.media.MediaRouter$RouteInfo: android.media.MediaRouter$RouteCategory getCategory()>
SOURCE|<com.android.providers.contacts.ProfileProvider: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>
SOURCE|<android.animation.Animator: android.animation.Animator clone()>
SOURCE|<com.android.browser.DateSortedExpandableListAdapter: android.view.View getChildView(int,int,boolean,android.view.View,android.view.ViewGroup)>
SOURCE|<com.google.android.picasasync.UploadTaskEntry: long getBytesTotal()>
SOURCE|<gov.nist.javax.sip.header.StatusLine: int getStatusCode()>
SOURCE|<com.android.org.bouncycastle.asn1.ASN1Set: com.android.org.bouncycastle.asn1.ASN1Primitive toDLObject()>
SOURCE|<com.android.providers.media.MediaThumbRequest: java.util.Comparator getComparator()>
SOURCE|<com.android.deskclock.Utils: int getGrayColorId()>
SOURCE|<java.util.Hashtable$HashIterator: java.util.Hashtable$HashtableEntry nextEntry()>
SOURCE|<com.android.email.activity.setup.AccountCheckSettingsFragment$ErrorDialog: android.app.Dialog onCreateDialog(android.os.Bundle)>
SOURCE|<com.android.internal.telephony.CallTracker: android.os.Message obtainNoPollCompleteMessage(int)>
SOURCE|<com.android.internal.telephony.PhoneProxy: com.android.internal.telephony.ims.IsimRecords getIsimRecords()>
SOURCE|<com.android.browser.BaseUi: com.android.browser.Tab getActiveTab()>
SOURCE|<com.android.calendar.alerts.AlertReceiver: com.android.calendar.alerts.AlertService$NotificationWrapper makeDigestNotification(android.content.Context,java.util.ArrayList,java.lang.String,boolean)>
SOURCE|<android.view.ViewConfiguration: int getMaximumDrawingCacheSize()>
SOURCE|<android.content.res.TypedArray: float getFraction(int,int,int,float)>
SOURCE|<org.apache.http.impl.conn.ProxySelectorRoutePlanner: java.lang.String getHost(java.net.InetSocketAddress)>
SOURCE|<android.app.backup.BackupDataInput: int getDataSize()>
SOURCE|<com.android.phone.InCallTouchUi: int getTouchUiHeight()>
SOURCE|<com.android.internal.telephony.cdma.SmsMessage: byte[] getIncomingSmsFingerprint()>
SOURCE|<android.content.pm.LabeledIntent: int getLabelResource()>
SOURCE|<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$Uid$Proc getProcessStatsLocked(java.lang.String,int)>
SOURCE|<com.google.android.apps.lightcycle.camera.CameraUtility: float getFieldOfView()>
SOURCE|<android.net.http.SslCertificate: java.lang.String getValidNotAfter()>
SOURCE|<org.apache.harmony.xml.dom.NodeImpl: java.lang.String getBaseURI()>
SOURCE|<android.nfc.TechListParcel: java.lang.String[][] getTechLists()>
SOURCE|<android.filterfw.io.GraphReader: android.filterfw.core.FilterGraph readGraphResource(android.content.Context,int)>
SOURCE|<android.media.MediaRouter$RouteInfo: android.media.MediaRouter$RouteGroup getGroup()>
SOURCE|<android.text.format.DateFormat: java.text.DateFormat getDateFormatForSetting(android.content.Context,java.lang.String)>
SOURCE|<org.apache.harmony.xnet.provider.jsse.SSLSessionImpl: long getLastAccessedTime()>
SOURCE|<com.android.internal.telephony.CallManager: int getServiceState()>
SOURCE|<android.content.res.Resources: boolean getBoolean(int)>
SOURCE|<org.apache.harmony.security.x509.Validity: java.util.Date getNotAfter()>
SOURCE|<com.android.ex.chips.BaseRecipientAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)>
SOURCE|<android.widget.Toast: float getHorizontalMargin()>
SOURCE|<android.widget.ImageView: int getBaseline()>
SOURCE|<android.widget.AdapterView: java.lang.Object getItemAtPosition(int)>
SOURCE|<android.nfc.tech.NfcB: byte[] getApplicationData()>
SOURCE|<org.apache.http.message.BasicHeaderElement: org.apache.http.NameValuePair getParameterByName(java.lang.String)>
SOURCE|<org.apache.james.mime4j.field.datetime.parser.DateTimeParser$Time: int getZone()>
SOURCE|<javax.xml.transform.TransformerException: java.lang.String getMessageAndLocation()>
SOURCE|<com.android.internal.os.BatteryStatsImpl: long getBatteryUptimeLocked(long)>
SOURCE|<com.android.videoeditor.service.VideoEditorProject: long getPlayheadPos()>
SOURCE|<org.apache.http.message.HeaderGroup: org.apache.http.Header getFirstHeader(java.lang.String)>
SOURCE|<android.telephony.SmsCbMessage: java.lang.String toString()>
SOURCE|<gov.nist.javax.sip.stack.SIPClientTransaction: gov.nist.javax.sip.header.Via getOutgoingViaHeader()>
SOURCE|<com.android.inputmethod.compat.SuggestionSpanUtils: java.lang.CharSequence getTextWithAutoCorrectionIndicatorUnderline(android.content.Context,java.lang.CharSequence)>
SOURCE|<java.nio.file.InvalidPathException: int getIndex()>
SOURCE|<com.android.mms.model.ImageModel: boolean getMediaResizable()>
SOURCE|<org.apache.http.impl.client.DefaultUserTokenHandler: java.security.Principal getAuthPrincipal(org.apache.http.auth.AuthState)>
SOURCE|<android.appwidget.AppWidgetManager: int[] getAppWidgetIds(android.content.ComponentName)>
SOURCE|<android.provider.CalendarContract$CalendarEntity$EntityIteratorImpl: android.content.Entity getEntityAndIncrementCursor(android.database.Cursor)>
SOURCE|<android.bluetooth.BluetoothA2dp: int getPriority(android.bluetooth.BluetoothDevice)>
SOURCE|<android.view.ViewGroup: java.util.ArrayList access$400(android.view.ViewGroup)>
SOURCE|<org.apache.harmony.xnet.provider.jsse.SSLParametersImpl: boolean getNeedClientAuth()>
SOURCE|<com.google.common.collect.BstOperations: com.google.common.collect.BstNode insertMin(com.google.common.collect.BstNode,com.google.common.collect.BstNode,com.google.common.collect.BstNodeFactory,com.google.common.collect.BstBalancePolicy)>
SOURCE|<com.android.internal.util.TypedProperties: short getShort(java.lang.String,short)>
SOURCE|<org.apache.http.message.AbstractHttpMessage: org.apache.http.HeaderIterator headerIterator()>
SOURCE|<com.android.providers.contacts.PhotoProcessor: byte[] getDisplayPhotoBytes()>
SOURCE|<android.hardware.SensorManager: boolean getRotationMatrix(float[],float[],float[],float[])>
SOURCE|<com.android.mms.data.ContactList: com.android.mms.data.ContactList getByIds(java.lang.String,boolean)>
SOURCE|<com.android.browser.TabControl: int getCurrentPosition()>
SOURCE|<com.android.internal.telephony.gsm.SmsCbHeader: int getDataCodingScheme()>
SOURCE|<android.webkit.WebHistoryItem: android.graphics.Bitmap getFavicon()>
SOURCE|<java.util.concurrent.ThreadPoolExecutor: int getLargestPoolSize()>
SOURCE|<android.content.res.Resources: void getValue(int,android.util.TypedValue,boolean)>
SOURCE|<com.android.contacts.model.account.BaseAccountType: com.android.contacts.model.dataitem.DataKind addDataKindEmail(android.content.Context)>
SOURCE|<android.widget.TextView: int getCurrentHintTextColor()>
SOURCE|<com.android.email.activity.setup.SetupData: java.lang.String getPassword()>
SOURCE|<com.google.common.collect.MapMakerInternalMap$SoftEvictableEntry: com.google.common.collect.MapMakerInternalMap$ReferenceEntry getPreviousEvictable()>
SOURCE|<com.android.contacts.model.RawContactDelta: com.android.contacts.model.account.AccountType getRawContactAccountType(android.content.Context)>
SOURCE|<java.security.cert.CertPathValidator: java.lang.String getDefaultType()>
SOURCE|<com.android.browser.search.SearchEngineInfo: java.lang.String getSearchUriForQuery(java.lang.String)>
SOURCE|<libcore.net.http.RawHeaders: java.lang.String getStatusLine()>
SOURCE|<org.xml.sax.SAXException: java.lang.String getMessage()>
SOURCE|<com.android.deskclock.widget.multiwaveview.PointCloud: float getScale()>
SOURCE|<org.xml.sax.helpers.AttributesImpl: java.lang.String getValue(java.lang.String)>
SOURCE|<com.android.gallery3d.data.LocalImage: java.lang.String getFilePath()>
SOURCE|<android.app.LoadedApk$ReceiverDispatcher: java.lang.RuntimeException getUnregisterLocation()>
SOURCE|<org.apache.harmony.xnet.provider.jsse.OpenSSLSessionImpl: int getPacketBufferSize()>
SOURCE|<gov.nist.javax.sip.header.ContentEncoding: java.lang.String getEncoding()>
SOURCE|<com.android.internal.telephony.IccRecords: com.android.internal.telephony.gsm.UsimServiceTable getUsimServiceTable()>
SOURCE|<android.content.Intent: java.lang.CharSequence[] getCharSequenceArrayExtra(java.lang.String)>
SOURCE|<com.android.providers.contacts.SearchIndexManager$IndexBuilder: int getInt(java.lang.String)>
SOURCE|<com.android.deskclock.widget.multiwaveview.PointCloud$GlowManager: float getAlpha()>
SOURCE|<java.lang.Short: short parseShort(java.lang.String)>
SOURCE|<android.widget.AutoCompleteTextView: int getDropDownHeight()>
SOURCE|<com.android.deskclock.AlarmClock$AlarmItemAdapter: int[] getExpandedArray()>
SOURCE|<org.apache.http.impl.conn.AbstractClientConnAdapter: int getLocalPort()>
SOURCE|<com.android.internal.app.LocalePicker$LocaleInfo: java.util.Locale getLocale()>
SOURCE|<com.android.contacts.model.RawContact: java.lang.Long getId()>
SOURCE|<com.android.gallery3d.data.LocalMediaItem: long getSize()>
SOURCE|<com.android.launcher2.Workspace: java.util.ArrayList getAllShortcutAndWidgetContainers()>
SOURCE|<gov.nist.javax.sip.header.ContentType: java.lang.String getCharset()>
SOURCE|<com.android.internal.widget.multiwaveview.TargetDrawable: float getPositionY()>
SOURCE|<gov.nist.javax.sip.header.ParametersHeader: gov.nist.core.DuplicateNameValueList getMultiParameters()>
SOURCE|<android.graphics.drawable.NinePatchDrawable: int getOpacity()>
SOURCE|<android.webkit.WebStorage$Origin: long getQuota()>
SOURCE|<android.content.Intent: java.lang.Object getExtra(java.lang.String,java.lang.Object)>
SOURCE|<android.location.Criteria: int getBearingAccuracy()>
SOURCE|<org.apache.http.protocol.BasicHttpProcessor: int getResponseInterceptorCount()>
SOURCE|<com.android.org.bouncycastle.util.io.pem.PemHeader: java.lang.String getName()>
SOURCE|<com.android.email.service.AttachmentDownloadService: int getSize()>
SOURCE|<com.android.internal.telephony.PhoneBase: java.lang.String[] getActiveApnTypes()>
SOURCE|<java.util.FormatFlagsConversionMismatchException: char getConversion()>
SOURCE|<android.content.pm.ContainerEncryptionParams: byte[] getMacTag()>
SOURCE|<com.android.providers.contacts.ContactsDatabaseHelper: java.lang.String getUseStrictPhoneNumberComparisonParameter()>
SOURCE|<com.android.contacts.detail.ContactDetailFragment$AddToMyContactsQuickFix: java.lang.String getTitle()>
SOURCE|<android.media.videoeditor.MediaProperties: int[] getSupportedVideoBitrates()>
SOURCE|<android.app.ISearchManager$Stub$Proxy: android.app.SearchableInfo getSearchableInfo(android.content.ComponentName)>
SOURCE|<com.android.internal.telephony.sip.SipPhone: com.android.internal.telephony.PhoneConstants$State getState()>
SOURCE|<libcore.net.http.HttpEngine: libcore.net.http.RawHeaders getNetworkRequestHeaders()>
SOURCE|<android.content.ContentResolver: android.content.SyncStatusInfo getSyncStatus(android.accounts.Account,java.lang.String)>
SOURCE|<com.android.contacts.test.InjectedServices: android.content.SharedPreferences getSharedPreferences()>
SOURCE|<com.android.internal.telephony.PhoneProxy: void getOutgoingCallerIdDisplay(android.os.Message)>
SOURCE|<android.location.Location: android.location.Location getExtraLocation(java.lang.String)>
SOURCE|<android.util.LruCache: java.lang.Object get(java.lang.Object)>
SOURCE|<gov.nist.javax.sip.stack.TLSMessageChannel: int getViaPort()>
SOURCE|<java.security.spec.RSAPrivateCrtKeySpec: java.math.BigInteger getPrimeExponentQ()>
SOURCE|<java.time.Instant: int getNano()>
SOURCE|<com.android.gallery3d.ui.TiledScreenNail: int getHeight()>
SOURCE|<com.android.contacts.list.PhoneFavoriteMergedAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)>
SOURCE|<android.view.FocusFinder: android.view.View findNextFocusFromRect(android.view.ViewGroup,android.graphics.Rect,int)>
SOURCE|<java.text.ChoiceFormat: java.lang.Number parse(java.lang.String,java.text.ParsePosition)>
SOURCE|<com.android.gallery3d.ui.CropView: int getImageHeight()>
SOURCE|<com.google.common.collect.MapMakerInternalMap$WeakEntry: com.google.common.collect.MapMakerInternalMap$ReferenceEntry getPreviousEvictable()>
SOURCE|<android.widget.TextView: android.text.TextPaint getPaint()>
SOURCE|<com.android.videoeditor.service.MovieMediaItem: com.android.videoeditor.service.MovieOverlay getOverlay()>
SOURCE|<libcore.net.http.HttpURLConnectionImpl: java.util.Map getHeaderFields()>
SOURCE|<android.util.XmlPullAttributes: java.lang.String getPositionDescription()>
SOURCE|<com.android.server.TextServicesManagerService: android.view.textservice.SpellCheckerSubtype getCurrentSpellCheckerSubtype(java.lang.String,boolean)>
SOURCE|<android.test.mock.MockPackageManager: android.content.pm.ActivityInfo getActivityInfo(android.content.ComponentName,int)>
SOURCE|<com.android.videoeditor.service.VideoEditorProject: java.lang.String getLastMediaItemId()>
SOURCE|<java.net.URI: java.lang.String getFragment()>
SOURCE|<android.app.ActivityThread: android.app.ActivityThread$ApplicationThread getApplicationThread()>
SOURCE|<java.net.Socket: boolean getTcpNoDelay()>
SOURCE|<com.android.gallery3d.filtershow.tools.SaveCopyTask: java.io.File getFinalSaveDirectory(android.content.Context,android.net.Uri)>
SOURCE|<android.webkit.WebSettingsClassic: java.lang.String getFixedFontFamily()>
SOURCE|<com.android.internal.os.ProcessStats: long getCpuTimeForPid(int)>
SOURCE|<com.android.bluetooth.btservice.AdapterService$AdapterServiceBinder: com.android.bluetooth.btservice.AdapterService getService()>
SOURCE|<com.android.contacts.detail.StreamItemAdapter: int getViewTypeCount()>
SOURCE|<java.util.Collections$CopiesList: java.lang.Object get(int)>
SOURCE|<android.net.INetworkStatsSession$Stub: android.os.IBinder asBinder()>
SOURCE|<java.security.Provider$Service: java.security.Provider getProvider()>
SOURCE|<com.android.calendar.EventInfoFragment: android.content.DialogInterface$OnDismissListener access$3400(com.android.calendar.EventInfoFragment)>
SOURCE|<com.android.browser.PieControl$TabAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)>
SOURCE|<com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata: java.lang.String getInternationalPrefix()>
SOURCE|<libcore.icu.ICU: java.util.Locale[] getAvailableDateFormatLocales()>
SOURCE|<android.graphics.drawable.Drawable: android.graphics.Rect copyBounds()>
SOURCE|<android.net.IConnectivityManager$Stub$Proxy: java.lang.String[] getTetheredIfaces()>
SOURCE|<com.google.android.picasasync.UploadTaskEntry: java.lang.Throwable getError()>
SOURCE|<dalvik.system.DexClassLoader: java.lang.Package getPackage(java.lang.String)>
SOURCE|<android.animation.ValueAnimator: float getAnimatedFraction()>
SOURCE|<com.android.providers.contacts.TransactionContext: java.util.Set getStaleSearchIndexRawContactIds()>
SOURCE|<org.ccil.cowan.tagsoup.AttributesImpl: java.lang.String getValue(int)>
SOURCE|<android.filterpacks.videoproc.BackDropperFilter: android.filterfw.core.FrameFormat getOutputFormat(java.lang.String,android.filterfw.core.FrameFormat)>
SOURCE|<com.android.contacts.ContactPhotoManagerImpl$Request: int getRequestedExtent()>
SOURCE|<com.android.systemui.statusbar.policy.NotificationRowLayout: android.view.View getChildContentView(android.view.View)>
SOURCE|<android.app.IWallpaperManagerCallback$Stub: android.os.IBinder asBinder()>
SOURCE|<android.text.style.TextAppearanceSpan: int getTextStyle()>
SOURCE|<com.android.browser.provider.BrowserProvider2$SuggestionsCursor: short getShort(int)>
SOURCE|<android.inputmethodservice.Keyboard: int getKeyWidth()>
SOURCE|<com.android.vcard.VCardParserImpl_V21: java.lang.String getVersionString()>
SOURCE|<android.widget.GridLayout$Bounds: int getOffset(android.widget.GridLayout,android.view.View,android.widget.GridLayout$Alignment,int,boolean)>
SOURCE|<android.nfc.tech.IsoDep: android.nfc.Tag getTag()>
SOURCE|<android.webkit.WebSettingsClassic: boolean getAllowUniversalAccessFromFileURLs()>
SOURCE|<java.text.DateFormat: java.text.NumberFormat getNumberFormat()>
SOURCE|<android.app.ContextImpl: android.content.res.Resources$Theme getTheme()>
SOURCE|<android.media.AudioTrack: int getAudioSessionId()>
SOURCE|<com.android.inputmethod.keyboard.KeyboardSwitcher: com.android.inputmethod.keyboard.KeyboardSwitcher getInstance()>
SOURCE|<com.android.inputmethod.keyboard.Key: int[] getCurrentDrawableState()>
SOURCE|<android.widget.PopupWindow: android.view.View getContentView()>
SOURCE|<com.google.android.apps.lightcycle.util.UiUtil: com.google.android.apps.lightcycle.util.Size getDrawableDimensions(android.content.Context,int)>
SOURCE|<com.android.contacts.model.AccountTypeManagerImpl: com.android.contacts.model.account.AccountType getAccountType(com.android.contacts.model.account.AccountTypeWithDataSet)>
SOURCE|<com.android.providers.contacts.ReorderingCursorWrapper: float getFloat(int)>
SOURCE|<com.android.internal.view.menu.MenuItemImpl: android.view.SubMenu getSubMenu()>
SOURCE|<com.android.internal.telephony.IccCardApplicationStatus: com.android.internal.telephony.IccCardApplicationStatus$PersoSubState PersoSubstateFromRILInt(int)>
SOURCE|<com.android.mms.dom.DocumentImpl: org.w3c.dom.DocumentType getDoctype()>
SOURCE|<java.time.zone.ZoneRules: java.time.ZoneOffset getOffset(java.time.Instant)>
SOURCE|<com.android.browser.NavScreen$TabAdapter: int getCount()>
SOURCE|<org.apache.harmony.xnet.provider.jsse.ClientKeyExchange: int getType()>
SOURCE|<javax.obex.ClientOperation: int getResponseCode()>
SOURCE|<android.app.FragmentManagerImpl: int getBackStackEntryCount()>
SOURCE|<gov.nist.javax.sip.stack.HopImpl: java.lang.String getTransport()>
SOURCE|<com.android.gallery3d.data.MtpImage: long getDateInMs()>
SOURCE|<com.android.contacts.calllog.ExtendedCursor: int getInt(int)>
SOURCE|<android.location.ILocationManager$Stub$Proxy: java.util.List getProviders(android.location.Criteria,boolean)>
SOURCE|<com.android.internal.telephony.IccCardProxy: com.android.internal.telephony.IccCardConstants$State getState()>
SOURCE|<com.android.providers.contacts.aggregation.util.ContactMatcher$MatchScore: long getContactId()>
SOURCE|<com.android.org.bouncycastle.asn1.DERApplicationSpecific: com.android.org.bouncycastle.asn1.ASN1Primitive getObject()>
SOURCE|<com.android.browser.provider.SnapshotProvider: java.lang.String getType(android.net.Uri)>
SOURCE|<android.widget.ListView: android.util.SparseBooleanArray getCheckedItemPositions()>
SOURCE|<android.support.v4.view.MotionEventCompat: float getY(android.view.MotionEvent,int)>
SOURCE|<com.android.internal.telephony.sip.SipPhone: void getPreferredNetworkType(android.os.Message)>
SOURCE|<com.android.internal.app.ActionBarImpl: android.app.ActionBar$Tab getSelectedTab()>
SOURCE|<android.view.AccessibilityIterators$CharacterTextSegmentIterator: android.view.AccessibilityIterators$CharacterTextSegmentIterator getInstance(java.util.Locale)>
SOURCE|<javax.net.ssl.ExtendedSSLSession: java.util.List getRequestedServerNames()>
SOURCE|<com.android.contacts.list.ContactEntryListAdapter: java.lang.String getQuantityText(int,int,int)>
SOURCE|<com.android.gallery3d.picasasource.PicasaImage: long getDateInMs()>
SOURCE|<android.test.mock.MockCursor: int getColumnCount()>
SOURCE|<gov.nist.javax.sip.address.NetObject: java.lang.String debugDump()>
SOURCE|<android.location.Address: java.lang.String getLocality()>
SOURCE|<com.android.bluetooth.btservice.AdapterService: android.os.ParcelUuid[] getRemoteUuids(android.bluetooth.BluetoothDevice)>
SOURCE|<com.android.contacts.vcard.ExportVCardActivity: android.app.Dialog onCreateDialog(int,android.os.Bundle)>
SOURCE|<org.apache.http.impl.cookie.AbstractCookieSpec: org.apache.http.cookie.CookieAttributeHandler getAttribHandler(java.lang.String)>
SOURCE|<com.android.mms.ui.QuickContactDivot: float getCloseOffset()>
SOURCE|<android.view.MotionEvent: float getHistoricalToolMinor(int)>
SOURCE|<gov.nist.core.NameValueList: java.lang.String getParameter(java.lang.String)>
SOURCE|<android.appwidget.AppWidgetManager: java.util.List getInstalledProviders()>
SOURCE|<java.text.StringCharacterIterator: int getIndex()>
SOURCE|<com.android.internal.telephony.PhoneBase: android.os.Handler getHandler()>
SOURCE|<java.security.Provider$Service: java.lang.String getAlgorithm()>
SOURCE|<com.android.contacts.util.HtmlUtils$StreamItemQuoteSpan: int getLeadingMargin(boolean)>
SOURCE|<com.android.internal.telephony.cdma.RuimPhoneBookInterfaceManager: java.util.List getAdnRecordsInEf(int)>
SOURCE|<com.android.contacts.list.ContactEntryListAdapter: int getDirectoryResultLimit()>
SOURCE|<libcore.icu.NativeBreakIterator: libcore.icu.NativeBreakIterator getWordInstance(java.util.Locale)>
SOURCE|<gov.nist.javax.sip.header.AuthenticationHeader: java.lang.String getIK()>
SOURCE|<android.view.View: int getScrollX()>
SOURCE|<javax.xml.transform.stream.StreamResult: java.lang.String getSystemId()>
SOURCE|<org.apache.http.impl.conn.DefaultClientConnection: java.lang.Object getAttribute(java.lang.String)>
SOURCE|<org.apache.harmony.xnet.provider.jsse.ConnectionState: int getPaddingSize(int)>
SOURCE|<com.googlecode.mp4parser.FullContainerBox: long getContentSize()>
SOURCE|<com.android.internal.location.GpsNetInitiatedHandler: java.lang.String getDialogTitle(com.android.internal.location.GpsNetInitiatedHandler$GpsNiNotification,android.content.Context)>
SOURCE|<com.android.providers.contacts.VoicemailContentProvider$UriData: android.net.Uri getUri()>
SOURCE|<java.util.logging.LogManager: java.util.logging.Logger getLogger(java.lang.String)>
SOURCE|<com.android.internal.os.BatteryStatsImpl: long getPhoneOnTime(long,int)>
SOURCE|<android.text.Layout: float measurePara(android.text.TextPaint,java.lang.CharSequence,int,int)>
SOURCE|<com.android.launcher2.AppsCustomizeTabHost: int getDescendantFocusability()>
SOURCE|<com.android.internal.backup.IBackupTransport$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
SOURCE|<org.apache.http.impl.cookie.BrowserCompatSpec: java.util.List parse(org.apache.http.Header,org.apache.http.cookie.CookieOrigin)>
SOURCE|<com.android.uiautomator.testrunner.UiAutomatorTestCase: com.android.uiautomator.testrunner.IAutomationSupport getAutomationSupport()>
SOURCE|<android.renderscript.ProgramVertexFixedFunction$Builder: android.renderscript.Type getConstantInputType(android.renderscript.RenderScript)>
SOURCE|<android.widget.TextView: android.text.method.KeyListener getKeyListener()>
SOURCE|<android.widget.ToggleButton: java.lang.CharSequence getTextOff()>
SOURCE|<org.apache.http.impl.auth.NTLMScheme: java.lang.String getRealm()>
SOURCE|<android.widget.AccessibilityIterators$LineTextSegmentIterator: int getLineEdgeIndex(int,int)>
SOURCE|<com.android.internal.telephony.DataConnectionAc: com.android.internal.telephony.ApnSetting getApnSettingSync()>
SOURCE|<android.net.wifi.WifiManager: android.net.DhcpInfo getDhcpInfo()>
SOURCE|<com.android.gallery3d.filtershow.imageshow.ImageSlave: com.android.gallery3d.filtershow.PanelController getPanelController()>
SOURCE|<com.android.browser.Controller: android.webkit.WebView getCurrentTopWebView()>
SOURCE|<junit.runner.BaseTestRunner: java.lang.String getPreference(java.lang.String)>
SOURCE|<com.android.internal.telephony.GsmAlphabet: byte[] stringToGsm7BitPacked(java.lang.String,int,boolean,int,int)>
SOURCE|<com.android.camera.ui.PieItem: int getInnerRadius()>
SOURCE|<android.media.MediaRouter$RouteInfo: int getVolumeMax()>
SOURCE|<com.android.videoeditor.TransitionsAdapter: int getCount()>
SOURCE|<java.util.concurrent.atomic.AtomicInteger: int getAndDecrement()>
SOURCE|<java.net.URI: java.lang.String getScheme()>
SOURCE|<libcore.net.http.RequestHeaders: int getMaxStaleSeconds()>
SOURCE|<android.hardware.input.InputManager: android.hardware.input.KeyboardLayout[] getKeyboardLayouts()>
SOURCE|<android.net.NetworkUtils: java.net.InetAddress getNetworkPart(java.net.InetAddress,int)>
SOURCE|<com.android.contacts.ContactStatusUtil: java.lang.String getStatusString(android.content.Context,int)>
SOURCE|<com.android.inputmethod.latin.ExpandableDictionary$NextStaticWord: com.android.inputmethod.latin.ExpandableDictionary$Node getWordNode()>
SOURCE|<java.security.spec.ECParameterSpec: java.math.BigInteger getOrder()>
SOURCE|<com.android.gallery3d.filtershow.HistoryAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)>
SOURCE|<com.android.videoeditor.widgets.ProgressBar: com.android.videoeditor.widgets.ProgressBar getProgressBar(android.content.Context)>
SOURCE|<org.apache.http.impl.conn.tsccm.WaitingThread: org.apache.http.impl.conn.tsccm.RouteSpecificPool getPool()>
SOURCE|<android.renderscript.Type: int getX()>
SOURCE|<com.android.uiautomator.core.Tracer: com.android.uiautomator.core.Tracer getInstance()>
SOURCE|<com.android.server.pm.PackageManagerService$AsecInstallArgs: java.lang.String getNativeLibraryPath()>
SOURCE|<android.content.SyncStorageEngine: android.content.SyncStorageEngine$AuthorityInfo getOrCreateAuthority(android.accounts.Account,int,java.lang.String)>
SOURCE|<android.net.wifi.p2p.WifiP2pService: android.os.Messenger getMessenger()>
SOURCE|<org.apache.harmony.xml.dom.NodeImpl: java.lang.String getLocalName()>
SOURCE|<com.android.browser.Tab: java.lang.String getAppId()>
SOURCE|<android.widget.AbsListView: int getListPaddingRight()>
SOURCE|<android.content.ClipboardManager: java.lang.CharSequence getText()>
SOURCE|<android.content.Intent: android.content.ClipData getClipData()>
SOURCE|<com.android.internal.telephony.Call: com.android.internal.telephony.Connection getEarliestConnection()>
SOURCE|<com.android.gallery3d.data.MtpClient: java.util.List getObjectList(java.lang.String,int,int)>
SOURCE|<java.io.ObjectStreamClass: java.lang.reflect.Field getReflectionField(java.io.ObjectStreamField)>
SOURCE|<android.telephony.CellIdentityLte: int getMnc()>
SOURCE|<com.android.internal.os.BatteryStatsImpl$Uid: long getTcpBytesSent(int)>
SOURCE|<android.location.Location: float getSpeed()>
SOURCE|<android.net.sip.SimpleSessionDescription: java.lang.String[] getAttributeNames()>
SOURCE|<android.test.mock.MockContext: java.io.File getCacheDir()>
SOURCE|<com.android.internal.view.BaseSurfaceHolder: int getRequestedFormat()>
SOURCE|<java.lang.ClassLoader: java.lang.Class defineClass(java.lang.String,byte[],int,int,java.security.ProtectionDomain)>
SOURCE|<android.widget.GridLayout: int getMeasurementIncludingMargin(android.view.View,boolean)>
SOURCE|<android.filterfw.format.ImageFormat: android.filterfw.core.MutableFrameFormat create(int,int,int,int)>
SOURCE|<gov.nist.javax.sip.header.ParametersHeader: java.util.Iterator getParameterNames()>
SOURCE|<org.json.JSONObject: java.lang.String getString(java.lang.String)>
SOURCE|<android.webkit.WebViewCore: android.webkit.DeviceMotionService getDeviceMotionService()>
SOURCE|<com.android.gallery3d.picasasource.PicasaAlbumSet: long getTotalTargetCacheSize(com.android.gallery3d.picasasource.PicasaSource)>
SOURCE|<com.android.systemui.statusbar.NotificationData$Entry: android.view.View getLargeView()>
SOURCE|<android.test.mock.MockContext: android.content.res.Resources getResources()>
SOURCE|<android.os.Bundle: boolean getBoolean(java.lang.String,boolean)>
SOURCE|<org.apache.harmony.security.x509.Certificate: org.apache.harmony.security.x509.TBSCertificate getTbsCertificate()>
SOURCE|<java.nio.charset.CharsetEncoder: java.nio.charset.CharsetEncoder reset()>
SOURCE|<android.widget.ViewAnimator: android.view.View getCurrentView()>
SOURCE|<android.view.ViewConfiguration: int getScaledEdgeSlop()>
SOURCE|<java.security.KeyStore: java.security.Provider getProvider()>
SOURCE|<com.android.inputmethod.latin.BinaryDictionary: java.util.ArrayList getSuggestionsWithSessionId(com.android.inputmethod.latin.WordComposer,java.lang.CharSequence,com.android.inputmethod.keyboard.ProximityInfo,int)>
SOURCE|<com.android.launcher2.LauncherModel: int getCellCountY()>
SOURCE|<com.android.providers.contacts.SearchIndexManager$IndexBuilder: java.lang.String getContent()>
SOURCE|<com.android.browser.TabScrollView: int getChildIndex(android.view.View)>
SOURCE|<com.google.common.io.Resources$1: java.io.InputStream getInput()>
SOURCE|<com.android.server.wm.WindowManagerService: int getLidState()>
SOURCE|<com.android.internal.policy.impl.keyguard.PagedView: float getBoundedScrollProgress(int,android.view.View,int)>
SOURCE|<com.android.internal.telephony.ims.IsimUiccRecords$EfIsimImpuLoaded: java.lang.String getEfName()>
SOURCE|<org.apache.http.protocol.BasicHttpProcessor: org.apache.http.HttpResponseInterceptor getResponseInterceptor(int)>
SOURCE|<org.apache.http.impl.conn.tsccm.BasicPoolEntryRef: org.apache.http.conn.routing.HttpRoute getRoute()>
SOURCE|<com.android.bluetooth.hfp.HeadsetService: com.android.bluetooth.hfp.HeadsetService getHeadsetService()>
SOURCE|<com.android.launcher2.DragView: android.graphics.Point getDragVisualizeOffset()>
SOURCE|<com.android.internal.telephony.sip.SipConnectionBase: long getCreateTime()>
SOURCE|<com.google.common.collect.Multimaps$TransformedEntriesMultimap$TransformedEntries$1$1: java.lang.Object getValue()>
SOURCE|<android.telephony.SmsMessage: int getStatus()>
SOURCE|<com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata: int getCountryCode()>
SOURCE|<com.android.contacts.model.account.BaseAccountType$CommonInflater: java.lang.CharSequence getTypeLabel(android.content.res.Resources,java.lang.Integer,java.lang.CharSequence)>
SOURCE|<com.android.email.RefreshManager: boolean isRefreshingAnyMessageListForTest()>
SOURCE|<com.android.internal.os.BatteryStatsImpl$Uid$Proc: long getTimeAtCpuSpeedStep(int,int)>
SOURCE|<android.widget.RemoteViews$BitmapCache: android.graphics.Bitmap getBitmapForId(int)>
SOURCE|<com.android.inputmethod.latin.BinaryDictionary: java.util.ArrayList getSuggestions(com.android.inputmethod.latin.WordComposer,java.lang.CharSequence,com.android.inputmethod.keyboard.ProximityInfo)>
SOURCE|<org.apache.harmony.security.x509.InfoAccessSyntax: byte[] getEncoded()>
SOURCE|<com.android.mms.dom.DocumentImpl: org.w3c.dom.NodeList getElementsByTagName(java.lang.String)>
SOURCE|<android.util.AtomicFile: java.io.File getBaseFile()>
SOURCE|<com.android.internal.telephony.gsm.GsmConnection: int getGSMIndex()>
SOURCE|<gov.nist.javax.sip.stack.TLSMessageChannel: java.net.InetAddress getPeerInetAddress()>
SOURCE|<java.util.Date: int getMonth()>
SOURCE|<java.time.zone.ZoneRules: java.util.List getValidOffsets(java.time.LocalDateTime)>
SOURCE|<android.text.DynamicLayout: boolean getLineContainsTab(int)>
SOURCE|<com.android.inputmethod.latin.suggestions.MoreSuggestionsView: com.android.inputmethod.keyboard.KeyDetector getKeyDetector()>
SOURCE|<org.apache.harmony.security.asn1.ASN1Any: int getEncodedLength(org.apache.harmony.security.asn1.BerOutputStream)>
SOURCE|<com.android.browser.view.PieItem: java.util.List getItems()>
SOURCE|<android.view.accessibility.AccessibilityNodeInfo: int getWindowId()>
SOURCE|<android.net.sip.SimpleSessionDescription$Media: int[] getRtpPayloadTypes()>
SOURCE|<com.android.browser.preferences.WebsiteSettingsFragment$Site: int getFeatureCount()>
SOURCE|<android.view.inputmethod.CompletionInfo: java.lang.CharSequence getLabel()>
SOURCE|<android.os.CommonTimeConfig: boolean getAutoDisable()>
SOURCE|<org.apache.http.impl.io.AbstractMessageParser: org.apache.http.Header[] parseHeaders(org.apache.http.io.SessionInputBuffer,int,int,org.apache.http.message.LineParser)>
SOURCE|<android.os.Bundle: int[] getIntArray(java.lang.String)>
SOURCE|<org.apache.harmony.xnet.provider.jsse.SSLSocketImpl: java.lang.String[] getEnabledCipherSuites()>
SOURCE|<android.net.IConnectivityManager$Stub$Proxy: java.lang.String[] getTetherableIfaces()>
SOURCE|<android.bluetooth.IBluetoothHeadsetPhone$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
SOURCE|<android.text.method.HideReturnsTransformationMethod: char[] getOriginal()>
SOURCE|<android.database.AbstractCursor: android.os.Bundle getExtras()>
SOURCE|<android.accounts.IAccountAuthenticatorResponse$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
SOURCE|<com.android.commands.monkey.MonkeySourceNetworkViews$GetViewsWithTextCommand: com.android.commands.monkey.MonkeySourceNetwork$MonkeyCommandReturn translateCommand(java.util.List,com.android.commands.monkey.MonkeySourceNetwork$CommandQueue)>
SOURCE|<gov.nist.core.StringTokenizer: char getNextChar()>
SOURCE|<gov.nist.javax.sip.message.SIPMessage: java.lang.String getFromTag()>
SOURCE|<org.xmlpull.v1.sax2.Driver: int getLength()>
SOURCE|<android.graphics.Bitmap: android.graphics.Bitmap createBitmap(android.graphics.Bitmap,int,int,int,int)>
SOURCE|<android.widget.Scroller: int getStartX()>
SOURCE|<com.android.contacts.model.account.ExchangeAccountType: com.android.contacts.model.dataitem.DataKind addDataKindPhoneticName(android.content.Context)>
SOURCE|<com.android.contacts.ContactPhotoManagerImpl$Request: android.net.Uri getUri()>
SOURCE|<android.widget.ActivityChooserView$ActivityChooserViewAdapter: java.lang.Object getItem(int)>
SOURCE|<gov.nist.javax.sip.message.SIPRequest: java.lang.Object getTransaction()>
SOURCE|<com.android.internal.telephony.cat.ComprehensionTlv: int getValueIndex()>
SOURCE|<org.apache.http.impl.client.BasicCookieStore: java.util.List getCookies()>
SOURCE|<android.widget.TimePicker$SavedState: int getMinute()>
SOURCE|<android.speech.tts.TextToSpeechService$SpeechItem: int getCallerPid()>
SOURCE|<com.android.internal.telephony.PhoneSubInfo: java.lang.String getDeviceId()>
SOURCE|<android.location.IGpsStatusProvider$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
SOURCE|<android.net.Uri$OpaqueUri: java.lang.String getEncodedPath()>
SOURCE|<com.android.internal.widget.LockPatternUtils: int getRequestedPasswordQuality()>
SOURCE|<android.app.WallpaperManager: android.graphics.drawable.Drawable getFastDrawable()>
SOURCE|<android.media.audiofx.AudioEffect: int getParameter(int[],byte[])>
SOURCE|<com.android.bluetooth.a2dp.A2dpService: int getConnectionState(android.bluetooth.BluetoothDevice)>
SOURCE|<javax.security.auth.Subject: java.util.Set getPrivateCredentials()>
SOURCE|<android.text.Layout: void getSelectionPath(int,int,android.graphics.Path)>
SOURCE|<android.content.Intent: java.lang.String resolveTypeIfNeeded(android.content.ContentResolver)>
SOURCE|<android.test.mock.MockPackageManager: android.content.pm.ApplicationInfo getApplicationInfo(java.lang.String,int)>
SOURCE|<com.android.uiautomator.core.AccessibilityNodeInfoHelper: android.graphics.Rect getVisibleBoundsInScreen(android.view.accessibility.AccessibilityNodeInfo)>
SOURCE|<android.app.SharedPreferencesImpl: java.util.Set getStringSet(java.lang.String,java.util.Set)>
SOURCE|<android.app.ActivityManagerProxy: int[] getRunningUserIds()>
SOURCE|<android.provider.CalendarContract$CalendarAlerts: long findNextAlarmTime(android.content.ContentResolver,long)>
SOURCE|<android.location.LocationManager: java.util.List getProviders(android.location.Criteria,boolean)>
SOURCE|<android.media.MediaPlayer: android.media.MediaPlayer$TrackInfo[] getTrackInfo()>
SOURCE|<android.test.mock.MockResources: java.lang.CharSequence[] getTextArray(int)>
SOURCE|<com.android.mms.ui.RecipientsEditor: int getRecipientCount()>
SOURCE|<android.graphics.drawable.ScaleDrawable: int getChangingConfigurations()>
SOURCE|<com.android.providers.contacts.SearchIndexManager$IndexBuilder: java.lang.String getString(java.lang.String)>
SOURCE|<com.android.nfc.dhimpl.NativeNfcManager: com.android.nfc.DeviceHost$LlcpSocket createLlcpSocket(int,int,int,int)>
SOURCE|<java.time.OffsetDateTime: java.time.DayOfWeek getDayOfWeek()>
SOURCE|<com.android.calendar.CalendarController: long getEventId()>
SOURCE|<com.android.mms.data.ContactList: com.android.mms.data.ContactList getByNumbers(java.lang.Iterable,boolean)>
SOURCE|<com.android.nfc.NfcService$NfcAdapterExtrasService: int getCardEmulationRoute(java.lang.String)>
SOURCE|<android.graphics.drawable.NinePatchDrawable: android.graphics.Region getTransparentRegion()>
SOURCE|<com.android.gallery3d.ui.GLView: int getHeight()>
SOURCE|<gov.nist.javax.sip.address.SipUri: java.lang.String getScheme()>
SOURCE|<android.test.mock.MockPackageManager: int getPreferredActivities(java.util.List,java.util.List,java.lang.String)>
SOURCE|<android.app.admin.DevicePolicyManager: int getPasswordMinimumNonLetter(android.content.ComponentName,int)>
SOURCE|<gov.nist.javax.sip.address.SipUri: java.lang.String getGrParam()>
SOURCE|<com.android.org.bouncycastle.asn1.DEREnumerated: com.android.org.bouncycastle.asn1.ASN1Enumerated getInstance(java.lang.Object)>
SOURCE|<android.drm.DrmManagerClient: android.content.ContentValues getMetadata(android.net.Uri)>
SOURCE|<android.content.pm.ComponentInfo: java.lang.CharSequence loadLabel(android.content.pm.PackageManager)>
SOURCE|<android.os.Bundle: short[] getShortArray(java.lang.String)>
SOURCE|<android.graphics.drawable.DrawableContainer: int getIntrinsicHeight()>
SOURCE|<android.net.wifi.WifiManager: android.os.Messenger getWifiServiceMessenger()>
SOURCE|<com.android.calendar.Utils: java.lang.String getSearchAuthority(android.content.Context)>
SOURCE|<org.apache.http.entity.AbstractHttpEntity: org.apache.http.Header getContentType()>
SOURCE|<java.io.ObjectInputStream: java.lang.String readLine()>
SOURCE|<com.android.browser.Tab: android.view.View getViewContainer()>
SOURCE|<com.google.android.apps.lightcycle.panorama.DeviceManager: float getOpenGlMinFieldOfViewDegrees()>
SOURCE|<android.widget.AbsListView: float getTopFadingEdgeStrength()>
SOURCE|<com.android.inputmethod.latin.BinaryDictionaryGetter: java.lang.String getCacheFileName(java.lang.String,java.lang.String,android.content.Context)>
SOURCE|<android.app.admin.DevicePolicyManager: android.content.ComponentName getGlobalProxyAdmin()>
SOURCE|<com.android.videoeditor.service.VideoEditorProject: com.android.videoeditor.service.MovieMediaItem getNextMediaItem(long)>
SOURCE|<java.net.URLConnection: long getDate()>
SOURCE|<android.webkit.AccessibilityInjectorFallback$AccessibilityWebContentKeyBinding: int getFirstArgument(int)>
SOURCE|<org.apache.http.impl.cookie.BrowserCompatSpec: int getVersion()>
SOURCE|<android.view.IInputFilterHost$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
SOURCE|<com.android.browser.BrowserActivity: com.android.browser.Controller getController()>
SOURCE|<java.util.concurrent.locks.AbstractQueuedSynchronizer: java.util.Collection getWaitingThreads(java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject)>
SOURCE|<android.os.Bundle: android.os.Parcelable getParcelable(java.lang.String)>
SOURCE|<android.content.pm.IPackageManager$Stub$Proxy: android.content.pm.PermissionInfo getPermissionInfo(java.lang.String,int)>
SOURCE|<java.security.Provider: java.lang.String getProperty(java.lang.String)>
SOURCE|<android.webkit.WebHistoryItemClassic: java.lang.String getTitle()>
SOURCE|<android.widget.AbsSpinner: android.os.Parcelable onSaveInstanceState()>
SOURCE|<android.animation.ValueAnimator: int getRepeatMode()>
SOURCE|<gov.nist.javax.sip.header.ContentType: java.lang.String getContentType()>
SOURCE|<com.android.internal.telephony.CallManager: com.android.internal.telephony.Call getActiveFgCall()>
SOURCE|<java.nio.IntArrayBuffer: java.nio.IntBuffer get(int[],int,int)>
SOURCE|<com.android.exchange.utility.CalendarUtilities: com.android.emailcommon.provider.EmailContent$Message createMessageForEntity(android.content.Context,android.content.Entity,int,java.lang.String,com.android.emailcommon.provider.Account)>
SOURCE|<com.android.launcher2.IconCache: android.graphics.drawable.Drawable getFullResIcon(java.lang.String,int)>
SOURCE|<com.android.server.am.ActivityManagerService: int getCurrentUserIdLocked()>
SOURCE|<java.nio.HeapByteBuffer: char getChar(int)>
SOURCE|<gov.nist.core.GenericObject: java.lang.String debugDump()>
SOURCE|<java.util.concurrent.locks.StampedLock: long tryDecReaderOverflow(long)>
SOURCE|<com.android.bluetooth.btservice.AdapterProperties: int getProfileConnectionState(int)>
SOURCE|<com.coremedia.iso.boxes.TrackHeaderBox: int getLayer()>
SOURCE|<gov.nist.javax.sip.message.SIPMessage: gov.nist.javax.sip.header.ContentType getContentTypeHeader()>
SOURCE|<android.service.wallpaper.WallpaperService$Engine: int getDesiredMinimumWidth()>
SOURCE|<com.android.server.InputMethodManagerService: com.android.internal.view.InputBindResult startInputInnerLocked()>
SOURCE|<android.graphics.drawable.ShapeDrawable: int getIntrinsicWidth()>
SOURCE|<android.net.UrlQuerySanitizer: java.lang.String getValue(java.lang.String)>
SOURCE|<com.android.mms.util.DownloadManager: com.android.mms.util.DownloadManager getInstance()>
SOURCE|<com.android.videoeditor.service.MovieMediaItem: int getVolume()>
SOURCE|<com.android.gallery3d.app.AbstractGalleryActivity: com.android.gallery3d.app.GalleryActionBar getGalleryActionBar()>
SOURCE|<com.android.gallery3d.filtershow.imageshow.ImageCrop: android.graphics.RectF getCropBoundsDisplayed()>
SOURCE|<java.net.SocketImpl: int getLocalPort()>
SOURCE|<com.google.common.collect.ForwardingMultiset$StandardElementSet: com.google.common.collect.Multiset multiset()>
SOURCE|<com.android.ex.chips.BaseRecipientAdapter: int getDisplayNameId()>
SOURCE|<com.android.deskclock.widget.multiwaveview.Ease$Cubic$2: float getInterpolation(float)>
SOURCE|<com.android.systemui.recent.RecentsHorizontalScrollView: int getHorizontalFadingEdgeLength()>
SOURCE|<java.net.ProxySelector: java.net.ProxySelector getDefault()>
SOURCE|<java.text.DateFormatSymbols: java.lang.String[] getEras()>
SOURCE|<com.android.internal.telephony.gsm.GSMPhone: com.android.internal.telephony.Phone$DataActivityState getDataActivityState()>
SOURCE|<com.android.email.activity.UIControllerTwoPane$ActionBarControllerCallback: long getMailboxId()>
SOURCE|<java.text.NumberFormat: int getMinimumFractionDigits()>
SOURCE|<android.service.textservice.SpellCheckerService$Session: android.os.Bundle getBundle()>
SOURCE|<android.app.admin.IDevicePolicyManager$Stub$Proxy: int getCurrentFailedPasswordAttempts(int)>
SOURCE|<dalvik.system.DexFile: dalvik.system.DexFile loadDex(java.lang.String,java.lang.String,int)>
SOURCE|<gov.nist.javax.sip.header.ims.PPreferredService: java.lang.String encodeBody()>
SOURCE|<com.android.internal.telephony.ServiceStateTracker: android.telephony.SignalStrength getSignalStrength()>
SOURCE|<android.view.ViewGroup$MarginLayoutParams: int getMarginStart()>
SOURCE|<android.view.textservice.SuggestionsInfo: java.lang.String getSuggestionAt(int)>
SOURCE|<com.android.mms.dom.AttrImpl: org.w3c.dom.Node getParentNode()>
SOURCE|<java.text.BreakIterator: int getInt(byte[],int)>
SOURCE|<android.content.pm.ContainerEncryptionParams: java.security.spec.AlgorithmParameterSpec getEncryptionSpec()>
SOURCE|<java.time.OffsetDateTime: int getNano()>
SOURCE|<javax.xml.datatype.Duration: long getTimeInMillis(java.util.Calendar)>
SOURCE|<com.android.inputmethod.latin.SubtypeLocale: java.lang.String getKeyboardLayoutSetDisplayName(java.lang.String)>
SOURCE|<com.android.server.pm.PackageSettingBase: java.util.HashSet getDisabledComponents(int)>
SOURCE|<android.text.style.ImageSpan: java.lang.String getSource()>
SOURCE|<java.lang.ClassLoader: java.lang.ClassLoader getParent()>
SOURCE|<android.service.wallpaper.IWallpaperService$Stub: android.os.IBinder asBinder()>
SOURCE|<com.android.internal.telephony.sip.SipPhoneBase: int getPhoneType()>
SOURCE|<org.apache.harmony.luni.lang.reflect.GenericSignatureParser: org.apache.harmony.luni.lang.reflect.ListOfTypes parseOptTypeArguments()>
SOURCE|<org.apache.http.impl.client.DefaultConnectionKeepAliveStrategy: long getKeepAliveDuration(org.apache.http.HttpResponse,org.apache.http.protocol.HttpContext)>
SOURCE|<com.android.internal.app.ActionBarImpl$TabImpl: android.graphics.drawable.Drawable getIcon()>
SOURCE|<com.android.contacts.list.PhoneFavoriteMergedAdapter: int getSectionForPosition(int)>
SOURCE|<com.android.browser.BrowserSettings: android.webkit.WebSettingsClassic$AutoFillProfile getAutoFillProfile()>
SOURCE|<com.android.internal.policy.impl.keyguard.PagedView: int getViewportWidth()>
SOURCE|<com.android.server.ConnectivityService: android.net.NetworkInfo getNetworkInfo(int)>
SOURCE|<com.android.contacts.group.SuggestedMemberListAdapter$SuggestedMember: long getRawContactId()>
SOURCE|<com.android.browser.Tab: com.android.browser.ErrorConsoleView getErrorConsole(boolean)>
SOURCE|<org.apache.http.message.BasicRequestLine: org.apache.http.ProtocolVersion getProtocolVersion()>
SOURCE|<com.android.mms.dom.DocumentImpl: org.w3c.dom.DocumentFragment createDocumentFragment()>
SOURCE|<com.android.camera.CameraPreference: android.content.SharedPreferences getSharedPreferences()>
SOURCE|<android.content.res.Resources: android.content.res.TypedArray obtainTypedArray(int)>
SOURCE|<android.view.accessibility.IAccessibilityManager$Stub: android.os.IBinder asBinder()>
SOURCE|<android.graphics.BitmapFactory: android.graphics.Bitmap decodeFileDescriptor(java.io.FileDescriptor)>
SOURCE|<com.android.server.location.LocationBasedCountryDetector: long getQueryLocationTimeout()>
SOURCE|<com.android.contacts.util.DataStatus: int getPresence()>
SOURCE|<org.apache.harmony.xnet.provider.jsse.OpenSSLDSAPrivateKey: byte[] getEncoded()>
SOURCE|<org.apache.harmony.security.x509.SubjectPublicKeyInfo: org.apache.harmony.security.x509.AlgorithmIdentifier getAlgorithmIdentifier()>
SOURCE|<android.content.ContentResolver: java.io.OutputStream openOutputStream(android.net.Uri,java.lang.String)>
SOURCE|<com.android.contacts.detail.ContactDetailDisplayUtils: android.view.View addStreamItemText(android.content.Context,com.android.contacts.util.StreamItemEntry,android.view.View)>
SOURCE|<com.android.calendar.selectcalendars.SelectCalendarsSimpleAdapter$TabletCalendarItemBackgrounds: int[] getBackgrounds()>
SOURCE|<android.net.INetworkStatsSession$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
SOURCE|<java.lang.ThreadGroup: int getMaxPriority()>
SOURCE|<android.speech.tts.BlockingAudioTrack: long getAudioLengthMs(int)>
SOURCE|<android.graphics.Paint: android.graphics.Paint$Cap getStrokeCap()>
SOURCE|<android.hardware.usb.UsbDeviceConnection: java.lang.String getSerial()>
SOURCE|<android.os.CommonTimeConfig: long getMasterElectionGroupId()>
SOURCE|<android.media.AudioManager: int setBluetoothA2dpDeviceConnectionState(android.bluetooth.BluetoothDevice,int)>
SOURCE|<com.android.contacts.util.StreamItemEntry: java.util.List getPhotos()>
SOURCE|<com.android.email.activity.UiUtilities: android.view.View getView(android.view.View,int)>
SOURCE|<com.android.gallery3d.exif.IfdData: com.android.gallery3d.exif.ExifTag getTag(short)>
SOURCE|<com.android.launcher2.BubbleTextView: android.graphics.Bitmap getPressedOrFocusedBackground()>
SOURCE|<com.googlecode.mp4parser.AbstractBox: com.coremedia.iso.boxes.ContainerBox getParent()>
SOURCE|<android.net.TrafficStats: long getMobileRxPackets()>
SOURCE|<android.support.v4.os.ParcelableCompatCreatorHoneycombMR2: java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader)>
SOURCE|<com.android.server.ConnectivityService: android.net.NetworkInfo getActiveNetworkInfoForUid(int)>
SOURCE|<com.google.common.collect.ImmutableSortedSet: java.util.Iterator iterator()>
SOURCE|<com.android.gallery3d.filtershow.cache.ImageLoader: android.graphics.Rect getOriginalBounds()>
SOURCE|<com.android.internal.telephony.SmsMessageBase: long getTimestampMillis()>
SOURCE|<com.android.mms.dom.smil.ElementParallelTimeContainerImpl: float getImplicitDuration()>
SOURCE|<org.apache.commons.codec.binary.Base64: byte[] discardWhitespace(byte[])>
SOURCE|<android.net.nsd.INsdManager$Stub: android.os.IBinder asBinder()>
SOURCE|<android.view.accessibility.AccessibilityEvent: int getRecordCount()>
SOURCE|<javax.crypto.spec.DESKeySpec: byte[] getKey()>
SOURCE|<android.widget.RemoteViews$ReflectionActionWithoutParams: java.lang.String getActionName()>
SOURCE|<android.view.HardwareRenderer: android.view.HardwareRenderer createGlRenderer(int,boolean)>
SOURCE|<com.android.gallery3d.ui.DialogDetailsView$DetailsAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)>
SOURCE|<android.content.ContextWrapper: int getWallpaperDesiredMinimumWidth()>
SOURCE|<android.view.animation.Transformation: android.graphics.Matrix getMatrix()>
SOURCE|<android.telephony.gsm.GsmCellLocation: int getCid()>
SOURCE|<android.content.pm.IPackageManager$Stub$Proxy: android.content.pm.ParceledListSlice getInstalledPackages(int,java.lang.String,int)>
SOURCE|<com.android.inputmethod.latin.DicTraverseSession: long getSession()>
SOURCE|<com.android.launcher2.DragLayer$LayoutParams: int getY()>
SOURCE|<java.sql.Time: int getDay()>
SOURCE|<libcore.net.http.HttpHandler: int getDefaultPort()>
SOURCE|<com.android.gallery3d.exif.ExifTag: int getElementSize(short)>
SOURCE|<java.util.Calendar: int getActualMaximum(int)>
SOURCE|<gov.nist.javax.sip.message.SIPMessage: gov.nist.javax.sip.header.Authorization getAuthorization()>
SOURCE|<android.media.audiofx.Visualizer: boolean getEnabled()>
SOURCE|<com.android.contacts.widget.IndexerListAdapter: android.widget.SectionIndexer getIndexer()>
SOURCE|<android.preference.Preference: android.view.View getView(android.view.View,android.view.ViewGroup)>
SOURCE|<android.widget.AbsSpinner: int getChildWidth(android.view.View)>
SOURCE|<com.android.launcher2.WallpaperChooserDialogFragment$ImageAdapter: java.lang.Object getItem(int)>
SOURCE|<android.net.Uri$StringUri: java.lang.String getSchemeSpecificPart()>
SOURCE|<com.android.phone.PhoneGlobals: android.os.UpdateLock getUpdateLock()>
SOURCE|<android.app.WallpaperManager$FastBitmapDrawable: int getOpacity()>
SOURCE|<java.time.temporal.WeekFields: java.time.DayOfWeek getFirstDayOfWeek()>
SOURCE|<com.android.gallery3d.app.GalleryActionBar$ClusterAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)>
SOURCE|<java.util.DoubleSummaryStatistics: double getMax()>
SOURCE|<com.android.internal.telephony.cdma.CdmaServiceStateTracker: int getOtasp()>
SOURCE|<gov.nist.javax.sip.header.Indentation: int getCount()>
SOURCE|<gov.nist.javax.sip.header.Contact: java.lang.String getTempGruuParam()>
SOURCE|<com.android.browser.BrowserBookmarksAdapter: long getItemId(android.database.Cursor)>
SOURCE|<java.time.Year: long getLong(java.time.temporal.TemporalField)>
SOURCE|<android.net.UrlQuerySanitizer: android.net.UrlQuerySanitizer$ValueSanitizer getAmpAndSpaceLegal()>
SOURCE|<java.time.LocalDate: long getLong(java.time.temporal.TemporalField)>
SOURCE|<org.apache.harmony.xml.dom.DocumentImpl: org.w3c.dom.DocumentType getDoctype()>
SOURCE|<org.apache.http.client.methods.HttpDelete: java.lang.String getMethod()>
SOURCE|<org.apache.harmony.xnet.provider.jsse.SSLParametersImpl: javax.net.ssl.X509TrustManager getDefaultTrustManager()>
SOURCE|<android.media.videoeditor.VideoEditorImpl: java.lang.String getPath()>
SOURCE|<android.text.style.QuoteSpan: int getLeadingMargin(boolean)>
SOURCE|<java.net.NetworkInterface: java.net.NetworkInterface getByInetAddress(java.net.InetAddress)>
SOURCE|<java.util.concurrent.LinkedBlockingDeque: java.lang.Object getFirst()>
SOURCE|<android.database.sqlite.SQLiteQueryBuilder: android.database.Cursor query(android.database.sqlite.SQLiteDatabase,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,java.lang.String,java.lang.String)>
SOURCE|<java.lang.ProcessManager$ProcessImpl: java.io.OutputStream getOutputStream()>
SOURCE|<java.lang.reflect.Executable: java.lang.reflect.Type[] getAllGenericParameterTypes()>
SOURCE|<com.android.email.activity.UIControllerOnePane$ActionBarControllerCallback: long getMailboxId()>
SOURCE|<libcore.icu.CollationElementIteratorICU: libcore.icu.CollationElementIteratorICU getInstance(int,java.lang.String)>
SOURCE|<java.util.EventObject: java.lang.Object getSource()>
SOURCE|<android.widget.ImageView: boolean getAdjustViewBounds()>
SOURCE|<com.android.calendar.widget.CalendarAppWidgetProvider: android.app.PendingIntent getUpdateIntent(android.content.Context)>
SOURCE|<android.text.method.DateKeyListener: android.text.method.DateKeyListener getInstance()>
SOURCE|<android.bluetooth.BluetoothDevice: java.lang.String getName()>
SOURCE|<com.android.server.display.DisplayDevice: java.lang.String getNameLocked()>
SOURCE|<org.apache.http.impl.conn.AbstractClientConnAdapter: java.net.InetAddress getRemoteAddress()>
SOURCE|<com.android.nfc.NfcService: com.android.nfc.DeviceHost$LlcpSocket createLlcpSocket(int,int,int,int)>
SOURCE|<android.widget.TextView: int getTotalPaddingBottom()>
SOURCE|<java.lang.reflect.Parameter: java.lang.'annotation'.Annotation[] getAnnotations()>
SOURCE|<java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String,java.lang.String)>
SOURCE|<android.webkit.WebSettingsClassic: boolean getUseWideViewPort()>
SOURCE|<com.android.mms.MmsConfig: int getMaxMessageSize()>
SOURCE|<com.android.gallery3d.filtershow.imageshow.ImageStraighten: java.lang.String getName()>
SOURCE|<org.apache.harmony.xnet.provider.jsse.OpenSSLRSAPrivateCrtKey: java.math.BigInteger getPrimeP()>
SOURCE|<com.android.videoeditor.util.FileUtils: java.lang.String getMaskFilename(android.content.Context,int)>
SOURCE|<gov.nist.javax.sip.header.MaxForwards: int getMaxForwards()>
SOURCE|<android.net.Uri$StringUri: java.lang.String getEncodedFragment()>
SOURCE|<android.app.ActivityManagerProxy: int getTaskForActivity(android.os.IBinder,boolean)>
SOURCE|<com.android.systemui.recent.RecentsPanelView$TaskDescriptionAdapter: java.lang.Object getItem(int)>
SOURCE|<org.kxml2.io.KXmlParser: int getEventType()>
SOURCE|<com.android.internal.app.ActionBarImpl: int getNavigationItemCount()>
SOURCE|<android.text.method.MetaKeyKeyListener: int getMetaState(long,int)>
SOURCE|<com.android.contacts.list.CustomContactListFilterActivity$DisplayAdapter: java.lang.Object getGroup(int)>
SOURCE|<java.math.BigInteger: java.math.BigInteger copy()>
SOURCE|<com.android.contacts.detail.ContactDetailFragment$ViewEntry: int getViewType()>
SOURCE|<com.adobe.xmp.impl.XMPDateTimeImpl: int getMonth()>
SOURCE|<javax.obex.ObexHelper: byte[] updateHeaderSet(javax.obex.HeaderSet,byte[])>
SOURCE|<com.android.browser.IntentHandler: com.android.browser.IntentHandler$UrlData getUrlDataFromIntent(android.content.Intent)>
SOURCE|<android.webkit.HTML5VideoView: boolean getPlayerBuffering()>
SOURCE|<com.android.inputmethod.keyboard.internal.KeySpecParser: int getIntValue(java.lang.String[],java.lang.String,int)>
SOURCE|<gov.nist.javax.sip.header.TimeStamp: long getTime()>
SOURCE|<com.google.common.collect.BstCountBasedBalancePolicies$3: com.google.common.collect.BstNode balance(com.google.common.collect.BstNodeFactory,com.google.common.collect.BstNode,com.google.common.collect.BstNode,com.google.common.collect.BstNode)>
SOURCE|<com.android.phone.PhoneInterfaceManager: java.util.List getAllCellInfo()>
SOURCE|<java.util.ResourceBundle: java.util.ResourceBundle getBundle(java.lang.String,java.util.Locale,java.lang.ClassLoader,java.util.ResourceBundle$Control)>
SOURCE|<com.android.org.bouncycastle.util.encoders.Base64: byte[] decode(java.lang.String)>
SOURCE|<android.view.accessibility.AccessibilityNodeInfo: java.lang.CharSequence getPackageName()>
SOURCE|<org.apache.http.impl.auth.NTLMScheme: void parseChallenge(org.apache.http.util.CharArrayBuffer,int,int)>
SOURCE|<java.lang.reflect.Array: double getDouble(java.lang.Object,int)>
SOURCE|<com.android.org.bouncycastle.asn1.x500.X500Name: com.android.org.bouncycastle.asn1.x500.X500Name getInstance(com.android.org.bouncycastle.asn1.ASN1TaggedObject,boolean)>
SOURCE|<android.app.IAlarmManager$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
SOURCE|<com.android.internal.telephony.IccRecords: boolean getRecordsLoaded()>
SOURCE|<android.security.IKeyChainService$Stub: android.os.IBinder asBinder()>
SOURCE|<com.android.internal.telephony.PhoneProxy: java.lang.String getLine1AlphaTag()>
SOURCE|<android.graphics.drawable.DrawableContainer$DrawableContainerState: int getChangingConfigurations()>
SOURCE|<com.google.android.picasasync.UploadsManager: long addManualUpload(com.google.android.picasasync.UploadTaskEntry)>
SOURCE|<com.android.vcard.VCardEntry$AndroidCustomData: com.android.vcard.VCardEntry$EntryLabel getEntryLabel()>
SOURCE|<android.view.IWindowManager$Stub$Proxy: int getAppOrientation(android.view.IApplicationToken)>
SOURCE|<com.android.launcher2.DragLayer: float getLocationInDragLayer(android.view.View,int[])>
SOURCE|<com.android.camera.ListPreference: java.lang.CharSequence[] getEntryValues()>
SOURCE|<com.android.server.ThrottleService$DataRecorder: long getPeriodTx(int)>
SOURCE|<android.app.Activity: int getWallpaperDesiredMinimumWidth()>
SOURCE|<com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata: com.android.i18n.phonenumbers.Phonemetadata$PhoneNumberDesc getPremiumRate()>
SOURCE|<android.content.Intent: double[] getDoubleArrayExtra(java.lang.String)>
SOURCE|<java.util.Formatter$FormatToken: int getPrecision()>
SOURCE|<android.filterfw.core.CachedFrameManager: android.filterfw.core.Frame newFrame(android.filterfw.core.FrameFormat)>
SOURCE|<gov.nist.javax.sip.message.MessageFactoryImpl: javax.sip.message.Response createResponse(int,javax.sip.header.CallIdHeader,javax.sip.header.CSeqHeader,javax.sip.header.FromHeader,javax.sip.header.ToHeader,java.util.List,javax.sip.header.MaxForwardsHeader,byte[],javax.sip.header.ContentTypeHeader)>
SOURCE|<com.android.gallery3d.data.LocalAlbum: java.lang.String getName()>
SOURCE|<android.os.SystemProperties: java.lang.String get(java.lang.String)>
SOURCE|<java.util.Collections$UnmodifiableList: java.lang.Object get(int)>
SOURCE|<com.android.server.pm.UserManagerService: com.android.server.pm.UserManagerService getInstance()>
SOURCE|<org.apache.harmony.xnet.provider.jsse.SSLSocketImpl: javax.net.ssl.SSLSession getSession()>
SOURCE|<com.android.contacts.list.ContactsRequest: android.net.Uri getContactUri()>
SOURCE|<com.android.internal.telephony.PhoneProxy: android.net.LinkCapabilities getLinkCapabilities(java.lang.String)>
SOURCE|<com.coremedia.iso.boxes.TrackHeaderBox: void getContent(java.nio.ByteBuffer)>
SOURCE|<com.android.i18n.phonenumbers.Phonemetadata$NumberFormat: java.util.List leadingDigitPatterns()>
SOURCE|<com.android.internal.telephony.IccCardProxy: java.lang.String getServiceProviderName()>
SOURCE|<com.android.internal.widget.DrawableHolder: android.graphics.drawable.BitmapDrawable getDrawable()>
SOURCE|<com.android.mms.data.Conversation: java.lang.String verifySingleRecipient(android.content.Context,long,java.lang.String)>
SOURCE|<android.app.admin.DeviceAdminReceiver: android.app.admin.DevicePolicyManager getManager(android.content.Context)>
SOURCE|<android.view.ViewGroup$MarginLayoutParams: int getLayoutDirection()>
SOURCE|<android.graphics.drawable.BitmapDrawable: int getIntrinsicWidth()>
SOURCE|<android.provider.Contacts$ContactMethods: java.lang.CharSequence getDisplayLabel(android.content.Context,int,int,java.lang.CharSequence)>
SOURCE|<android.hardware.Camera$Parameters: java.util.List getSupportedPreviewSizes()>
SOURCE|<com.android.internal.telephony.cdma.CdmaConnection: long getDurationMillis()>
SOURCE|<android.os.PowerManager: int getDefaultScreenBrightnessSetting()>
SOURCE|<com.android.videoeditor.service.MovieAudioTrack: int getAudioChannels()>
SOURCE|<com.android.server.am.ActivityManagerService: java.util.List getRecentTasks(int,int,int)>
SOURCE|<com.android.mms.dom.DocumentImpl: java.lang.String getNodeName()>
SOURCE|<java.lang.ClassLoader: java.lang.Class loadClass(java.lang.String)>
SOURCE|<org.json.JSONObject: org.json.JSONArray getJSONArray(java.lang.String)>
SOURCE|<android.database.MatrixCursor: double getDouble(int)>
SOURCE|<android.media.effect.FilterEffect: android.filterfw.core.FilterContext getFilterContext()>
SOURCE|<com.android.videoeditor.util.StringUtils: java.lang.String getTimestampAsString(android.content.Context,long)>
SOURCE|<com.android.mms.dom.smil.TimeImpl: double getOffset()>
SOURCE|<android.net.TrafficStats: long getTotalTxPackets()>
SOURCE|<com.android.email.MessagingExceptionStrings: java.lang.String getErrorString(android.content.Context,com.android.emailcommon.mail.MessagingException)>
SOURCE|<com.android.deskclock.widget.multiwaveview.GlowPadView: int getTargetDescriptionsResourceId()>
SOURCE|<gov.nist.javax.sip.stack.SIPTransactionStack: javax.sip.Dialog getReplacesDialog(gov.nist.javax.sip.header.extensions.ReplacesHeader)>
SOURCE|<com.android.launcher2.ShortcutInfo: android.graphics.Bitmap getIcon(com.android.launcher2.IconCache)>
SOURCE|<android.bluetooth.IBluetoothPbap$Stub$Proxy: android.bluetooth.BluetoothDevice getClient()>
SOURCE|<com.android.calendar.agenda.AgendaListView: android.view.View getFirstVisibleView()>
SOURCE|<android.filterpacks.imageproc.Invert: android.filterfw.core.Program getShaderProgram(android.filterfw.core.FilterContext)>
SOURCE|<com.google.common.collect.MapMakerInternalMap$WeakExpirableEvictableEntry: com.google.common.collect.MapMakerInternalMap$ReferenceEntry getNextExpirable()>
SOURCE|<java.util.logging.Logger: java.util.logging.Logger getLogger(java.lang.String)>
SOURCE|<android.app.PendingIntent: android.app.PendingIntent getActivities(android.content.Context,int,android.content.Intent[],int)>
SOURCE|<android.drm.DrmSupportInfo: java.lang.String getDescriprition()>
SOURCE|<android.app.IStopUserCallback$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
SOURCE|<android.mtp.MtpObjectInfo: int getImagePixWidth()>
SOURCE|<com.android.email.Email: java.lang.String getMessageDecodeErrorString()>
SOURCE|<com.android.email.activity.MailboxFragmentAdapter: long getId(android.database.Cursor)>
SOURCE|<java.util.Calendar: long getTimeInMillis()>
SOURCE|<gov.nist.javax.sip.stack.SIPDialog: javax.sip.address.Address getLocalParty()>
SOURCE|<android.media.videoeditor.MediaArtistNativeHelper: int getAudioCodecType(int)>
SOURCE|<com.android.contacts.model.account.BaseAccountType$PhotoKindBuilder: java.lang.String getTagName()>
SOURCE|<javax.net.ssl.SSLParameters: java.lang.String[] getCipherSuites()>
SOURCE|<android.graphics.drawable.NinePatchDrawable: android.graphics.drawable.Drawable$ConstantState getConstantState()>
SOURCE|<com.android.internal.policy.impl.keyguard.KeyguardUpdateMonitor: com.android.internal.policy.impl.keyguard.KeyguardUpdateMonitor getInstance(android.content.Context)>
SOURCE|<com.android.contacts.editor.RawContactReadOnlyEditorView: long getRawContactId()>
SOURCE|<java.security.cert.PKIXParameters: boolean getPolicyQualifiersRejected()>
SOURCE|<javax.crypto.spec.RC5ParameterSpec: int getWordSize()>
SOURCE|<android.telephony.SmsMessage: java.lang.String getPseudoSubject()>
SOURCE|<com.android.contacts.detail.PhotoSelectionHandler: com.android.contacts.model.RawContactDeltaList getDeltaForAttachingPhotoToContact()>
SOURCE|<com.android.email.mail.store.imap.ImapTempFileLiteral: java.lang.String getString()>
SOURCE|<android.test.mock.MockPackageManager: android.content.res.Resources getResourcesForActivity(android.content.ComponentName)>
SOURCE|<java.time.ZoneOffset: long getLong(java.time.temporal.TemporalField)>
SOURCE|<org.apache.harmony.security.x509.Validity$1: java.lang.Object getDecodedObject(org.apache.harmony.security.asn1.BerInputStream)>
SOURCE|<com.android.internal.telephony.PhoneBase: android.net.LinkProperties getLinkProperties(java.lang.String)>
SOURCE|<android.drm.DrmManagerClient: android.content.ContentValues getMetadata(java.lang.String)>
SOURCE|<android.app.FragmentManager: android.app.FragmentTransaction openTransaction()>
SOURCE|<java.text.StringCharacterIterator: int getBeginIndex()>
SOURCE|<com.android.launcher2.Workspace: int getDescendantFocusability()>
SOURCE|<com.android.phone.InCallScreen: com.android.phone.InCallTouchUi getInCallTouchUi()>
SOURCE|<java.lang.Runtime: java.lang.Runtime getRuntime()>
SOURCE|<com.android.internal.app.ActionBarImpl: java.lang.CharSequence getTitle()>
SOURCE|<android.telephony.NeighboringCellInfo: int getLac()>
SOURCE|<com.android.nfc.dhimpl.NativeNfcTag: android.os.Bundle[] getTechExtras()>
SOURCE|<com.android.browser.widget.BookmarkThumbnailWidgetService$BookmarkFactory: long getItemId(int)>
SOURCE|<com.google.android.picasasync.PicasaDatabaseHelper: long getUserId(java.lang.String)>
SOURCE|<com.android.org.bouncycastle.jce.netscape.NetscapeCertRequest: com.android.org.bouncycastle.asn1.x509.AlgorithmIdentifier getSigningAlgorithm()>
SOURCE|<android.hardware.Camera$Parameters: int getPreviewFormat()>
SOURCE|<android.webkit.FindActionModeCallback: int getActionModeGlobalBottom()>
SOURCE|<com.android.internal.telephony.IccSmsInterfaceManager: java.util.ArrayList buildValidRawData(java.util.ArrayList)>
SOURCE|<com.android.server.pm.PackageManagerService$AsecInstallArgs: java.lang.String getResourcePath()>
SOURCE|<com.android.gallery3d.app.AbstractGalleryActivity: com.android.gallery3d.util.LightCycleHelper$PanoramaViewHelper getPanoramaViewHelper()>
SOURCE|<com.android.browser.PreloadController: android.view.View getVideoLoadingProgressView()>
SOURCE|<com.android.internal.policy.impl.keyguard.SlidingChallengeLayout: int getBouncerAnimationDuration()>
SOURCE|<com.android.org.bouncycastle.asn1.DERInteger: java.math.BigInteger getValue()>
SOURCE|<android.app.ListFragment: android.widget.ListAdapter getListAdapter()>
SOURCE|<com.android.gallery3d.data.MediaSource: long getTotalUsedCacheSize()>
SOURCE|<org.apache.harmony.xnet.provider.jsse.SSLSocketWrapper: boolean getReuseAddress()>
SOURCE|<android.app.Activity: android.view.LayoutInflater getLayoutInflater()>
SOURCE|<android.bluetooth.BluetoothDevice: java.lang.String getAliasName()>
SOURCE|<android.view.ViewGroup: android.animation.LayoutTransition getLayoutTransition()>
SOURCE|<org.apache.http.auth.NTUserPrincipal: java.lang.String getDomain()>
SOURCE|<com.android.internal.telephony.cat.IconLoader: android.graphics.Bitmap parseToBnW(byte[],int)>
SOURCE|<android.media.IAudioFocusDispatcher$Stub: android.os.IBinder asBinder()>
SOURCE|<org.apache.harmony.xml.dom.LeafNodeImpl: org.w3c.dom.Node getParentNode()>
SOURCE|<java.lang.reflect.Parameter: java.lang.'annotation'.Annotation[] getDeclaredAnnotationsByType(java.lang.Class)>
SOURCE|<com.android.launcher2.PagedViewCellLayout: int getContentWidth()>
SOURCE|<com.android.deskclock.worldclock.CitiesActivity$CityAdapter: int getSectionForPosition(int)>
SOURCE|<org.apache.http.message.BasicRequestLine: java.lang.String getMethod()>
SOURCE|<java.io.FileOutputStream: java.nio.channels.FileChannel getChannel()>
SOURCE|<org.ccil.cowan.tagsoup.Parser: org.xml.sax.EntityResolver getEntityResolver()>
SOURCE|<android.content.pm.PackageParser$Component: java.lang.String getComponentShortName()>
SOURCE|<android.app.SearchManager: android.content.Intent getAssistIntent(android.content.Context,int)>
SOURCE|<com.android.internal.telephony.gsm.GsmServiceStateTracker: int getCurrentDataConnectionState()>
SOURCE|<android.net.LocalSocketImpl: java.io.FileDescriptor[] getAncillaryFileDescriptors()>
SOURCE|<com.android.browser.ComboViewActivity$TabsAdapter: android.app.Fragment getItem(int)>
SOURCE|<java.lang.Boolean: boolean parseBoolean(java.lang.String)>
SOURCE|<com.android.vcard.VCardParserImpl_V40: java.lang.String getVersionString()>
SOURCE|<java.util.ResourceBundle$Control: java.util.Locale getFallbackLocale(java.lang.String,java.util.Locale)>
SOURCE|<com.android.server.wm.WindowState: android.graphics.RectF getShownFrameLw()>
SOURCE|<android.media.videoeditor.MediaProperties: int[] getSupportedVideoCodecs()>
SOURCE|<com.android.internal.widget.LockPatternView: int getSuggestedMinimumWidth()>
SOURCE|<javax.crypto.KeyAgreement: java.lang.String getAlgorithm()>
SOURCE|<gov.nist.javax.sip.stack.SIPTransactionStack: gov.nist.javax.sip.stack.SIPClientTransaction createClientTransaction(gov.nist.javax.sip.message.SIPRequest,gov.nist.javax.sip.stack.MessageChannel)>
SOURCE|<java.lang.SecurityManager: java.lang.Object getSecurityContext()>
SOURCE|<com.android.internal.telephony.CallManager: com.android.internal.telephony.Phone getBgPhone()>
SOURCE|<android.media.videoeditor.AudioTrack: int getAudioType()>
SOURCE|<com.android.server.net.NetworkPolicyManagerService: int[] getUidsWithPolicy(int)>
SOURCE|<android.widget.RemoteViews$ViewPaddingAction: java.lang.String getActionName()>
SOURCE|<android.content.res.ColorStateList: int getColorForState(int[],int)>
SOURCE|<android.os.storage.IMountService$Stub$Proxy: java.lang.String getSecureContainerFilesystemPath(java.lang.String)>
SOURCE|<com.android.calendar.event.EditEventView$TitleAdapter: int getCount()>
SOURCE|<com.android.internal.policy.PolicyManager: android.view.LayoutInflater makeNewLayoutInflater(android.content.Context)>
SOURCE|<android.webkit.WebSettingsClassic$AutoFillProfile: java.lang.String getAddressLine2()>
SOURCE|<com.android.contacts.list.ContactListItemView: android.widget.TextView getSnippetView()>
SOURCE|<android.content.ClipboardManager: android.content.ClipDescription getPrimaryClipDescription()>
SOURCE|<org.apache.harmony.xnet.provider.jsse.SSLSocketWrapper: java.net.InetAddress getLocalAddress()>
SOURCE|<android.view.inputmethod.InputMethodInfo: int getSubtypeCount()>
SOURCE|<android.widget.RelativeLayout$LayoutParams: int[] getRules(int)>
SOURCE|<android.media.videoeditor.MediaArtistNativeHelper: android.media.videoeditor.MediaArtistNativeHelper$EffectSettings getEffectSettings(android.media.videoeditor.EffectColor)>
SOURCE|<android.telephony.SmsCbMessage: android.telephony.SmsCbCmasInfo getCmasWarningInfo()>
SOURCE|<com.android.internal.telephony.CallerInfo: com.android.internal.telephony.CallerInfo getCallerInfo(android.content.Context,java.lang.String)>
SOURCE|<com.google.common.collect.Maps$1: java.lang.Object getKey()>
SOURCE|<android.nfc.INfcAdapter$Stub$Proxy: android.nfc.INfcAdapterExtras getNfcAdapterExtrasInterface(java.lang.String)>
SOURCE|<com.android.gallery3d.filtershow.filters.ImageFilter: int getPreviewParameter()>
SOURCE|<com.android.org.bouncycastle.asn1.DERGeneralString: com.android.org.bouncycastle.asn1.DERGeneralString getInstance(com.android.org.bouncycastle.asn1.ASN1TaggedObject,boolean)>
SOURCE|<android.content.Intent: short getShortExtra(java.lang.String,short)>
SOURCE|<com.android.contacts.model.account.AccountType: java.lang.CharSequence getInviteContactActionLabel(android.content.Context)>
SOURCE|<com.googlecode.mp4parser.FullContainerBox: java.lang.String toString()>
SOURCE|<java.util.MissingResourceException: java.lang.String getClassName()>
SOURCE|<org.apache.http.conn.scheme.Scheme: int getDefaultPort()>
SOURCE|<com.android.deskclock.stopwatch.StopwatchFragment$LapsListAdapter: long getItemId(int)>
SOURCE|<android.graphics.drawable.Drawable: android.graphics.drawable.Drawable mutate()>
SOURCE|<java.net.URLConnection: int getConnectTimeout()>
SOURCE|<java.math.BigDecimal: java.math.BigDecimal divideToIntegralValue(java.math.BigDecimal,java.math.MathContext)>
SOURCE|<android.view.inputmethod.CorrectionInfo: java.lang.CharSequence getOldText()>
SOURCE|<android.location.Location: android.os.Bundle getExtras()>
SOURCE|<java.net.URLConnection: java.lang.Object getContent(java.lang.Class[])>
SOURCE|<android.location.Address: java.lang.String getAddressLine(int)>
SOURCE|<com.android.contacts.ContactsUtils: android.content.Intent getCallIntent(java.lang.String)>
SOURCE|<com.android.gallery3d.ui.TileImageViewAdapter: int getLevelCount()>
SOURCE|<com.android.nfc.NfcService: com.android.nfc.DeviceHost$LlcpServerSocket createLlcpServerSocket(int,java.lang.String,int,int,int)>
SOURCE|<android.app.admin.IDevicePolicyManager$Stub$Proxy: int getPasswordMinimumSymbols(android.content.ComponentName,int)>
SOURCE|<gov.nist.javax.sip.header.SIPDate: int getSecond()>
SOURCE|<android.net.Uri$HierarchicalUri: java.lang.String getSchemeSpecificPart()>
SOURCE|<android.content.res.Resources: java.lang.String[] getStringArray(int)>
SOURCE|<android.telephony.CellInfoLte$1: android.telephony.CellInfoLte createFromParcel(android.os.Parcel)>
SOURCE|<android.text.Layout: android.text.Layout$Alignment getAlignment()>
SOURCE|<com.android.videoeditor.service.VideoEditorProject: com.android.videoeditor.service.MovieEffect getEffect(java.lang.String,java.lang.String)>
SOURCE|<android.bluetooth.BluetoothTetheringDataTracker: android.bluetooth.BluetoothTetheringDataTracker getInstance()>
SOURCE|<java.security.AlgorithmParameters: java.security.AlgorithmParameters getInstance(java.lang.String)>
SOURCE|<android.widget.GridLayout$Alignment: int getSizeInCell(android.view.View,int,int)>
SOURCE|<javax.net.ssl.HttpsURLConnection: javax.net.ssl.HostnameVerifier getDefaultHostnameVerifier()>
SOURCE|<com.android.camera.CameraActivity: long getJpegCallbackFinishTime()>
SOURCE|<org.apache.http.message.BasicLineParser: org.apache.http.Header parseHeader(java.lang.String,org.apache.http.message.LineParser)>
SOURCE|<org.apache.harmony.security.x509.ORAddress: byte[] getEncoded()>
SOURCE|<android.hardware.usb.UsbDeviceConnection: byte[] getRawDescriptors()>
SOURCE|<java.util.Formatter$FormatToken: java.lang.String getStrFlags()>
SOURCE|<android.database.CursorWrapper: java.lang.String getString(int)>
SOURCE|<android.renderscript.Element: int getSubElementCount()>
SOURCE|<javax.crypto.KeyAgreement: byte[] generateSecret()>
SOURCE|<com.android.inputmethod.latin.RichInputConnection: int getCodePointBeforeCursor()>
SOURCE|<android.app.admin.DevicePolicyManager: boolean getStorageEncryption(android.content.ComponentName)>
SOURCE|<android.webkit.WebSettingsClassic$AutoFillProfile: java.lang.String getState()>
SOURCE|<android.widget.TextView: android.os.Bundle getInputExtras(boolean)>
SOURCE|<gov.nist.core.StringTokenizer: java.util.Vector getLines()>
SOURCE|<java.util.ResourceBundle: java.util.ResourceBundle getBundle(java.lang.String,java.util.Locale,java.util.ResourceBundle$Control)>
SOURCE|<android.os.INetworkManagementService$Stub: android.os.IBinder asBinder()>
SOURCE|<com.android.gallery3d.filtershow.imageshow.ImageShow: android.graphics.Bitmap getFiltersOnlyImage()>
SOURCE|<java.nio.FloatArrayBuffer: java.nio.FloatBuffer get(float[],int,int)>
SOURCE|<com.google.common.collect.ImmutableSortedMap: java.lang.Object get(java.lang.Object)>
SOURCE|<android.hardware.usb.UsbDeviceConnection: int getFileDescriptor()>
SOURCE|<gov.nist.javax.sip.message.SIPRequest: int getViaPort()>
SOURCE|<libcore.net.http.RequestHeaders: java.lang.String getAcceptEncoding()>
SOURCE|<gov.nist.javax.sip.header.ims.SecurityAgree: java.lang.String getAlgorithm()>
SOURCE|<android.view.View: int getMeasuredHeight()>
SOURCE|<com.adobe.xmp.impl.XMPMetaImpl: com.adobe.xmp.impl.XMPNode getRoot()>
SOURCE|<android.filterfw.core.NativeBuffer: int getElementSize()>
SOURCE|<java.time.format.DateTimeFormatter: java.time.chrono.Chronology getChronology()>
SOURCE|<android.text.method.DateTimeKeyListener: int getInputType()>
SOURCE|<org.apache.harmony.security.x509.EDIPartyName$1: java.lang.Object getDecodedObject(org.apache.harmony.security.asn1.BerInputStream)>
SOURCE|<org.apache.harmony.xnet.provider.jsse.SSLParametersImpl: boolean getUseClientMode()>
SOURCE|<org.apache.http.message.BasicHeaderElement: java.lang.String getValue()>
SOURCE|<android.hardware.usb.UsbRequest: android.hardware.usb.UsbEndpoint getEndpoint()>
SOURCE|<android.filterfw.core.FrameFormat: int getSize()>
SOURCE|<com.android.camera.ListPreference: java.lang.CharSequence[] getEntries()>
SOURCE|<com.android.mms.dom.smil.SmilMediaElementImpl: java.lang.String getSrc()>
SOURCE|<com.android.gallery3d.ui.CropView$AnimationController: int getCenterY()>
SOURCE|<android.webkit.WebViewClassic: float getZoomOverviewScale()>
SOURCE|<com.android.contacts.detail.StreamItemAdapter: int getCount()>
SOURCE|<android.widget.EditText: boolean getDefaultEditable()>
SOURCE|<com.android.server.pm.PackageVerificationState: com.android.server.pm.PackageManagerService$InstallArgs getInstallArgs()>
SOURCE|<android.view.Display: int getType()>
SOURCE|<org.xml.sax.helpers.AttributesImpl: java.lang.String getValue(int)>
SOURCE|<android.graphics.drawable.InsetDrawable: int getChangingConfigurations()>
SOURCE|<android.text.style.TextAppearanceSpan: android.content.res.ColorStateList getLinkTextColor()>
SOURCE|<com.android.contacts.list.ContactListAdapter: java.lang.String[] getProjection(boolean)>
SOURCE|<com.android.gallery3d.provider.GalleryProvider: java.lang.String getAuthority(android.content.Context)>
SOURCE|<com.android.gallery3d.data.MediaObject: com.android.gallery3d.data.MediaDetails getDetails()>
SOURCE|<com.android.launcher2.LauncherApplication: float getScreenDensity()>
SOURCE|<android.media.AudioManager: int getMode()>
SOURCE|<com.android.browser.TabControl: com.android.browser.Tab createNewTab(boolean)>
SOURCE|<com.android.bluetooth.btservice.RemoteDevices$DeviceProperties: int getBondState()>
SOURCE|<com.android.internal.policy.impl.PhoneWindowManager: android.view.View addStartingWindow(android.os.IBinder,java.lang.String,int,android.content.res.CompatibilityInfo,java.lang.CharSequence,int,int,int)>
SOURCE|<android.test.IsolatedContext$MockAccountManager: java.lang.String getPassword(android.accounts.Account)>
SOURCE|<android.database.sqlite.SQLiteDatabase: android.database.Cursor rawQueryWithFactory(android.database.sqlite.SQLiteDatabase$CursorFactory,java.lang.String,java.lang.String[],java.lang.String,android.os.CancellationSignal)>
SOURCE|<com.android.org.bouncycastle.asn1.DERUniversalString: byte[] getOctets()>
SOURCE|<android.app.BackStackRecord: java.lang.CharSequence getBreadCrumbShortTitle()>
SOURCE|<android.media.MediaMetadataRetriever: android.graphics.Bitmap getFrameAtTime(long)>
SOURCE|<android.app.LoadedApk$WarningContextClassLoader: java.net.URL getResource(java.lang.String)>
SOURCE|<android.app.DownloadManager: java.lang.Long getMaxBytesOverMobile(android.content.Context)>
SOURCE|<com.android.internal.widget.multiwaveview.GlowPadView: int getScaledSuggestedMinimumHeight()>
SOURCE|<android.provider.MediaStore$Audio$Playlists: android.net.Uri getContentUri(java.lang.String)>
SOURCE|<com.android.contacts.ContactPhotoManagerImpl$Request: long getId()>
SOURCE|<java.nio.ServerSocketChannelImpl$ServerSocketAdapter: java.nio.channels.ServerSocketChannel getChannel()>
SOURCE|<com.android.uiautomator.core.UiDevice: com.android.uiautomator.core.UiAutomatorBridge getAutomatorBridge()>
SOURCE|<android.view.PointerIcon: android.view.PointerIcon getNullIcon()>
SOURCE|<java.util.concurrent.locks.ReentrantReadWriteLock$Sync: int getCount()>
SOURCE|<android.bluetooth.IBluetoothHeadset$Stub: android.os.IBinder asBinder()>
SOURCE|<junit.framework.TestSuite: java.lang.String getName()>
SOURCE|<android.os.INetworkManagementService$Stub$Proxy: android.net.RouteInfo[] getRoutes(java.lang.String)>
SOURCE|<org.apache.http.impl.client.RequestWrapper: java.net.URI getURI()>
SOURCE|<android.media.videoeditor.MediaProperties: int getSupportedMaxVolume()>
SOURCE|<android.content.pm.PackageItemInfo: android.graphics.drawable.Drawable loadLogo(android.content.pm.PackageManager)>
SOURCE|<com.android.launcher2.PagedViewCellLayout: int getPageChildCount()>
SOURCE|<com.google.android.picasasync.PicasaFacade: java.lang.String getAuthority()>
SOURCE|<android.net.http.IdleCache: android.net.http.Connection getConnection(org.apache.http.HttpHost)>
SOURCE|<org.xmlpull.v1.sax2.Driver: java.lang.Object getProperty(java.lang.String)>
SOURCE|<android.telephony.CellInfo: java.lang.String toString()>
SOURCE|<javax.net.SocketFactory: javax.net.SocketFactory getDefault()>
SOURCE|<gov.nist.javax.sip.header.From: gov.nist.core.HostPort getHostPort()>
SOURCE|<com.android.internal.telephony.cdma.CDMAPhone: void getEnhancedVoicePrivacy(android.os.Message)>
SOURCE|<android.net.INetworkPolicyManager$Stub$Proxy: int[] getUidsWithPolicy(int)>
SOURCE|<android.animation.AnimatorSet: long getDuration()>
SOURCE|<android.view.View: android.graphics.drawable.Drawable getBackground()>
SOURCE|<com.android.gallery3d.picasasource.PicasaAlbum: com.android.gallery3d.data.MediaItem getCoverMediaItem()>
SOURCE|<com.android.gallery3d.data.MediaItem: int getRotation()>
SOURCE|<java.security.KeyStore: java.security.Key getKey(java.lang.String,char[])>
SOURCE|<gov.nist.javax.sip.header.CallID: gov.nist.javax.sip.header.CallIdentifier getCallIdentifer()>
SOURCE|<com.android.email.widget.EmailWidget: android.widget.RemoteViews getLoadingView()>
SOURCE|<javax.crypto.ExemptionMechanism: javax.crypto.ExemptionMechanism getInstance(java.lang.String,java.lang.String)>
SOURCE|<android.view.ContextThemeWrapper: android.content.res.Resources getResources()>
SOURCE|<java.time.DayOfWeek: java.lang.String getDisplayName(java.time.format.TextStyle,java.util.Locale)>
SOURCE|<com.android.server.ConnectivityService: android.net.NetworkInfo[] getAllNetworkInfo()>
SOURCE|<android.os.UserHandle: int getIdentifier()>
SOURCE|<libcore.net.url.JarURLConnectionImpl: boolean getUseCaches()>
SOURCE|<com.android.i18n.phonenumbers.PhoneNumberUtil: com.android.i18n.phonenumbers.PhoneNumberUtil$MatchType isNumberMatch(java.lang.String,java.lang.String)>
SOURCE|<android.graphics.YuvImage: int[] getStrides()>
SOURCE|<com.adobe.xmp.impl.XMPDateTimeImpl: int getYear()>
SOURCE|<android.view.View: float getLeftFadingEdgeStrength()>
SOURCE|<org.apache.harmony.security.x509.TBSCertList$RevokedCertificate: javax.security.auth.x500.X500Principal getIssuer()>
SOURCE|<android.view.Display: int getOrientation()>
SOURCE|<gov.nist.javax.sip.stack.MessageChannel: gov.nist.javax.sip.stack.MessageProcessor getMessageProcessor()>
SOURCE|<android.content.Loader: java.lang.String toString()>
SOURCE|<junit.framework.ComparisonFailure: java.lang.String getMessage()>
SOURCE|<android.view.animation.GridLayoutAnimationController: float getColumnDelay()>
SOURCE|<com.android.browser.DataUri: byte[] getData()>
SOURCE|<com.android.email.activity.RecentMailboxManager: com.android.emailcommon.utility.EmailAsyncTask touch(long,long)>
SOURCE|<android.webkit.CookieManagerClassic: java.lang.String getCookie(java.lang.String,boolean)>
SOURCE|<com.google.common.collect.Ordering: java.lang.Object min(java.lang.Object,java.lang.Object)>
SOURCE|<java.nio.LongArrayBuffer: long get()>
SOURCE|<junit.runner.BaseTestRunner: int getPreference(java.lang.String,int)>
SOURCE|<com.android.camera.ComboPreferences: java.lang.String getString(java.lang.String,java.lang.String)>
SOURCE|<com.android.server.am.ActiveServices: android.app.PendingIntent getRunningServiceControlPanelLocked(android.content.ComponentName)>
SOURCE|<android.bluetooth.BluetoothAdapter: int getScanMode()>
SOURCE|<libcore.icu.ICU: java.util.Locale[] getAvailableNumberFormatLocales()>
SOURCE|<android.app.SharedPreferencesImpl: int getInt(java.lang.String,int)>
SOURCE|<android.net.Uri$OpaqueUri: java.lang.String getEncodedSchemeSpecificPart()>
SOURCE|<gov.nist.javax.sip.address.TelURLImpl: java.lang.String getScheme()>
SOURCE|<android.view.accessibility.AccessibilityEvent: int getMovementGranularity()>
SOURCE|<gov.nist.javax.sip.header.From: java.lang.String getTag()>
SOURCE|<com.android.server.wm.WindowManagerService: android.view.DisplayInfo getDefaultDisplayInfoLocked()>
SOURCE|<com.android.mms.ui.RecipientsEditor$RecipientsEditorTokenizer: java.util.List getNumbers()>
SOURCE|<com.android.phone.InCallUiState: com.android.phone.InCallUiState$ProgressIndicationType getProgressIndication()>
SOURCE|<com.android.server.ConnectivityService: java.lang.String[] getTetherableWifiRegexs()>
SOURCE|<android.view.ViewConfiguration: int getDoubleTapSlop()>
SOURCE|<java.net.URLConnection: java.lang.String getHeaderFieldKey(int)>
SOURCE|<com.android.gallery3d.filtershow.filters.ImageFilter: byte getFilterType()>
SOURCE|<android.telephony.cdma.CdmaSmsCbProgramData: int getLanguage()>
SOURCE|<java.io.DataInputStream: long readLong()>
SOURCE|<android.os.Environment: java.io.File getRootDirectory()>
SOURCE|<android.telephony.ServiceState: int getState()>
SOURCE|<libcore.net.http.HttpsURLConnectionImpl: java.util.Map getHeaderFields()>
SOURCE|<com.android.emailcommon.utility.AttachmentUtilities: java.io.File getAttachmentDirectory(android.content.Context,long)>
SOURCE|<com.android.bluetooth.opp.BluetoothOppPreference: int getChannel(android.bluetooth.BluetoothDevice,int)>
SOURCE|<android.webkit.WebViewDatabaseClassic: java.lang.String[] getUsernamePassword(java.lang.String)>
SOURCE|<com.android.browser.BaseUi: android.graphics.Bitmap getDefaultVideoPoster()>
SOURCE|<android.media.AudioTrack: int getMinBufferSize(int,int,int)>
SOURCE|<com.android.contacts.list.ContactTileView: android.net.Uri getLookupUri()>
SOURCE|<com.android.internal.os.BatteryStatsImpl: long getMobileTcpBytesReceived(int)>
SOURCE|<javax.obex.ClientOperation: long getLength()>
SOURCE|<android.content.pm.ResolveInfo: java.lang.CharSequence loadLabel(android.content.pm.PackageManager)>
SOURCE|<org.apache.harmony.xnet.provider.jsse.OpenSSLSessionImpl: long getLastAccessedTime()>
SOURCE|<com.android.gallery3d.data.MediaSet: int getSubMediaSetCount()>
SOURCE|<com.android.gallery3d.data.MediaSet: com.android.gallery3d.data.MediaSet getSubMediaSet(int)>
SOURCE|<android.view.animation.AccelerateInterpolator: float getInterpolation(float)>
SOURCE|<javax.crypto.Cipher: int getOutputSize(int)>
SOURCE|<com.google.common.collect.ComputingConcurrentHashMap: java.lang.Object getOrCompute(java.lang.Object)>
SOURCE|<org.apache.harmony.security.x501.AttributeTypeAndValue$2: java.lang.Object getDecodedObject(org.apache.harmony.security.asn1.BerInputStream)>
SOURCE|<com.android.email.Preferences: java.lang.String getLegacyBackupPreference(android.content.Context)>
SOURCE|<android.telephony.TelephonyManager: java.lang.String getSimCountryIso()>
SOURCE|<android.hardware.display.WifiDisplayStatus: android.hardware.display.WifiDisplay[] getRememberedDisplays()>
SOURCE|<com.android.mms.dom.smil.TimeImpl: short getTimeType()>
SOURCE|<com.android.server.am.TaskRecord: long getInactiveDuration()>
SOURCE|<java.util.concurrent.locks.ReentrantReadWriteLock: java.util.Collection getQueuedWriterThreads()>
SOURCE|<com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata: com.android.i18n.phonenumbers.Phonemetadata$PhoneNumberDesc getFixedLine()>
SOURCE|<java.time.DayOfWeek: int getValue()>
SOURCE|<org.apache.harmony.security.x509.PolicyConstraints: byte[] getEncoded()>
SOURCE|<com.google.common.collect.AbstractMultiset: java.util.Set entrySet()>
SOURCE|<libcore.net.http.HttpsURLConnectionImpl: long getLastModified()>
SOURCE|<android.app.DownloadManager: long getActiveNetworkWarningBytes(android.content.Context)>
SOURCE|<com.google.android.apps.lightcycle.panorama.PhotoCollection: float[] getCameraToWorld(int)>
SOURCE|<android.media.videoeditor.AudioTrack: int getDuckingThreshhold()>
SOURCE|<android.view.MotionEvent: float getHistoricalPressure(int)>
SOURCE|<android.content.ContentResolver: android.content.IContentProvider acquireProvider(android.net.Uri)>
SOURCE|<android.telephony.SmsMessage: java.lang.String getDisplayMessageBody()>
SOURCE|<java.security.cert.PKIXCertPathBuilderResult: java.security.cert.CertPath getCertPath()>
SOURCE|<com.android.server.am.ActiveServices$ServiceMap: com.android.server.am.ServiceRecord getServiceByName(android.content.ComponentName)>
SOURCE|<java.io.File: java.io.File createTempFile(java.lang.String,java.lang.String)>
SOURCE|<android.webkit.ZoomManager: float getInvDefaultScale()>
SOURCE|<com.android.contacts.detail.ContactDetailTabCarousel: int getAllowedVerticalScrollLength()>
SOURCE|<java.util.ResourceBundle: java.lang.String getString(java.lang.String)>
SOURCE|<java.security.spec.DSAPublicKeySpec: java.math.BigInteger getY()>
SOURCE|<java.util.concurrent.ForkJoinTask: int getSurplusQueuedTaskCount()>
SOURCE|<com.android.launcher2.SmoothPagedView: int getScrollMode()>
SOURCE|<com.android.contacts.quickcontact.DataAction: java.lang.CharSequence getBody()>
SOURCE|<com.android.mms.dom.DocumentImpl: org.w3c.dom.DOMImplementation getImplementation()>
SOURCE|<android.mtp.MtpObjectInfo: int getThumbCompressedSize()>
SOURCE|<android.text.AutoText: int getSize(android.view.View)>
SOURCE|<com.android.videoeditor.service.MovieOverlay: long getStartTime()>
SOURCE|<android.filterfw.core.GLFrame: int[] getInts()>
SOURCE|<android.net.UrlQuerySanitizer: android.net.UrlQuerySanitizer$ValueSanitizer getEffectiveValueSanitizer(java.lang.String)>
SOURCE|<java.util.zip.Inflater: int getRemaining()>
SOURCE|<com.android.nfc.P2pLinkManager: android.nfc.NdefMessage createDefaultNdef(java.lang.String)>
SOURCE|<gov.nist.javax.sip.SipProviderImpl: javax.sip.header.CallIdHeader getNewCallId()>
SOURCE|<android.webkit.WebSettingsClassic: java.lang.String getDefaultTextEncodingName()>
SOURCE|<com.android.internal.telephony.PhoneProxy: com.android.internal.telephony.PhoneConstants$DataState getDataConnectionState()>
SOURCE|<android.app.ISearchManager$Stub$Proxy: java.util.List getSearchablesInGlobalSearch()>
SOURCE|<libcore.icu.NativeBreakIterator: java.text.CharacterIterator getText()>
SOURCE|<java.lang.reflect.Executable: java.lang.'annotation'.Annotation[] getDeclaredAnnotations()>
SOURCE|<org.apache.http.client.methods.HttpRequestBase: java.lang.Object clone()>
SOURCE|<com.android.server.TwilightService$TwilightState: long getTomorrowSunrise()>
SOURCE|<android.nfc.INfcAdapter$Stub: android.os.IBinder asBinder()>
SOURCE|<com.android.internal.widget.IRemoteViewsFactory$Stub$Proxy: int getViewTypeCount()>
SOURCE|<com.android.launcher2.PagedView: int getCurrentPage()>
SOURCE|<gov.nist.javax.sip.header.ims.PVisitedNetworkID: java.lang.String getVisitedNetworkID()>
SOURCE|<android.content.res.AssetManager: android.content.res.XmlResourceParser openXmlResourceParser(int,java.lang.String)>
SOURCE|<com.google.common.collect.AbstractIterator: java.lang.Object endOfData()>
SOURCE|<android.preference.Preference: java.util.Set getPersistedStringSet(java.util.Set)>
SOURCE|<android.provider.ContactsContract$Data: android.net.Uri getContactLookupUri(android.content.ContentResolver,android.net.Uri)>
SOURCE|<com.android.browser.search.SearchEngineInfo: java.lang.String getSuggestUriForQuery(java.lang.String)>
SOURCE|<android.content.ISyncAdapter$Stub: android.os.IBinder asBinder()>
SOURCE|<android.app.ActivityOptions: int getStartX()>
SOURCE|<android.nfc.tech.Ndef: android.nfc.NdefMessage getNdefMessage()>
SOURCE|<libcore.icu.LocaleData: libcore.icu.LocaleData get(java.util.Locale)>
SOURCE|<android.content.res.XmlBlock$Parser: int getAttributeIntValue(int,int)>
SOURCE|<com.android.internal.telephony.gsm.SimSmsInterfaceManager: java.util.List access$200(com.android.internal.telephony.gsm.SimSmsInterfaceManager)>
SOURCE|<android.content.SyncStatusInfo: int getLastFailureMesgAsInt(int)>
SOURCE|<gov.nist.javax.sip.address.SipUri: java.lang.String getUserPassword()>
SOURCE|<com.android.gallery3d.filtershow.imageshow.GeometryMetadata: float getScaleFactor()>
SOURCE|<com.android.internal.telephony.SmsRawData: byte[] getBytes()>
SOURCE|<java.nio.channels.FileChannel: java.nio.channels.FileLock lock()>
SOURCE|<com.android.videoeditor.service.MovieMediaItem: int getAppVolume()>
SOURCE|<java.security.MessageDigest: java.lang.String toString()>
SOURCE|<com.android.internal.telephony.gsm.GSMPhone: java.lang.String getVoiceMailAlphaTag()>
SOURCE|<com.android.gallery3d.data.MediaSet: int getIndexOfItem(com.android.gallery3d.data.Path,int)>
SOURCE|<android.view.IWindowManager$Stub$Proxy: android.graphics.Bitmap screenshotApplications(android.os.IBinder,int,int,int)>
SOURCE|<android.net.EthernetDataTracker: java.lang.String getTcpBufferSizesPropName()>
SOURCE|<java.net.URLConnection: java.lang.String getContentType()>
SOURCE|<com.android.emailcommon.utility.SSLUtils$KeyChainKeyManager: java.security.PrivateKey getPrivateKey(java.lang.String)>
SOURCE|<org.xmlpull.v1.sax2.Driver: org.xml.sax.DTDHandler getDTDHandler()>
SOURCE|<com.android.mms.util.DraftCache: com.android.mms.util.DraftCache getInstance()>
SOURCE|<java.time.chrono.JapaneseEra: java.lang.String getDisplayName(java.time.format.TextStyle,java.util.Locale)>
SOURCE|<java.lang.ClassNotFoundException: java.lang.Throwable getException()>
SOURCE|<gov.nist.javax.sip.stack.SIPTransactionStack: gov.nist.core.net.AddressResolver getAddressResolver()>
SOURCE|<android.app.ApplicationPackageManager: java.util.List queryInstrumentation(java.lang.String,int)>
SOURCE|<com.android.server.TextServicesManagerService$TextServicesSettings: java.lang.String getSelectedSpellChecker()>
SOURCE|<java.nio.LongToByteBufferAdapter: java.nio.LongBuffer get(long[],int,int)>
SOURCE|<org.apache.harmony.xml.dom.InnerNodeImpl: void getElementsByTagName(org.apache.harmony.xml.dom.NodeListImpl,java.lang.String)>
SOURCE|<java.time.zone.ZoneOffsetTransitionRule: java.time.Month getMonth()>
SOURCE|<gov.nist.javax.sip.header.SIPHeaderList: java.lang.Object[] toArray(java.lang.Object[])>
SOURCE|<com.android.mms.MmsConfig: java.lang.String getEmailGateway()>
SOURCE|<org.apache.http.impl.client.AbstractAuthenticationHandler: java.util.List getAuthPreferences()>
SOURCE|<com.android.internal.os.BatteryStatsImpl: long getScreenOnTime(long,int)>
SOURCE|<gov.nist.javax.sip.stack.DefaultRouter: javax.sip.address.Hop getNextHop(javax.sip.message.Request)>
SOURCE|<org.apache.harmony.security.provider.cert.X509CertImpl: byte[] getTBSCertificate()>
SOURCE|<org.apache.harmony.security.x509.Certificate$1: java.lang.Object getDecodedObject(org.apache.harmony.security.asn1.BerInputStream)>
SOURCE|<com.android.contacts.util.ThemeUtils: int getAttribute(android.content.res.Resources$Theme,int)>
SOURCE|<com.android.org.bouncycastle.asn1.ASN1TaggedObject: com.android.org.bouncycastle.asn1.ASN1Primitive toDLObject()>
SOURCE|<com.android.internal.view.IInputMethodSession$Stub: android.os.IBinder asBinder()>
SOURCE|<android.widget.GridLayout: android.widget.GridLayout$LayoutParams getLayoutParams(android.view.View)>
SOURCE|<com.android.mms.dom.DocumentImpl: org.w3c.dom.Element getElementById(java.lang.String)>
SOURCE|<java.util.concurrent.locks.AbstractQueuedLongSynchronizer: java.util.Collection getSharedQueuedThreads()>
SOURCE|<org.apache.harmony.luni.lang.reflect.ImplForVariable: java.lang.reflect.GenericDeclaration getGenericDeclaration()>
SOURCE|<javax.crypto.spec.OAEPParameterSpec: javax.crypto.spec.PSource getPSource()>
SOURCE|<java.time.MonthDay: int getMonthValue()>
SOURCE|<java.util.concurrent.CompletableFuture: java.lang.Object get(long,java.util.concurrent.TimeUnit)>
SOURCE|<dalvik.system.profiler.HprofData: long getStartMillis()>
SOURCE|<org.apache.harmony.security.x509.Extensions$1: java.util.Collection getValues(java.lang.Object)>
SOURCE|<java.net.URLStreamHandler: int getDefaultPort()>
SOURCE|<com.android.providers.contacts.ContactsDatabaseHelper: com.android.providers.contacts.ContactsDatabaseHelper getInstance(android.content.Context)>
SOURCE|<gov.nist.javax.sip.header.ParametersHeader: float getParameterAsFloat(java.lang.String)>
SOURCE|<com.android.gallery3d.gadget.MediaSetSource: android.graphics.Bitmap getImage(int)>
SOURCE|<android.app.SearchableInfo: android.content.Context getActivityContext(android.content.Context)>
SOURCE|<org.apache.harmony.xnet.provider.jsse.OpenSSLRSAPrivateKey: org.apache.harmony.xnet.provider.jsse.OpenSSLKey getInstance(java.security.interfaces.RSAPrivateKey)>
SOURCE|<com.android.server.connectivity.Vpn: java.lang.String getTcpBufferSizesPropName()>
SOURCE|<com.android.videoeditor.service.MovieTheme: int getNameResId()>
SOURCE|<java.nio.ShortToByteBufferAdapter: short get()>
SOURCE|<android.view.View: android.view.ContextMenu$ContextMenuInfo getContextMenuInfo()>
SOURCE|<com.android.calendar.agenda.AgendaWindowAdapter: int getHeaderItemsNumber(int)>
SOURCE|<gov.nist.javax.sip.NistSipMessageFactoryImpl: gov.nist.javax.sip.stack.ServerRequestInterface newSIPServerRequest(gov.nist.javax.sip.message.SIPRequest,gov.nist.javax.sip.stack.MessageChannel)>
SOURCE|<android.telephony.NeighboringCellInfo: int getPsc()>
SOURCE|<com.android.server.DevicePolicyManagerService$ActiveAdmin: int getUid()>
SOURCE|<android.renderscript.Allocation: android.renderscript.Allocation createFromBitmap(android.renderscript.RenderScript,android.graphics.Bitmap)>
SOURCE|<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl getActiveStatistics()>
SOURCE|<java.util.concurrent.locks.ReentrantReadWriteLock: java.util.Collection getQueuedReaderThreads()>
SOURCE|<java.nio.DatagramChannelImpl$DatagramSocketAdapter: int getPort()>
SOURCE|<org.apache.harmony.security.x509.TBSCertificate: boolean[] getIssuerUniqueID()>
SOURCE|<android.provider.Browser: java.lang.String[] getVisitedHistory(android.content.ContentResolver)>
SOURCE|<com.google.android.picasasync.UploadTaskEntry: android.net.Uri getContentUri()>
SOURCE|<android.webkit.AccessibilityInjectorFallback$AccessibilityWebContentKeyBinding: int getThirdArgument(int)>
SOURCE|<android.graphics.drawable.RotateDrawable: android.graphics.drawable.Drawable$ConstantState getConstantState()>
SOURCE|<android.app.WallpaperManager: int getDesiredMinimumWidth()>
SOURCE|<com.google.android.picasasync.Authorizer: java.lang.String getAuthToken(java.lang.String)>
SOURCE|<android.content.res.XmlBlock$Parser: java.lang.String getNamespaceUri(int)>
SOURCE|<android.widget.SimpleAdapter: java.lang.Object getItem(int)>
SOURCE|<java.nio.CharBuffer: java.nio.CharBuffer get(char[],int,int)>
SOURCE|<android.app.ApplicationPackageManager: android.content.res.Resources getResourcesForActivity(android.content.ComponentName)>
SOURCE|<org.apache.harmony.xml.parsers.DocumentBuilderFactoryImpl: boolean getFeature(java.lang.String)>
SOURCE|<android.app.Fragment: boolean getRetainInstance()>
SOURCE|<java.lang.reflect.Field: float getFloat(java.lang.Object)>
SOURCE|<com.android.browser.BrowserHistoryPage$HistoryAdapter: android.view.View getChildView(int,int,boolean,android.view.View,android.view.ViewGroup)>
SOURCE|<com.android.deskclock.widget.multiwaveview.PointCloud$WaveManager: float getRadius()>
SOURCE|<java.security.cert.X509CRL: javax.security.auth.x500.X500Principal getIssuerX500Principal()>
SOURCE|<org.apache.harmony.security.x509.CertificateIssuer: javax.security.auth.x500.X500Principal getIssuer()>
SOURCE|<java.lang.reflect.Method: java.lang.'annotation'.Annotation getAnnotation(java.lang.Class)>
SOURCE|<android.widget.TextView: int getCompoundPaddingTop()>
SOURCE|<android.webkit.WebIconDatabaseClassic: android.webkit.WebIconDatabaseClassic getInstance()>
SOURCE|<com.android.email.ControllerResultUiThreadWrapper: com.android.email.Controller$Result getWrappee()>
SOURCE|<com.android.bluetooth.a2dp.A2dpService: int getPriority(android.bluetooth.BluetoothDevice)>
SOURCE|<com.android.server.AppWidgetService: int[] getAppWidgetIdsForHost(int)>
SOURCE|<android.webkit.L10nUtils: java.lang.String getLocalisedString(int)>
SOURCE|<android.graphics.PathMeasure: float getLength()>
SOURCE|<java.nio.ServerSocketChannelImpl: java.io.FileDescriptor getFD()>
SOURCE|<com.android.internal.os.BatteryStatsImpl: long getBatteryUptime(long)>
SOURCE|<java.util.ServiceLoader: java.util.Iterator iterator()>
SOURCE|<android.widget.ListPopupWindow: int getAnimationStyle()>
SOURCE|<android.view.ViewRootImpl: android.view.View getAccessibilityFocusedHost()>
SOURCE|<android.mtp.MtpObjectInfo: int getAssociationDesc()>
SOURCE|<com.android.internal.os.BatteryStatsImpl: long getAwakeTimeBattery()>
SOURCE|<gov.nist.javax.sip.header.ParametersHeader: java.lang.Object clone()>
SOURCE|<com.android.internal.telephony.PhoneSubInfoProxy: java.lang.String getIccSerialNumber()>
SOURCE|<com.android.contacts.voicemail.VoicemailPlaybackPresenter$FetchResultHandler: java.lang.Runnable getTimeoutRunnable()>
SOURCE|<com.google.common.collect.ImmutableSortedMap: java.util.Comparator unsafeComparator()>
SOURCE|<android.net.LocalSocketAddress$Namespace: int getId()>
SOURCE|<android.view.inputmethod.InputMethodSubtype: java.lang.CharSequence getDisplayName(android.content.Context,java.lang.String,android.content.pm.ApplicationInfo)>
SOURCE|<java.util.concurrent.atomic.AtomicLong: long getAndAdd(long)>
SOURCE|<javax.crypto.Cipher: java.security.Provider getProvider()>
SOURCE|<java.nio.HeapByteBuffer: double getDouble(int)>
SOURCE|<android.text.Layout: float getLineRight(int)>
SOURCE|<java.sql.DriverManager: java.sql.Connection getConnection(java.lang.String,java.util.Properties)>
SOURCE|<java.time.format.DateTimeFormatter: java.time.ZoneId getZone()>
SOURCE|<android.telephony.TelephonyManager: int getCdmaEriIconMode()>
SOURCE|<android.provider.Settings$Secure: int getInt(android.content.ContentResolver,java.lang.String,int)>
SOURCE|<com.android.providers.contacts.VoicemailContentProvider$UriData: java.lang.String getWhereClause()>
SOURCE|<android.widget.AdapterViewAnimator: android.animation.ObjectAnimator getInAnimation()>
SOURCE|<android.location.INetInitiatedListener$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
SOURCE|<com.android.internal.telephony.cdma.RuimSmsInterfaceManager: java.util.List access$202(com.android.internal.telephony.cdma.RuimSmsInterfaceManager,java.util.List)>
SOURCE|<com.google.android.mms.pdu.EncodedStringValue: int getCharacterSet()>
SOURCE|<org.apache.harmony.security.asn1.ASN1Oid: org.apache.harmony.security.asn1.ASN1Oid getInstance()>
SOURCE|<java.text.DateFormatSymbols: java.lang.String[][] getZoneStrings()>
SOURCE|<android.view.View: int getLeftPaddingOffset()>
SOURCE|<android.telephony.CellIdentityLte: int getMcc()>
SOURCE|<com.android.internal.location.ILocationProvider$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
SOURCE|<android.graphics.drawable.ColorDrawable: android.graphics.drawable.Drawable$ConstantState getConstantState()>
SOURCE|<com.google.android.mms.pdu.PduComposer$PositionMarker: int getLength()>
SOURCE|<org.apache.http.params.HttpProtocolParams: java.nio.charset.CodingErrorAction getMalformedInputAction(org.apache.http.params.HttpParams)>
SOURCE|<com.android.mms.dom.smil.SmilDocumentImpl: short getFill()>
SOURCE|<com.android.contacts.list.ContactListItemView: android.widget.TextView getPhoneticNameTextView()>
SOURCE|<gov.nist.javax.sip.stack.SIPTransactionErrorEvent: int getErrorID()>
SOURCE|<libcore.net.http.HttpConnection$Address: java.net.Proxy getProxy()>
SOURCE|<com.android.email.mail.transport.CountingOutputStream: long getCount()>
SOURCE|<android.media.videoeditor.AudioTrack: int getAudioChannels()>
SOURCE|<com.android.launcher2.LauncherApplication: int getLongPressTimeout()>
SOURCE|<android.content.SyncStorageEngine: java.util.ArrayList getPendingOperations()>
SOURCE|<android.provider.Settings$Secure: float getFloatForUser(android.content.ContentResolver,java.lang.String,int)>
SOURCE|<com.android.contacts.model.account.ExchangeAccountType: com.android.contacts.model.dataitem.DataKind addDataKindOrganization(android.content.Context)>
SOURCE|<com.android.gallery3d.picasasource.PicasaImage: android.net.Uri getContentUri()>
SOURCE|<com.android.camera.Util: int getCameraOrientation(int)>
SOURCE|<com.android.server.pm.PackageManagerService: java.lang.String getApkName(java.lang.String)>
SOURCE|<com.android.gallery3d.ui.TiledScreenNail: com.android.gallery3d.ui.TiledTexture getTexture()>
SOURCE|<android.hardware.Camera$Parameters: int getMaxNumDetectedFaces()>
SOURCE|<javax.net.ssl.DefaultSSLSocketFactory: java.lang.String[] getSupportedCipherSuites()>
SOURCE|<android.provider.ContactsContract$Contacts: java.io.InputStream openContactPhotoInputStream(android.content.ContentResolver,android.net.Uri,boolean)>
SOURCE|<java.time.zone.ZoneOffsetTransitionRule: int getDayOfMonthIndicator()>
SOURCE|<com.android.browser.BrowserSettings: java.lang.String getPreloadEnabled()>
SOURCE|<android.provider.MediaStore$Video$Thumbnails: android.graphics.Bitmap getThumbnail(android.content.ContentResolver,long,long,int,android.graphics.BitmapFactory$Options)>
SOURCE|<android.view.Display: java.lang.String getAddress()>
SOURCE|<com.android.contacts.detail.ContactDetailFragment$InvitableAccountTypesAdapter: com.android.contacts.model.account.AccountType getItem(int)>
SOURCE|<android.provider.CalendarContract$Instances: android.database.Cursor query(android.content.ContentResolver,java.lang.String[],long,long)>
SOURCE|<com.android.camera.VideoModule$VideoNamer: android.net.Uri getUri()>
SOURCE|<com.android.launcher2.Launcher: com.android.launcher2.SearchDropTargetBar getSearchBar()>
SOURCE|<android.widget.ActivityChooserView$ActivityChooserViewAdapter: int getItemViewType(int)>
SOURCE|<android.telephony.TelephonyManager: java.lang.String getSimOperator()>
SOURCE|<android.content.pm.RegisteredServicesCache: java.util.Collection getAllServices(int)>
SOURCE|<com.android.contacts.editor.AggregationSuggestionEngine: android.os.Handler getHandler()>
SOURCE|<com.android.launcher2.AppsCustomizeTabHost: com.android.launcher2.AppsCustomizePagedView$ContentType getContentTypeForTabTag(java.lang.String)>
SOURCE|<org.apache.harmony.security.pkcs7.SignerInfo: java.lang.String getDigestAlgorithm()>
SOURCE|<com.android.gallery3d.common.EntrySchema: java.lang.String getTableName()>
SOURCE|<java.nio.charset.UnmappableCharacterException: java.lang.String getMessage()>
SOURCE|<com.android.internal.app.ActionBarImpl: int getTabCount()>
SOURCE|<com.android.email.service.PopImapAuthenticatorService$PopImapAuthenticator: java.lang.String getAuthTokenLabel(java.lang.String)>
SOURCE|<java.time.ZonedDateTime: int getMonthValue()>
SOURCE|<android.app.SearchableInfo: java.lang.String getSuggestAuthority()>
SOURCE|<com.android.email.provider.ContentCache$CacheToken: java.lang.String getId()>
SOURCE|<gov.nist.javax.sip.address.SipUri: gov.nist.javax.sip.address.Authority getAuthority()>
SOURCE|<android.webkit.AccessibilityInjectorFallback$AccessibilityWebContentKeyBinding: int getModifiers()>
SOURCE|<android.widget.Editor$SuggestionsPopupWindow: int getVerticalLocalPosition(int)>
SOURCE|<org.apache.harmony.xml.dom.InnerNodeImpl: org.w3c.dom.NodeList getChildNodes()>
SOURCE|<android.app.ActivityManagerProxy: int getPackageScreenCompatMode(java.lang.String)>
SOURCE|<com.android.mms.dom.smil.SmilLayoutElementImpl: org.w3c.dom.smil.SMILRootLayoutElement getRootLayout()>
SOURCE|<android.content.pm.RegisteredServicesCache: android.content.pm.RegisteredServicesCache$ServiceInfo getServiceInfo(java.lang.Object,int)>
SOURCE|<org.apache.harmony.xnet.provider.jsse.SSLServerSocketImpl: java.lang.String[] getEnabledCipherSuites()>
SOURCE|<java.security.KeyStore$PasswordProtection: char[] getPassword()>
SOURCE|<android.view.View: int getTextDirection()>
SOURCE|<android.app.ActivityGroup: android.app.LocalActivityManager getLocalActivityManager()>
SOURCE|<android.provider.Settings$System: long getLong(android.content.ContentResolver,java.lang.String)>
SOURCE|<com.android.mms.dom.DocumentImpl: org.w3c.dom.NodeList getElementsByTagNameNS(java.lang.String,java.lang.String)>
SOURCE|<com.android.inputmethod.latin.ResourceUtils: float getDimensionOrFraction(android.content.res.TypedArray,int,int,float)>
SOURCE|<android.view.GLES20Canvas: android.graphics.DrawFilter getDrawFilter()>
SOURCE|<android.widget.CalendarView$WeekView: int getMonthOfLastWeekDay()>
SOURCE|<android.provider.MediaStore$Images$Thumbnails: android.database.Cursor queryMiniThumbnails(android.content.ContentResolver,android.net.Uri,int,java.lang.String[])>
SOURCE|<android.graphics.drawable.ColorDrawable: int getChangingConfigurations()>
SOURCE|<libcore.net.http.RawHeaders: java.lang.String getValue(int)>
SOURCE|<org.apache.harmony.security.x501.DirectoryString$1: java.lang.Object getObjectToEncode(java.lang.Object)>
SOURCE|<com.android.internal.util.TypedProperties: double getDouble(java.lang.String,double)>
SOURCE|<com.android.internal.appwidget.IAppWidgetService$Stub$Proxy: android.appwidget.AppWidgetProviderInfo getAppWidgetInfo(int)>
SOURCE|<com.android.browser.TabScrollView: int getScroll()>
SOURCE|<android.view.View: int getPaddingTop()>
SOURCE|<com.android.contacts.util.WeakAsyncTask: java.lang.Object doInBackground(java.lang.Object[])>
SOURCE|<gov.nist.javax.sip.header.MinExpires: int getExpires()>
SOURCE|<javax.crypto.Cipher: int getMaxAllowedKeyLength(java.lang.String)>
SOURCE|<android.database.AbstractWindowedCursor: double getDouble(int)>
SOURCE|<android.view.IWindowManager$Stub$Proxy: float[] getAnimationScales()>
SOURCE|<android.media.AudioService: int getValueForVibrateSetting(int,int,int)>
SOURCE|<com.android.internal.os.BatteryStatsImpl: long getBatteryRealtimeLocked(long)>
SOURCE|<org.apache.http.protocol.BasicHttpProcessor: org.apache.http.HttpRequestInterceptor getRequestInterceptor(int)>
SOURCE|<com.android.contacts.ContactPhotoManager: com.android.contacts.ContactPhotoManager getInstance(android.content.Context)>
SOURCE|<org.apache.http.auth.UsernamePasswordCredentials: java.lang.String getUserName()>
SOURCE|<android.filterfw.core.FilterContext: android.filterfw.core.Frame fetchFrame(java.lang.String)>
SOURCE|<android.net.http.Request: android.net.http.EventHandler getEventHandler()>
SOURCE|<android.hardware.input.KeyboardLayout: java.lang.String getDescriptor()>
SOURCE|<java.net.InetAddress: java.net.InetAddress getLocalHost()>
SOURCE|<org.apache.http.protocol.BasicHttpContext: java.lang.Object getAttribute(java.lang.String)>
SOURCE|<com.android.org.bouncycastle.asn1.BEROctetStringParser: com.android.org.bouncycastle.asn1.ASN1Primitive getLoadedObject()>
SOURCE|<android.widget.Scroller: int getStartY()>
SOURCE|<android.test.mock.MockContext: java.io.File getFilesDir()>
SOURCE|<com.android.gallery3d.data.Path: java.lang.String getPrefix()>
SOURCE|<android.graphics.drawable.ShapeDrawable: int getIntrinsicHeight()>
SOURCE|<org.apache.http.impl.conn.tsccm.RouteSpecificPool: int getCapacity()>
SOURCE|<com.android.calendar.Utils: int getSharedPreference(android.content.Context,java.lang.String,int)>
SOURCE|<android.net.http.AndroidHttpClient: long getMinGzipSize(android.content.ContentResolver)>
SOURCE|<android.net.IThrottleManager$Stub$Proxy: int getThrottle(java.lang.String)>
SOURCE|<android.text.Layout: android.text.TextDirectionHeuristic getTextDirectionHeuristic()>
SOURCE|<com.android.mms.ui.IconListAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)>
SOURCE|<libcore.net.http.ResponseHeaders: java.util.Date getExpires()>
SOURCE|<android.media.videoeditor.Effect: android.media.videoeditor.MediaItem getMediaItem()>
SOURCE|<android.app.SearchManager: java.util.List getGlobalSearchActivities()>
SOURCE|<com.android.contacts.test.InjectedServices: java.lang.Object getSystemService(java.lang.String)>
SOURCE|<com.android.internal.policy.impl.keyguard.SlidingChallengeLayout$1: java.lang.Float get(com.android.internal.policy.impl.keyguard.SlidingChallengeLayout)>
SOURCE|<com.android.gallery3d.data.LocalVideo: com.android.gallery3d.data.MediaDetails getDetails()>
SOURCE|<com.android.contacts.dialpad.DialpadFragment$ErrorDialogFragment: android.app.Dialog onCreateDialog(android.os.Bundle)>
SOURCE|<android.net.wifi.WifiStateTracker: java.lang.String getTcpBufferSizesPropName()>
SOURCE|<android.accounts.AccountAuthenticatorCache: android.content.pm.RegisteredServicesCache$ServiceInfo getServiceInfo(android.accounts.AuthenticatorDescription,int)>
SOURCE|<org.apache.harmony.xml.ExpatAttributes: java.lang.String getURI(int)>
SOURCE|<gov.nist.javax.sip.parser.StringMsgParser: gov.nist.javax.sip.header.SIPHeader parseSIPHeader(java.lang.String)>
SOURCE|<java.lang.Byte: byte parseByte(java.lang.String)>
SOURCE|<org.apache.harmony.xml.ExpatAttributes: java.lang.String getType(java.lang.String)>
SOURCE|<android.os.ISchedulingPolicyService$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
SOURCE|<android.text.format.DateUtils: java.lang.String getStandaloneMonthString(int,int)>
SOURCE|<java.util.LongSummaryStatistics: double getAverage()>
SOURCE|<org.apache.harmony.security.asn1.ASN1BitString: java.lang.Object getDecodedObject(org.apache.harmony.security.asn1.BerInputStream)>
SOURCE|<com.android.internal.telephony.cdma.CdmaCallTracker: com.android.internal.telephony.cdma.CdmaConnection getConnectionByIndex(com.android.internal.telephony.cdma.CdmaCall,int)>
SOURCE|<com.android.browser.ErrorConsoleView$ErrorConsoleListView$ErrorConsoleMessageList: java.lang.Object getItem(int)>
SOURCE|<android.app.admin.DevicePolicyManager: int getPasswordMinimumNumeric(android.content.ComponentName)>
SOURCE|<java.net.Authenticator: java.lang.String getRequestingHost()>
SOURCE|<com.android.internal.telephony.cdma.CdmaConnection: com.android.internal.telephony.UUSInfo getUUSInfo()>
SOURCE|<com.android.internal.telephony.ApnContext: int getRetryCount()>
SOURCE|<android.speech.tts.TextToSpeechService$SpeechItem: java.lang.Object getCallerIdentity()>
SOURCE|<java.util.GregorianCalendar: int getActualMinimum(int)>
SOURCE|<com.android.internal.widget.LockPatternUtils: int getCurrentUser()>
SOURCE|<com.android.contacts.util.ImageViewDrawableSetter: android.widget.ImageView getTarget()>
SOURCE|<com.android.launcher2.IconCache: android.graphics.Bitmap getIcon(android.content.ComponentName,android.content.pm.ResolveInfo,java.util.HashMap)>
SOURCE|<com.coremedia.iso.boxes.TrackHeaderBox: double getWidth()>
SOURCE|<com.android.email.Throttle: long getLastEventTimeForTest()>
SOURCE|<android.text.method.CharacterPickerDialog$OptionsAdapter: java.lang.Object getItem(int)>
SOURCE|<org.apache.harmony.security.pkcs7.ContentInfo$1: java.lang.Object getDecodedObject(org.apache.harmony.security.asn1.BerInputStream)>
SOURCE|<com.android.launcher2.Workspace$WallpaperOffsetInterpolator: float getCurrY()>
SOURCE|<java.time.format.DateTimeFormatterBuilder: java.time.format.DateTimeFormatterBuilder parseDefaulting(java.time.temporal.TemporalField,long)>
SOURCE|<android.view.InputDevice: int getKeyboardType()>
SOURCE|<android.content.SyncStorageEngine: long getDelayUntilTime(android.accounts.Account,int,java.lang.String)>
SOURCE|<com.android.server.accessibility.TouchExplorer$ReceivedPointerTracker: int getLastReceivedDownEdgeFlags()>
SOURCE|<com.android.exchange.AbstractSyncService: java.lang.Object getSynchronizer()>
SOURCE|<com.android.internal.util.StateMachine: java.lang.String getLogRecString(android.os.Message)>
SOURCE|<android.provider.MediaStore$Files: android.net.Uri getMtpObjectsUri(java.lang.String,long)>
SOURCE|<gov.nist.javax.sip.stack.SIPTransaction: gov.nist.javax.sip.stack.SIPTransactionStack getSIPStack()>
SOURCE|<java.lang.reflect.Field: long getLong(java.lang.Object)>
SOURCE|<org.apache.harmony.xml.dom.DOMConfigurationImpl$9: java.lang.Object get(org.apache.harmony.xml.dom.DOMConfigurationImpl)>
SOURCE|<com.android.gallery3d.data.MediaSet: int getMediaItemCount()>
SOURCE|<android.app.ActivityManager: android.os.Debug$MemoryInfo[] getProcessMemoryInfo(int[])>
SOURCE|<android.inputmethodservice.Keyboard: java.util.List getModifierKeys()>
SOURCE|<java.time.chrono.HijrahChronology: long getEpochDay(int,int,int)>
SOURCE|<android.webkit.WebHistoryItemClassic: android.graphics.Bitmap getFavicon()>
SOURCE|<android.widget.CalendarView: int getSelectedWeekBackgroundColor()>
SOURCE|<com.android.gallery3d.data.MtpDevice: int getMediaItemCount()>
SOURCE|<com.android.inputmethod.latin.ImfUtils: android.view.inputmethod.InputMethodSubtype getCurrentInputMethodSubtype(android.content.Context,android.view.inputmethod.InputMethodSubtype)>
SOURCE|<android.app.IUserSwitchObserver$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
SOURCE|<com.android.server.sip.SipSessionGroup$MakeCallCommand: int getTimeout()>
SOURCE|<com.android.internal.telephony.gsm.GSMPhone: com.android.internal.telephony.Call getRingingCall()>
SOURCE|<com.android.internal.util.TypedProperties: int getStringInfo(java.lang.String)>
SOURCE|<org.apache.harmony.xnet.provider.jsse.OpenSSLRSAPrivateCrtKey: java.math.BigInteger getPrimeQ()>
SOURCE|<javax.crypto.KeyAgreement: javax.crypto.KeyAgreement getInstance(java.lang.String,java.security.Provider)>
SOURCE|<com.android.mms.dom.AttrImpl: java.lang.String getName()>
SOURCE|<org.apache.http.util.VersionInfo: org.apache.http.util.VersionInfo loadVersionInfo(java.lang.String,java.lang.ClassLoader)>
SOURCE|<edu.wayne.cs.ParentClass: java.lang.String source(android.content.Context)>
SOURCE|<android.view.animation.Animation: int getZAdjustment()>
SOURCE|<com.android.gallery3d.exif.ExifTag: int getDataSize()>
SOURCE|<android.test.mock.MockCursor: float getFloat(int)>
SOURCE|<gov.nist.javax.sip.header.Via: java.lang.String getProtocolVersion()>
SOURCE|<com.google.common.collect.ForwardingMultimap: java.util.Collection removeAll(java.lang.Object)>
SOURCE|<android.webkit.WebView: android.webkit.WebView$HitTestResult getHitTestResult()>
SOURCE|<org.apache.harmony.xml.dom.AttrImpl: java.lang.String getNamespaceURI()>
SOURCE|<org.xml.sax.helpers.LocatorImpl: java.lang.String getSystemId()>
SOURCE|<android.widget.FastScroller: android.widget.SectionIndexer getSectionIndexer()>
SOURCE|<javax.crypto.spec.DHPublicKeySpec: java.math.BigInteger getY()>
SOURCE|<android.widget.ListPopupWindow: android.graphics.drawable.Drawable getBackground()>
SOURCE|<gov.nist.javax.sip.message.SIPRequest: java.util.LinkedList getMessageAsEncodedStrings()>
SOURCE|<org.apache.harmony.security.x509.AlternativeName: byte[] getEncoded()>
SOURCE|<java.security.AlgorithmParameters: java.security.AlgorithmParameters getInstance(java.lang.String,java.security.Provider)>
SOURCE|<com.android.contacts.widget.IndexerListAdapter: int getPinnedHeaderCount()>
SOURCE|<org.apache.harmony.security.asn1.ASN1Boolean: java.lang.Object getDecodedObject(org.apache.harmony.security.asn1.BerInputStream)>
SOURCE|<android.webkit.WebSettings: int getDefaultFixedFontSize()>
SOURCE|<com.android.contacts.list.CustomContactListFilterActivity: int getSyncMode(com.android.contacts.list.CustomContactListFilterActivity$AccountDisplay)>
SOURCE|<com.google.common.collect.MapMakerInternalMap$SoftExpirableEvictableEntry: long getExpirationTime()>
SOURCE|<com.android.mms.transaction.TransactionState: int getState()>
SOURCE|<com.android.internal.telephony.UiccCardApplication: com.android.internal.telephony.IccCardApplicationStatus$PersoSubState getPersoSubState()>
SOURCE|<android.net.sip.SipManager: android.net.sip.SipSession getSessionFor(android.content.Intent)>
SOURCE|<libcore.icu.ICU: java.util.Locale[] getAvailableDateFormatSymbolsLocales()>
SOURCE|<java.text.DecimalFormat: int getMinimumIntegerDigits()>
SOURCE|<com.android.i18n.phonenumbers.geocoding.PhoneNumberOfflineGeocoder: java.lang.String getDescriptionForValidNumber(com.android.i18n.phonenumbers.Phonenumber$PhoneNumber,java.util.Locale,java.lang.String)>
SOURCE|<com.android.internal.telephony.ISms$Stub: com.android.internal.telephony.ISms asInterface(android.os.IBinder)>
SOURCE|<com.android.internal.policy.PolicyManager: android.view.Window makeNewWindow(android.content.Context)>
SOURCE|<java.net.DatagramSocket: int getSendBufferSize()>
SOURCE|<android.provider.SyncStateContract$Helpers: android.util.Pair getWithUri(android.content.ContentProviderClient,android.net.Uri,android.accounts.Account)>
SOURCE|<com.android.gallery3d.filtershow.imageshow.ImageGeometry: android.graphics.Matrix getGeoMatrix(android.graphics.RectF,boolean)>
SOURCE|<android.graphics.Bitmap: byte[] getNinePatchChunk()>
SOURCE|<android.database.CursorWrapper: int getCount()>
SOURCE|<org.apache.commons.logging.LogFactory: org.apache.commons.logging.LogFactory getFactory()>
SOURCE|<android.drm.mobile1.DrmConstraintInfo: java.util.Date getStartDate()>
SOURCE|<android.test.mock.MockPackageManager: android.content.pm.PackageInfo getPackageArchiveInfo(java.lang.String,int)>
SOURCE|<org.apache.harmony.xml.dom.DOMImplementationImpl: java.lang.Object getFeature(java.lang.String,java.lang.String)>
SOURCE|<android.media.TimedText: java.lang.String getText()>
SOURCE|<org.apache.harmony.luni.lang.reflect.ImplForType: java.lang.reflect.Type getResolvedType()>
SOURCE|<com.android.camera.PhotoModule$ImageNamer: java.lang.String getTitle()>
SOURCE|<android.view.ViewGroup: int getDescendantFocusability()>
SOURCE|<android.telephony.SmsMessage: java.lang.String getDisplayOriginatingAddress()>
SOURCE|<android.graphics.drawable.Drawable: int getIntrinsicHeight()>
SOURCE|<android.app.ActivityOptions: int getStartHeight()>
SOURCE|<com.android.internal.telephony.PhoneProxy: java.util.List getPendingMmiCodes()>
SOURCE|<java.text.DecimalFormat: boolean isParseBigDecimal()>
SOURCE|<gov.nist.javax.sip.stack.SIPServerTransaction: gov.nist.javax.sip.message.SIPResponse getReliableProvisionalResponse()>
SOURCE|<android.content.Intent: int[] getIntArrayExtra(java.lang.String)>
SOURCE|<android.gesture.GestureStore: java.util.ArrayList recognize(android.gesture.Gesture)>
SOURCE|<com.android.internal.telephony.sip.SipPhone: java.lang.String getVoiceMailAlphaTag()>
SOURCE|<android.graphics.drawable.AnimatedRotateDrawable: android.graphics.drawable.Drawable getDrawable()>
SOURCE|<com.android.internal.telephony.OperatorInfo: com.android.internal.telephony.OperatorInfo$State getState()>
SOURCE|<com.google.common.collect.EmptyImmutableMap: java.lang.Object get(java.lang.Object)>
SOURCE|<com.android.internal.telephony.cdma.RuimRecords: byte[] access$100(com.android.internal.telephony.cdma.RuimRecords)>
SOURCE|<android.service.wallpaper.WallpaperService$Engine: int getDesiredMinimumHeight()>
SOURCE|<com.android.providers.contacts.AccountWithDataSet: java.lang.String getAccountName()>
SOURCE|<java.time.zone.ZoneOffsetTransitionRule: java.time.LocalTime getLocalTime()>
SOURCE|<java.lang.Double: double parseDouble(java.lang.String)>
SOURCE|<android.os.IUpdateLock$Stub: android.os.IBinder asBinder()>
SOURCE|<android.view.IOnKeyguardExitResult$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
SOURCE|<java.security.spec.X509EncodedKeySpec: java.lang.String getFormat()>
SOURCE|<android.nfc.tech.MifareClassic: android.nfc.tech.MifareClassic get(android.nfc.Tag)>
SOURCE|<android.speech.tts.TextToSpeech: java.util.List getEngines()>
SOURCE|<com.android.server.NetworkManagementService: android.net.NetworkStats getNetworkStatsUidDetail(int)>
SOURCE|<com.android.internal.appwidget.IAppWidgetService$Stub$Proxy: int[] getAppWidgetIds(android.content.ComponentName)>
SOURCE|<android.content.res.Resources: void finishPreloading()>
SOURCE|<com.google.common.collect.MapMaker$NullConcurrentMap: java.lang.Object get(java.lang.Object)>
SOURCE|<android.media.RingtoneManager: android.net.Uri getDefaultUri(int)>
SOURCE|<com.android.inputmethod.latin.UserHistoryDictionary: java.util.ArrayList getWordsInner(com.android.inputmethod.latin.WordComposer,java.lang.CharSequence,com.android.inputmethod.keyboard.ProximityInfo)>
SOURCE|<android.text.Layout: int getLineForVertical(int)>
SOURCE|<android.media.videoeditor.OverlayFrame: int getOverlayFrameHeight()>
SOURCE|<com.android.contacts.model.dataitem.WebsiteDataItem: java.lang.String getUrl()>
SOURCE|<com.android.bluetooth.opp.BluetoothOppPreference: com.android.bluetooth.opp.BluetoothOppPreference getInstance(android.content.Context)>
SOURCE|<com.android.inputmethod.keyboard.internal.KeySpecParser: int getCode(java.lang.String,com.android.inputmethod.keyboard.internal.KeyboardCodesSet)>
SOURCE|<android.test.mock.MockCursor: int getCount()>
SOURCE|<java.security.DomainLoadStoreParameter: java.net.URI getConfiguration()>
SOURCE|<java.lang.Thread: java.lang.StackTraceElement[] getStackTrace()>
SOURCE|<java.text.AttributedString$AttributedIterator: java.lang.Object getAttribute(java.text.AttributedCharacterIterator$Attribute)>
SOURCE|<android.graphics.drawable.InsetDrawable: boolean getPadding(android.graphics.Rect)>
SOURCE|<android.graphics.drawable.Drawable: android.graphics.drawable.Drawable createFromStream(java.io.InputStream,java.lang.String)>
SOURCE|<android.hardware.Sensor: float getPower()>
SOURCE|<java.util.concurrent.ThreadPoolExecutor: java.util.concurrent.BlockingQueue getQueue()>
SOURCE|<android.widget.Gallery: int getChildDrawingOrder(int,int)>
SOURCE|<javax.net.ssl.SSLSocketFactory: javax.net.SocketFactory getDefault()>
SOURCE|<gov.nist.javax.sip.header.ContentType: java.lang.String getMediaSubType()>
SOURCE|<android.os.HandlerThread: android.os.Looper getLooper()>
SOURCE|<android.text.TextUtils: int getOffsetBefore(java.lang.CharSequence,int)>
SOURCE|<android.hardware.usb.UsbDevice: int getDeviceSubclass()>
SOURCE|<android.accessibilityservice.IAccessibilityServiceClient$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
SOURCE|<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: org.apache.http.impl.conn.tsccm.RouteSpecificPool getRoutePool(org.apache.http.conn.routing.HttpRoute,boolean)>
SOURCE|<android.view.MotionEvent: float getToolMajor(int)>
SOURCE|<com.android.nfc.dhimpl.NativeNfcManager: int getTimeout(int)>
SOURCE|<com.android.mms.dom.AttrImpl: java.lang.String getValue()>
SOURCE|<com.android.server.accessibility.AccessibilityManagerService: java.util.List getEnabledAccessibilityServiceList(int,int)>
SOURCE|<com.android.inputmethod.latin.VibratorUtils: com.android.inputmethod.latin.VibratorUtils getInstance(android.content.Context)>
SOURCE|<gov.nist.javax.sip.header.TimeStamp: float getDelay()>
SOURCE|<javax.net.ssl.HttpsURLConnection: java.security.Principal getLocalPrincipal()>
SOURCE|<android.content.pm.LabeledIntent: java.lang.CharSequence getNonLocalizedLabel()>
SOURCE|<java.lang.SecurityManager: java.lang.ThreadGroup getThreadGroup()>
SOURCE|<java.util.ArrayList: java.lang.Object get(int)>
SOURCE|<java.net.URL: java.lang.String getProtocol()>
SOURCE|<android.app.backup.BackupManager: int requestRestore(android.app.backup.RestoreObserver)>
SOURCE|<org.apache.harmony.security.x509.AccessDescription: byte[] getEncoded()>
SOURCE|<org.apache.harmony.security.x509.NameConstraints: byte[] getEncoded()>
SOURCE|<javax.crypto.Cipher: byte[] getIV()>
SOURCE|<android.graphics.drawable.ColorDrawable: int getColor()>
SOURCE|<java.security.KeyPairGenerator: java.security.KeyPairGenerator getInstance(java.lang.String,java.security.Provider)>
SOURCE|<com.android.emailcommon.internet.MimeBodyPart: java.lang.String getMimeType()>
SOURCE|<android.webkit.CookieManagerClassic: java.lang.String getCookie(android.net.WebAddress)>
SOURCE|<android.net.Uri$OpaqueUri: java.lang.String getScheme()>
SOURCE|<org.xml.sax.helpers.XMLFilterImpl: org.xml.sax.ContentHandler getContentHandler()>
SOURCE|<com.android.inputmethod.latin.SynchronouslyLoadedContactsBinaryDictionary: java.util.ArrayList getSuggestions(com.android.inputmethod.latin.WordComposer,java.lang.CharSequence,com.android.inputmethod.keyboard.ProximityInfo)>
SOURCE|<android.filterfw.core.Filter: android.filterfw.core.FrameFormat getOutputFormat(java.lang.String,android.filterfw.core.FrameFormat)>
SOURCE|<android.hardware.Camera$Parameters: int getPictureFormat()>
SOURCE|<android.view.InputDevice$MotionRange: float getFlat()>
SOURCE|<com.android.browser.BrowserBookmarksPage: android.graphics.Bitmap getBitmap(android.database.Cursor,int)>
SOURCE|<android.widget.TextView: boolean getDefaultEditable()>
SOURCE|<android.webkit.ZoomManager: float getInvScale()>
SOURCE|<android.mtp.MtpDeviceInfo: java.lang.String getSerialNumber()>
SOURCE|<com.android.phone.PhoneGlobals: com.android.phone.Ringer getRinger()>
SOURCE|<java.time.OffsetDateTime: int getSecond()>
SOURCE|<java.lang.ClassLoader: java.lang.Class findLoadedClass(java.lang.String)>
SOURCE|<com.android.browser.WebStorageSizeManager: long getAppCacheMaxSize()>
SOURCE|<com.android.videoeditor.util.ImageUtils: android.graphics.Bitmap buildOverlayBitmap(android.content.Context,android.graphics.Bitmap,int,java.lang.String,java.lang.String,int,int)>
SOURCE|<android.bluetooth.BluetoothHeadset: java.util.List getConnectedDevices()>
SOURCE|<com.android.gallery3d.data.MediaObject: com.android.gallery3d.data.Path getPath()>
SOURCE|<android.app.ActivityManagerProxy: java.lang.String getPackageForIntentSender(android.content.IIntentSender)>
SOURCE|<gov.nist.javax.sip.address.Authority: gov.nist.javax.sip.address.UserInfo getUserInfo()>
SOURCE|<org.apache.http.conn.ssl.AbstractVerifier: java.lang.String[] getSubjectAlts(java.security.cert.X509Certificate,java.lang.String)>
SOURCE|<gov.nist.core.net.DefaultNetworkLayer: javax.net.ssl.SSLServerSocket createSSLServerSocket(int,int,java.net.InetAddress)>
SOURCE|<org.apache.harmony.security.asn1.ASN1Boolean: org.apache.harmony.security.asn1.ASN1Boolean getInstance()>
SOURCE|<android.os.Debug: int getThreadGcInvocationCount()>
SOURCE|<com.google.android.picasastore.PicasaStoreFacade: java.lang.String getAuthority()>
SOURCE|<android.widget.ScrollBarDrawable: int getOpacity()>
SOURCE|<com.android.internal.view.menu.ActionMenuItem: android.content.Intent getIntent()>
SOURCE|<com.android.internal.telephony.cdma.CdmaConnection: int getCDMAIndex()>
SOURCE|<org.apache.http.impl.cookie.BasicClientCookie2: int[] getPorts()>
SOURCE|<android.view.PointerIcon: android.graphics.Bitmap getBitmap()>
SOURCE|<com.android.musicfx.ControlPanelEffect: int getParameterInt(android.content.Context,java.lang.String,int,java.lang.String)>
SOURCE|<android.app.admin.DevicePolicyManager: int getPasswordMinimumLowerCase(android.content.ComponentName)>
SOURCE|<android.bluetooth.IBluetoothInputDevice$Stub$Proxy: java.util.List getConnectedDevices()>
SOURCE|<libcore.io.ErrnoException: java.lang.String getMessage()>
SOURCE|<com.android.emailcommon.utility.Utility: com.android.emailcommon.provider.Account findExistingAccount(android.content.Context,long,java.lang.String,java.lang.String)>
SOURCE|<java.time.format.DateTimeFormatter: java.util.Locale getLocale()>
SOURCE|<com.android.gallery3d.exif.ExifTag: int getLong(int)>
SOURCE|<android.net.wifi.NetworkUpdateResult: int getNetworkId()>
SOURCE|<java.util.concurrent.atomic.AtomicLongArray: long getAndSet(int,long)>
SOURCE|<com.android.mms.transaction.Transaction: byte[] getPdu(java.lang.String)>
SOURCE|<com.android.contacts.list.ContactEntryListFragment: com.android.contacts.widget.ContextMenuAdapter getContextMenuAdapter()>
SOURCE|<android.net.rtp.AudioCodec: android.net.rtp.AudioCodec getCodec(int,java.lang.String,java.lang.String)>
SOURCE|<com.android.providers.applications.ApplicationsProvider: java.lang.String getType(android.net.Uri)>
SOURCE|<org.apache.http.impl.conn.ProxySelectorRoutePlanner: java.net.ProxySelector getProxySelector()>
SOURCE|<com.android.contacts.list.ContactEntryListFragment: android.content.CursorLoader createCursorLoader()>
SOURCE|<android.widget.TableRow: int[] getColumnsWidths(int)>
SOURCE|<com.android.systemui.statusbar.phone.PhoneStatusBar: int getStatusBarHeight()>
SOURCE|<com.android.gallery3d.picasasource.PicasaSource: double getLatitude(com.android.gallery3d.data.MediaObject)>
SOURCE|<com.android.gallery3d.app.SinglePhotoDataAdapter: com.android.gallery3d.data.MediaItem getMediaItem(int)>
SOURCE|<libcore.icu.LocaleData: java.lang.String getDateFormat(int)>
SOURCE|<android.view.MotionEvent: float getHistoricalX(int)>
SOURCE|<com.android.internal.view.menu.MenuItemImpl: char getAlphabeticShortcut()>
SOURCE|<java.net.JarURLConnection: java.lang.String getEntryName()>
SOURCE|<org.apache.james.mime4j.field.address.MailboxList: org.apache.james.mime4j.field.address.Mailbox get(int)>
SOURCE|<com.android.uiautomator.core.QueryController: java.lang.String getCurrentPackageName()>
SOURCE|<gov.nist.core.StringTokenizer: java.lang.String getLine()>
SOURCE|<gov.nist.javax.sip.header.Via: int getTTL()>
SOURCE|<org.apache.harmony.security.x509.PolicyInformation$1: java.lang.Object getDecodedObject(org.apache.harmony.security.asn1.BerInputStream)>
SOURCE|<com.android.email.service.EmailServiceUtils: com.android.emailcommon.service.IEmailService getService(android.content.Context,java.lang.String,com.android.emailcommon.service.IEmailServiceCallback)>
SOURCE|<com.android.launcher2.InterruptibleInOutAnimator: android.animation.ValueAnimator getAnimator()>
SOURCE|<android.text.StaticLayout: int getLineForVertical(int)>
SOURCE|<com.android.org.bouncycastle.asn1.x509.AlgorithmIdentifier: com.android.org.bouncycastle.asn1.ASN1ObjectIdentifier getAlgorithm()>
SOURCE|<com.android.internal.location.ILocationProvider$Stub$Proxy: long getStatusUpdateTime()>
SOURCE|<libcore.util.BasicLruCache: java.lang.Object get(java.lang.Object)>
SOURCE|<android.test.ActivityUnitTestCase: int getRequestedOrientation()>
SOURCE|<com.android.internal.telephony.sip.SipPhone: java.lang.String getLine1Number()>
SOURCE|<libcore.icu.ICU: java.lang.String[] getISOCountries()>
SOURCE|<android.net.sip.SipProfile: boolean getSendKeepAlive()>
SOURCE|<com.android.contacts.ContactPresenceIconUtil: android.graphics.drawable.Drawable getPresenceIcon(android.content.Context,int)>
SOURCE|<android.webkit.WebSettingsClassic: boolean getLoadsImagesAutomatically()>
SOURCE|<javax.crypto.ExemptionMechanism: int getOutputSize(int)>
SOURCE|<com.android.vcard.VCardEntry$BirthdayData: com.android.vcard.VCardEntry$EntryLabel getEntryLabel()>
SOURCE|<android.webkit.WebViewClassic$PrivateHandler: android.os.Looper getUiLooper()>
SOURCE|<com.android.server.ConnectivityService: android.net.NetworkInfo getActiveNetworkInfoUnfiltered()>
SOURCE|<android.os.StrictMode: android.os.StrictMode$ThreadPolicy getThreadPolicy()>
SOURCE|<com.android.org.bouncycastle.asn1.DERBitString: byte[] getBytes(int)>
SOURCE|<org.apache.http.client.methods.HttpRequestBase: org.apache.http.ProtocolVersion getProtocolVersion()>
SOURCE|<java.lang.ClassLoader: java.util.Enumeration getResources(java.lang.String)>
SOURCE|<android.media.AudioService$VolumeStreamState: java.lang.String getSettingNameForDevice(boolean,int)>
SOURCE|<com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata: com.android.i18n.phonenumbers.Phonemetadata$PhoneNumberDesc getSharedCost()>
SOURCE|<javax.crypto.spec.DHParameterSpec: int getL()>
SOURCE|<com.android.contacts.vcard.ImportVCardActivity: android.app.Dialog onCreateDialog(int,android.os.Bundle)>
SOURCE|<android.app.Instrumentation$ActivityMonitor: android.app.Instrumentation$ActivityResult getResult()>
SOURCE|<java.util.concurrent.atomic.AtomicLong: long getAndIncrement()>
SOURCE|<android.os.Bundle: long getLong(java.lang.String,long)>
SOURCE|<android.app.DownloadManager: android.net.Uri getUriForDownloadedFile(long)>
SOURCE|<com.android.videoeditor.service.MovieAudioTrack: int getAudioType()>
SOURCE|<android.hardware.input.InputManager: java.lang.String getCurrentKeyboardLayoutForInputDevice(java.lang.String)>
SOURCE|<com.android.emailcommon.provider.Mailbox: com.android.emailcommon.provider.Mailbox restoreMailboxWithId(android.content.Context,long)>
SOURCE|<android.os.Environment: java.io.File getLegacyExternalStorageObbDirectory()>
SOURCE|<com.android.systemui.statusbar.tablet.TabletStatusBar: int getStatusBarGravity()>
SOURCE|<android.net.sip.SipProfile: java.lang.String getUserName()>
SOURCE|<com.android.launcher2.Launcher: com.android.launcher2.LauncherAppWidgetHost getAppWidgetHost()>
SOURCE|<android.net.LocalSocket: int getSoTimeout()>
SOURCE|<android.widget.ExpandableListView: long getExpandableListPosition(int)>
SOURCE|<com.android.calendar.selectcalendars.SelectCalendarsSimpleAdapter: int getVisible(int)>
SOURCE|<com.android.exchange.ExchangeService: com.android.emailcommon.provider.Account getAccountById(long)>
SOURCE|<javax.net.ssl.SSLEngine: int getPeerPort()>
SOURCE|<android.net.nsd.NsdServiceInfo: android.net.nsd.DnsSdTxtRecord getTxtRecord()>
SOURCE|<android.text.Layout: int getParagraphRight(int)>
SOURCE|<com.android.contacts.model.dataitem.EmailDataItem: java.lang.String getData()>
SOURCE|<android.view.accessibility.AccessibilityRecord: int getAddedCount()>
SOURCE|<android.text.style.StrikethroughSpan: int getSpanTypeId()>
SOURCE|<java.nio.MappedByteBufferAdapter: byte[] protectedArray()>
SOURCE|<android.net.ThrottleManager: long getResetTime(java.lang.String)>
SOURCE|<java.lang.Thread: java.lang.ThreadGroup getThreadGroup()>
SOURCE|<java.nio.FloatToByteBufferAdapter: float get()>
SOURCE|<gov.nist.javax.sip.stack.SIPDialog: int getRemoteSequenceNumber()>
SOURCE|<com.android.videoeditor.widgets.ImageViewTouchBase: float getMaxZoom()>
SOURCE|<android.support.v4.view.ViewPager$2: float getInterpolation(float)>
SOURCE|<android.media.audiofx.AudioEffect: android.media.audiofx.AudioEffect$Descriptor getDescriptor()>
SOURCE|<android.bluetooth.IBluetoothInputDevice$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
SOURCE|<android.widget.DatePicker: int getDayOfMonth()>
SOURCE|<java.awt.font.NumericShaper: int getRanges()>
SOURCE|<org.apache.http.impl.conn.AbstractClientConnAdapter: java.lang.Object getAttribute(java.lang.String)>
SOURCE|<com.android.bluetooth.hfp.HeadsetPhoneState: int getBatteryCharge()>
SOURCE|<com.android.launcher2.Workspace: float getChildrenOutlineAlpha()>
SOURCE|<com.android.internal.telephony.cdma.CDMAPhone: java.lang.String getCdmaMin()>
SOURCE|<com.android.internal.telephony.gsm.GSMPhone: void getNeighboringCids(android.os.Message)>
SOURCE|<android.app.admin.IDevicePolicyManager$Stub$Proxy: long getMaximumTimeToLock(android.content.ComponentName,int)>
SOURCE|<com.android.calendar.extensions.AllInOneMenuExtensions: java.lang.Integer getExtensionMenuResource(android.view.Menu)>
SOURCE|<com.android.email.activity.setup.AccountSettingsFragment: java.lang.String getTitleFromArgs(android.os.Bundle)>
SOURCE|<android.text.style.BulletSpan: int getSpanTypeId()>
SOURCE|<android.text.Layout: float getLineWidth(int)>
SOURCE|<gov.nist.javax.sip.header.HeaderFactoryImpl: javax.sip.header.RetryAfterHeader createRetryAfterHeader(int)>
SOURCE|<com.android.exchange.ExchangeService: com.android.exchange.ExchangeService$AccountList access$600(android.content.Context,com.android.exchange.ExchangeService$AccountList)>
SOURCE|<com.android.i18n.phonenumbers.PhoneNumberUtil: java.lang.String getNationalSignificantNumber(com.android.i18n.phonenumbers.Phonenumber$PhoneNumber)>
SOURCE|<com.android.inputmethod.accessibility.AccessibleKeyboardViewProxy: android.support.v4.view.accessibility.AccessibilityNodeProviderCompat getAccessibilityNodeProvider(android.view.View)>
SOURCE|<android.app.admin.DevicePolicyManager: int getPasswordMinimumNonLetter(android.content.ComponentName)>
SOURCE|<android.provider.MediaStore$Audio$Playlists$Members: android.net.Uri getContentUri(java.lang.String,long)>
SOURCE|<android.filterfw.core.InputPort: java.lang.Object getTarget()>
SOURCE|<com.android.server.BluetoothManagerService: java.lang.String getAddress()>
SOURCE|<android.filterfw.core.CachedFrameManager: android.filterfw.core.Frame releaseFrame(android.filterfw.core.Frame)>
SOURCE|<gov.nist.javax.sip.message.SIPMessage: java.lang.String getToTag()>
SOURCE|<android.media.videoeditor.MediaVideoItem: int getWidth()>
SOURCE|<java.time.OffsetTime: int getNano()>
SOURCE|<java.net.URLConnection: java.lang.String getContentEncoding()>
SOURCE|<android.bluetooth.IBluetoothHealth$Stub: android.os.IBinder asBinder()>
SOURCE|<java.lang.reflect.InvocationTargetException: java.lang.Throwable getCause()>
SOURCE|<org.apache.http.impl.client.RoutedRequest: org.apache.http.impl.client.RequestWrapper getRequest()>
SOURCE|<java.util.ResourceBundle: java.util.ResourceBundle getBundle(java.lang.String,java.util.Locale)>
SOURCE|<android.accounts.AccountManager: android.accounts.AccountManagerFuture getAuthToken(android.accounts.Account,java.lang.String,boolean,android.accounts.AccountManagerCallback,android.os.Handler)>
SOURCE|<android.widget.AdapterViewAnimator: android.animation.ObjectAnimator getDefaultOutAnimation()>
SOURCE|<java.util.zip.ZipEntry: java.lang.String getComment()>
SOURCE|<com.android.deskclock.widget.multiwaveview.TargetDrawable: float getX()>
SOURCE|<com.android.gallery3d.filtershow.cache.ImageLoader: android.graphics.Bitmap getOriginalBitmapLarge()>
SOURCE|<com.android.inputmethod.compat.SuggestionSpanUtils: java.lang.CharSequence getTextWithSuggestionSpan(android.content.Context,java.lang.CharSequence,com.android.inputmethod.latin.SuggestedWords,boolean)>
SOURCE|<android.drm.DrmInfoRequest: java.lang.Object get(java.lang.String)>
SOURCE|<android.net.http.HttpConnection: java.lang.String getScheme()>
SOURCE|<com.android.internal.telephony.IccSmsInterfaceManagerProxy: java.util.List getAllMessagesFromIccEf()>
SOURCE|<android.database.MatrixCursor: int getInt(int)>
SOURCE|<com.android.gallery3d.data.BitmapPool: android.graphics.Bitmap getBitmap()>
SOURCE|<com.android.gallery3d.data.DataManager: int getMediaType(com.android.gallery3d.data.Path)>
SOURCE|<com.android.gallery3d.ui.AlbumLabelMaker: int getBorderSize()>
SOURCE|<com.android.gallery3d.data.DataManager: com.android.gallery3d.data.Path findPathByUri(android.net.Uri,java.lang.String)>
SOURCE|<android.bluetooth.IBluetoothStateChangeCallback$Stub: android.os.IBinder asBinder()>
SOURCE|<com.android.email.activity.AccountSelectorAdapter$AccountsLoader: android.database.Cursor loadInBackground()>
SOURCE|<com.android.deskclock.stopwatch.StopwatchFragment$ImageLabelAdapter: java.lang.String getClassName(int)>
SOURCE|<android.view.View: int getSuggestedMinimumHeight()>
SOURCE|<com.android.server.DevicePolicyManagerService: void getRemoveWarning(android.content.ComponentName,android.os.RemoteCallback,int)>
SOURCE|<com.android.contacts.model.account.AccountWithDataSet: com.android.contacts.model.account.AccountTypeWithDataSet getAccountTypeWithDataSet()>
SOURCE|<java.nio.FileChannelImpl: long transferTo(long,long,java.nio.channels.WritableByteChannel)>
SOURCE|<android.animation.LayoutTransition: android.animation.TimeInterpolator getInterpolator(int)>
SOURCE|<android.bluetooth.BluetoothDevice: java.lang.String getAlias()>
SOURCE|<java.util.HashMap: java.util.Iterator newValueIterator()>
SOURCE|<org.apache.harmony.xnet.provider.jsse.SSLSocketWrapper: int getTrafficClass()>
SOURCE|<com.android.mms.model.LayoutModel: int getLayoutHeight()>
SOURCE|<org.apache.harmony.xml.dom.DOMConfigurationImpl$FixedParameter: java.lang.Object get(org.apache.harmony.xml.dom.DOMConfigurationImpl)>
SOURCE|<com.android.browser.homepages.Template$CursorListEntityWrapper: com.android.browser.homepages.Template$ListEntityIterator getListIterator(java.lang.String)>
SOURCE|<com.android.internal.policy.impl.keyguard.KeyguardHostView: long getUserActivityTimeout()>
SOURCE|<com.android.internal.util.StateMachine: int getLogRecCount()>
SOURCE|<com.android.mms.util.AddressUtils: java.lang.String getFrom(android.content.Context,android.net.Uri)>
SOURCE|<com.android.gallery3d.data.MtpClient: android.mtp.MtpDevice getDevice(int)>
SOURCE|<com.android.contacts.detail.ActionsViewContainer: android.view.ContextMenu$ContextMenuInfo getContextMenuInfo()>
SOURCE|<com.android.browser.Tab: java.lang.String getTitle()>
SOURCE|<com.google.android.apps.lightcycle.panorama.LightCycleRenderer: com.google.android.apps.lightcycle.panorama.RenderedGui getRenderedGui()>
SOURCE|<com.android.providers.downloads.RealSystemFacade: java.lang.Long getMaxBytesOverMobile()>
SOURCE|<com.android.internal.telephony.SmsMessageBase: java.lang.String getDisplayOriginatingAddress()>
SOURCE|<android.test.RenamingDelegatingContext: java.io.File getFileStreamPath(java.lang.String)>
SOURCE|<java.security.SecureRandom: java.security.SecureRandom getInstance(java.lang.String,java.lang.String)>
SOURCE|<com.android.internal.telephony.gsm.GSMPhone: java.lang.String getLine1AlphaTag()>
SOURCE|<android.app.LocalActivityManager: android.app.Activity getCurrentActivity()>
SOURCE|<com.android.server.location.PassiveProvider: com.android.internal.location.ProviderProperties getProperties()>
SOURCE|<android.app.ActivityManager: int getPackageScreenCompatMode(java.lang.String)>
SOURCE|<com.android.contacts.model.Contact: byte[] getPhotoBinaryData()>
SOURCE|<android.bluetooth.IBluetoothCallback$Stub: android.os.IBinder asBinder()>
SOURCE|<com.android.email.activity.MessageListFragment: long getAccountId()>
SOURCE|<android.util.XmlPullAttributes: float getAttributeFloatValue(int,float)>
SOURCE|<java.net.URLConnection: boolean getDoInput()>
SOURCE|<android.preference.PreferenceManager: android.preference.PreferenceFragment getFragment()>
SOURCE|<android.media.AudioRecord: int getAudioFormat()>
SOURCE|<gov.nist.javax.sip.message.SIPMessage: gov.nist.javax.sip.header.ErrorInfoList getErrorInfoHeaders()>
SOURCE|<android.net.http.SslCertificate: android.net.http.SslCertificate$DName getIssuedTo()>
SOURCE|<android.widget.ListPopupWindow: int getSoftInputMode()>
SOURCE|<java.text.CollationElementIterator: int getMaxExpansion(int)>
SOURCE|<android.location.Geofence: double getLongitude()>
SOURCE|<com.android.gallery3d.data.SnailItem: int getHeight()>
SOURCE|<com.android.inputmethod.latin.spellcheck.AndroidSpellCheckerService: int getCapitalizationType(java.lang.String)>
SOURCE|<com.android.exchange.utility.CalendarUtilities: int getTrueTransitionMinute(java.util.GregorianCalendar)>
SOURCE|<com.android.internal.policy.impl.keyguard.PagedView: android.view.View getPageAt(int)>
SOURCE|<android.location.ICountryDetector$Stub: android.os.IBinder asBinder()>
SOURCE|<com.android.inputmethod.latin.SuggestedWords$SuggestedWordInfo: java.lang.String getDebugString()>
SOURCE|<android.net.NetworkPolicyManager: boolean getRestrictBackground()>
SOURCE|<org.apache.http.util.VersionInfo: org.apache.http.util.VersionInfo[] loadVersionInfo(java.lang.String[],java.lang.ClassLoader)>
SOURCE|<com.android.gallery3d.data.LocalMergeAlbum: int getMediaItemCount()>
SOURCE|<com.android.gallery3d.data.LocalImage: int getMediaType()>
SOURCE|<com.android.internal.telephony.cdma.RuimRecords$EfPlLoaded: java.lang.String getEfName()>
SOURCE|<android.media.audiofx.EnvironmentalReverb: short getDiffusion()>
SOURCE|<android.widget.HeaderViewListAdapter: int getItemViewType(int)>
SOURCE|<android.net.http.AndroidHttpClientConnection: java.net.InetAddress getLocalAddress()>
SOURCE|<org.apache.harmony.security.x509.BasicConstraints$1: java.lang.Object getDecodedObject(org.apache.harmony.security.asn1.BerInputStream)>
SOURCE|<com.google.common.collect.ImmutableCollection: com.google.common.collect.ImmutableList createAsList()>
SOURCE|<com.android.gallery3d.util.ThreadPool$Worker: java.lang.Object get()>
SOURCE|<com.android.deskclock.AlarmAlert: int getLayoutResId()>
SOURCE|<java.lang.Integer: int parseInt(java.lang.String)>
SOURCE|<com.android.browser.TabControl: com.android.browser.Tab getTab(int)>
SOURCE|<org.apache.http.impl.client.RequestWrapper: org.apache.http.HttpRequest getOriginal()>
SOURCE|<gov.nist.javax.sip.header.Server: java.util.ListIterator getProduct()>
SOURCE|<com.android.internal.telephony.UiccCard: com.android.internal.telephony.UiccCardApplication getApplicationIndex(int)>
SOURCE|<android.net.ConnectivityManager: int untether(java.lang.String)>
SOURCE|<com.android.contacts.activities.PeopleActivity: com.android.contacts.util.DialogManager getDialogManager()>
SOURCE|<java.text.RuleBasedBreakIterator: java.text.CharacterIterator getText()>
SOURCE|<com.android.internal.net.VpnProfile: byte[] encode()>
SOURCE|<com.google.android.picasastore.PicasaStoreFacade: java.io.File getAlbumCoverCacheFile(long,java.lang.String,java.lang.String)>
SOURCE|<com.android.contacts.model.Contact: int getDisplayNameSource()>
SOURCE|<java.security.cert.PKIXRevocationChecker: java.util.List getOcspExtensions()>
SOURCE|<com.android.contacts.voicemail.VoicemailStatusHelperImpl$OverallState: int getPriority()>
SOURCE|<com.android.videoeditor.service.VideoEditorProject: int getZoomLevel()>
SOURCE|<android.test.ActivityUnitTestCase: android.content.Intent getStartedActivityIntent()>
SOURCE|<com.android.launcher2.Workspace: android.animation.Animator getChangeStateAnimation(com.android.launcher2.Workspace$State,boolean)>
SOURCE|<com.android.gallery3d.data.ClusterAlbum: int getMediaItemCount()>
SOURCE|<android.nfc.tech.MifareUltralight: int getTimeout()>
SOURCE|<com.android.internal.telephony.IccUtils: byte[] hexStringToBytes(java.lang.String)>
SOURCE|<android.app.backup.BackupAgentHelper: android.app.backup.BackupHelperDispatcher getDispatcher()>
SOURCE|<android.media.videoeditor.OverlayFrame: java.lang.String getFilename()>
SOURCE|<android.hardware.Camera: android.hardware.Camera$Parameters getEmptyParameters()>
SOURCE|<android.view.View: int getFadeHeight(boolean)>
SOURCE|<com.android.org.bouncycastle.asn1.DERUTCTime: com.android.org.bouncycastle.asn1.ASN1UTCTime getInstance(com.android.org.bouncycastle.asn1.ASN1TaggedObject,boolean)>
SOURCE|<com.android.gallery3d.app.SinglePhotoDataAdapter: int getCurrentIndex()>
SOURCE|<android.webkit.WebSettingsClassic: boolean getLoadWithOverviewMode()>
SOURCE|<com.android.gallery3d.util.IntArray: int[] getInternalArray()>
SOURCE|<com.android.server.am.TransferPipe: android.os.ParcelFileDescriptor getWriteFd()>
SOURCE|<android.filterpacks.imageproc.ToRGBFilter: android.filterfw.core.FrameFormat getOutputFormat(java.lang.String,android.filterfw.core.FrameFormat)>
SOURCE|<libcore.icu.NativeBreakIterator: libcore.icu.NativeBreakIterator getLineInstance(java.util.Locale)>
SOURCE|<com.android.calendar.agenda.AgendaWindowAdapter: long getItemId(int)>
SOURCE|<android.app.ActivityManager$TaskThumbnails: android.graphics.Bitmap getSubThumbnail(int)>
SOURCE|<com.android.gallery3d.picasasource.PicasaImage: java.lang.String[] getTags()>
SOURCE|<com.android.server.display.LogicalDisplay: android.view.DisplayInfo getDisplayInfoLocked()>
SOURCE|<org.apache.harmony.security.asn1.ASN1Type: java.lang.Object getDecodedObject(org.apache.harmony.security.asn1.BerInputStream)>
SOURCE|<android.webkit.WebView: float getScale()>
SOURCE|<com.android.internal.backup.LocalTransport: int getRestoreData(android.os.ParcelFileDescriptor)>
SOURCE|<java.io.StreamTokenizer: void parseNumbers()>
SOURCE|<android.media.AudioService$RcClientDeathHandler: android.os.IBinder getBinder()>
SOURCE|<java.nio.DirectByteBuffer: short getShort()>
SOURCE|<android.nfc.tech.NfcB: byte[] transceive(byte[])>
SOURCE|<android.view.accessibility.IAccessibilityManager$Stub$Proxy: java.util.List getEnabledAccessibilityServiceList(int,int)>
SOURCE|<android.content.Intent: boolean[] getBooleanArrayExtra(java.lang.String)>
SOURCE|<com.android.ex.chips.RecipientEntry: java.lang.String getDestination()>
SOURCE|<android.widget.ActivityChooserModel: android.content.pm.ResolveInfo getActivity(int)>
SOURCE|<android.hardware.Camera$Parameters: java.lang.String getColorEffect()>
SOURCE|<com.android.org.bouncycastle.asn1.BERTaggedObjectParser: int getTagNo()>
SOURCE|<com.android.browser.BrowserBookmarksAdapter: java.lang.CharSequence getTitle(android.database.Cursor)>
SOURCE|<com.android.internal.policy.impl.keyguard.PagedView: int getScaledMeasuredWidth(android.view.View)>
SOURCE|<com.android.commands.monkey.MonkeyEvent: int getEventType()>
SOURCE|<android.app.ActivityThread: android.app.LoadedApk getPackageInfo(android.content.pm.ApplicationInfo,android.content.res.CompatibilityInfo,int)>
SOURCE|<com.android.mms.transaction.TransactionBundle: byte[] getPushData()>
SOURCE|<java.nio.PipeImpl$PipeSinkChannel: long write(java.nio.ByteBuffer[])>
SOURCE|<com.android.gallery3d.data.SecureAlbum: java.lang.String getName()>
SOURCE|<com.android.server.wm.WindowManagerService: android.view.WindowInfo getWindowInfo(android.os.IBinder)>
SOURCE|<java.util.zip.Inflater: long getBytesWritten()>
SOURCE|<com.android.internal.widget.ActionBarView$ExpandedActionViewMenuPresenter: int getId()>
SOURCE|<android.media.videoeditor.MediaImageItem: void getThumbnailList(int,int,long,long,int,int[],android.media.videoeditor.MediaItem$GetThumbnailListCallback)>
SOURCE|<com.android.contacts.editor.ContactEditorFragment$JoinSuggestedContactDialogFragment: android.app.Dialog onCreateDialog(android.os.Bundle)>
SOURCE|<org.apache.harmony.xnet.provider.jsse.SSLInputStream: long readUint32()>
SOURCE|<java.nio.DatagramChannelImpl$DatagramSocketAdapter: java.net.InetAddress getLocalAddress()>
SOURCE|<java.util.Collections$UnmodifiableMap: java.lang.Object get(java.lang.Object)>
SOURCE|<gov.nist.javax.sip.header.Challenge: java.lang.String getResponse()>
SOURCE|<android.content.Intent: boolean getBooleanExtra(java.lang.String,boolean)>
SOURCE|<com.android.internal.telephony.gsm.SimPhoneBookInterfaceManager: java.util.List getAdnRecordsInEf(int)>
SOURCE|<android.renderscript.Element: java.lang.String getSubElementName(int)>
SOURCE|<java.time.chrono.AbstractChronology: java.util.Set getAvailableChronologies()>
SOURCE|<com.android.contacts.model.account.BaseAccountType$PhoneKindBuilder: java.lang.String getTagName()>
SOURCE|<org.apache.harmony.xnet.provider.jsse.OpenSSLSessionImpl: java.lang.String getPeerHost()>
SOURCE|<com.android.email.Preferences: boolean getEnableDebugLogging()>
SOURCE|<com.android.inputmethod.latin.AdditionalSubtype: android.view.inputmethod.InputMethodSubtype[] createAdditionalSubtypesArray(java.lang.String)>
SOURCE|<android.app.Fragment: java.lang.String getString(int,java.lang.Object[])>
SOURCE|<com.android.internal.policy.impl.keyguard.KeyguardUpdateMonitor: java.lang.CharSequence getTelephonyPlmn()>
SOURCE|<android.app.ApplicationPackageManager: java.util.List getInstalledApplications(int)>
SOURCE|<com.google.android.mms.pdu.RetrieveConf: byte[] getMessageClass()>
SOURCE|<com.android.internal.widget.WaveView: int getSuggestedMinimumHeight()>
SOURCE|<gov.nist.javax.sip.header.Protocol: java.lang.String getProtocolVersion()>
SOURCE|<android.view.View: int getVerticalScrollbarPosition()>
SOURCE|<android.bluetooth.BluetoothDevice: boolean getTrustState()>
SOURCE|<org.xml.sax.InputSource: java.lang.String getEncoding()>
SOURCE|<javax.xml.transform.stream.StreamResult: java.io.Writer getWriter()>
SOURCE|<com.android.email.activity.UIControllerOnePane$ActionBarControllerCallback: int getTitleMode()>
SOURCE|<org.apache.harmony.xnet.provider.jsse.OpenSSLDSAParams: java.math.BigInteger getQ()>
SOURCE|<android.view.MotionEvent: float getHistoricalTouchMajor(int)>
SOURCE|<android.app.ActivityThread: android.app.Activity getActivity(android.os.IBinder)>
SOURCE|<android.test.mock.MockResources: java.lang.String getQuantityString(int,int)>
SOURCE|<com.android.contacts.list.ContactEntryListAdapter: java.lang.String getQueryString()>
SOURCE|<org.apache.harmony.xml.dom.DocumentImpl: org.w3c.dom.Element getDocumentElement()>
SOURCE|<android.widget.RemoteViewsService$RemoteViewsFactoryAdapter: long getItemId(int)>
SOURCE|<java.lang.reflect.Constructor: java.lang.Class getDeclaringClass()>
SOURCE|<java.io.File: long getTotalSpace()>
SOURCE|<android.hardware.Camera$Parameters: java.util.List getSupportedPreviewFormats()>
SOURCE|<gov.nist.core.GenericObjectList: gov.nist.core.GenericObject first()>
SOURCE|<android.webkit.ZoomManager: android.view.View getExternalZoomPicker()>
SOURCE|<org.apache.http.message.BasicLineParser: org.apache.http.Header parseHeader(org.apache.http.util.CharArrayBuffer)>
SOURCE|<com.android.contacts.list.PhoneFavoriteFragment: com.android.contacts.list.ContactListFilter getFilter()>
SOURCE|<android.app.ActivityManagerProxy: long[] getProcessPss(int[])>
SOURCE|<android.database.ContentObserver: android.database.IContentObserver getContentObserver()>
SOURCE|<com.android.contacts.util.StreamItemEntry: long getId()>
SOURCE|<com.android.providers.calendar.CalendarProvider2: com.android.providers.calendar.CalendarAlarmManager getOrCreateCalendarAlarmManager()>
SOURCE|<android.widget.Toast: int getGravity()>
SOURCE|<org.apache.james.mime4j.BodyDescriptor: java.lang.String getCharset()>
SOURCE|<gov.nist.javax.sip.address.TelURLImpl: java.lang.String getParameter(java.lang.String)>
SOURCE|<java.security.cert.CollectionCertStoreParameters: java.util.Collection getCollection()>
SOURCE|<com.android.vcard.VCardEntry: java.util.ArrayList constructInsertOperations(android.content.ContentResolver,java.util.ArrayList)>
SOURCE|<java.security.Provider: double getVersion()>
SOURCE|<junit.framework.TestCase: java.lang.String getName()>
SOURCE|<com.android.nfc.P2pLinkManager: int getMessageAarPresent(android.nfc.NdefMessage)>
SOURCE|<android.filterfw.core.GraphRunner: android.filterfw.core.FilterContext getContext()>
SOURCE|<android.nfc.tech.NfcF: byte[] getSystemCode()>
SOURCE|<com.android.gallery3d.app.ManageCachePage: int getBackgroundColorId()>
SOURCE|<com.android.internal.telephony.PhoneSubInfo: java.lang.String getCompleteVoiceMailNumber()>
SOURCE|<com.android.server.sip.SipSessionGroup$SipSessionImpl: android.net.sip.SipProfile getPeerProfile()>
SOURCE|<com.android.gallery3d.app.AlbumPage$MyDetailsSource: com.android.gallery3d.data.MediaDetails getDetails()>
SOURCE|<javax.xml.validation.Validator: boolean getFeature(java.lang.String)>
SOURCE|<java.util.SimpleTimeZone: int getOffset(long)>
SOURCE|<com.android.internal.telephony.gsm.SmsBroadcastConfigInfo: int getFromServiceId()>
SOURCE|<com.android.email.activity.EmailActivity: android.content.Intent createOpenMessageIntent(android.app.Activity,long,long,long)>
SOURCE|<com.android.gallery3d.data.Path: com.android.gallery3d.data.Path getChild(long)>
SOURCE|<android.telephony.ServiceState: java.lang.String toString()>
SOURCE|<java.security.BasicPermission: java.lang.String getActions()>
SOURCE|<android.filterfw.format.PrimitiveFormat: android.filterfw.core.MutableFrameFormat createByteFormat(int,int)>
SOURCE|<com.android.calendar.CalendarViewAdapter: long getItemId(int)>
SOURCE|<android.widget.TextView: java.lang.CharSequence getHint()>
SOURCE|<java.util.TreeMap: java.lang.Object get(java.lang.Object)>
SOURCE|<com.android.mms.MmsConfig: int getDefaultMMSMessagesPerThread()>
SOURCE|<android.net.Uri$HierarchicalUri: java.lang.String getFragment()>
SOURCE|<com.android.browser.DeviceAccountLogin: int getState()>
SOURCE|<android.telephony.SignalStrength: int getLteSignalStrenght()>
SOURCE|<gov.nist.javax.sip.header.ContentLanguage: java.lang.String getLanguageTag()>
SOURCE|<android.os.Registrant: android.os.Handler getHandler()>
SOURCE|<android.webkit.CallbackProxy$UploadFile: android.net.Uri getResult()>
SOURCE|<android.app.Activity: android.database.Cursor managedQuery(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String)>
SOURCE|<android.database.sqlite.SqliteWrapper: android.net.Uri insert(android.content.Context,android.content.ContentResolver,android.net.Uri,android.content.ContentValues)>
SOURCE|<com.android.uiautomator.testrunner.UiAutomatorTestRunner: com.android.uiautomator.testrunner.UiAutomatorTestCaseFilter getTestCaseFilter()>
SOURCE|<com.android.deskclock.timer.TimerFragment: com.android.deskclock.timer.TimerFragment$TimersListAdapter createAdapter(android.content.Context,android.content.SharedPreferences)>
SOURCE|<com.android.gallery3d.ui.FlingScroller: int getCurrVelocityX()>
SOURCE|<com.android.inputmethod.keyboard.Key: android.graphics.drawable.Drawable getPreviewIcon(com.android.inputmethod.keyboard.internal.KeyboardIconsSet)>
SOURCE|<java.net.Socket: int getLocalPort()>
SOURCE|<com.android.deskclock.Alarms: com.android.deskclock.Alarm getAlarm(android.content.ContentResolver,int)>
SOURCE|<com.google.android.apps.lightcycle.opengl.Sprite: int getHeight()>
SOURCE|<android.view.inputmethod.InputMethodManager: android.view.inputmethod.InputMethodManager getInstance(android.content.Context)>
SOURCE|<android.text.style.TabStopSpan$Standard: int getTabStop()>
SOURCE|<android.net.NetworkInfo: java.lang.String getTypeName()>
SOURCE|<android.telephony.TelephonyManager: java.lang.String getVoiceMailAlphaTag()>
SOURCE|<java.net.HttpCookie: java.lang.String getCommentURL()>
SOURCE|<android.bluetooth.BluetoothA2dp: java.util.List getDevicesMatchingConnectionStates(int[])>
SOURCE|<android.app.DownloadManager: java.lang.String getWhereClauseForIds(long[])>
SOURCE|<android.widget.CursorTreeAdapter: android.widget.Filter getFilter()>
SOURCE|<android.app.IWallpaperManager$Stub$Proxy: android.os.ParcelFileDescriptor getWallpaper(android.app.IWallpaperManagerCallback,android.os.Bundle)>
SOURCE|<com.google.android.mms.pdu.ReadOrigInd: byte[] getMessageId()>
SOURCE|<java.util.concurrent.atomic.AtomicLongArray: long getAndDecrement(int)>
SOURCE|<android.view.ScaleGestureDetector: long getEventTime()>
SOURCE|<android.support.v4.view.PagerAdapter: float getPageWidth(int)>
SOURCE|<com.android.server.AttributeCache: com.android.server.AttributeCache$Entry get(int,java.lang.String,int,int[])>
SOURCE|<android.content.res.Resources: java.lang.String getQuantityString(int,int,java.lang.Object[])>
SOURCE|<java.lang.StackTraceElement: java.lang.String getClassName()>
SOURCE|<com.android.email.activity.setup.AccountSecurity$PasswordExpirationDialog: android.app.Dialog onCreateDialog(android.os.Bundle)>
SOURCE|<android.content.ClipData: android.content.ClipDescription getDescription()>
SOURCE|<android.media.IAudioService$Stub$Proxy: int getLastAudibleMasterVolume()>
SOURCE|<gov.nist.javax.sip.stack.SIPClientTransaction: int getViaPort()>
SOURCE|<gov.nist.javax.sip.address.TelephoneNumber: gov.nist.core.NameValueList getParameters()>
SOURCE|<java.util.Properties: void load(java.io.InputStream)>
SOURCE|<javax.security.auth.SubjectDomainCombiner: javax.security.auth.Subject getSubject()>
SOURCE|<org.apache.harmony.xnet.provider.jsse.OpenSSLSocketImplWrapper: boolean getTcpNoDelay()>
SOURCE|<android.text.method.DateKeyListener: char[] getAcceptedChars()>
SOURCE|<com.android.contacts.vcard.ImportVCardActivity$VCardFile: long getLastModified()>
SOURCE|<com.android.browser.Tab$3: android.graphics.Bitmap getDefaultVideoPoster()>
SOURCE|<org.apache.http.entity.HttpEntityWrapper: org.apache.http.Header getContentType()>
SOURCE|<android.graphics.drawable.NinePatchDrawable: int getMinimumHeight()>
SOURCE|<android.webkit.WebViewCore: android.content.Context getContext()>
SOURCE|<java.net.InetAddress: java.lang.String getCanonicalHostName()>
SOURCE|<com.google.android.picasasync.UploadTaskEntry: java.lang.String getAccount()>
SOURCE|<libcore.internal.StringPool: java.lang.String get(char[],int,int)>
SOURCE|<android.widget.TextView: android.text.TextDirectionHeuristic getTextDirectionHeuristic()>
SOURCE|<android.accounts.AccountManager: android.accounts.IAccountManager access$000(android.accounts.AccountManager)>
SOURCE|<android.app.Instrumentation$ActivityMonitor: android.app.Activity getLastActivity()>
SOURCE|<android.view.DragEvent: android.content.ClipData getClipData()>
SOURCE|<java.text.Annotation: java.lang.Object getValue()>
SOURCE|<android.media.audiofx.Equalizer: short getNumberOfBands()>
SOURCE|<java.lang.Package: java.lang.String getSpecificationVersion()>
SOURCE|<android.webkit.WebView$PrivateAccess: int getHorizontalScrollbarHeight()>
SOURCE|<javax.security.auth.PrivateCredentialPermission: java.lang.String getActions()>
SOURCE|<java.nio.HeapByteBuffer: short getShort()>
SOURCE|<org.apache.http.conn.routing.RouteTracker: org.apache.http.HttpHost getTargetHost()>
SOURCE|<gov.nist.javax.sip.header.Organization: java.lang.String getOrganization()>
SOURCE|<com.android.email.mail.store.Pop3Store$Pop3Folder: com.android.emailcommon.mail.Folder$OpenMode getMode()>
SOURCE|<com.android.internal.telephony.AdnRecordCache: java.util.ArrayList getRecordsIfLoaded(int)>
SOURCE|<android.net.LocalSocket: android.net.LocalSocketAddress getRemoteSocketAddress()>
SOURCE|<android.media.MediaFile: java.lang.String getMimeTypeForFormatCode(int)>
SOURCE|<com.android.i18n.phonenumbers.Phonenumber$PhoneNumber: int getCountryCode()>
SOURCE|<org.apache.harmony.xnet.provider.jsse.OpenSSLSessionImpl: javax.net.ssl.SSLSessionContext getSessionContext()>
SOURCE|<com.android.internal.util.TypedProperties: byte getByte(java.lang.String)>
SOURCE|<com.android.emailcommon.provider.Policy: android.net.Uri save(android.content.Context)>
SOURCE|<com.android.videoeditor.ProjectPickerAdapter: int getCount()>
SOURCE|<com.android.bluetooth.btservice.ProfileService: android.os.IBinder onBind(android.content.Intent)>
SOURCE|<android.text.BoringLayout: int getEllipsisStart(int)>
SOURCE|<com.android.internal.telephony.cdma.CDMALTEPhone: java.lang.String getSubscriberId()>
SOURCE|<android.content.ContentResolver: java.lang.String getType(android.net.Uri)>
SOURCE|<android.widget.SimpleAdapter: int getCount()>
SOURCE|<com.android.server.display.LogicalDisplay: int getDisplayIdLocked()>
SOURCE|<com.android.mms.widget.MmsWidgetService$MmsFactory: long getItemId(int)>
SOURCE|<android.test.mock.MockCursor: java.lang.String getColumnName(int)>
SOURCE|<android.graphics.drawable.RotateDrawable: int getIntrinsicWidth()>
SOURCE|<android.app.LocalActivityManager: java.util.HashMap dispatchRetainNonConfigurationInstance()>
SOURCE|<com.google.common.collect.MapMaker: long getExpireAfterWriteNanos()>
SOURCE|<android.nfc.INfcAdapter$Stub$Proxy: int getState()>
SOURCE|<android.provider.ContactsContract$Groups$EntityIteratorImpl: android.content.Entity getEntityAndIncrementCursor(android.database.Cursor)>
SOURCE|<java.util.concurrent.locks.ReentrantLock: int getHoldCount()>
SOURCE|<com.android.contacts.detail.ContactDetailFragment$ViewAdapter: com.android.contacts.detail.ContactDetailFragment$ViewEntry getItem(int)>
SOURCE|<com.android.wallpaper.fall.ScriptField_Constants: android.renderscript.Element createElement(android.renderscript.RenderScript)>
SOURCE|<android.widget.Spinner: java.lang.CharSequence getPrompt()>
SOURCE|<android.content.ContentProviderClient: android.content.ContentProvider getLocalContentProvider()>
SOURCE|<com.google.android.mms.pdu.SendReq: byte[] getTransactionId()>
SOURCE|<com.android.inputmethod.keyboard.MainKeyboardView: java.lang.String getFullDisplayName(android.view.inputmethod.InputMethodSubtype,android.content.res.Resources)>
SOURCE|<android.view.accessibility.AccessibilityNodeInfo: android.util.SparseLongArray getChildNodeIds()>
SOURCE|<com.android.server.wm.WindowManagerService: int getPropertyInt(java.lang.String[],int,int,int,android.util.DisplayMetrics)>
SOURCE|<com.android.internal.telephony.cdma.CdmaConnection: java.lang.String getOrigDialString()>
SOURCE|<com.android.mms.dom.smil.SmilRegionElementImpl: int getTop()>
SOURCE|<android.test.IsolatedContext: java.lang.Object getSystemService(java.lang.String)>
SOURCE|<android.provider.MediaStore$Video: android.database.Cursor query(android.content.ContentResolver,android.net.Uri,java.lang.String[])>
SOURCE|<com.android.server.DevicePolicyManagerService: long getPasswordExpirationTimeout(android.content.ComponentName,int)>
SOURCE|<com.google.android.picasasync.PicasaFacade: android.net.Uri getUploadRecordsUri()>
SOURCE|<com.android.contacts.widget.PinnedHeaderListAdapter: int getScrollPositionForHeader(int)>
SOURCE|<com.android.internal.telephony.gsm.GSMPhone: com.android.internal.telephony.IccPhoneBookInterfaceManager getIccPhoneBookInterfaceManager()>
SOURCE|<com.google.common.collect.MapMakerInternalMap$EntryFactory: com.google.common.collect.MapMakerInternalMap$EntryFactory getFactory(com.google.common.collect.MapMakerInternalMap$Strength,boolean,boolean)>
SOURCE|<com.android.mms.MmsConfig: int getAliasMaxChars()>
SOURCE|<android.hardware.input.IInputManager$Stub$Proxy: java.lang.String getCurrentKeyboardLayoutForInputDevice(java.lang.String)>
SOURCE|<com.coremedia.iso.boxes.SampleTableBox: com.coremedia.iso.boxes.TimeToSampleBox getTimeToSampleBox()>
SOURCE|<com.android.contacts.model.account.BaseAccountType$CommonInflater: java.lang.String getTypeColumn()>
SOURCE|<java.util.ResourceBundle$Control: java.util.List getCandidateLocales(java.lang.String,java.util.Locale)>
SOURCE|<gov.nist.javax.sip.header.AuthenticationInfo: java.lang.String getAuthenticationInfo()>
SOURCE|<com.android.gallery3d.data.MtpDeviceSet: java.lang.String getDeviceName(com.android.gallery3d.data.MtpContext,int)>
SOURCE|<com.android.browser.BrowserSettings: java.lang.String getHomePage()>
SOURCE|<android.app.ListActivity: int getSelectedItemPosition()>
SOURCE|<java.util.EnumMap$EnumMapKeySet$1: java.lang.Enum get(java.util.MapEntry)>
SOURCE|<java.util.logging.LogRecord: java.util.logging.Level getLevel()>
SOURCE|<com.android.contacts.model.RawContactDelta$ValuesDelta: android.content.ContentValues getAfter()>
SOURCE|<com.google.common.collect.MapMakerInternalMap$Segment: java.lang.Object getLiveValue(com.google.common.collect.MapMakerInternalMap$ReferenceEntry)>
SOURCE|<android.app.ISearchManager$Stub$Proxy: java.util.List getGlobalSearchActivities()>
SOURCE|<java.sql.DataTruncation: boolean getRead()>
SOURCE|<org.apache.http.impl.client.AbstractHttpClient: int getResponseInterceptorCount()>
SOURCE|<android.webkit.CallbackProxy$UploadFileMessageData: java.lang.String getAcceptType()>
SOURCE|<android.app.ApplicationPackageManager: java.util.List getPreferredPackages(int)>
SOURCE|<android.content.ClipDescription: java.lang.CharSequence getLabel()>
SOURCE|<com.android.contacts.model.AccountTypeManager: com.android.contacts.model.account.AccountType getAccountType(java.lang.String,java.lang.String)>
SOURCE|<com.android.mms.dom.smil.SmilRegionElementImpl: int getWidth()>
SOURCE|<android.media.audiofx.Virtualizer: boolean getStrengthSupported()>
SOURCE|<com.google.common.collect.ForwardingCollection: java.lang.Object[] toArray()>
SOURCE|<android.app.BackStackRecord: java.lang.String getName()>
SOURCE|<com.android.internal.telephony.ITelephonyRegistry$Stub: com.android.internal.telephony.ITelephonyRegistry asInterface(android.os.IBinder)>
SOURCE|<libcore.net.http.HttpURLConnectionImpl: java.io.InputStream getErrorStream()>
SOURCE|<android.view.DragEvent: float getX()>
SOURCE|<com.google.android.mms.pdu.GenericPdu: int getMessageType()>
SOURCE|<android.app.FragmentManagerImpl: android.app.FragmentManager$BackStackEntry getBackStackEntryAt(int)>
SOURCE|<com.android.contacts.detail.ContactDetailFragment$ViewAdapter: int getViewTypeCount()>
SOURCE|<com.android.contacts.group.GroupListItem: long getGroupId()>
SOURCE|<android.content.ContentResolver: boolean getMasterSyncAutomatically()>
SOURCE|<android.widget.TextView: android.view.AccessibilityIterators$TextSegmentIterator getIteratorForGranularity(int)>
SOURCE|<com.google.common.collect.MapMakerInternalMap$StrongExpirableEvictableEntry: com.google.common.collect.MapMakerInternalMap$ReferenceEntry getPreviousExpirable()>
SOURCE|<com.android.gallery3d.ui.ColorTexture: int getHeight()>
SOURCE|<javax.xml.parsers.DocumentBuilderFactory: javax.xml.validation.Schema getSchema()>
SOURCE|<com.android.org.bouncycastle.asn1.ASN1InputStream: com.android.org.bouncycastle.asn1.ASN1EncodableVector buildEncodableVector()>
SOURCE|<com.android.email.activity.Welcome: android.content.Intent createAccountShortcutIntent(android.content.Context,java.lang.String,long)>
SOURCE|<com.android.server.pm.Settings: android.content.pm.VerifierDeviceIdentity getVerifierDeviceIdentityLPw()>
SOURCE|<java.util.concurrent.locks.ReentrantLock$Sync: java.lang.Thread getOwner()>
SOURCE|<gov.nist.javax.sip.header.RAck: long getRSequenceNumber()>
SOURCE|<android.net.wifi.WifiInfo: android.net.NetworkInfo$DetailedState getDetailedStateOf(android.net.wifi.SupplicantState)>
SOURCE|<com.android.internal.telephony.PhoneBase: com.android.internal.telephony.IccFileHandler getIccFileHandler()>
SOURCE|<com.android.contacts.model.account.BaseAccountType$OrganizationKindBuilder: java.lang.String getTagName()>
SOURCE|<com.android.email.mail.store.ImapFolder: java.lang.String getName()>
SOURCE|<android.widget.AdapterViewAnimator: android.os.Parcelable onSaveInstanceState()>
SOURCE|<com.android.exchange.utility.CalendarUtilities: long getUtcAllDayCalendarTime(long,java.util.TimeZone)>
SOURCE|<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,int)>
SOURCE|<gov.nist.javax.sip.Utils: java.lang.String getSignature()>
SOURCE|<android.text.style.CharacterStyle$Passthrough: android.text.style.CharacterStyle getUnderlying()>
SOURCE|<com.android.internal.policy.impl.keyguard.KeyguardMultiUserAvatar: android.content.pm.UserInfo getUserInfo()>
SOURCE|<com.android.internal.os.BatteryStatsImpl$Uid: com.android.internal.os.BatteryStatsImpl getBatteryStats()>
SOURCE|<org.apache.james.mime4j.field.contenttype.parser.ContentTypeParser: java.lang.String getType()>
SOURCE|<java.nio.channels.FileLock: long position()>
SOURCE|<javax.crypto.spec.DHGenParameterSpec: int getExponentSize()>
SOURCE|<com.android.org.bouncycastle.asn1.DERExternal: com.android.org.bouncycastle.asn1.ASN1Integer getIndirectReference()>
SOURCE|<android.bluetooth.BluetoothHealth: java.util.List getDevicesMatchingConnectionStates(int[])>
SOURCE|<java.lang.StackTraceElement: java.lang.String getFileName()>
SOURCE|<android.widget.ActivityChooserView$ActivityChooserViewAdapter: int getViewTypeCount()>
SOURCE|<org.apache.harmony.xnet.provider.jsse.OpenSSLSocketImpl: java.lang.String[] getEnabledProtocols()>
SOURCE|<java.nio.DirectByteBuffer: float getFloat()>
SOURCE|<com.android.inputmethod.keyboard.internal.KeyboardRow: float getKeyWidth(android.content.res.TypedArray,float)>
SOURCE|<java.io.EmulatedFieldsForLoading: java.io.ObjectStreamClass getObjectStreamClass()>
SOURCE|<java.nio.file.Files: java.nio.file.FileStore getFileStore(java.nio.file.Path)>
SOURCE|<android.text.style.SuggestionSpan: java.lang.String[] getSuggestions()>
SOURCE|<com.android.browser.TitleBar: com.android.browser.NavigationBarBase getNavigationBar()>
SOURCE|<com.android.gallery3d.data.PathMatcher: long getLongVar(int)>
SOURCE|<com.android.gallery3d.picasasource.PicasaImage: int getFullImageRotation()>
SOURCE|<com.android.gallery3d.ui.RawTexture: int getTarget()>
SOURCE|<gov.nist.javax.sip.SipProviderImpl: javax.sip.SipListener getSipListener()>
SOURCE|<com.android.mms.data.Contact$ContactsCache: com.android.mms.data.Contact get(java.lang.String,boolean)>
SOURCE|<javax.crypto.Cipher: int getBlockSize()>
SOURCE|<org.apache.harmony.xnet.provider.jsse.TrustedCertificateStore: java.security.cert.Certificate getCertificate(java.lang.String)>
SOURCE|<com.android.gallery3d.data.DataManager: com.android.gallery3d.data.MediaSet getMediaSet(com.android.gallery3d.data.Path)>
SOURCE|<com.android.launcher2.Workspace: android.graphics.Bitmap createDragBitmap(android.view.View,android.graphics.Canvas,int)>
SOURCE|<android.text.method.HideReturnsTransformationMethod: android.text.method.HideReturnsTransformationMethod getInstance()>
SOURCE|<android.view.accessibility.AccessibilityRecord: int getItemCount()>
SOURCE|<android.os.UserManager: int getUserHandle(int)>
SOURCE|<android.content.ContentResolver: android.content.ContentResolver$OpenResourceIdResult getResourceId(android.net.Uri)>
SOURCE|<java.security.cert.CertStore: java.lang.String getDefaultType()>
SOURCE|<android.telephony.CellIdentityCdma: int getNetworkId()>
SOURCE|<android.bluetooth.BluetoothSocket: java.io.InputStream getInputStream()>
SOURCE|<android.filterfw.core.FrameFormat: int getBaseType()>
SOURCE|<android.content.res.Resources: android.graphics.drawable.Drawable loadDrawable(android.util.TypedValue,int)>
SOURCE|<com.android.mms.dom.smil.SmilPlayer: int getCurrentPosition()>
SOURCE|<android.net.http.AndroidHttpClientConnection: int getRemotePort()>
SOURCE|<com.android.email.Controller: com.android.emailcommon.provider.Mailbox getAttachmentMailbox()>
SOURCE|<com.android.gallery3d.app.SinglePhotoDataAdapter: int getLoadingState(int)>
SOURCE|<com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata: com.android.i18n.phonenumbers.Phonemetadata$PhoneNumberDesc getVoip()>
SOURCE|<java.time.ZonedDateTime: long getLong(java.time.temporal.TemporalField)>
SOURCE|<com.android.internal.telephony.PhoneBase: android.net.LinkCapabilities getLinkCapabilities(java.lang.String)>
SOURCE|<com.android.ex.chips.BaseRecipientAdapter: int getCount()>
SOURCE|<java.util.Base64: java.util.Base64$Encoder getUrlEncoder()>
SOURCE|<com.android.deskclock.RepeatPreference: com.android.deskclock.Alarm$DaysOfWeek getDaysOfWeek()>
SOURCE|<android.bluetooth.BluetoothAdapter: boolean getProfileProxy(android.content.Context,android.bluetooth.BluetoothProfile$ServiceListener,int)>
SOURCE|<javax.security.cert.X509Certificate$1: java.security.PublicKey getPublicKey()>
SOURCE|<android.os.storage.IMountService$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
SOURCE|<java.lang.ClassLoader: java.util.Enumeration getSystemResources(java.lang.String)>
SOURCE|<org.apache.harmony.xnet.provider.jsse.SSLSocketWrapper: boolean getTcpNoDelay()>
SOURCE|<com.googlecode.mp4parser.AbstractBox: byte[] getUserType()>
SOURCE|<com.android.bluetooth.a2dp.A2dpService: com.android.bluetooth.btservice.ProfileService$IProfileServiceBinder initBinder()>
SOURCE|<org.apache.harmony.xml.dom.ElementImpl: java.lang.String getLocalName()>
SOURCE|<android.provider.Settings$Secure: float getFloat(android.content.ContentResolver,java.lang.String)>
SOURCE|<com.google.common.collect.RegularImmutableMap: java.lang.Object get(java.lang.Object)>
SOURCE|<gov.nist.javax.sip.header.Challenge: java.lang.String getURI()>
SOURCE|<org.apache.harmony.xnet.provider.jsse.CipherSuite: java.lang.String getClientKeyType(byte)>
SOURCE|<android.speech.tts.TextToSpeechService$SpeechItem: java.lang.String getStringParam(java.lang.String,java.lang.String)>
SOURCE|<android.database.sqlite.SQLiteQueryBuilder: android.database.Cursor query(android.database.sqlite.SQLiteDatabase,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,java.lang.String,java.lang.String,java.lang.String)>
SOURCE|<java.net.NetworkInterface: byte[] getHardwareAddress()>
SOURCE|<javax.crypto.CipherSpi: int engineUpdate(java.nio.ByteBuffer,java.nio.ByteBuffer)>
SOURCE|<com.android.server.WifiService: java.util.List getScanResults()>
SOURCE|<com.android.gallery3d.picasasource.PicasaImage: long getSize()>
SOURCE|<com.android.ex.chips.RecipientChip: com.android.ex.chips.RecipientEntry getEntry()>
SOURCE|<android.os.Bundle: float getFloat(java.lang.String,float)>
SOURCE|<com.android.gallery3d.app.PhotoPage: int getBackgroundColorId()>
SOURCE|<com.android.mms.transaction.TransactionBundle: int getProxyPort()>
SOURCE|<com.android.internal.util.MemInfoReader: long getTotalSize()>
SOURCE|<android.renderscript.Program: java.lang.String getTextureName(int)>
SOURCE|<com.google.android.mms.pdu.PduHeaders: com.google.android.mms.pdu.EncodedStringValue[] getEncodedStringValues(int)>
SOURCE|<java.util.concurrent.locks.AbstractQueuedLongSynchronizer: java.util.Collection getWaitingThreads(java.util.concurrent.locks.AbstractQueuedLongSynchronizer$ConditionObject)>
SOURCE|<android.webkit.WebSettingsClassic: boolean getBlockNetworkLoads()>
SOURCE|<android.widget.TextView: float getTextScaleX()>
SOURCE|<android.widget.ImageView: android.graphics.drawable.Drawable getDrawable()>
SOURCE|<com.android.internal.view.menu.MenuItemImpl: java.lang.CharSequence getTitle()>
SOURCE|<java.net.URLConnection: int getHeaderFieldInt(java.lang.String,int)>
SOURCE|<android.util.XmlPullAttributes: java.lang.String getAttributeName(int)>
SOURCE|<java.net.URLConnection: boolean getAllowUserInteraction()>
SOURCE|<java.net.URI: java.lang.String getSchemeSpecificPart()>
SOURCE|<android.nfc.tech.IsoDep: byte[] getHiLayerResponse()>
SOURCE|<android.net.sip.SimpleSessionDescription$Media: java.lang.String getFmtp(int)>
SOURCE|<com.android.i18n.phonenumbers.Phonemetadata$PhoneNumberDesc: java.lang.String getExampleNumber()>
SOURCE|<android.webkit.URLUtil: byte[] decode(byte[])>
SOURCE|<android.widget.PopupWindow: int getSoftInputMode()>
SOURCE|<com.android.internal.policy.impl.PhoneWindowManager: boolean isMusicActive()>
SOURCE|<android.webkit.WebSettingsClassic: boolean getShowVisualIndicator()>
SOURCE|<com.android.bluetooth.btservice.AdapterService: int getAdapterConnectionState()>
SOURCE|<gov.nist.javax.sip.stack.TCPMessageChannel: java.lang.String getPeerProtocol()>
SOURCE|<android.graphics.Paint: int getTextRunCursor(java.lang.String,int,int,int,int,int)>
SOURCE|<com.android.email.activity.MailboxFragmentAdapter: int getItemViewType(int)>
SOURCE|<gov.nist.core.HostPort: int getPort()>
SOURCE|<com.android.exchange.EasSyncService: com.android.exchange.EasResponse sendHttpClientOptions()>
SOURCE|<javax.crypto.KeyAgreement: java.security.Provider getProvider()>
SOURCE|<com.android.launcher2.Workspace$ZoomOutInterpolator: float getInterpolation(float)>
SOURCE|<org.apache.harmony.xnet.provider.jsse.HandshakeIODataStream: byte[] read(int)>
SOURCE|<android.text.PackedIntVector: int getValue(int,int)>
SOURCE|<android.bluetooth.IBluetooth$Stub$Proxy: int getState()>
SOURCE|<android.app.LocalActivityManager: android.view.Window destroyActivity(java.lang.String,boolean)>
SOURCE|<android.net.Credentials: int getUid()>
SOURCE|<android.net.Uri: android.net.Uri parse(java.lang.String)>
SOURCE|<com.android.email.activity.UIControllerSearchTwoPane: long getUIAccountId()>
SOURCE|<java.text.NumberFormat: java.util.Currency getCurrency()>
SOURCE|<java.text.AttributedString$AttributedIterator: int getRunLimit(java.text.AttributedCharacterIterator$Attribute)>
SOURCE|<com.android.contacts.ContactsUtils: java.lang.String getCurrentCountryIso(android.content.Context)>
SOURCE|<com.android.providers.contacts.ReorderingCursorWrapper: int getType(int)>
SOURCE|<com.android.gallery3d.ui.UploadedTexture: int getHeight()>
SOURCE|<com.android.server.am.ActivityManagerService: com.android.server.pm.UserManagerService getUserManagerLocked()>
SOURCE|<android.app.backup.BackupDataInputStream: java.lang.String getKey()>
SOURCE|<java.util.LinkedHashMap: java.util.Iterator newEntryIterator()>
SOURCE|<android.filterpacks.performance.Throughput: float getFramesPerSecond()>
SOURCE|<com.android.internal.view.menu.ActionMenuPresenter: android.view.View getItemView(com.android.internal.view.menu.MenuItemImpl,android.view.View,android.view.ViewGroup)>
SOURCE|<android.content.pm.IPackageManager$Stub$Proxy: void getPackageSizeInfo(java.lang.String,int,android.content.pm.IPackageStatsObserver)>
SOURCE|<android.emoji.EmojiFactory: int getVendorSpecificSjisFromAndroidPua(int)>
SOURCE|<javax.net.ssl.SSLSessionBindingEvent: java.lang.String getName()>
SOURCE|<com.android.providers.contacts.VoicemailContentProvider$UriData: com.android.providers.contacts.VoicemailContentProvider$UriData createUriData(android.net.Uri)>
SOURCE|<com.android.email.activity.UIControllerOnePane: long getUIAccountId()>
SOURCE|<com.android.server.net.NetworkStatsCollection: long getEndMillis()>
SOURCE|<java.lang.Byte: byte parseByte(java.lang.String,int)>
SOURCE|<com.android.email.activity.MessagesAdapter: java.util.Set getSelectedSet()>
SOURCE|<org.apache.http.conn.routing.RouteTracker: java.net.InetAddress getLocalAddress()>
SOURCE|<com.android.contacts.model.RawContactDelta$ValuesDelta: java.lang.String getAsString(java.lang.String)>
SOURCE|<org.ccil.cowan.tagsoup.HTMLScanner: int getLineNumber()>
SOURCE|<java.nio.file.spi.FileSystemProvider: java.util.List loadInstalledProviders()>
SOURCE|<com.android.bluetooth.opp.BluetoothOppBatch: com.android.bluetooth.opp.BluetoothOppShareInfo getPendingShare()>
SOURCE|<com.android.contacts.interactions.PhoneNumberInteraction: android.content.CursorLoader getLoader()>
SOURCE|<com.android.gallery3d.data.MtpClient: java.util.List getDeviceList()>
SOURCE|<java.nio.file.DirectoryIteratorException: java.io.IOException getCause()>
SOURCE|<java.lang.reflect.Field: java.lang.Class getType()>
SOURCE|<java.time.format.DateTimeFormatter: java.time.temporal.TemporalAccessor parse(java.lang.CharSequence)>
SOURCE|<android.app.SearchableInfo: java.lang.String getSuggestPath()>
SOURCE|<com.android.inputmethod.latin.UserHistoryDictionary: com.android.inputmethod.latin.UserHistoryDictionary getInstance(android.content.Context,java.lang.String,android.content.SharedPreferences)>
SOURCE|<android.widget.RatingBar: android.widget.RatingBar$OnRatingBarChangeListener getOnRatingBarChangeListener()>
SOURCE|<android.view.View: android.os.IBinder getWindowToken()>
SOURCE|<com.android.server.AppWidgetServiceImpl: android.os.Bundle getAppWidgetOptions(int)>
SOURCE|<java.nio.channels.SocketChannel: long write(java.nio.ByteBuffer[])>
SOURCE|<com.android.deskclock.Utils: int getPressedColorId()>
SOURCE|<android.app.admin.DevicePolicyManager: int getMaximumFailedPasswordsForWipe(android.content.ComponentName)>
SOURCE|<com.android.server.connectivity.Tethering: java.lang.String[] getTetherableIfaces()>
SOURCE|<com.android.contacts.model.RawContactDelta: int getEntryCount(boolean)>
SOURCE|<android.graphics.drawable.ClipDrawable: int getOpacity()>
SOURCE|<android.media.DecoderCapabilities: java.util.List getVideoDecoders()>
SOURCE|<android.view.animation.AnimationSet: java.util.List getAnimations()>
SOURCE|<android.net.nsd.NsdServiceInfo: java.net.InetAddress getHost()>
SOURCE|<com.google.common.collect.BstModificationResult: com.google.common.collect.BstNode getOriginalTarget()>
SOURCE|<com.android.providers.contacts.AccountWithDataSet: java.lang.String getAccountType()>
SOURCE|<com.android.internal.app.ActionBarImpl$ActionModeImpl: android.view.MenuInflater getMenuInflater()>
SOURCE|<java.time.chrono.ThaiBuddhistChronology: java.lang.String getId()>
SOURCE|<com.android.nfc.handover.HandoverManager: android.nfc.NdefRecord createBluetoothOobDataRecord()>
SOURCE|<android.opengl.ETC1Util: void loadTexture(int,int,int,int,int,android.opengl.ETC1Util$ETC1Texture)>
SOURCE|<com.android.internal.telephony.gsm.GSMPhone: java.lang.String getVoiceMailNumber()>
SOURCE|<gov.nist.javax.sip.stack.SIPTransaction: java.lang.String getCipherSuite()>
SOURCE|<com.android.gallery3d.data.MediaSet: com.android.gallery3d.data.MediaItem getCoverMediaItem()>
SOURCE|<android.view.ViewGroup: android.view.View getChildAt(int)>
SOURCE|<com.android.browser.SnapshotTab: long getId()>
SOURCE|<java.net.Inet4Address: byte[] getAddress()>
SOURCE|<org.apache.harmony.security.x509.SubjectPublicKeyInfo: byte[] access$200(org.apache.harmony.security.x509.SubjectPublicKeyInfo)>
SOURCE|<android.text.format.Time: int getWeeksSinceEpochFromJulianDay(int,int)>
SOURCE|<com.android.internal.telephony.cdma.CDMAPhone: boolean getMute()>
SOURCE|<com.android.nfc.dhimpl.NativeNfcTag: int[] getTechList()>
SOURCE|<android.net.wifi.WifiInfo: int getLinkSpeed()>
SOURCE|<com.android.server.TwilightService$TwilightState: long getTodaySunrise()>
SOURCE|<com.android.phone.CdmaPhoneCallState: com.android.phone.CdmaPhoneCallState$PhoneCallState getPreviousCallState()>
SOURCE|<android.media.AudioManager: boolean isMusicActive()>
SOURCE|<com.android.gallery3d.exif.IfdData: com.android.gallery3d.exif.ExifTag[] getAllTags()>
SOURCE|<com.android.internal.telephony.uicc.UiccController: com.android.internal.telephony.IccRecords getIccRecords(int)>
SOURCE|<java.security.cert.PolicyQualifierInfo: byte[] getPolicyQualifier()>
SOURCE|<com.android.mms.dom.DocumentImpl: java.lang.String getXmlVersion()>
SOURCE|<android.test.ApplicationTestCase: android.content.Context getSystemContext()>
SOURCE|<android.nfc.tech.MifareClassic: byte[] transceive(byte[])>
SOURCE|<gov.nist.javax.sip.header.AcceptLanguage: float getQValue()>
SOURCE|<com.android.internal.os.IDropBoxManagerService$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
SOURCE|<gov.nist.javax.sip.message.SIPMessage: java.lang.String getHeaderAsFormattedString(java.lang.String)>
SOURCE|<android.net.NetworkStats: android.net.NetworkStats$Entry getValues(int,android.net.NetworkStats$Entry)>
SOURCE|<java.security.Provider: java.lang.String getName()>
SOURCE|<java.text.DateFormat: java.text.DateFormat getInstance()>
SOURCE|<android.content.Intent: android.content.Intent getIntentOld(java.lang.String)>
SOURCE|<com.android.gallery3d.data.MediaObject: long getDataVersion()>
SOURCE|<com.google.common.collect.ForwardingMultimap: java.util.Map asMap()>
SOURCE|<java.security.spec.RSAPrivateCrtKeySpec: java.math.BigInteger getPrimeExponentP()>
SOURCE|<com.android.internal.telephony.IIccPhoneBook$Stub$Proxy: java.util.List getAdnRecordsInEf(int)>
SOURCE|<android.nfc.tech.NfcB: int getMaxTransceiveLength()>
SOURCE|<com.android.ex.chips.RecipientAlternatesAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)>
SOURCE|<android.telephony.cdma.CdmaCellLocation: int getSystemId()>
SOURCE|<com.android.server.pm.PackageManagerService: int[] getPackageGids(java.lang.String)>
SOURCE|<android.net.http.HttpsConnection: java.lang.String getScheme()>
SOURCE|<android.nfc.tech.Ndef: int getMaxSize()>
SOURCE|<com.android.internal.telephony.WspTypeDecoder: java.lang.String getValueString()>
SOURCE|<com.android.contacts.list.PhoneFavoriteMergedAdapter: java.lang.Object getItem(int)>
SOURCE|<com.android.email.mail.transport.MailTransport: java.net.InetAddress getLocalAddress()>
SOURCE|<org.apache.http.params.DefaultedHttpParams: java.util.Set getNames(org.apache.http.params.HttpParams)>
SOURCE|<android.app.ActivityThread: android.app.ContextImpl getSystemContext()>
SOURCE|<java.time.temporal.ValueRange: long getLargestMinimum()>
SOURCE|<org.apache.harmony.xnet.provider.jsse.SSLSocketImpl: boolean getEnableSessionCreation()>
SOURCE|<com.android.providers.contacts.ContactDirectoryManager: com.android.providers.contacts.ContactsDatabaseHelper getDbHelper()>
SOURCE|<java.beans.PropertyChangeEvent: java.lang.Object getNewValue()>
SOURCE|<java.security.spec.RSAPrivateKeySpec: java.math.BigInteger getPrivateExponent()>
SOURCE|<com.android.gallery3d.data.ComboAlbumSet: com.android.gallery3d.data.MediaSet getSubMediaSet(int)>
SOURCE|<com.android.inputmethod.keyboard.MoreKeysKeyboard$MoreKeysKeyboardParams: int getX(int,int)>
SOURCE|<android.database.sqlite.SQLiteDatabase: android.database.sqlite.SQLiteSession createSession()>
SOURCE|<com.android.contacts.model.account.ExternalAccountType: java.lang.String getViewStreamItemPhotoActivity()>
SOURCE|<com.android.browser.BrowserSettings: float getInvertedContrast()>
SOURCE|<android.net.sip.ISipSessionListener$Stub: android.os.IBinder asBinder()>
SOURCE|<android.bluetooth.BluetoothHealthAppConfiguration: int getDataType()>
SOURCE|<com.android.internal.appwidget.IAppWidgetService$Stub$Proxy: java.util.List getInstalledProviders(int)>
SOURCE|<android.app.WallpaperInfo: android.content.pm.ServiceInfo getServiceInfo()>
SOURCE|<java.net.JarURLConnection: java.util.jar.Attributes getAttributes()>
SOURCE|<android.os.Environment: java.io.File getEmulatedStorageObbSource()>
SOURCE|<org.apache.harmony.xml.dom.AttrImpl: org.w3c.dom.Element getOwnerElement()>
SOURCE|<java.io.File: java.lang.String getParent()>
SOURCE|<java.io.EmulatedFields: short get(java.lang.String,short)>
SOURCE|<com.google.common.collect.AbstractMultimap: java.util.Map asMap()>
SOURCE|<java.net.URLConnection: java.lang.Object getContent()>
SOURCE|<com.android.nfc.dhimpl.NativeNfcTag: int getConnectedTechnology()>
SOURCE|<com.google.android.picasasync.UploadsManager: com.google.android.picasasync.SyncTaskProvider getManualVideoUploadTaskProvider()>
SOURCE|<com.android.gallery3d.exif.ExifTag: long getUnsignedLong(int)>
SOURCE|<com.android.server.net.NetworkPolicyManagerService: android.net.NetworkQuotaInfo getNetworkQuotaInfo(android.net.NetworkState)>
SOURCE|<java.text.AttributedString: java.text.AttributedCharacterIterator getIterator()>
SOURCE|<android.view.MotionEvent: float getHistoricalSize(int,int)>
SOURCE|<libcore.net.http.HttpURLConnectionImpl: int getDefaultPort()>
SOURCE|<android.net.nsd.NsdServiceInfo: int getPort()>
SOURCE|<com.android.internal.telephony.ITelephony$Stub$Proxy: int getDataState()>
SOURCE|<android.media.SoundPool: int load(android.content.Context,int,int)>
SOURCE|<com.android.internal.view.IInputContext$Stub$Proxy: void getCursorCapsMode(int,int,com.android.internal.view.IInputContextCallback)>
SOURCE|<com.android.mms.TempFileProvider: java.lang.String getType(android.net.Uri)>
SOURCE|<com.google.common.collect.MapMakerInternalMap$StrongEvictableEntry: com.google.common.collect.MapMakerInternalMap$ReferenceEntry getNextEvictable()>
SOURCE|<java.util.WeakHashMap$Entry: java.lang.Object getValue()>
SOURCE|<com.android.server.am.ProviderMap: com.android.server.am.ContentProviderRecord getProviderByName(java.lang.String)>
SOURCE|<com.android.internal.os.ProcessStats: com.android.internal.os.ProcessStats$Stats getWorkingStats(int)>
SOURCE|<android.widget.AdapterView: int getLastVisiblePosition()>
SOURCE|<android.view.accessibility.AccessibilityRecord: java.lang.CharSequence getClassName()>
SOURCE|<android.webkit.WebViewCore: android.webkit.WebViewClassic getWebViewClassic()>
SOURCE|<com.android.videoeditor.widgets.ImageViewTouchBase: android.graphics.Bitmap getImageBitmap()>
SOURCE|<com.android.browser.WebViewTimersControl: com.android.browser.WebViewTimersControl getInstance()>
SOURCE|<com.android.email.ResourceHelper: int getAccountColorId(long)>
SOURCE|<android.view.ViewStub: int getLayoutResource()>
SOURCE|<android.widget.RemoteViewsAdapter: int getViewTypeCount()>
SOURCE|<com.android.contacts.editor.KindSectionView: com.android.contacts.model.dataitem.DataKind getKind()>
SOURCE|<android.mtp.MtpObjectInfo: int getThumbPixHeight()>
SOURCE|<com.android.internal.textservice.ITextServicesManager$Stub$Proxy: android.view.textservice.SpellCheckerInfo[] getEnabledSpellCheckers()>
SOURCE|<com.android.contacts.detail.ContactDetailFragment$ViewEntryDimensions: int getPaddingTop()>
SOURCE|<com.android.contacts.model.Contact: android.net.Uri getLookupUri()>
SOURCE|<org.apache.harmony.security.asn1.BerInputStream: int getTagOffset()>
SOURCE|<gov.nist.javax.sip.header.HeaderFactoryImpl: javax.sip.header.MaxForwardsHeader createMaxForwardsHeader(int)>
SOURCE|<com.android.internal.telephony.cat.CommandParamsFactory: com.android.internal.telephony.cat.CommandParamsFactory getInstance(com.android.internal.telephony.cat.RilMessageDecoder,com.android.internal.telephony.IccFileHandler)>
SOURCE|<gov.nist.javax.sip.header.AuthenticationInfo: java.lang.String getCNonce()>
SOURCE|<gov.nist.javax.sip.message.SIPMessage: javax.sip.header.CSeqHeader getCSeqHeader()>
SOURCE|<android.renderscript.Allocation: int getUsage()>
SOURCE|<android.text.method.TextKeyListener$NullKeyListener: android.text.method.TextKeyListener$NullKeyListener getInstance()>
SOURCE|<java.util.AbstractMap$SimpleImmutableEntry: java.lang.Object getKey()>
SOURCE|<org.apache.harmony.xml.dom.LeafNodeImpl: org.w3c.dom.Node getNextSibling()>
SOURCE|<com.android.bluetooth.a2dp.A2dpStateMachine: java.util.List getConnectedDevices()>
SOURCE|<com.android.phone.PhoneGlobals: android.app.KeyguardManager getKeyguardManager()>
SOURCE|<com.android.browser.provider.BrowserProvider: java.lang.String getType(android.net.Uri)>
SOURCE|<android.app.WallpaperInfo: java.lang.String getPackageName()>
SOURCE|<com.adobe.xmp.impl.XMPSchemaRegistryImpl: java.lang.String getNamespacePrefix(java.lang.String)>
SOURCE|<gov.nist.javax.sip.parser.Lexer: java.lang.String getHeaderValue(java.lang.String)>
SOURCE|<android.graphics.drawable.LayerDrawable: int getNumberOfLayers()>
SOURCE|<android.widget.ListView$ArrowScrollFocusResult: int getSelectedPosition()>
SOURCE|<android.preference.PreferenceActivity: android.widget.Button getNextButton()>
SOURCE|<com.android.internal.view.menu.ActionMenuItem: int getGroupId()>
SOURCE|<android.filterfw.core.InputPort: android.filterfw.core.FrameFormat getSourceFormat()>
SOURCE|<com.android.internal.widget.multiwaveview.Ease$Quart$2: float getInterpolation(float)>
SOURCE|<javax.net.ssl.KeyManagerFactory: javax.net.ssl.KeyManager[] getKeyManagers()>
SOURCE|<com.android.vcard.VCardParserImpl_V30: int getVersion()>
SOURCE|<com.android.contacts.model.RawContactDelta: int getMimeEntriesCount(java.lang.String,boolean)>
SOURCE|<gov.nist.javax.sip.stack.MessageChannel: gov.nist.core.HostPort getHostPort()>
SOURCE|<android.location.LocationManager: java.util.List getAllProviders()>
SOURCE|<com.android.internal.telephony.gsm.GSMPhone: java.lang.String getSubscriberId()>
SOURCE|<android.telephony.CellIdentityLte: int getCi()>
SOURCE|<java.util.Date: int getYear()>
SOURCE|<com.coremedia.iso.boxes.SampleTableBox: com.coremedia.iso.boxes.ChunkOffsetBox getChunkOffsetBox()>
SOURCE|<com.android.contacts.list.CustomContactListFilterActivity$DisplayAdapter: java.lang.Object getChild(int,int)>
SOURCE|<org.apache.harmony.xml.dom.CommentImpl: java.lang.String getNodeName()>
SOURCE|<com.android.providers.downloads.RealSystemFacade: android.net.NetworkInfo getActiveNetworkInfo(int)>
SOURCE|<android.webkit.WebSettings: int getTextZoom()>
SOURCE|<android.widget.AbsListView: android.view.ContextMenu$ContextMenuInfo createContextMenuInfo(android.view.View,int,long)>
SOURCE|<com.android.calendar.selectcalendars.SelectCalendarsSimpleAdapter: java.lang.Object getItem(int)>
SOURCE|<android.widget.CalendarView: int getWeekNumberColor()>
SOURCE|<org.apache.http.HttpHost: java.net.InetAddress getAddress()>
SOURCE|<java.util.concurrent.locks.AbstractQueuedLongSynchronizer: int getWaitQueueLength(java.util.concurrent.locks.AbstractQueuedLongSynchronizer$ConditionObject)>
SOURCE|<com.android.server.am.TransferPipe: android.os.ParcelFileDescriptor getReadFd()>
SOURCE|<android.nfc.Tag: byte[] readBytesWithNull(android.os.Parcel)>
SOURCE|<com.android.contacts.list.ContactListAdapter: android.net.Uri getFirstContactUri()>
SOURCE|<android.net.IConnectivityManager$Stub$Proxy: java.lang.String[] getTetherableUsbRegexs()>
SOURCE|<com.android.deskclock.worldclock.WorldClockAdapter: java.lang.Object getItem(int)>
SOURCE|<com.android.launcher2.CellLayout$ViewCluster: int[] getEdge(int)>
SOURCE|<android.view.ContextThemeWrapper: int getThemeResId()>
SOURCE|<com.android.internal.telephony.gsm.SIMRecords: java.lang.String getMsisdnAlphaTag()>
SOURCE|<android.net.rtp.RtpStream: int getRemotePort()>
SOURCE|<com.android.vcard.VCardParserImpl_V40: int getVersion()>
SOURCE|<android.graphics.drawable.TransitionDrawable$TransitionState: int getChangingConfigurations()>
SOURCE|<gov.nist.javax.sip.stack.UDPMessageChannel: java.lang.String getPeerAddress()>
SOURCE|<com.android.internal.telephony.gsm.GSMPhone: java.util.List getPendingMmiCodes()>
SOURCE|<java.io.FileDescriptor: int getInt$()>
SOURCE|<com.android.nfc.P2pLinkManager: java.lang.String getMessageType(android.nfc.NdefMessage)>
SOURCE|<java.net.HttpCookie: java.lang.String getDomain()>
SOURCE|<android.text.SpannableStringBuilder: int getSpanFlags(java.lang.Object)>
SOURCE|<java.text.DateFormatSymbols: java.lang.String[][] internalZoneStrings()>
SOURCE|<com.google.android.mms.pdu.SendConf: int getResponseStatus()>
SOURCE|<java.util.concurrent.Executors: java.util.concurrent.Callable privilegedCallableUsingCurrentClassLoader(java.util.concurrent.Callable)>
SOURCE|<com.android.contacts.model.RawContactDelta: java.lang.String getAccountType()>
SOURCE|<android.content.pm.ComponentInfo: android.content.pm.ApplicationInfo getApplicationInfo()>
SOURCE|<com.android.launcher2.DragLayer: float getDescendantRectRelativeToSelf(android.view.View,android.graphics.Rect)>
SOURCE|<android.inputmethodservice.Keyboard: int getKeyHeight()>
SOURCE|<com.android.deskclock.widget.multiwaveview.GlowPadView: int getDirectionDescriptionsResourceId()>
SOURCE|<android.text.method.ReplacementTransformationMethod$SpannedReplacementCharSequence: int getSpanFlags(java.lang.Object)>
SOURCE|<gov.nist.javax.sip.message.SIPResponse: gov.nist.javax.sip.message.SIPRequest createRequest(gov.nist.javax.sip.address.SipUri,gov.nist.javax.sip.header.Via,gov.nist.javax.sip.header.CSeq,gov.nist.javax.sip.header.From,gov.nist.javax.sip.header.To)>
SOURCE|<com.android.browser.WebStorageSizeManager$StatFsDiskInfo: long getFreeSpaceSizeBytes()>
SOURCE|<com.android.email.activity.AccountSelectorAdapter: long getAccountId(int)>
SOURCE|<android.hardware.usb.UsbEndpoint: int getAttributes()>
SOURCE|<com.android.exchange.adapter.ContactsSyncAdapter: java.lang.String getCollectionName()>
SOURCE|<java.security.Policy: java.security.PermissionCollection getPermissions(java.security.ProtectionDomain)>
SOURCE|<java.util.IllegalFormatWidthException: java.lang.String getMessage()>
SOURCE|<android.nfc.INdefPushCallback$Stub$Proxy: android.net.Uri[] getUris()>
SOURCE|<android.media.AudioManager: int getRingerMode()>
SOURCE|<java.lang.reflect.Parameter: java.lang.String getRealName()>
SOURCE|<com.android.exchange.ExchangeService: java.lang.String getEasAccountSelector()>
SOURCE|<android.mtp.MtpObjectInfo: long getDateModified()>
SOURCE|<com.android.server.input.InputManagerService: android.view.InputDevice getInputDevice(int)>
SOURCE|<android.widget.TextView: android.content.res.ColorStateList getTextColors(android.content.Context,android.content.res.TypedArray)>
SOURCE|<android.preference.Preference: boolean getPersistedBoolean(boolean)>
SOURCE|<com.android.internal.telephony.PhoneBase: com.android.internal.telephony.IccCard getIccCard()>
SOURCE|<android.graphics.drawable.ShapeDrawable$ShapeState: int getChangingConfigurations()>
SOURCE|<com.android.gallery3d.data.ComboAlbumSet: java.lang.String getName()>
SOURCE|<com.android.gallery3d.ui.FlingScroller: int getCurrX()>
SOURCE|<android.app.ActivityOptions: int getCustomExitResId()>
SOURCE|<android.content.pm.LabeledIntent: android.graphics.drawable.Drawable loadIcon(android.content.pm.PackageManager)>
SOURCE|<android.app.ActivityThread$ApplicationThread: android.os.Debug$MemoryInfo dumpMemInfo(java.io.FileDescriptor,boolean,boolean,java.lang.String[])>
SOURCE|<android.os.CommonTimeConfig: java.lang.String getInterfaceBinding()>
SOURCE|<com.google.android.picasasync.PicasaDatabaseHelper: java.lang.String getRealAlbumId(java.lang.String,java.lang.String)>
SOURCE|<android.webkit.WebSettings: boolean getNavDump()>
SOURCE|<org.apache.http.impl.conn.tsccm.ThreadSafeClientConnManager: org.apache.http.conn.ClientConnectionRequest requestConnection(org.apache.http.conn.routing.HttpRoute,java.lang.Object)>
SOURCE|<com.android.gallery3d.ui.GLRootView: int getCompensation()>
SOURCE|<android.view.accessibility.AccessibilityNodeInfo: int getAccessibilityViewId(long)>
SOURCE|<com.android.internal.telephony.test.LineReader: java.lang.String getNextLineCtrlZ()>
SOURCE|<android.util.MonthDisplayHelper: int getMonth()>
SOURCE|<com.android.phone.EmergencyCallbackModeService: boolean getEmergencyCallbackModeCallState()>
SOURCE|<com.android.internal.telephony.cdma.CdmaServiceStateTracker: java.lang.String getMdnNumber()>
SOURCE|<com.android.videoeditor.util.MediaItemUtils: long getMinimumMediaItemDuration(com.android.videoeditor.service.MovieMediaItem)>
SOURCE|<java.text.DateFormatSymbols: java.lang.String[] getShortWeekdays()>
SOURCE|<com.android.calendar.selectcalendars.SelectCalendarsSyncAdapter: java.util.HashMap getChanges()>
SOURCE|<com.adobe.xmp.impl.XMPNode: java.lang.String getName()>
SOURCE|<android.app.admin.DevicePolicyManager: int getPasswordMinimumNumeric(android.content.ComponentName,int)>
SOURCE|<android.webkit.WebHistoryItem: java.lang.String getOriginalUrl()>
SOURCE|<android.text.SpannedString: int getSpanStart(java.lang.Object)>
SOURCE|<com.android.mms.ui.ManageSimMessages: android.database.Cursor access$102(com.android.mms.ui.ManageSimMessages,android.database.Cursor)>
SOURCE|<com.android.internal.app.ActionBarImpl$TabImpl: android.view.View getCustomView()>
SOURCE|<android.widget.TextView: java.util.Locale getTextServicesLocale()>
SOURCE|<com.android.inputmethod.keyboard.internal.TouchPositionCorrection: int getRows()>
SOURCE|<com.android.internal.os.BatteryStatsImpl: int getDischargeCurrentLevel()>
SOURCE|<com.google.common.collect.AbstractIterator: java.lang.Object next()>
SOURCE|<com.android.deskclock.DeskClock$TabsAdapter: android.app.Fragment getItem(int)>
SOURCE|<gov.nist.javax.sip.message.SIPMessage: java.util.Iterator getHeaders()>
SOURCE|<gov.nist.javax.sip.header.SIPIfMatch: java.lang.String getETag()>
SOURCE|<android.webkit.Plugin: java.lang.String getFileName()>
SOURCE|<android.app.Fragment: android.view.LayoutInflater getLayoutInflater(android.os.Bundle)>
SOURCE|<org.apache.harmony.security.x509.DNParser: java.util.List parse()>
SOURCE|<android.content.pm.VerificationParams: android.net.Uri getReferrer()>
SOURCE|<com.android.internal.telephony.sip.SipPhone: android.telephony.CellLocation getCellLocation()>
SOURCE|<com.android.launcher2.LauncherModel: android.content.ComponentName getComponentNameFromResolveInfo(android.content.pm.ResolveInfo)>
SOURCE|<android.media.videoeditor.MediaArtistNativeHelper: java.lang.String getProjectAudioTrackPCMFilePath()>
SOURCE|<android.widget.PopupMenu: android.view.MenuInflater getMenuInflater()>
SOURCE|<android.app.admin.IDevicePolicyManager$Stub$Proxy: int getPasswordMinimumLength(android.content.ComponentName,int)>
SOURCE|<android.net.http.Headers: long getTransferEncoding()>
SOURCE|<android.preference.EditTextPreference: java.lang.String getText()>
SOURCE|<com.android.launcher2.PagedViewGridLayout: android.view.View getChildOnPageAt(int)>
SOURCE|<com.android.launcher2.DragView: android.graphics.Rect getDragRegion()>
SOURCE|<android.webkit.WebSettings: boolean getMediaPlaybackRequiresUserGesture()>
SOURCE|<com.android.internal.telephony.cdma.CdmaSMSDispatcher: java.lang.String getFormat()>
SOURCE|<com.android.server.pm.PackageManagerService: android.content.pm.ProviderInfo getProviderInfo(android.content.ComponentName,int,int)>
SOURCE|<com.google.common.collect.MapMakerInternalMap: java.lang.Object getLiveValue(com.google.common.collect.MapMakerInternalMap$ReferenceEntry)>
SOURCE|<junit.runner.BaseTestRunner: java.lang.String processArguments(java.lang.String[])>
SOURCE|<com.android.mms.ui.UriImage: com.google.android.mms.pdu.PduPart getResizedImageAsPart(int,int,int)>
SOURCE|<com.android.browser.BrowserSettings: int getMinimumFontSize()>
SOURCE|<android.filterfw.geometry.Rectangle: float getHeight()>
SOURCE|<com.android.mms.MmsConfig: int getMinimumSlideElementDuration()>
SOURCE|<com.googlecode.mp4parser.authoring.Mp4TrackImpl: java.lang.String getHandler()>
SOURCE|<com.android.gallery3d.data.FilterTypeSet: int getMediaItemCount()>
SOURCE|<android.widget.LinearLayout: int getVirtualChildCount()>
SOURCE|<android.webkit.CookieManagerClassic: android.webkit.CookieManagerClassic getInstance()>
SOURCE|<com.android.contacts.list.PhoneNumberListAdapter: android.net.Uri getDataUri(int)>
SOURCE|<android.webkit.WebSettingsClassic: boolean getDisplayZoomControls()>
SOURCE|<com.android.internal.telephony.cdma.CDMAPhone: com.android.internal.telephony.CallTracker getCallTracker()>
SOURCE|<com.android.internal.logging.AndroidHandler: int getAndroidLevel(java.util.logging.Level)>
SOURCE|<android.webkit.WebSettings: java.lang.String getSansSerifFontFamily()>
SOURCE|<com.android.systemui.statusbar.phone.PhoneStatusBar: android.animation.Animator interpolator(android.animation.TimeInterpolator,android.animation.Animator)>
SOURCE|<com.google.common.collect.MapMaker: com.google.common.base.Ticker getTicker()>
SOURCE|<android.view.ViewConfiguration: int getScaledPagingTouchSlop()>
SOURCE|<android.hardware.Camera$Parameters: java.lang.String getAntibanding()>
SOURCE|<android.app.IWallpaperManagerCallback$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
SOURCE|<android.os.StrictMode: int getThreadPolicyMask()>
SOURCE|<android.accounts.IAccountManager$Stub$Proxy: android.accounts.Account[] getAccounts(java.lang.String)>
SOURCE|<com.android.i18n.phonenumbers.geocoding.AreaCodeMap: com.android.i18n.phonenumbers.geocoding.AreaCodeMapStorageStrategy getAreaCodeMapStorage()>
SOURCE|<com.android.systemui.recent.RecentsPanelView$TaskDescriptionAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)>
SOURCE|<org.apache.harmony.xnet.provider.jsse.SSLSocketImpl: java.io.OutputStream getOutputStream()>
SOURCE|<com.android.email.activity.MessageFileView: com.android.email.activity.MessageFileViewFragment getFragment()>
SOURCE|<com.android.browser.provider.BrowserProvider2$SuggestionsCursor: int getInt(int)>
SOURCE|<com.android.deskclock.widget.multiwaveview.PointCloud$GlowManager: float getX()>
SOURCE|<android.renderscript.Mesh: android.renderscript.Mesh$Primitive getPrimitive(int)>
SOURCE|<com.android.internal.telephony.gsm.VoiceMailConstants: java.lang.String getVoiceMailNumber(java.lang.String)>
SOURCE|<android.media.AudioRecord: int getMinBufferSize(int,int,int)>
SOURCE|<javax.net.SocketFactory: java.net.Socket createSocket()>
SOURCE|<com.android.mms.dom.smil.SmilDocumentImpl: float getDur()>
SOURCE|<java.util.EnumSet: java.lang.Object clone()>
SOURCE|<gov.nist.javax.sip.header.Contact: java.lang.String getSipInstanceParam()>
SOURCE|<android.os.INetworkManagementService$Stub$Proxy: android.net.NetworkStats getNetworkStatsSummaryXt()>
SOURCE|<com.android.launcher2.LauncherSettings$Favorites: android.net.Uri getContentUri(long,boolean)>
SOURCE|<com.android.gallery3d.data.MtpDevice: java.util.ArrayList getMediaItem(int,int)>
SOURCE|<com.android.internal.telephony.IccRecords: com.android.internal.telephony.AdnRecordCache getAdnCache()>
SOURCE|<com.android.providers.contacts.ContactsProvider2: com.android.providers.contacts.DataRowHandler getDataRowHandler(java.lang.String)>
SOURCE|<com.google.android.apps.lightcycle.sensor.SensorReader: float[] getFilterOutput()>
SOURCE|<com.android.internal.policy.impl.keyguard.KeyguardSecurityViewFlipper: com.android.internal.policy.impl.keyguard.KeyguardSecurityView getSecurityView()>
SOURCE|<java.lang.reflect.AccessibleObject: java.lang.'annotation'.Annotation[] getAnnotations()>
SOURCE|<com.android.gallery3d.filtershow.filters.ImageFilterTinyPlanet: float getAngle()>
SOURCE|<android.preference.TwoStatePreference: boolean getDisableDependentsState()>
SOURCE|<com.android.contacts.model.Contact: com.google.common.collect.ImmutableList getInvitableAccountTypes()>
SOURCE|<android.provider.Telephony$Threads: long getOrCreateThreadId(android.content.Context,java.util.Set)>
SOURCE|<gov.nist.javax.sip.header.SIPHeader: java.lang.String encode()>
SOURCE|<android.view.ViewConfiguration: int getScaledScrollBarSize()>
SOURCE|<java.util.concurrent.atomic.AtomicReference: java.lang.Object getAndSet(java.lang.Object)>
SOURCE|<com.android.bluetooth.btservice.AdapterProperties: int getScanMode()>
SOURCE|<org.xml.sax.helpers.AttributesImpl: java.lang.String getValue(java.lang.String,java.lang.String)>
SOURCE|<android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateStubImpl: android.support.v4.view.accessibility.AccessibilityNodeProviderCompat getAccessibilityNodeProvider(java.lang.Object,android.view.View)>
SOURCE|<android.widget.TextView: int getTotalPaddingEnd()>
SOURCE|<org.apache.http.auth.AuthSchemeRegistry: java.util.List getSchemeNames()>
SOURCE|<com.android.internal.os.BatteryStatsImpl: int getDischargeCurrentLevelLocked()>
SOURCE|<java.net.URLConnection: int getReadTimeout()>
SOURCE|<android.filterfw.core.Filter: int getNumberOfOutputs()>
SOURCE|<com.android.internal.statusbar.StatusBarIconList: int getSlotIndex(java.lang.String)>
SOURCE|<libcore.net.http.ResponseHeaders: java.lang.String getConnection()>
SOURCE|<com.android.videoeditor.VideoEditorActivity: com.android.videoeditor.widgets.OverlayLinearLayout getOverlayLayout()>
SOURCE|<com.adobe.xmp.impl.CountOutputStream: int getBytesWritten()>
SOURCE|<com.android.phone.PhoneUtils: java.lang.String getPresentationString(android.content.Context,int)>
SOURCE|<com.android.gallery3d.data.BitmapPool: android.graphics.Bitmap getBitmap(int,int)>
SOURCE|<com.android.server.wm.WindowState: int getSystemUiVisibility()>
SOURCE|<gov.nist.javax.sip.stack.TLSMessageChannel: java.lang.String getKey()>
SOURCE|<android.hardware.usb.UsbInterface: android.hardware.usb.UsbEndpoint getEndpoint(int)>
SOURCE|<com.android.deskclock.DeskClock$TabsAdapter$TabInfo: int getPosition()>
SOURCE|<android.speech.tts.TextToSpeechService$SpeechItem: float getFloatParam(java.lang.String,float)>
SOURCE|<com.android.launcher2.LauncherAppWidgetHostView: android.view.View getErrorView()>
SOURCE|<gov.nist.javax.sip.stack.TLSMessageProcessor: int getMaximumMessageSize()>
SOURCE|<android.net.ThrottleManager: long getByteCount(java.lang.String,int,int,int)>
SOURCE|<com.android.ex.chips.Queries$Query: android.net.Uri getContentUri()>
SOURCE|<android.media.MediaFile: java.lang.String getFileTitle(java.lang.String)>
SOURCE|<java.io.RandomAccessFile: float readFloat()>
SOURCE|<com.android.internal.app.IMediaContainerService$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
SOURCE|<com.android.email.activity.ShortcutPickerFragment$MailboxShortcutPickerFragment: java.lang.String[] getFromColumns()>
SOURCE|<com.android.videoeditor.service.MovieMediaItem: com.android.videoeditor.service.MovieEffect getEffect()>
SOURCE|<android.net.Uri: java.lang.String access$600()>
SOURCE|<com.android.gallery3d.picasasource.PicasaSource: com.google.android.picasastore.PicasaStoreFacade getPicasaStoreFacade()>
SOURCE|<java.io.RandomAccessFile: long readLong()>
SOURCE|<com.android.server.BatteryService: int getPlugType()>
SOURCE|<java.nio.channels.spi.AbstractSelectableChannel: java.nio.channels.spi.SelectorProvider provider()>
SOURCE|<com.android.gallery3d.data.DataManager: android.net.Uri getContentUri(com.android.gallery3d.data.Path)>
SOURCE|<com.android.internal.telephony.sip.SipPhone: com.android.internal.telephony.IccSmsInterfaceManager getIccSmsInterfaceManager()>
SOURCE|<android.util.Property: java.lang.String getName()>
SOURCE|<org.apache.http.util.EntityUtils: java.lang.String getContentMimeType(org.apache.http.HttpEntity)>
SOURCE|<com.android.camera.RecordLocationPreference: java.lang.String getValue()>
SOURCE|<com.android.internal.policy.impl.keyguard.PagedView$ScrollInterpolator: float getInterpolation(float)>
SOURCE|<android.app.admin.DevicePolicyManager: int getPasswordHistoryLength(android.content.ComponentName,int)>
SOURCE|<android.util.MonthDisplayHelper: int getDayAt(int,int)>
SOURCE|<org.xml.sax.helpers.AttributesImpl: int getLength()>
SOURCE|<com.android.camera.ComboPreferences: float getFloat(java.lang.String,float)>
SOURCE|<android.text.Layout: int getLineBounds(int,android.graphics.Rect)>
SOURCE|<android.net.ConnectivityManager: android.net.LinkProperties getActiveLinkProperties()>
SOURCE|<android.graphics.Paint: float getTextRunAdvances(char[],int,int,int,int,int,float[],int,int)>
SOURCE|<com.google.android.apps.lightcycle.camera.CameraUtility: java.lang.String getFocusMode(com.google.android.apps.lightcycle.camera.CameraApiProxy$CameraProxy)>
SOURCE|<java.util.jar.Manifest: java.util.jar.Manifest$Chunk getChunk(java.lang.String)>
SOURCE|<android.os.Messenger: android.os.IBinder getBinder()>
SOURCE|<android.media.videoeditor.VideoEditorImpl: android.media.videoeditor.MediaArtistNativeHelper getNativeContext()>
SOURCE|<com.android.mms.util.Recycler$SmsRecycler: int getMessageLimit(android.content.Context)>
SOURCE|<android.bluetooth.BluetoothAdapter: android.bluetooth.BluetoothServerSocket listenUsingRfcommWithServiceRecord(java.lang.String,java.util.UUID)>
SOURCE|<com.android.contacts.group.GroupEditorFragment$Member: android.net.Uri getLookupUri()>
SOURCE|<com.android.contacts.model.RawContactDelta: java.lang.String getAccountName()>
SOURCE|<java.lang.Package: java.lang.String getName()>
SOURCE|<com.android.gallery3d.filtershow.cache.ImageLoader: int getOrientationFromPath(java.lang.String)>
SOURCE|<gov.nist.javax.sip.address.AddressImpl: gov.nist.core.HostPort getHostPort()>
SOURCE|<android.view.ViewGroup: android.view.ViewGroup$LayoutParams generateDefaultLayoutParams()>
SOURCE|<android.content.pm.IPackageMoveObserver$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
SOURCE|<com.android.server.pm.PackageManagerService$FileInstallArgs: java.lang.String getCodePath()>
SOURCE|<android.net.SSLCertificateSocketFactory$1: java.security.cert.X509Certificate[] getAcceptedIssuers()>
SOURCE|<android.net.wifi.WifiInfo: java.lang.String getMacAddress()>
SOURCE|<com.android.contacts.model.account.BaseAccountType$ImActionInflater: int getTypeLabelResource(java.lang.Integer)>
SOURCE|<com.google.common.collect.Lists$OnePlusArrayList: java.lang.Object get(int)>
SOURCE|<android.renderscript.Matrix2f: float get(int,int)>
SOURCE|<android.telephony.SignalStrength: int getEvdoEcio()>
SOURCE|<com.android.contacts.util.StreamItemEntry: java.lang.String getText()>
SOURCE|<com.android.browser.BookmarkUtils: android.graphics.Bitmap createIcon(android.content.Context,android.graphics.Bitmap,android.graphics.Bitmap,com.android.browser.BookmarkUtils$BookmarkIconType)>
SOURCE|<android.widget.ListView: android.graphics.drawable.Drawable getOverscrollHeader()>
SOURCE|<com.android.camera.CameraScreenNail: int getWidth()>
SOURCE|<com.google.android.gms.common.internal.GmsClient: android.content.Context getContext()>
SOURCE|<org.apache.harmony.security.x509.PolicyInformation: java.lang.String getPolicyIdentifier()>
SOURCE|<com.android.server.sip.SipSessionGroup$MakeCallCommand: android.net.sip.SipProfile getPeerProfile()>
SOURCE|<com.android.vcard.VCardParserImpl_V30: java.lang.String getNonEmptyLine()>
SOURCE|<com.google.common.collect.Multimaps$Keys$1$1: java.lang.Object getElement()>
SOURCE|<com.google.common.collect.ForwardingMap$StandardValues: java.util.Map map()>
SOURCE|<android.app.SearchableInfo: boolean getVoiceSearchEnabled()>
SOURCE|<java.util.UnknownFormatConversionException: java.lang.String getMessage()>
SOURCE|<com.android.inputmethod.latin.DictionaryCollection: java.util.ArrayList getSuggestions(com.android.inputmethod.latin.WordComposer,java.lang.CharSequence,com.android.inputmethod.keyboard.ProximityInfo)>
SOURCE|<com.android.server.usb.UsbDeviceManager: java.lang.String access$400()>
SOURCE|<java.net.HttpCookie: boolean getSecure()>
SOURCE|<com.android.providers.contacts.ProfileDatabaseHelper: com.android.providers.contacts.ProfileDatabaseHelper getInstance(android.content.Context)>
SOURCE|<com.android.ex.variablespeed.EngineParameters: float getWindowDuration()>
SOURCE|<android.media.videoeditor.Transition: int getBehavior()>
SOURCE|<android.bluetooth.IBluetoothInputDevice$Stub$Proxy: int getPriority(android.bluetooth.BluetoothDevice)>
SOURCE|<java.util.AbstractMap: java.util.Collection values()>
SOURCE|<android.webkit.WebView: java.lang.String getTouchIconUrl()>
SOURCE|<java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject: java.util.Collection getWaitingThreads()>
SOURCE|<com.coremedia.iso.boxes.SampleSizeBox: long getContentSize()>
SOURCE|<java.util.concurrent.CountedCompleter: int getPendingCount()>
SOURCE|<javax.xml.validation.ValidatorHandler: boolean getFeature(java.lang.String)>
SOURCE|<java.net.HttpURLConnection: java.lang.String getHeaderField(int)>
SOURCE|<com.android.server.BackupManagerService: java.lang.String getDestinationString(java.lang.String)>
SOURCE|<com.android.browser.BaseUi: android.graphics.drawable.Drawable getFaviconDrawable(android.graphics.Bitmap)>
SOURCE|<android.media.IAudioService$Stub$Proxy: int getLastAudibleStreamVolume(int)>
SOURCE|<android.os.Debug$MemoryInfo: int getTotalPss()>
SOURCE|<com.android.calendar.agenda.AgendaWindowAdapter: long getSelectedInstanceId()>
SOURCE|<com.android.launcher2.WallpaperChooserDialogFragment$ImageAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)>
SOURCE|<libcore.net.http.HttpsURLConnectionImpl: int getConnectTimeout()>
SOURCE|<com.android.mms.model.MediaModel: byte[] getData()>
SOURCE|<java.util.SimpleTimeZone: int getDSTSavings()>
SOURCE|<android.widget.HeaderViewListAdapter: int getHeadersCount()>
SOURCE|<java.net.Inet6Address: java.lang.String getHostAddress()>
SOURCE|<android.view.Window: int getLocalFeatures()>
SOURCE|<org.apache.harmony.security.x509.DNParser: char getUTF8()>
SOURCE|<android.content.SyncStorageEngine: android.content.SyncStorageEngine$AuthorityInfo getAuthority(int)>
SOURCE|<android.media.videoeditor.VideoEditorProfile: int getExportLevel(int)>
SOURCE|<org.apache.http.impl.auth.DigestScheme: java.lang.String createDigest(org.apache.http.auth.Credentials)>
SOURCE|<com.google.android.mms.pdu.NotificationInd: com.google.android.mms.pdu.EncodedStringValue getSubject()>
SOURCE|<com.android.mms.dom.smil.SmilRegionElementImpl: int getLeft()>
SOURCE|<com.android.providers.contacts.ContactsTransaction: android.database.sqlite.SQLiteDatabase getDbForTag(java.lang.String)>
SOURCE|<com.android.server.pm.PackageManagerService: com.android.server.pm.PackageManagerService$InstallArgs access$2300(com.android.server.pm.PackageManagerService,com.android.server.pm.PackageManagerService$InstallParams)>
SOURCE|<com.android.gallery3d.data.Cluster: java.util.ArrayList getItems()>
SOURCE|<java.text.NumberFormat: java.text.NumberFormat getPercentInstance()>
SOURCE|<android.webkit.WebStorageClassic: void getUsageForOrigin(java.lang.String,android.webkit.ValueCallback)>
SOURCE|<org.apache.harmony.security.x509.TBSCertList: java.util.Date getThisUpdate()>
SOURCE|<com.android.launcher2.Folder: com.android.launcher2.FolderInfo getInfo()>
SOURCE|<android.text.method.WordIterator: int getEnd(int)>
SOURCE|<android.os.Environment$UserEnvironment: java.io.File getExternalStoragePublicDirectory(java.lang.String)>
SOURCE|<android.bluetooth.IBluetooth$Stub$Proxy: int getScanMode()>
SOURCE|<com.android.browser.addbookmark.FolderSpinnerAdapter: java.lang.Object getItem(int)>
SOURCE|<com.android.browser.search.SearchEngineInfo: java.lang.String getName()>
SOURCE|<android.os.Debug: int getGlobalAllocSize()>
SOURCE|<com.android.internal.textservice.ITextServicesSessionListener$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
SOURCE|<com.google.common.collect.ImmutableCollection: java.util.Iterator iterator()>
SOURCE|<com.android.contacts.model.RawContactDelta$ValuesDelta: java.lang.Long getAsLong(java.lang.String)>
SOURCE|<com.android.internal.telephony.SmsMessageBase: java.lang.String getMessageBody()>
SOURCE|<java.nio.charset.CharsetEncoder: java.nio.charset.Charset charset()>
SOURCE|<org.apache.harmony.xml.ExpatAttributes: java.lang.String getValue(java.lang.String,java.lang.String)>
SOURCE|<com.android.internal.widget.SlidingTab$Slider: int getTabHeight()>
SOURCE|<com.android.internal.app.ActionBarImpl: int getHeight()>
SOURCE|<org.apache.http.client.methods.HttpOptions: java.util.Set getAllowedMethods(org.apache.http.HttpResponse)>
SOURCE|<android.app.Instrumentation$ActivityResult: android.content.Intent getResultData()>
SOURCE|<android.content.pm.FeatureInfo: java.lang.String getGlEsVersion()>
SOURCE|<android.animation.ValueAnimator: long getDuration()>
SOURCE|<android.emoji.EmojiFactory: int getAndroidPuaFromVendorSpecificSjis(char)>
SOURCE|<com.android.mms.data.WorkingMessage: android.net.Uri access$1300(com.google.android.mms.pdu.PduPersister,com.google.android.mms.pdu.SendReq,com.android.mms.model.SlideshowModel,android.net.Uri,android.content.Context,java.util.HashMap)>
SOURCE|<com.android.mms.transaction.SmsReceiver: com.android.mms.transaction.SmsReceiver getInstance()>
SOURCE|<com.google.common.collect.AbstractMultimap: java.util.Set keySet()>
SOURCE|<android.content.ClipData$Item: android.content.Intent getIntent()>
SOURCE|<java.text.DecimalFormatSymbols: char getDecimalSeparator()>
SOURCE|<android.util.Log: java.lang.String getStackTraceString(java.lang.Throwable)>
SOURCE|<android.view.textservice.SpellCheckerSubtype: java.lang.String getExtraValue()>
SOURCE|<com.android.browser.BrowserSettings: com.android.browser.search.SearchEngine getSearchEngine()>
SOURCE|<com.android.gallery3d.gadget.WidgetService$PhotoRVFactory: int getViewTypeCount()>
SOURCE|<javax.crypto.Mac: javax.crypto.Mac getInstance(java.lang.String)>
SOURCE|<com.android.inputmethod.latin.ResizableIntArray: int getLength()>
SOURCE|<gov.nist.javax.sip.header.AuthenticationHeader: java.lang.String getQop()>
SOURCE|<com.android.server.accessibility.TouchExplorer$ReceivedPointerTracker: int getActivePointers()>
SOURCE|<android.os.INetworkManagementService$Stub$Proxy: java.lang.String[] getDnsForwarders()>
SOURCE|<com.android.internal.telephony.cdma.EriManager: int getCdmaEriIconIndex(int,int)>
SOURCE|<com.android.internal.telephony.ims.IsimUiccRecords$EfIsimDomainLoaded: java.lang.String getEfName()>
SOURCE|<com.google.common.collect.TreeMultiset$LiveEntry: java.lang.Object getElement()>
SOURCE|<android.webkit.WebSettingsClassic: java.lang.String getSerifFontFamily()>
SOURCE|<com.android.inputmethod.latin.Suggest: com.android.inputmethod.latin.SuggestedWords getSuggestedWords(com.android.inputmethod.latin.WordComposer,java.lang.CharSequence,com.android.inputmethod.keyboard.ProximityInfo,boolean,int)>
SOURCE|<com.coremedia.iso.boxes.fragment.TrackFragmentHeaderBox: long getSampleDescriptionIndex()>
SOURCE|<android.accounts.IAccountAuthenticatorResponse$Stub: android.accounts.IAccountAuthenticatorResponse asInterface(android.os.IBinder)>
SOURCE|<gov.nist.javax.sip.header.Challenge: java.lang.String getAlgorithm()>
SOURCE|<android.net.NetworkStats: long getElapsedRealtime()>
SOURCE|<com.android.videoeditor.OverlaysAdapter: android.graphics.Bitmap loadImage(java.lang.Object)>
SOURCE|<org.apache.harmony.xml.ExpatAttributes: int getIndex(java.lang.String,java.lang.String)>
SOURCE|<android.net.http.Request: java.lang.String getUri()>
SOURCE|<libcore.icu.RuleBasedCollatorICU: int getDecomposition()>
SOURCE|<java.io.EmulatedFields$ObjectSlot: java.lang.Object getFieldValue()>
SOURCE|<javax.net.ssl.KeyManagerFactory: java.security.Provider getProvider()>
SOURCE|<org.apache.harmony.security.x509.SubjectKeyIdentifier: byte[] getEncoded()>
SOURCE|<android.filterpacks.imageproc.ToGrayFilter: android.filterfw.core.Program getNativeProgram(android.filterfw.core.FilterContext)>
SOURCE|<java.lang.reflect.Array: java.lang.Object newInstance(java.lang.Class,int)>
SOURCE|<com.android.contacts.calllog.CallDetailHistoryAdapter: long getItemId(int)>
SOURCE|<java.io.File: java.io.File[] listFiles()>
SOURCE|<com.android.gallery3d.exif.ExifTag: com.android.gallery3d.exif.Rational getRational(int)>
SOURCE|<android.filterfw.geometry.Quad: float getBoundingWidth()>
SOURCE|<java.lang.Class: java.lang.'annotation'.Annotation[] getAnnotations()>
SOURCE|<com.coremedia.iso.boxes.fragment.TrackExtendsBox: long getDefaultSampleSize()>
SOURCE|<gov.nist.javax.sip.stack.SIPTransactionStack: gov.nist.javax.sip.stack.MessageChannel createMessageChannel(gov.nist.javax.sip.message.SIPRequest,gov.nist.javax.sip.stack.MessageProcessor,javax.sip.address.Hop)>
SOURCE|<com.android.gallery3d.app.SinglePhotoDataAdapter: int getImageRotation(int)>
SOURCE|<org.apache.harmony.xml.dom.DocumentTypeImpl: java.lang.String getPublicId()>
SOURCE|<com.android.internal.telephony.sip.SipConnectionBase: com.android.internal.telephony.Connection$DisconnectCause getDisconnectCause()>
SOURCE|<com.android.gallery3d.data.FilterDeleteSet: java.lang.String getName()>
SOURCE|<android.net.TrafficStats: long getMobileTxBytes()>
SOURCE|<java.net.URLStreamHandler: java.lang.String toExternalForm(java.net.URL,boolean)>
SOURCE|<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$Uid$Pkg$Serv getServiceStatsLocked(int,java.lang.String,java.lang.String)>
SOURCE|<com.android.internal.view.menu.MenuBuilder: android.content.res.Resources getResources()>
SOURCE|<org.apache.harmony.xnet.provider.jsse.OpenSSLSocketFactoryImpl: java.lang.String[] getSupportedCipherSuites()>
SOURCE|<gov.nist.javax.sip.ListeningPointImpl: java.lang.String getIPAddress()>
SOURCE|<org.xmlpull.v1.XmlPullParserFactory: org.xmlpull.v1.XmlPullParser newPullParser()>
SOURCE|<java.util.concurrent.atomic.AtomicInteger: int get()>
SOURCE|<android.content.res.AssetManager: java.lang.CharSequence[] getResourceTextArray(int)>
SOURCE|<javax.crypto.spec.PBEKeySpec: int getKeyLength()>
SOURCE|<android.view.ViewConfiguration: int getTapTimeout()>
SOURCE|<com.android.providers.contacts.MemoryCursor: int getCount()>
SOURCE|<org.apache.http.conn.routing.HttpRoute: java.net.InetAddress getLocalAddress()>
SOURCE|<java.nio.DatagramChannelImpl$DatagramSocketAdapter: java.net.InetAddress getInetAddress()>
SOURCE|<com.android.gallery3d.app.StitchingProgressManager: java.util.ArrayList access$100(com.android.gallery3d.app.StitchingProgressManager)>
SOURCE|<android.graphics.drawable.ClipDrawable: int getIntrinsicHeight()>
SOURCE|<com.android.internal.telephony.sip.SipPhone: com.android.internal.telephony.IccPhoneBookInterfaceManager getIccPhoneBookInterfaceManager()>
SOURCE|<org.apache.harmony.security.x509.Certificate: byte[] getSignatureValue()>
SOURCE|<org.apache.harmony.security.fortress.Services: java.security.Provider$Service getService(java.lang.String)>
SOURCE|<org.apache.harmony.security.provider.cert.X509CertImpl: java.util.Set getNonCriticalExtensionOIDs()>
SOURCE|<com.android.providers.contacts.ProfileProvider: java.lang.String getType(android.net.Uri)>
SOURCE|<android.nfc.NfcActivityManager: android.nfc.NfcActivityManager$NfcApplicationState findAppState(android.app.Application)>
SOURCE|<com.android.videoeditor.VideoEditorActivity: com.android.videoeditor.widgets.MediaLinearLayout getMediaLayout()>
SOURCE|<android.webkit.WebSettingsClassic: boolean getAutoFillEnabled()>
SOURCE|<com.android.mms.model.RegionModel: int getHeight()>
SOURCE|<com.android.gallery3d.ui.BitmapTexture: int getHeight()>
SOURCE|<android.net.sip.SipManager: java.lang.String getOfferSessionDescription(android.content.Intent)>
SOURCE|<android.app.admin.IDevicePolicyManager$Stub: android.os.IBinder asBinder()>
SOURCE|<javax.net.ssl.KeyManagerFactory: java.lang.String getAlgorithm()>
SOURCE|<android.net.http.AndroidHttpClientConnection: java.net.InetAddress getRemoteAddress()>
SOURCE|<android.net.UrlQuerySanitizer: android.net.UrlQuerySanitizer$ValueSanitizer getUnregisteredParameterValueSanitizer()>
SOURCE|<com.android.camera.CameraPreference: java.lang.String getTitle()>
SOURCE|<javax.net.ssl.SSLParameters: boolean getNeedClientAuth()>
SOURCE|<com.android.org.bouncycastle.asn1.ASN1TaggedObject: com.android.org.bouncycastle.asn1.ASN1TaggedObject getInstance(java.lang.Object)>
SOURCE|<com.android.gallery3d.common.OverScroller: float getCurrVelocity()>
SOURCE|<android.app.SearchableInfo: java.lang.String getSuggestIntentAction()>
SOURCE|<com.android.internal.view.IInputMethodClient$Stub: android.os.IBinder asBinder()>
SOURCE|<android.view.Surface$CompatibleCanvas: int getWidth()>
SOURCE|<gov.nist.javax.sip.header.ContentType: java.lang.String getContentSubType()>
SOURCE|<com.android.server.InputMethodManagerService$InputMethodSettings: android.util.Pair getLastInputMethodAndSubtypeLocked()>
SOURCE|<com.google.android.apps.lightcycle.camera.CameraApiProxyAndroidImpl$CameraProxyAndroidImpl: android.hardware.Camera$Parameters getParameters()>
SOURCE|<org.apache.http.impl.io.AbstractSessionInputBuffer: int handleDecodingResult(java.nio.charset.CoderResult,org.apache.http.util.CharArrayBuffer,java.nio.ByteBuffer)>
SOURCE|<android.os.SystemService: android.os.SystemService$State getState(java.lang.String)>
SOURCE|<java.text.FieldPosition: int getEndIndex()>
SOURCE|<java.io.RandomAccessFile: java.io.FileDescriptor getFD()>
SOURCE|<com.android.vcard.VCardProperty: java.util.List getValueList()>
SOURCE|<java.lang.SecurityManager: boolean inClassLoader()>
SOURCE|<android.webkit.WebSettingsClassic: java.lang.String getProperty(java.lang.String)>
SOURCE|<com.android.server.pm.PackageManagerService: java.io.File getDataPathForUser(int)>
SOURCE|<android.nfc.tech.MifareClassic: android.nfc.Tag getTag()>
SOURCE|<com.android.inputmethod.keyboard.PointerTracker: int getLastX()>
SOURCE|<gov.nist.core.GenericObjectList: gov.nist.core.GenericObject next()>
SOURCE|<android.media.AudioTrack: int getPlayState()>
SOURCE|<android.widget.HorizontalScrollView: float getRightFadingEdgeStrength()>
SOURCE|<com.android.emailcommon.internet.MimeMessage: java.lang.String getDisposition()>
SOURCE|<com.android.server.DevicePolicyManagerService: int getPasswordMinimumNonLetter(android.content.ComponentName,int)>
SOURCE|<android.bluetooth.BluetoothAdapter: android.bluetooth.BluetoothServerSocket listenUsingInsecureRfcommWithServiceRecord(java.lang.String,java.util.UUID)>
SOURCE|<com.android.phone.PhoneInterfaceManager: java.util.List getNeighboringCellInfo()>
SOURCE|<java.security.cert.CertificateFactory: java.security.Provider getProvider()>
SOURCE|<gov.nist.javax.sip.header.Via: java.lang.String getSentProtocolField()>
SOURCE|<com.android.internal.location.ILocationProvider$Stub: android.os.IBinder asBinder()>
SOURCE|<com.android.calendar.Event: int getColumn()>
SOURCE|<android.app.ActivityThread: android.content.pm.IPackageManager getPackageManager()>
SOURCE|<java.util.FormatFlagsConversionMismatchException: java.lang.String getMessage()>
SOURCE|<com.android.gallery3d.filtershow.imageshow.GeometryMetadata: com.android.gallery3d.filtershow.imageshow.GeometryMetadata$FLIP getFlipType()>
SOURCE|<java.net.JarURLConnection: java.util.jar.Attributes getMainAttributes()>
SOURCE|<com.android.commands.monkey.MonkeySourceNetworkVars$7: java.lang.String get()>
SOURCE|<com.android.launcher2.CellLayout: float getChildrenScale()>
SOURCE|<com.android.systemui.statusbar.phone.PhoneStatusBar: com.android.systemui.statusbar.GestureRecorder getGestureRecorder()>
SOURCE|<android.widget.SlidingDrawer: android.view.View getContent()>
SOURCE|<java.util.ResourceBundle: java.util.Set keySet()>
SOURCE|<org.json.JSONArray: java.lang.Object get(int)>
SOURCE|<com.android.server.InputMethodManagerService$ImeSubtypeListAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)>
SOURCE|<java.util.logging.Logger: java.util.logging.Level getLevel()>
SOURCE|<gov.nist.javax.sip.header.Reason: java.lang.String getText()>
SOURCE|<android.net.INetworkStatsService$Stub$Proxy: java.lang.String[] getMobileIfaces()>
SOURCE|<com.android.providers.downloads.Helpers: java.lang.String getFullPath(java.lang.String,java.lang.String,int,java.io.File)>
SOURCE|<android.view.MotionEvent: int getPointerIdBits()>
SOURCE|<com.android.internal.telephony.cdma.CdmaConnection: com.android.internal.telephony.Connection$PostDialState getPostDialState()>
SOURCE|<com.android.internal.telephony.cdma.CDMALTEPhone: java.lang.String getMsisdn()>
SOURCE|<android.widget.ListView: android.graphics.drawable.Drawable getDivider()>
SOURCE|<javax.security.cert.X509Certificate$1: java.lang.String getSigAlgOID()>
SOURCE|<android.widget.AutoCompleteTextView: android.widget.AdapterView$OnItemSelectedListener getOnItemSelectedListener()>
SOURCE|<com.android.server.am.ActivityManagerService: android.content.Intent getIntentForIntentSender(android.content.IIntentSender)>
SOURCE|<com.android.email.activity.setup.EditQuickResponseDialog: android.app.Dialog onCreateDialog(android.os.Bundle)>
SOURCE|<com.android.contacts.editor.BaseRawContactEditorView: com.android.contacts.editor.PhotoEditorView getPhotoEditor()>
SOURCE|<javax.crypto.spec.PBEKeySpec: byte[] getSalt()>
SOURCE|<com.google.android.mms.pdu.NotificationInd: com.google.android.mms.pdu.EncodedStringValue getFrom()>
SOURCE|<com.android.server.input.PersistentDataStore$InputDeviceState: java.lang.String[] getKeyboardLayouts()>
SOURCE|<com.coremedia.iso.boxes.fragment.TrackFragmentHeaderBox: long getDefaultSampleSize()>
SOURCE|<android.widget.GridLayout$4: int getGravityOffset(android.view.View,int)>
SOURCE|<com.android.internal.telephony.sip.SipPhoneBase: void getPreferredNetworkType(android.os.Message)>
SOURCE|<com.google.android.apps.lightcycle.camera.TextureCameraPreview: com.google.android.apps.lightcycle.camera.CameraApiProxy$CameraProxy getCamera()>
SOURCE|<com.android.gallery3d.util.GalleryUtils: byte[] getBytes(java.lang.String)>
SOURCE|<android.content.ContentProvider: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,android.os.CancellationSignal)>
SOURCE|<com.android.videoeditor.widgets.HorizontalScrollView: float getRightFadingEdgeStrength()>
SOURCE|<android.mtp.MtpObjectInfo: int getImagePixHeight()>
SOURCE|<com.android.camera.CameraHolder: int getFrontCameraId()>
SOURCE|<android.view.MotionEvent: int getButtonState()>
SOURCE|<com.android.videoeditor.service.VideoEditorProject: com.android.videoeditor.service.MovieMediaItem getLastMediaItem()>
SOURCE|<libcore.net.http.ResponseHeaders: java.util.Set getVaryFields()>
SOURCE|<android.mtp.MtpStorageInfo: java.lang.String getVolumeIdentifier()>
SOURCE|<com.android.gallery3d.picasasource.PicasaAlbumSet$PicasaSyncTaskFuture: java.lang.Integer get()>
SOURCE|<com.android.nfc.dhimpl.NativeNfcManager: com.android.nfc.DeviceHost$LlcpServerSocket createLlcpServerSocket(int,java.lang.String,int,int,int)>
SOURCE|<android.filterfw.core.GLFrame: int getFboId()>
SOURCE|<com.android.deskclock.TimerSetupView: int getLayoutId()>
SOURCE|<android.bluetooth.BluetoothSocket: android.bluetooth.BluetoothDevice getRemoteDevice()>
SOURCE|<android.view.View: int getHorizontalScrollbarHeight()>
SOURCE|<com.android.org.bouncycastle.asn1.DEREnumerated: com.android.org.bouncycastle.asn1.DEREnumerated getInstance(com.android.org.bouncycastle.asn1.ASN1TaggedObject,boolean)>
SOURCE|<com.android.inputmethod.keyboard.MoreKeysKeyboard: int getDefaultCoordX()>
SOURCE|<android.app.ISearchManager$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
SOURCE|<com.android.org.bouncycastle.asn1.DERBoolean: com.android.org.bouncycastle.asn1.DERBoolean getInstance(com.android.org.bouncycastle.asn1.ASN1TaggedObject,boolean)>
SOURCE|<android.widget.SimpleCursorAdapter: int getStringConversionColumn()>
SOURCE|<com.android.bluetooth.hdp.HealthService: java.util.List getHealthDevicesMatchingConnectionStates(int[])>
SOURCE|<android.widget.CalendarView: int getShownWeekCount()>
SOURCE|<com.android.gallery3d.filtershow.cache.ImageLoader: android.graphics.Bitmap rotateToPortrait(android.graphics.Bitmap,int)>
SOURCE|<android.os.storage.StorageManager: java.lang.String[] getVolumePaths()>
SOURCE|<android.net.EthernetDataTracker: android.net.EthernetDataTracker getInstance()>
SOURCE|<com.coremedia.iso.boxes.MovieHeaderBox: long getCreationTime()>
SOURCE|<android.filterfw.core.FrameFormat: int getNumberOfDimensions()>
SOURCE|<com.android.contacts.activities.DialtactsActivity: java.lang.String getCallOrigin()>
SOURCE|<android.os.StatFs: int getBlockCount()>
SOURCE|<android.app.ContextImpl: java.lang.String getPackageName()>
SOURCE|<android.view.FocusFinder: int getWeightedDistanceFor(int,int)>
SOURCE|<libcore.net.http.HttpURLConnectionImpl: java.net.Proxy getProxy()>
SOURCE|<java.lang.BootClassLoader: java.lang.BootClassLoader getInstance()>
SOURCE|<android.database.Cursor: long getLong(int)>
SOURCE|<com.android.internal.telephony.ApnContext: int getWaitingApnsPermFailCount()>
SOURCE|<android.os.storage.StorageManager: boolean isObbMounted(java.lang.String)>
SOURCE|<org.apache.http.message.BasicHttpRequest: org.apache.http.ProtocolVersion getProtocolVersion()>
SOURCE|<org.xml.sax.ext.Locator2Impl: java.lang.String getEncoding()>
SOURCE|<com.android.mms.model.SlideshowModel: int getTotalMessageSize()>
SOURCE|<android.media.audiofx.Visualizer: int getSamplingRate()>
SOURCE|<com.android.bluetooth.btservice.AdapterProperties: java.lang.String getName()>
SOURCE|<com.android.phone.EditPhoneNumberPreference: java.lang.String getRawPhoneNumber()>
SOURCE|<com.android.contacts.model.RawContactDelta$ValuesDelta: java.lang.String getPhoneticGivenName()>
SOURCE|<java.net.InetAddress: byte[] getAddress()>
SOURCE|<android.text.BoringLayout: int getParagraphDirection(int)>
SOURCE|<android.net.sip.ISipService$Stub$Proxy: android.net.sip.ISipSession getPendingSession(java.lang.String)>
SOURCE|<android.content.IClipboard$Stub$Proxy: android.content.ClipData getPrimaryClip(java.lang.String)>
SOURCE|<com.android.providers.contacts.TransactionContext: java.util.Set getUpdatedRawContactIds()>
SOURCE|<com.android.internal.telephony.sip.SipPhone: com.android.internal.telephony.IccCard getIccCard()>
SOURCE|<com.googlecode.mp4parser.authoring.builder.DefaultMp4Builder$InterleaveChunkMdat: java.lang.String getType()>
SOURCE|<java.lang.Class: java.lang.reflect.Constructor getConstructor(java.lang.Class[])>
SOURCE|<com.android.internal.widget.ActionBarView: java.lang.CharSequence getTitle()>
SOURCE|<android.net.IConnectivityManager$Stub$Proxy: android.net.ProxyProperties getGlobalProxy()>
SOURCE|<com.android.internal.textservice.ISpellCheckerSessionListener$Stub: android.os.IBinder asBinder()>
SOURCE|<android.support.v4.app.NotificationCompat$Style: android.app.Notification build()>
SOURCE|<com.android.contacts.list.ContactListItemView: android.widget.ImageView getPhotoView()>
SOURCE|<com.android.server.IntentResolverOld: java.util.Iterator filterIterator()>
SOURCE|<android.view.GLES20Canvas: int getSaveCount()>
SOURCE|<com.android.vcard.VCardComposer: java.lang.String createOneEntry(java.lang.reflect.Method)>
SOURCE|<com.android.contacts.model.account.BaseAccountType$NicknameKindBuilder: java.lang.String getTagName()>
SOURCE|<com.android.gallery3d.data.Path: java.lang.String getSuffix()>
SOURCE|<com.android.org.bouncycastle.asn1.DERIA5String: java.lang.String getString()>
SOURCE|<com.android.internal.telephony.PhoneProxy: java.lang.String getEsn()>
SOURCE|<android.webkit.WebSettingsClassic: java.lang.String getDatabasePath()>
SOURCE|<android.telephony.ServiceState: int getCdmaRoamingIndicator()>
SOURCE|<javax.crypto.Mac: byte[] doFinal()>
SOURCE|<org.xmlpull.v1.XmlPullParserException: int getColumnNumber()>
SOURCE|<com.android.browser.Controller: android.content.Intent createBookmarkCurrentPageIntent(boolean)>
SOURCE|<com.android.contacts.model.RawContact: android.content.Context getContext()>
SOURCE|<android.gesture.Gesture: java.util.ArrayList getStrokes()>
SOURCE|<com.android.internal.telephony.PhoneProxy: java.lang.String getCdmaPrlVersion()>
SOURCE|<android.widget.AdapterViewAnimator: int getDisplayedChild()>
SOURCE|<gov.nist.javax.sip.address.TelephoneNumber: java.lang.String getParameter(java.lang.String)>
SOURCE|<android.app.SearchableInfo: int getInputType()>
SOURCE|<android.bluetooth.BluetoothAdapter: android.bluetooth.BluetoothDevice getRemoteDevice(byte[])>
SOURCE|<com.android.browser.Tab: java.lang.String getUrl()>
SOURCE|<android.net.Uri$StringUri: java.lang.String getEncodedQuery()>
SOURCE|<android.service.wallpaper.IWallpaperConnection$Stub: android.os.IBinder asBinder()>
SOURCE|<com.google.common.collect.SortedMultisets$ElementSet: com.google.common.collect.Multiset multiset()>
SOURCE|<com.android.email.activity.MessageViewFragment: long getMessageId()>
SOURCE|<com.android.internal.os.BatteryStatsImpl$Uid$Pkg$Serv: com.android.internal.os.BatteryStatsImpl getBatteryStats()>
SOURCE|<android.webkit.WebView: android.webkit.PluginList getPluginList()>
SOURCE|<javax.xml.parsers.DocumentBuilder: org.w3c.dom.Document parse(java.io.File)>
SOURCE|<com.android.gallery3d.ui.UploadedTexture: int getWidth()>
SOURCE|<java.util.MapEntry: java.lang.Object getValue()>
SOURCE|<com.android.contacts.group.GroupBrowseListAdapter$GroupListItemViewCache: android.net.Uri getUri()>
SOURCE|<java.util.IllegalFormatCodePointException: int getCodePoint()>
SOURCE|<com.android.exchange.utility.CalendarUtilities: java.lang.String getString(byte[],int,int)>
SOURCE|<java.nio.MappedByteBuffer: java.nio.MappedByteBuffer force()>
SOURCE|<android.app.ApplicationPackageManager: android.content.pm.ApplicationInfo getApplicationInfo(java.lang.String,int)>
SOURCE|<com.android.providers.contacts.DataRowHandlerForOrganization: int getTypeRank(int)>
SOURCE|<android.inputmethodservice.ExtractEditLayout$ExtractActionMode: android.view.Menu getMenu()>
SOURCE|<android.media.RingtoneManager: android.net.Uri getRingtoneUri(int)>
SOURCE|<android.net.UrlQuerySanitizer: android.net.UrlQuerySanitizer$ValueSanitizer getUrlLegal()>
SOURCE|<com.android.org.bouncycastle.asn1.ASN1Primitive: com.android.org.bouncycastle.asn1.ASN1Primitive toDLObject()>
SOURCE|<com.android.launcher2.ButtonDropTarget: android.graphics.drawable.Drawable getCurrentDrawable()>
SOURCE|<android.gesture.GestureOverlayView: android.graphics.Path getGesturePath()>
SOURCE|<com.android.contacts.list.ContactsRequest: int getActionCode()>
SOURCE|<com.android.gallery3d.data.LocalVideo: int getSupportedOperations()>
SOURCE|<android.webkit.WebResourceResponse: java.io.InputStream getData()>
SOURCE|<com.google.common.collect.BstMutationResult: com.google.common.collect.BstNode getOriginalRoot()>
SOURCE|<com.android.gallery3d.exif.ExifTag: int getUnsignedShort(int)>
SOURCE|<android.widget.TextView: android.text.InputFilter[] getFilters()>
SOURCE|<com.android.deskclock.widget.multiwaveview.GlowPadView: int getTargetPosition(int)>
SOURCE|<com.android.calendar.agenda.AgendaWindowAdapter: int getCount()>
SOURCE|<android.widget.TextView: java.lang.CharSequence getIterableTextForAccessibility()>
SOURCE|<com.android.internal.telephony.PhoneSubInfo: java.lang.String getIccSerialNumber()>
SOURCE|<com.android.mms.ui.UriImage: java.lang.String getSrc()>
SOURCE|<android.webkit.CacheManager$CacheResult: java.lang.String getLocalPath()>
SOURCE|<gov.nist.javax.sip.header.AuthenticationInfo: java.lang.String getNextNonce()>
SOURCE|<com.android.mms.dom.smil.ElementSequentialTimeContainerImpl: float getDur()>
SOURCE|<android.webkit.PluginManager: java.lang.Class getPluginClass(java.lang.String,java.lang.String)>
SOURCE|<android.support.v4.view.MotionEventCompat$BaseMotionEventVersionImpl: float getY(android.view.MotionEvent,int)>
SOURCE|<android.drm.DrmSupportInfo: java.util.Iterator getFileSuffixIterator()>
SOURCE|<android.widget.TabWidget: int getTabCount()>
SOURCE|<android.net.http.Headers: java.lang.String getContentEncoding()>
SOURCE|<com.android.org.bouncycastle.asn1.ASN1Set: com.android.org.bouncycastle.asn1.ASN1Primitive toDERObject()>
SOURCE|<java.time.chrono.JapaneseChronology: java.lang.String getId()>
SOURCE|<android.content.res.AssetManager: java.lang.CharSequence getPooledString(int,int)>
SOURCE|<org.apache.james.mime4j.field.datetime.parser.SimpleCharStream: int getEndLine()>
SOURCE|<com.android.email.mail.store.imap.ImapList: com.android.email.mail.store.imap.ImapList getKeyedListOrEmpty(java.lang.String,boolean)>
SOURCE|<gov.nist.javax.sip.message.ContentImpl: javax.sip.header.ContentTypeHeader getContentTypeHeader()>
SOURCE|<com.android.phone.sip.SipSharedPreferences: java.lang.String getSipCallOption()>
SOURCE|<com.android.browser.addbookmark.FolderSpinnerAdapter: android.view.View getDropDownView(int,android.view.View,android.view.ViewGroup)>
SOURCE|<com.android.contacts.list.ContactTileAdapter: int getCount()>
SOURCE|<android.bluetooth.IBluetoothInputDevice$Stub$Proxy: int getConnectionState(android.bluetooth.BluetoothDevice)>
SOURCE|<com.android.videoeditor.service.ApiService$IntentProcessor: java.util.Iterator getIntentQueueIterator()>
SOURCE|<com.android.videoeditor.service.VideoEditorProject: com.android.videoeditor.service.MovieMediaItem getPreviousMediaItem(long)>
SOURCE|<android.content.ContextWrapper: java.lang.String getPackageCodePath()>
SOURCE|<android.view.View: int getNextFocusForwardId()>
SOURCE|<java.util.Properties: java.lang.String getProperty(java.lang.String,java.lang.String)>
SOURCE|<com.android.email.mail.store.imap.ImapList: com.android.email.mail.store.imap.ImapString getStringOrEmpty(int)>
SOURCE|<android.view.ViewRootImpl: android.view.ViewParent getParentForAccessibility()>
SOURCE|<android.telephony.SmsMessage: android.telephony.SmsMessage$SubmitPdu getSubmitPdu(java.lang.String,java.lang.String,short,byte[],boolean)>
SOURCE|<java.text.NumberFormat: java.text.NumberFormat getIntegerInstance()>
SOURCE|<com.android.email.ResourceHelper: int getAccountColor(long)>
SOURCE|<org.apache.harmony.xnet.provider.jsse.NativeCrypto: java.lang.String[] getSupportedProtocols()>
SOURCE|<android.graphics.Canvas: int getMaximumBitmapWidth()>
SOURCE|<java.nio.channels.FileChannel: java.nio.channels.FileLock tryLock()>
SOURCE|<libcore.net.http.ResponseHeaders: java.net.URI getUri()>
SOURCE|<java.nio.BaseByteBuffer: char getChar(int)>
SOURCE|<com.android.i18n.phonenumbers.PhoneNumberUtil: int getCountryCodeForRegion(java.lang.String)>
SOURCE|<com.google.android.mms.util.SqliteWrapper: android.database.Cursor query(android.content.Context,android.content.ContentResolver,android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>
SOURCE|<libcore.net.url.JarURLConnectionImpl: java.util.jar.JarFile getJarFile()>
SOURCE|<android.opengl.GLException: int getError()>
SOURCE|<java.lang.reflect.Field: java.lang.Object get(java.lang.Object)>
SOURCE|<android.widget.Editor$SelectionEndHandleView: int getHotspotX(android.graphics.drawable.Drawable,boolean)>
SOURCE|<android.os.storage.StorageManager: android.os.storage.StorageVolume[] getVolumeList()>
SOURCE|<org.apache.harmony.xnet.provider.jsse.SSLParametersImpl: java.lang.String[] getEnabledCipherSuites()>
SOURCE|<android.app.ContextImpl$20: java.lang.Object getService(android.app.ContextImpl)>
SOURCE|<com.android.i18n.phonenumbers.Phonemetadata$NumberFormat: java.lang.String getDomesticCarrierCodeFormattingRule()>
SOURCE|<java.util.Calendar: java.util.Map getDisplayNames(int,int,java.util.Locale)>
SOURCE|<java.security.KeyStore: java.security.KeyStore$Entry getEntry(java.lang.String,java.security.KeyStore$ProtectionParameter)>
SOURCE|<com.android.inputmethod.keyboard.internal.KeyStylesSet$DeclaredKeyStyle: java.lang.String[] getStringArray(android.content.res.TypedArray,int)>
SOURCE|<com.google.android.apps.lightcycle.opengl.Sphere: int getTextureId()>
SOURCE|<com.android.internal.telephony.IPhoneSubInfo$Stub$Proxy: java.lang.String getIsimImpi()>
SOURCE|<org.apache.harmony.xnet.provider.jsse.SSLSessionImpl: java.lang.String[] getValueNames()>
SOURCE|<com.android.internal.widget.ILockSettings$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
SOURCE|<android.net.wifi.p2p.nsd.WifiP2pDnsSdServiceResponse: java.lang.String getInstanceName()>
SOURCE|<android.security.Credentials: android.security.Credentials getInstance()>
SOURCE|<com.android.email.activity.MailboxFragmentAdapter$CombinedMailboxLoader: android.database.Cursor loadInBackground()>
SOURCE|<android.net.sip.SimpleSessionDescription$Media: java.lang.String getType()>
SOURCE|<com.android.inputmethod.keyboard.Key: int getDrawX()>
SOURCE|<java.io.EmulatedFields: float get(java.lang.String,float)>
SOURCE|<gov.nist.core.HostPort: gov.nist.core.Host getHost()>
SOURCE|<com.android.mms.dom.NodeImpl: org.w3c.dom.Node getNextSibling()>
SOURCE|<com.android.systemui.statusbar.phone.PhoneStatusBar: int getStatusBarGravity()>
SOURCE|<com.android.videoeditor.TransitionType: int getType()>
SOURCE|<android.test.mock.MockCursor: int getColumnIndexOrThrow(java.lang.String)>
SOURCE|<android.os.Environment: java.io.File getExternalStorageDirectory()>
SOURCE|<java.security.Provider$Service: java.lang.String getType()>
SOURCE|<com.android.org.bouncycastle.asn1.DERGeneralString: byte[] getOctets()>
SOURCE|<com.android.server.pm.Settings: com.android.server.pm.PackageSetting getDisabledSystemPkgLPr(java.lang.String)>
SOURCE|<gov.nist.core.DuplicateNameValueList: java.lang.String getParameter(java.lang.String)>
SOURCE|<com.android.internal.telephony.DataConnectionTracker: android.net.LinkProperties getLinkProperties(java.lang.String)>
SOURCE|<org.apache.http.message.BasicHttpEntityEnclosingRequest: org.apache.http.HttpEntity getEntity()>
SOURCE|<android.widget.AbsListView: android.view.ContextMenu$ContextMenuInfo getContextMenuInfo()>
SOURCE|<android.text.style.ScaleXSpan: float getScaleX()>
SOURCE|<com.android.server.am.BatteryStatsService: com.android.internal.app.IBatteryStats getService()>
SOURCE|<java.net.DatagramPacket: int getOffset()>
SOURCE|<android.os.Bundle: java.util.ArrayList getStringArrayList(java.lang.String)>
SOURCE|<com.android.launcher2.Workspace: com.android.launcher2.DropTarget getDropTargetDelegate(com.android.launcher2.DropTarget$DragObject)>
SOURCE|<com.android.email.activity.UIControllerOnePane$ActionBarControllerCallback: java.lang.String getSearchHint()>
SOURCE|<com.android.gallery3d.data.MtpClient: byte[] getThumbnail(java.lang.String,int)>
SOURCE|<org.apache.harmony.xnet.provider.jsse.TrustedCertificateStore: java.security.cert.Certificate getCertificate(java.lang.String,boolean)>
SOURCE|<android.util.NtpTrustedTime: long getCacheAge()>
SOURCE|<android.hardware.input.InputManager: int[] getInputDeviceIds()>
SOURCE|<com.android.mms.ui.IconListAdapter$IconListItem: java.lang.String getTitle()>
SOURCE|<com.google.common.collect.Maps$1: java.lang.Object getValue()>
SOURCE|<com.google.common.collect.Multimaps$MapMultimap$AsMap: java.lang.Object get(java.lang.Object)>
SOURCE|<org.apache.harmony.xnet.provider.jsse.SSLEngineImpl: javax.net.ssl.SSLEngineResult$HandshakeStatus getHandshakeStatus()>
SOURCE|<org.apache.http.client.methods.HttpOptions: java.lang.String getMethod()>
SOURCE|<com.android.internal.widget.ILockSettings$Stub$Proxy: java.lang.String getString(java.lang.String,java.lang.String,int)>
SOURCE|<org.apache.harmony.security.fortress.Services: java.security.Provider[] getProviders()>
SOURCE|<java.text.BreakIterator: java.text.BreakIterator getLineInstance()>
SOURCE|<android.app.Dialog: int getVolumeControlStream()>
SOURCE|<java.net.PlainSocketImpl: java.io.OutputStream getOutputStream()>
SOURCE|<com.android.mms.model.SlideModel: com.android.mms.model.TextModel getText()>
SOURCE|<java.math.BigInteger: java.math.BigInteger shiftLeftOneBit()>
SOURCE|<com.google.common.collect.ForwardingMultiset: java.util.Set entrySet()>
SOURCE|<gov.nist.javax.sip.header.HeaderFactoryImpl: javax.sip.header.ExtensionHeader createMinSEHeader(int)>
SOURCE|<android.net.sip.SimpleSessionDescription$Media: int getBandwidth(java.lang.String)>
SOURCE|<gov.nist.javax.sip.stack.SIPTransactionStack: gov.nist.javax.sip.stack.SIPClientTransaction findSubscribeTransaction(gov.nist.javax.sip.message.SIPRequest,gov.nist.javax.sip.ListeningPointImpl)>
SOURCE|<org.kxml2.io.KXmlParser: java.lang.String getPositionDescription()>
SOURCE|<java.util.ResourceBundle: java.lang.String[] getStringArray(java.lang.String)>
SOURCE|<gov.nist.javax.sip.header.ims.PAssertedService: java.lang.String encodeBody()>
SOURCE|<org.apache.harmony.security.x501.AttributeValue: java.lang.String getHexString()>
SOURCE|<android.accessibilityservice.IAccessibilityServiceConnection$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
SOURCE|<gov.nist.javax.sip.header.SIPHeaderList: java.lang.String debugDump()>
SOURCE|<com.android.internal.telephony.PhoneSubInfo: java.lang.String getSubscriberId()>
SOURCE|<java.lang.ProcessBuilder: java.util.List command()>
SOURCE|<com.android.internal.telephony.cdma.RuimFileHandler: java.lang.String getEFPath(int)>
SOURCE|<javax.net.ssl.TrustManagerFactory: java.lang.String getAlgorithm()>
SOURCE|<com.google.android.apps.lightcycle.panorama.DeviceManager: float getOpenGlMaxFieldOfViewDegrees()>
SOURCE|<android.net.wifi.IWifiManager$Stub$Proxy: int getWifiEnabledState()>
SOURCE|<org.apache.harmony.xml.ExpatAttributes: java.lang.String getLocalName(int)>
SOURCE|<android.graphics.drawable.InsetDrawable: int getOpacity()>
SOURCE|<com.android.mms.widget.MmsWidgetService$MmsFactory: int getViewTypeCount()>
SOURCE|<android.widget.OverScroller: float getCurrVelocity()>
SOURCE|<android.view.IWindowManager$Stub$Proxy: float getAnimationScale(int)>
SOURCE|<com.android.browser.provider.SnapshotProvider: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>
SOURCE|<com.android.internal.app.IBatteryStats$Stub$Proxy: long getAwakeTimeBattery()>
SOURCE|<java.security.SignatureSpi: java.security.AlgorithmParameters engineGetParameters()>
SOURCE|<com.android.internal.telephony.CallerInfo: com.android.internal.telephony.CallerInfo markAsEmergency(android.content.Context)>
SOURCE|<com.android.gallery3d.ui.ExtTexture: int getWidth()>
SOURCE|<java.lang.Class: java.lang.String getTypeName()>
SOURCE|<android.view.textservice.SpellCheckerInfo: android.content.pm.ServiceInfo getServiceInfo()>
SOURCE|<android.app.backup.BackupDataInput: java.lang.String getKey()>
SOURCE|<android.text.DynamicLayout: int getEllipsisStart(int)>
SOURCE|<android.renderscript.ProgramVertex: int getInputCount()>
SOURCE|<android.net.ConnectivityManager: android.net.NetworkInfo getNetworkInfo(int)>
SOURCE|<com.android.browser.Tab: com.android.browser.Tab$SecurityState getSecurityState()>
SOURCE|<com.android.providers.contacts.CallLogProvider: java.lang.String getType(android.net.Uri)>
SOURCE|<com.coremedia.iso.boxes.MovieHeaderBox: long getTimescale()>
SOURCE|<com.android.browser.search.OpenSearchSearchEngine: android.database.Cursor getSuggestions(android.content.Context,java.lang.String)>
SOURCE|<com.android.deskclock.widget.multiwaveview.TargetDrawable$DrawableWithAlpha: int getOpacity()>
SOURCE|<javax.sip.DialogState: int getValue()>
SOURCE|<android.media.videoeditor.MediaProperties: int[] getSupportedAudioCodecs()>
SOURCE|<libcore.net.http.HttpsURLConnectionImpl: int getReadTimeout()>
SOURCE|<gov.nist.javax.sip.message.MessageFactoryImpl: javax.sip.message.Response createResponse(int,javax.sip.header.CallIdHeader,javax.sip.header.CSeqHeader,javax.sip.header.FromHeader,javax.sip.header.ToHeader,java.util.List,javax.sip.header.MaxForwardsHeader,javax.sip.header.ContentTypeHeader,java.lang.Object)>
SOURCE|<com.android.internal.app.AlertController: int getIconAttributeResId(int)>
SOURCE|<android.os.RemoteCallbackList: android.os.IInterface getBroadcastItem(int)>
SOURCE|<android.hardware.usb.UsbRequest: java.lang.Object getClientData()>
SOURCE|<android.content.ContentResolver: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,android.os.CancellationSignal)>
SOURCE|<android.text.style.TextAppearanceSpan: java.lang.String getFamily()>
SOURCE|<android.widget.ArrayAdapter: android.view.View getDropDownView(int,android.view.View,android.view.ViewGroup)>
SOURCE|<java.security.KeyStore: java.security.cert.Certificate getCertificate(java.lang.String)>
SOURCE|<android.net.sip.SipAudioCall: android.net.rtp.AudioGroup getAudioGroup()>
SOURCE|<com.android.email.activity.MessageCompose$ActionSpinnerAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)>
SOURCE|<com.android.gallery3d.picasasource.BasePicasaAlbum: java.util.ArrayList getMediaItem(int,int)>
SOURCE|<com.android.internal.telephony.gsm.SIMRecords: java.lang.String getMsisdnNumber()>
SOURCE|<android.database.AbstractCursor: android.net.Uri getNotificationUri()>
SOURCE|<android.widget.RemoteViewsAdapter$RemoteViewsMetaData: int getMappedViewType(int)>
SOURCE|<com.googlecode.mp4parser.authoring.builder.DefaultMp4Builder: long getTimescale(com.googlecode.mp4parser.authoring.Movie)>
SOURCE|<com.android.internal.policy.impl.keyguard.KeyguardUpdateMonitor: boolean getMaxBiometricUnlockAttemptsReached()>
SOURCE|<com.android.gallery3d.filtershow.provider.SharedImageProvider: java.lang.String[] getStreamTypes(android.net.Uri,java.lang.String)>
SOURCE|<libcore.net.http.RawHeaders: java.lang.String getResponseMessage()>
SOURCE|<gov.nist.javax.sip.header.Challenge: java.lang.String getScheme()>
SOURCE|<libcore.icu.NativeBreakIterator: libcore.icu.NativeBreakIterator getCharacterInstance(java.util.Locale)>
SOURCE|<org.apache.http.util.ByteArrayBuffer: byte[] toByteArray()>
SOURCE|<java.util.OptionalLong: long getAsLong()>
SOURCE|<android.view.accessibility.AccessibilityRecord: int getScrollX()>
SOURCE|<android.inputmethodservice.Keyboard: int getVerticalGap()>
SOURCE|<com.android.server.DeviceStorageMonitorService: long getMemoryLowThreshold()>
SOURCE|<android.text.DynamicLayout: int getBottomPadding()>
SOURCE|<com.android.email.mail.store.ImapStore: com.android.email.mail.Transport cloneTransport()>
SOURCE|<com.android.gallery3d.ui.ResourceTexture: int getTextureHeight()>
SOURCE|<com.android.org.bouncycastle.asn1.ASN1Sequence$1: com.android.org.bouncycastle.asn1.ASN1Primitive getLoadedObject()>
SOURCE|<libcore.net.http.RequestHeaders: java.lang.String getProxyAuthorization()>
SOURCE|<com.android.mms.transaction.SendTransaction: byte[] getPdu(java.lang.String)>
SOURCE|<android.view.KeyCharacterMap: int getModifierBehavior()>
SOURCE|<com.android.server.CertBlacklister$BlacklistObserver: java.lang.String getValue()>
SOURCE|<javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManagerFactory getInstance(java.lang.String,java.lang.String)>
SOURCE|<android.app.Activity: android.os.IBinder getActivityToken()>
SOURCE|<com.android.server.am.ActivityManagerService: int getUidForIntentSender(android.content.IIntentSender)>
SOURCE|<android.content.Intent: java.util.Set getCategories()>
SOURCE|<com.android.nfc.NfcService$TagService: int getMaxTransceiveLength(int)>
SOURCE|<libcore.net.http.HttpEngine$1: java.io.InputStream getBody()>
SOURCE|<com.android.internal.widget.multiwaveview.GlowPadView: int getScaledSuggestedMinimumWidth()>
SOURCE|<android.os.IPowerManager$Stub$Proxy: boolean isWakeLockLevelSupported(int)>
SOURCE|<android.app.ApplicationPackageManager: java.util.List queryPermissionsByGroup(java.lang.String,int)>
SOURCE|<com.android.server.am.ProviderMap: com.android.server.am.ContentProviderRecord getProviderByName(java.lang.String,int)>
SOURCE|<com.google.android.apps.lightcycle.opengl.Sprite: int getWidth()>
SOURCE|<gov.nist.javax.sip.stack.SIPTransaction: java.lang.String getMethod()>
SOURCE|<android.view.MotionEvent: float getHistoricalX(int,int)>
SOURCE|<com.android.launcher2.DragLayer: float getDescendantCoordRelativeToSelf(android.view.View,int[])>
SOURCE|<android.media.effect.FilterEffect: java.lang.String getName()>
SOURCE|<javax.sip.SipFactory: javax.sip.SipFactory getInstance()>
SOURCE|<com.android.mms.dom.smil.SmilParElementImpl$1: org.w3c.dom.NodeList getTimeChildren()>
SOURCE|<java.security.spec.DSAPrivateKeySpec: java.math.BigInteger getP()>
SOURCE|<android.widget.AbsListView: int getDistance(android.graphics.Rect,android.graphics.Rect,int)>
SOURCE|<android.webkit.WebSettingsClassic: boolean getDatabaseEnabled()>
SOURCE|<android.database.IContentObserver$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
SOURCE|<android.widget.ListPopupWindow: int getVerticalOffset()>
SOURCE|<java.nio.file.InvalidPathException: java.lang.String getMessage()>
SOURCE|<android.net.sip.SipAudioCall: android.net.sip.SipProfile getLocalProfile()>
SOURCE|<android.webkit.WebSettingsClassic: int getDoubleTapZoom()>
SOURCE|<java.lang.reflect.Method: java.lang.reflect.Type getGenericReturnType()>
SOURCE|<com.android.email.mail.store.ImapFolder: com.android.emailcommon.mail.Folder$OpenMode getMode()>
SOURCE|<com.android.mms.model.SlideModel: int getSlideSize()>
SOURCE|<com.android.server.NetworkManagementService: android.net.NetworkStats getNetworkStatsSummaryXt()>
SOURCE|<android.text.Annotation: java.lang.String getKey()>
SOURCE|<android.view.PointerIcon$1: android.view.PointerIcon createFromParcel(android.os.Parcel)>
SOURCE|<com.android.internal.policy.impl.keyguard.PagedView: float[] mapPointFromParentToView(android.view.View,float,float)>
SOURCE|<android.media.MediaRouter$RouteInfo: java.lang.CharSequence getStatus()>
SOURCE|<android.speech.tts.ITextToSpeechService$Stub: android.os.IBinder asBinder()>
SOURCE|<android.media.MediaRouter: int getCategoryCount()>
SOURCE|<org.apache.harmony.security.x509.EDIPartyName: byte[] getEncoded()>
SOURCE|<com.android.launcher2.PagedView: int getScaledMeasuredWidth(android.view.View)>
SOURCE|<java.io.EmulatedFields: char get(java.lang.String,char)>
SOURCE|<android.bluetooth.BluetoothTetheringDataTracker: int getDefaultGatewayAddr()>
SOURCE|<gov.nist.javax.sip.parser.Parser: java.lang.String method()>
SOURCE|<android.media.AudioManager: java.lang.String getParameters(java.lang.String)>
SOURCE|<android.graphics.Path: android.graphics.Path$FillType getFillType()>
SOURCE|<libcore.net.http.RequestHeaders: java.lang.String getUserAgent()>
SOURCE|<com.google.common.collect.ImmutableSortedMap: com.google.common.collect.ImmutableSortedMap tailMap(java.lang.Object,boolean)>
SOURCE|<com.android.contacts.ContactsApplication: android.content.ContentResolver getContentResolver()>
SOURCE|<android.view.MotionEvent: float getToolMajor()>
SOURCE|<gov.nist.javax.sip.header.Accept: java.lang.String getContentSubType()>
SOURCE|<android.filterpacks.performance.Throughput: float getNanosPerPixel()>
SOURCE|<com.android.internal.widget.LockSettingsService: java.lang.String getString(java.lang.String,java.lang.String,int)>
SOURCE|<com.android.contacts.model.RawContact: java.lang.String getAccountTypeString()>
SOURCE|<android.nfc.Tag: byte[] getId()>
SOURCE|<com.android.server.InputMethodManagerService$InputMethodSettings: java.util.List getEnabledInputMethodAndSubtypeHashCodeListLocked()>
SOURCE|<android.net.NetworkStats: android.net.NetworkStats$Entry getTotal(android.net.NetworkStats$Entry,int)>
SOURCE|<com.android.providers.contacts.ContactLocaleUtils: java.lang.String getSortKey(java.lang.String,int)>
SOURCE|<android.app.admin.DevicePolicyManager: int getCurrentFailedPasswordAttempts()>
SOURCE|<com.android.internal.os.BatteryStatsImpl$Uid$Pkg$Serv: int getLaunches(int)>
SOURCE|<android.app.ActivityManagerProxy: boolean getPackageAskScreenCompat(java.lang.String)>
SOURCE|<android.view.accessibility.AccessibilityEvent: int getItemCount()>
SOURCE|<com.adobe.xmp.impl.XMPSchemaRegistryImpl$1: java.lang.String getNamespace()>
SOURCE|<java.text.Format: java.lang.Object parseObject(java.lang.String)>
SOURCE|<java.text.NumberFormat: int getMaximumFractionDigits()>
SOURCE|<com.android.server.accessibility.TouchExplorer$SendHoverDelayed: float getY()>
SOURCE|<com.android.phone.PhoneInterfaceManager: int getActivePhoneType()>
SOURCE|<android.webkit.WebSettingsClassic: boolean getDomStorageEnabled()>
SOURCE|<com.googlecode.mp4parser.AbstractContainerBox: long getContentSize()>
SOURCE|<com.android.contacts.preference.SortOrderPreference: java.lang.CharSequence getSummary()>
SOURCE|<android.graphics.drawable.Drawable: android.graphics.Region getTransparentRegion()>
SOURCE|<com.android.internal.view.menu.SubMenuBuilder: android.view.MenuItem getItem()>
SOURCE|<android.app.TabActivity: android.widget.TabWidget getTabWidget()>
SOURCE|<org.apache.http.message.ParserCursor: int getUpperBound()>
SOURCE|<com.android.contacts.list.ContactEntryListAdapter: android.net.Uri getContactUri(int,android.database.Cursor,int,int)>
SOURCE|<android.view.inputmethod.InputConnectionWrapper: java.lang.CharSequence getTextAfterCursor(int,int)>
SOURCE|<android.filterpacks.imageproc.RedEyeFilter: android.filterfw.core.FrameFormat getOutputFormat(java.lang.String,android.filterfw.core.FrameFormat)>
SOURCE|<javax.net.ssl.HttpsURLConnection: java.security.Principal getPeerPrincipal()>
SOURCE|<com.android.providers.contacts.NameSplitter$Name: java.lang.String getSuffix()>
SOURCE|<android.content.res.TypedArray: int getIndex(int)>
SOURCE|<com.android.contacts.voicemail.VoicemailPlaybackFragment$PlaybackViewImpl: int getDesiredClipPosition()>
SOURCE|<com.android.calendar.DayFragment: long getSelectedTimeInMillis()>
SOURCE|<com.android.server.pm.PackageManagerService: android.content.pm.PermissionInfo getPermissionInfo(java.lang.String,int)>
SOURCE|<com.android.inputmethod.keyboard.internal.TouchPositionCorrection: float getRadius(int)>
SOURCE|<android.os.CommonTimeConfig: java.net.InetSocketAddress getMasterElectionEndpoint()>
SOURCE|<android.net.Uri$HierarchicalUri: java.lang.String getEncodedFragment()>
SOURCE|<android.test.mock.MockContext: int getWallpaperDesiredMinimumHeight()>
SOURCE|<android.app.Instrumentation: android.os.Bundle getAllocCounts()>
SOURCE|<android.media.videoeditor.MediaArtistNativeHelper: int getSlideSettingsDirection(int)>
SOURCE|<android.content.Intent: java.util.ArrayList getIntegerArrayListExtra(java.lang.String)>
SOURCE|<javax.crypto.MacSpi: java.lang.Object clone()>
SOURCE|<com.android.inputmethod.keyboard.Key: android.graphics.drawable.Drawable getIcon(com.android.inputmethod.keyboard.internal.KeyboardIconsSet,int)>
SOURCE|<android.widget.ExpandableListConnector: java.util.ArrayList getExpandedGroupMetadataList()>
SOURCE|<android.app.admin.DeviceAdminInfo: java.lang.CharSequence loadDescription(android.content.pm.PackageManager)>
SOURCE|<android.content.res.AssetManager$AssetInputStream: int getAssetInt()>
SOURCE|<com.android.mms.util.BlobCache: byte[] lookup(long)>
SOURCE|<android.net.wifi.WifiNative: int getBand()>
SOURCE|<com.google.common.collect.Multimaps$CustomListMultimap: java.util.Collection createCollection()>
SOURCE|<android.widget.ListView: long[] getCheckItemIds()>
SOURCE|<com.android.gallery3d.data.ComboAlbum: java.util.ArrayList getMediaItem(int,int)>
SOURCE|<android.os.NullVibrator: android.os.NullVibrator getInstance()>
SOURCE|<com.android.gallery3d.ui.GLPaint: float getLineWidth()>
SOURCE|<com.android.email.activity.ContactStatusLoader: com.android.email.activity.ContactStatusLoader$Result loadInBackground()>
SOURCE|<com.android.contacts.list.DirectoryPartition: int getStatus()>
SOURCE|<com.android.gallery3d.data.SecureAlbum: int getMediaItemCount()>
SOURCE|<org.apache.http.impl.io.ChunkedInputStream: int read()>
SOURCE|<android.animation.PropertyValuesHolder: java.lang.Object getAnimatedValue()>
SOURCE|<gov.nist.javax.sip.header.Protocol: java.lang.String getProtocolName()>
SOURCE|<com.android.server.WifiService: android.net.wifi.WifiInfo getConnectionInfo()>
SOURCE|<org.apache.harmony.security.x509.TBSCertificate: org.apache.harmony.security.x509.SubjectPublicKeyInfo getSubjectPublicKeyInfo()>
SOURCE|<android.app.IInstrumentationWatcher$Stub: android.os.IBinder asBinder()>
SOURCE|<android.app.backup.IBackupManager$Stub$Proxy: java.lang.String[] listAllTransports()>
SOURCE|<android.widget.AbsListView: int getVerticalScrollbarWidth()>
SOURCE|<android.os.IVibratorService$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
SOURCE|<android.net.MailTo: java.lang.String getCc()>
SOURCE|<com.android.mms.transaction.TransactionBundle: java.lang.String getUri()>
SOURCE|<gov.nist.javax.sip.stack.DefaultRouter: java.util.ListIterator getNextHops(javax.sip.message.Request)>
SOURCE|<org.apache.harmony.security.x509.Validity: byte[] getEncoded()>
SOURCE|<android.view.KeyEvent: long getDownTime()>
SOURCE|<android.net.LinkProperties: java.lang.String getInterfaceName()>
SOURCE|<com.android.browser.view.PieItem: com.android.browser.view.PieMenu$PieView getPieView()>
SOURCE|<gov.nist.javax.sip.message.SIPMessage: byte[] getRawContent()>
SOURCE|<android.os.Bundle: byte getByte(java.lang.String)>
SOURCE|<com.android.org.bouncycastle.jce.netscape.NetscapeCertRequest: com.android.org.bouncycastle.asn1.x509.AlgorithmIdentifier getKeyAlgorithm()>
SOURCE|<android.filterpacks.imageproc.SepiaFilter: android.filterfw.core.FrameFormat getOutputFormat(java.lang.String,android.filterfw.core.FrameFormat)>
SOURCE|<com.google.android.picasasync.PicasaSyncHelper: java.util.ArrayList getUsers()>
SOURCE|<android.net.http.SslCertificate$DName: java.lang.String getDName()>
SOURCE|<com.android.contacts.ContactPhotoManager: com.android.contacts.ContactPhotoManager createContactPhotoManager(android.content.Context)>
SOURCE|<com.android.mms.data.Contact: android.net.Uri getUri()>
SOURCE|<android.text.style.UnderlineSpan: int getSpanTypeId()>
SOURCE|<java.util.zip.ZipInputStream: java.util.zip.ZipEntry getNextEntry()>
SOURCE|<gov.nist.javax.sip.stack.SIPTransactionStack: gov.nist.javax.sip.stack.SIPTransaction findTransaction(gov.nist.javax.sip.message.SIPMessage,boolean)>
SOURCE|<android.inputmethodservice.InputMethodService: int getCandidatesHiddenVisibility()>
SOURCE|<com.android.inputmethod.latin.suggestions.MoreSuggestionsView: com.android.inputmethod.keyboard.KeyboardActionListener getKeyboardActionListener()>
SOURCE|<org.apache.harmony.xnet.provider.jsse.NativeCrypto: java.lang.String[] getDefaultProtocols()>
SOURCE|<libcore.net.http.HttpsURLConnectionImpl: long getDate()>
SOURCE|<android.app.admin.DevicePolicyManager: int getPasswordMinimumLength(android.content.ComponentName,int)>
SOURCE|<com.android.contacts.calllog.CallTypeHelper: java.lang.CharSequence getCallTypeText(int)>
SOURCE|<com.android.videoeditor.service.MovieMediaItem: com.android.videoeditor.service.MovieTransition getBeginTransition()>
SOURCE|<com.android.server.location.GpsLocationProvider: android.location.IGpsStatusProvider getGpsStatusProvider()>
SOURCE|<org.apache.http.message.BasicHttpResponse: org.apache.http.StatusLine getStatusLine()>
SOURCE|<android.drm.DrmManagerClient: android.content.ContentValues getConstraints(java.lang.String,int)>
SOURCE|<android.location.Geofence: float getRadius()>
SOURCE|<com.android.contacts.ContactsApplication: com.android.contacts.test.InjectedServices getInjectedServices()>
SOURCE|<com.android.browser.TabScrollView$TabLayout: int getChildDrawingOrder(int,int)>
SOURCE|<android.widget.ExpandableListView: long getSelectedId()>
SOURCE|<android.widget.AutoCompleteTextView: int getDropDownAnimationStyle()>
SOURCE|<java.net.ServerSocket: java.net.SocketImpl getImpl$()>
SOURCE|<android.app.ActivityManager: android.graphics.Bitmap getTaskTopThumbnail(int)>
SOURCE|<com.android.inputmethod.keyboard.MainKeyboardView: com.android.inputmethod.keyboard.KeyDetector getKeyDetector()>
SOURCE|<java.io.RandomAccessFile: int readUnsignedByte()>
SOURCE|<java.security.spec.ECFieldF2m: int getM()>
SOURCE|<java.io.EmulatedFieldsForLoading: double get(java.lang.String,double)>
SOURCE|<java.lang.reflect.Field: byte getByte(java.lang.Object)>
SOURCE|<com.android.contacts.list.CustomContactListFilterActivity$CustomFilterConfigurationLoader: com.android.contacts.list.CustomContactListFilterActivity$AccountSet loadInBackground()>
SOURCE|<com.android.gallery3d.data.ActionImage: android.net.Uri getContentUri()>
SOURCE|<android.content.res.AssetManager: android.content.res.XmlResourceParser openXmlResourceParser(java.lang.String)>
SOURCE|<org.apache.harmony.security.x509.BasicConstraints: byte[] getEncoded()>
SOURCE|<com.google.common.collect.Multimaps$TransformedEntriesListMultimap: java.util.Collection get(java.lang.Object)>
SOURCE|<com.android.internal.app.AlertController: android.widget.Button getButton(int)>
SOURCE|<com.google.android.mms.pdu.PduPersister: byte[] getBytes(java.lang.String)>
SOURCE|<com.android.browser.provider.BrowserProvider: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>
SOURCE|<gov.nist.javax.sip.stack.UDPMessageChannel: java.net.InetAddress getPeerPacketSourceAddress()>
SOURCE|<java.nio.CharBuffer: java.lang.Object array()>
SOURCE|<com.android.mms.data.WorkingMessage: java.lang.CharSequence getSubject()>
SOURCE|<com.android.contacts.dialog.ClearFrequentsDialog: android.app.Dialog onCreateDialog(android.os.Bundle)>
SOURCE|<android.net.NetworkTemplate: java.lang.String getSubscriberId()>
SOURCE|<com.android.org.bouncycastle.util.io.pem.PemObject: byte[] getContent()>
SOURCE|<com.android.videoeditor.service.MovieOverlay: long getAppStartTime()>
SOURCE|<com.android.gallery3d.app.PhotoDataAdapter: com.android.gallery3d.data.MediaItem getMediaItem(int)>
SOURCE|<android.view.textservice.TextServicesManager: android.view.textservice.SpellCheckerSession newSpellCheckerSession(android.os.Bundle,java.util.Locale,android.view.textservice.SpellCheckerSession$SpellCheckerSessionListener,boolean)>
SOURCE|<org.apache.harmony.security.x509.Extension: java.lang.String getExtnID()>
SOURCE|<org.apache.harmony.xml.dom.DocumentImpl: org.w3c.dom.NodeList getElementsByTagName(java.lang.String)>
SOURCE|<com.android.contacts.model.account.ExchangeAccountType: com.android.contacts.model.dataitem.DataKind addDataKindEvent(android.content.Context)>
SOURCE|<com.android.gallery3d.ui.BasicTexture: int getTextureHeight()>
SOURCE|<android.view.MotionEvent: float getHistoricalAxisValue(int,int)>
SOURCE|<com.android.phone.InCallUiState: com.android.phone.Constants$CallStatusCode getPendingCallStatusCode()>
SOURCE|<java.security.Provider$Service: java.util.List getAliases()>
SOURCE|<com.android.email.activity.AccountSelectorAdapter: int getItemViewType(int)>
SOURCE|<android.content.res.XmlBlock$Parser: int getColumnNumber()>
SOURCE|<android.widget.ListView: int getMaxScrollAmount()>
SOURCE|<com.android.videoeditor.service.VideoEditorProject$Download: java.lang.String getMimeType()>
SOURCE|<org.apache.harmony.security.asn1.ASN1GeneralizedTime: org.apache.harmony.security.asn1.ASN1GeneralizedTime getInstance()>
SOURCE|<android.gesture.GestureOverlayView: float getGestureStrokeWidth()>
SOURCE|<gov.nist.javax.sip.stack.SIPTransactionStack: java.lang.String getHostAddress()>
SOURCE|<android.widget.AdapterViewAnimator: int getBaseline()>
SOURCE|<android.app.ApplicationPackageManager: java.util.List queryBroadcastReceivers(android.content.Intent,int,int)>
SOURCE|<android.app.LoadedApk$WarningContextClassLoader: java.io.InputStream getResourceAsStream(java.lang.String)>
SOURCE|<android.os.Debug: int getGlobalClassInitCount()>
SOURCE|<com.android.contacts.list.CustomContactListFilterActivity$DisplayAdapter: android.view.View getChildView(int,int,boolean,android.view.View,android.view.ViewGroup)>
SOURCE|<java.net.ServerSocket: boolean getReuseAddress()>
SOURCE|<com.android.providers.contacts.ContactsProvider2: android.database.Cursor queryLocal(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,long,android.os.CancellationSignal)>
SOURCE|<org.ccil.cowan.tagsoup.AttributesImpl: java.lang.String getValue(java.lang.String)>
SOURCE|<org.apache.harmony.security.x509.CertificateList: byte[] access$300(org.apache.harmony.security.x509.CertificateList)>
SOURCE|<com.google.android.picasasync.UploadTaskEntry: int getState()>
SOURCE|<org.apache.harmony.xml.dom.InnerNodeImpl: org.w3c.dom.Node getNextSibling()>
SOURCE|<android.media.IMediaScannerListener$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
SOURCE|<com.android.internal.telephony.gsm.SmsBroadcastConfigInfo: int getToCodeScheme()>
SOURCE|<com.google.common.collect.ForwardingCollection: java.lang.Object[] toArray(java.lang.Object[])>
SOURCE|<android.app.TaskStackBuilder: android.app.PendingIntent getPendingIntent(int,int)>
SOURCE|<android.app.ApplicationErrorReport: android.content.ComponentName getErrorReportReceiver(android.content.pm.PackageManager,java.lang.String,java.lang.String)>
SOURCE|<gov.nist.javax.sip.header.ProxyRequire: java.lang.String getOptionTag()>
SOURCE|<com.android.vcard.VCardEntryCommitter: java.util.ArrayList getCreatedUris()>
SOURCE|<android.widget.SuggestionsAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)>
SOURCE|<android.media.AudioService$AudioFocusDeathHandler: android.os.IBinder getBinder()>
SOURCE|<com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata: java.lang.String getPreferredExtnPrefix()>
SOURCE|<java.security.cert.X509CRLSelector: java.util.Collection getIssuers()>
SOURCE|<org.apache.http.impl.client.RedirectLocations: java.util.List getAll()>
SOURCE|<java.security.cert.PKIXRevocationChecker: java.util.Set getOptions()>
SOURCE|<java.io.DataInputStream: short readShort()>
SOURCE|<android.graphics.drawable.RotateDrawable: int getChangingConfigurations()>
SOURCE|<gov.nist.javax.sip.stack.SIPTransactionStack: javax.sip.address.Hop getNextHop(gov.nist.javax.sip.message.SIPRequest)>
SOURCE|<android.content.ContentProvider$Transport: java.lang.String getProviderName()>
SOURCE|<com.android.browser.widget.BookmarkThumbnailWidgetService$BookmarkFactory: int getCount()>
SOURCE|<android.nfc.tech.NfcB: android.nfc.tech.NfcB get(android.nfc.Tag)>
SOURCE|<java.io.ObjectStreamField: int getOffset()>
SOURCE|<com.android.mms.transaction.RetryScheduler: com.android.mms.transaction.RetryScheduler getInstance(android.content.Context)>
SOURCE|<android.mtp.MtpStorageInfo: java.lang.String getDescription()>
SOURCE|<com.android.server.am.ActivityManagerService: android.graphics.Bitmap getTaskTopThumbnail(int)>
SOURCE|<org.apache.harmony.security.provider.cert.X509CertImpl: java.math.BigInteger getSerialNumber()>
SOURCE|<com.android.internal.widget.multiwaveview.TargetDrawable: float getAlpha()>
SOURCE|<android.app.WallpaperManager: android.app.WallpaperInfo getWallpaperInfo()>
SOURCE|<org.apache.http.client.utils.URLEncodedUtils: java.util.List parse(org.apache.http.HttpEntity)>
SOURCE|<com.android.gallery3d.filtershow.imageshow.GeometryMetadata: android.graphics.RectF getPreviewCropBounds()>
SOURCE|<com.android.i18n.phonenumbers.geocoding.PhoneNumberOfflineGeocoder: java.lang.String getDescriptionForNumber(com.android.i18n.phonenumbers.Phonenumber$PhoneNumber,java.util.Locale,java.lang.String)>
SOURCE|<org.apache.http.message.HeaderGroup: org.apache.http.Header getLastHeader(java.lang.String)>
SOURCE|<gov.nist.javax.sip.header.SIPHeaderList: int lastIndexOf(java.lang.Object)>
SOURCE|<org.apache.http.impl.conn.LoggingSessionOutputBuffer: org.apache.http.io.HttpTransportMetrics getMetrics()>
SOURCE|<android.view.View: long getDrawingTime()>
SOURCE|<com.android.browser.TabControl: android.webkit.WebView getCurrentWebView()>
SOURCE|<android.widget.ExpandableListConnector: android.widget.ExpandableListConnector$PositionMetadata getFlattenedPos(android.widget.ExpandableListPosition)>
SOURCE|<com.android.launcher2.LauncherModel: java.util.ArrayList getWorkspaceShortcutItemInfosWithIntent(android.content.Intent)>
SOURCE|<com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata: com.android.i18n.phonenumbers.Phonemetadata$PhoneNumberDesc getTollFree()>
SOURCE|<java.lang.Throwable: java.lang.Throwable[] getSuppressed()>
SOURCE|<com.android.email.activity.ThreePaneLayout: int getMiddlePaneId()>
SOURCE|<com.android.internal.telephony.PhoneSubInfo: java.lang.String getLine1AlphaTag()>
SOURCE|<android.view.inputmethod.InputConnectionWrapper: android.view.inputmethod.ExtractedText getExtractedText(android.view.inputmethod.ExtractedTextRequest,int)>
SOURCE|<java.util.concurrent.locks.StampedLock: int getReadLockCount()>
SOURCE|<java.time.chrono.HijrahChronology: int getMaximumDayOfYear()>
SOURCE|<android.media.AudioRecord: int getAudioSessionId()>
SOURCE|<java.util.zip.ZipEntry: long getSize()>
SOURCE|<android.webkit.WebSettingsClassic$AutoFillProfile: java.lang.String getZipCode()>
SOURCE|<android.content.res.AssetManager: boolean getResourceValue(int,int,android.util.TypedValue,boolean)>
SOURCE|<com.google.android.mms.pdu.NotificationInd: int getDeliveryReport()>
SOURCE|<com.android.inputmethod.latin.Utils: java.lang.String getStackTrace(int)>
SOURCE|<org.apache.http.impl.cookie.RFC2965Spec: int getVersion()>
SOURCE|<java.security.IdentityScope: java.security.Identity getIdentity(java.security.Principal)>
SOURCE|<org.apache.harmony.security.x509.AuthorityKeyIdentifier: byte[] getEncoded()>
SOURCE|<android.accounts.AccountManager: java.lang.String getUserData(android.accounts.Account,java.lang.String)>
SOURCE|<com.android.gallery3d.ui.NinePatchTexture: com.android.gallery3d.ui.NinePatchChunk getNinePatchChunk()>
SOURCE|<libcore.io.ForwardingOs: java.lang.String getnameinfo(java.net.InetAddress,int)>
SOURCE|<java.net.URLConnection: java.lang.String getRequestProperty(java.lang.String)>
SOURCE|<android.app.WallpaperManager: android.graphics.drawable.Drawable peekDrawable()>
SOURCE|<gov.nist.javax.sip.header.ParametersHeader: java.lang.Object getParameterValue(java.lang.String)>
SOURCE|<com.google.android.gsf.Gservices: java.lang.Object getVersionToken(android.content.ContentResolver)>
SOURCE|<com.android.nfc.handover.HandoverManager: com.android.nfc.handover.HandoverManager$BluetoothHandoverData parseBtOob(java.nio.ByteBuffer)>
SOURCE|<android.view.MotionEvent: float getHistoricalTouchMajor(int,int)>
SOURCE|<android.view.Display: java.lang.String getName()>
SOURCE|<gov.nist.javax.sip.message.MessageFactoryImpl: javax.sip.message.Response createResponse(int,javax.sip.header.CallIdHeader,javax.sip.header.CSeqHeader,javax.sip.header.FromHeader,javax.sip.header.ToHeader,java.util.List,javax.sip.header.MaxForwardsHeader,java.lang.Object,javax.sip.header.ContentTypeHeader)>
SOURCE|<android.app.Fragment: android.app.FragmentManager getFragmentManager()>
SOURCE|<com.android.email.activity.MessageOrderManager: int getCurrentPosition()>
SOURCE|<org.xml.sax.helpers.NamespaceSupport$Context: java.lang.String getPrefix(java.lang.String)>
SOURCE|<android.widget.NumberPicker: boolean getWrapSelectorWheel()>
SOURCE|<org.apache.http.entity.InputStreamEntity: java.io.InputStream getContent()>
SOURCE|<com.android.deskclock.Alarm$DaysOfWeek: int getCoded()>
SOURCE|<org.apache.harmony.security.asn1.ASN1Enumerated: java.lang.Object getDecodedObject(org.apache.harmony.security.asn1.BerInputStream)>
SOURCE|<com.android.internal.telephony.sip.SipPhoneBase: java.util.List getPendingMmiCodes()>
SOURCE|<com.android.contacts.model.account.BaseAccountType$PostalActionInflater: int getTypeLabelResource(java.lang.Integer)>
SOURCE|<android.content.pm.IPackageManager$Stub$Proxy: android.content.pm.ActivityInfo getActivityInfo(android.content.ComponentName,int,int)>
SOURCE|<java.time.LocalDateTime: int getSecond()>
SOURCE|<com.android.internal.telephony.gsm.GsmCall: com.android.internal.telephony.Phone getPhone()>
SOURCE|<android.view.animation.GridLayoutAnimationController: int getDirection()>
SOURCE|<com.android.gallery3d.data.FilterTypeSet: java.lang.String getName()>
SOURCE|<android.app.admin.IDevicePolicyManager$Stub$Proxy: void getRemoveWarning(android.content.ComponentName,android.os.RemoteCallback,int)>
SOURCE|<com.google.common.collect.AbstractMultimap$4: java.util.Iterator iterator()>
SOURCE|<java.util.Formatter$FormatToken: char getConversionType()>
SOURCE|<org.xml.sax.helpers.AttributeListImpl: java.lang.String getType(java.lang.String)>
SOURCE|<com.android.server.net.NetworkStatsService$1: android.net.NetworkStats getSummaryForNetwork(android.net.NetworkTemplate,long,long)>
SOURCE|<android.webkit.CacheManager: java.io.File getCacheFileBaseDir()>
SOURCE|<com.adobe.xmp.impl.XMPMetaImpl: java.lang.Object getPropertyObject(java.lang.String,java.lang.String,int)>
SOURCE|<java.net.NetworkInterface: java.net.NetworkInterface getByName(java.lang.String)>
SOURCE|<java.lang.Long: long parseLong(java.lang.String,int)>
SOURCE|<com.android.mms.dom.smil.SmilRegionElementImpl: java.lang.String getId()>
SOURCE|<android.webkit.WebSettingsClassic$AutoFillProfile: java.lang.String getCompanyName()>
SOURCE|<com.android.internal.os.BatteryStatsImpl$Uid$Proc: android.os.BatteryStats$Uid$Proc$ExcessivePower getExcessivePower(int)>
SOURCE|<android.telephony.CellSignalStrengthCdma: int getCdmaEcio()>
SOURCE|<com.android.exchange.adapter.AccountSyncAdapter: java.lang.String getCollectionName()>
SOURCE|<com.android.mms.data.ContactList: java.lang.String[] getNumbers(boolean)>
SOURCE|<java.security.cert.CertificateFactory: java.security.cert.CertificateFactory getInstance(java.lang.String,java.security.Provider)>
SOURCE|<libcore.icu.ICU: java.util.Locale[] getAvailableCalendarLocales()>
SOURCE|<com.android.internal.statusbar.IStatusBar$Stub: android.os.IBinder asBinder()>
SOURCE|<com.android.providers.calendar.SQLiteContentProvider: android.net.Uri insert(android.net.Uri,android.content.ContentValues)>
SOURCE|<android.graphics.Paint: float getTextRunAdvances(java.lang.CharSequence,int,int,int,int,int,float[],int,int)>
SOURCE|<android.telephony.SmsCbCmasInfo: int getUrgency()>
SOURCE|<com.android.internal.widget.multiwaveview.GlowPadView: int getTargetDescriptionsResourceId()>
SOURCE|<android.media.MediaRecorder: int getAudioSourceMax()>
SOURCE|<android.hardware.SensorManager: void getAngleChange(float[],float[],float[])>
SOURCE|<android.webkit.WebViewClassic$Factory: android.webkit.GeolocationPermissions getGeolocationPermissions()>
SOURCE|<org.apache.harmony.luni.lang.reflect.ImplForType: java.lang.reflect.Type[] getActualTypeArguments()>
SOURCE|<java.time.MonthDay: java.time.Month getMonth()>
SOURCE|<org.apache.harmony.security.x509.TBSCertificate: org.apache.harmony.security.x509.Extensions getExtensions()>
SOURCE|<com.android.calendar.agenda.AgendaFragment: long getSupportedEventTypes()>
SOURCE|<org.apache.harmony.security.pkcs7.ContentInfo: byte[] getEncoded()>
SOURCE|<com.android.nfc.dhimpl.NativeP2pDevice: int getHandle()>
SOURCE|<org.apache.http.impl.SocketHttpClientConnection: int getRemotePort()>
SOURCE|<com.android.internal.telephony.cdma.CDMAPhone: void getPreferredNetworkType(android.os.Message)>
SOURCE|<android.filterpacks.imageproc.ToRGBAFilter: android.filterfw.core.FrameFormat getConvertedFormat(android.filterfw.core.FrameFormat)>
SOURCE|<com.android.vcard.VCardParserImpl_V21: int getVersion()>
SOURCE|<org.apache.harmony.security.x509.SubjectKeyIdentifier: byte[] getKeyIdentifier()>
SOURCE|<gov.nist.javax.sip.stack.SIPServerTransaction: java.lang.String getViaHost()>
SOURCE|<com.android.org.bouncycastle.asn1.DERPrintableString: java.lang.String getString()>
SOURCE|<com.android.exchange.adapter.PingParser: int getSyncStatus()>
SOURCE|<android.media.effect.FilterEffect: android.filterfw.core.Frame frameFromTexture(int,int,int)>
SOURCE|<org.apache.harmony.luni.lang.reflect.ImplForVariable: java.lang.String getName()>
SOURCE|<com.android.contacts.list.ContactEntryListAdapter: com.android.contacts.list.ContactListFilter getFilter()>
SOURCE|<android.os.DropBoxManager: android.os.DropBoxManager$Entry getNextEntry(java.lang.String,long)>
SOURCE|<com.android.mms.dom.smil.ElementSequentialTimeContainerImpl: org.w3c.dom.NodeList getActiveChildrenAt(float)>
SOURCE|<org.kxml2.io.KXmlParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>
SOURCE|<android.webkit.WebSettingsClassic: boolean getBlockNetworkImage()>
SOURCE|<org.apache.http.impl.EnglishReasonPhraseCatalog: java.lang.String getReason(int,java.util.Locale)>
SOURCE|<android.graphics.Paint: android.graphics.MaskFilter getMaskFilter()>
SOURCE|<org.apache.http.entity.FileEntity: long getContentLength()>
SOURCE|<android.app.ISearchManager$Stub$Proxy: android.content.ComponentName getWebSearchActivity()>
SOURCE|<android.app.ActivityManager: int getLauncherLargeIconDensity()>
SOURCE|<android.webkit.WebViewFactory: android.webkit.WebViewFactoryProvider getProvider()>
SOURCE|<android.test.mock.MockResources: java.lang.CharSequence getText(int,java.lang.CharSequence)>
SOURCE|<java.util.concurrent.ForkJoinPool: long getStealCount()>
SOURCE|<com.android.internal.policy.impl.keyguard.PagedView: int getNextPage()>
SOURCE|<com.android.internal.policy.impl.keyguard.KeyguardUpdateMonitor: int getFailedUnlockAttempts()>
SOURCE|<android.text.method.CharacterPickerDialog$OptionsAdapter: long getItemId(int)>
SOURCE|<com.android.browser.view.PieItem: android.view.View getView()>
SOURCE|<com.google.common.collect.MapMakerInternalMap$AbstractReferenceEntry: com.google.common.collect.MapMakerInternalMap$ReferenceEntry getPreviousEvictable()>
SOURCE|<com.android.deskclock.widget.multiwaveview.Ease$Quart$2: float getInterpolation(float)>
SOURCE|<com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata: com.android.i18n.phonenumbers.Phonemetadata$PhoneNumberDesc getEmergency()>
SOURCE|<android.view.inputmethod.InputMethodInfo: java.lang.String getServiceName()>
SOURCE|<com.android.calendar.event.EditEventHelper: android.content.ContentValues getContentValuesFromModel(com.android.calendar.CalendarEventModel)>
SOURCE|<android.webkit.WebView: int getContentHeight()>
SOURCE|<com.android.videoeditor.service.MovieTheme: com.android.videoeditor.service.MovieOverlay getOverlay()>
SOURCE|<com.android.internal.os.BatteryStatsImpl: java.util.Map getKernelWakelockStats()>
SOURCE|<org.apache.harmony.xnet.provider.jsse.HandshakeIODataStream: byte[] getDigestSHA()>
SOURCE|<com.android.providers.contacts.VoicemailContentProvider$UriData: java.lang.String getId()>
SOURCE|<android.test.ProviderTestCase2: android.test.mock.MockContentResolver getMockContentResolver()>
SOURCE|<android.content.IntentFilter: java.lang.String getDataType(int)>
SOURCE|<com.android.videoeditor.widgets.HorizontalScrollView: int getMaxScrollAmount()>
SOURCE|<com.android.commands.monkey.MonkeyTouchEvent: java.lang.String getTypeLabel()>
SOURCE|<com.android.internal.os.BatteryStatsImpl$Uid: java.util.Map getPackageStats()>
SOURCE|<android.widget.ViewAnimator: int getDisplayedChild()>
SOURCE|<com.android.exchange.ExchangeService: int getStatusChangeCount(java.lang.String)>
SOURCE|<java.lang.reflect.Parameter: java.lang.Class getType()>
SOURCE|<android.widget.Editor$SelectionModifierCursorController: int getMinTouchOffset()>
SOURCE|<com.android.internal.policy.impl.keyguard.PagedView: float maxOverScroll()>
SOURCE|<com.android.internal.telephony.cdma.RuimRecords: java.lang.String getMdnNumber()>
SOURCE|<com.android.mms.dom.smil.ElementTimeImpl: float getDur()>
SOURCE|<com.android.org.bouncycastle.asn1.ASN1InputStream: com.android.org.bouncycastle.asn1.ASN1Primitive buildObject(int,int,int)>
SOURCE|<com.android.internal.telephony.ITelephony$Stub$Proxy: int getVoiceMessageCount()>
SOURCE|<com.android.videoeditor.service.MovieTransition: int getType()>
SOURCE|<com.android.server.pm.Settings: int getApplicationEnabledSettingLPr(java.lang.String,int)>
SOURCE|<android.app.ContextImpl: java.io.File getSharedPrefsFile(java.lang.String)>
SOURCE|<com.android.providers.calendar.MetaData: com.android.providers.calendar.MetaData$Fields getFieldsLocked()>
SOURCE|<com.android.server.ConnectivityService: java.lang.String[] getTetheredIfaces()>
SOURCE|<android.content.ContextWrapper: android.content.Context createPackageContext(java.lang.String,int)>
SOURCE|<android.widget.BaseExpandableListAdapter: int getGroupTypeCount()>
SOURCE|<java.time.zone.ZoneOffsetTransitionRule: java.time.DayOfWeek getDayOfWeek()>
SOURCE|<android.content.ContentResolver: boolean getSyncAutomatically(android.accounts.Account,java.lang.String)>
SOURCE|<com.google.android.gsf.Gservices: java.util.Map getStringsByPrefix(android.content.ContentResolver,java.lang.String[])>
SOURCE|<java.util.IllegalFormatPrecisionException: int getPrecision()>
SOURCE|<android.net.wifi.WifiInfo: int getRssi()>
SOURCE|<java.time.ZonedDateTime: int getSecond()>
SOURCE|<java.nio.ByteBuffer: java.nio.ByteBuffer get(byte[])>
SOURCE|<com.android.email.activity.UIControllerOnePane: long getMailboxSettingsMailboxId()>
SOURCE|<java.util.zip.ZipEntry: long getCrc()>
SOURCE|<com.android.i18n.phonenumbers.Phonemetadata$NumberFormat: java.lang.String getFormat()>
SOURCE|<org.apache.harmony.security.x509.NameConstraints$1: java.lang.Object getDecodedObject(org.apache.harmony.security.asn1.BerInputStream)>
SOURCE|<com.android.camera.ui.RenderOverlay: int getWindowPositionX()>
SOURCE|<java.text.Collator: java.lang.Object clone()>
SOURCE|<java.text.DateFormat: java.util.Locale[] getAvailableLocales()>
SOURCE|<com.android.internal.database.SortCursor: java.lang.String getString(int)>
SOURCE|<android.bluetooth.BluetoothHeadset: int getConnectionState(android.bluetooth.BluetoothDevice)>
SOURCE|<android.media.videoeditor.TransitionAlpha: int getRGBFileWidth()>
SOURCE|<com.android.browser.TitleBar: int getEmbeddedHeight()>
SOURCE|<org.xmlpull.v1.sax2.Driver: java.lang.String getSystemId()>
SOURCE|<android.test.mock.MockPackageManager: android.graphics.drawable.Drawable getActivityIcon(android.content.Intent)>
SOURCE|<android.server.search.Searchables: java.util.ArrayList getSearchablesList()>
SOURCE|<com.android.bluetooth.btservice.AdapterService$AdapterServiceBinder: int getDiscoverableTimeout()>
SOURCE|<android.telephony.TelephonyManager: int getLteOnCdmaModeStatic()>
SOURCE|<com.android.server.location.LocationBasedCountryDetector: java.util.List getEnabledProviders()>
SOURCE|<com.android.emailcommon.mail.PackedString: java.lang.String get(java.lang.String)>
SOURCE|<android.renderscript.FieldPacker: byte[] getData()>
SOURCE|<org.apache.http.impl.cookie.RFC2109Spec: java.util.List parse(org.apache.http.Header,org.apache.http.cookie.CookieOrigin)>
SOURCE|<com.android.mms.dom.smil.SmilRootLayoutElementImpl: java.lang.String getBackgroundColor()>
SOURCE|<com.android.internal.util.TypedProperties: java.lang.String getString(java.lang.String,java.lang.String)>
SOURCE|<org.apache.http.impl.conn.tsccm.BasicPooledConnAdapter: org.apache.http.conn.ClientConnectionManager getManager()>
SOURCE|<com.android.contacts.model.account.AccountType: java.lang.String getViewGroupActivity()>
SOURCE|<android.net.ThrottleManager: int getCliffLevel(java.lang.String,int)>
SOURCE|<android.view.ScaleGestureDetector: float getFocusX()>
SOURCE|<android.net.ConnectivityManager: java.lang.String getNetworkTypeName(int)>
SOURCE|<gov.nist.javax.sip.header.SIPDate: int getDeltaSeconds()>
SOURCE|<android.view.View: int getWindowSystemUiVisibility()>
SOURCE|<com.android.email.activity.setup.SetupData: android.accounts.AccountAuthenticatorResponse getAccountAuthenticatorResponse()>
SOURCE|<gov.nist.javax.sip.stack.TCPMessageProcessor: int getDefaultTargetPort()>
SOURCE|<gov.nist.javax.sip.ListeningPointImpl: gov.nist.javax.sip.header.Via getViaHeader()>
SOURCE|<com.android.phone.ManageConferenceUtils: int getNumCallersInConference()>
SOURCE|<java.nio.HeapByteBuffer: float getFloat(int)>
SOURCE|<android.provider.Settings$Global: android.net.Uri getUriFor(java.lang.String)>
SOURCE|<android.hardware.Sensor: float getResolution()>
SOURCE|<com.android.calendar.selectcalendars.SelectCalendarsSimpleAdapter: int getCount()>
SOURCE|<android.widget.SimpleExpandableListAdapter: android.view.View getChildView(int,int,boolean,android.view.View,android.view.ViewGroup)>
SOURCE|<com.android.contacts.calllog.CallDetailHistoryAdapter: java.lang.Object getItem(int)>
SOURCE|<org.xml.sax.helpers.ParserFactory: org.xml.sax.Parser makeParser()>
SOURCE|<android.media.videoeditor.MediaArtistNativeHelper: int getVideoCodecType(int)>
SOURCE|<gov.nist.core.ParserCore: gov.nist.core.NameValue nameValue()>
SOURCE|<org.apache.harmony.xnet.provider.jsse.SSLSocketWrapper: java.net.SocketAddress getLocalSocketAddress()>
SOURCE|<com.google.android.gles_jni.EGLContextImpl: javax.microedition.khronos.opengles.GL getGL()>
SOURCE|<android.provider.MediaStore$Images$Media: android.database.Cursor query(android.content.ContentResolver,android.net.Uri,java.lang.String[],java.lang.String,java.lang.String)>
SOURCE|<gov.nist.javax.sip.header.ContentDisposition: java.lang.String getDispositionType()>
SOURCE|<com.android.contacts.editor.ContactEditorUtils: java.lang.String[] getWritableAccountTypeStrings()>
SOURCE|<org.apache.http.impl.cookie.BasicClientCookie: java.lang.String getComment()>
SOURCE|<gov.nist.javax.sip.header.Challenge: java.lang.String getParameter(java.lang.String)>
SOURCE|<java.io.File: java.lang.String getPath()>
SOURCE|<android.os.AsyncTask: java.lang.Object get(long,java.util.concurrent.TimeUnit)>
SOURCE|<android.media.AudioRecord: int getState()>
SOURCE|<com.android.inputmethod.latin.ResourceUtils: float getFraction(android.content.res.TypedArray,int,float)>
SOURCE|<android.text.method.ReplacementTransformationMethod$SpannedReplacementCharSequence: int getSpanEnd(java.lang.Object)>
SOURCE|<android.net.SSLCertificateSocketFactory: javax.net.ssl.SSLSocketFactory getDefault(int,android.net.SSLSessionCache)>
SOURCE|<com.android.internal.telephony.PhoneProxy: void getNeighboringCids(android.os.Message)>
SOURCE|<org.apache.harmony.security.x509.TBSCertList$RevokedCertificate: byte[] getEncoded()>
SOURCE|<android.widget.ArrayAdapter: int getCount()>
SOURCE|<android.view.View: int getScrollY()>
SOURCE|<com.android.internal.telephony.cdma.CDMAPhone: com.android.internal.telephony.IccPhoneBookInterfaceManager getIccPhoneBookInterfaceManager()>
SOURCE|<com.android.contacts.editor.ContactEditorFragment: long getContactId()>
SOURCE|<java.net.URLConnection: java.util.Map getHeaderFields()>
SOURCE|<com.android.internal.util.StateMachine: android.os.Message getCurrentMessage()>
SOURCE|<org.ccil.cowan.tagsoup.Schema: org.ccil.cowan.tagsoup.ElementType getElementType(java.lang.String)>
SOURCE|<java.security.cert.CertPathBuilder: java.lang.String getDefaultType()>
SOURCE|<gov.nist.javax.sip.header.MimeVersion: int getMajorVersion()>
SOURCE|<com.android.calendar.event.EditEventFragment: long getSupportedEventTypes()>
SOURCE|<com.google.common.collect.MapMakerInternalMap$WeakEvictableEntry: com.google.common.collect.MapMakerInternalMap$ReferenceEntry getNextEvictable()>
SOURCE|<android.telephony.CellSignalStrengthLte: int getLevel()>
SOURCE|<android.widget.GridView: int getHorizontalSpacing()>
SOURCE|<java.security.cert.CertStore: java.security.cert.CertStore getInstance(java.lang.String,java.security.cert.CertStoreParameters,java.security.Provider)>
SOURCE|<com.android.internal.os.BatteryStatsImpl$Uid$Pkg$Serv: long getLaunchTimeToNowLocked(long)>
SOURCE|<android.provider.Telephony$Mms: android.database.Cursor query(android.content.ContentResolver,java.lang.String[],java.lang.String,java.lang.String)>
SOURCE|<org.apache.harmony.security.x509.GeneralSubtree: byte[] getEncoded()>
SOURCE|<java.time.Duration: java.util.List getUnits()>
SOURCE|<com.android.org.bouncycastle.asn1.DERBitString: int getPadBits()>
SOURCE|<android.text.SpannableStringInternal: int getSpanEnd(java.lang.Object)>
SOURCE|<com.android.internal.telephony.PhoneProxy: android.content.Context getContext()>
SOURCE|<java.lang.reflect.Executable: java.lang.reflect.AnnotatedType[] getAnnotatedParameterTypes()>
SOURCE|<android.provider.Telephony$Mms: android.database.Cursor query(android.content.ContentResolver,java.lang.String[])>
SOURCE|<android.widget.CalendarView: boolean getShowWeekNumber()>
SOURCE|<android.renderscript.ProgramStore: android.renderscript.ProgramStore$DepthFunc getDepthFunc()>
SOURCE|<org.apache.harmony.security.x509.TBSCertList$RevokedCertificate$1: java.lang.Object getDecodedObject(org.apache.harmony.security.asn1.BerInputStream)>
SOURCE|<android.bluetooth.IBluetoothHealthCallback$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
SOURCE|<com.android.launcher2.LauncherModel: int getCellCountX()>
SOURCE|<gov.nist.javax.sip.stack.SIPTransactionStack: gov.nist.javax.sip.stack.SIPTransaction findCancelTransaction(gov.nist.javax.sip.message.SIPRequest,boolean)>
SOURCE|<com.android.internal.telephony.cat.CatService: com.android.internal.telephony.cat.AppInterface getInstance()>
SOURCE|<android.webkit.WebSettings: boolean getDisplayZoomControls()>
SOURCE|<android.widget.NumberPicker: android.widget.NumberPicker$Formatter getTwoDigitFormatter()>
SOURCE|<com.android.contacts.vcard.ImportVCardActivity$VCardCacheThread: android.net.Uri[] getSourceUris()>
SOURCE|<android.telephony.CellInfo: int hashCode()>
SOURCE|<android.webkit.WebHistoryItemClassic: java.lang.Object getCustomData()>
SOURCE|<android.filterfw.core.SerializedFrame: float[] getFloats()>
SOURCE|<java.util.concurrent.locks.ReentrantLock: int getQueueLength()>
SOURCE|<android.app.BackStackRecord: java.lang.CharSequence getBreadCrumbTitle()>
SOURCE|<android.content.res.XmlBlock$Parser: java.lang.String getAttributeNamespace(int)>
SOURCE|<android.app.Notification$Style: android.widget.RemoteViews getStandardView(int)>
SOURCE|<com.android.internal.telephony.gsm.SmsMessage$PduParser: java.lang.String getUserDataKSC5601(int)>
SOURCE|<com.android.calendar.DayView: android.text.format.Time getSelectedTimeForAccessibility()>
SOURCE|<java.nio.file.FileSystemException: java.lang.String getMessage()>
SOURCE|<com.android.providers.contacts.aggregation.util.NameDistance: float getDistance(byte[],byte[])>
SOURCE|<com.android.email.activity.UIControllerSearchTwoPane: long getMailboxSettingsMailboxId()>
SOURCE|<com.android.gallery3d.picasasource.PicasaSource: com.android.gallery3d.data.MediaItem getFaceItem(android.content.Context,com.android.gallery3d.data.MediaItem,int)>
SOURCE|<org.apache.http.conn.params.ConnPerRouteBean: int getDefaultMax()>
SOURCE|<com.android.contacts.model.account.ExchangeAccountType: com.android.contacts.model.dataitem.DataKind addDataKindPhoto(android.content.Context)>
SOURCE|<android.os.ParcelFileDescriptor: java.io.FileDescriptor getFileDescriptor()>
SOURCE|<android.content.pm.IPackageDataObserver$Stub: android.os.IBinder asBinder()>
SOURCE|<com.android.email.activity.ShortcutPickerFragment$MailboxPickerLoader: android.database.Cursor loadInBackground()>
SOURCE|<java.util.concurrent.atomic.AtomicLong: long getAndSet(long)>
SOURCE|<com.android.calendar.DayView: int getFirstVisibleHour()>
SOURCE|<java.util.zip.Inflater: int getTotalOut()>
SOURCE|<gov.nist.javax.sip.header.ims.SecurityAgree: int getPortServer()>
SOURCE|<com.google.common.io.ByteStreams$4: java.io.InputStream getInput()>
SOURCE|<android.webkit.WebSettings: boolean getUseDoubleTree()>
SOURCE|<gov.nist.javax.sip.stack.TLSMessageChannel: int getPeerPacketSourcePort()>
SOURCE|<java.util.concurrent.atomic.AtomicIntegerArray: int getAndSet(int,int)>
SOURCE|<javax.crypto.spec.PBEParameterSpec: int getIterationCount()>
SOURCE|<android.app.admin.DeviceAdminInfo: android.graphics.drawable.Drawable loadIcon(android.content.pm.PackageManager)>
SOURCE|<android.content.pm.PackageParser$Component: android.content.ComponentName getComponentName()>
SOURCE|<android.widget.TabHost$FactoryContentStrategy: android.view.View getContentView()>
SOURCE|<android.graphics.Bitmap: android.graphics.Bitmap createBitmap(int[],int,int,int,int,android.graphics.Bitmap$Config)>
SOURCE|<com.android.contacts.util.ContactBadgeUtil: java.lang.CharSequence getSocialDate(com.android.contacts.util.StreamItemEntry,android.content.Context)>
SOURCE|<com.android.internal.telephony.IccRecords: java.lang.String getMsisdnNumber()>
SOURCE|<org.apache.http.message.BasicHeaderValueParser: org.apache.http.HeaderElement parseHeaderElement(org.apache.http.util.CharArrayBuffer,org.apache.http.message.ParserCursor)>
SOURCE|<com.android.ex.variablespeed.EngineParameters: int getTargetFrames()>
SOURCE|<java.security.Security: java.security.Provider[] getProviders()>
SOURCE|<org.apache.http.impl.conn.tsccm.BasicPoolEntry: long getValidUntil()>
SOURCE|<android.content.ContentProvider: java.lang.String[] getStreamTypes(android.net.Uri,java.lang.String)>
SOURCE|<com.android.exchange.utility.CalendarUtilities: int getTrueTransitionHour(java.util.GregorianCalendar)>
SOURCE|<android.graphics.drawable.StateListDrawable: android.graphics.drawable.Drawable getStateDrawable(int)>
SOURCE|<android.webkit.ZoomManager: int getDocumentAnchorY()>
SOURCE|<android.text.style.SuggestionSpan: int getSpanTypeId()>
SOURCE|<android.inputmethodservice.Keyboard: java.util.List getKeys()>
SOURCE|<com.android.contacts.model.RawContactDelta$ValuesDelta: java.lang.String getPhoneticMiddleName()>
SOURCE|<android.content.Intent: android.content.Intent parseIntent(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet)>
SOURCE|<android.bluetooth.IBluetoothHeadsetPhone$Stub: android.os.IBinder asBinder()>
SOURCE|<com.android.browser.BrowserSettings: android.webkit.WebSettings$LayoutAlgorithm getLayoutAlgorithm()>
SOURCE|<android.util.MonthDisplayHelper: int getOffset()>
SOURCE|<android.view.ViewConfiguration: long getZoomControlsTimeout()>
SOURCE|<org.apache.http.impl.client.AbstractHttpClient: org.apache.http.protocol.BasicHttpProcessor getHttpProcessor()>
SOURCE|<javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getDefault()>
SOURCE|<gov.nist.javax.sip.header.Supported: java.lang.String getOptionTag()>
SOURCE|<com.google.android.mms.pdu.NotificationInd: byte[] getTransactionId()>
SOURCE|<java.security.cert.TrustAnchor: byte[] getNameConstraints()>
SOURCE|<org.apache.harmony.xml.parsers.DocumentBuilderImpl: org.w3c.dom.DOMImplementation getDOMImplementation()>
SOURCE|<com.android.contacts.detail.ContactDetailDisplayUtils: java.lang.String getPhoneticName(android.content.Context,com.android.contacts.model.Contact)>
SOURCE|<android.animation.Keyframe$IntKeyframe: int getIntValue()>
SOURCE|<com.android.org.bouncycastle.util.encoders.Hex: byte[] decode(java.lang.String)>
SOURCE|<com.android.gallery3d.filtershow.imageshow.ImageRotate: int getLocalValue()>
SOURCE|<java.nio.CharSequenceAdapter: char get()>
SOURCE|<com.android.browser.BookmarkItem: java.lang.String getName()>
SOURCE|<android.media.RingtoneManager: int getDefaultType(android.net.Uri)>
SOURCE|<com.android.launcher2.PagedView: int getPageForView(android.view.View)>
SOURCE|<android.widget.AutoCompleteTextView: android.widget.Filter getFilter()>
SOURCE|<gov.nist.javax.sip.stack.SIPDialog: javax.sip.message.Request createPrack(javax.sip.message.Response)>
SOURCE|<com.android.contacts.model.account.ExternalAccountType: java.lang.String getCreateContactActivityClassName()>
SOURCE|<android.net.UrlQuerySanitizer: void parseEntry(java.lang.String,java.lang.String)>
SOURCE|<android.test.suitebuilder.TestMethod: java.lang.Class getEnclosingClass()>
SOURCE|<org.apache.http.message.BasicLineParser: org.apache.http.RequestLine parseRequestLine(java.lang.String,org.apache.http.message.LineParser)>
SOURCE|<java.util.prefs.AbstractPreferences: long getLong(java.lang.String,long)>
SOURCE|<android.os.storage.StorageVolume: java.lang.String getDescription(android.content.Context)>
SOURCE|<java.lang.ref.PhantomReference: java.lang.Object get()>
SOURCE|<android.view.InputQueue: android.view.InputChannel getInputChannel()>
SOURCE|<android.media.videoeditor.MediaVideoItem: int getHeight()>
SOURCE|<android.widget.NumberPicker$InputTextFilter: char[] getAcceptedChars()>
SOURCE|<com.android.contacts.detail.ContactDetailFragment$ViewAdapter: long getItemId(int)>
SOURCE|<libcore.net.url.FtpURLConnection: java.lang.String getContentType()>
SOURCE|<android.app.ActivityThread: java.lang.String getProcessName()>
SOURCE|<android.view.View: float getRightFadingEdgeStrength()>
SOURCE|<com.google.common.collect.ForwardingMultiset: int count(java.lang.Object)>
SOURCE|<android.app.Fragment: java.lang.CharSequence getText(int)>
SOURCE|<com.android.launcher2.FolderIcon: com.android.launcher2.FolderInfo getFolderInfo()>
SOURCE|<android.widget.OverScroller: int getFinalX()>
SOURCE|<com.android.server.InputMethodManagerService: android.view.inputmethod.InputMethodSubtype getCurrentInputMethodSubtype()>
SOURCE|<javax.obex.ServerRequestHandler: long getConnectionId()>
SOURCE|<com.android.providers.contacts.ContactsDatabaseHelper: java.lang.String getCountryIso()>
SOURCE|<com.android.mms.util.SimpleCache: java.lang.Object get(java.lang.Object)>
SOURCE|<javax.xml.namespace.QName: java.lang.String getPrefix()>
SOURCE|<android.nfc.tech.NfcV: byte getDsfId()>
SOURCE|<android.test.mock.MockResources: int getIdentifier(java.lang.String,java.lang.String,java.lang.String)>
SOURCE|<com.google.common.collect.BstCountBasedBalancePolicies$2: com.google.common.collect.BstNode balance(com.google.common.collect.BstNodeFactory,com.google.common.collect.BstNode,com.google.common.collect.BstNode,com.google.common.collect.BstNode)>
SOURCE|<org.apache.http.message.AbstractHttpMessage: org.apache.http.Header getFirstHeader(java.lang.String)>
SOURCE|<com.android.phone.CallerInfoCache: com.android.phone.CallerInfoCache$CacheEntry getCacheEntry(java.lang.String)>
SOURCE|<com.android.contacts.voicemail.VoicemailStatusHelperImpl$OverallState: com.android.contacts.voicemail.VoicemailStatusHelperImpl$Action getAction()>
SOURCE|<android.app.ActivityOptions: int getStartWidth()>
SOURCE|<com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata: java.lang.String getLeadingDigits()>
SOURCE|<android.text.style.URLSpan: int getSpanTypeId()>
SOURCE|<java.util.Collections$SynchronizedMap: java.lang.Object get(java.lang.Object)>
SOURCE|<android.test.mock.MockPackageManager: java.lang.String[] getSystemSharedLibraryNames()>
SOURCE|<android.database.AbstractWindowedCursor: android.database.CursorWindow getWindow()>
SOURCE|<gov.nist.javax.sip.header.Protocol: java.lang.String getProtocol()>
SOURCE|<android.net.INetworkStatsService$Stub: android.os.IBinder asBinder()>
SOURCE|<com.android.browser.DateSortedExpandableListAdapter: long getChildId(int,int)>
SOURCE|<gov.nist.javax.sip.message.SIPMessage: java.lang.String getTransactionId()>
SOURCE|<com.android.inputmethod.keyboard.ProximityInfo: com.android.inputmethod.keyboard.ProximityInfo createSpellCheckerProximityInfo(int[],int,int,int)>
SOURCE|<android.view.PointerIcon: int getStyle()>
SOURCE|<org.apache.http.impl.auth.RFC2617Scheme: java.lang.String getRealm()>
SOURCE|<android.hardware.GeomagneticField: float getX()>
SOURCE|<android.provider.Settings$System: int getIntForUser(android.content.ContentResolver,java.lang.String,int,int)>
SOURCE|<com.google.android.gms.panorama.internal.PanoramaClientImpl: android.os.IInterface createServiceInterface(android.os.IBinder)>
SOURCE|<java.math.MathContext: int getPrecision()>
SOURCE|<com.android.browser.view.PieItem: int getLevel()>
SOURCE|<com.android.gallery3d.filtershow.filters.ImageFilterTinyPlanet: android.graphics.Bitmap apply(android.graphics.Bitmap,float,boolean)>
SOURCE|<libcore.icu.RuleBasedCollatorICU: int getStrength()>
SOURCE|<org.apache.harmony.xml.dom.AttrImpl: java.lang.String getPrefix()>
SOURCE|<android.filterpacks.imageproc.AlphaBlendFilter: android.filterfw.core.Program getNativeProgram(android.filterfw.core.FilterContext)>
SOURCE|<libcore.net.http.HttpsURLConnectionImpl: long getIfModifiedSince()>
SOURCE|<java.net.URLConnection: boolean getDefaultAllowUserInteraction()>
SOURCE|<com.android.gallery3d.ui.RawTexture: int getWidth()>
SOURCE|<com.android.email.widget.EmailWidgetLoader$WidgetCursor: java.lang.String getMailboxName()>
SOURCE|<com.android.internal.telephony.CallManager: com.android.internal.telephony.Phone getDefaultPhone()>
SOURCE|<android.os.Bundle: char[] getCharArray(java.lang.String)>
SOURCE|<com.android.gallery3d.ui.PositionController: android.graphics.Rect getPosition(int)>
SOURCE|<java.time.MonthDay: int get(java.time.temporal.TemporalField)>
SOURCE|<com.android.server.pm.PackageManagerService: android.content.pm.PackageInfo getPackageInfo(java.lang.String,int,int)>
SOURCE|<com.android.contacts.model.dataitem.DataItem: long getId()>
SOURCE|<com.android.contacts.model.dataitem.SipAddressDataItem: java.lang.String getSipAddress()>
SOURCE|<gov.nist.javax.sip.message.SIPResponse: gov.nist.javax.sip.header.StatusLine getStatusLine()>
SOURCE|<org.apache.commons.logging.LogFactory: org.apache.commons.logging.Log getLog(java.lang.Class)>
SOURCE|<com.android.exchange.EasResponse: java.io.InputStream getInputStream()>
SOURCE|<com.android.deskclock.stopwatch.StopwatchFragment$LapsListAdapter: long[] getLapTimes()>
SOURCE|<android.media.AudioService$ScoClient: int getPid()>
SOURCE|<com.android.email.NotificationController$NotificationThread: android.os.Looper getLooper()>
SOURCE|<dalvik.system.profiler.HprofData: java.util.Set getSamples()>
SOURCE|<gov.nist.javax.sip.address.TelephoneNumber: java.lang.String getIsdnSubaddress()>
SOURCE|<com.google.common.collect.MapMakerInternalMap$StrongExpirableEvictableEntry: com.google.common.collect.MapMakerInternalMap$ReferenceEntry getNextExpirable()>
SOURCE|<gov.nist.javax.sip.header.extensions.Replaces: java.lang.String getToTag()>
SOURCE|<gov.nist.javax.sip.SipStackImpl: gov.nist.javax.sip.clientauthutils.AuthenticationHelper getSecureAuthenticationHelper(gov.nist.javax.sip.clientauthutils.SecureAccountManager,javax.sip.header.HeaderFactory)>
SOURCE|<com.android.nfc.SendUi: android.graphics.Bitmap createScreenshot()>
SOURCE|<com.android.contacts.detail.ContactDetailFragment$InvitableAccountTypesAdapter: long getItemId(int)>
SOURCE|<android.security.KeyStore: byte[] get(java.lang.String)>
SOURCE|<org.apache.harmony.security.x509.DistributionPointName$1: java.lang.Object getDecodedObject(org.apache.harmony.security.asn1.BerInputStream)>
SOURCE|<android.media.videoeditor.MediaImageItem: int getScaledHeight()>
SOURCE|<android.filterfw.core.Filter: java.util.Collection getOutputPorts()>
SOURCE|<org.apache.http.ProtocolVersion: int getMajor()>
SOURCE|<gov.nist.javax.sip.header.SIPHeader: java.lang.String getHeaderValue()>
SOURCE|<android.graphics.drawable.ColorDrawable$ColorState: int getChangingConfigurations()>
SOURCE|<com.android.internal.telephony.sip.SipPhone: java.util.List getCurrentDataConnectionList()>
SOURCE|<libcore.net.http.RequestHeaders: int getMinFreshSeconds()>
SOURCE|<android.net.http.Headers: java.lang.String getEtag()>
SOURCE|<com.android.i18n.phonenumbers.RegexCache: java.util.regex.Pattern getPatternForRegex(java.lang.String)>
SOURCE|<junit.textui.ResultPrinter: java.io.PrintStream getWriter()>
SOURCE|<android.webkit.WebView: int getVisibleTitleHeight()>
SOURCE|<android.content.IIntentReceiver$Stub: android.os.IBinder asBinder()>
SOURCE|<android.content.res.XmlBlock$Parser: int getAttributeUnsignedIntValue(int,int)>
SOURCE|<java.util.GregorianCalendar: int getMinimum(int)>
SOURCE|<gov.nist.javax.sip.message.SIPMessage: gov.nist.javax.sip.header.Contact getContactHeader()>
SOURCE|<com.android.gallery3d.app.GalleryActionBar$AlbumModeAdapter: android.view.View getDropDownView(int,android.view.View,android.view.ViewGroup)>
SOURCE|<android.os.storage.IMountShutdownObserver$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
SOURCE|<com.android.mms.data.Contact: android.net.Uri getPhoneUri()>
SOURCE|<com.android.gallery3d.ui.SlotView$IntegerAnimation: int get()>
SOURCE|<javax.obex.HeaderSet: int[] getHeaderList()>
SOURCE|<java.util.concurrent.atomic.AtomicIntegerFieldUpdater: int getAndAdd(java.lang.Object,int)>
SOURCE|<com.googlecode.mp4parser.authoring.TrackMetaData: int getGroup()>
SOURCE|<com.google.common.collect.MapMaker: long getExpireAfterAccessNanos()>
SOURCE|<java.time.format.DateTimeParseException: int getErrorIndex()>
SOURCE|<org.apache.http.util.VersionInfo: java.lang.String getModule()>
SOURCE|<com.android.internal.os.BatteryStatsImpl: long getGlobalWifiRunningTime(long,int)>
SOURCE|<org.ccil.cowan.tagsoup.Parser: java.lang.Object getProperty(java.lang.String)>
SOURCE|<android.webkit.WebHistoryItem: java.lang.String getUrl()>
SOURCE|<android.widget.TextView: int getImeOptions()>
SOURCE|<com.android.internal.app.ActionBarImpl: android.view.View getCustomView()>
SOURCE|<com.google.android.mms.pdu.PduPart: android.net.Uri getDataUri()>
SOURCE|<com.android.gallery3d.exif.CountedDataInputStream: java.nio.ByteOrder getByteOrder()>
SOURCE|<android.hardware.usb.UsbDevice: android.hardware.usb.UsbInterface getInterface(int)>
SOURCE|<com.google.android.mms.pdu.RetrieveConf: int getDeliveryReport()>
SOURCE|<android.os.Debug: int getThreadExternalAllocSize()>
SOURCE|<libcore.net.http.RawHeaders: int getResponseCode()>
SOURCE|<com.google.common.collect.ForwardingMultimap: java.util.Collection entries()>
SOURCE|<android.view.View: int getMinimumHeight()>
SOURCE|<com.google.common.collect.MapMaker: com.google.common.collect.MapMakerInternalMap$Strength getValueStrength()>
SOURCE|<android.preference.Preference: android.content.Context getContext()>
SOURCE|<com.android.inputmethod.latin.SubtypeLocale: java.lang.String getSubtypeLocaleDisplayName(java.lang.String)>
SOURCE|<java.util.prefs.AbstractPreferences: java.lang.String get(java.lang.String,java.lang.String)>
SOURCE|<com.android.contacts.util.AccountsListAdapter: int getCount()>
SOURCE|<java.time.zone.ZoneRules: java.lang.Object getOffsetInfo(java.time.LocalDateTime)>
SOURCE|<android.filterfw.core.Filter: int getNumberOfConnectedOutputs()>
SOURCE|<org.apache.http.params.DefaultedHttpParams: java.lang.Object getParameter(java.lang.String)>
SOURCE|<java.util.concurrent.locks.ReentrantReadWriteLock: int getWaitQueueLength(java.util.concurrent.locks.Condition)>
SOURCE|<com.android.exchange.ExchangeService: android.content.Context getContext()>
SOURCE|<com.android.email.FolderProperties: java.lang.String getDisplayName(android.database.Cursor)>
SOURCE|<com.android.gallery3d.picasasource.PicasaSource: android.app.Dialog getVersionCheckDialog(android.app.Activity,int)>
SOURCE|<android.webkit.HTML5VideoView: boolean getPauseDuringPreparing()>
SOURCE|<android.preference.PreferenceActivity$Header: java.lang.CharSequence getSummary(android.content.res.Resources)>
SOURCE|<javax.security.auth.Subject: java.util.Set getPrincipals(java.lang.Class)>
SOURCE|<com.android.org.bouncycastle.asn1.DERUTF8String: java.lang.String getString()>
SOURCE|<android.webkit.ZoomManager: float getScale()>
SOURCE|<gov.nist.core.GenericObject: java.lang.String getIndentation()>
SOURCE|<java.security.Provider: java.security.Provider$Service getService(java.lang.String,java.lang.String)>
SOURCE|<java.security.cert.CertPath: java.lang.String getType()>
SOURCE|<com.android.bluetooth.hfp.AtPhonebook: java.lang.String getLastDialledNumber()>
SOURCE|<android.widget.AbsListView: int getCacheColorHint()>
SOURCE|<org.apache.james.mime4j.field.datetime.parser.DateTimeParserTokenManager: org.apache.james.mime4j.field.datetime.parser.Token getNextToken()>
SOURCE|<android.text.method.CharacterPickerDialog$OptionsAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)>
SOURCE|<com.google.common.collect.MapMakerInternalMap$StrongEntry: int getHash()>
SOURCE|<com.android.mms.model.MediaModel: java.lang.String getSrc()>
SOURCE|<java.text.Bidi: int getRunCount()>
SOURCE|<java.time.LocalDateTime: long getLong(java.time.temporal.TemporalField)>
SOURCE|<java.util.jar.Attributes: java.lang.Object get(java.lang.Object)>
SOURCE|<com.android.server.WifiService: int getWifiEnabledState()>
SOURCE|<com.android.contacts.model.AccountTypeManager: com.android.contacts.model.AccountTypeManager createAccountTypeManager(android.content.Context)>
SOURCE|<gov.nist.javax.sip.address.SipUri: gov.nist.core.NameValueList getQheaders()>
SOURCE|<com.android.gallery3d.data.MediaObject: int getMediaType()>
SOURCE|<gov.nist.javax.sip.header.extensions.Join: gov.nist.javax.sip.header.CallIdentifier getCallIdentifer()>
SOURCE|<com.android.internal.telephony.cdma.CdmaCall: java.util.List getConnections()>
SOURCE|<android.accounts.AccountManager: android.accounts.AuthenticatorDescription[] getAuthenticatorTypes()>
SOURCE|<android.net.sip.SipManager: android.net.sip.SipAudioCall makeAudioCall(java.lang.String,java.lang.String,android.net.sip.SipAudioCall$Listener,int)>
SOURCE|<org.apache.harmony.security.provider.cert.X509CertImpl: boolean[] getIssuerUniqueID()>
SOURCE|<android.preference.ListPreference: java.lang.CharSequence[] getEntryValues()>
SOURCE|<com.android.gallery3d.filtershow.imageshow.GeometryMath: float[] getUnitVectorFromPoints(float[],float[])>
SOURCE|<com.android.internal.widget.multiwaveview.TargetDrawable$DrawableWithAlpha: int getOpacity()>
SOURCE|<android.net.IConnectivityManager$Stub$Proxy: int getLastTetherError(java.lang.String)>
SOURCE|<com.android.internal.textservice.ITextServicesManager$Stub$Proxy: void getSpellCheckerService(java.lang.String,java.lang.String,com.android.internal.textservice.ITextServicesSessionListener,com.android.internal.textservice.ISpellCheckerSessionListener,android.os.Bundle)>
SOURCE|<com.android.internal.telephony.IccRecords: java.lang.String getVoiceMailNumber()>
SOURCE|<com.android.contacts.model.dataitem.DataItem: com.android.contacts.model.AccountTypeManager getAccountTypeManager()>
SOURCE|<android.webkit.WebViewCore: android.webkit.WebViewInputDispatcher$WebKitCallbacks getInputDispatcherCallbacks()>
SOURCE|<com.android.contacts.calllog.IntentProvider$1: android.content.Intent getIntent(android.content.Context)>
SOURCE|<gov.nist.javax.sip.ResponseEventExt: gov.nist.javax.sip.ClientTransactionExt getOriginalTransaction()>
SOURCE|<com.android.camera.ui.PieItem: int getIntrinsicHeight()>
SOURCE|<org.apache.http.params.HttpConnectionParams: int getSocketBufferSize(org.apache.http.params.HttpParams)>
SOURCE|<libcore.net.http.HttpURLConnectionImpl: java.security.Permission getPermission()>
SOURCE|<android.telephony.gsm.SmsManager: java.util.ArrayList getAllMessagesFromSim()>
SOURCE|<android.net.wifi.p2p.nsd.WifiP2pDnsSdServiceResponse: java.util.Map getTxtRecord()>
SOURCE|<com.android.server.LocationManagerService: java.lang.String getBestProvider(android.location.Criteria,boolean)>
SOURCE|<android.view.View: int getMeasuredWidthAndState()>
SOURCE|<android.net.INetworkPolicyListener$Stub: android.os.IBinder asBinder()>
SOURCE|<com.coremedia.iso.boxes.fragment.TrackFragmentHeaderBox: long getBaseDataOffset()>
SOURCE|<android.view.textservice.SuggestionsInfo: int getCookie()>
SOURCE|<org.apache.harmony.xnet.provider.jsse.SSLParametersImpl: boolean getEnableSessionCreation()>
SOURCE|<com.google.common.io.Files$2: java.io.FileOutputStream getOutput()>
SOURCE|<com.google.android.mms.pdu.NotifyRespInd: int getStatus()>
SOURCE|<android.app.Service: java.lang.String getClassName()>
SOURCE|<com.android.internal.app.IBatteryStats$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
SOURCE|<android.os.UserManager: int getUserHandle()>
SOURCE|<com.android.emailcommon.internet.MimeMessage: java.util.Date getSentDate()>
SOURCE|<com.google.android.apps.lightcycle.camera.CameraUtility: com.google.android.apps.lightcycle.util.Size getPreviewSize()>
SOURCE|<com.android.inputmethod.latin.SubtypeLocale: java.lang.String getKeyboardLayoutSetName(android.view.inputmethod.InputMethodSubtype)>
SOURCE|<android.view.Window: int getFeatures()>
SOURCE|<android.graphics.drawable.StateListDrawable: int[] getStateSet(int)>
SOURCE|<gov.nist.javax.sip.message.SIPMessage: javax.sip.header.ContentLengthHeader getContentLengthHeader()>
SOURCE|<com.android.contacts.quickcontact.QuickContactListFragment$1: long getItemId(int)>
SOURCE|<org.ccil.cowan.tagsoup.AttributesImpl: java.lang.String getQName(int)>
SOURCE|<android.app.Instrumentation: android.app.Instrumentation$ActivityResult execStartActivity(android.content.Context,android.os.IBinder,android.os.IBinder,android.app.Activity,android.content.Intent,int,android.os.Bundle,android.os.UserHandle)>
SOURCE|<java.lang.reflect.Constructor: java.lang.annotation.Annotation[][] getParameterAnnotations()>
SOURCE|<com.android.internal.os.BatteryStatsImpl$Uid: int getUid()>
SOURCE|<java.text.DateFormat: java.text.DateFormat getDateInstance(int)>
SOURCE|<java.util.jar.JarVerifier: java.security.cert.Certificate[] getCertificates(java.lang.String)>
SOURCE|<com.android.gallery3d.util.JobLimiter$JobWrapper: java.lang.Object get()>
SOURCE|<com.android.i18n.phonenumbers.geocoding.PhoneNumberOfflineGeocoder: java.lang.String getDescriptionForNumber(com.android.i18n.phonenumbers.Phonenumber$PhoneNumber,java.util.Locale)>
SOURCE|<android.view.View: int getLayerType()>
SOURCE|<com.android.mms.model.LayoutModel: com.android.mms.model.RegionModel getImageRegion()>
SOURCE|<android.content.pm.IPackageManager$Stub$Proxy: java.util.List queryIntentActivities(android.content.Intent,java.lang.String,int,int)>
SOURCE|<android.media.MediaRouter$RouteInfo: java.lang.Object getTag()>
SOURCE|<com.android.server.accessibility.TouchExplorer$SendHoverDelayed: float getX()>
SOURCE|<android.speech.IRecognitionService$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
SOURCE|<com.android.server.location.LocationBasedCountryDetector: java.lang.String getCountryFromLocation(android.location.Location)>
SOURCE|<android.net.sip.SipManager: boolean isRegistered(java.lang.String)>
SOURCE|<com.android.mms.data.Contact$ContactsCache: com.android.mms.data.Contact getMe(boolean)>
SOURCE|<com.android.browser.TabControl: int getTabCount()>
SOURCE|<android.graphics.drawable.GradientDrawable: android.graphics.drawable.GradientDrawable$Orientation getOrientation()>
SOURCE|<javax.xml.datatype.Duration: long getTimeInMillis(java.util.Date)>
SOURCE|<android.location.Location: float getAccuracy()>
SOURCE|<gov.nist.javax.sip.header.SIPObject: java.lang.String toString()>
SOURCE|<android.widget.ProgressBar: int getSecondaryProgress()>
SOURCE|<com.android.gallery3d.filtershow.filters.ImageFilter: int getMaxParameter()>
SOURCE|<java.util.zip.CheckedInputStream: java.util.zip.Checksum getChecksum()>
SOURCE|<com.android.email.widget.WidgetManager: long loadMailboxIdPref(android.content.Context,int)>
SOURCE|<org.apache.harmony.security.x509.Validity: java.util.Date getNotBefore()>
SOURCE|<java.util.logging.Logger: java.util.logging.Logger getAnonymousLogger()>
SOURCE|<java.security.Signature$SignatureImpl: byte[] engineSign()>
SOURCE|<android.database.DatabaseUtils: java.lang.String getHexCollationKey(java.lang.String)>
SOURCE|<android.test.mock.MockResources: android.content.res.XmlResourceParser getXml(int)>
SOURCE|<android.provider.ContactsContract$Contacts: android.net.Uri lookupContact(android.content.ContentResolver,android.net.Uri)>
SOURCE|<android.app.ApplicationPackageManager: android.content.pm.PackageInfo getPackageInfo(java.lang.String,int)>
SOURCE|<com.android.videoeditor.service.MovieOverlay: java.lang.Class getAttributeType(java.lang.String)>
SOURCE|<com.android.providers.media.IMtpService$Stub: android.os.IBinder asBinder()>
SOURCE|<com.android.gallery3d.exif.ExifParser: int getCurrentIfd()>
SOURCE|<android.server.search.SearchManagerService: android.content.ComponentName getGlobalSearchActivity()>
SOURCE|<android.app.Activity: java.lang.Object getLastNonConfigurationInstance()>
SOURCE|<com.android.emailcommon.provider.EmailContent: com.android.emailcommon.provider.EmailContent restoreContentWithId(android.content.Context,java.lang.Class,android.net.Uri,java.lang.String[],long)>
SOURCE|<android.app.LoadedApk: java.lang.ClassLoader getClassLoader()>
SOURCE|<com.android.videoeditor.util.FileUtils: java.lang.String getAudioTrackFilename(android.content.Context,int)>
SOURCE|<com.android.emailcommon.service.IAccountService$Stub$Proxy: android.os.Bundle getConfigurationData(java.lang.String)>
SOURCE|<android.mtp.MtpObjectInfo: int getParent()>
SOURCE|<android.graphics.Paint: float getTextRunAdvances(java.lang.String,int,int,int,int,int,float[],int)>
SOURCE|<com.android.server.pm.PackageManagerService: android.content.pm.VerifierDeviceIdentity getVerifierDeviceIdentity()>
SOURCE|<java.util.concurrent.ThreadLocalRandom: int getProbe()>
SOURCE|<android.app.ApplicationPackageManager: java.lang.String[] currentToCanonicalPackageNames(java.lang.String[])>
SOURCE|<org.kxml2.io.KXmlParser: java.lang.String getAttributeName(int)>
SOURCE|<android.database.sqlite.SQLiteDatabase$1: android.database.sqlite.SQLiteSession initialValue()>
SOURCE|<android.webkit.DateSorter: java.lang.String getLabel(int)>
SOURCE|<android.telephony.ServiceState: java.lang.String getOperatorAlphaLong()>
SOURCE|<java.util.AbstractQueue: java.lang.Object remove()>
SOURCE|<android.provider.Settings$System: android.net.Uri getUriFor(java.lang.String)>
SOURCE|<java.security.cert.PKIXBuilderParameters: int getMaxPathLength()>
SOURCE|<gov.nist.core.HostPort: java.net.InetAddress getInetAddress()>
SOURCE|<java.util.HashMap: java.lang.Object get(java.lang.Object)>
SOURCE|<org.apache.http.impl.conn.tsccm.ThreadSafeClientConnManager: int getMaxForRoute(org.apache.http.conn.routing.HttpRoute)>
SOURCE|<java.util.LongSummaryStatistics: long getMin()>
SOURCE|<java.time.Year: int get(java.time.temporal.TemporalField)>
SOURCE|<com.android.providers.telephony.MmsSmsDatabaseHelper: android.database.sqlite.SQLiteDatabase getWritableDatabase()>
SOURCE|<java.net.MulticastSocket: byte getTTL()>
SOURCE|<com.android.mms.dom.events.EventImpl: boolean getBubbles()>
SOURCE|<android.app.ActivityManagerProxy: android.content.Intent getIntentForIntentSender(android.content.IIntentSender)>
SOURCE|<android.view.accessibility.AccessibilityNodeInfo: java.lang.CharSequence getText()>
SOURCE|<android.opengl.GLLogWrapper$PointerInfo: int getStride()>
SOURCE|<android.content.BroadcastReceiver: boolean getAbortBroadcast()>
SOURCE|<android.widget.FastScroller: java.lang.Object[] getSections()>
SOURCE|<android.provider.Settings$Global: int getInt(android.content.ContentResolver,java.lang.String)>
SOURCE|<android.drm.DrmManagerClient: java.lang.String getOriginalMimeType(android.net.Uri)>
SOURCE|<com.google.common.collect.AbstractMultimap$WrappedList: java.lang.Object set(int,java.lang.Object)>
SOURCE|<com.googlecode.mp4parser.FullContainerBox: java.util.List getBoxes()>
SOURCE|<gov.nist.javax.sip.message.SIPRequest: java.lang.String getMergeId()>
SOURCE|<org.apache.harmony.security.x509.GeneralName: byte[] getEncoded()>
SOURCE|<java.time.format.DecimalStyle: char getZeroDigit()>
SOURCE|<com.android.gallery3d.ui.SurfaceTextureScreenNail: int getHeight()>
SOURCE|<com.android.gallery3d.app.AbstractGalleryActivity: com.android.gallery3d.app.TransitionStore getTransitionStore()>
SOURCE|<gov.nist.javax.sip.header.HeaderFactoryImpl: javax.sip.header.ContentLengthHeader createContentLengthHeader(int)>
SOURCE|<com.android.launcher2.LauncherViewPropertyAnimator: long getStartDelay()>
SOURCE|<android.app.ActivityManagerProxy: android.content.ComponentName getCallingActivity(android.os.IBinder)>
SOURCE|<org.apache.http.impl.conn.AbstractClientConnAdapter: org.apache.http.HttpResponse receiveResponseHeader()>
SOURCE|<android.media.videoeditor.VideoEditorProfile: android.media.videoeditor.VideoEditorProfile get()>
SOURCE|<android.media.IRemoteControlDisplay$Stub: android.os.IBinder asBinder()>
SOURCE|<gov.nist.javax.sip.message.MultipartMimeContentImpl: gov.nist.javax.sip.message.Content getContentByType(java.lang.String,java.lang.String)>
SOURCE|<android.app.IActivityController$Stub: android.os.IBinder asBinder()>
SOURCE|<com.android.server.pm.PackageManagerService$InstallParams: android.content.pm.ManifestDigest getManifestDigest()>
SOURCE|<gov.nist.javax.sip.address.SipUri: java.lang.String getHeader(java.lang.String)>
SOURCE|<java.time.ZonedDateTime: int getDayOfMonth()>
SOURCE|<com.android.gallery3d.picasasource.FaceImage: int getHeight()>
SOURCE|<com.android.launcher2.DragLayer$LayoutParams: int getX()>
SOURCE|<android.telephony.CellSignalStrengthGsm: int getLevel()>
SOURCE|<java.nio.MemoryBlock$NonMovableHeapBlock: byte[] array()>
SOURCE|<org.apache.harmony.xml.dom.InnerNodeImpl: org.w3c.dom.Node getLastChild()>
SOURCE|<com.android.gallery3d.picasasource.PicasaImage: com.android.gallery3d.data.MediaDetails getDetails()>
SOURCE|<com.android.gallery3d.app.ActivityState: int getBackgroundColorId()>
SOURCE|<android.database.Cursor: java.lang.String getString(int)>
SOURCE|<org.apache.harmony.xml.dom.ElementImpl: short getNodeType()>
SOURCE|<android.media.audiofx.EnvironmentalReverb: android.media.audiofx.EnvironmentalReverb$Settings getProperties()>
SOURCE|<android.nfc.NdefRecord: byte[] toByteArray()>
SOURCE|<android.app.WallpaperInfo: android.graphics.drawable.Drawable loadThumbnail(android.content.pm.PackageManager)>
SOURCE|<org.apache.harmony.security.x509.AuthorityKeyIdentifier: byte[] getKeyIdentifier()>
SOURCE|<gov.nist.javax.sip.stack.SIPTransaction: java.security.cert.Certificate[] getLocalCertificates()>
SOURCE|<android.provider.Settings$System: float getFloatForUser(android.content.ContentResolver,java.lang.String,int)>
SOURCE|<org.apache.harmony.xnet.provider.jsse.HandshakeIODataStream: byte[] getDigestMD5withoutLast()>
SOURCE|<android.app.DownloadManager: android.os.ParcelFileDescriptor openDownloadedFile(long)>
SOURCE|<android.widget.TextView: int getCurrentTextColor()>
SOURCE|<java.io.ObjectStreamClass: java.lang.String getName()>
SOURCE|<android.webkit.WebStorage$Origin: long getUsage()>
SOURCE|<com.coremedia.iso.boxes.fragment.TrackRunBox$Entry: long getSampleDuration()>
SOURCE|<org.apache.harmony.xml.dom.DocumentTypeImpl: org.w3c.dom.NamedNodeMap getNotations()>
SOURCE|<com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata: boolean getMainCountryForCode()>
SOURCE|<com.android.commands.monkey.MonkeySourceNetworkVars$1: java.lang.String get()>
SOURCE|<com.google.android.mms.pdu.SendConf: byte[] getTransactionId()>
SOURCE|<com.android.gallery3d.filtershow.HistoryAdapter: com.android.gallery3d.filtershow.presets.ImagePreset getLast()>
SOURCE|<android.preference.RingtonePreference: boolean getShowSilent()>
SOURCE|<libcore.net.http.HttpEngine$1: java.util.Map getHeaders()>
SOURCE|<com.android.systemui.recent.RecentTasksLoader: com.android.systemui.recent.TaskDescription getFirstTask()>
SOURCE|<com.android.internal.view.menu.MenuItemImpl: android.content.Intent getIntent()>
SOURCE|<com.coremedia.iso.boxes.fragment.TrackExtendsBox: com.coremedia.iso.boxes.fragment.SampleFlags getDefaultSampleFlags()>
SOURCE|<android.graphics.BitmapFactory: android.graphics.Bitmap decodeStream(java.io.InputStream,android.graphics.Rect,android.graphics.BitmapFactory$Options)>
SOURCE|<android.filterfw.core.SerializedFrame: java.lang.Object getObjectValue()>
SOURCE|<gov.nist.javax.sip.address.AddressImpl: javax.sip.address.URI getURI()>
SOURCE|<libcore.net.http.RequestHeaders: java.lang.String getIfModifiedSince()>
SOURCE|<com.android.gallery3d.data.LocalAlbum: int getMediaItemCount()>
SOURCE|<com.android.mms.data.Conversation$Cache: com.android.mms.data.Conversation$Cache getInstance()>
SOURCE|<java.nio.SocketChannelImpl$SocketAdapter: java.io.FileDescriptor getFileDescriptor$()>
SOURCE|<com.android.gallery3d.picasasource.PicasaAlbum: long getCacheSize()>
SOURCE|<javax.obex.ClientSession: javax.obex.Operation get(javax.obex.HeaderSet)>
SOURCE|<android.os.Binder: android.os.UserHandle getCallingUserHandle()>
SOURCE|<android.widget.AbsListView: android.graphics.drawable.Drawable getSelector()>
SOURCE|<android.widget.TextView: int getCompoundPaddingStart()>
SOURCE|<javax.xml.parsers.SAXParser: void parse(java.io.InputStream,org.xml.sax.HandlerBase,java.lang.String)>
SOURCE|<java.time.chrono.MinguoDate: java.time.chrono.MinguoEra getEra()>
SOURCE|<android.app.LoadedApk: android.app.IServiceConnection getServiceDispatcher(android.content.ServiceConnection,android.content.Context,android.os.Handler,int)>
SOURCE|<android.renderscript.BaseObj: int getID(android.renderscript.RenderScript)>
SOURCE|<com.android.internal.util.StateMachine: android.os.Handler getHandler()>
SOURCE|<com.android.internal.os.BatteryStatsImpl$Uid: com.android.internal.os.BatteryStatsImpl$StopwatchTimer getSensorTimerLocked(int,boolean)>
SOURCE|<com.android.bluetooth.hfp.HeadsetPhoneState: int getSignal()>
SOURCE|<android.provider.ContactsContract$SyncState: android.util.Pair getWithUri(android.content.ContentProviderClient,android.accounts.Account)>
SOURCE|<com.android.email.activity.MailboxListFragment: boolean getEnableHighlight()>
SOURCE|<android.telephony.cdma.CdmaCellLocation: int getNetworkId()>
SOURCE|<android.support.v4.view.VelocityTrackerCompat$BaseVelocityTrackerVersionImpl: float getXVelocity(android.view.VelocityTracker,int)>
SOURCE|<android.text.method.ReplacementTransformationMethod: java.lang.CharSequence getTransformation(java.lang.CharSequence,android.view.View)>
SOURCE|<java.util.Collections$CheckedList: java.lang.Object get(int)>
SOURCE|<android.telephony.gsm.SmsMessage: java.lang.String getOriginatingAddress()>
SOURCE|<android.telephony.SignalStrength: int getCdmaEcio()>
SOURCE|<com.google.common.collect.MapMakerInternalMap$SoftExpirableEvictableEntry: com.google.common.collect.MapMakerInternalMap$ReferenceEntry getPreviousEvictable()>
SOURCE|<com.android.contacts.model.AccountTypeManager: com.android.contacts.model.dataitem.DataKind getKindOrFallback(java.lang.String,java.lang.String,java.lang.String)>
SOURCE|<org.apache.harmony.xml.dom.DOMConfigurationImpl$6: java.lang.Object get(org.apache.harmony.xml.dom.DOMConfigurationImpl)>
SOURCE|<com.android.phone.CdmaPhoneCallState: com.android.phone.CdmaPhoneCallState$PhoneCallState getCurrentCallState()>
SOURCE|<java.util.concurrent.locks.ReentrantReadWriteLock$WriteLock: int getHoldCount()>
SOURCE|<android.content.pm.PackageManager: android.content.pm.PackageInfo getPackageArchiveInfo(java.lang.String,int)>
SOURCE|<com.adobe.xmp.impl.ByteBuffer: java.io.InputStream getByteStream()>
SOURCE|<libcore.net.url.FileURLConnection: java.io.InputStream getInputStream()>
SOURCE|<com.android.internal.view.IInputMethodCallback$Stub: android.os.IBinder asBinder()>
SOURCE|<com.android.phone.PhoneInterfaceManager: int getCallState()>
SOURCE|<com.android.contacts.interactions.ImportExportDialogFragment: android.app.Dialog onCreateDialog(android.os.Bundle)>
SOURCE|<android.media.videoeditor.MediaVideoItem: java.lang.String getAudioWaveformFilename()>
SOURCE|<android.widget.Switch: java.lang.CharSequence getTextOff()>
SOURCE|<android.widget.TextView: int getPaintFlags()>
SOURCE|<android.os.UserManager: long getSerialNumberForUser(android.os.UserHandle)>
SOURCE|<android.webkit.WebView: android.view.View getZoomControls()>
SOURCE|<com.android.nfc.NfcDispatcher$DispatchInfo: android.content.Intent setTagIntent()>
SOURCE|<com.google.common.collect.TreeMultiset$LiveEntry: int getCount()>
SOURCE|<org.ccil.cowan.tagsoup.HTMLScanner: java.lang.String getPublicId()>
SOURCE|<android.os.SystemProperties: java.lang.String get(java.lang.String,java.lang.String)>
SOURCE|<org.apache.harmony.xnet.provider.jsse.OpenSSLSessionImpl: java.security.cert.Certificate[] getLocalCertificates()>
SOURCE|<com.android.server.pm.Settings: int getComponentEnabledSettingLPr(android.content.ComponentName,int)>
SOURCE|<com.android.internal.telephony.PhoneSubInfo: java.lang.String[] getIsimImpu()>
SOURCE|<java.util.concurrent.atomic.AtomicBoolean: boolean getAndSet(boolean)>
SOURCE|<com.android.camera.ui.RenderOverlay: int getWindowPositionY()>
SOURCE|<android.view.textservice.TextServicesManager: android.view.textservice.TextServicesManager getInstance()>
SOURCE|<com.android.email.activity.MessagesAdapter$SearchResultsCursor: com.android.emailcommon.provider.Mailbox getSearchedMailbox()>
SOURCE|<com.android.email.ResourceHelper: int getAccountColorIndex(long)>
SOURCE|<android.graphics.Paint: int getTextRunCursor(java.lang.CharSequence,int,int,int,int,int)>
SOURCE|<com.android.gallery3d.data.MediaItem: com.android.gallery3d.data.BitmapPool getThumbPool()>
SOURCE|<gov.nist.javax.sip.stack.UDPMessageProcessor: int getDefaultTargetPort()>
SOURCE|<gov.nist.javax.sip.header.RSeq: long getSeqNumber()>
SOURCE|<java.lang.ThreadLocal: java.lang.Object get()>
SOURCE|<com.android.gallery3d.app.StateManager: int getStateCount()>
SOURCE|<com.android.exchange.ExchangeService: com.android.emailcommon.utility.EmailClientConnectionManager getClientConnectionManager(boolean,int)>
SOURCE|<gov.nist.javax.sip.header.AuthenticationHeader: java.lang.String getCNonce()>
SOURCE|<android.location.Location: double getAltitude()>
SOURCE|<gov.nist.javax.sip.stack.TLSMessageChannel: java.lang.String getPeerProtocol()>
SOURCE|<java.util.logging.Level: java.util.logging.Level parse(java.lang.String)>
SOURCE|<java.sql.DriverManager: java.util.Enumeration getDrivers()>
SOURCE|<gov.nist.javax.sip.address.SipUri: java.lang.String getHost()>
SOURCE|<android.app.ApplicationPackageManager: android.content.pm.PermissionInfo getPermissionInfo(java.lang.String,int)>
SOURCE|<gov.nist.javax.sip.header.CallInfo: java.lang.String getPurpose()>
SOURCE|<android.view.GLES20Canvas: int getRenderer()>
SOURCE|<com.android.internal.telephony.cdma.CdmaConnection: com.android.internal.telephony.Call getCall()>
SOURCE|<gov.nist.javax.sip.stack.TCPMessageChannel: java.lang.String getKey()>
SOURCE|<com.android.browser.SuggestionsAdapter$SuggestCursor: com.android.browser.SuggestionsAdapter$SuggestItem getItem()>
SOURCE|<android.text.style.QuoteSpan: int getColor()>
SOURCE|<org.apache.http.message.AbstractHttpMessage: org.apache.http.Header getLastHeader(java.lang.String)>
SOURCE|<android.widget.AbsListView: int getListPaddingBottom()>
SOURCE|<android.telephony.CellInfoLte: android.telephony.CellSignalStrengthLte getCellSignalStrength()>
SOURCE|<com.google.common.collect.ImmutableSortedSet: com.google.common.collect.ImmutableSortedSet tailSet(java.lang.Object,boolean)>
SOURCE|<com.android.org.bouncycastle.asn1.DERT61String: com.android.org.bouncycastle.asn1.DERT61String getInstance(com.android.org.bouncycastle.asn1.ASN1TaggedObject,boolean)>
SOURCE|<android.content.ContentProvider: java.lang.String getReadPermission()>
SOURCE|<com.android.browser.NavScreen$TabAdapter: long getItemId(int)>
SOURCE|<android.os.Environment$UserEnvironment: java.io.File getMediaStorageDirectory()>
SOURCE|<android.preference.PreferenceManager: android.content.Context getContext()>
SOURCE|<com.android.gallery3d.data.MtpClient: android.mtp.MtpObjectInfo getObjectInfo(java.lang.String,int)>
SOURCE|<org.apache.harmony.security.asn1.ASN1Type: byte[] encode(java.lang.Object)>
SOURCE|<android.app.ActivityManager: java.util.List getRunningAppProcesses()>
SOURCE|<com.google.android.gsf.Gservices: java.lang.String getString(android.content.ContentResolver,java.lang.String)>
SOURCE|<android.speech.tts.PlaybackSynthesisCallback: int getMaxBufferSize()>
SOURCE|<java.nio.charset.UnsupportedCharsetException: java.lang.String getCharsetName()>
SOURCE|<com.android.bluetooth.hid.HidService: int getPriority(android.bluetooth.BluetoothDevice)>
SOURCE|<com.android.gallery3d.exif.ExifTag: int getIfdIdFromTagId(short)>
SOURCE|<android.net.http.AndroidHttpClient$2: org.apache.http.protocol.BasicHttpProcessor createHttpProcessor()>
SOURCE|<gov.nist.javax.sip.stack.UDPMessageChannel: java.net.InetAddress getPeerInetAddress()>
SOURCE|<libcore.net.http.ResponseHeaders: int getSMaxAgeSeconds()>
SOURCE|<com.android.nfc.dhimpl.NativeLlcpSocket: int getRemoteRw()>
SOURCE|<com.android.inputmethod.latin.suggestions.MoreSuggestions$Divider: android.graphics.drawable.Drawable getIcon(com.android.inputmethod.keyboard.internal.KeyboardIconsSet,int)>
SOURCE|<com.android.email.FolderProperties: int getMessageCount(int,int,int)>
SOURCE|<android.net.LocalSocketAddress: java.lang.String getName()>
SOURCE|<com.android.internal.telephony.gsm.GsmMmiCode: java.lang.CharSequence getMessage()>
SOURCE|<android.view.animation.AnimationSet: long getDuration()>
SOURCE|<com.android.contacts.ContactsUtils: android.graphics.Rect getTargetRectFromView(android.content.Context,android.view.View)>
SOURCE|<com.android.camera.FocusOverlayManager: boolean getAeAwbLock()>
SOURCE|<com.coremedia.iso.boxes.fragment.TrackExtendsBox: long getContentSize()>
SOURCE|<com.android.videoeditor.service.MovieAudioTrack: long getBoundaryBeginTime()>
SOURCE|<android.net.InterfaceConfiguration: android.net.LinkAddress getLinkAddress()>
SOURCE|<org.apache.http.conn.routing.RouteTracker: org.apache.http.HttpHost getHopTarget(int)>
SOURCE|<com.android.emailcommon.utility.Utility: java.lang.Long getFirstRowLong(android.content.Context,android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,int,java.lang.Long)>
SOURCE|<com.android.server.ThrottleService$DataRecorder: long getPeriodStart()>
SOURCE|<libcore.icu.LocaleData: java.lang.String getTimeFormat(int)>
SOURCE|<org.apache.harmony.security.asn1.BerInputStream: int getLength(byte[])>
SOURCE|<android.content.ComponentName: java.lang.String getPackageName()>
SOURCE|<java.nio.HeapByteBuffer: int getInt()>
SOURCE|<com.android.nfc.dhimpl.NativeLlcpConnectionlessSocket: int getHandle()>
SOURCE|<android.os.Environment: java.io.File getSystemSecureDirectory()>
SOURCE|<java.net.DatagramSocket: boolean getBroadcast()>
SOURCE|<org.json.JSONObject: int getInt(java.lang.String)>
SOURCE|<gov.nist.javax.sip.stack.SIPTransaction: java.lang.String getBranchId()>
SOURCE|<android.database.MergeCursor: long getLong(int)>
SOURCE|<gov.nist.javax.sip.header.AuthenticationHeader: int getNonceCount()>
SOURCE|<java.time.chrono.HijrahChronology: int getMaximumMonthLength()>
SOURCE|<android.hardware.display.WifiDisplay: java.lang.String getDeviceName()>
SOURCE|<java.util.logging.Handler: java.util.logging.Filter getFilter()>
SOURCE|<android.telephony.CellInfoCdma: android.telephony.CellSignalStrengthCdma getCellSignalStrength()>
SOURCE|<com.android.contacts.list.PostalAddressListAdapter: android.view.View newView(android.content.Context,int,android.database.Cursor,int,android.view.ViewGroup)>
SOURCE|<gov.nist.javax.sip.address.SipUri: java.lang.String getUserAtHostPort()>
SOURCE|<java.security.MessageDigest: byte[] digest(byte[])>
SOURCE|<com.android.server.usb.UsbService: android.hardware.usb.UsbAccessory getCurrentAccessory()>
SOURCE|<java.text.DecimalFormat: int getMinimumFractionDigits()>
SOURCE|<com.android.gallery3d.ui.PositionController: float getImageScale()>
SOURCE|<com.android.launcher2.DragLayer: android.view.View getAnimatedView()>
SOURCE|<gov.nist.javax.sip.SipProviderImpl: javax.sip.SipStack getSipStack()>
SOURCE|<org.apache.harmony.security.provider.cert.X509CertImpl: java.lang.String getSigAlgName()>
SOURCE|<gov.nist.javax.sip.SipProviderImpl: javax.sip.Dialog getNewDialog(javax.sip.Transaction)>
SOURCE|<android.app.WallpaperManager: java.lang.String access$200()>
SOURCE|<android.filterfw.core.NativeFrame: java.lang.Object getObjectValue()>
SOURCE|<com.android.contacts.datepicker.DatePicker: int getYear()>
SOURCE|<com.android.browser.BrowserSettings: java.lang.String getDefaultLinkPrefetchSetting()>
SOURCE|<java.util.Date: int getSeconds()>
SOURCE|<android.graphics.drawable.InsetDrawable: int getIntrinsicHeight()>
SOURCE|<com.android.mms.util.CacheManager: com.android.mms.util.BlobCache getCache(android.content.Context,java.lang.String,int,int,int)>
SOURCE|<com.android.contacts.list.ContactEntryListFragment: com.android.contacts.list.ContactEntryListAdapter getAdapter()>
SOURCE|<android.media.AudioService: int getLastAudibleMasterVolume()>
SOURCE|<java.nio.FileChannelImpl: java.io.FileDescriptor getFD()>
SOURCE|<java.util.ResourceBundle: java.util.Set handleKeySet()>
SOURCE|<org.apache.harmony.security.x509.GeneralName$1: java.lang.Object getObjectToEncode(java.lang.Object)>
SOURCE|<org.apache.http.HttpHost: int getPort()>
SOURCE|<java.security.Provider: int getProviderNumber()>
SOURCE|<javax.xml.validation.Validator: java.lang.Object getProperty(java.lang.String)>
SOURCE|<android.view.MotionEvent: float getX(int)>
SOURCE|<com.android.camera.ActivityBase: android.content.Intent getResultData()>
SOURCE|<java.net.DatagramSocketImpl: int getLocalPort()>
SOURCE|<com.android.calendar.agenda.AgendaByDayAdapter: int getItemViewType(int)>
SOURCE|<org.xml.sax.helpers.ParserAdapter: org.xml.sax.ErrorHandler getErrorHandler()>
SOURCE|<android.hardware.Sensor: int getType()>
SOURCE|<java.lang.Character: java.lang.String getName(int)>
SOURCE|<gov.nist.javax.sip.stack.SIPTransactionStack: javax.sip.Dialog getJoinDialog(gov.nist.javax.sip.header.extensions.JoinHeader)>
SOURCE|<com.android.i18n.phonenumbers.geocoding.MappingFileProvider: java.lang.String getFileName(int,java.lang.String,java.lang.String,java.lang.String)>
SOURCE|<com.android.internal.os.IResultReceiver$Stub: android.os.IBinder asBinder()>
SOURCE|<com.android.org.bouncycastle.asn1.ASN1Sequence: com.android.org.bouncycastle.asn1.ASN1Primitive toDLObject()>
SOURCE|<com.android.email.mail.store.Pop3Store$Pop3Folder: com.android.emailcommon.mail.Message getMessage(java.lang.String)>
SOURCE|<android.hardware.SensorManager: int getSensors()>
SOURCE|<java.time.chrono.JapaneseChronology: java.time.chrono.JapaneseEra getCurrentEra()>
SOURCE|<com.android.gallery3d.data.Path: com.android.gallery3d.data.Path getPrefixPath()>
SOURCE|<com.android.browser.BrowserSnapshotPage$SnapshotAdapter: android.database.Cursor getItem(int)>
SOURCE|<java.io.FileInputStream: void <init>(java.lang.String)>
SOURCE|<com.android.browser.PreloadController: android.graphics.Bitmap getDefaultVideoPoster()>
SOURCE|<com.android.server.sip.SipSessionGroup$MakeCallCommand: java.lang.String getSessionDescription()>
SOURCE|<android.ddm.DdmHandleAppName: java.lang.String getAppName()>
SOURCE|<com.android.providers.settings.SettingsHelper: byte[] getLocaleData()>
SOURCE|<org.apache.http.impl.cookie.RFC2965Spec: java.util.List parse(org.apache.http.HeaderElement[],org.apache.http.cookie.CookieOrigin)>
SOURCE|<java.io.File: boolean delete()>
SOURCE|<com.android.contacts.model.account.BaseAccountType: com.android.contacts.model.dataitem.DataKind addDataKindStructuredName(android.content.Context)>
SOURCE|<com.android.inputmethod.latin.ExpandableDictionary$NextHistoryWord: com.android.inputmethod.latin.ExpandableDictionary$Node getWordNode()>
SOURCE|<android.webkit.MimeTypeMap: java.lang.String getMimeTypeFromExtension(java.lang.String)>
SOURCE|<com.google.common.collect.Iterators$11: java.lang.Object get(int)>
SOURCE|<com.android.contacts.model.RawContactDelta$ValuesDelta: android.content.ContentValues getCompleteValues()>
SOURCE|<javax.crypto.SecretKeyFactory: java.lang.String getAlgorithm()>
SOURCE|<android.content.pm.ParceledListSlice: android.os.Parcelable populateList(java.util.List,android.os.Parcelable$Creator)>
SOURCE|<com.android.email.activity.ThreePaneLayout: int getLeftPaneId()>
SOURCE|<gov.nist.javax.sip.header.RequestLine: gov.nist.javax.sip.address.GenericURI getUri()>
SOURCE|<com.android.inputmethod.latin.spellcheck.DictionaryPool$1: java.util.ArrayList getSuggestions(com.android.inputmethod.latin.WordComposer,java.lang.CharSequence,com.android.inputmethod.keyboard.ProximityInfo)>
SOURCE|<android.filterfw.core.SyncRunner: java.lang.Exception getError()>
SOURCE|<com.android.videoeditor.service.MovieMediaItem: long getBoundaryBeginTime()>
SOURCE|<com.android.email.widget.WidgetManager: com.android.email.widget.WidgetManager getInstance()>
SOURCE|<android.media.videoeditor.MediaItem: android.media.videoeditor.Transition getBeginTransition()>
SOURCE|<android.widget.AbsListView: void getFocusedRect(android.graphics.Rect)>
SOURCE|<android.app.PendingIntent: java.lang.String getTargetPackage()>
SOURCE|<android.media.audiofx.EnvironmentalReverb: short getRoomHFLevel()>
SOURCE|<android.nfc.NdefRecord: android.nfc.NdefRecord createUri(java.lang.String)>
SOURCE|<android.text.method.MultiTapKeyListener: int getInputType()>
SOURCE|<org.xml.sax.helpers.XMLFilterImpl: boolean getFeature(java.lang.String)>
SOURCE|<android.app.LoadedApk: android.content.IIntentReceiver getReceiverDispatcher(android.content.BroadcastReceiver,android.content.Context,android.os.Handler,android.app.Instrumentation,boolean)>
SOURCE|<android.bluetooth.BluetoothDevice: android.bluetooth.IBluetooth getService()>
SOURCE|<android.widget.GridView: int getGravity()>
SOURCE|<com.google.common.collect.MapMakerInternalMap$SoftEntry: com.google.common.collect.MapMakerInternalMap$ValueReference getValueReference()>
SOURCE|<com.android.browser.SuggestionsAdapter: java.lang.String getSuggestionUrl(com.android.browser.SuggestionsAdapter$SuggestItem)>
SOURCE|<org.apache.harmony.security.asn1.ASN1Type: int getEncodedLength(org.apache.harmony.security.asn1.BerOutputStream)>
SOURCE|<android.graphics.drawable.shapes.Shape: android.graphics.drawable.shapes.Shape clone()>
SOURCE|<android.database.AbstractCursor: java.lang.String getColumnName(int)>
SOURCE|<javax.xml.transform.dom.DOMSource: java.lang.String getSystemId()>
SOURCE|<android.os.Bundle: java.lang.ClassLoader getClassLoader()>
SOURCE|<gov.nist.javax.sip.header.SubscriptionState: java.lang.String getReasonCode()>
SOURCE|<android.view.accessibility.AccessibilityRecord: java.lang.CharSequence getBeforeText()>
SOURCE|<javax.xml.transform.dom.DOMResult: org.w3c.dom.Node getNextSibling()>
SOURCE|<com.android.browser.BreadCrumbView: int getBaseline()>
SOURCE|<com.android.internal.telephony.gsm.GsmDataConnectionTracker: com.android.internal.telephony.DctConstants$State getState(java.lang.String)>
SOURCE|<com.android.server.sip.SipService: android.net.sip.ISipSession getPendingSession(java.lang.String)>
SOURCE|<android.renderscript.Type: int getCount()>
SOURCE|<java.net.Authenticator: java.net.PasswordAuthentication getPasswordAuthentication()>
SOURCE|<com.android.systemui.statusbar.BaseStatusBar: com.android.systemui.statusbar.StatusBarIconView addNotificationViews(android.os.IBinder,com.android.internal.statusbar.StatusBarNotification)>
SOURCE|<com.android.contacts.group.GroupEditorFragment$MemberListAdapter: com.android.contacts.group.GroupEditorFragment$Member getItem(int)>
SOURCE|<android.app.admin.DevicePolicyManager: android.app.admin.DeviceAdminInfo getAdminInfo(android.content.ComponentName)>
SOURCE|<android.widget.TextView: int getLineBounds(int,android.graphics.Rect)>
SOURCE|<com.google.android.mms.pdu.SendReq: long getMessageSize()>
SOURCE|<com.android.email.activity.setup.AccountSecurity$SecurityNeededDialog: android.app.Dialog onCreateDialog(android.os.Bundle)>
SOURCE|<com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata: java.util.List numberFormats()>
SOURCE|<org.apache.http.client.methods.HttpEntityEnclosingRequestBase: org.apache.http.HttpEntity getEntity()>
SOURCE|<android.webkit.WebSettingsClassic: java.lang.String getPluginsPath()>
SOURCE|<android.content.IClipboard$Stub: android.os.IBinder asBinder()>
SOURCE|<com.android.internal.telephony.gsm.GSMPhone: boolean getMute()>
SOURCE|<com.android.launcher2.AppsCustomizePagedView: android.os.Bundle getDefaultOptionsForWidget(com.android.launcher2.Launcher,com.android.launcher2.PendingAddWidgetInfo)>
SOURCE|<com.android.internal.telephony.IWapPushManager$Stub: android.os.IBinder asBinder()>
SOURCE|<com.android.gallery3d.filtershow.imageshow.ImageShow: android.widget.ArrayAdapter getImageStateAdapter()>
SOURCE|<com.android.browser.BrowserSettings: int getUserAgent()>
SOURCE|<android.net.INetworkStatsSession$Stub$Proxy: android.net.NetworkStats getSummaryForAllUid(android.net.NetworkTemplate,long,long,boolean)>
SOURCE|<com.android.gallery3d.data.SnailItem: int getWidth()>
SOURCE|<com.android.calendar.ExpandableTextView: java.lang.CharSequence getText()>
SOURCE|<com.android.mms.ui.UriImage: java.lang.String getPath()>
SOURCE|<com.android.internal.telephony.PhoneSubInfoProxy: java.lang.String getMsisdn()>
SOURCE|<android.text.format.Time: java.lang.String getCurrentTimezone()>
SOURCE|<java.lang.reflect.AccessibleObject: java.lang.String getClassSignatureAttribute(java.lang.Class)>
SOURCE|<com.android.internal.policy.impl.keyguard.PagedView: float getScrollProgress(int,android.view.View,int)>
SOURCE|<com.android.server.pm.PackageManagerService: android.content.pm.ParceledListSlice getInstalledApplications(int,java.lang.String,int)>
SOURCE|<com.android.gallery3d.data.SingleItemAlbum: int getMediaItemCount()>
SOURCE|<com.coremedia.iso.boxes.SampleTableBox: com.coremedia.iso.boxes.CompositionTimeToSample getCompositionTimeToSample()>
SOURCE|<com.android.internal.telephony.gsm.GSMPhone: com.android.internal.telephony.CallTracker getCallTracker()>
SOURCE|<android.media.videoeditor.MediaVideoItem: long getBoundaryBeginTime()>
SOURCE|<com.android.inputmethod.latin.suggestions.MoreSuggestions$MoreSuggestionsParam: int getY(int)>
SOURCE|<android.telephony.gsm.SmsMessage: java.lang.String getPseudoSubject()>
SOURCE|<com.android.bluetooth.pbap.BluetoothPbapService: java.lang.String getRemoteDeviceName()>
SOURCE|<com.android.gallery3d.data.SingleItemAlbum: java.lang.String getName()>
SOURCE|<com.android.server.accessibility.ScreenMagnifier$Viewport$ViewportWindow: android.graphics.Rect getBounds()>
SOURCE|<android.location.LocationRequest: float getSmallestDisplacement()>
SOURCE|<android.service.wallpaper.IWallpaperConnection$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
SOURCE|<com.android.launcher2.LauncherAppWidgetHost: android.appwidget.AppWidgetHostView onCreateView(android.content.Context,int,android.appwidget.AppWidgetProviderInfo)>
SOURCE|<android.view.IWindowSession$Stub$Proxy: void getDisplayFrame(android.view.IWindow,android.graphics.Rect)>
SOURCE|<org.apache.http.client.utils.URIUtils: java.net.URI resolve(java.net.URI,java.net.URI)>
SOURCE|<com.android.internal.telephony.DataConnectionTracker: int disableApnType(java.lang.String)>
SOURCE|<android.view.LayoutInflater: android.view.LayoutInflater$Factory2 getFactory2()>
SOURCE|<gov.nist.javax.sip.header.extensions.Replaces: gov.nist.javax.sip.header.CallIdentifier getCallIdentifer()>
SOURCE|<android.database.AbstractWindowedCursor: byte[] getBlob(int)>
SOURCE|<com.android.inputmethod.keyboard.KeyboardView: float getLabelWidth(java.lang.String,android.graphics.Paint)>
SOURCE|<com.google.common.collect.MapMakerInternalMap$SoftEntry: com.google.common.collect.MapMakerInternalMap$ReferenceEntry getPreviousEvictable()>
SOURCE|<com.android.ex.chips.RecipientAlternatesAdapter: com.android.ex.chips.RecipientEntry getRecipientEntry(int)>
SOURCE|<android.widget.AbsListView: int findClosestMotionRow(int)>
SOURCE|<android.filterfw.core.SyncRunner: android.filterfw.core.FilterGraph getGraph()>
SOURCE|<android.widget.GridView: android.widget.ListAdapter getAdapter()>
SOURCE|<android.media.videoeditor.MediaImageItem: int getWidth()>
SOURCE|<dalvik.system.profiler.SamplingProfiler: dalvik.system.profiler.HprofData getHprofData()>
SOURCE|<com.google.common.collect.ComputingConcurrentHashMap$ComputingMapAdapter: java.lang.Object get(java.lang.Object)>
SOURCE|<android.os.INetworkManagementService$Stub$Proxy: android.net.NetworkStats getNetworkStatsDetail()>
SOURCE|<org.apache.http.message.BasicStatusLine: int getStatusCode()>
SOURCE|<com.android.email.service.EmailServiceUtils$NullEmailService: int getApiLevel()>
SOURCE|<com.android.internal.telephony.gsm.GsmConnection: long getDisconnectTime()>
SOURCE|<android.provider.Browser: android.database.Cursor getAllVisitedUrls(android.content.ContentResolver)>
SOURCE|<android.view.View: java.util.ArrayList getTouchables()>
SOURCE|<java.time.format.DateTimeFormatterBuilder: java.lang.String getLocalizedDateTimePattern(java.time.format.FormatStyle,java.time.format.FormatStyle,java.time.chrono.Chronology,java.util.Locale)>
SOURCE|<com.android.contacts.group.GroupBrowseListAdapter: android.net.Uri getSelectedGroup()>
SOURCE|<gov.nist.javax.sip.message.MessageFactoryImpl: javax.sip.message.Response createResponse(int,javax.sip.header.CallIdHeader,javax.sip.header.CSeqHeader,javax.sip.header.FromHeader,javax.sip.header.ToHeader,java.util.List,javax.sip.header.MaxForwardsHeader)>
SOURCE|<com.android.browser.NavScreen$TabAdapter: com.android.browser.Tab getItem(int)>
SOURCE|<android.net.BaseNetworkStateTracker: android.os.Handler getTargetHandler()>
SOURCE|<java.lang.reflect.Proxy: java.lang.reflect.InvocationHandler getInvocationHandler(java.lang.Object)>
SOURCE|<android.text.Layout$SpannedEllipsizer: java.lang.Object[] getSpans(int,int,java.lang.Class)>
SOURCE|<android.view.InputDevice: int getGeneration()>
SOURCE|<android.webkit.WebViewClassic: java.lang.String[] getHttpAuthUsernamePassword(java.lang.String,java.lang.String)>
SOURCE|<com.android.server.display.LogicalDisplay: com.android.server.display.DisplayDevice getPrimaryDisplayDeviceLocked()>
SOURCE|<java.lang.reflect.Constructor: java.lang.annotation.Annotation getAnnotation(java.lang.Class)>
SOURCE|<android.database.CursorWrapper: double getDouble(int)>
SOURCE|<com.android.launcher2.AppsCustomizePagedView: int getPageForComponent(int)>
SOURCE|<libcore.net.url.JarURLConnectionImpl: java.lang.Object getContent()>
SOURCE|<com.android.calendar.agenda.AgendaListView: long getSelectedInstanceId()>
SOURCE|<com.android.email.activity.setup.AccountServerBaseFragment: android.os.Bundle getSettingsModeArgs()>
SOURCE|<com.android.server.DevicePolicyManagerService: int getPasswordMinimumUpperCase(android.content.ComponentName,int)>
SOURCE|<android.provider.Settings$Secure: long getLongForUser(android.content.ContentResolver,java.lang.String,int)>
SOURCE|<com.android.inputmethod.keyboard.KeyboardSwitcher: com.android.inputmethod.keyboard.MainKeyboardView getMainKeyboardView()>
SOURCE|<android.drm.DrmManagerClient: android.content.ContentValues getConstraints(android.net.Uri,int)>
SOURCE|<com.android.org.bouncycastle.asn1.DERExternal: int getEncoding()>
SOURCE|<javax.sip.IOExceptionEvent: java.lang.String getTransport()>
SOURCE|<com.android.mms.widget.MmsWidgetService$MmsFactory: android.widget.RemoteViews getViewAt(int)>
SOURCE|<android.util.Singleton: java.lang.Object get()>
SOURCE|<android.view.IWindow$Stub: android.os.IBinder asBinder()>
SOURCE|<android.view.ScaleGestureDetector: float getFocusY()>
SOURCE|<com.android.internal.telephony.sip.SipPhone: boolean getCallForwardingIndicator()>
SOURCE|<libcore.io.ForwardingOs: java.net.SocketAddress getsockname(java.io.FileDescriptor)>
SOURCE|<android.webkit.WebViewClassic: int getViewHeight()>
SOURCE|<com.android.mms.model.LayoutModel: int getLayoutWidth()>
SOURCE|<org.apache.harmony.security.asn1.ASN1BitString$ASN1NamedBitList: java.lang.Object getDecodedObject(org.apache.harmony.security.asn1.BerInputStream)>
SOURCE|<com.android.server.accessibility.TouchExplorer$ReceivedPointerTracker: int getReceivedPointerDownCount()>
SOURCE|<com.googlecode.mp4parser.authoring.TrackMetaData: java.lang.String getLanguage()>
SOURCE|<org.apache.http.message.BufferedHeader: org.apache.http.HeaderElement[] getElements()>
SOURCE|<android.filterpacks.imageproc.SaturateFilter: android.filterfw.core.FrameFormat getOutputFormat(java.lang.String,android.filterfw.core.FrameFormat)>
SOURCE|<java.util.logging.Handler: java.util.logging.ErrorManager getErrorManager()>
SOURCE|<android.os.Parcel: java.lang.Object[] readTypedArray(android.os.Parcelable$Creator)>
SOURCE|<java.nio.DoubleToByteBufferAdapter: double get(int)>
SOURCE|<android.widget.ActivityChooserModel: android.content.Intent getIntent()>
SOURCE|<com.google.android.picasasync.PicasaFacade: android.net.Uri getAlbumUri(long)>
SOURCE|<android.webkit.AccessibilityInjectorFallback$AccessibilityWebContentKeyBinding: int getKeyCode()>
SOURCE|<com.android.mms.util.Recycler: com.android.mms.util.Recycler$MmsRecycler getMmsRecycler()>
SOURCE|<android.telephony.gsm.SmsMessage: android.telephony.gsm.SmsMessage$SubmitPdu getSubmitPdu(java.lang.String,java.lang.String,java.lang.String,boolean)>
SOURCE|<android.view.HardwareRenderer$Gl20Renderer: int[] getConfig(boolean)>
SOURCE|<android.app.Activity: android.app.Application getApplication()>
SOURCE|<gov.nist.core.Host: java.lang.String getIpAddress()>
SOURCE|<org.apache.http.message.BasicHeaderValueParser: org.apache.http.HeaderElement[] parseElements(java.lang.String,org.apache.http.message.HeaderValueParser)>
SOURCE|<com.android.internal.view.menu.ActionMenuItem: java.lang.CharSequence getTitleCondensed()>
SOURCE|<com.android.server.pm.PackageManagerService: com.android.server.pm.PackageManagerService$InstallArgs access$3000(com.android.server.pm.PackageManagerService,android.net.Uri,int,java.lang.String,java.lang.String)>
SOURCE|<com.android.gallery3d.exif.IfdData: int getOffsetToNextIfd()>
SOURCE|<java.nio.charset.Charset: java.nio.CharBuffer decode(java.nio.ByteBuffer)>
SOURCE|<com.android.nfc.snep.SnepClient: com.android.nfc.snep.SnepMessage get(android.nfc.NdefMessage)>
SOURCE|<com.android.browser.widget.BookmarkThumbnailWidgetService$BookmarkFactory: android.widget.RemoteViews getLoadingView()>
SOURCE|<com.android.server.net.NetworkStatsService$DefaultNetworkStatsSettings: long getTimeCacheMaxAge()>
SOURCE|<com.android.gallery3d.data.TimeClustering: int getNumberOfClusters()>
SOURCE|<gov.nist.javax.sip.header.CallIdentifier: java.lang.String getHost()>
SOURCE|<android.os.CommonTimeConfig: int getMasterAnnounceInterval()>
SOURCE|<com.android.internal.telephony.IntRangeManager: boolean isEmpty()>
SOURCE|<android.gesture.GestureLibrary: java.util.ArrayList getGestures(java.lang.String)>
SOURCE|<com.googlecode.mp4parser.authoring.Mp4TrackImpl: long[] getSyncSamples()>
SOURCE|<org.apache.harmony.security.asn1.ASN1Any: org.apache.harmony.security.asn1.ASN1Any getInstance()>
SOURCE|<com.android.mms.model.RegionModel: java.lang.String getBackgroundColor()>
SOURCE|<android.app.ActivityManagerProxy: android.app.ActivityManager$TaskThumbnails getTaskThumbnails(int)>
SOURCE|<java.util.concurrent.ForkJoinPool: boolean getAsyncMode()>
SOURCE|<com.android.systemui.statusbar.phone.PanelView$FlingTracker: float getYVelocity()>
SOURCE|<com.android.providers.contacts.MemoryCursor: java.lang.String[] getColumnNames()>
SOURCE|<org.xml.sax.helpers.ParserAdapter$AttributeListAdapter: java.lang.String getLocalName(int)>
SOURCE|<org.apache.http.impl.io.AbstractSessionInputBuffer: int read(byte[],int,int)>
SOURCE|<android.app.ActivityManagerProxy: android.app.IActivityManager$ContentProviderHolder getContentProviderExternal(java.lang.String,int,android.os.IBinder)>
SOURCE|<android.widget.SimpleAdapter: long getItemId(int)>
SOURCE|<gov.nist.javax.sip.header.Via: java.lang.String getHost()>
SOURCE|<java.net.ServerSocket: int getSoTimeout()>
SOURCE|<android.util.MonthDisplayHelper: int getWeekStartDay()>
SOURCE|<com.android.contacts.list.AccountFilterActivity$FilterListAdapter: int getCount()>
SOURCE|<gov.nist.javax.sip.stack.UDPMessageChannel: java.lang.String getPeerProtocol()>
SOURCE|<com.coremedia.iso.boxes.SampleToChunkBox: java.util.List getEntries()>
SOURCE|<android.provider.Contacts$People: android.net.Uri addToGroup(android.content.ContentResolver,long,java.lang.String)>
SOURCE|<android.gesture.GestureStore: java.util.ArrayList getGestures(java.lang.String)>
SOURCE|<android.nfc.tech.NfcF: int getTimeout()>
SOURCE|<org.apache.harmony.xnet.provider.jsse.OpenSSLSocketImpl: int getPeerPort()>
SOURCE|<android.graphics.drawable.DrawableContainer: int getChangingConfigurations()>
SOURCE|<com.android.internal.telephony.cdma.CdmaCall: com.android.internal.telephony.Phone getPhone()>
SOURCE|<com.android.emailcommon.provider.EmailContent$Attachment: com.android.emailcommon.provider.EmailContent$Attachment[] restoreAttachmentsWithMessageId(android.content.Context,long)>
SOURCE|<com.android.nfc.snep.SnepMessage: byte getVersion()>
SOURCE|<org.apache.http.impl.conn.AbstractPooledConnAdapter: java.lang.Object getState()>
SOURCE|<gov.nist.javax.sip.header.ParametersHeader: java.lang.String getParameter(java.lang.String)>
SOURCE|<android.speech.tts.TextToSpeechService$SynthesisSpeechItem: java.lang.String getText()>
SOURCE|<android.widget.TabHost: android.view.View getCurrentView()>
SOURCE|<java.security.KeyPairGenerator: java.security.KeyPairGenerator getInstance(java.lang.String,java.lang.String)>
SOURCE|<com.android.email.NotificationController: int getRingerMode()>
SOURCE|<com.android.camera.Thumbnail: android.graphics.Bitmap createVideoThumbnailBitmap(java.lang.String,int)>
SOURCE|<android.widget.SuggestionsAdapter: int getQueryRefinement()>
SOURCE|<com.android.videoeditor.service.MovieMediaItem: android.media.videoeditor.WaveformData getWaveformData()>
SOURCE|<com.android.org.bouncycastle.asn1.DERObjectIdentifier: com.android.org.bouncycastle.asn1.ASN1ObjectIdentifier getInstance(java.lang.Object)>
SOURCE|<com.android.calendar.agenda.AgendaWindowAdapter: com.android.calendar.agenda.AgendaAdapter$ViewHolder getSelectedViewHolder()>
SOURCE|<com.android.videoeditor.service.MovieMediaItem: java.lang.String getFilename()>
SOURCE|<gov.nist.javax.sip.address.UserInfo: int getUserType()>
SOURCE|<android.text.Layout$SpannedEllipsizer: int getSpanStart(java.lang.Object)>
SOURCE|<android.nfc.tech.NfcF: android.nfc.Tag getTag()>
SOURCE|<org.apache.http.impl.AbstractHttpClientConnection: org.apache.http.HttpResponse receiveResponseHeader()>
SOURCE|<com.android.internal.telephony.sip.SipPhone$SipCall: java.util.List getConnections()>
SOURCE|<com.android.phone.PhoneInterfaceManager: int getVoiceMessageCount()>
SOURCE|<android.telephony.ServiceState: java.lang.String getOperatorAlphaShort()>
SOURCE|<org.apache.harmony.xnet.provider.jsse.AbstractSessionContext: int getSessionTimeout()>
SOURCE|<com.google.common.collect.ImmutableSortedMap: com.google.common.collect.UnmodifiableIterator valueIterator()>
SOURCE|<android.view.accessibility.AccessibilityInteractionClient: android.view.accessibility.AccessibilityNodeInfo getRootInActiveWindow(int)>
SOURCE|<java.lang.Long: java.lang.Long decode(java.lang.String)>
SOURCE|<com.android.nfc.snep.SnepMessage: com.android.nfc.snep.SnepMessage getPutRequest(android.nfc.NdefMessage)>
SOURCE|<android.bluetooth.IBluetoothManagerCallback$Stub: android.os.IBinder asBinder()>
SOURCE|<gov.nist.javax.sip.stack.TCPMessageProcessor: gov.nist.javax.sip.stack.SIPTransactionStack getSIPStack()>
SOURCE|<java.util.concurrent.Phaser: java.util.concurrent.Phaser getParent()>
SOURCE|<gov.nist.javax.sip.stack.TLSMessageChannel: gov.nist.javax.sip.stack.SIPTransactionStack getSIPStack()>
SOURCE|<android.app.KeyguardManager: android.app.KeyguardManager$KeyguardLock newKeyguardLock(java.lang.String)>
SOURCE|<android.location.IGeocodeProvider$Stub: android.os.IBinder asBinder()>
SOURCE|<android.text.format.DateUtils: java.lang.CharSequence getRelativeDateTimeString(android.content.Context,long,long,long,int)>
SOURCE|<com.android.internal.telephony.PhoneProxy: int getCdmaEriIconMode()>
SOURCE|<android.view.inputmethod.BaseInputConnection: android.view.inputmethod.ExtractedText getExtractedText(android.view.inputmethod.ExtractedTextRequest,int)>
SOURCE|<com.android.launcher2.Workspace$ZInterpolator: float getInterpolation(float)>
SOURCE|<org.apache.james.mime4j.field.address.DomainList: java.lang.String get(int)>
SOURCE|<com.android.internal.telephony.cdma.CdmaConnection: long getConnectTime()>
SOURCE|<android.content.res.Resources: android.content.res.XmlResourceParser loadXmlResourceParser(int,java.lang.String)>
SOURCE|<com.android.internal.telephony.sip.SipPhoneBase: java.lang.String getSubscriberId()>
SOURCE|<android.media.videoeditor.EffectColor: int getType()>
SOURCE|<com.android.inputmethod.keyboard.internal.KeyboardRow: float getKeyX(android.content.res.TypedArray)>
SOURCE|<java.security.cert.CertificateFactorySpi: java.util.Iterator engineGetCertPathEncodings()>
SOURCE|<android.nfc.tech.Ndef: android.nfc.Tag getTag()>
SOURCE|<com.android.server.usb.UsbDeviceManager$UsbHandler: android.hardware.usb.UsbAccessory getCurrentAccessory()>
SOURCE|<com.android.mms.dom.smil.SmilDocumentImpl: org.w3c.dom.Element getDocumentElement()>
SOURCE|<com.android.internal.telephony.PhoneBase: boolean getMessageWaitingIndicator()>
SOURCE|<android.net.NetworkTemplate: int getMatchRule()>
SOURCE|<android.view.Display: int getWidth()>
SOURCE|<org.apache.http.impl.client.DefaultTargetAuthenticationHandler: java.util.Map getChallenges(org.apache.http.HttpResponse,org.apache.http.protocol.HttpContext)>
SOURCE|<com.android.providers.contacts.NameSplitter$Name: java.lang.String getPrefix()>
SOURCE|<gov.nist.javax.sip.header.ErrorInfo: java.lang.String getErrorMessage()>
SOURCE|<android.widget.TabHost: java.lang.String getCurrentTabTag()>
SOURCE|<android.app.admin.DeviceAdminInfo: java.lang.String getPackageName()>
SOURCE|<com.android.contacts.TypePrecedence: int getTypePrecedence(java.lang.String,int)>
SOURCE|<android.content.pm.IPackageManager$Stub$Proxy: android.content.pm.PackageInfo getPackageInfo(java.lang.String,int,int)>
SOURCE|<com.android.phone.PhoneGlobals: com.android.internal.telephony.Phone getPhone()>
SOURCE|<org.apache.harmony.security.pkcs7.ContentInfo: int[] getContentType()>
SOURCE|<android.nfc.tech.MifareClassic: int getSectorCount()>
SOURCE|<android.provider.ContactsContract$CommonDataKinds$Phone: java.lang.CharSequence getDisplayLabel(android.content.Context,int,java.lang.CharSequence,java.lang.CharSequence[])>
SOURCE|<com.android.commands.monkey.MonkeySourceNetworkVars$4: java.lang.String get()>
SOURCE|<com.android.server.am.ActivityManagerService: int getTaskForActivityLocked(android.os.IBinder,boolean)>
SOURCE|<java.net.InterfaceAddress: java.net.InetAddress getBroadcast()>
SOURCE|<android.app.ActivityOptions: int getStartY()>
SOURCE|<com.android.server.location.LocationProviderProxy: com.android.internal.location.ProviderProperties getProperties()>
SOURCE|<android.telephony.CellSignalStrengthLte: int getTimingAdvance()>
SOURCE|<org.apache.james.mime4j.field.address.Mailbox: org.apache.james.mime4j.field.address.DomainList getRoute()>
SOURCE|<com.android.contacts.group.GroupBrowseListAdapter: int getCount()>
SOURCE|<android.nfc.tech.MifareClassic: byte[] readBlock(int)>
SOURCE|<java.security.cert.CertStore: java.security.Provider getProvider()>
SOURCE|<org.apache.http.entity.BasicHttpEntity: long getContentLength()>
SOURCE|<android.widget.SearchView: int getInputType()>
SOURCE|<com.android.videoeditor.service.MovieAudioTrack: int getAppVolume()>
SOURCE|<android.telephony.SmsMessage: android.telephony.SmsMessage createFromPdu(byte[],java.lang.String)>
SOURCE|<gov.nist.javax.sip.message.SIPRequest: javax.sip.address.URI getRequestURI()>
SOURCE|<android.widget.AbsListView$RecycleBin: android.view.View getActiveView(int)>
SOURCE|<com.android.mms.data.Conversation$Cache: com.android.mms.data.Conversation get(com.android.mms.data.ContactList)>
SOURCE|<com.android.email.activity.Welcome: android.content.Intent createOpenMessageIntent(android.content.Context,long,long,long)>
SOURCE|<android.widget.CursorTreeAdapter: long getChildId(int,int)>
SOURCE|<android.content.pm.IPackageManager$Stub$Proxy: android.content.pm.ProviderInfo resolveContentProvider(java.lang.String,int,int)>
SOURCE|<com.google.common.collect.RegularImmutableList: java.lang.Object get(int)>
SOURCE|<android.media.audiofx.AudioEffect: int getId()>
SOURCE|<com.android.internal.telephony.gsm.GsmConnection: com.android.internal.telephony.Call$State getState()>
SOURCE|<android.widget.PopupWindow: int getWindowLayoutType()>
SOURCE|<android.widget.ViewAnimator: boolean getAnimateFirstView()>
SOURCE|<android.database.sqlite.SQLiteDatabase: java.lang.String getLabel()>
SOURCE|<java.util.concurrent.atomic.AtomicIntegerFieldUpdater: int getAndDecrement(java.lang.Object)>
SOURCE|<android.app.admin.IDevicePolicyManager$Stub$Proxy: java.util.List getActiveAdmins(int)>
SOURCE|<com.android.browser.Preloader: com.android.browser.Preloader getInstance()>
SOURCE|<android.media.ExifInterface: byte[] getThumbnail()>
SOURCE|<com.android.emailcommon.service.AccountServiceProxy: android.os.Bundle getConfigurationData(java.lang.String)>
SOURCE|<android.graphics.Paint: java.util.Locale getTextLocale()>
SOURCE|<com.android.deskclock.AlarmAlertFullScreen: int getLayoutResId()>
SOURCE|<com.android.internal.widget.LockPatternUtils: int getKeyguardStoredPasswordQuality()>
SOURCE|<java.net.Socket: java.net.InetAddress getLocalAddress()>
SOURCE|<com.adobe.xmp.impl.XMPSchemaRegistryImpl: java.lang.String getNamespaceURI(java.lang.String)>
SOURCE|<com.android.contacts.list.CustomContactListFilterActivity$DisplayAdapter: int getGroupCount()>
SOURCE|<com.android.internal.telephony.PhoneSubInfoProxy: java.lang.String getVoiceMailAlphaTag()>
SOURCE|<android.os.Environment$UserEnvironment: java.io.File getExternalStorageAndroidDataDir()>
SOURCE|<com.android.server.WifiService: android.os.Messenger getWifiStateMachineMessenger()>
SOURCE|<com.android.internal.policy.impl.keyguard.PagedView: float distanceInfluenceForSnapDuration(float)>
SOURCE|<android.renderscript.Program$BaseProgramBuilder: int getCurrentConstantIndex()>
SOURCE|<com.android.gallery3d.ui.SlotView$Layout: android.graphics.Rect getSlotRect(int,android.graphics.Rect)>
SOURCE|<java.security.cert.CertificateRevokedException: java.lang.String getMessage()>
SOURCE|<com.android.internal.telephony.PhoneSubInfo: java.lang.String getVoiceMailAlphaTag()>
SOURCE|<libcore.net.http.HttpsURLConnectionImpl: long getHeaderFieldDate(java.lang.String,long)>
SOURCE|<java.security.spec.ECParameterSpec: java.security.spec.ECPoint getGenerator()>
SOURCE|<com.android.gallery3d.app.PhotoPage: android.content.Intent access$2700(com.android.gallery3d.data.MediaObject)>
SOURCE|<android.filterpacks.imageproc.VignetteFilter: android.filterfw.core.FrameFormat getOutputFormat(java.lang.String,android.filterfw.core.FrameFormat)>
SOURCE|<com.google.common.collect.Lists$StringAsImmutableList$1: java.lang.Character get(int)>
SOURCE|<android.app.ContextImpl: java.io.File getFileStreamPath(java.lang.String)>
SOURCE|<javax.sip.DialogTerminatedEvent: javax.sip.Dialog getDialog()>
SOURCE|<org.apache.harmony.security.x509.CRLNumber: java.math.BigInteger getNumber()>
SOURCE|<com.android.contacts.calllog.ClearCallLogDialog: android.app.Dialog onCreateDialog(android.os.Bundle)>
SOURCE|<com.android.browser.BrowserHistoryPage$HistoryChildWrapper: long getItemId(int)>
SOURCE|<java.lang.reflect.Method: java.lang.Class getReturnType()>
SOURCE|<android.view.inputmethod.InputBinding: int getUid()>
SOURCE|<android.view.inputmethod.BaseInputConnection: int getCursorCapsMode(int)>
SOURCE|<java.nio.channels.spi.AbstractSelector: java.util.Set cancelledKeys()>
SOURCE|<com.coremedia.iso.boxes.mdat.MediaDataBox: java.lang.String getType()>
SOURCE|<org.apache.http.auth.AuthScope: java.lang.String getHost()>
SOURCE|<android.widget.SimpleAdapter: android.widget.Filter getFilter()>
SOURCE|<com.android.browser.BrowserSettings: int getAdjustedTextZoom(int)>
SOURCE|<javax.xml.datatype.Duration: int getMinutes()>
SOURCE|<com.android.contacts.group.GroupEditorFragment$MemberListAdapter: int getCount()>
SOURCE|<java.net.AddressCache: java.lang.Object get(java.lang.String)>
SOURCE|<android.app.admin.DevicePolicyManager: int getKeyguardDisabledFeatures(android.content.ComponentName)>
SOURCE|<com.android.gallery3d.app.OrientationManager: int getDisplayRotation()>
SOURCE|<android.net.SSLCertificateSocketFactory: javax.net.SocketFactory getDefault(int)>
SOURCE|<com.android.email.activity.ThreePaneLayout: com.android.email.activity.MessageCommandButtonView getMessageCommandButtons()>
SOURCE|<gov.nist.javax.sip.header.SIPHeader: java.lang.StringBuffer encodeBody(java.lang.StringBuffer)>
SOURCE|<org.apache.harmony.xnet.provider.jsse.SSLParametersImpl: java.security.SecureRandom getSecureRandom()>
SOURCE|<java.nio.IntBuffer: java.nio.IntBuffer get(int[],int,int)>
SOURCE|<com.android.gallery3d.picasasource.PicasaAlbum: int getCacheStatus()>
SOURCE|<javax.security.auth.PrivateCredentialPermission: java.util.Set getPrincipalSet()>
SOURCE|<gov.nist.javax.sip.header.To: java.lang.String getUserAtHostPort()>
SOURCE|<com.google.common.collect.MapMakerInternalMap$SoftValueReference: com.google.common.collect.MapMakerInternalMap$ReferenceEntry getEntry()>
SOURCE|<android.content.Loader: int getId()>
SOURCE|<android.test.ServiceTestCase: android.app.Service getService()>
SOURCE|<com.android.commands.monkey.MonkeyMotionEvent: int getAction()>
SOURCE|<java.time.chrono.ThaiBuddhistEra: int getValue()>
SOURCE|<com.android.deskclock.AlarmClock$AlarmItemAdapter: int getViewTypeCount()>
SOURCE|<java.security.spec.ECGenParameterSpec: java.lang.String getName()>
SOURCE|<android.net.wifi.WifiInfo: java.lang.String getSSID()>
SOURCE|<com.googlecode.mp4parser.FullContainerBox: java.util.List getBoxes(java.lang.Class,boolean)>
SOURCE|<com.android.nfc.dhimpl.NativeLlcpSocket: int getRemoteMiu()>
SOURCE|<gov.nist.javax.sip.stack.IOHandler: java.net.SocketAddress obtainLocalAddress(java.net.InetAddress,int,java.net.InetAddress,int)>
SOURCE|<android.widget.CalendarView: int getWeekDayTextAppearance()>
SOURCE|<android.graphics.drawable.DrawableContainer$DrawableContainerState: int getExitFadeDuration()>
SOURCE|<com.android.camera.IconListPreference: int[] getLargeIconIds()>
SOURCE|<android.net.UrlQuerySanitizer: java.util.Set getParameterSet()>
SOURCE|<android.widget.ExpandableListView: android.widget.ExpandableListAdapter getExpandableListAdapter()>
SOURCE|<android.renderscript.Matrix3f: float[] getArray()>
SOURCE|<android.content.IntentFilter: java.lang.String getCategory(int)>
SOURCE|<android.provider.CalendarContract$EventsEntity$EntityIteratorImpl: android.content.Entity getEntityAndIncrementCursor(android.database.Cursor)>
SOURCE|<com.android.providers.contacts.ContactsProvider2: com.android.providers.contacts.PhotoStore getProfilePhotoStore()>
SOURCE|<android.preference.PreferenceGroup: int getPreferenceCount()>
SOURCE|<org.apache.http.params.HttpProtocolParams: org.apache.http.ProtocolVersion getVersion(org.apache.http.params.HttpParams)>
SOURCE|<com.android.gallery3d.data.DataManager: com.android.gallery3d.data.MediaSet getMediaSet(java.lang.String)>
SOURCE|<javax.security.auth.PrivateCredentialPermission: java.lang.String getCredentialClass()>
SOURCE|<com.android.videoeditor.service.MovieMediaItem: long getAppTimelineDuration()>
SOURCE|<org.apache.harmony.security.x509.Extension: org.apache.harmony.security.x509.ExtensionValue getDecodedExtensionValue()>
SOURCE|<com.android.server.accessibility.ScreenMagnifier$Viewport: android.graphics.Rect getBounds()>
SOURCE|<com.googlecode.mp4parser.authoring.tracks.CroppedTrack: long[] getSyncSamples()>
SOURCE|<android.app.ApplicationPackageManager: java.lang.CharSequence getText(java.lang.String,int,android.content.pm.ApplicationInfo)>
SOURCE|<com.android.videoeditor.service.MovieMediaItem: long getDuration()>
SOURCE|<javax.security.cert.X509Certificate$1: java.security.Principal getSubjectDN()>
SOURCE|<com.android.server.am.AppErrorResult: int get()>
SOURCE|<gov.nist.javax.sip.stack.MessageProcessor: java.lang.String getSentBy()>
SOURCE|<libcore.net.http.ResponseHeaders: java.lang.String getContentEncoding()>
SOURCE|<com.android.bluetooth.opp.BluetoothOppTransfer: int getBatchId()>
SOURCE|<android.content.ContentValues: java.lang.Short getAsShort(java.lang.String)>
SOURCE|<com.android.server.usb.UsbDeviceManager: android.hardware.usb.UsbAccessory getCurrentAccessory()>
SOURCE|<java.util.Calendar: int getFirstDayOfWeek()>
SOURCE|<android.net.http.CertificateChainValidator: android.net.http.SslError doHandshakeAndValidateServerCertificates(android.net.http.HttpsConnection,javax.net.ssl.SSLSocket,java.lang.String)>
SOURCE|<android.view.View: void getFocusedRect(android.graphics.Rect)>
SOURCE|<gov.nist.javax.sip.stack.SIPTransactionStack: gov.nist.javax.sip.stack.SIPServerTransaction findPendingTransaction(gov.nist.javax.sip.message.SIPRequest)>
SOURCE|<org.apache.http.impl.client.AbstractHttpClient: org.apache.http.protocol.HttpRequestExecutor createRequestExecutor()>
SOURCE|<android.widget.CalendarView: long getDate()>
SOURCE|<java.security.cert.CertPathValidator: java.security.cert.CertPathValidator getInstance(java.lang.String)>
SOURCE|<com.android.gallery3d.picasasource.BasePicasaAlbum: long reload()>
SOURCE|<com.android.browser.NavTabScroller: com.android.browser.NavTabView getTabView(int)>
SOURCE|<com.android.email.Preferences: int getTextZoom()>
SOURCE|<com.android.inputmethod.latin.LatinImeLogger$LogEntry: java.lang.String[] getLogStrings()>
SOURCE|<android.filterfw.core.VertexFrame: android.graphics.Bitmap getBitmap()>
SOURCE|<java.util.IllegalFormatPrecisionException: java.lang.String getMessage()>
SOURCE|<java.net.URL: java.lang.String getFile()>
SOURCE|<android.view.animation.DecelerateInterpolator: float getInterpolation(float)>
SOURCE|<com.android.nfc.handover.BluetoothOppHandover: java.lang.String getMimeTypeForUri(android.content.Context,android.net.Uri)>
SOURCE|<com.android.deskclock.stopwatch.StopwatchFragment$LapsListAdapter: java.lang.Object getItem(int)>
SOURCE|<java.util.concurrent.locks.AbstractQueuedLongSynchronizer: int getQueueLength()>
SOURCE|<android.view.inputmethod.InputMethodSubtype: int getIconResId()>
SOURCE|<com.android.internal.telephony.PhoneBase: java.lang.String getCdmaMin()>
SOURCE|<java.util.jar.JarEntry: java.security.cert.Certificate[] getCertificates()>
SOURCE|<com.android.contacts.model.RawContactDeltaList: com.android.contacts.model.RawContactDeltaList fromQuery(android.net.Uri,android.content.ContentResolver,java.lang.String,java.lang.String[],java.lang.String)>
SOURCE|<com.android.systemui.screenshot.GlobalScreenshot$5: float getInterpolation(float)>
SOURCE|<android.view.textservice.SentenceSuggestionsInfo: int getOffsetAt(int)>
SOURCE|<com.android.internal.telephony.WapPushOverSms$WapPushConnection: com.android.internal.telephony.IWapPushManager getWapPushManager()>
SOURCE|<android.telephony.gsm.SmsMessage: long getTimestampMillis()>
SOURCE|<android.os.PatternMatcher: int getType()>
SOURCE|<javax.obex.ClientSession: long getConnectionID()>
SOURCE|<com.android.org.bouncycastle.util.io.pem.PemObject: java.util.List getHeaders()>
SOURCE|<android.media.videoeditor.AudioTrack: java.lang.String getFilename()>
SOURCE|<android.view.textservice.SpellCheckerSubtype: java.lang.String getLocale()>
SOURCE|<org.apache.http.conn.ssl.AbstractVerifier: java.lang.String[] getCNs(java.security.cert.X509Certificate)>
SOURCE|<gov.nist.javax.sip.message.MessageFactoryImpl: javax.sip.message.Response createResponse(int,javax.sip.message.Request)>
SOURCE|<android.webkit.WebSettingsClassic: java.lang.String getUserAgentString()>
SOURCE|<java.lang.reflect.Constructor: java.lang.'annotation'.Annotation[] getDeclaredAnnotations()>
SOURCE|<android.app.AppGlobals: android.content.pm.IPackageManager getPackageManager()>
SOURCE|<android.webkit.WebSettings: java.lang.String getFantasyFontFamily()>
SOURCE|<android.net.ThrottleManager: long getCliffThreshold(java.lang.String,int)>
SOURCE|<com.android.inputmethod.latin.InputPointers: int[] getPointerIds()>
SOURCE|<javax.crypto.spec.DHParameterSpec: java.math.BigInteger getG()>
SOURCE|<java.security.cert.X509CertSelector: java.lang.String getIssuerAsString()>
SOURCE|<com.android.phone.PhoneInterfaceManager: int getDataActivity()>
SOURCE|<android.webkit.WebViewClassic: int getProgress()>
SOURCE|<android.media.RingtoneManager: boolean getStopPreviousRingtone()>
SOURCE|<com.android.internal.telephony.IPhoneStateListener$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
SOURCE|<android.net.NetworkInfo: java.lang.String getReason()>
SOURCE|<android.content.res.XmlBlock$Parser: java.lang.String getPrefix()>
SOURCE|<android.test.mock.MockCursor: int getInt(int)>
SOURCE|<android.app.admin.IDevicePolicyManager$Stub$Proxy: int getKeyguardDisabledFeatures(android.content.ComponentName,int)>
SOURCE|<org.apache.harmony.xnet.provider.jsse.OpenSSLDSAParams: java.math.BigInteger getP()>
SOURCE|<com.android.internal.telephony.sip.SipPhoneBase: com.android.internal.telephony.PhoneConstants$DataState getDataConnectionState()>
SOURCE|<org.xml.sax.helpers.ParserAdapter$AttributeListAdapter: java.lang.String getType(int)>
SOURCE|<org.apache.http.impl.SocketHttpServerConnection: java.net.Socket getSocket()>
SOURCE|<android.widget.RemoteViewsService: java.lang.Object access$000()>
SOURCE|<android.graphics.YuvImage: int getWidth()>
SOURCE|<com.android.server.location.ComprehensiveCountryDetector: android.location.Country getLastKnownLocationBasedCountry()>
SOURCE|<com.android.contacts.list.ContactEntryListFragment: int getDirectorySearchMode()>
SOURCE|<android.provider.MediaStore$Images$Media: android.net.Uri getContentUri(java.lang.String)>
SOURCE|<android.content.res.Resources: android.content.res.XmlResourceParser getAnimation(int)>
SOURCE|<com.android.ex.chips.Queries$Query: java.lang.String[] getProjection()>
SOURCE|<gov.nist.javax.sip.header.ims.PChargingFunctionAddresses: java.util.ListIterator getEventChargingFunctionAddresses()>
SOURCE|<android.view.View: int getTextAlignment()>
SOURCE|<android.view.MotionEvent: float getHistoricalOrientation(int,int)>
SOURCE|<com.android.email.provider.EmailProvider: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>
SOURCE|<android.widget.Toast: int getXOffset()>
SOURCE|<org.apache.http.message.BasicLineParser: org.apache.http.RequestLine parseRequestLine(org.apache.http.util.CharArrayBuffer,org.apache.http.message.ParserCursor)>
SOURCE|<com.android.launcher2.ButtonDropTarget: android.graphics.Rect getIconRect(int,int,int,int)>
SOURCE|<java.security.Signature: java.lang.Object clone()>
SOURCE|<android.widget.PopupWindow: int getMaxAvailableHeight(android.view.View)>
SOURCE|<com.android.internal.telephony.gsm.SIMRecords: int getDisplayRule(java.lang.String)>
SOURCE|<com.android.gallery3d.ui.FlingScroller: int getCurrVelocityY()>
SOURCE|<java.io.ObjectStreamClass: java.util.List getHierarchy()>
SOURCE|<com.android.mms.ui.SlideshowEditActivity$SlideListAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)>
SOURCE|<android.app.ApplicationPackageManager: android.graphics.drawable.Drawable getApplicationIcon(java.lang.String)>
SOURCE|<gov.nist.javax.sip.message.SIPMessage: java.util.ListIterator getHeaders(java.lang.String)>
SOURCE|<com.android.mms.data.Conversation: android.net.Uri getUri()>
SOURCE|<android.net.LinkCapabilities: java.lang.String get(int)>
SOURCE|<android.content.Intent: java.lang.String getPackage()>
SOURCE|<com.android.internal.app.IBatteryStats$Stub$Proxy: long getAwakeTimePlugged()>
SOURCE|<java.security.cert.TrustAnchor: java.security.cert.X509Certificate getTrustedCert()>
SOURCE|<org.apache.http.impl.client.AbstractHttpClient: org.apache.http.client.RedirectStrategy getRedirectStrategy()>
SOURCE|<android.util.EventLogTags: android.util.EventLogTags$Description get(java.lang.String)>
SOURCE|<com.coremedia.iso.boxes.SyncSampleBox: long[] getSampleNumber()>
SOURCE|<java.time.format.DateTimeFormatter: java.lang.Object parse(java.lang.CharSequence,java.time.temporal.TemporalQuery)>
SOURCE|<org.apache.harmony.xnet.provider.jsse.OpenSSLServerSocketImpl: boolean getWantClientAuth()>
SOURCE|<android.text.StaticLayout: int getLineTop(int)>
SOURCE|<com.android.commands.uiautomator.RunTestCommand: com.android.uiautomator.testrunner.UiAutomatorTestRunner getRunner()>
SOURCE|<com.google.common.collect.ImmutableList: java.util.List subList(int,int)>
SOURCE|<java.lang.System$SystemEnvironment: java.lang.Object get(java.lang.Object)>
SOURCE|<com.android.camera.drawable.TextDrawable: int getOpacity()>
SOURCE|<java.util.logging.Level: java.lang.String getName()>
SOURCE|<java.util.Currency: java.lang.String getDisplayName(java.util.Locale)>
SOURCE|<android.hardware.Sensor: java.lang.String getVendor()>
SOURCE|<com.coremedia.iso.boxes.fragment.TrackFragmentBox: com.coremedia.iso.boxes.fragment.TrackFragmentHeaderBox getTrackFragmentHeaderBox()>
SOURCE|<android.app.backup.IRestoreObserver$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
SOURCE|<com.android.mms.dom.ElementImpl: org.w3c.dom.Attr getAttributeNodeNS(java.lang.String,java.lang.String)>
SOURCE|<com.googlecode.mp4parser.authoring.builder.DefaultMp4Builder: long getDuration(com.googlecode.mp4parser.authoring.Track)>
SOURCE|<android.media.RemoteControlClient: int getIntPlaybackInformation(int)>
SOURCE|<com.android.gallery3d.data.FilterDeleteSet: java.util.ArrayList getMediaItem(int,int)>
SOURCE|<com.android.deskclock.widget.multiwaveview.Ease$Sine$2: float getInterpolation(float)>
SOURCE|<com.android.inputmethod.latin.DictionaryFactory: com.android.inputmethod.latin.DictionaryCollection createMainDictionaryFromManager(android.content.Context,java.util.Locale)>
SOURCE|<android.text.method.DialerKeyListener: char[] getAcceptedChars()>
SOURCE|<libcore.net.http.HttpEngine: libcore.net.http.ResponseHeaders getResponseHeaders()>
SOURCE|<com.android.server.TwilightService$TwilightState: long getTodaySunset()>
SOURCE|<java.text.DateFormatSymbols: java.util.Locale[] getAvailableLocales()>
SOURCE|<android.graphics.drawable.NinePatchDrawable$NinePatchState: int getChangingConfigurations()>
SOURCE|<android.view.View: android.view.View$OnFocusChangeListener getOnFocusChangeListener()>
SOURCE|<android.graphics.Bitmap: int getDensity()>
SOURCE|<android.view.WindowOrientationListener$SensorEventListenerImpl: int getProposedRotation()>
SOURCE|<java.util.regex.PatternSyntaxException: java.lang.String getPattern()>
SOURCE|<gov.nist.javax.sip.header.Via: java.lang.String getMAddr()>
SOURCE|<com.android.internal.os.ProcessStats: float getTotalCpuPercent()>
SOURCE|<android.telephony.CellInfoGsm: android.telephony.CellIdentityGsm getCellIdentity()>
SOURCE|<com.android.internal.os.BatteryStatsImpl$Uid$Wakelock: android.os.BatteryStats$Timer getWakeTime(int)>
SOURCE|<android.graphics.Paint: int getTextWidths(char[],int,int,float[])>
SOURCE|<com.android.internal.telephony.Call: com.android.internal.telephony.Connection getLatestConnection()>
SOURCE|<com.android.email.mail.store.Pop3Store$Pop3Folder: java.lang.String getName()>
SOURCE|<android.view.KeyCharacterMap: char getNumber(int)>
SOURCE|<android.telephony.TelephonyManager: int getNetworkClass(int)>
SOURCE|<com.android.gallery3d.data.ClusterAlbum: java.util.ArrayList getMediaItem(int,int)>
SOURCE|<java.time.chrono.ThaiBuddhistChronology: java.lang.String getCalendarType()>
SOURCE|<android.hardware.Camera$Parameters: android.hardware.Camera$Size getPictureSize()>
SOURCE|<android.content.res.AssetManager: java.lang.CharSequence getResourceBagText(int,int)>
SOURCE|<com.android.server.am.ActivityManagerService: java.lang.String getCallingPackage(android.os.IBinder)>
SOURCE|<gov.nist.core.Host: java.lang.String getHostname()>
SOURCE|<android.filterpacks.imageproc.ToRGBAFilter: android.filterfw.core.FrameFormat getOutputFormat(java.lang.String,android.filterfw.core.FrameFormat)>
SOURCE|<android.media.Metadata: int getInt(int)>
SOURCE|<com.android.server.am.ActivityManagerService: android.os.Debug$MemoryInfo[] getProcessMemoryInfo(int[])>
SOURCE|<com.android.org.bouncycastle.asn1.ASN1Sequence: com.android.org.bouncycastle.asn1.ASN1Encodable getObjectAt(int)>
SOURCE|<com.android.bluetooth.btservice.AdapterService: java.lang.String getRemoteAlias(android.bluetooth.BluetoothDevice)>
SOURCE|<com.android.browser.ErrorConsoleView$ErrorConsoleListView$ErrorConsoleMessageList: int getCount()>
SOURCE|<com.android.internal.telephony.ApnContext: java.util.ArrayList getWaitingApns()>
SOURCE|<com.android.contacts.editor.RawContactEditorView: com.android.contacts.editor.TextFieldsEditorView getPhoneticNameEditor()>
SOURCE|<org.apache.http.conn.scheme.SchemeRegistry: java.util.List getSchemeNames()>
SOURCE|<android.view.IWindowManager$Stub$Proxy: float getWindowCompatibilityScale(android.os.IBinder)>
SOURCE|<java.net.Socket: int getReceiveBufferSize()>
SOURCE|<android.test.mock.MockContentResolver: int getIsSyncable(android.accounts.Account,java.lang.String)>
SOURCE|<java.security.AlgorithmParameters: java.security.Provider getProvider()>
SOURCE|<android.provider.ContactsContract$ProfileSyncState: android.util.Pair getWithUri(android.content.ContentProviderClient,android.accounts.Account)>
SOURCE|<com.android.exchange.adapter.GalParser: com.android.exchange.provider.GalResult getGalResult()>
SOURCE|<com.coremedia.iso.boxes.TrackHeaderBox: float getVolume()>
SOURCE|<com.android.systemui.statusbar.phone.NavigationBarView: android.view.View getMenuButton()>
SOURCE|<gov.nist.javax.sip.ListeningPointImpl: java.lang.String getTransport()>
SOURCE|<com.coremedia.iso.PropertyBoxParserImpl$FourCcToBox: java.lang.String getClazzName()>
SOURCE|<android.widget.Spinner$DropDownAdapter: int getItemViewType(int)>
SOURCE|<dalvik.system.BlockGuard$BlockGuardPolicyException: java.lang.String getMessage()>
SOURCE|<com.google.common.base.Joiner$3: java.lang.Object get(int)>
SOURCE|<java.time.Duration: int parseFraction(java.lang.CharSequence,java.lang.String,int)>
SOURCE|<java.time.ZonedDateTime: java.time.ZoneOffset getOffset()>
SOURCE|<com.android.contacts.list.AccountFilterActivity$FilterListAdapter: long getItemId(int)>
SOURCE|<com.google.android.picasastore.SystemProperties: long getLong(java.lang.String,long)>
SOURCE|<org.apache.harmony.xnet.provider.jsse.DefaultSSLContextImpl: javax.net.ssl.TrustManager[] getTrustManagers()>
SOURCE|<com.android.server.am.ProviderMap: com.android.server.am.ContentProviderRecord getProviderByClass(android.content.ComponentName)>
SOURCE|<java.util.concurrent.RecursiveTask: java.lang.Object getRawResult()>
SOURCE|<org.kxml2.io.KXmlParser: java.lang.String getText()>
SOURCE|<com.android.org.bouncycastle.asn1.ASN1Sequence: com.android.org.bouncycastle.asn1.ASN1SequenceParser parser()>
SOURCE|<android.view.View: void getHitRect(android.graphics.Rect)>
SOURCE|<android.webkit.WebSettingsClassic: boolean getUseDoubleTree()>
SOURCE|<com.android.mms.model.TextModel: java.lang.String getText()>
SOURCE|<com.android.launcher2.PagedView: int getAssociatedUpperPageBound(int)>
SOURCE|<com.android.inputmethod.keyboard.Key: int getMoreKeyLabelFlags()>
SOURCE|<android.renderscript.Script$FieldBase: android.renderscript.Element getElement()>
SOURCE|<android.app.IWallpaperManager$Stub$Proxy: int getWidthHint()>
SOURCE|<android.widget.TimePicker: java.lang.Integer getCurrentMinute()>
SOURCE|<com.android.gallery3d.data.FilterTypeSet: com.android.gallery3d.data.MediaSet getSubMediaSet(int)>
SOURCE|<com.android.gallery3d.app.Config$AlbumPage: com.android.gallery3d.app.Config$AlbumPage get(android.content.Context)>
SOURCE|<com.google.android.apps.lightcycle.opengl.DeviceOrientedSprite$1: android.graphics.PointF getPosition(com.google.android.apps.lightcycle.sensor.DeviceOrientationDetector$DeviceOrientation)>
SOURCE|<android.view.GLES20Layer: int getLayer()>
SOURCE|<android.media.videoeditor.VideoEditorProfile: int getExportProfile(int)>
SOURCE|<android.view.accessibility.AccessibilityEvent: java.lang.CharSequence getPackageName()>
SOURCE|<org.json.JSONArray: long getLong(int)>
SOURCE|<com.coremedia.iso.boxes.SampleSizeBox: long getSampleSize()>
SOURCE|<java.security.spec.ECPoint: java.math.BigInteger getAffineY()>
SOURCE|<com.android.internal.telephony.gsm.GsmDataConnectionTracker: java.lang.String getActionIntentDataStallAlarm()>
SOURCE|<android.text.Layout: android.text.Layout$Alignment getParagraphAlignment(int)>
SOURCE|<android.os.IVibratorService$Stub: android.os.IBinder asBinder()>
SOURCE|<android.widget.TextView: boolean getLinksClickable()>
SOURCE|<android.server.search.Searchables: java.util.ArrayList getGlobalSearchActivities()>
SOURCE|<com.google.android.mms.pdu.NotificationInd: byte[] getMessageClass()>
SOURCE|<java.text.ParsePosition: int getErrorIndex()>
SOURCE|<com.android.mms.dom.ElementImpl: org.w3c.dom.TypeInfo getSchemaTypeInfo()>
SOURCE|<com.android.contacts.widget.PinnedHeaderListDemoActivity$TestPinnedHeaderListAdapter: android.view.View newView(android.content.Context,int,android.database.Cursor,int,android.view.ViewGroup)>
SOURCE|<com.android.internal.os.ProcessStats: com.android.internal.os.ProcessStats$Stats getStats(int)>
SOURCE|<android.graphics.drawable.ShapeDrawable: android.graphics.drawable.shapes.Shape getShape()>
SOURCE|<android.content.Intent: android.net.Uri getData()>
SOURCE|<com.android.inputmethod.keyboard.PointerTracker: int getLastY()>
SOURCE|<gov.nist.javax.sip.header.AuthenticationHeader: java.lang.String getCK()>
SOURCE|<com.android.contacts.activities.PhotoSelectionActivity: android.content.Intent buildIntent(android.content.Context,android.net.Uri,android.graphics.Bitmap,byte[],android.graphics.Rect,com.android.contacts.model.RawContactDeltaList,boolean,boolean,boolean)>
SOURCE|<org.ccil.cowan.tagsoup.HTMLScanner: int getColumnNumber()>
SOURCE|<javax.crypto.SecretKeyFactory: javax.crypto.SecretKeyFactory getInstance(java.lang.String)>
SOURCE|<java.io.ObjectStreamClass: byte getFlags()>
SOURCE|<com.google.android.mms.pdu.PduBody: com.google.android.mms.pdu.PduPart getPart(int)>
SOURCE|<com.android.contacts.util.ImageViewDrawableSetter: byte[] getCompressedImage()>
SOURCE|<java.nio.IntBuffer: java.nio.IntBuffer get(int[])>
SOURCE|<android.database.sqlite.SQLiteQueryBuilder: java.lang.String getTables()>
SOURCE|<com.android.gallery3d.data.LocalMediaItem: java.lang.String getName()>
SOURCE|<com.google.android.apps.lightcycle.camera.NullSurfaceCameraPreview: float getReportedHorizontalFovDegrees()>
SOURCE|<android.net.LinkAddress: int getNetworkPrefixLength()>
SOURCE|<com.android.inputmethod.keyboard.internal.KeyStylesSet: com.android.inputmethod.keyboard.internal.KeyStyle getKeyStyle(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser)>
SOURCE|<com.android.internal.telephony.cdma.CdmaConnection: long getHoldDurationMillis()>
SOURCE|<com.android.internal.telephony.gsm.GsmConnection: java.lang.String getAddress()>
SOURCE|<android.content.res.XmlBlock$Parser: java.lang.String getClassAttribute()>
SOURCE|<android.widget.TabHost: android.widget.TabWidget getTabWidget()>
SOURCE|<com.android.nfc.snep.SnepMessage: int getAcceptableLength()>
SOURCE|<android.app.backup.IBackupManager$Stub$Proxy: android.content.Intent getConfigurationIntent(java.lang.String)>
SOURCE|<libcore.icu.ICU: java.util.Locale[] getAvailableCollatorLocales()>
SOURCE|<android.webkit.WebSettingsClassic: int getDefaultFixedFontSize()>
SOURCE|<android.webkit.WebSettings: java.lang.String getDefaultUserAgent(android.content.Context)>
SOURCE|<com.android.vcard.VCardParserImpl_V21: java.lang.String getNonEmptyLine()>
SOURCE|<android.os.Environment: java.io.File getExternalStorageAppCacheDirectory(java.lang.String)>
SOURCE|<java.security.SecureRandom: java.security.SecureRandom getInstance(java.lang.String)>
SOURCE|<com.android.calendar.Event: long getStartMillis()>
SOURCE|<java.util.concurrent.locks.AbstractQueuedSynchronizer: int getWaitQueueLength(java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject)>
SOURCE|<com.android.inputmethod.latin.LastComposedWord: int getSeparatorLength(java.lang.String)>
SOURCE|<com.android.internal.telephony.gsm.SmsMessage: com.android.internal.telephony.gsm.SmsMessage$SubmitPdu getSubmitPdu(java.lang.String,java.lang.String,java.lang.String,boolean)>
SOURCE|<android.view.View$AttachInfo$InvalidateInfo: android.view.View$AttachInfo$InvalidateInfo getNextPoolable()>
SOURCE|<java.lang.Character: byte getDirectionality(char)>
SOURCE|<com.android.internal.widget.ScrollingTabContainerView$TabAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)>
SOURCE|<org.apache.http.entity.EntityTemplate: java.io.InputStream getContent()>
SOURCE|<com.android.internal.widget.IRemoteViewsFactory$Stub: android.os.IBinder asBinder()>
SOURCE|<com.coremedia.iso.PropertyBoxParserImpl$FourCcToBox: java.lang.String[] getParam()>
SOURCE|<com.android.browser.search.DefaultSearchEngine: android.database.Cursor getSuggestions(android.content.Context,java.lang.String)>
SOURCE|<java.text.DateFormatSymbols: java.lang.String[] getShortMonths()>
SOURCE|<android.text.style.MetricAffectingSpan: android.text.style.CharacterStyle getUnderlying()>
SOURCE|<java.util.MissingResourceException: java.lang.String getKey()>
SOURCE|<com.android.gallery3d.data.MtpClient: byte[] getObject(java.lang.String,int,int)>
SOURCE|<org.apache.http.impl.cookie.NetscapeDraftSpec: java.util.List parse(org.apache.http.Header,org.apache.http.cookie.CookieOrigin)>
SOURCE|<android.bluetooth.BluetoothInputDevice: int getPriority(android.bluetooth.BluetoothDevice)>
SOURCE|<com.android.bluetooth.btservice.AdapterProperties: android.bluetooth.BluetoothDevice[] getBondedDevices()>
SOURCE|<com.android.internal.widget.multiwaveview.Ease$Quad$2: float getInterpolation(float)>
SOURCE|<com.google.common.collect.AbstractMultimap: java.util.Iterator createEntryIterator()>
SOURCE|<com.android.videoeditor.service.VideoEditorProject: com.android.videoeditor.service.MovieAudioTrack getAudioTrack(java.lang.String)>
SOURCE|<java.security.Identity: java.lang.String getInfo()>
SOURCE|<com.android.server.NativeDaemonConnectorException: java.lang.String getCmd()>
SOURCE|<android.widget.LinearLayout: int getLocationOffset(android.view.View)>
SOURCE|<java.util.LinkedList: java.lang.Object get(int)>
SOURCE|<android.nfc.tech.NfcBarcode: int getType()>
SOURCE|<android.webkit.ZoomManager: int getDocumentAnchorX()>
SOURCE|<android.net.Uri: java.lang.String getQueryParameter(java.lang.String)>
SOURCE|<android.app.ContextImpl: int getWallpaperDesiredMinimumWidth()>
SOURCE|<com.android.bluetooth.opp.BluetoothOppUtility: java.lang.String getStatusDescription(android.content.Context,int,java.lang.String)>
SOURCE|<java.security.spec.RSAPrivateCrtKeySpec: java.math.BigInteger getCrtCoefficient()>
SOURCE|<android.widget.RemoteViewsAdapter$RemoteViewsAdapterServiceConnection: com.android.internal.widget.IRemoteViewsFactory getRemoteViewsFactory()>
SOURCE|<com.android.gallery3d.ui.TiledScreenNail: int getWidth()>
SOURCE|<com.android.gallery3d.ui.CropView$AnimationController: int getCenterX()>
SOURCE|<com.google.common.collect.Multisets$UnmodifiableMultiset: java.util.Set elementSet()>
SOURCE|<android.webkit.WebViewCore: android.webkit.WebSettingsClassic getSettings()>
SOURCE|<android.provider.ContactsContract$Contacts: android.net.Uri getLookupUri(android.content.ContentResolver,android.net.Uri)>
SOURCE|<android.graphics.Bitmap: int getScaledWidth(int)>
SOURCE|<org.apache.harmony.xml.dom.DOMConfigurationImpl$11: java.lang.Object get(org.apache.harmony.xml.dom.DOMConfigurationImpl)>
SOURCE|<android.filterfw.core.VertexFrame: java.nio.ByteBuffer getData()>
SOURCE|<android.os.PowerManager: int getMinimumScreenBrightnessSetting()>
SOURCE|<java.beans.PropertyChangeSupport: java.beans.PropertyChangeListener[] getPropertyChangeListeners()>
SOURCE|<org.apache.http.message.AbstractHttpMessage: org.apache.http.params.HttpParams getParams()>
SOURCE|<gov.nist.core.LexerCore: gov.nist.core.Token getNextToken()>
SOURCE|<org.apache.james.mime4j.field.contenttype.parser.ParseException: java.lang.String getMessage()>
SOURCE|<java.nio.FloatArrayBuffer: float get(int)>
SOURCE|<com.android.internal.widget.ActionBarContainer: android.view.View getTabContainer()>
SOURCE|<com.google.common.collect.MapMakerInternalMap$WeakExpirableEvictableEntry: com.google.common.collect.MapMakerInternalMap$ReferenceEntry getPreviousExpirable()>
SOURCE|<com.android.server.DevicePolicyManagerService: int getPasswordMinimumSymbols(android.content.ComponentName,int)>
SOURCE|<gov.nist.javax.sip.header.SIPDate: java.lang.String getWkday()>
SOURCE|<com.google.common.collect.Multimaps$1: java.lang.Object getKey()>
SOURCE|<android.location.LocationRequest: long getFastestInterval()>
SOURCE|<javax.crypto.spec.PBEParameterSpec: byte[] getSalt()>
SOURCE|<android.net.Uri$StringUri: java.lang.String getQuery()>
SOURCE|<android.nfc.INfcTag$Stub$Proxy: int getTimeout(int)>
SOURCE|<gov.nist.core.LexerCore: gov.nist.core.Token match(int)>
SOURCE|<com.google.common.collect.BstNode: java.lang.Object getKey()>
SOURCE|<com.android.calendar.AbstractCalendarActivity: com.android.calendar.AsyncQueryService getAsyncQueryService()>
SOURCE|<com.android.gallery3d.ui.Paper: float[] getTransform(android.graphics.Rect,float)>
SOURCE|<com.android.browser.AutofillHandler$AutoFillProfileDbTask: java.lang.Object doInBackground(java.lang.Object[])>
SOURCE|<android.animation.Keyframe$ObjectKeyframe: java.lang.Object getValue()>
SOURCE|<java.util.concurrent.CountedCompleter: java.lang.Object getRawResult()>
SOURCE|<com.android.inputmethod.latin.RichInputConnection: java.lang.CharSequence getNthPreviousWord(java.lang.String,int)>
SOURCE|<android.widget.Spinner$DialogPopup: int getVerticalOffset()>
SOURCE|<org.apache.http.impl.AbstractHttpClientConnection: org.apache.http.HttpConnectionMetrics getMetrics()>
SOURCE|<gov.nist.javax.sip.header.HeaderFactoryImpl: javax.sip.header.CSeqHeader createCSeqHeader(int,java.lang.String)>
SOURCE|<android.widget.TextView: android.graphics.drawable.Drawable[] getCompoundDrawables()>
SOURCE|<com.android.gallery3d.ui.PhotoView$ZInterpolator: float getInterpolation(float)>
SOURCE|<com.adobe.xmp.impl.XMPDateTimeImpl: java.util.TimeZone getTimeZone()>
SOURCE|<android.database.MatrixCursor: long getLong(int)>
SOURCE|<android.app.ActivityOptions: android.graphics.Bitmap getThumbnail()>
SOURCE|<android.view.MotionEvent: float getHistoricalY(int)>
SOURCE|<android.os.Environment: java.io.File getSecureDataDirectory()>
SOURCE|<android.webkit.WebStorageClassic: void getQuotaForOrigin(java.lang.String,android.webkit.ValueCallback)>
SOURCE|<com.googlecode.mp4parser.authoring.Mp4TrackImpl: com.coremedia.iso.boxes.AbstractMediaHeaderBox getMediaHeaderBox()>
SOURCE|<com.android.contacts.widget.PinnedHeaderListAdapter: android.view.View getPinnedHeaderView(int,android.view.View,android.view.ViewGroup)>
SOURCE|<java.security.Signature: java.security.AlgorithmParameters getParameters()>
SOURCE|<android.content.BroadcastReceiver: int getSendingUserId()>
SOURCE|<android.webkit.WebBackForwardList: android.webkit.WebHistoryItem getCurrentItem()>
SOURCE|<android.widget.ProgressBar: android.graphics.drawable.Drawable getIndeterminateDrawable()>
SOURCE|<com.android.systemui.statusbar.tablet.TabletStatusBar: int getStatusBarHeight()>
SOURCE|<com.android.internal.policy.impl.keyguard.KeyguardMessageArea: java.lang.CharSequence getCurrentMessage()>
SOURCE|<android.database.CursorToBulkCursorAdaptor: android.database.CursorWindow getWindow(int)>
SOURCE|<android.app.DownloadManager: java.lang.Long getRecommendedMaxBytesOverMobile(android.content.Context)>
SOURCE|<com.android.mms.data.Contact: byte[] access$1702(com.android.mms.data.Contact,byte[])>
SOURCE|<com.android.uiautomator.core.UiSelector: com.android.uiautomator.core.UiSelector getChildSelector()>
SOURCE|<android.view.View: int getHorizontalFadingEdgeLength()>
SOURCE|<com.android.server.input.InputManagerService: int[] getInputDeviceIds()>
SOURCE|<android.location.ILocationListener$Stub: android.os.IBinder asBinder()>
SOURCE|<java.util.concurrent.atomic.AtomicLongFieldUpdater: long getAndAdd(java.lang.Object,long)>
SOURCE|<org.xml.sax.helpers.AttributesImpl: java.lang.String getType(java.lang.String)>
SOURCE|<gov.nist.javax.sip.header.AllowEventsList: java.util.ListIterator getMethods()>
SOURCE|<android.text.style.DrawableMarginSpan: int getLeadingMargin(boolean)>
SOURCE|<com.android.videoeditor.service.MovieMediaItem: int getAspectRatio()>
SOURCE|<com.android.internal.policy.impl.keyguard.PagedView$10: float getInterpolation(float)>
SOURCE|<android.webkit.WebChromeClient: android.graphics.Bitmap getDefaultVideoPoster()>
SOURCE|<com.google.android.picasasync.PicasaDatabaseHelper: java.lang.String getUserAccount(long)>
SOURCE|<android.net.sip.SimpleSessionDescription: int getBandwidth(java.lang.String)>
SOURCE|<com.android.calendar.Utils: long getNextMidnight(android.text.format.Time,long,java.lang.String)>
SOURCE|<android.util.MonthDisplayHelper: int getFirstDayOfMonth()>
SOURCE|<java.security.cert.X509CertSelector: byte[] getSubjectAsBytes()>
SOURCE|<android.preference.PreferenceGroupAdapter: long getItemId(int)>
SOURCE|<android.content.ContentResolver: android.content.IContentProvider acquireUnstableProvider(android.net.Uri)>
SOURCE|<com.android.commands.monkey.MonkeySourceNetworkVars$StaticVarGetter: java.lang.String get()>
SOURCE|<org.apache.http.impl.conn.tsccm.WaitingThread: java.lang.Thread getThread()>
SOURCE|<android.bluetooth.BluetoothAdapter: int getConnectionState()>
SOURCE|<com.android.calendar.EventInfoFragment: long getEventId()>
SOURCE|<com.android.gallery3d.data.LocalMediaItem: int getBucketId()>
SOURCE|<android.content.IContentService$Stub$Proxy: java.util.List getCurrentSyncs()>
SOURCE|<com.android.gallery3d.data.MediaItem: com.android.gallery3d.data.Face[] getFaces()>
SOURCE|<org.xmlpull.v1.sax2.Driver: int getLineNumber()>
SOURCE|<android.net.LinkAddress: java.net.InetAddress getAddress()>
SOURCE|<android.content.ContentProvider: android.os.ParcelFileDescriptor openFileHelper(android.net.Uri,java.lang.String)>
SOURCE|<java.lang.reflect.Field: java.lang.reflect.Type getGenericType()>
SOURCE|<java.util.WeakHashMap$Entry: java.lang.Object getKey()>
SOURCE|<android.graphics.Region: boolean getBounds(android.graphics.Rect)>
SOURCE|<android.text.TextUtils: int getOffsetAfter(java.lang.CharSequence,int)>
SOURCE|<android.nfc.Tag: android.os.Bundle getTechExtras(int)>
SOURCE|<com.android.launcher2.CellLayout$ViewCluster: android.graphics.Rect getBoundingRect()>
SOURCE|<android.content.pm.PackageManager: java.util.List getInstalledPackages(int)>
SOURCE|<android.os.StatFs: int getAvailableBlocks()>
SOURCE|<com.google.common.collect.BstMutationResult: com.google.common.collect.BstNode getChangedRoot()>
SOURCE|<com.android.launcher2.PagedView: int getRelativeChildOffset(int)>
SOURCE|<java.nio.charset.CharsetEncoder: java.nio.charset.CodingErrorAction malformedInputAction()>
SOURCE|<org.apache.http.impl.auth.DigestScheme: java.lang.String getQopVariantString()>
SOURCE|<com.google.android.picasasync.UploadsManager: com.google.android.picasasync.UploadsManager getInstance(android.content.Context)>
SOURCE|<android.database.sqlite.SQLiteProgram: int getUniqueId()>
SOURCE|<com.android.internal.app.ActionBarImpl$ActionModeImpl: android.view.Menu getMenu()>
SOURCE|<com.google.common.collect.MapMakerInternalMap: java.lang.Object get(java.lang.Object)>
SOURCE|<com.android.deskclock.widget.multiwaveview.Ease$Quint$2: float getInterpolation(float)>
SOURCE|<java.net.URISyntaxException: java.lang.String getMessage()>
SOURCE|<android.location.Address: java.lang.String getCountryName()>
SOURCE|<android.os.WorkSource: int get(int)>
SOURCE|<com.google.common.collect.ComputingConcurrentHashMap$ComputingValueReference: com.google.common.collect.MapMakerInternalMap$ReferenceEntry getEntry()>
SOURCE|<java.util.Calendar: java.util.Locale[] getAvailableLocales()>
SOURCE|<java.io.BufferedReader: java.lang.String readLine()>
SOURCE|<java.text.NumberFormat: boolean isParseIntegerOnly()>
SOURCE|<android.graphics.drawable.ShapeDrawable: boolean getPadding(android.graphics.Rect)>
SOURCE|<android.accounts.AccountManagerService$Session: android.accounts.IAccountManagerResponse getResponseAndClose()>
SOURCE|<gov.nist.javax.sip.stack.MessageProcessor: int getDefaultPort(java.lang.String)>
SOURCE|<org.apache.harmony.xnet.provider.jsse.HandshakeProtocol: javax.net.ssl.SSLEngineResult$HandshakeStatus getStatus()>
SOURCE|<java.lang.Class: java.security.ProtectionDomain getProtectionDomain()>
SOURCE|<android.net.http.Headers: java.lang.String getLocation()>
SOURCE|<com.android.deskclock.TimePicker: int getHours()>
SOURCE|<android.widget.HeaderViewListAdapter: int getViewTypeCount()>
SOURCE|<org.apache.http.auth.params.AuthParams: java.lang.String getCredentialCharset(org.apache.http.params.HttpParams)>
SOURCE|<android.hardware.Sensor: int getVersion()>
SOURCE|<com.android.launcher2.Workspace: java.util.ArrayList getWorkspaceAndHotseatCellLayouts()>
SOURCE|<android.net.NetworkInfo: java.lang.String getExtraInfo()>
SOURCE|<android.filterpacks.imageproc.SharpenFilter: android.filterfw.core.FrameFormat getOutputFormat(java.lang.String,android.filterfw.core.FrameFormat)>
SOURCE|<android.hardware.usb.IUsbManager$Stub: android.os.IBinder asBinder()>
SOURCE|<android.hardware.Camera$Parameters: int getPreviewFrameRate()>
SOURCE|<com.android.inputmethod.latin.ExpandableBinaryDictionary: java.lang.String getFilenameWithLocale(java.lang.String,java.lang.String)>
SOURCE|<com.android.internal.telephony.Connection: int getCnapNamePresentation()>
SOURCE|<java.util.LinkedHashMap: java.lang.Object get(java.lang.Object)>
SOURCE|<android.view.inputmethod.CorrectionInfo: int getOffset()>
SOURCE|<com.android.ex.chips.RecipientChip: java.lang.CharSequence getOriginalText()>
SOURCE|<android.widget.Editor$ActionPopupWindow: int getTextOffset()>
SOURCE|<org.apache.http.impl.client.AbstractHttpClient: org.apache.http.client.UserTokenHandler getUserTokenHandler()>
SOURCE|<android.content.pm.PermissionGroupInfo: java.lang.CharSequence loadDescription(android.content.pm.PackageManager)>
SOURCE|<android.net.TrafficStats: long getTxPackets(java.lang.String)>
SOURCE|<com.android.internal.telephony.CallManager: java.util.List getBgCallConnections()>
SOURCE|<android.widget.RadioGroup: int getCheckedRadioButtonId()>
SOURCE|<com.google.android.apps.lightcycle.opengl.DeviceOrientedSprite: android.graphics.PointF getPosition()>
SOURCE|<com.android.providers.media.MediaProvider: android.net.Uri getAlbumArtOutputUri(com.android.providers.media.MediaProvider$DatabaseHelper,android.database.sqlite.SQLiteDatabase,long,android.net.Uri)>
SOURCE|<com.android.nfc.dhimpl.NativeLlcpSocket: int getLocalRw()>
SOURCE|<com.android.internal.view.BaseSurfaceHolder: int getRequestedType()>
SOURCE|<android.widget.DialerFilter: int getMode()>
SOURCE|<android.media.audiofx.Equalizer: short[] getBandLevelRange()>
SOURCE|<com.android.browser.TabControl: com.android.browser.Tab getCurrentTab()>
SOURCE|<java.util.MissingFormatArgumentException: java.lang.String getMessage()>
SOURCE|<com.android.contacts.list.PhoneNumberListAdapter: android.view.View newView(android.content.Context,int,android.database.Cursor,int,android.view.ViewGroup)>
SOURCE|<com.android.email.provider.ContentCache: android.database.Cursor getCachedCursor(java.lang.String,java.lang.String[])>
SOURCE|<android.net.sip.SipProfile: int getCallingUid()>
SOURCE|<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>
SOURCE|<com.android.gallery3d.filtershow.imageshow.ImageGeometry: java.lang.String getName()>
SOURCE|<android.app.ApplicationPackageManager: android.content.pm.ActivityInfo getReceiverInfo(android.content.ComponentName,int)>
SOURCE|<com.android.internal.policy.impl.keyguard.KeyguardSelectorView$3: com.android.internal.policy.impl.keyguard.KeyguardSecurityCallback getCallback()>
SOURCE|<android.view.animation.Animation: long computeDurationHint()>
SOURCE|<gov.nist.javax.sip.address.TelURLImpl: java.lang.String getPhoneContext()>
SOURCE|<com.android.internal.policy.impl.keyguard.KeyguardMessageArea: java.lang.String getOwnerInfo()>
SOURCE|<org.apache.http.entity.FileEntity: java.io.InputStream getContent()>
SOURCE|<com.android.uiautomator.core.UiDevice: com.android.uiautomator.core.UiDevice getInstance()>
SOURCE|<android.widget.ExpandableListView: android.widget.ListAdapter getAdapter()>
SOURCE|<com.adobe.xmp.options.ParseOptions: boolean getAcceptLatin1()>
SOURCE|<java.time.LocalDate: int getDayOfMonth()>
SOURCE|<android.app.admin.DevicePolicyManager: int getStorageEncryptionStatus(int)>
SOURCE|<com.android.internal.telephony.gsm.GSMPhone: void getSmscAddress(android.os.Message)>
SOURCE|<java.util.IllegalFormatFlagsException: java.lang.String getMessage()>
SOURCE|<com.android.calendar.EventInfoFragment: android.database.Cursor access$902(com.android.calendar.EventInfoFragment,android.database.Cursor)>
SOURCE|<com.android.ex.variablespeed.EngineParameters: int getStartPositionMillis()>
SOURCE|<java.util.concurrent.ForkJoinTask: java.lang.Throwable getThrowableException()>
SOURCE|<android.view.accessibility.AccessibilityRecord: int getScrollY()>
SOURCE|<com.android.internal.telephony.PhoneProxy: void getSmscAddress(android.os.Message)>
SOURCE|<android.view.Display: int getRotation()>
SOURCE|<gov.nist.core.GenericObjectList: java.lang.String getIndentation()>
SOURCE|<com.android.internal.backup.LocalTransport: android.app.backup.RestoreSet[] getAvailableRestoreSets()>
SOURCE|<org.apache.http.impl.client.DefaultRequestDirector: org.apache.http.impl.client.RoutedRequest handleResponse(org.apache.http.impl.client.RoutedRequest,org.apache.http.HttpResponse,org.apache.http.protocol.HttpContext)>
SOURCE|<android.webkit.WebViewCore: android.webkit.DeviceOrientationService getDeviceOrientationService()>
SOURCE|<com.android.email.provider.ContentCache: java.util.Map getSnapshot()>
SOURCE|<java.util.logging.Logger: java.util.logging.Logger getLogger(java.lang.String,java.lang.String)>
SOURCE|<android.graphics.Interpolator: int getValueCount()>
SOURCE|<android.app.admin.IDevicePolicyManager$Stub$Proxy: int getPasswordMinimumLowerCase(android.content.ComponentName,int)>
SOURCE|<com.android.videoeditor.service.MovieEffect: long getStartTime()>
SOURCE|<com.android.phone.PhoneUtils: boolean getMute()>
SOURCE|<org.apache.harmony.luni.lang.reflect.GenericSignatureParser: org.apache.harmony.luni.lang.reflect.ImplForVariable parseFormalTypeParameter()>
SOURCE|<android.content.Intent: char[] getCharArrayExtra(java.lang.String)>
SOURCE|<com.android.internal.telephony.sip.SipPhoneBase: java.lang.String getMeid()>
SOURCE|<android.net.wifi.WifiConfiguration: java.lang.String getPrintableSsid()>
SOURCE|<org.apache.http.conn.scheme.SchemeRegistry: org.apache.http.conn.scheme.Scheme getScheme(org.apache.http.HttpHost)>
SOURCE|<android.media.videoeditor.Overlay: android.media.videoeditor.MediaItem getMediaItem()>
SOURCE|<android.hardware.Camera$Parameters: java.util.List getSupportedSceneModes()>
SOURCE|<com.android.server.ThrottleService: long getCliffThreshold(java.lang.String,int)>
SOURCE|<org.apache.harmony.xml.ExpatReader: org.xml.sax.ErrorHandler getErrorHandler()>
SOURCE|<com.android.contacts.list.CustomContactListFilterActivity$GroupDelta: boolean getVisible()>
SOURCE|<android.content.pm.IPackageManager$Stub$Proxy: java.util.List queryPermissionsByGroup(java.lang.String,int)>
SOURCE|<com.google.android.mms.pdu.MultimediaMessagePdu: int getPriority()>
SOURCE|<com.android.org.bouncycastle.util.io.pem.PemHeader: java.lang.String getValue()>
SOURCE|<android.content.pm.PackageItemInfo: java.lang.CharSequence loadLabel(android.content.pm.PackageManager)>
SOURCE|<org.apache.james.mime4j.field.contenttype.parser.TokenMgrError: java.lang.String getMessage()>
SOURCE|<android.widget.TextView: android.text.method.MovementMethod getDefaultMovementMethod()>
SOURCE|<java.net.HttpCookie: java.lang.String getValue()>
SOURCE|<com.android.internal.telephony.CallerInfo: com.android.internal.telephony.CallerInfo getCallerInfo(android.content.Context,android.net.Uri,android.database.Cursor)>
SOURCE|<android.telephony.TelephonyManager: java.lang.String getNetworkCountryIso()>
SOURCE|<android.view.accessibility.AccessibilityInteractionClient: java.util.List findAccessibilityNodeInfosByText(int,int,long,java.lang.String)>
SOURCE|<android.net.Uri: java.lang.String access$300()>
SOURCE|<com.android.internal.os.BatteryStatsImpl: int getDischargeAmountScreenOn()>
SOURCE|<java.util.EnumSet: java.lang.Object writeReplace()>
SOURCE|<gov.nist.javax.sip.SipStackImpl: gov.nist.javax.sip.EventScanner getEventScanner()>
SOURCE|<javax.crypto.SealedObject: java.lang.Object getObject(java.security.Key,java.lang.String)>
SOURCE|<com.android.browser.BookmarkUtils: android.graphics.drawable.Drawable createListFaviconBackground(android.content.Context)>
SOURCE|<com.android.internal.telephony.ITelephony$Stub$Proxy: int getNetworkType()>
SOURCE|<android.widget.ListPopupWindow: int getSelectedItemPosition()>
SOURCE|<com.android.ex.chips.BaseRecipientAdapter: java.lang.Object getItem(int)>
SOURCE|<com.android.gallery3d.data.FaceClustering$FaceCluster: com.android.gallery3d.data.MediaItem getCover()>
SOURCE|<com.android.email.RecipientAdapter: int getItemLayout()>
SOURCE|<com.android.email.service.AccountService$1: android.os.Bundle getConfigurationData(java.lang.String)>
SOURCE|<java.lang.SecurityManager: int classLoaderDepth()>
SOURCE|<android.view.KeyEvent: int getSource()>
SOURCE|<com.android.gallery3d.common.LongSparseArray: java.lang.Object get(long)>
SOURCE|<org.kxml2.io.KXmlParser: int getNamespaceCount(int)>
SOURCE|<com.android.browser.Tab: android.graphics.Bitmap getFavicon()>
SOURCE|<com.android.internal.view.menu.ActionMenuItem: char getNumericShortcut()>
SOURCE|<com.android.mms.layout.HVGALayoutParameters: int getImageHeight()>
SOURCE|<android.app.ContextImpl: java.io.File getExternalFilesDir(java.lang.String)>
SOURCE|<com.android.internal.telephony.cdma.SmsMessage: int getProtocolIdentifier()>
SOURCE|<org.apache.http.auth.NTCredentials: java.lang.String getDomain()>
SOURCE|<android.view.View: int getRightPaddingOffset()>
SOURCE|<android.preference.Preference: android.preference.Preference$OnPreferenceClickListener getOnPreferenceClickListener()>
SOURCE|<com.android.gallery3d.ui.ResourceTexture: int getId()>
SOURCE|<gov.nist.javax.sip.message.SIPMessage: java.lang.String getMessageContent()>
SOURCE|<libcore.icu.RuleBasedCollatorICU: java.lang.String getRules()>
SOURCE|<java.time.LocalDate: java.time.DayOfWeek getDayOfWeek()>
SOURCE|<gov.nist.javax.sip.header.SIPHeaderList: gov.nist.javax.sip.header.SIPHeader get(int)>
SOURCE|<gov.nist.javax.sip.header.ims.PAssertedService: java.lang.String getApplicationIdentifiers()>
SOURCE|<android.widget.ListPopupWindow: int getInputMethodMode()>
SOURCE|<android.accounts.AccountManager: android.accounts.AccountManagerFuture editProperties(java.lang.String,android.app.Activity,android.accounts.AccountManagerCallback,android.os.Handler)>
SOURCE|<android.content.AbstractThreadedSyncAdapter: android.content.Context getContext()>
SOURCE|<com.android.systemui.usb.UsbStorageActivity: android.app.Dialog onCreateDialog(int,android.os.Bundle)>
SOURCE|<com.adobe.xmp.impl.xpath.XMPPathSegment: int getKind()>
SOURCE|<com.android.server.net.NetworkStatsService$DefaultNetworkStatsSettings: com.android.server.net.NetworkStatsService$NetworkStatsSettings$Config getUidConfig()>
SOURCE|<com.android.bluetooth.btservice.AdapterService$AdapterServiceBinder: android.os.ParcelUuid[] getUuids()>
SOURCE|<java.nio.MappedByteBufferAdapter: char getChar()>
SOURCE|<com.android.mms.MmsConfig: int getDefaultSMSMessagesPerThread()>
SOURCE|<com.android.contacts.model.account.ExchangeAccountType: com.android.contacts.model.dataitem.DataKind addDataKindWebsite(android.content.Context)>
SOURCE|<org.apache.harmony.security.provider.cert.X509CertImpl: java.security.Principal getIssuerDN()>
SOURCE|<com.android.gallery3d.filtershow.imageshow.ImageSlave: com.android.gallery3d.filtershow.HistoryAdapter getHistory()>
SOURCE|<android.os.Debug$MemoryInfo: java.lang.String getOtherLabel(int)>
SOURCE|<com.android.org.bouncycastle.asn1.DERNumericString: java.lang.String getString()>
SOURCE|<com.android.launcher2.Workspace: android.view.View getViewForTag(java.lang.Object)>
SOURCE|<android.test.mock.MockContext: java.lang.ClassLoader getClassLoader()>
SOURCE|<android.widget.CalendarView$WeekView: java.util.Calendar getFirstDay()>
SOURCE|<android.text.method.DigitsKeyListener: int getInputType()>
SOURCE|<android.content.Intent: android.content.Intent getIntent(java.lang.String)>
SOURCE|<com.android.contacts.model.account.ExchangeAccountType: com.android.contacts.model.dataitem.DataKind addDataKindDisplayName(android.content.Context)>
SOURCE|<android.hardware.display.IDisplayManager$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
SOURCE|<android.webkit.WebView: android.webkit.WebViewProvider getWebViewProvider()>
SOURCE|<org.apache.harmony.xnet.provider.jsse.ConnectionState: byte[] decrypt(byte,byte[])>
SOURCE|<com.android.internal.os.BatteryStatsImpl$Uid: com.android.internal.os.BatteryStatsImpl$Uid$Pkg$Serv getServiceStatsLocked(java.lang.String,java.lang.String)>
SOURCE|<android.provider.Settings$Secure: long getLong(android.content.ContentResolver,java.lang.String)>
SOURCE|<org.apache.http.client.methods.HttpRequestBase: java.net.URI getURI()>
SOURCE|<com.android.internal.telephony.DataConnectionAc: android.net.LinkProperties getLinkPropertiesSync()>
SOURCE|<org.apache.harmony.security.x509.InfoAccessSyntax$1: java.util.Collection getValues(java.lang.Object)>
SOURCE|<gov.nist.core.net.DefaultNetworkLayer: java.net.Socket createSocket(java.net.InetAddress,int,java.net.InetAddress,int)>
SOURCE|<android.provider.Settings$System: int getIntForUser(android.content.ContentResolver,java.lang.String,int)>
SOURCE|<java.lang.reflect.Executable: int getParameterCount()>
SOURCE|<android.widget.TabHost$TabSpec: java.lang.String getTag()>
SOURCE|<android.os.Bundle: android.os.Bundle getBundle(java.lang.String)>
SOURCE|<com.android.emailcommon.utility.Utility: java.lang.Object getFirstRowColumn(android.content.Context,android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,int,java.lang.Object,com.android.emailcommon.utility.Utility$CursorGetter)>
SOURCE|<android.app.Instrumentation: android.os.Bundle getBinderCounts()>
SOURCE|<android.app.FragmentManagerImpl: android.app.Fragment getFragment(android.os.Bundle,java.lang.String)>
SOURCE|<com.adobe.xmp.impl.XMPNode: int getQualifierLength()>
SOURCE|<com.android.providers.contacts.VoicemailContentTable: java.lang.String getType(com.android.providers.contacts.VoicemailContentProvider$UriData)>
SOURCE|<com.android.musicfx.seekbar.AbsSeekBar: int getThumbOffset()>
SOURCE|<android.widget.Editor: android.widget.Editor$SelectionModifierCursorController getSelectionController()>
SOURCE|<gov.nist.javax.sip.header.UserAgent: java.util.ListIterator getProduct()>
SOURCE|<com.android.server.pm.PackageManagerService: java.util.List queryIntentActivityOptions(android.content.ComponentName,android.content.Intent[],java.lang.String[],android.content.Intent,java.lang.String,int,int)>
SOURCE|<javax.net.ssl.SSLContextSpi: javax.net.ssl.SSLParameters engineGetSupportedSSLParameters()>
SOURCE|<java.net.CookieHandler: java.net.CookieHandler getDefault()>
SOURCE|<com.android.bluetooth.Utils: byte[] getBytesFromAddress(java.lang.String)>
SOURCE|<android.content.res.Resources: int getIdentifier(java.lang.String,java.lang.String,java.lang.String)>
SOURCE|<android.graphics.BitmapFactory: android.graphics.Bitmap decodeStream(java.io.InputStream)>
SOURCE|<android.app.WallpaperInfo: java.lang.String getSettingsActivity()>
SOURCE|<com.google.common.collect.AbstractMultimap$WrappedCollection: java.util.Collection getDelegate()>
SOURCE|<android.graphics.drawable.InsetDrawable: android.graphics.drawable.Drawable$ConstantState getConstantState()>
SOURCE|<android.app.SearchableInfo: int getIconId()>
SOURCE|<com.android.browser.provider.BrowserProvider$MySuggestionCursor: long getLong(int)>
SOURCE|<com.google.android.picasastore.HttpUtils: org.apache.http.conn.ClientConnectionManager getConnectionManager()>
SOURCE|<android.net.wifi.IWifiManager$Stub$Proxy: android.net.DhcpInfo getDhcpInfo()>
SOURCE|<com.android.uiautomator.core.UiAutomatorBridge: com.android.uiautomator.core.QueryController getQueryController()>
SOURCE|<java.io.LineNumberReader: int getLineNumber()>
SOURCE|<com.android.browser.BrowserSettings: int getAdjustedDoubleTapZoom(int)>
SOURCE|<android.telephony.ServiceState: int getNetworkId()>
SOURCE|<com.android.gallery3d.data.BucketHelper: java.lang.String getBucketName(android.content.ContentResolver,int)>
SOURCE|<java.util.GregorianCalendar: java.util.TimeZone getTimeZone()>
SOURCE|<android.accounts.AccountManagerService: android.accounts.AccountAndUser[] getAllAccounts()>
SOURCE|<com.android.bluetooth.btservice.AdapterService$AdapterServiceBinder: java.lang.String getName()>
SOURCE|<android.webkit.WebView$HitTestResult: int getType()>
SOURCE|<org.apache.harmony.security.fortress.Services: java.security.Provider$Service getSecureRandomService()>
SOURCE|<android.widget.TableRow: int getLocationOffset(android.view.View)>
SOURCE|<com.android.internal.telephony.cat.CatCmdMessage: com.android.internal.telephony.cat.Menu getMenu()>
SOURCE|<com.android.gallery3d.ui.DialogDetailsView$DetailsAdapter: java.lang.Object getItem(int)>
SOURCE|<android.provider.Settings$Secure: float getFloatForUser(android.content.ContentResolver,java.lang.String,float,int)>
SOURCE|<com.android.gallery3d.data.LocalImage: int getWidth()>
SOURCE|<com.android.phone.PhoneInterfaceManager: java.lang.String getCdmaEriText()>
SOURCE|<java.security.SignedObject: java.lang.Object getObject()>
SOURCE|<android.test.mock.MockResources: int getColor(int)>
SOURCE|<java.nio.HeapByteBuffer: double getDouble()>
SOURCE|<android.net.Uri$PathSegmentsBuilder: android.net.Uri$PathSegments build()>
SOURCE|<gov.nist.javax.sip.stack.SIPTransaction: gov.nist.javax.sip.message.SIPResponse getLastResponse()>
SOURCE|<android.text.Layout: int getEllipsizedWidth()>
SOURCE|<android.widget.TextView: int getCompoundPaddingLeft()>
SOURCE|<java.security.cert.X509CertSelector: byte[] getSubjectKeyIdentifier()>
SOURCE|<com.android.bluetooth.btservice.AdapterProperties: int getDiscoverableTimeout()>
SOURCE|<java.time.Duration: long get(java.time.temporal.TemporalUnit)>
SOURCE|<org.apache.harmony.xnet.provider.jsse.OpenSSLSessionImpl: java.lang.String getCipherSuite()>
SOURCE|<com.android.internal.telephony.sip.SipPhone: com.android.internal.telephony.Call getForegroundCall()>
SOURCE|<org.apache.harmony.luni.lang.reflect.GenericSignatureParser: java.lang.reflect.Type parseReturnType()>
SOURCE|<java.text.DecimalFormatSymbols: char getDigit()>
SOURCE|<android.net.sip.SimpleSessionDescription: java.lang.String getEncryptionKey()>
SOURCE|<org.apache.harmony.xnet.provider.jsse.HandshakeIODataStream: byte[] getDigestSHAwithoutLast()>
SOURCE|<android.app.ActivityManager: java.util.List getProcessesInErrorState()>
SOURCE|<android.bluetooth.IBluetooth$Stub$Proxy: android.os.ParcelUuid[] getRemoteUuids(android.bluetooth.BluetoothDevice)>
SOURCE|<gov.nist.javax.sip.stack.SIPTransaction: java.lang.String getViaHost()>
SOURCE|<com.android.videoeditor.service.MovieAudioTrack: int getAudioSamplingFrequency()>
SOURCE|<com.android.mms.ui.PresenterFactory: com.android.mms.ui.Presenter getPresenter(java.lang.String,android.content.Context,com.android.mms.ui.ViewInterface,com.android.mms.model.Model)>
SOURCE|<com.android.systemui.statusbar.phone.Ticker$Segment: java.lang.CharSequence getText()>
SOURCE|<android.view.inputmethod.InputMethodInfo: java.lang.String getId()>
SOURCE|<android.view.IRotationWatcher$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
SOURCE|<java.security.Provider: java.util.Set keySet()>
SOURCE|<java.text.DecimalFormatSymbols: java.lang.String getInfinity()>
SOURCE|<android.view.MotionEvent: long getEventTime()>
SOURCE|<android.content.res.XmlBlock$Parser: int getAttributeCount()>
SOURCE|<com.android.email.activity.MessageListItemCoordinates: int getMode(android.content.Context,int,boolean)>
SOURCE|<com.android.server.wm.WindowState: com.android.server.wm.MagnificationSpec getWindowMagnificationSpecLocked()>
SOURCE|<com.android.nfc.handover.HandoverManager: com.android.nfc.handover.PendingHandoverTransfer registerInTransferLocked(android.bluetooth.BluetoothDevice)>
SOURCE|<android.test.mock.MockContext: java.io.File getDatabasePath(java.lang.String)>
SOURCE|<android.database.AbstractCursor: int getPosition()>
SOURCE|<gov.nist.javax.sip.header.AuthenticationHeader: java.lang.String encodeBody()>
SOURCE|<android.view.accessibility.IAccessibilityInteractionConnectionCallback$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
SOURCE|<org.apache.http.client.methods.HttpRequestBase: org.apache.http.RequestLine getRequestLine()>
SOURCE|<com.android.deskclock.timer.TimerFragment$TimersListAdapter: int getCount()>
SOURCE|<com.android.internal.telephony.cdma.CDMAPhone: android.telephony.CellLocation getCellLocation()>
SOURCE|<android.bluetooth.IBluetoothHeadsetPhone$Stub$Proxy: java.lang.String getNetworkOperator()>
SOURCE|<com.android.server.am.ActivityManagerService: java.util.List getRunningExternalApplications()>
SOURCE|<android.media.AudioTrack: int getChannelConfiguration()>
SOURCE|<libcore.net.http.HttpURLConnectionImpl: int getChunkLength()>
SOURCE|<gov.nist.javax.sip.header.ims.PServedUser: java.lang.String getRegistrationState()>
SOURCE|<com.android.internal.util.FastXmlSerializer: java.lang.String getNamespace()>
SOURCE|<java.nio.IntToByteBufferAdapter: java.nio.IntBuffer get(int[],int,int)>
SOURCE|<java.util.zip.CheckedOutputStream: java.util.zip.Checksum getChecksum()>
SOURCE|<android.app.ActivityThread: android.app.LoadedApk getPackageInfo(java.lang.String,android.content.res.CompatibilityInfo,int,int)>
SOURCE|<android.text.method.BaseMovementMethod: int getMovementMetaState(android.text.Spannable,android.view.KeyEvent)>
SOURCE|<android.hardware.usb.UsbEndpoint: int getType()>
SOURCE|<android.app.BackStackRecord: int getTransition()>
SOURCE|<com.android.mms.dom.smil.SmilMediaElementImpl$1: float getDur()>
SOURCE|<android.service.wallpaper.IWallpaperService$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
SOURCE|<com.android.browser.PreloadController: com.android.browser.TabControl getTabControl()>
SOURCE|<android.view.accessibility.AccessibilityEvent: android.view.accessibility.AccessibilityRecord getRecord(int)>
SOURCE|<android.os.Bundle: double getDouble(java.lang.String)>
SOURCE|<android.bluetooth.IBluetoothPbap$Stub$Proxy: int getState()>
SOURCE|<java.lang.SecurityManager: java.lang.Class currentLoadedClass()>
SOURCE|<com.android.inputmethod.latin.makedict.FusionDictionary$CharGroup: com.android.inputmethod.latin.makedict.FusionDictionary$WeightedString getShortcut(java.lang.String)>
SOURCE|<android.view.View: java.lang.CharSequence getContentDescription()>
SOURCE|<android.media.AudioService$VolumeStreamState: int getStreamType()>
SOURCE|<java.nio.DoubleArrayBuffer: java.nio.DoubleBuffer get(double[],int,int)>
SOURCE|<com.android.server.BluetoothManagerService: java.lang.String getName()>
SOURCE|<com.android.gallery3d.filtershow.imageshow.ImageShow: com.android.gallery3d.filtershow.filters.ImageFilter getCurrentFilter()>
SOURCE|<com.android.systemui.statusbar.phone.PhoneStatusBar: android.animation.Animator startDelay(int,android.animation.Animator)>
SOURCE|<com.android.internal.telephony.sip.SipPhoneBase: boolean getIccRecordsLoaded()>
SOURCE|<com.adobe.xmp.options.ParseOptions: boolean getStrictAliasing()>
SOURCE|<com.google.common.collect.MapMakerInternalMap$1: java.lang.Object get()>
SOURCE|<android.content.ContentService: java.util.List getCurrentSyncs()>
SOURCE|<com.android.email.activity.AccountSelectorAdapter$CursorWithExtras: int getRecentMailboxCount()>
SOURCE|<com.android.internal.telephony.sip.SipPhone$SipConnection: com.android.internal.telephony.Call getCall()>
SOURCE|<com.android.server.accessibility.ScreenMagnifier$Viewport$ViewportWindow: int getAlpha()>
SOURCE|<gov.nist.javax.sip.address.TelURLImpl: gov.nist.core.NameValueList getParameters()>
SOURCE|<org.kxml2.io.KXmlParser: java.lang.String getAttributeValue(int)>
SOURCE|<com.android.camera.PhotoModule$ImageNamer: android.net.Uri getUri()>
SOURCE|<com.android.email.Controller: com.android.email.Controller getInstance(android.content.Context)>
SOURCE|<org.apache.harmony.security.asn1.ASN1Oid: org.apache.harmony.security.asn1.ASN1Oid getInstanceForString()>
SOURCE|<java.util.Calendar: java.util.TimeZone getTimeZone()>
SOURCE|<com.android.gallery3d.data.LocalMergeAlbum: java.lang.String getName()>
SOURCE|<com.android.server.usb.UsbHostManager: void getDeviceList(android.os.Bundle)>
SOURCE|<android.webkit.WebViewClassic: android.webkit.ViewManager getViewManager()>
SOURCE|<android.widget.TextView: int getAutoLinkMask()>
SOURCE|<org.apache.harmony.xml.dom.NodeImpl$1: java.lang.String getTypeName()>
SOURCE|<com.android.contacts.list.ContactEntryListAdapter: int getContactNameDisplayOrder()>
SOURCE|<android.view.View: int getAccessibilityCursorPosition()>
SOURCE|<com.android.internal.telephony.cdma.CdmaServiceStateTracker: java.util.List getAllCellInfo()>
SOURCE|<android.net.INetworkStatsService$Stub$Proxy: long getNetworkTotalBytes(android.net.NetworkTemplate,long,long)>
SOURCE|<com.android.inputmethod.latin.ExpandableDictionary$NextHistoryWord: com.android.inputmethod.latin.UserHistoryForgettingCurveUtils$ForgettingCurveParams getFcParams()>
SOURCE|<com.android.contacts.interactions.PhoneNumberInteraction$PhoneDisambiguationDialogFragment: android.app.Dialog onCreateDialog(android.os.Bundle)>
SOURCE|<com.android.nfc.ndefpush.NdefPushProtocol: android.nfc.NdefMessage getImmediate()>
SOURCE|<android.widget.ActivityChooserModel: int getHistorySize()>
SOURCE|<android.text.style.AbsoluteSizeSpan: int getSize()>
SOURCE|<gov.nist.javax.sip.header.ParametersHeader: java.lang.String getMultiParameter(java.lang.String)>
SOURCE|<dalvik.system.CloseGuard: dalvik.system.CloseGuard$Reporter getReporter()>
SOURCE|<android.accounts.AccountManagerService: android.accounts.Account[] getAccountsAsUser(java.lang.String,int)>
SOURCE|<android.nfc.tech.NfcV: android.nfc.Tag getTag()>
SOURCE|<com.android.internal.widget.multiwaveview.GlowPadView: int getTargetPosition(int)>
SOURCE|<java.lang.Thread: long getId()>
SOURCE|<android.accounts.IAccountManager$Stub$Proxy: android.accounts.AuthenticatorDescription[] getAuthenticatorTypes()>
SOURCE|<java.text.NumberFormat: java.text.NumberFormat getInstance(java.util.Locale)>
SOURCE|<android.app.admin.DevicePolicyManager: int getPasswordMinimumUpperCase(android.content.ComponentName)>
SOURCE|<com.android.ex.chips.RecipientEditTextView: com.android.ex.chips.RecipientChip[] getSortedRecipients()>
SOURCE|<android.widget.LinearLayout: int getChildrenSkipCount(android.view.View,int)>
SOURCE|<java.text.AttributedString$AttributedIterator: int getRunStart(java.text.AttributedCharacterIterator$Attribute)>
SOURCE|<android.text.style.LocaleSpan: int getSpanTypeId()>
SOURCE|<com.android.internal.telephony.gsm.GsmConnection: long getConnectTime()>
SOURCE|<android.filterfw.core.SerializedFrame$DirectByteOutputStream: int getSize()>
SOURCE|<android.text.style.RelativeSizeSpan: float getSizeChange()>
SOURCE|<java.util.SimpleTimeZone: int getRawOffset()>
SOURCE|<android.webkit.Plugin: java.lang.String getPath()>
SOURCE|<com.google.common.collect.ImmutableList: com.google.common.collect.ImmutableList reverse()>
SOURCE|<com.android.email.mail.store.imap.ImapResponse: com.android.email.mail.store.imap.ImapString getResponseCodeOrEmpty()>
SOURCE|<android.accounts.AccountAndUser: java.lang.String toString()>
SOURCE|<com.google.android.picasastore.HttpUtils$MetricsTrackingConnectionManager$1: org.apache.http.conn.ManagedClientConnection getConnection(long,java.util.concurrent.TimeUnit)>
SOURCE|<android.widget.ArrayAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)>
SOURCE|<java.util.AbstractQueue: java.lang.Object element()>
SOURCE|<com.android.internal.util.StateMachine: java.lang.String getWhatToString(int)>
SOURCE|<org.apache.harmony.xnet.provider.jsse.ClientHello: int getType()>
SOURCE|<com.android.i18n.phonenumbers.geocoding.FlyweightMapStorage: java.lang.String getDescription(int)>
SOURCE|<org.apache.harmony.xnet.provider.jsse.OpenSSLSessionImpl: java.security.cert.Certificate[] getPeerCertificates()>
SOURCE|<android.gesture.Gesture: android.graphics.Bitmap toBitmap(int,int,int,int,int)>
SOURCE|<org.apache.http.params.DefaultedHttpParams: java.util.Set getLocalNames()>
SOURCE|<java.util.DoubleSummaryStatistics: long getCount()>
SOURCE|<com.android.calendar.Utils: java.lang.String getSharedPreference(android.content.Context,java.lang.String,java.lang.String)>
SOURCE|<com.android.gallery3d.filtershow.cache.ImageLoader: int getOrientation(android.content.Context,android.net.Uri)>
SOURCE|<libcore.net.http.HttpEngine: libcore.net.http.RequestHeaders getRequestHeaders()>
SOURCE|<com.android.email.activity.MessagesAdapter$SearchResultsCursor: int getResultsCount()>
SOURCE|<android.content.SyncManager: long access$3700()>
SOURCE|<com.android.inputmethod.latin.suggestions.MoreSuggestions$MoreSuggestionsParam: int getX(int)>
SOURCE|<com.google.common.collect.RegularImmutableSortedSet: com.google.common.collect.ImmutableSortedSet tailSetImpl(java.lang.Object,boolean)>
SOURCE|<com.android.camera.FocusOverlayManager: int getFocusState()>
SOURCE|<com.google.common.collect.Sets$CartesianSet$Axis: java.lang.Object getForIndex(int)>
SOURCE|<com.android.gallery3d.filtershow.imageshow.ImageGeometry: android.graphics.RectF getLocalDisplayBounds()>
SOURCE|<com.android.internal.policy.impl.keyguard.KeyguardWidgetFrame: android.view.View getContent()>
SOURCE|<javax.xml.parsers.DocumentBuilder: org.w3c.dom.Document parse(java.io.InputStream,java.lang.String)>
SOURCE|<com.android.contacts.list.ContactEntryListAdapter: java.lang.String getContactsCount()>
SOURCE|<javax.net.ssl.SSLContext: javax.net.ssl.SSLParameters getDefaultSSLParameters()>
SOURCE|<com.android.email.activity.setup.DuplicateAccountDialogFragment: android.app.Dialog onCreateDialog(android.os.Bundle)>
SOURCE|<android.preference.GenericInflater: java.lang.Object onCreateItem(java.lang.String,android.util.AttributeSet)>
SOURCE|<libcore.net.http.RawHeaders: libcore.net.http.RawHeaders getAll(java.util.Set)>
SOURCE|<com.android.ex.chips.BaseRecipientAdapter: long getItemId(int)>
SOURCE|<android.app.ActivityThread: android.content.res.Resources getTopLevelResources(java.lang.String,int,android.content.res.Configuration,android.app.LoadedApk)>
SOURCE|<gov.nist.javax.sip.address.TelephoneNumber: java.util.Iterator getParameterNames()>
SOURCE|<com.googlecode.mp4parser.AbstractContainerBox: java.util.List getBoxes(java.lang.Class,boolean)>
SOURCE|<com.android.org.bouncycastle.asn1.x509.SubjectPublicKeyInfo: com.android.org.bouncycastle.asn1.DERBitString getPublicKeyData()>
SOURCE|<com.android.gallery3d.util.GalleryUtils: int getBucketId(java.lang.String)>
SOURCE|<com.android.launcher2.Workspace: android.graphics.Rect getCellLayoutMetrics(com.android.launcher2.Launcher,int)>
SOURCE|<android.content.Intent$FilterComparison: android.content.Intent getIntent()>
SOURCE|<com.android.internal.telephony.PhoneBase: boolean getUnitTestMode()>
SOURCE|<com.android.browser.BrowserHistoryPage$HistoryGroupWrapper: int getCount()>
SOURCE|<android.webkit.WebHistoryItemClassic: int getId()>
SOURCE|<com.android.exchange.adapter.MoveItemsParser: int getStatusCode()>
SOURCE|<com.android.server.pm.Installer: int getSizeInfo(java.lang.String,int,java.lang.String,java.lang.String,java.lang.String,android.content.pm.PackageStats)>
SOURCE|<android.telephony.SmsCbEtwsInfo: byte[] getPrimaryNotificationSignature()>
SOURCE|<android.view.animation.Animation: float getScaleFactor()>
SOURCE|<com.android.contacts.widget.PinnedHeaderListView: int getPinnedHeaderHeight(int)>
SOURCE|<android.hardware.usb.IUsbManager$Stub$Proxy: android.hardware.usb.UsbAccessory getCurrentAccessory()>
SOURCE|<com.android.emailcommon.internet.MimeHeader: java.lang.String getFirstHeader(java.lang.String)>
SOURCE|<com.android.browser.TabControl: android.webkit.WebView getCurrentTopWebView()>
SOURCE|<android.mtp.MtpDevice: int[] getObjectHandles(int,int,int)>
SOURCE|<gov.nist.javax.sip.message.ContentImpl: java.lang.Object getContent()>
SOURCE|<com.android.email.mail.store.ImapFolder: com.android.emailcommon.mail.Message[] getMessages(com.android.emailcommon.service.SearchParams,com.android.emailcommon.mail.Folder$MessageRetrievalListener)>
SOURCE|<android.telephony.gsm.SmsMessage: int getIndexOnSim()>
SOURCE|<android.webkit.WebSettingsClassic$AutoFillProfile: java.lang.String getPhoneNumber()>
SOURCE|<com.googlecode.mp4parser.authoring.TrackMetaData: long[] getMatrix()>
SOURCE|<com.android.emailcommon.provider.Mailbox: long findMailboxOfType(android.content.Context,long,int)>
SOURCE|<java.io.RandomAccessFile: boolean readBoolean()>
SOURCE|<android.view.View: android.graphics.Bitmap createSnapshot(android.graphics.Bitmap$Config,int,boolean)>
SOURCE|<android.net.http.Connection: boolean getCanPersist()>
SOURCE|<android.bluetooth.BluetoothA2dp: int getConnectionState(android.bluetooth.BluetoothDevice)>
SOURCE|<android.os.Environment$UserEnvironment: java.io.File getExternalStorageAppMediaDirectory(java.lang.String)>
SOURCE|<com.android.inputmethod.keyboard.PointerTracker: com.android.inputmethod.keyboard.internal.GestureStrokeWithPreviewPoints getGestureStrokeWithPreviewPoints()>
SOURCE|<android.accessibilityservice.IAccessibilityServiceConnection$Stub$Proxy: android.accessibilityservice.AccessibilityServiceInfo getServiceInfo()>
SOURCE|<com.android.gallery3d.gadget.WidgetService$EmptySource: android.graphics.Bitmap getImage(int)>
SOURCE|<android.view.View: int getVerticalFadingEdgeLength()>
SOURCE|<android.app.admin.IDevicePolicyManager$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
SOURCE|<com.android.contacts.dialpad.DialpadFragment$DialpadChooserAdapter: long getItemId(int)>
SOURCE|<java.time.chrono.IsoEra: int getValue()>
SOURCE|<com.android.nfc.NfcService$TagService: int[] getTechList(int)>
SOURCE|<com.android.server.pm.UserManagerService: java.util.List getUsers(boolean)>
SOURCE|<android.view.animation.Animation: long getStartTime()>
SOURCE|<com.android.gallery3d.exif.ExifData: byte[] getCompressedThumbnail()>
SOURCE|<android.os.Bundle: long getLong(java.lang.String)>
SOURCE|<android.view.ViewDebug: long getViewRootImplCount()>
SOURCE|<java.text.SimpleDateFormat: java.util.Date get2DigitYearStart()>
SOURCE|<com.android.internal.telephony.cdma.CdmaConnection: com.android.internal.telephony.Connection$DisconnectCause getDisconnectCause()>
SOURCE|<com.android.internal.view.menu.SubMenuBuilder: com.android.internal.view.menu.MenuBuilder getRootMenu()>
SOURCE|<java.text.CollationKey: int compareTo(java.lang.Object)>
SOURCE|<android.app.LoadedApk$ServiceDispatcher: java.lang.RuntimeException getUnbindLocation()>
SOURCE|<com.android.server.WifiService$Multicaster: int getUid()>
SOURCE|<java.text.DecimalFormat: java.lang.String getNegativeSuffix()>
SOURCE|<org.apache.http.client.utils.URIUtils: java.net.URI resolve(java.net.URI,java.lang.String)>
SOURCE|<android.test.ProviderTestCase: android.test.mock.MockContentResolver getMockContentResolver()>
SOURCE|<android.content.Intent: java.lang.String[] getStringArrayExtra(java.lang.String)>
SOURCE|<com.android.gallery3d.ui.StringTexture: android.text.TextPaint getDefaultPaint(float,int)>
SOURCE|<java.net.HttpURLConnection: java.io.InputStream getErrorStream()>
SOURCE|<android.view.textservice.TextInfo: int getSequence()>
SOURCE|<android.content.pm.IPackageManager$Stub$Proxy: android.content.pm.FeatureInfo[] getSystemAvailableFeatures()>
SOURCE|<android.media.audiofx.BassBoost: android.media.audiofx.BassBoost$Settings getProperties()>
SOURCE|<org.apache.harmony.xml.dom.DocumentImpl: java.lang.String getXmlEncoding()>
SOURCE|<com.android.exchange.utility.SimpleIcsWriter: byte[] getBytes()>
SOURCE|<android.support.v4.view.ViewPager: int getChildDrawingOrder(int,int)>
SOURCE|<android.net.Uri$OpaqueUri: java.lang.String getEncodedFragment()>
SOURCE|<com.google.common.collect.MapMakerInternalMap$WeakExpirableEvictableEntry: com.google.common.collect.MapMakerInternalMap$ReferenceEntry getPreviousEvictable()>
SOURCE|<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: org.apache.http.impl.conn.tsccm.BasicPoolEntry getEntryBlocking(org.apache.http.conn.routing.HttpRoute,java.lang.Object,long,java.util.concurrent.TimeUnit,org.apache.http.impl.conn.tsccm.WaitingThreadAborter)>
SOURCE|<com.android.calendar.Utils: int getFirstDayOfWeek(android.content.Context)>
SOURCE|<com.google.common.collect.MapMakerInternalMap$WeakEntry: com.google.common.collect.MapMakerInternalMap$ReferenceEntry getNextEvictable()>
SOURCE|<com.android.providers.downloads.DownloadProvider$SqlSelection: java.lang.String getSelection()>
SOURCE|<android.widget.NumberPicker: int getValue()>
SOURCE|<org.apache.harmony.xnet.provider.jsse.SSLSocketImpl: java.lang.String getPeerHostName()>
SOURCE|<android.widget.RemoteViewsAdapter: long getItemId(int)>
SOURCE|<android.text.style.MaskFilterSpan: android.graphics.MaskFilter getMaskFilter()>
SOURCE|<com.android.contacts.widget.PinnedHeaderListView: int getPositionAt(int)>
SOURCE|<org.ccil.cowan.tagsoup.Schema: int getEntity(java.lang.String)>
SOURCE|<java.security.spec.RSAMultiPrimePrivateCrtKeySpec: java.security.spec.RSAOtherPrimeInfo[] getOtherPrimeInfo()>
SOURCE|<android.widget.ActivityChooserModel: int getActivityIndex(android.content.pm.ResolveInfo)>
SOURCE|<android.view.MotionEvent: int getDeviceId()>
SOURCE|<android.app.ApplicationPackageManager: android.content.pm.ProviderInfo getProviderInfo(android.content.ComponentName,int)>
SOURCE|<org.apache.harmony.security.x509.GeneralName: byte[] getEncodedName()>
SOURCE|<android.widget.PopupWindow: int getAnimationStyle()>
SOURCE|<org.apache.http.impl.client.AbstractHttpClient: org.apache.http.conn.routing.HttpRoutePlanner getRoutePlanner()>
SOURCE|<org.apache.harmony.security.pkcs7.AuthenticatedAttributes: byte[] getEncoded()>
SOURCE|<java.text.AttributedString$AttributedIterator: int getBeginIndex()>
SOURCE|<com.android.deskclock.worldclock.CitiesActivity$CityAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)>
SOURCE|<org.apache.http.impl.client.DefaultHttpRequestRetryHandler: int getRetryCount()>
SOURCE|<android.graphics.drawable.RotateDrawable: int getIntrinsicHeight()>
SOURCE|<com.android.mms.MmsConfig: java.lang.String getUaProfTagName()>
SOURCE|<java.util.jar.Manifest: java.util.Map getEntries()>
SOURCE|<com.android.inputmethod.latin.SuggestedWords: com.android.inputmethod.latin.SuggestedWords$SuggestedWordInfo getWordInfo(int)>
SOURCE|<com.android.phone.CallTime: long getCallDuration(com.android.internal.telephony.Call)>
SOURCE|<com.android.server.DropBoxManagerService: android.os.DropBoxManager$Entry getNextEntry(java.lang.String,long)>
SOURCE|<com.android.browser.BrowserBookmarksPage: android.graphics.Bitmap getBitmap(android.database.Cursor,int,android.graphics.Bitmap)>
SOURCE|<java.lang.reflect.UndeclaredThrowableException: java.lang.Throwable getCause()>
SOURCE|<org.xml.sax.helpers.XMLFilterImpl: org.xml.sax.EntityResolver getEntityResolver()>
SOURCE|<android.widget.CalendarView: android.graphics.drawable.Drawable getSelectedDateVerticalBar()>
SOURCE|<com.android.camera.ui.MoreSettingPopup$MoreSettingAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)>
SOURCE|<android.app.Fragment: android.app.FragmentManager getChildFragmentManager()>
SOURCE|<android.webkit.WebSettings: java.lang.String getFixedFontFamily()>
SOURCE|<com.android.inputmethod.latin.suggestions.MoreSuggestions$MoreSuggestionsParam: int getNumColumnInRow(int)>
SOURCE|<java.util.ResourceBundle: java.util.ResourceBundle getBundle(java.lang.String)>
SOURCE|<android.location.IGpsStatusListener$Stub: android.os.IBinder asBinder()>
SOURCE|<com.android.internal.telephony.gsm.SmsMessage: int getProtocolIdentifier()>
SOURCE|<com.android.commands.monkey.MonkeyKeyEvent: int getAction()>
SOURCE|<android.nfc.tech.NfcF: android.nfc.tech.NfcF get(android.nfc.Tag)>
SOURCE|<com.android.internal.telephony.cdma.RuimRecords: java.lang.String getMdn()>
SOURCE|<java.net.InetSocketAddress: int getPort()>
SOURCE|<java.time.format.DateTimeFormatterBuilder: void parsePattern(java.lang.String)>
SOURCE|<android.mtp.MtpStorage: long getMaxFileSize()>
SOURCE|<com.google.common.collect.SortedMultisets$DescendingMultiset: com.google.common.collect.SortedMultiset subMultiset(java.lang.Object,com.google.common.collect.BoundType,java.lang.Object,com.google.common.collect.BoundType)>
SOURCE|<android.net.Uri$HierarchicalUri: java.lang.String getEncodedAuthority()>
SOURCE|<android.net.sip.SipProfile: java.lang.String getUriString()>
SOURCE|<android.view.View: float getBottomFadingEdgeStrength()>
SOURCE|<android.media.AudioManager: int getDevicesForStream(int)>
SOURCE|<gov.nist.javax.sip.stack.SIPDialog: java.lang.String getLocalTag()>
SOURCE|<java.time.ZonedDateTime: int getYear()>
SOURCE|<android.hardware.Camera$Parameters: float getHorizontalViewAngle()>
SOURCE|<java.util.LinkedHashMap: java.util.Iterator newValueIterator()>
SOURCE|<com.android.internal.os.BatteryStatsImpl$Uid$Pkg: int getWakeups(int)>
SOURCE|<java.text.MessageFormat: java.text.Format[] getFormats()>
SOURCE|<java.util.concurrent.ThreadPoolExecutor: long getKeepAliveTime(java.util.concurrent.TimeUnit)>
SOURCE|<android.view.MotionEvent: float getY()>
SOURCE|<com.android.org.bouncycastle.asn1.ASN1Set: java.util.Enumeration getObjects()>
SOURCE|<java.io.DataInputStream: int readUnsignedByte()>
SOURCE|<com.android.deskclock.worldclock.WorldClockAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)>
SOURCE|<android.media.audiofx.Visualizer: int getWaveForm(byte[])>
SOURCE|<com.android.deskclock.timer.TimerFragment$TimersListAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)>
SOURCE|<com.google.common.collect.MapMakerInternalMap$NullEntry: com.google.common.collect.MapMakerInternalMap$ReferenceEntry getNextExpirable()>
SOURCE|<android.content.pm.IPackageMoveObserver$Stub: android.os.IBinder asBinder()>
SOURCE|<com.android.calendar.DayView: long getSelectedTimeInMillis()>
SOURCE|<com.android.contacts.dialpad.DialpadFragment$DialpadChooserAdapter: int getCount()>
SOURCE|<com.android.internal.telephony.sip.SipPhone: java.util.List getAllCellInfo()>
SOURCE|<android.graphics.drawable.DrawableContainer$DrawableContainerState: android.graphics.drawable.Drawable[] getChildren()>
SOURCE|<com.android.mms.ui.DeliveryReportActivity$MmsReportRequest: java.lang.String getRecipient()>
SOURCE|<com.android.contacts.group.GroupEditorFragment$Member: long getRawContactId()>
SOURCE|<android.content.res.Resources: void getValue(java.lang.String,android.util.TypedValue,boolean)>
SOURCE|<com.android.server.pm.PackageManagerService: int getPackageUid(java.lang.String,int)>
SOURCE|<org.apache.harmony.xml.ExpatAttributes: int getIndex(java.lang.String)>
SOURCE|<gov.nist.javax.sip.stack.UDPMessageChannel: java.lang.String getViaHost()>
SOURCE|<com.android.videoeditor.service.MovieAudioTrack: int getAudioBitrate()>
SOURCE|<java.util.Arrays$ArrayList: java.lang.Object get(int)>
SOURCE|<java.lang.Class: java.lang.annotation.Annotation[] getAnnotations()>
SOURCE|<com.android.internal.telephony.sip.SipPhone: com.android.internal.telephony.PhoneConstants$DataState getDataConnectionState()>
SOURCE|<android.app.SearchableInfo: int getVoiceLanguageId()>
SOURCE|<com.android.contacts.list.ContactsRequest: android.content.Intent getRedirectIntent()>
SOURCE|<java.text.AttributedString: java.text.AttributedCharacterIterator getIterator(java.text.AttributedCharacterIterator$Attribute[],int,int)>
SOURCE|<android.content.pm.VerificationParams: android.net.Uri getOriginatingURI()>
SOURCE|<java.lang.Class: java.lang.reflect.Field getField(java.lang.String)>
SOURCE|<com.android.email.activity.ShortcutPickerFragment$AccountPickerLoader: android.database.Cursor loadInBackground()>
SOURCE|<gov.nist.javax.sip.header.From: java.lang.String getDisplayName()>
SOURCE|<android.text.method.Touch: int getInitialScrollX(android.widget.TextView,android.text.Spannable)>
SOURCE|<com.android.providers.settings.SettingsBackupAgent: void onRestoreFile(android.os.ParcelFileDescriptor,long,int,java.lang.String,java.lang.String,long,long)>
SOURCE|<java.util.AbstractCollection: java.lang.Object[] toArray()>
SOURCE|<com.android.server.pm.PackageManagerService: android.content.pm.ActivityInfo getReceiverInfo(android.content.ComponentName,int,int)>
SOURCE|<android.database.MergeCursor: java.lang.String[] getColumnNames()>
SOURCE|<android.net.LocalSocket: int getReceiveBufferSize()>
SOURCE|<com.android.server.am.ActivityManagerService: int getRequestedOrientation(android.os.IBinder)>
SOURCE|<com.android.providers.contacts.ContactsDatabaseHelper: long getContactId(long)>
SOURCE|<com.android.bluetooth.hfp.HeadsetService: int getPriority(android.bluetooth.BluetoothDevice)>
SOURCE|<com.android.phone.CdmaPhoneCallState: boolean getAddCallMenuStateAfterCallWaiting()>
SOURCE|<org.apache.harmony.xml.dom.EntityReferenceImpl: java.lang.String getNodeName()>
SOURCE|<org.apache.harmony.security.x509.SubjectPublicKeyInfo: java.security.PublicKey getPublicKey()>
SOURCE|<android.filterpacks.imageproc.DrawRectFilter: android.filterfw.core.FrameFormat getOutputFormat(java.lang.String,android.filterfw.core.FrameFormat)>
SOURCE|<com.android.deskclock.widget.multiwaveview.PointCloud: int getAlphaForPoint(com.android.deskclock.widget.multiwaveview.PointCloud$Point)>
SOURCE|<android.widget.ExpandableListView: long getSelectedPosition()>
SOURCE|<com.google.android.mms.pdu.PduPart: byte[] getContentType()>
SOURCE|<com.coremedia.iso.boxes.SampleTableBox: com.coremedia.iso.boxes.SampleToChunkBox getSampleToChunkBox()>
SOURCE|<com.android.inputmethod.latin.RichInputConnection: java.lang.String getWordAtCursor(java.lang.String)>
SOURCE|<com.coremedia.iso.boxes.FileTypeBox: long getMinorVersion()>
SOURCE|<com.android.calendar.Utils: long getTardis()>
SOURCE|<gov.nist.core.NameValue: java.lang.Object getValue()>
SOURCE|<com.android.mms.dom.DocumentImpl: java.lang.String getDocumentURI()>
SOURCE|<com.google.common.collect.ForwardingIterator: java.lang.Object delegate()>
SOURCE|<android.filterfw.core.FilterPort: android.filterfw.core.Filter getFilter()>
SOURCE|<org.apache.harmony.xml.dom.CDATASectionImpl: java.lang.String getNodeName()>
SOURCE|<android.view.animation.LayoutAnimationController: android.view.animation.Animation getAnimation()>
SOURCE|<com.android.emailcommon.internet.MimeBodyPart: java.lang.String[] getHeader(java.lang.String)>
SOURCE|<java.time.ZonedDateTime: java.time.DayOfWeek getDayOfWeek()>
SOURCE|<com.android.calendar.selectcalendars.SelectCalendarsSyncAdapter: long getItemId(int)>
SOURCE|<com.android.server.am.ActivityStack: android.graphics.Bitmap getTaskTopThumbnailLocked(com.android.server.am.TaskRecord)>
SOURCE|<android.filterfw.core.Frame: int getRefCount()>
SOURCE|<android.net.http.RequestQueue$SyncFeeder: android.net.http.Request getRequest()>
SOURCE|<android.view.animation.Animation: boolean getDetachWallpaper()>
SOURCE|<android.filterfw.core.Filter: java.lang.String toString()>
SOURCE|<android.graphics.drawable.AnimatedRotateDrawable: int getIntrinsicWidth()>
SOURCE|<com.android.contacts.widget.PinnedHeaderListDemoActivity$TestPinnedHeaderListAdapter: android.view.View getPinnedHeaderView(int,android.view.View,android.view.ViewGroup)>
SOURCE|<com.google.common.collect.ImmutableCollection: java.lang.Object[] toArray()>
SOURCE|<gov.nist.javax.sip.stack.MessageChannel: gov.nist.javax.sip.header.Via getViaHeader()>
SOURCE|<org.apache.http.impl.conn.tsccm.ThreadSafeClientConnManager: int getConnectionsInPool()>
SOURCE|<com.android.internal.telephony.gsm.GSMPhone: boolean getDataRoamingEnabled()>
SOURCE|<android.widget.GridLayout$Axis: int[] getLocations()>
SOURCE|<android.widget.TextView: int getMinWidth()>
SOURCE|<com.android.contacts.model.account.BaseAccountType: com.android.contacts.model.dataitem.DataKind addDataKindWebsite(android.content.Context)>
SOURCE|<java.net.HttpURLConnection: java.lang.String getContentEncoding()>
SOURCE|<com.android.gallery3d.data.SnailItem: com.android.gallery3d.ui.ScreenNail getScreenNail()>
SOURCE|<com.android.server.connectivity.Vpn: com.android.internal.net.VpnConfig getLegacyVpnConfig()>
SOURCE|<libcore.icu.NativeDecimalFormat: int getMaximumIntegerDigits()>
SOURCE|<com.android.videoeditor.service.VideoEditorProject: com.android.videoeditor.service.MovieMediaItem getNextMediaItem(java.lang.String)>
SOURCE|<java.lang.Runtime: void loadLibrary(java.lang.String)>
SOURCE|<android.content.ContentResolver: android.content.IContentProvider acquireExistingProvider(android.content.Context,java.lang.String)>
SOURCE|<gov.nist.javax.sip.stack.SIPTransactionStack: gov.nist.core.StackLogger getStackLogger()>
SOURCE|<android.os.Debug: void printLoadedClasses(int)>
SOURCE|<javax.net.ssl.SSLEngine: javax.net.ssl.SSLEngineResult wrap(java.nio.ByteBuffer,java.nio.ByteBuffer)>
SOURCE|<com.android.ex.chips.BaseRecipientAdapter: java.util.List access$400(com.android.ex.chips.BaseRecipientAdapter,boolean,java.util.LinkedHashMap,java.util.List,java.util.Set)>
SOURCE|<org.apache.harmony.security.x509.CertificateList: byte[] getSignatureValue()>
SOURCE|<com.android.browser.AutofillHandler: android.webkit.WebSettingsClassic$AutoFillProfile getAutoFillProfile()>
SOURCE|<com.android.phone.EmergencyCallbackModeService$LocalBinder: com.android.phone.EmergencyCallbackModeService getService()>
SOURCE|<org.apache.harmony.xnet.provider.jsse.OpenSSLDSAPrivateKey: java.math.BigInteger getX()>
SOURCE|<java.net.Inet6Address: java.net.Inet6Address getByAddress(java.lang.String,byte[],int)>
SOURCE|<com.android.musicfx.seekbar.ProgressBar: android.graphics.drawable.shapes.Shape getDrawableShape()>
SOURCE|<android.net.wifi.WifiManager: java.util.List getScanResults()>
SOURCE|<com.android.internal.telephony.sip.SipPhone: com.android.internal.telephony.Call getRingingCall()>
SOURCE|<com.google.android.picasasync.PicasaSyncManager: com.google.android.picasasync.PicasaSyncManager get(android.content.Context)>
SOURCE|<com.google.common.collect.ForwardingSet: int standardHashCode()>
SOURCE|<javax.net.ssl.HandshakeCompletedEvent: java.security.Principal getPeerPrincipal()>
SOURCE|<com.android.contacts.list.ContactTileView: android.view.View$OnClickListener createClickListener()>
SOURCE|<libcore.net.http.RequestHeaders: java.net.URI getUri()>
SOURCE|<java.time.LocalDateTime: int getDayOfYear()>
SOURCE|<java.time.OffsetDateTime: long getLong(java.time.temporal.TemporalField)>
SOURCE|<android.app.Fragment: android.content.res.Resources getResources()>
SOURCE|<java.lang.Package: java.lang.'annotation'.Annotation[] getDeclaredAnnotations()>
SOURCE|<java.util.ResourceBundle$MissingBundle: java.util.Enumeration getKeys()>
SOURCE|<com.android.launcher2.PagedViewCellLayout: int getWidthBeforeFirstLayout()>
SOURCE|<java.util.MissingFormatWidthException: java.lang.String getFormatSpecifier()>
SOURCE|<java.io.RandomAccessFile: java.lang.String readLine()>
SOURCE|<android.text.StaticLayout: android.text.Layout$Directions getLineDirections(int)>
SOURCE|<com.android.contacts.group.GroupEditorFragment$Member: android.net.Uri getPhotoUri()>
SOURCE|<com.android.bluetooth.pbap.BluetoothPbapService: java.lang.String getLocalPhoneNum()>
SOURCE|<java.sql.DriverManager: java.sql.Connection getConnection(java.lang.String,java.lang.String,java.lang.String)>
SOURCE|<android.webkit.JniUtil: android.content.Context getContext()>
SOURCE|<com.android.providers.contacts.ContactsDatabaseHelper: java.lang.String getProperty(java.lang.String,java.lang.String)>
SOURCE|<android.os.Message: android.os.Handler getTarget()>
SOURCE|<android.widget.AbsListView: int getTranscriptMode()>
SOURCE|<android.media.videoeditor.Transition: java.util.List isEffectandOverlayOverlapping(android.media.videoeditor.MediaItem,android.media.videoeditor.MediaArtistNativeHelper$ClipSettings,int)>
SOURCE|<com.android.launcher2.CellLayout: int getCellWidth()>
SOURCE|<org.apache.commons.logging.LogFactory$2: java.lang.Object run()>
SOURCE|<android.view.accessibility.AccessibilityNodeInfo: int getVirtualDescendantId(long)>
SOURCE|<com.android.contacts.vcard.ProcessorBase: java.lang.Object get(long,java.util.concurrent.TimeUnit)>
SOURCE|<com.google.android.picasasync.PhotoCollectorJson: java.util.Map getEntryFieldMap()>
SOURCE|<android.hardware.SensorManager: java.util.List getSensorList(int)>
SOURCE|<android.accounts.AccountManagerService: android.accounts.Account[] getAccountsFromCacheLocked(android.accounts.AccountManagerService$UserAccounts,java.lang.String)>
SOURCE|<android.telephony.gsm.GsmCellLocation: int getLac()>
SOURCE|<com.android.providers.downloads.DownloadHandler: long getCurrentSpeed(long)>
SOURCE|<com.android.server.accessibility.TouchExplorer$ReceivedPointerTracker: float getReceivedPointerDownY(int)>
SOURCE|<android.graphics.Bitmap: android.graphics.Bitmap createBitmap(android.graphics.Bitmap,int,int,int,int,android.graphics.Matrix,boolean)>
SOURCE|<android.animation.ValueAnimator: android.animation.TimeInterpolator getInterpolator()>
SOURCE|<android.view.inputmethod.CorrectionInfo: java.lang.CharSequence getNewText()>
SOURCE|<com.google.android.picasasync.UploadsManager: com.google.android.picasasync.UploadsDatabaseHelper getUploadsDatabaseHelper()>
SOURCE|<com.android.launcher2.LauncherApplication: java.lang.String getSharedPreferencesKey()>
SOURCE|<android.webkit.WebSettingsClassic: boolean getSavePassword()>
SOURCE|<android.provider.MediaStore$Files: android.net.Uri getContentUri(java.lang.String,long)>
SOURCE|<com.android.gallery3d.data.UnlockImage: int getSupportedOperations()>
SOURCE|<android.app.ApplicationPackageManager: android.graphics.drawable.Drawable getApplicationLogo(java.lang.String)>
SOURCE|<android.media.AudioTrack: int getNativeFrameCount()>
SOURCE|<java.security.cert.PolicyQualifierInfo: java.lang.String getPolicyQualifierId()>
SOURCE|<gov.nist.javax.sip.Utils: gov.nist.javax.sip.Utils getInstance()>
SOURCE|<android.media.videoeditor.MediaImageItem: long getTimelineDuration()>
SOURCE|<java.util.AbstractMap: java.util.Set keySet()>
SOURCE|<android.graphics.drawable.ScaleDrawable: int getIntrinsicHeight()>
SOURCE|<android.filterfw.core.SimpleFrame: int[] getInts()>
SOURCE|<gov.nist.javax.sip.address.SipUri: java.util.Iterator getHeaderNames()>
SOURCE|<android.app.LocalActivityManager: android.app.Activity getActivity(java.lang.String)>
SOURCE|<android.view.View: android.content.res.Resources getResources()>
SOURCE|<android.hardware.Sensor: int getMinDelay()>
SOURCE|<com.android.server.MountService: java.lang.String getVolumeState(java.lang.String)>
SOURCE|<android.widget.OverScroller: int getFinalY()>
SOURCE|<com.android.internal.telephony.gsm.GsmDataConnectionTracker: int getApnProfileID(java.lang.String)>
SOURCE|<com.android.internal.view.BaseSurfaceHolder: android.view.Surface getSurface()>
SOURCE|<java.lang.reflect.Field: java.lang.'annotation'.Annotation getAnnotation(java.lang.Class)>
SOURCE|<com.google.common.collect.MapMakerInternalMap$AbstractReferenceEntry: com.google.common.collect.MapMakerInternalMap$ReferenceEntry getNextEvictable()>
SOURCE|<com.android.mms.transaction.Transaction: com.android.mms.transaction.TransactionState getState()>
SOURCE|<android.widget.Chronometer: android.widget.Chronometer$OnChronometerTickListener getOnChronometerTickListener()>
SOURCE|<android.app.admin.IDevicePolicyManager$Stub$Proxy: boolean isAdminActive(android.content.ComponentName,int)>
SOURCE|<com.android.systemui.recent.RecentTasksLoader: android.graphics.drawable.Drawable getFullResIcon(android.content.res.Resources,int)>
SOURCE|<android.view.View: float getPivotY()>
SOURCE|<android.content.ISyncStatusObserver$Stub: android.os.IBinder asBinder()>
SOURCE|<com.android.inputmethod.latin.spellcheck.DictionaryPool: com.android.inputmethod.latin.spellcheck.DictAndProximity poll(long,java.util.concurrent.TimeUnit)>
SOURCE|<android.widget.LinearLayout: int getNextLocationOffset(android.view.View)>
SOURCE|<android.media.ExifInterface: double getAltitude(double)>
SOURCE|<com.android.email.mail.store.ImapFolder: java.lang.String[] getSearchUids(java.util.List)>
SOURCE|<com.android.email.activity.MessagesAdapter$MessagesCursorLoader: android.database.Cursor wrapCursor(android.database.Cursor,boolean,com.android.emailcommon.provider.Account,com.android.emailcommon.provider.Mailbox,boolean,boolean,int)>
SOURCE|<com.android.contacts.model.account.AccountType: java.lang.String getInviteContactActivityClassName()>
SOURCE|<javax.net.ssl.CertPathTrustManagerParameters: java.security.cert.CertPathParameters getParameters()>
SOURCE|<org.apache.harmony.xnet.provider.jsse.OpenSSLServerSocketImpl: boolean getEnableSessionCreation()>
SOURCE|<android.view.View: int getWindowVisibility()>
SOURCE|<android.widget.Spinner$DropDownAdapter: long getItemId(int)>
SOURCE|<org.apache.harmony.xml.ExpatParser$CurrentAttributes: int getParserPointer()>
SOURCE|<com.android.internal.policy.impl.keyguard.KeyguardWidgetPager: float getOutlineAlphaForPage(int,int,boolean)>
SOURCE|<com.android.commands.monkey.MonkeySourceNetworkVars$6: java.lang.String get()>
SOURCE|<com.google.common.collect.ImmutableMap: java.util.Set keySet()>
SOURCE|<com.android.server.am.ActivityStack: com.android.server.am.TaskAccessInfo getTaskAccessInfoLocked(int,boolean)>
SOURCE|<gov.nist.javax.sip.stack.MessageChannel: java.lang.String getRawIpSourceAddress()>
SOURCE|<com.android.vcard.VCardEntry$NoteData: com.android.vcard.VCardEntry$EntryLabel getEntryLabel()>
SOURCE|<gov.nist.javax.sip.header.HeaderFactoryImpl: javax.sip.header.RSeqHeader createRSeqHeader(int)>
SOURCE|<com.android.internal.telephony.gsm.UsimServiceTable: java.lang.String getTag()>
SOURCE|<android.database.IContentObserver$Stub: android.os.IBinder asBinder()>
SOURCE|<gov.nist.javax.sip.address.SipUri: int getPort()>
SOURCE|<org.xml.sax.helpers.ParserAdapter$AttributeListAdapter: java.lang.String getValue(java.lang.String)>
SOURCE|<com.android.calendar.month.SimpleWeeksAdapter: long getItemId(int)>
SOURCE|<com.android.calendar.CalendarViewAdapter: android.view.View getDropDownView(int,android.view.View,android.view.ViewGroup)>
SOURCE|<com.google.android.picasasync.PicasaDatabaseHelper: android.database.sqlite.SQLiteDatabase getReadableDatabase()>
SOURCE|<org.xmlpull.v1.sax2.Driver: java.lang.String getType(java.lang.String,java.lang.String)>
SOURCE|<com.google.common.collect.AbstractMultimap$WrappedCollection: com.google.common.collect.AbstractMultimap$WrappedCollection getAncestor()>
SOURCE|<java.nio.charset.CharsetDecoder: float averageCharsPerByte()>
SOURCE|<gov.nist.javax.sip.address.SipUri: java.lang.String getMethodParam()>
SOURCE|<android.animation.FloatKeyframeSet: float getFloatValue(float)>
SOURCE|<android.net.Uri$AbstractPart: java.lang.String getDecoded()>
SOURCE|<com.android.server.net.NetworkStatsCollection: long getStartMillis()>
SOURCE|<gov.nist.javax.sip.header.StatusLine: java.lang.String getReasonPhrase()>
SOURCE|<android.provider.ContactsContract$CommonDataKinds$Phone: java.lang.CharSequence getDisplayLabel(android.content.Context,int,java.lang.CharSequence)>
SOURCE|<android.text.TextUtils: int getCapsMode(java.lang.CharSequence,int,int)>
SOURCE|<android.content.res.XmlBlock$Parser: java.lang.String getIdAttribute()>
SOURCE|<java.util.ArrayDeque: java.lang.Object getFirst()>
SOURCE|<android.accessibilityservice.AccessibilityServiceInfo: java.lang.String getDescription()>
SOURCE|<com.android.email.provider.EmailProvider: android.database.Cursor mostRecentMessageQuery(android.net.Uri)>
SOURCE|<com.android.internal.util.FastXmlSerializer: java.lang.String getPrefix(java.lang.String,boolean)>
SOURCE|<android.emoji.EmojiFactory: int getMaximumAndroidPua()>
SOURCE|<android.test.mock.MockPackageManager: android.content.pm.ProviderInfo getProviderInfo(android.content.ComponentName,int)>
SOURCE|<com.android.deskclock.widget.multiwaveview.Ease$Sine$1: float getInterpolation(float)>
SOURCE|<android.content.pm.IPackageManager$Stub$Proxy: java.util.List queryIntentActivityOptions(android.content.ComponentName,android.content.Intent[],java.lang.String[],android.content.Intent,java.lang.String,int,int)>
SOURCE|<com.android.browser.Controller: com.android.browser.BrowserSettings getSettings()>
SOURCE|<android.os.Debug$MemoryInfo: int getOtherPrivateDirty(int)>
SOURCE|<java.time.DayOfWeek: long getLong(java.time.temporal.TemporalField)>
SOURCE|<android.media.videoeditor.MediaItem: android.media.videoeditor.MediaArtistNativeHelper$ClipSettings getClipSettings()>
SOURCE|<android.media.AudioService$SetModeDeathHandler: android.os.IBinder getBinder()>
SOURCE|<com.android.email.Preferences: android.content.SharedPreferences getSharedPreferences(android.content.Context)>
SOURCE|<android.provider.MediaStore$Audio$Artists: android.net.Uri getContentUri(java.lang.String)>
SOURCE|<com.android.browser.view.BookmarkExpandableView: com.android.browser.BrowserBookmarksAdapter getChildAdapter(int)>
SOURCE|<com.android.inputmethod.compat.CompatUtils: java.lang.Class getClass(java.lang.String)>
SOURCE|<android.text.style.SuggestionSpan: java.lang.String getLocale()>
SOURCE|<gov.nist.javax.sip.stack.TLSMessageProcessor: int getDefaultTargetPort()>
SOURCE|<android.view.View: android.view.accessibility.AccessibilityNodeInfo createAccessibilityNodeInfo()>
SOURCE|<org.apache.http.auth.AuthState: org.apache.http.auth.Credentials getCredentials()>
SOURCE|<android.view.textservice.TextServicesManager: android.view.textservice.SpellCheckerSubtype getCurrentSpellCheckerSubtype(boolean)>
SOURCE|<org.apache.http.impl.client.RequestWrapper: org.apache.http.RequestLine getRequestLine()>
SOURCE|<javax.obex.ClientOperation: java.lang.String getType()>
SOURCE|<com.android.browser.provider.BrowserProvider$MySuggestionCursor: float getFloat(int)>
SOURCE|<javax.security.auth.callback.UnsupportedCallbackException: javax.security.auth.callback.Callback getCallback()>
SOURCE|<android.content.pm.PackageParser: int getParseError()>
SOURCE|<android.os.storage.IMountService$Stub$Proxy: java.lang.String getSecureContainerPath(java.lang.String)>
SOURCE|<android.net.DnsPinger: java.util.List getDnsList()>
SOURCE|<com.android.calendar.Utils: java.lang.String getWidgetUpdateAction(android.content.Context)>
SOURCE|<android.view.MotionEvent: float getHistoricalToolMinor(int,int)>
SOURCE|<libcore.net.http.ResponseHeaders: java.util.Date getLastModified()>
SOURCE|<com.android.nfc.dhimpl.NativeLlcpConnectionlessSocket: int getLinkMiu()>
SOURCE|<com.android.calendar.agenda.AgendaWindowAdapter: int getItemViewType(int)>
SOURCE|<android.graphics.drawable.ScaleDrawable: android.graphics.drawable.Drawable$ConstantState getConstantState()>
SOURCE|<java.lang.reflect.Array: char getChar(java.lang.Object,int)>
SOURCE|<com.android.soundrecorder.Recorder: int getMaxAmplitude()>
SOURCE|<android.os.Bundle: char getChar(java.lang.String,char)>
SOURCE|<android.nfc.tech.MifareUltralight: int getMaxTransceiveLength()>
SOURCE|<com.android.phone.PhoneGlobals: android.app.Activity getPUKEntryActivity()>
SOURCE|<com.android.inputmethod.latin.SettingsValues: android.view.inputmethod.InputMethodSubtype[] getAdditionalSubtypes()>
SOURCE|<android.net.INetworkStatsService$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
SOURCE|<android.content.ContentValues: java.lang.Object get(java.lang.String)>
SOURCE|<com.android.providers.telephony.MmsSmsProvider: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>
SOURCE|<com.android.gallery3d.ui.FadeTexture: float getRatio()>
SOURCE|<android.telephony.SignalStrength: int getEvdoAsuLevel()>
SOURCE|<java.nio.channels.SelectableChannel: java.nio.channels.SelectionKey register(java.nio.channels.Selector,int)>
SOURCE|<org.apache.harmony.xnet.provider.jsse.CipherSuite: byte[] toBytes()>
SOURCE|<java.nio.ReadOnlyHeapByteBuffer: byte[] protectedArray()>
SOURCE|<org.apache.harmony.xml.dom.ElementImpl: java.lang.String getTagName()>
SOURCE|<com.android.systemui.ExpandHelper$ViewScaler: int getNaturalHeight(int)>
SOURCE|<android.telephony.SmsMessage: int getIndexOnIcc()>
SOURCE|<com.android.internal.telephony.cdma.CDMALTEPhone: void getEnhancedVoicePrivacy(android.os.Message)>
SOURCE|<android.media.videoeditor.AudioTrack: java.lang.String getId()>
SOURCE|<com.android.launcher2.Hotseat: int getOrderInHotseat(int,int)>
SOURCE|<com.android.email.provider.ContentCache$CounterMap: int getCount(java.lang.Object)>
SOURCE|<com.android.gallery3d.app.Config$ManageCachePage: com.android.gallery3d.app.Config$ManageCachePage get(android.content.Context)>
SOURCE|<gov.nist.javax.sip.header.ims.SecurityAgree: java.lang.String encodeBody()>
SOURCE|<org.apache.http.ProtocolVersion: int getMinor()>
SOURCE|<java.nio.LongBuffer: java.nio.LongBuffer get(long[],int,int)>
SOURCE|<android.database.sqlite.SQLiteDatabase: int getThreadDefaultConnectionFlags(boolean)>
SOURCE|<gov.nist.javax.sip.stack.UDPMessageChannel: int getPort()>
SOURCE|<android.animation.AnimatorSet: long getStartDelay()>
SOURCE|<android.net.wifi.WifiManager: android.net.wifi.WifiInfo getConnectionInfo()>
SOURCE|<android.net.sip.SipManager: java.lang.String getCallId(android.content.Intent)>
SOURCE|<android.filterfw.format.ImageFormat: android.filterfw.core.MutableFrameFormat create(int)>
SOURCE|<com.android.internal.telephony.IPhoneSubInfo$Stub$Proxy: java.lang.String getVoiceMailNumber()>
SOURCE|<com.android.gallery3d.data.LocalAlbumSet: com.android.gallery3d.data.MediaSet getSubMediaSet(int)>
SOURCE|<org.apache.http.impl.client.DefaultRequestDirector: org.apache.http.HttpRequest createConnectRequest(org.apache.http.conn.routing.HttpRoute,org.apache.http.protocol.HttpContext)>
SOURCE|<com.android.emailcommon.utility.AttachmentUtilities: java.io.File getAttachmentFilename(android.content.Context,long,long)>
SOURCE|<com.android.systemui.statusbar.phone.PanelHolder: int getPanelIndex(com.android.systemui.statusbar.phone.PanelView)>
SOURCE|<gov.nist.javax.sip.message.SIPMessage: javax.sip.header.ContentLanguageHeader getContentLanguage()>
SOURCE|<java.beans.PropertyChangeEvent: java.lang.Object getPropagationId()>
SOURCE|<gov.nist.javax.sip.stack.SIPTransaction: java.net.InetAddress getPeerPacketSourceAddress()>
SOURCE|<com.android.server.WiredAccessoryManager$WiredAccessoryObserver$UEventInfo: java.lang.String getDevPath()>
SOURCE|<java.lang.Integer: int parseInt(java.lang.String,int)>
SOURCE|<android.net.sip.SimpleSessionDescription$Media: java.lang.String[] getAttributeNames()>
SOURCE|<com.android.contacts.model.dataitem.GroupMembershipDataItem: long getGroupRowId()>
SOURCE|<com.google.android.apps.lightcycle.storage.StorageManagerFactory: com.google.android.apps.lightcycle.storage.StorageManager getStorageManager()>
SOURCE|<com.android.server.net.NetworkStatsService: long getNetworkTotalBytes(android.net.NetworkTemplate,long,long)>
SOURCE|<com.android.mms.data.WorkingMessage: java.lang.CharSequence getText()>
SOURCE|<android.widget.ListPopupWindow: long getSelectedItemId()>
SOURCE|<com.android.internal.telephony.gsm.VoiceMailConstants: java.lang.String getCarrierName(java.lang.String)>
SOURCE|<android.widget.Switch: int getSwitchPadding()>
SOURCE|<android.preference.TwoStatePreference: java.lang.CharSequence getSummaryOn()>
SOURCE|<org.apache.harmony.security.x509.GeneralSubtree: org.apache.harmony.security.x509.GeneralName getBase()>
SOURCE|<android.net.wifi.WifiConfigStore: java.util.List getConfiguredNetworks()>
SOURCE|<android.media.videoeditor.MediaImageItem: int getGeneratedClipHeight()>
SOURCE|<android.inputmethodservice.InputMethodService: java.lang.CharSequence getTextForImeAction(int)>
SOURCE|<android.widget.ActivityChooserView$ActivityChooserViewAdapter: android.content.pm.ResolveInfo getDefaultActivity()>
SOURCE|<com.android.server.NetworkManagementSocketTagger: int getThreadSocketStatsTag()>
SOURCE|<org.xml.sax.InputSource: java.io.InputStream getByteStream()>
SOURCE|<com.android.contacts.list.ContactListFilterController: com.android.contacts.list.ContactListFilterController getInstance(android.content.Context)>
SOURCE|<android.widget.Toast: android.view.View getView()>
SOURCE|<java.text.DateFormatSymbols: java.text.DateFormatSymbols getInstance(java.util.Locale)>
SOURCE|<android.widget.CursorTreeAdapter: android.database.Cursor getChild(int,int)>
SOURCE|<com.android.gallery3d.data.MediaSet$MultiSetSyncFuture: java.lang.Integer get()>
SOURCE|<com.android.internal.widget.AbsActionBarView: int getAnimatedVisibility()>
SOURCE|<libcore.net.http.HttpsURLConnectionImpl: java.security.cert.Certificate[] getServerCertificates()>
SOURCE|<com.android.internal.telephony.IPhoneSubInfo$Stub$Proxy: java.lang.String getSubscriberId()>
SOURCE|<android.database.CursorWrapper: int getColumnIndexOrThrow(java.lang.String)>
SOURCE|<android.animation.Keyframe$FloatKeyframe: float getFloatValue()>
SOURCE|<com.android.browser.BackgroundHandler: android.os.Looper getLooper()>
SOURCE|<com.android.mms.widget.MmsWidgetService$MmsFactory: android.widget.RemoteViews getLoadingView()>
SOURCE|<com.android.browser.preferences.WebsiteSettingsFragment$SiteAdapter: int getCount()>
SOURCE|<android.app.ActivityManagerProxy: android.app.IActivityManager$ContentProviderHolder getContentProvider(android.app.IApplicationThread,java.lang.String,int,boolean)>
SOURCE|<android.graphics.BitmapRegionDecoder: int getWidth()>
SOURCE|<com.android.gallery3d.data.FaceClustering: java.lang.String getClusterName(int)>
SOURCE|<com.android.gallery3d.ui.GLRootView: int getDisplayRotation()>
SOURCE|<java.io.File: long getFreeSpace()>
SOURCE|<android.animation.PropertyValuesHolder: java.lang.String getMethodName(java.lang.String,java.lang.String)>
SOURCE|<org.xml.sax.helpers.XMLReaderFactory: org.xml.sax.XMLReader createXMLReader(java.lang.String)>
SOURCE|<java.text.Format: java.lang.Object clone()>
SOURCE|<dalvik.system.profiler.BinaryHprof$Tag: dalvik.system.profiler.BinaryHprof$Tag get(byte)>
SOURCE|<com.android.contacts.model.RawContactModifier: com.android.contacts.model.account.AccountType$EditType getBestValidType(com.android.contacts.model.RawContactDelta,com.android.contacts.model.dataitem.DataKind,boolean,int)>
SOURCE|<com.android.internal.os.BatteryStatsImpl$Uid: int getUserActivityCount(int,int)>
SOURCE|<gov.nist.javax.sip.header.Accept: float getQValue()>
SOURCE|<com.android.providers.contacts.ContactLocaleUtils: java.util.Iterator getNameLookupKeys(java.lang.String,int)>
SOURCE|<com.android.browser.provider.BrowserProvider2: android.database.sqlite.SQLiteOpenHelper getDatabaseHelper(android.content.Context)>
SOURCE|<libcore.net.http.ResponseHeaders: libcore.net.http.RawHeaders getHeaders()>
SOURCE|<com.android.contacts.model.account.GoogleAccountType: java.util.List getExtensionPackageNames()>
SOURCE|<org.apache.harmony.xnet.provider.jsse.TrustedCertificateStore: java.util.List getCertificateChain(java.security.cert.X509Certificate)>
SOURCE|<java.lang.ref.Reference: java.lang.Object get()>
SOURCE|<com.android.internal.telephony.SmsMessageBase: com.android.internal.telephony.SmsHeader getUserDataHeader()>
SOURCE|<java.security.KeyStore$TrustedCertificateEntry: java.security.cert.Certificate getTrustedCertificate()>
SOURCE|<android.os.PatternMatcher: java.lang.String getPath()>
SOURCE|<com.android.server.wm.WindowState: int getSurfaceLayer()>
SOURCE|<android.test.mock.MockContext: java.lang.String getPackageName()>
SOURCE|<com.android.server.am.ActivityStack: android.app.ActivityManager$TaskThumbnails getTaskThumbnailsLocked(com.android.server.am.TaskRecord)>
SOURCE|<android.net.TrafficStats: int getThreadStatsTag()>
SOURCE|<com.android.exchange.utility.CalendarUtilities: com.android.exchange.utility.CalendarUtilities$TimeZoneDate getTimeZoneDateFromSystemTime(byte[],int)>
SOURCE|<android.media.videoeditor.MediaItem: int getRenderingMode()>
SOURCE|<android.view.View: float getRotationY()>
SOURCE|<com.android.launcher2.PagedView: float distanceInfluenceForSnapDuration(float)>
SOURCE|<android.view.MotionEvent: float getTouchMinor(int)>
SOURCE|<java.util.IntSummaryStatistics: double getAverage()>
SOURCE|<android.app.SearchableInfo: int getImeOptions()>
SOURCE|<android.webkit.WebSettings: java.lang.String getDatabasePath()>
SOURCE|<com.android.launcher2.PagedView: int getPageNearestToCenterOfScreen()>
SOURCE|<android.net.wifi.p2p.nsd.WifiP2pServiceResponse: int getServiceType()>
SOURCE|<android.media.AudioManager: int getRouting(int)>
SOURCE|<com.android.emailcommon.utility.SSLUtils$StubKeyManager: java.lang.String[] getClientAliases(java.lang.String,java.security.Principal[])>
SOURCE|<com.android.systemui.statusbar.phone.QuickSettings: com.android.systemui.statusbar.phone.PhoneStatusBar getService()>
SOURCE|<com.android.internal.app.IUsageStats$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
SOURCE|<gov.nist.javax.sip.SipStackImpl: javax.sip.SipListener getSipListener()>
SOURCE|<android.webkit.WebSettings: boolean getDomStorageEnabled()>
SOURCE|<com.android.contacts.model.Contact: boolean getStarred()>
SOURCE|<com.android.internal.widget.IRemoteViewsFactory$Stub$Proxy: int getCount()>
SOURCE|<android.app.ApplicationPackageManager: int getUidForSharedUser(java.lang.String)>
SOURCE|<com.android.internal.view.menu.MenuPopupHelper$MenuAdapter: long getItemId(int)>
SOURCE|<gov.nist.javax.sip.message.SIPRequest: java.lang.String getSIPVersion()>
SOURCE|<com.android.providers.contacts.VoicemailContentProvider: com.android.providers.contacts.ContactsDatabaseHelper getDatabaseHelper(android.content.Context)>
SOURCE|<android.app.LocalActivityManager: android.os.Bundle saveInstanceState()>
SOURCE|<com.android.internal.telephony.ITelephony$Stub: android.os.IBinder asBinder()>
SOURCE|<com.android.email.Preferences: boolean getEnableStrictMode()>
SOURCE|<com.android.internal.telephony.IccRecords: int getVoiceMessageCount()>
SOURCE|<com.android.internal.telephony.gsm.GsmDataConnection: int getProfileId()>
SOURCE|<com.android.browser.BrowserSettings: java.lang.String getFactoryResetHomeUrl(android.content.Context)>
SOURCE|<android.app.Service: android.app.Application getApplication()>
SOURCE|<android.test.mock.MockContext: java.io.File getExternalFilesDir(java.lang.String)>
SOURCE|<com.android.gallery3d.picasasource.BasePicasaAlbum: android.database.Cursor internalQuery(int,int)>
SOURCE|<com.android.launcher2.DragLayer: int getChildDrawingOrder(int,int)>
SOURCE|<com.android.phone.Ringer$Worker: android.os.Looper getLooper()>
SOURCE|<com.android.gallery3d.data.SingleItemAlbum: java.util.ArrayList getMediaItem(int,int)>
SOURCE|<com.android.internal.telephony.DataConnection: com.android.internal.telephony.DataConnection$UpdateLinkPropertyResult access$500(com.android.internal.telephony.DataConnection,com.android.internal.telephony.DataCallState)>
SOURCE|<android.media.videoeditor.MediaArtistNativeHelper: int getVideoTransitionBehaviour(int)>
SOURCE|<com.android.internal.view.menu.MenuBuilder: java.lang.CharSequence getHeaderTitle()>
SOURCE|<com.android.calendar.GeneralPreferences: java.lang.String getRingtoneTitleFromUri(android.content.Context,java.lang.String)>
SOURCE|<com.android.inputmethod.latin.Suggest: com.android.inputmethod.latin.ContactsBinaryDictionary getContactsDictionary()>
SOURCE|<org.apache.commons.codec.binary.Hex: byte[] decode(byte[])>
SOURCE|<com.android.calendar.EventInfoFragment: android.database.Cursor access$2000(com.android.calendar.EventInfoFragment)>
SOURCE|<android.net.wifi.p2p.WifiP2pDeviceList: java.util.Collection getDeviceList()>
SOURCE|<com.android.internal.telephony.sip.SipPhoneBase: android.telephony.CellLocation getCellLocation()>
SOURCE|<com.android.email.activity.MessageViewFragmentBase$LoadAttachmentsTask: com.android.emailcommon.provider.EmailContent$Attachment[] doInBackground(java.lang.Long[])>
SOURCE|<java.io.DataInputStream: double readDouble()>
SOURCE|<com.android.internal.widget.multiwaveview.Ease$Quad$3: float getInterpolation(float)>
SOURCE|<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>
SOURCE|<com.android.org.bouncycastle.asn1.BEROctetStringParser: java.io.InputStream getOctetStream()>
SOURCE|<com.android.providers.contacts.ContactsDatabaseHelper: com.android.common.content.SyncStateContentProviderHelper getSyncState()>
SOURCE|<com.android.contacts.calllog.CallTypeHelper: java.lang.Integer getHighlightedColor(int)>
SOURCE|<android.webkit.WebViewClassic: android.view.View getZoomControls()>
SOURCE|<com.android.inputmethod.latin.SuggestedWords: java.util.ArrayList getFromApplicationSpecifiedCompletions(android.view.inputmethod.CompletionInfo[])>
SOURCE|<android.database.sqlite.SQLiteGlobal: int getWALAutoCheckpoint()>
SOURCE|<libcore.net.http.HttpConnection: javax.net.ssl.SSLSocket getSecureSocketIfConnected()>
SOURCE|<com.android.internal.telephony.gsm.GsmDataConnectionTracker: android.net.LinkProperties getLinkProperties(java.lang.String)>
SOURCE|<java.time.chrono.MinguoEra: int getValue()>
SOURCE|<com.android.server.location.GpsXtraDownloader: byte[] doDownload(java.lang.String,boolean,java.lang.String,int)>
SOURCE|<java.text.DecimalFormatSymbols: java.text.DecimalFormatSymbols getInstance(java.util.Locale)>
SOURCE|<android.app.Instrumentation$ActivityMonitor: int getHits()>
SOURCE|<android.net.nsd.INsdManager$Stub$Proxy: android.os.Messenger getMessenger()>
SOURCE|<android.webkit.WebViewClassic: int getViewHeightWithTitle()>
SOURCE|<android.app.ApplicationPackageManager: java.util.List queryIntentServices(android.content.Intent,int)>
SOURCE|<com.android.vcard.VCardEntry$WebsiteData: com.android.vcard.VCardEntry$EntryLabel getEntryLabel()>
SOURCE|<android.provider.CalendarContract$Reminders: android.database.Cursor query(android.content.ContentResolver,long,java.lang.String[])>
SOURCE|<android.emoji.EmojiFactory: int getVendorSpecificPuaFromAndroidPua(int)>
SOURCE|<android.graphics.drawable.AnimatedRotateDrawable: int getIntrinsicHeight()>
SOURCE|<com.android.contacts.list.ContactTileAdapter: long getItemId(int)>
SOURCE|<android.net.NetworkInfo: android.net.NetworkInfo$State getState()>
SOURCE|<gov.nist.javax.sip.address.AddressImpl: int getPort()>
SOURCE|<com.android.internal.widget.LockPatternUtils: long getLockoutAttemptDeadline()>
SOURCE|<android.telephony.SmsCbMessage: java.lang.String getLanguageCode()>
SOURCE|<org.apache.harmony.security.x509.AlgorithmIdentifier: byte[] getParameters()>
SOURCE|<android.animation.ValueAnimator: long getStartDelay()>
SOURCE|<org.apache.harmony.xnet.provider.jsse.SSLSocketWrapper: java.io.FileDescriptor getFileDescriptor$()>
SOURCE|<android.media.audiofx.AudioEffect: int getParameter(byte[],byte[])>
SOURCE|<com.android.vcard.VCardSourceDetector: int getEstimatedType()>
SOURCE|<android.view.MotionEvent: float getXPrecision()>
SOURCE|<android.bluetooth.BluetoothA2dp: java.util.List getConnectedDevices()>
SOURCE|<android.media.MediaScanner$MyMediaScannerClient: java.lang.String getGenreName(java.lang.String)>
SOURCE|<java.lang.Class: java.lang.Class[] getDeclaredClasses()>
SOURCE|<android.text.DynamicLayout: int[] getBlockIndices()>
SOURCE|<java.time.LocalDate: int getMonthValue()>
SOURCE|<org.apache.harmony.xnet.provider.jsse.SSLEngineImpl: boolean getWantClientAuth()>
SOURCE|<com.android.internal.telephony.ApnContext: java.lang.String getReason()>
SOURCE|<android.text.DynamicLayout: int getEllipsisCount(int)>
SOURCE|<com.android.gallery3d.data.MtpImage: android.net.Uri getContentUri()>
SOURCE|<com.android.calendar.agenda.AgendaWindowAdapter: java.lang.Object getItem(int)>
SOURCE|<javax.crypto.CipherSpi: java.security.Key engineUnwrap(byte[],java.lang.String,int)>
SOURCE|<android.view.ViewConfiguration: android.view.ViewConfiguration get(android.content.Context)>
SOURCE|<android.preference.Preference: java.lang.CharSequence getTitle()>
SOURCE|<com.android.gallery3d.picasasource.PicasaSource: android.content.ContentProviderClient getContentProvider()>
SOURCE|<android.media.MediaScanner: android.media.MediaScanner$FileEntry makeEntryFor(java.lang.String)>
SOURCE|<java.util.logging.LogManager: java.lang.Object getInstanceByClass(java.lang.String)>
SOURCE|<gov.nist.javax.sip.stack.SIPServerTransaction: gov.nist.javax.sip.stack.SIPServerTransaction getCanceledInviteTransaction()>
SOURCE|<com.android.providers.telephony.SmsProvider: java.lang.String getType(android.net.Uri)>
SOURCE|<com.android.internal.telephony.UiccCardApplication: com.android.internal.telephony.IccRecords getIccRecords()>
SOURCE|<android.webkit.WebViewClassic: int getBaseLayer()>
SOURCE|<gov.nist.javax.sip.header.StatusLine: java.lang.String getVersionMinor()>
SOURCE|<android.net.http.HttpsConnection$1: java.security.cert.X509Certificate[] getAcceptedIssuers()>
SOURCE|<com.android.internal.view.menu.MenuPopupHelper$MenuAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)>
SOURCE|<org.apache.harmony.xml.ExpatParser$ExpatLocator: java.lang.String getPublicId()>
SOURCE|<com.android.phone.BluetoothPhoneService$3: java.lang.String getSubscriberNumber()>
SOURCE|<android.content.SyncStorageEngine: android.content.SyncStatusInfo getOrCreateSyncStatus(android.content.SyncStorageEngine$AuthorityInfo)>
SOURCE|<android.bluetooth.IBluetoothA2dp$Stub$Proxy: java.util.List getConnectedDevices()>
SOURCE|<com.android.internal.telephony.DataConnection: int getDataConnectionId()>
SOURCE|<java.security.cert.PKIXParameters: java.util.Date getDate()>
SOURCE|<android.view.Surface$CompatibleCanvas: int getHeight()>
SOURCE|<com.android.i18n.phonenumbers.Phonenumber$PhoneNumber: java.lang.String getRawInput()>
SOURCE|<com.android.internal.backup.IBackupTransport$Stub$Proxy: android.app.backup.RestoreSet[] getAvailableRestoreSets()>
SOURCE|<android.os.UEventObserver: java.lang.String access$100()>
SOURCE|<android.graphics.drawable.AnimationDrawable: int getDuration(int)>
SOURCE|<com.android.internal.widget.DrawableHolder: int getHeight()>
SOURCE|<org.apache.http.impl.SocketHttpServerConnection: int getLocalPort()>
SOURCE|<android.nfc.INfcAdapterExtras$Stub$Proxy: android.os.Bundle transceive(java.lang.String,byte[])>
SOURCE|<com.android.server.InputMethodManagerService: android.view.inputmethod.InputMethodSubtype getLastInputMethodSubtype()>
SOURCE|<org.apache.harmony.xnet.provider.jsse.OpenSSLRSAPrivateKey: int getPkeyContext()>
SOURCE|<com.android.internal.telephony.cdma.RuimRecords: int getDisplayRule(java.lang.String)>
SOURCE|<gov.nist.javax.sip.ListeningPointImpl: gov.nist.javax.sip.stack.MessageProcessor getMessageProcessor()>
SOURCE|<android.net.rtp.RtpStream: java.net.InetAddress getLocalAddress()>
SOURCE|<android.media.Ringtone: int getStreamType()>
SOURCE|<com.android.gallery3d.ui.CacheStorageUsageInfo: long getUsedBytes()>
SOURCE|<android.app.ActivityManager: com.android.internal.os.PkgUsageStats[] getAllPackageUsageStats()>
SOURCE|<gov.nist.javax.sip.stack.TCPMessageChannel: java.lang.String getViaHost()>
SOURCE|<com.android.internal.view.BaseSurfaceHolder: android.view.SurfaceHolder$Callback[] getCallbacks()>
SOURCE|<com.android.internal.telephony.PhoneProxy: java.lang.String getMsisdn()>
SOURCE|<com.android.providers.contacts.TransactionContext: java.lang.Long getAccountIdOrNullForRawContact(long)>
SOURCE|<java.util.concurrent.ForkJoinWorkerThread: java.util.concurrent.ForkJoinPool getPool()>
SOURCE|<com.android.providers.contacts.ContactsDatabaseHelper: java.lang.String getCurrentCountryIso()>
SOURCE|<com.coremedia.iso.boxes.SampleToChunkBox$Entry: long getSampleDescriptionIndex()>
SOURCE|<android.widget.AbsListView: int getBottomPaddingOffset()>
SOURCE|<java.nio.HeapByteBuffer: long getLong(int)>
SOURCE|<android.media.videoeditor.MediaProperties: android.util.Pair[] getSupportedResolutions(int)>
SOURCE|<com.android.bluetooth.hid.HidService$BluetoothInputDeviceBinder: java.util.List getConnectedDevices()>
SOURCE|<android.app.ActivityManagerProxy: android.content.res.Configuration getConfiguration()>
SOURCE|<android.telephony.gsm.GsmCellLocation: int getPsc()>
SOURCE|<com.google.android.mms.pdu.PduPersister: java.lang.String convertUriToPath(android.content.Context,android.net.Uri)>
SOURCE|<android.hardware.Camera$Parameters: java.util.List getFocusAreas()>
SOURCE|<android.util.LongSparseArray: java.lang.Object get(long)>
SOURCE|<com.android.internal.view.menu.BaseMenuPresenter: int getId()>
SOURCE|<com.android.internal.telephony.DataConnectionTracker: int getRecoveryAction()>
SOURCE|<android.webkit.WebSettingsClassic: int getTextZoom()>
SOURCE|<android.content.pm.IPackageManager$Stub$Proxy: java.lang.String[] currentToCanonicalPackageNames(java.lang.String[])>
SOURCE|<android.accounts.ChooseAccountTypeActivity$AccountArrayAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)>
SOURCE|<android.net.MailTo: java.lang.String getSubject()>
SOURCE|<android.media.MediaRouter: android.media.MediaRouter$RouteCategory getCategoryAt(int)>
SOURCE|<javax.crypto.Mac: javax.crypto.Mac getInstance(java.lang.String,java.security.Provider)>
SOURCE|<com.android.internal.telephony.gsm.SmsMessage$PduParser: com.android.internal.telephony.gsm.GsmSmsAddress getAddress()>
SOURCE|<com.android.email.RecipientAdapter: int getDefaultPhotoResource()>
SOURCE|<com.adobe.xmp.options.SerializeOptions: int getValidOptions()>
SOURCE|<org.apache.http.impl.io.AbstractSessionInputBuffer: java.lang.String readLine()>
SOURCE|<com.android.email.activity.RecentMailboxManager: com.android.email.activity.RecentMailboxManager getInstance(android.content.Context)>
SOURCE|<android.net.NetworkPolicyManager: int getUidPolicy(int)>
SOURCE|<android.os.AsyncTask: android.os.AsyncTask$Status getStatus()>
SOURCE|<com.android.gallery3d.ui.SlotView: int getVisibleStart()>
SOURCE|<android.mtp.MtpObjectInfo: int getCompressedSize()>
SOURCE|<org.apache.harmony.security.x509.Extension: byte[] getRawExtnValue()>
SOURCE|<com.android.inputmethod.keyboard.ProximityInfo: long getNativeProximityInfo()>
SOURCE|<java.lang.Long: java.lang.Long getLong(java.lang.String,long)>
SOURCE|<android.view.InputDevice$MotionRange: float getMin()>
SOURCE|<com.android.bluetooth.a2dp.A2dpService: java.util.List getDevicesMatchingConnectionStates(int[])>
SOURCE|<com.google.common.collect.EmptyImmutableList: java.lang.Object get(int)>
SOURCE|<android.mtp.MtpPropertyGroup: android.mtp.MtpPropertyList getPropertyList(int,int,int)>
SOURCE|<android.view.inputmethod.InputMethodManager: com.android.internal.view.IInputContext getInputContext()>
SOURCE|<gov.nist.core.GenericObjectList: java.lang.String encode()>
SOURCE|<com.google.common.collect.AbstractMultiset: java.util.Set elementSet()>
SOURCE|<com.android.internal.telephony.IPhoneStateListener$Stub: com.android.internal.telephony.IPhoneStateListener asInterface(android.os.IBinder)>
SOURCE|<android.view.Surface: int getWidth()>
SOURCE|<com.android.exchange.adapter.PingParser: java.util.ArrayList getSyncList()>
SOURCE|<gov.nist.javax.sip.stack.SIPServerTransaction: gov.nist.javax.sip.message.SIPResponse getLastResponse()>
SOURCE|<java.util.TimeZone: java.lang.String getDisplayName(boolean,int)>
SOURCE|<com.android.internal.telephony.uicc.UiccController: com.android.internal.telephony.UiccCardApplication getUiccCardApplication(int)>
SOURCE|<org.apache.harmony.xml.dom.NodeImpl: java.lang.String getNamespaceURI()>
SOURCE|<com.android.internal.telephony.PhoneSubInfo: java.lang.String getIsimDomain()>
SOURCE|<com.android.gallery3d.data.ClusterAlbum: java.util.ArrayList getMediaItemFromPath(java.util.ArrayList,int,int,com.android.gallery3d.data.DataManager)>
SOURCE|<android.media.videoeditor.VideoEditorImpl: java.util.List getAllMediaItems()>
SOURCE|<java.lang.Class: java.lang.Package getPackage()>
SOURCE|<android.view.View: int getPaddingEnd()>
SOURCE|<android.widget.TableRow: int getVirtualChildCount()>
SOURCE|<com.android.mms.dom.smil.SmilParElementImpl: org.w3c.dom.smil.TimeList getEnd()>
SOURCE|<gov.nist.javax.sip.message.MessageFactoryImpl: java.lang.String getDefaultContentEncodingCharset()>
SOURCE|<com.android.inputmethod.keyboard.KeyboardView: com.android.inputmethod.keyboard.Keyboard getKeyboard()>
SOURCE|<com.android.server.ServiceWatcher: java.util.ArrayList getSignatureSets(android.content.Context,java.util.List)>
SOURCE|<android.test.suitebuilder.TestMethod: java.lang.String getEnclosingClassname()>
SOURCE|<android.view.inputmethod.InputConnectionWrapper: int getCursorCapsMode(int)>
SOURCE|<com.android.ex.chips.RecipientEditTextView: int getViewWidth()>
SOURCE|<android.text.method.WordIterator: int getBeginning(int)>
SOURCE|<android.support.v4.view.AccessibilityDelegateCompat: android.support.v4.view.accessibility.AccessibilityNodeProviderCompat getAccessibilityNodeProvider(android.view.View)>
SOURCE|<android.net.LocalSocket: java.io.InputStream getInputStream()>
SOURCE|<com.android.contacts.model.account.BaseAccountType: com.android.contacts.model.dataitem.DataKind addDataKindPhoneticName(android.content.Context)>
SOURCE|<com.android.org.bouncycastle.asn1.ASN1EncodableVector: com.android.org.bouncycastle.asn1.ASN1Encodable get(int)>
SOURCE|<android.text.format.Time: boolean parse3339(java.lang.String)>
SOURCE|<android.webkit.CookieManager: java.lang.String getCookie(java.lang.String,boolean)>
SOURCE|<java.nio.channels.SelectionKey: boolean isReadable()>
SOURCE|<android.test.ProviderTestCase: android.test.IsolatedContext getMockContext()>
SOURCE|<java.lang.Package: java.lang.'annotation'.Annotation getAnnotation(java.lang.Class)>
SOURCE|<com.android.launcher2.Workspace: com.android.launcher2.Folder getFolderForTag(java.lang.Object)>
SOURCE|<com.android.nfc.dhimpl.NativeNfcManager: boolean getExtendedLengthApdusSupported()>
SOURCE|<android.webkit.WebSettings: android.webkit.WebSettings$LayoutAlgorithm getLayoutAlgorithm()>
SOURCE|<org.apache.harmony.xnet.provider.jsse.OpenSSLDSAParams: java.math.BigInteger getY()>
SOURCE|<android.nfc.tech.NfcBarcode: android.nfc.Tag getTag()>
SOURCE|<android.net.wifi.WifiManager: int getWifiApState()>
SOURCE|<android.app.DialogFragment: int getTheme()>
SOURCE|<android.speech.tts.TextToSpeech: java.util.Locale getLanguage()>
SOURCE|<com.android.inputmethod.compat.CompatUtils: java.lang.reflect.Field getField(java.lang.Class,java.lang.String)>
SOURCE|<com.android.mms.dom.smil.SmilPlayer$TimelineEntry: org.w3c.dom.smil.ElementTime getElement()>
SOURCE|<android.widget.CursorAdapter: android.widget.FilterQueryProvider getFilterQueryProvider()>
SOURCE|<org.apache.harmony.xnet.provider.jsse.OpenSSLDSAPrivateKey: java.lang.String getPkeyAlias()>
SOURCE|<java.text.Collator: int getDecomposition()>
SOURCE|<com.android.browser.provider.BrowserProvider2: java.lang.Object[] getSelectionWithAccounts(android.net.Uri,java.lang.String,java.lang.String[])>
SOURCE|<com.android.internal.os.ZygoteConnection: java.io.FileDescriptor getFileDesciptor()>
SOURCE|<com.android.exchange.adapter.EmailSyncAdapter$EasEmailSyncParser: java.lang.String getMimeTypeFromFileName(java.lang.String)>
SOURCE|<com.android.bluetooth.opp.BluetoothOppPreference: java.lang.String getName(android.bluetooth.BluetoothDevice)>
SOURCE|<com.android.internal.widget.multiwaveview.TargetDrawable: int getWidth()>
SOURCE|<java.security.cert.X509CertSelector: boolean getMatchAllSubjectAltNames()>
SOURCE|<com.android.org.bouncycastle.asn1.x500.RDN: com.android.org.bouncycastle.asn1.x500.AttributeTypeAndValue[] getTypesAndValues()>
SOURCE|<android.inputmethodservice.IInputMethodWrapper: android.view.inputmethod.InputMethod getInternalInputMethod()>
SOURCE|<org.apache.harmony.security.asn1.BerInputStream: int getOffset()>
SOURCE|<com.android.internal.telephony.SmsMessageBase: java.lang.String getDisplayMessageBody()>
SOURCE|<android.animation.PropertyValuesHolder$FloatPropertyValuesHolder: java.lang.Object getAnimatedValue()>
SOURCE|<com.android.internal.telephony.cdma.CDMAPhone: java.lang.String getImei()>
SOURCE|<android.net.http.SslCertificate: android.net.http.SslCertificate$DName getIssuedBy()>
SOURCE|<com.android.email.mail.store.imap.ImapResponse: com.android.email.mail.store.imap.ImapString getStatusResponseTextOrEmpty()>
SOURCE|<gov.nist.javax.sip.header.ims.PAccessNetworkInfo: java.lang.String getAccessType()>
SOURCE|<android.text.util.Rfc822Token: java.lang.String getComment()>
SOURCE|<android.text.StaticLayout: int getLineStart(int)>
SOURCE|<java.lang.Class: java.lang.ClassLoader getClassLoaderImpl()>
SOURCE|<com.android.internal.policy.impl.keyguard.PagedView: int getPageNearestToPoint(float)>
SOURCE|<java.security.cert.CertPathBuilder: java.security.Provider getProvider()>
SOURCE|<android.net.MailTo: java.lang.String getBody()>
SOURCE|<android.telephony.SmsCbCmasInfo: int getSeverity()>
SOURCE|<com.android.internal.telephony.gsm.GSMPhone: com.android.internal.telephony.PhoneConstants$State getState()>
SOURCE|<com.coremedia.iso.boxes.fragment.TrackRunBox: long getContentSize()>
SOURCE|<com.android.gallery3d.data.DataManager: java.lang.String getTopSetPath(int)>
SOURCE|<com.android.camera.CameraScreenNail: int getUncroppedRenderWidth()>
SOURCE|<com.android.inputmethod.accessibility.KeyCodeDescriptionMapper: java.lang.String getDescriptionForKey(android.content.Context,com.android.inputmethod.keyboard.Keyboard,com.android.inputmethod.keyboard.Key,boolean)>
SOURCE|<android.app.ContextImpl: android.view.CompatibilityInfoHolder getCompatibilityInfo(int)>
SOURCE|<com.android.server.display.WifiDisplayAdapter: android.hardware.display.WifiDisplayStatus getWifiDisplayStatusLocked()>
SOURCE|<android.graphics.drawable.AnimatedRotateDrawable$AnimatedRotateState: int getChangingConfigurations()>
SOURCE|<android.app.ReceiverRestrictedContext: android.content.Intent registerReceiver(android.content.BroadcastReceiver,android.content.IntentFilter)>
SOURCE|<com.android.internal.widget.multiwaveview.Ease$Cubic$3: float getInterpolation(float)>
SOURCE|<com.android.server.pm.PackageManagerService: android.content.pm.FeatureInfo[] getSystemAvailableFeatures()>
SOURCE|<android.preference.PreferenceManager: android.app.Activity getActivity()>
SOURCE|<java.time.LocalDateTime: int getDayOfMonth()>
SOURCE|<com.android.email.activity.setup.AccountSettingsUtils: android.content.ContentValues getAccountContentValues(com.android.emailcommon.provider.Account)>
SOURCE|<com.android.internal.telephony.gsm.GsmServiceStateTracker: int getCurrentGprsState()>
SOURCE|<android.net.wifi.p2p.WifiP2pWfdInfo: int getDeviceType()>
SOURCE|<org.apache.harmony.xnet.provider.jsse.SSLServerSocketFactoryImpl: java.lang.String[] getSupportedCipherSuites()>
SOURCE|<android.view.View: int getBaseline()>
SOURCE|<org.apache.harmony.security.provider.cert.X509CertImpl: javax.security.auth.x500.X500Principal getSubjectX500Principal()>
SOURCE|<android.telephony.cdma.CdmaSmsCbProgramData: java.lang.String getCategoryName()>
SOURCE|<android.view.ViewConfiguration: int getScaledOverscrollDistance()>
SOURCE|<android.gesture.GestureLibrary: int getOrientationStyle()>
SOURCE|<com.android.gallery3d.ui.PopupList$ItemDataAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)>
SOURCE|<com.google.common.collect.MapMakerInternalMap$ExpirationQueue$1: long getExpirationTime()>
SOURCE|<java.util.ResourceBundle$Control: java.util.ResourceBundle$Control getControl(java.util.List)>
SOURCE|<java.lang.reflect.Field: java.lang.'annotation'.Annotation[] getDeclaredAnnotations()>
SOURCE|<android.preference.Preference: float getPersistedFloat(float)>
SOURCE|<android.content.ClipDescription: int getMimeTypeCount()>
SOURCE|<android.webkit.WebSettingsClassic: int getUserAgent()>
SOURCE|<android.view.accessibility.IAccessibilityInteractionConnection$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
SOURCE|<com.android.internal.widget.multiwaveview.GlowPadView: int getDirectionDescriptionsResourceId()>
SOURCE|<com.android.internal.policy.impl.keyguard.KeyguardWidgetFrame: float getBackgroundAlphaMultiplier()>
SOURCE|<com.android.internal.view.menu.MenuItemImpl: char getShortcut()>
SOURCE|<java.util.IntSummaryStatistics: long getCount()>
SOURCE|<com.android.calendar.selectcalendars.SelectSyncedCalendarsMultiAccountAdapter: android.database.Cursor getChildrenCursor(android.database.Cursor)>
SOURCE|<java.security.spec.EllipticCurve: java.math.BigInteger getA()>
SOURCE|<com.android.providers.contacts.PhotoProcessor: android.graphics.Bitmap getNormalizedBitmap(android.graphics.Bitmap,int,boolean)>
SOURCE|<com.android.gallery3d.picasasource.PicasaPostAlbum: int getMediaItemCount()>
SOURCE|<java.lang.ClassLoader: java.lang.Class defineClass(java.lang.String,byte[],int,int)>
SOURCE|<android.content.res.CompatibilityInfo$Translator: android.graphics.Rect getTranslatedVisibleInsets(android.graphics.Rect)>
SOURCE|<com.android.videoeditor.service.MovieMediaItem: int getHeight()>
SOURCE|<com.android.nfc.handover.HandoverManager: android.nfc.NdefMessage createHandoverRequestMessage()>
SOURCE|<com.android.internal.os.BatteryStatsImpl: int getDischargeAmountScreenOffSinceCharge()>
SOURCE|<com.android.bluetooth.btservice.AdapterService$AdapterServiceBinder: int getAdapterConnectionState()>
SOURCE|<android.view.ViewConfiguration: int getDoubleTapTimeout()>
SOURCE|<com.android.inputmethod.latin.spellcheck.AndroidSpellCheckerService: com.android.inputmethod.latin.spellcheck.DictionaryPool getDictionaryPool(java.lang.String)>
SOURCE|<android.view.animation.Animation: long getDuration()>
SOURCE|<android.graphics.drawable.GradientDrawable: int getOpacity()>
SOURCE|<com.android.mms.util.ThumbnailManager: android.graphics.Bitmap access$200()>
SOURCE|<com.android.calendar.DayOfMonthDrawable: int getOpacity()>
SOURCE|<android.telephony.ServiceState: int getCdmaEriIconIndex()>
SOURCE|<com.google.common.collect.MapMakerInternalMap$StrongEntry: com.google.common.collect.MapMakerInternalMap$ReferenceEntry getPreviousEvictable()>
SOURCE|<com.android.contacts.calllog.IntentProvider: com.android.contacts.calllog.IntentProvider getPlayVoicemailIntentProvider(long,java.lang.String)>
SOURCE|<com.android.browser.search.SearchEngineInfo: java.lang.String getLabel()>
SOURCE|<android.view.PointerIcon: android.view.PointerIcon load(android.content.Context)>
SOURCE|<android.view.ViewConfiguration: int getScaledOverflingDistance()>
SOURCE|<com.coremedia.iso.boxes.MediaHeaderBox: long getModificationTime()>
SOURCE|<org.apache.http.impl.io.ContentLengthInputStream: int read()>
SOURCE|<com.android.email.service.MailService: java.util.ArrayList getPopImapAccountList(android.content.Context)>
SOURCE|<com.android.gallery3d.data.MediaItem: com.android.gallery3d.data.BitmapPool getMicroThumbPool()>
SOURCE|<android.net.LinkProperties: android.net.ProxyProperties getHttpProxy()>
SOURCE|<com.android.phone.PhoneInterfaceManager: boolean isDataConnectivityPossible()>
SOURCE|<com.android.email.service.PopImapAuthenticatorService$PopImapAuthenticator: android.os.Bundle getAuthToken(android.accounts.AccountAuthenticatorResponse,android.accounts.Account,java.lang.String,android.os.Bundle)>
SOURCE|<com.android.email.activity.AccountSelectorAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)>
SOURCE|<org.apache.http.impl.cookie.BasicClientCookie: int[] getPorts()>
SOURCE|<android.telephony.SmsCbEtwsInfo: int getWarningType()>
SOURCE|<com.android.nfc.NfcService$NfcAdapterService: android.nfc.INfcTag getNfcTagInterface()>
SOURCE|<org.kxml2.io.KXmlParser: char[] getTextCharacters(int[])>
SOURCE|<com.android.launcher2.LauncherProvider: java.lang.String getType(android.net.Uri)>
SOURCE|<java.time.format.DateTimeFormatterBuilder: void parseField(char,int,java.time.temporal.TemporalField)>
SOURCE|<com.android.gallery3d.data.DataManager: int getSupportedOperations(com.android.gallery3d.data.Path)>
SOURCE|<com.android.camera.ui.PieItem: float getStartAngle()>
SOURCE|<android.database.AbstractCursor: java.lang.Object getUpdatedField(int)>
SOURCE|<android.net.Uri$Part: java.lang.String getEncoded()>
SOURCE|<java.text.Collator: int getStrength()>
SOURCE|<com.android.systemui.statusbar.phone.PhoneStatusBar: com.android.systemui.statusbar.phone.PhoneStatusBarView makeStatusBarView()>
SOURCE|<android.app.Fragment: android.os.Bundle getArguments()>
SOURCE|<android.widget.OverScroller: int getDuration()>
SOURCE|<com.android.internal.util.StateMachine: int getLogRecSize()>
SOURCE|<org.apache.http.impl.conn.AbstractClientConnAdapter: javax.net.ssl.SSLSession getSSLSession()>
SOURCE|<com.android.org.bouncycastle.asn1.BEROctetString: java.util.Enumeration getObjects()>
SOURCE|<com.android.browser.TabControl: com.android.browser.Tab getTabFromAppId(java.lang.String)>
SOURCE|<android.media.videoeditor.MediaImageItem: android.media.videoeditor.MediaArtistNativeHelper$ClipSettings getImageClipProperties()>
SOURCE|<com.android.internal.policy.impl.keyguard.PagedView: int getViewportOffsetY()>
SOURCE|<com.android.server.sip.SipSessionGroup$RegisterCommand: int getDuration()>
SOURCE|<android.net.wifi.WifiConfigStore: android.net.LinkProperties getLinkProperties(int)>
SOURCE|<com.android.contacts.quickcontact.QuickContactListFragment$1: int getCount()>
SOURCE|<java.util.concurrent.atomic.AtomicStampedReference: java.lang.Object getReference()>
SOURCE|<android.text.method.DigitsKeyListener: android.text.method.DigitsKeyListener getInstance()>
SOURCE|<android.media.CamcorderProfile: android.media.CamcorderProfile get(int,int)>
SOURCE|<com.android.internal.view.ActionBarPolicy: int getTabContainerHeight()>
SOURCE|<android.graphics.drawable.DrawableContainer: int getOpacity()>
SOURCE|<android.app.ActivityManagerProxy: long inputDispatchingTimedOut(int,boolean)>
SOURCE|<android.content.pm.Signature: byte[] toByteArray()>
SOURCE|<com.android.contacts.list.ContactListItemView: android.widget.TextView getDataView()>
SOURCE|<android.app.IThumbnailReceiver$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
SOURCE|<android.view.InputDevice: java.lang.String getName()>
SOURCE|<com.android.providers.calendar.CalendarProvider2: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>
SOURCE|<com.android.videoeditor.AlertDialogs: android.app.AlertDialog createEditDialog(android.content.Context,java.lang.String,java.lang.String,java.lang.String,android.content.DialogInterface$OnClickListener,java.lang.String,android.content.DialogInterface$OnClickListener,android.content.DialogInterface$OnCancelListener,int,int,java.lang.String)>
SOURCE|<com.android.camera.ui.PopupManager: com.android.camera.ui.PopupManager getInstance(android.content.Context)>
SOURCE|<android.provider.CalendarContract$Instances: android.database.Cursor query(android.content.ContentResolver,java.lang.String[],long,long,java.lang.String)>
SOURCE|<android.net.ConnectivityManager: int tether(java.lang.String)>
SOURCE|<java.security.KeyStore: java.lang.String getCertificateAlias(java.security.cert.Certificate)>
SOURCE|<com.android.browser.Tab: com.android.browser.DeviceAccountLogin getDeviceAccountLogin()>
SOURCE|<com.google.common.collect.BstMutationResult: com.google.common.collect.BstNode getOriginalTarget()>
SOURCE|<android.net.wifi.WifiConfiguration: int getAuthType()>
SOURCE|<com.android.bluetooth.opp.BluetoothOppSendFileInfo: com.android.bluetooth.opp.BluetoothOppSendFileInfo generateFileInfo(android.content.Context,android.net.Uri,java.lang.String)>
SOURCE|<java.lang.Class: java.lang.reflect.Type[] getGenericInterfaces()>
SOURCE|<android.emoji.EmojiFactory: android.graphics.Bitmap getBitmapFromVendorSpecificSjis(char)>
SOURCE|<com.android.gallery3d.picasasource.PicasaImage: com.android.gallery3d.data.Face[] getFaces()>
SOURCE|<javax.crypto.KeyGenerator: javax.crypto.KeyGenerator getInstance(java.lang.String)>
SOURCE|<com.google.android.mms.pdu.PduPart: byte[] getContentTransferEncoding()>
SOURCE|<android.app.ApplicationPackageManager: int[] getPackageGids(java.lang.String)>
SOURCE|<com.android.server.AppWidgetServiceImpl: int[] getAppWidgetIds(com.android.server.AppWidgetServiceImpl$Provider)>
SOURCE|<gov.nist.core.NameValueList: gov.nist.core.NameValue get(java.lang.Object)>
SOURCE|<android.net.LocalSocketImpl: java.lang.Object getOption(int)>
SOURCE|<org.apache.harmony.xml.ExpatParser$ExpatLocator: int getColumnNumber()>
SOURCE|<android.widget.CalendarView: int getDateTextAppearance()>
SOURCE|<com.android.browser.TabControl: java.util.List getTabs()>
SOURCE|<android.view.PointerIcon: float getHotSpotY()>
SOURCE|<com.android.server.connectivity.Tethering: java.lang.String[] getTetherableWifiRegexs()>
SOURCE|<org.apache.harmony.xml.dom.DocumentImpl: java.lang.String getDocumentURI()>
SOURCE|<com.android.internal.telephony.IccRecords: java.lang.String getServiceProviderName()>
SOURCE|<com.android.internal.telephony.DataConnection$CallSetupException: int getRetryOverride()>
SOURCE|<org.apache.james.mime4j.field.address.Mailbox: java.lang.String getAddressString(boolean)>
SOURCE|<android.view.ViewStub: int getInflatedId()>
SOURCE|<android.content.Context: java.lang.CharSequence getText(int)>
SOURCE|<android.inputmethodservice.ExtractEditLayout$ExtractActionMode: android.view.MenuInflater getMenuInflater()>
SOURCE|<com.android.commands.monkey.MonkeyMotionEvent: long getDownTime()>
SOURCE|<com.android.mms.ui.UriImage: byte[] getResizedImageData(int,int,int,int,int,android.net.Uri,android.content.Context)>
SOURCE|<com.android.providers.media.MediaProvider: java.lang.String getType(android.net.Uri)>
SOURCE|<java.util.concurrent.locks.AbstractQueuedLongSynchronizer: java.lang.Thread getFirstQueuedThread()>
SOURCE|<com.android.gallery3d.data.LocalImage: int getHeight()>
SOURCE|<android.nfc.NfcAdapter: android.nfc.INfcAdapterExtras getNfcAdapterExtrasInterface()>
SOURCE|<gov.nist.javax.sip.stack.SIPTransactionStack: gov.nist.javax.sip.stack.SIPClientTransaction getForkedTransaction(java.lang.String)>
SOURCE|<android.filterfw.core.FrameFormat: int getHeight()>
SOURCE|<android.widget.AbsListView: int getFooterViewsCount()>
SOURCE|<android.view.View: void getDrawingRect(android.graphics.Rect)>
SOURCE|<java.security.KeyPair: java.security.PublicKey getPublic()>
SOURCE|<com.android.browser.AutoFillProfileDatabase: android.database.Cursor getProfile(int)>
SOURCE|<android.content.ISyncContext$Stub: android.os.IBinder asBinder()>
SOURCE|<android.view.inputmethod.InputMethodSubtype: java.lang.String getExtraValue()>
SOURCE|<com.android.internal.telephony.PhoneProxy: java.lang.String getVoiceMailAlphaTag()>
SOURCE|<com.android.ex.chips.RecipientEditTextView: android.text.Spannable getSpannable()>
SOURCE|<gov.nist.javax.sip.header.ContentType: gov.nist.javax.sip.header.MediaRange getMediaRange()>
SOURCE|<com.android.videoeditor.service.IntentPool: android.content.Intent get(android.content.Context,java.lang.Class)>
SOURCE|<org.apache.harmony.security.x509.GeneralNames$1: java.util.Collection getValues(java.lang.Object)>
SOURCE|<org.apache.harmony.xnet.provider.jsse.SSLSocketWrapper: int getLocalPort()>
SOURCE|<com.android.systemui.statusbar.phone.PanelView: float getExpandedFraction()>
SOURCE|<java.time.format.DateTimeFormatter: java.time.format.DateTimeParseContext parseUnresolved0(java.lang.CharSequence,java.text.ParsePosition)>
SOURCE|<java.security.spec.DSAPublicKeySpec: java.math.BigInteger getQ()>
SOURCE|<android.telephony.CellSignalStrengthGsm: int getAsuLevel()>
SOURCE|<com.android.mms.data.Contact: android.graphics.drawable.Drawable getAvatar(android.content.Context,android.graphics.drawable.Drawable)>
SOURCE|<android.media.videoeditor.MediaImageItem: int getScaledWidth()>
SOURCE|<libcore.net.http.HttpsHandler: int getDefaultPort()>
SOURCE|<android.net.NetworkQuotaInfo: long getHardLimitBytes()>
SOURCE|<com.android.calendar.widget.CalendarAppWidgetService$CalendarFactory: java.lang.String access$500(com.android.calendar.widget.CalendarAppWidgetService$CalendarFactory)>
SOURCE|<com.android.internal.statusbar.IStatusBarService$Stub: android.os.IBinder asBinder()>
SOURCE|<android.test.mock.MockContentResolver: java.util.List getPeriodicSyncs(android.accounts.Account,java.lang.String)>
SOURCE|<android.media.videoeditor.EffectColor: int getColor()>
SOURCE|<android.view.View: int getFadeTop(boolean)>
SOURCE|<com.android.internal.telephony.BaseCommands: int getLteOnCdmaMode()>
SOURCE|<android.view.textservice.SpellCheckerSubtype: int getNameResId()>
SOURCE|<java.nio.channels.FileLock: java.nio.channels.FileChannel channel()>
SOURCE|<android.hardware.usb.UsbDevice: int getDeviceClass()>
SOURCE|<android.speech.tts.TtsEngines: java.lang.String getLocalePrefForEngine(java.lang.String)>
SOURCE|<android.nfc.INfcAdapter$Stub$Proxy: android.nfc.INfcTag getNfcTagInterface()>
SOURCE|<android.widget.TextView: android.view.ActionMode$Callback getCustomSelectionActionModeCallback()>
SOURCE|<com.android.gallery3d.ui.BitmapTileProvider: int getImageHeight()>
SOURCE|<org.apache.harmony.security.x509.Certificate: byte[] getEncoded()>
SOURCE|<com.android.internal.telephony.uicc.UiccController: com.android.internal.telephony.uicc.UiccController getInstance()>
SOURCE|<org.apache.harmony.security.x509.SubjectPublicKeyInfo: byte[] getSubjectPublicKey()>
SOURCE|<android.widget.CursorTreeAdapter: android.view.View getGroupView(int,boolean,android.view.View,android.view.ViewGroup)>
SOURCE|<com.android.server.ConnectivityService: android.net.LinkProperties getLinkProperties(int)>
SOURCE|<libcore.net.url.JarURLConnectionImpl: java.security.Permission getPermission()>
SOURCE|<android.filterfw.core.OutputPort: android.filterfw.core.Filter getTargetFilter()>
SOURCE|<android.webkit.WebViewCore: float getFixedDisplayDensity(android.content.Context)>
SOURCE|<com.android.org.bouncycastle.util.encoders.Hex: byte[] encode(byte[],int,int)>
SOURCE|<com.android.providers.contacts.ContactLocaleUtils$ContactLocaleUtilsBase: java.util.Iterator getNameLookupKeys(java.lang.String)>
SOURCE|<com.android.exchange.adapter.Parser: java.lang.String getValue()>
SOURCE|<android.content.ClipboardManager: android.content.ClipData getPrimaryClip()>
SOURCE|<com.android.internal.appwidget.IAppWidgetService$Stub$Proxy: int[] getAppWidgetIdsForHost(int)>
SOURCE|<android.bluetooth.IBluetoothHeadset$Stub$Proxy: int getBatteryUsageHint(android.bluetooth.BluetoothDevice)>
SOURCE|<com.android.internal.telephony.DataConnectionTracker: java.lang.String[] getActiveApnTypes()>
SOURCE|<android.view.inputmethod.InputMethodInfo: android.view.inputmethod.InputMethodSubtype getSubtypeAt(int)>
SOURCE|<java.net.JarURLConnection: java.util.jar.Manifest getManifest()>
SOURCE|<gov.nist.javax.sip.message.MessageFactoryImpl: javax.sip.message.Response createResponse(int,javax.sip.message.Request,javax.sip.header.ContentTypeHeader,byte[])>
SOURCE|<gov.nist.javax.sip.stack.MessageChannel: gov.nist.core.HostPort getPeerHostPort()>
SOURCE|<java.io.DataInputStream: int readUnsignedShort()>
SOURCE|<android.net.ProxyProperties: java.lang.String getHost()>
SOURCE|<com.android.contacts.list.ContactEntryListFragment: java.lang.String getQueryString()>
SOURCE|<com.google.android.mms.pdu.SendReq: byte[] getContentType()>
SOURCE|<org.apache.http.impl.client.RequestWrapper: org.apache.http.ProtocolVersion getProtocolVersion()>
SOURCE|<java.time.chrono.JapaneseDate: java.time.chrono.JapaneseChronology getChronology()>
SOURCE|<com.android.launcher2.CellLayout: int getCountY()>
SOURCE|<java.nio.HeapByteBuffer: short getShort(int)>
SOURCE|<java.util.IllegalFormatConversionException: java.lang.Class getArgumentClass()>
SOURCE|<android.net.wifi.p2p.nsd.WifiP2pServiceResponse: byte[] getRawData()>
SOURCE|<com.android.email.activity.UIControllerBase: long getMessageListMailboxId()>
SOURCE|<com.android.internal.widget.LockPatternUtils: int[] getAppWidgets()>
SOURCE|<android.location.Address: java.lang.String getUrl()>
SOURCE|<android.hardware.usb.UsbDevice: int getDeviceProtocol()>
SOURCE|<android.test.RenamingDelegatingContext: java.lang.String getDatabasePrefix()>
SOURCE|<javax.xml.transform.sax.SAXSource: org.xml.sax.XMLReader getXMLReader()>
SOURCE|<android.net.LocalSocket: int getSendBufferSize()>
SOURCE|<gov.nist.javax.sip.address.NetObject: java.lang.String toString()>
SOURCE|<java.lang.Throwable: java.lang.StackTraceElement[] getStackTrace()>
SOURCE|<android.text.style.TypefaceSpan: java.lang.String getFamily()>
SOURCE|<com.android.contacts.quickcontact.DataAction: android.content.Intent getAlternateIntent()>
SOURCE|<com.android.gallery3d.data.ComboAlbumSet: int getSubMediaSetCount()>
SOURCE|<com.android.internal.telephony.sip.SipPhoneBase: com.android.internal.telephony.PhoneConstants$DataState getDataConnectionState(java.lang.String)>
SOURCE|<com.coremedia.iso.boxes.MediaHeaderBox: long getCreationTime()>
SOURCE|<android.graphics.Bitmap: int getScaledHeight(android.util.DisplayMetrics)>
SOURCE|<com.android.mms.data.Conversation$Cache: com.android.mms.data.Conversation get(long)>
SOURCE|<java.time.temporal.ChronoField: java.time.temporal.TemporalUnit getRangeUnit()>
SOURCE|<java.time.format.DecimalStyle: char getPositiveSign()>
SOURCE|<android.content.pm.IPackageInstallObserver$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
SOURCE|<com.android.contacts.preference.DisplayOrderPreference: java.lang.CharSequence getSummary()>
SOURCE|<android.content.ContextWrapper: android.content.Context createDisplayContext(android.view.Display)>
SOURCE|<gov.nist.javax.sip.header.Subject: java.lang.String getSubject()>
SOURCE|<com.android.internal.telephony.cdma.CDMAPhone: java.lang.String getEsn()>
SOURCE|<org.apache.http.impl.HttpConnectionMetricsImpl: long getRequestCount()>
SOURCE|<android.widget.RemoteViews$TextViewSizeAction: java.lang.String getActionName()>
SOURCE|<android.hardware.Camera$Parameters: java.util.List getZoomRatios()>
SOURCE|<com.android.server.net.NetworkPolicyManagerService: android.net.NetworkPolicy[] getNetworkPolicies()>
SOURCE|<android.bluetooth.BluetoothSocket: android.bluetooth.BluetoothSocket accept(int)>
SOURCE|<com.android.internal.policy.impl.GlobalActions$MyAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)>
SOURCE|<java.util.EnumMap: java.lang.Object get(java.lang.Object)>
SOURCE|<javax.net.ssl.TrustManagerFactory: java.security.Provider getProvider()>
SOURCE|<com.android.server.ProcessMap: java.util.HashMap getMap()>
SOURCE|<com.android.contacts.widget.IndexerListAdapter: int getSectionForPosition(int)>
SOURCE|<com.android.email.mail.store.Pop3Store$Pop3Folder: com.android.emailcommon.mail.Message[] getMessages(com.android.emailcommon.service.SearchParams,com.android.emailcommon.mail.Folder$MessageRetrievalListener)>
SOURCE|<android.webkit.CookieManager: java.lang.Object clone()>
SOURCE|<com.android.internal.widget.LockPatternView$SavedState: java.lang.String getSerializedPattern()>
SOURCE|<java.util.Properties: void loadFromXML(java.io.InputStream)>
SOURCE|<com.android.email.mail.store.imap.ImapString$1: java.io.InputStream getAsStream()>
SOURCE|<android.view.HardwareRenderer$GlRenderer: int getWidth()>
SOURCE|<java.security.spec.DSAPrivateKeySpec: java.math.BigInteger getQ()>
SOURCE|<android.content.pm.IPackageManager$Stub$Proxy: android.content.pm.ResolveInfo resolveIntent(android.content.Intent,java.lang.String,int,int)>
SOURCE|<com.android.gallery3d.ui.BasicTexture: int getWidth()>
SOURCE|<java.net.URLDecoder: java.lang.String decode(java.lang.String)>
SOURCE|<com.android.browser.NavScreen$TabAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)>
SOURCE|<android.test.mock.MockResources: android.graphics.Movie getMovie(int)>
SOURCE|<android.webkit.AccessibilityInjectorFallback$AccessibilityWebContentKeyBinding: int getAction(int)>
SOURCE|<com.android.providers.downloads.DownloadProvider: java.lang.String getType(android.net.Uri)>
SOURCE|<android.net.IConnectivityManager$Stub$Proxy: boolean isNetworkSupported(int)>
SOURCE|<com.android.gallery3d.ui.SurfaceTextureScreenNail: android.graphics.SurfaceTexture getSurfaceTexture()>
SOURCE|<java.util.prefs.PreferenceChangeEvent: java.lang.String getKey()>
SOURCE|<com.android.email.widget.EmailWidgetLoader: android.database.Cursor loadInBackground()>
SOURCE|<com.android.internal.telephony.gsm.SIMRecords: java.lang.String getIMSI()>
SOURCE|<com.android.server.display.DisplayAdapter: android.os.Handler getHandler()>
SOURCE|<gov.nist.javax.sip.header.ParametersHeader: boolean getParameterAsBoolean(java.lang.String)>
SOURCE|<org.apache.http.message.BasicHeaderValueParser: org.apache.http.NameValuePair parseNameValuePair(org.apache.http.util.CharArrayBuffer,org.apache.http.message.ParserCursor,char[])>
SOURCE|<android.appwidget.AppWidgetManager: android.os.Bundle getAppWidgetOptions(int)>
SOURCE|<com.android.contacts.editor.PhoneticNameEditorView$PhoneticValuesDelta: java.lang.String getAsString(java.lang.String)>
SOURCE|<org.ccil.cowan.tagsoup.Schema: java.lang.String getPrefix()>
SOURCE|<javax.crypto.KeyGenerator: java.security.Provider getProvider()>
SOURCE|<com.android.contacts.list.ContactEntryListFragment: android.app.LoaderManager getLoaderManager()>
SOURCE|<com.android.systemui.recent.RecentsScrollViewPerformanceHelper: int getHorizontalFadingEdgeLengthCallback()>
SOURCE|<org.apache.harmony.xnet.provider.jsse.OpenSSLServerSocketImpl: java.lang.String[] getSupportedProtocols()>
SOURCE|<org.apache.james.mime4j.field.contenttype.parser.ContentTypeParser: java.util.ArrayList getParamValues()>
SOURCE|<android.widget.Toast: float getVerticalMargin()>
SOURCE|<com.android.server.TextServicesManagerService$TextServicesSettings: int getCurrentUserId()>
SOURCE|<android.view.inputmethod.BaseInputConnection: java.lang.CharSequence getTextAfterCursor(int,int)>
SOURCE|<org.apache.james.mime4j.field.contenttype.parser.ContentTypeParserTokenManager: org.apache.james.mime4j.field.contenttype.parser.Token jjFillToken()>
SOURCE|<android.telephony.ServiceState: boolean getRoaming()>
SOURCE|<com.android.server.am.ActiveServices$ServiceMap: com.android.server.am.ServiceRecord getServiceByIntent(android.content.Intent$FilterComparison)>
SOURCE|<java.net.HttpURLConnection: boolean getInstanceFollowRedirects()>
SOURCE|<org.apache.http.util.VersionInfo: java.lang.String getClassloader()>
SOURCE|<java.util.ServiceLoader: java.util.ServiceLoader load(java.lang.Class)>
SOURCE|<java.text.BreakIterator: java.text.BreakIterator getSentenceInstance(java.util.Locale)>
SOURCE|<com.android.launcher2.Workspace: com.android.launcher2.Folder getOpenFolder()>
SOURCE|<android.app.LoadedApk$ServiceDispatcher: android.content.ServiceConnection getServiceConnection()>
SOURCE|<com.android.gallery3d.data.TimeClustering: java.util.ArrayList getCluster(int)>
SOURCE|<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>
SOURCE|<android.webkit.WebViewClassic: android.view.inputmethod.InputConnection onCreateInputConnection(android.view.inputmethod.EditorInfo)>
SOURCE|<com.android.launcher2.CellLayout: int getHeightGap()>
SOURCE|<com.android.contacts.voicemail.VoicemailPlaybackFragment$PlaybackViewImpl: android.content.Context getDataSourceContext()>
SOURCE|<com.android.email.mail.store.imap.ImapSimpleString: java.lang.String getString()>
SOURCE|<com.android.internal.textservice.ISpellCheckerSessionListener$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
SOURCE|<com.android.internal.policy.impl.keyguard.PagedView: int getViewportHeight()>
SOURCE|<android.widget.AbsListView: int getCheckedItemCount()>
SOURCE|<com.android.mms.transaction.MessagingNotification: long getSmsThreadId(android.content.Context,android.net.Uri)>
SOURCE|<org.xml.sax.helpers.AttributesImpl: java.lang.String getType(java.lang.String,java.lang.String)>
SOURCE|<com.android.gallery3d.app.AlbumPage: int getBackgroundColorId()>
SOURCE|<com.android.mms.ui.SlideshowActivity$SmilPlayerController: int getBufferPercentage()>
SOURCE|<com.android.mms.dom.smil.SmilRootLayoutElementImpl: int getWidth()>
SOURCE|<android.graphics.PathMeasure: boolean getMatrix(float,android.graphics.Matrix,int)>
SOURCE|<java.net.Inet6Address: int getScopeId()>
SOURCE|<gov.nist.javax.sip.message.SIPResponse: java.lang.String getSIPVersion()>
SOURCE|<com.android.internal.os.BatteryStatsImpl$Uid: com.android.internal.os.BatteryStatsImpl$Uid$Proc getProcessStatsLocked(java.lang.String)>
SOURCE|<android.content.res.XmlBlock$Parser: java.lang.String getText()>
SOURCE|<android.graphics.Paint: android.graphics.Paint$Align getTextAlign()>
SOURCE|<gov.nist.javax.sip.stack.TCPMessageChannel: java.lang.String getTransport()>
SOURCE|<org.xml.sax.helpers.LocatorImpl: int getLineNumber()>
SOURCE|<android.net.MailTo: java.util.Map getHeaders()>
SOURCE|<gov.nist.javax.sip.header.AcceptLanguageList: gov.nist.javax.sip.header.AcceptLanguage getFirst()>
SOURCE|<com.android.gallery3d.ui.BitmapTileProvider: int getLevelCount()>
SOURCE|<com.android.gallery3d.data.FilterTypeSet: int getSupportedOperations()>
SOURCE|<android.hardware.display.WifiDisplay: java.lang.String getDeviceAddress()>
SOURCE|<org.apache.http.conn.routing.HttpRoute: org.apache.http.conn.routing.RouteInfo$LayerType getLayerType()>
SOURCE|<android.location.Location: double getLongitude()>
SOURCE|<com.android.internal.policy.impl.keyguard.KeyguardWidgetPager: long getUserActivityTimeout()>
SOURCE|<com.android.mms.layout.LayoutManager: com.android.mms.layout.LayoutParameters getLayoutParameters()>
SOURCE|<com.android.internal.view.menu.MenuItemImpl: android.view.View getActionView()>
SOURCE|<com.google.android.apps.lightcycle.sensor.SensorReader: boolean getEkfEnabled()>
SOURCE|<com.android.nfc.LlcpPacket: byte[] getDataBuffer()>
SOURCE|<android.webkit.WebSettings: boolean getUseWebViewBackgroundForOverscrollBackground()>
SOURCE|<android.content.AsyncQueryHandler: android.os.Handler createHandler(android.os.Looper)>
SOURCE|<android.nfc.NdefMessage: byte[] toByteArray()>
SOURCE|<android.renderscript.ProgramVertex: android.renderscript.Element getInput(int)>
SOURCE|<android.provider.Settings$Bookmarks: android.content.Intent getIntentForShortcut(android.content.ContentResolver,char)>
SOURCE|<android.app.backup.IBackupManager$Stub: android.os.IBinder asBinder()>
SOURCE|<com.android.internal.util.MemInfoReader: long getFreeSize()>
SOURCE|<android.filterfw.core.FilterSurfaceView: int getSurfaceId()>
SOURCE|<android.content.Intent: java.util.ArrayList getParcelableArrayListExtra(java.lang.String)>
SOURCE|<java.net.HttpCookie: java.lang.String getPortlist()>
SOURCE|<com.android.providers.downloads.DownloadInfo: android.net.Uri getAllDownloadsUri()>
SOURCE|<com.android.gallery3d.ui.TiledTexture: int getWidth()>
SOURCE|<com.android.inputmethod.keyboard.internal.TouchPositionCorrection: float getX(int)>
SOURCE|<android.graphics.Bitmap: int getPixel(int,int)>
SOURCE|<android.util.TimeUtils: java.util.ArrayList getTimeZonesWithUniqueOffsets(java.lang.String)>
SOURCE|<com.android.internal.telephony.OperatorInfo: java.lang.String getOperatorAlphaShort()>
SOURCE|<com.android.deskclock.worldclock.CitiesActivity$CityAdapter: java.lang.Object[] getSections()>
SOURCE|<com.android.org.bouncycastle.asn1.ASN1TaggedObject: com.android.org.bouncycastle.asn1.ASN1Primitive getObject()>
SOURCE|<android.net.wifi.WifiInfo: boolean getHiddenSSID()>
SOURCE|<org.apache.http.impl.cookie.NetscapeDraftHeaderParser: org.apache.http.NameValuePair parseNameValuePair(org.apache.http.util.CharArrayBuffer,org.apache.http.message.ParserCursor)>
SOURCE|<java.lang.reflect.Method: int getModifiers()>
SOURCE|<org.apache.harmony.security.asn1.ASN1Integer: org.apache.harmony.security.asn1.ASN1Integer getInstance()>
SOURCE|<org.apache.http.impl.client.AbstractHttpClient: org.apache.http.conn.ClientConnectionManager getConnectionManager()>
SOURCE|<android.widget.TextView: int getTotalPaddingTop()>
SOURCE|<com.android.mms.dom.smil.SmilDocumentImpl: org.w3c.dom.smil.TimeList getBegin()>
SOURCE|<java.util.TreeMap$BoundedMap: java.lang.Object get(java.lang.Object)>
SOURCE|<org.apache.harmony.xnet.provider.jsse.SSLServerSocketImpl: java.lang.String[] getSupportedProtocols()>
SOURCE|<com.android.gallery3d.data.LocalVideo: java.lang.String getFilePath()>
SOURCE|<com.android.internal.util.TypedProperties: int getInt(java.lang.String)>
SOURCE|<android.renderscript.Element: int getSubElementArraySize(int)>
SOURCE|<com.android.email.EmailConnectivityManager: int getActiveNetworkType()>
SOURCE|<com.android.emailcommon.mail.Folder: java.lang.String toString()>
SOURCE|<java.io.EmulatedFieldsForLoading: byte get(java.lang.String,byte)>
SOURCE|<com.android.server.am.BatteryStatsService: long getAwakeTimePlugged()>
SOURCE|<java.io.DataInputStream: java.lang.String readUTF(java.io.DataInput)>
SOURCE|<java.lang.ClassNotFoundException: java.lang.Throwable getCause()>
SOURCE|<com.android.i18n.phonenumbers.PhoneNumberUtil: com.android.i18n.phonenumbers.PhoneNumberUtil$PhoneNumberType getNumberType(com.android.i18n.phonenumbers.Phonenumber$PhoneNumber)>
SOURCE|<android.net.sip.SimpleSessionDescription$Media: int getPort()>
SOURCE|<android.net.IConnectivityManager$Stub$Proxy: android.net.ProxyProperties getProxy()>
SOURCE|<android.view.InputDevice: android.view.InputDevice$MotionRange getMotionRange(int)>
SOURCE|<android.telephony.CellSignalStrengthLte: int getAsuLevel()>
SOURCE|<org.xml.sax.helpers.ParserAdapter$AttributeListAdapter: java.lang.String getType(java.lang.String)>
SOURCE|<android.net.wifi.p2p.IWifiP2pManager$Stub: android.os.IBinder asBinder()>
SOURCE|<com.google.android.apps.lightcycle.sensor.OrientationEKF: double getHeadingDegrees()>
SOURCE|<java.util.concurrent.atomic.AtomicInteger: int getAndIncrement()>
SOURCE|<android.media.videoeditor.MediaImageItem: int getHeight()>
SOURCE|<android.app.ITransientNotification$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
SOURCE|<javax.net.ssl.HttpsURLConnection: javax.net.ssl.SSLSocketFactory getDefaultSSLSocketFactory()>
SOURCE|<com.android.internal.textservice.ISpellCheckerService$Stub$Proxy: com.android.internal.textservice.ISpellCheckerSession getISpellCheckerSession(java.lang.String,com.android.internal.textservice.ISpellCheckerSessionListener,android.os.Bundle)>
SOURCE|<org.apache.harmony.security.pkcs7.SignerInfo: byte[] access$600(org.apache.harmony.security.pkcs7.SignerInfo)>
SOURCE|<com.android.providers.contacts.ContactDirectoryManager: int scanAllPackages()>
SOURCE|<android.widget.BaseExpandableListAdapter: int getChildTypeCount()>
SOURCE|<android.view.MotionEvent: float getSize()>
SOURCE|<java.time.chrono.MinguoDate: long getLong(java.time.temporal.TemporalField)>
SOURCE|<android.test.mock.MockCursor: byte[] getBlob(int)>
SOURCE|<android.webkit.WebSettings: java.lang.String getDefaultTextEncodingName()>
SOURCE|<com.android.contacts.list.ContactEntryListAdapter: com.android.contacts.ContactPhotoManager getPhotoLoader()>
SOURCE|<android.server.search.SearchManagerService: java.util.List getGlobalSearchActivities()>
SOURCE|<android.view.ViewGroup: android.graphics.Bitmap createSnapshot(android.graphics.Bitmap$Config,int,boolean)>
SOURCE|<com.android.internal.telephony.cdma.CDMAPhone: com.android.internal.telephony.PhoneConstants$DataState getDataConnectionState(java.lang.String)>
SOURCE|<com.android.contacts.model.account.AccountTypeWithDataSet: com.android.contacts.model.account.AccountTypeWithDataSet get(java.lang.String,java.lang.String)>
SOURCE|<android.text.SpannableString: java.lang.Object[] getSpans(int,int,java.lang.Class)>
SOURCE|<android.app.AlertDialog: android.widget.ListView getListView()>
SOURCE|<android.app.ProgressDialog: int getProgress()>
SOURCE|<android.content.res.XmlBlock$Parser: java.lang.String getNamespace(java.lang.String)>
SOURCE|<android.text.DynamicLayout: int getLineTop(int)>
SOURCE|<com.google.common.collect.MapMakerInternalMap$1: com.google.common.collect.MapMakerInternalMap$ReferenceEntry getEntry()>
SOURCE|<com.android.bluetooth.hfp.HeadsetStateMachine: int getAudioState(android.bluetooth.BluetoothDevice)>
SOURCE|<android.telephony.gsm.SmsMessage: android.telephony.gsm.SmsMessage$SubmitPdu getSubmitPdu(java.lang.String,java.lang.String,short,byte[],boolean)>
SOURCE|<gov.nist.javax.sip.header.HeaderFactoryImpl: gov.nist.javax.sip.header.extensions.SessionExpiresHeader createSessionExpiresHeader(int)>
SOURCE|<libcore.net.http.HttpsURLConnectionImpl: java.lang.Object getContent(java.lang.Class[])>
SOURCE|<org.apache.harmony.xnet.provider.jsse.SSLSessionImpl: javax.security.cert.X509Certificate[] getPeerCertificateChain()>
SOURCE|<android.text.Layout: long getLineRangeForDraw(android.graphics.Canvas)>
SOURCE|<org.kxml2.io.KXmlParser: java.lang.String getNamespace()>
SOURCE|<com.android.ex.chips.SingleRecipientArrayAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)>
SOURCE|<android.bluetooth.IBluetoothA2dp$Stub: android.os.IBinder asBinder()>
SOURCE|<android.filterfw.core.SerializedFrame: int[] getInts()>
SOURCE|<com.android.inputmethod.latin.suggestions.MoreSuggestionsView$2: com.android.inputmethod.keyboard.PointerTracker$TimerProxy getTimerProxy()>
SOURCE|<android.database.CursorWrapper: int getType(int)>
SOURCE|<android.widget.SlidingDrawer: android.view.View getHandle()>
SOURCE|<android.nfc.tech.BasicTagTechnology: byte[] transceive(byte[],boolean)>
SOURCE|<android.graphics.SurfaceTexture: long getTimestamp()>
SOURCE|<com.android.gallery3d.exif.ExifData: byte[] getStrip(int)>
SOURCE|<android.webkit.WebSettings: void setLoadsImagesAutomatically(boolean)>
SOURCE|<com.android.calendar.Utils: int getWeeksSinceEpochFromJulianDay(int,int)>
SOURCE|<android.widget.TextView: java.lang.CharSequence getText()>
SOURCE|<com.android.launcher2.FolderIcon$FolderRingAnimator: float getInnerRingSize()>
SOURCE|<com.android.internal.app.ActionBarImpl$TabImpl: int getPosition()>
SOURCE|<com.android.org.bouncycastle.asn1.ASN1TaggedObject: com.android.org.bouncycastle.asn1.ASN1TaggedObject getInstance(com.android.org.bouncycastle.asn1.ASN1TaggedObject,boolean)>
SOURCE|<android.widget.AdapterView: long getItemIdAtPosition(int)>
SOURCE|<com.google.common.collect.SortedMultisets$DescendingMultiset: com.google.common.collect.SortedMultiset headMultiset(java.lang.Object,com.google.common.collect.BoundType)>
SOURCE|<android.os.ServiceManagerNative: android.os.IBinder asBinder()>
SOURCE|<org.apache.harmony.xml.dom.ElementImpl: org.w3c.dom.NodeList getElementsByTagName(java.lang.String)>
SOURCE|<android.telephony.SmsManager: java.util.ArrayList getAllMessagesFromIcc()>
SOURCE|<com.android.mms.ui.MessageItem: java.lang.CharSequence getCachedFormattedMessage()>
SOURCE|<com.android.internal.telephony.gsm.GsmConnection: java.lang.String getRemainingPostDialString()>
SOURCE|<java.text.Bidi: int getLevelAt(int)>
SOURCE|<java.util.concurrent.LinkedTransferQueue: int getWaitingConsumerCount()>
SOURCE|<java.nio.channels.FileLock: long size()>
SOURCE|<org.xml.sax.helpers.XMLReaderFactory: org.xml.sax.XMLReader createXMLReader()>
SOURCE|<com.android.calendar.CalendarController: int getPreviousViewType()>
SOURCE|<com.android.browser.search.SearchEngines: com.android.browser.search.SearchEngine getDefaultSearchEngine(android.content.Context)>
SOURCE|<android.database.sqlite.SQLiteDatabase: android.database.sqlite.SQLiteSession getThreadSession()>
SOURCE|<android.content.Intent: android.os.IBinder getIBinderExtra(java.lang.String)>
SOURCE|<android.widget.Toast: int getYOffset()>
SOURCE|<com.android.server.location.ComprehensiveCountryDetector: android.location.Country getNetworkBasedCountry()>
SOURCE|<java.text.StringCharacterIterator: int getEndIndex()>
SOURCE|<gov.nist.core.GenericObjectList: java.lang.String toString()>
SOURCE|<java.lang.Runtime: java.io.OutputStream getLocalizedOutputStream(java.io.OutputStream)>
SOURCE|<android.appwidget.AppWidgetHost: android.appwidget.AppWidgetHostView onCreateView(android.content.Context,int,android.appwidget.AppWidgetProviderInfo)>
SOURCE|<java.net.URL: java.lang.String getUserInfo()>
SOURCE|<gov.nist.javax.sip.message.SIPMessage: javax.sip.header.ContentDispositionHeader getContentDisposition()>
SOURCE|<android.webkit.HTML5VideoInline: android.graphics.SurfaceTexture getSurfaceTexture(int)>
SOURCE|<android.preference.DialogPreference: android.app.Dialog getDialog()>
SOURCE|<com.coremedia.iso.boxes.MediaHeaderBox: long getDuration()>
SOURCE|<java.util.concurrent.atomic.AtomicStampedReference: int getStamp()>
SOURCE|<java.time.Period: long get(java.time.temporal.TemporalUnit)>
SOURCE|<java.util.concurrent.ConcurrentSkipListMap: java.lang.Object get(java.lang.Object)>
SOURCE|<org.apache.http.message.BasicHeaderValueParser: org.apache.http.NameValuePair parseNameValuePair(java.lang.String,org.apache.http.message.HeaderValueParser)>
SOURCE|<java.net.DatagramSocket: java.net.SocketAddress getLocalSocketAddress()>
SOURCE|<android.widget.NumberPicker: float getBottomFadingEdgeStrength()>
SOURCE|<android.net.http.CertificateChainValidator: android.net.http.CertificateChainValidator getInstance()>
SOURCE|<com.android.internal.telephony.PhoneProxy: com.android.internal.telephony.IccSmsInterfaceManager getIccSmsInterfaceManager()>
SOURCE|<gov.nist.javax.sip.stack.TCPMessageProcessor: java.lang.String getTransport()>
SOURCE|<com.android.gallery3d.data.MtpDevice: java.lang.String getName()>
SOURCE|<gov.nist.core.LexerCore: java.lang.String getBuffer()>
SOURCE|<gov.nist.javax.sip.stack.SIPTransactionStack: javax.sip.address.Router getRouter(gov.nist.javax.sip.message.SIPRequest)>
SOURCE|<android.mtp.MtpObjectInfo: int getImagePixDepth()>
SOURCE|<org.apache.harmony.security.x509.TBSCertList$RevokedCertificate: java.util.Date getRevocationDate()>
SOURCE|<com.android.inputmethod.latin.InputPointers: int getPointerSize()>
SOURCE|<com.android.internal.widget.WaveView: int getSuggestedMinimumWidth()>
SOURCE|<android.net.INetworkStatsService$Stub$Proxy: android.net.NetworkStats getDataLayerSnapshotForUid(int)>
SOURCE|<android.widget.TextView: int getMarqueeRepeatLimit()>
SOURCE|<com.android.internal.telephony.gsm.GsmConnection: int getNumberPresentation()>
SOURCE|<android.webkit.WebStorage$Origin: java.lang.String getOrigin()>
SOURCE|<com.android.exchange.EasSyncService: com.android.exchange.EasSyncService getServiceForMailbox(android.content.Context,com.android.emailcommon.provider.Mailbox)>
SOURCE|<com.android.calendar.CalendarEventModel$ReminderEntry: int getMinutes()>
SOURCE|<org.apache.harmony.security.x509.AlgorithmIdentifier: java.lang.String getAlgorithmName()>
SOURCE|<com.android.calendar.selectcalendars.SelectCalendarsSimpleAdapter: long getItemId(int)>
SOURCE|<java.nio.MappedByteBufferAdapter: short getShort(int)>
SOURCE|<com.android.gallery3d.ui.ExtTexture: int getTextureWidth()>
SOURCE|<android.view.View: int getPaddingBottom()>
SOURCE|<java.nio.MappedByteBufferAdapter: float getFloat()>
SOURCE|<java.security.CodeSigner: java.security.cert.CertPath getSignerCertPath()>
SOURCE|<android.widget.TextView: android.text.TextUtils$TruncateAt getEllipsize()>
SOURCE|<java.text.BreakIterator: java.text.BreakIterator getWordInstance()>
SOURCE|<org.apache.http.util.EncodingUtils: byte[] getBytes(java.lang.String,java.lang.String)>
SOURCE|<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: java.util.concurrent.locks.Lock getLock()>
SOURCE|<com.android.calendar.Event: java.lang.String getTitleAndLocation()>
SOURCE|<com.android.gallery3d.picasasource.PicasaAlbum: int getSupportedOperations()>
SOURCE|<java.time.chrono.HijrahDate: long getProlepticMonth()>
SOURCE|<android.net.wifi.p2p.nsd.WifiP2pDnsSdServiceResponse: int getDnsType()>
SOURCE|<com.android.internal.policy.impl.keyguard.PagedView: float getMaxScrollProgress()>
SOURCE|<android.app.IInstrumentationWatcher$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
SOURCE|<android.view.ViewConfiguration: int getScaledDoubleTapSlop()>
SOURCE|<android.content.res.XmlBlock$Parser: java.lang.String getNamespacePrefix(int)>
SOURCE|<android.net.DhcpInfoInternal: java.util.Collection getRoutes()>
SOURCE|<android.bluetooth.IBluetoothManager$Stub: android.os.IBinder asBinder()>
SOURCE|<com.android.browser.view.BookmarkExpandableView$BookmarkAccountAdapter: android.view.View getGroupView(int,boolean,android.view.View,android.view.ViewGroup)>
SOURCE|<android.view.inputmethod.InputMethodManager: android.view.inputmethod.InputMethodSubtype getLastInputMethodSubtype()>
SOURCE|<com.android.mms.dom.smil.SmilRegionElementImpl: java.lang.String getFit()>
SOURCE|<com.android.i18n.phonenumbers.geocoding.AreaCodeMap: com.android.i18n.phonenumbers.geocoding.AreaCodeMapStorageStrategy getSmallerMapStorage(java.util.SortedMap)>
SOURCE|<java.nio.CharArrayBuffer: char get(int)>
SOURCE|<com.android.browser.Controller: java.util.List getTabs()>
SOURCE|<com.android.commands.monkey.MonkeySourceRandom: java.lang.String getKeyName(int)>
SOURCE|<android.test.mock.MockContext: java.lang.Object getSystemService(java.lang.String)>
SOURCE|<android.media.AudioTrack: int getChannelCount()>
SOURCE|<android.media.MediaRouter: android.media.MediaRouter$RouteInfo getSelectedRoute(int)>
SOURCE|<com.android.mms.drm.DrmUtils: java.lang.String getConvertExtension(java.lang.String)>
SOURCE|<com.android.internal.widget.multiwaveview.Ease$Cubic$1: float getInterpolation(float)>
SOURCE|<com.android.contacts.activities.DialtactsActivity$PageChangeListener: int getCurrentPosition()>
SOURCE|<com.android.gallery3d.common.OverScroller: int getFinalX()>
SOURCE|<android.content.ContentResolver: java.util.List getCurrentSyncs()>
SOURCE|<com.android.browser.search.OpenSearchSearchEngine$SuggestionsCursor: int getInt(int)>
SOURCE|<java.lang.Package: java.lang.annotation.Annotation[] getDeclaredAnnotations()>
SOURCE|<android.telephony.TelephonyManager: java.lang.String getNetworkOperatorName()>
SOURCE|<com.android.internal.telephony.DataConnectionTracker: boolean getAnyDataEnabled()>
SOURCE|<org.apache.harmony.xml.ExpatParser$ExpatLocator: java.lang.String getSystemId()>
SOURCE|<android.webkit.WebBackForwardListClassic: int getCurrentIndex()>
SOURCE|<android.content.pm.IPackageManager$Stub$Proxy: android.content.pm.PackageCleanItem nextPackageToClean(android.content.pm.PackageCleanItem)>
SOURCE|<com.android.internal.app.IMediaContainerService$Stub$Proxy: android.content.res.ObbInfo getObbInfo(java.lang.String)>
SOURCE|<com.android.internal.telephony.gsm.SmsMessage$PduParser: java.lang.String getUserDataUCS2(int)>
SOURCE|<android.net.NetworkIdentity: boolean getRoaming()>
SOURCE|<com.android.launcher2.PagedViewGridLayout: int getCellCountY()>
SOURCE|<android.net.wifi.ScanResult$1: android.net.wifi.ScanResult createFromParcel(android.os.Parcel)>
SOURCE|<android.hardware.input.InputManager: android.os.Vibrator getInputDeviceVibrator(int)>
SOURCE|<android.content.ContentValues: java.lang.Long getAsLong(java.lang.String)>
SOURCE|<com.android.internal.os.BatteryStatsImpl$Uid$Sensor: android.os.BatteryStats$Timer getSensorTime()>
SOURCE|<com.google.android.picasasync.PrefetchHelper: com.google.android.picasasync.PrefetchHelper get(android.content.Context)>
SOURCE|<android.webkit.WebViewClassic: java.lang.String getOriginalUrl()>
SOURCE|<com.android.internal.telephony.ITelephony$Stub$Proxy: int getLteOnCdmaMode()>
SOURCE|<java.lang.invoke.CallSite: java.lang.invoke.MethodHandle getTargetVolatile()>
SOURCE|<com.android.internal.telephony.cat.RilMessageDecoder: com.android.internal.telephony.cat.RilMessageDecoder getInstance(android.os.Handler,com.android.internal.telephony.IccFileHandler)>
SOURCE|<gov.nist.javax.sip.header.TimeStamp: int getTimeDelay()>
SOURCE|<java.time.OffsetDateTime: int getDayOfYear()>
SOURCE|<com.android.email.activity.UIControllerBase: long getMailboxListMailboxId()>
SOURCE|<com.android.gallery3d.data.ComboAlbum: java.lang.String getName()>
SOURCE|<java.util.concurrent.FutureTask: java.lang.Object get()>
SOURCE|<android.graphics.drawable.GradientDrawable: boolean getPadding(android.graphics.Rect)>
SOURCE|<com.google.common.collect.MapMakerInternalMap$NullEntry: int getHash()>
SOURCE|<android.content.res.TypedArray: int getInteger(int,int)>
SOURCE|<android.telephony.SignalStrength: int getGsmDbm()>
SOURCE|<android.text.Layout: java.lang.CharSequence getText()>
SOURCE|<android.app.AlertDialog: android.widget.Button getButton(int)>
SOURCE|<android.telephony.ServiceState: int getCdmaEriIconMode()>
SOURCE|<com.android.contacts.util.AccountSelectionUtil$1: android.view.View getView(int,android.view.View,android.view.ViewGroup)>
SOURCE|<android.renderscript.Allocation: android.renderscript.Allocation createCubemapFromCubeFaces(android.renderscript.RenderScript,android.graphics.Bitmap,android.graphics.Bitmap,android.graphics.Bitmap,android.graphics.Bitmap,android.graphics.Bitmap,android.graphics.Bitmap)>
SOURCE|<android.content.res.Resources: android.content.res.XmlResourceParser getXml(int)>
SOURCE|<android.test.IsolatedContext: android.content.ContentResolver getContentResolver()>
SOURCE|<org.apache.harmony.security.asn1.BerInputStream: java.lang.Object get(java.lang.Object)>
SOURCE|<com.android.internal.os.ProcessStats: int getLastIrqTime()>
SOURCE|<java.security.PrivilegedActionException: java.lang.Exception getException()>
SOURCE|<com.android.server.InputMethodManagerService: java.util.List getEnabledInputMethodSubtypeList(android.view.inputmethod.InputMethodInfo,boolean)>
SOURCE|<java.security.CodeSource: java.security.cert.Certificate[] getCertificates()>
SOURCE|<com.android.server.accessibility.TouchExplorer$ReceivedPointerTracker: long getLastReceivedUpPointerDownTime()>
SOURCE|<com.google.android.mms.pdu.PduPart: byte[] getFilename()>
SOURCE|<com.android.contacts.model.Contact: com.google.common.collect.ImmutableList getRawContacts()>
SOURCE|<android.os.Environment: java.io.File getExternalStorageAppDataDirectory(java.lang.String)>
SOURCE|<com.android.browser.Controller: com.android.browser.TabControl getTabControl()>
SOURCE|<com.android.exchange.utility.CalendarUtilities: int getWord(byte[],int)>
SOURCE|<org.apache.harmony.xml.dom.NodeImpl: java.lang.Object getUserData(java.lang.String)>
SOURCE|<com.google.android.apps.lightcycle.opengl.Shader: int getAttribute(int,java.lang.String)>
SOURCE|<com.android.gallery3d.picasasource.PicasaSource: android.content.ContentProviderClient getStoreProvider()>
SOURCE|<java.time.LocalDateTime: java.time.DayOfWeek getDayOfWeek()>
SOURCE|<com.android.contacts.list.ContactListFilterControllerImpl: com.android.contacts.list.ContactListFilter getFilter()>
SOURCE|<com.android.providers.contacts.PhotoStore: com.android.providers.contacts.PhotoStore$Entry get(long)>
SOURCE|<android.bluetooth.BluetoothSocket: java.io.OutputStream getOutputStream()>
SOURCE|<com.android.email.MessageListContext: long getSearchedMailbox()>
SOURCE|<com.android.contacts.model.dataitem.DataItem: java.lang.String getMimeType()>
SOURCE|<java.security.spec.ECPoint: java.math.BigInteger getAffineX()>
SOURCE|<com.android.inputmethod.latin.SettingsValues: java.lang.String getInputAttributesDebugString()>
SOURCE|<java.text.NumberFormat: java.text.NumberFormat getCurrencyInstance(java.util.Locale)>
SOURCE|<javax.crypto.spec.DHPrivateKeySpec: java.math.BigInteger getP()>
SOURCE|<android.media.Ringtone: android.net.Uri getUri()>
SOURCE|<java.util.concurrent.ForkJoinPool: int getParallelism()>
SOURCE|<com.android.mms.model.MediaModel: com.android.mms.model.MediaModel$MediaAction getCurrentAction()>
SOURCE|<com.android.providers.contacts.ContactsProvider2: com.android.providers.contacts.PhotoStore getPhotoStore()>
SOURCE|<javax.obex.ApplicationParameter: byte[] getAPPparam()>
SOURCE|<android.app.TaskStackBuilder: android.app.PendingIntent getPendingIntent(int,int,android.os.Bundle)>
SOURCE|<android.view.View: int getMeasuredState()>
SOURCE|<com.android.internal.telephony.IPhoneSubInfo$Stub: android.os.IBinder asBinder()>
SOURCE|<org.apache.harmony.xml.dom.DOMConfigurationImpl$2: java.lang.Object get(org.apache.harmony.xml.dom.DOMConfigurationImpl)>
SOURCE|<java.io.DataInputStream: byte readByte()>
SOURCE|<android.net.Uri$StringUri: java.lang.String getPath()>
SOURCE|<com.android.providers.contacts.TransactionContext: java.util.Set getUpdatedSyncStates()>
SOURCE|<android.graphics.Paint: void getTextBounds(java.lang.String,int,int,android.graphics.Rect)>
SOURCE|<android.database.AbstractWindowedCursor: int getInt(int)>
SOURCE|<com.android.gallery3d.ui.BitmapTileProvider: int getImageWidth()>
SOURCE|<com.android.exchange.EasResponse: org.apache.http.Header getHeader(java.lang.String)>
SOURCE|<com.android.contacts.quickcontact.DataAction: int getPresence()>
SOURCE|<gov.nist.javax.sip.address.TelephoneNumber: java.lang.String getPhoneNumber()>
SOURCE|<com.android.bluetooth.btservice.AdapterService$AdapterServiceBinder: android.os.ParcelFileDescriptor createSocketChannel(int,java.lang.String,android.os.ParcelUuid,int,int)>
SOURCE|<android.widget.AdapterViewAnimator: int getWindowSize()>
SOURCE|<com.android.server.accessibility.TouchExplorer$ReceivedPointerTracker: float getReceivedPointerDownX(int)>
SOURCE|<com.android.inputmethod.latin.LogEntries$DeviceInfoEntry: java.lang.String[] getLogStrings()>
SOURCE|<android.view.ViewGroup: int getChildDrawingOrder(int,int)>
SOURCE|<android.service.dreams.IDreamService$Stub: android.os.IBinder asBinder()>
SOURCE|<org.apache.http.impl.client.AbstractHttpClient: org.apache.http.client.RequestDirector createClientRequestDirector(org.apache.http.protocol.HttpRequestExecutor,org.apache.http.conn.ClientConnectionManager,org.apache.http.ConnectionReuseStrategy,org.apache.http.conn.ConnectionKeepAliveStrategy,org.apache.http.conn.routing.HttpRoutePlanner,org.apache.http.protocol.HttpProcessor,org.apache.http.client.HttpRequestRetryHandler,org.apache.http.client.RedirectHandler,org.apache.http.client.AuthenticationHandler,org.apache.http.client.AuthenticationHandler,org.apache.http.client.UserTokenHandler,org.apache.http.params.HttpParams)>
SOURCE|<android.location.ILocationManager$Stub$Proxy: java.lang.String getFromLocationName(java.lang.String,double,double,double,double,int,android.location.GeocoderParams,java.util.List)>
SOURCE|<com.android.internal.policy.impl.keyguard.SlidingChallengeLayout$2: float getInterpolation(float)>
SOURCE|<android.app.ContextImpl: android.app.ContextImpl getImpl(android.content.Context)>
SOURCE|<com.google.android.mms.pdu.RetrieveConf: byte[] getTransactionId()>
SOURCE|<java.util.Locale: java.lang.String getDisplayName(java.util.Locale)>
SOURCE|<android.widget.TextView: float getShadowRadius()>
SOURCE|<gov.nist.javax.sip.header.Challenge: java.lang.String getQOP()>
SOURCE|<android.hardware.input.InputManager: boolean[] deviceHasKeys(int[])>
SOURCE|<com.android.email.mail.transport.MailTransport: int getPort()>
SOURCE|<android.text.format.Time: boolean parse(java.lang.String)>
SOURCE|<java.io.ObjectStreamClass: java.io.ObjectStreamField[] fields()>
SOURCE|<android.database.AbstractCursor: byte[] getBlob(int)>
SOURCE|<android.widget.LinearLayout: int getShowDividers()>
SOURCE|<java.nio.ByteBuffer: java.nio.ByteBuffer get(byte[],int,int)>
SOURCE|<org.apache.http.client.methods.HttpTrace: java.lang.String getMethod()>
SOURCE|<org.apache.harmony.xnet.provider.jsse.HandshakeIODataStream: byte[] getDigestMD5()>
SOURCE|<android.media.AudioService: int getMasterStreamType()>
SOURCE|<com.google.common.collect.Maps$TransformedEntriesMap: java.lang.Object get(java.lang.Object)>
SOURCE|<android.app.DownloadManager: int markRowDeleted(long[])>
SOURCE|<java.lang.reflect.AccessibleObject: java.lang.String getSignature(java.lang.Class)>
SOURCE|<java.io.DataInputStream: java.lang.String readUTF()>
SOURCE|<com.android.contacts.list.ContactListFilter: com.android.contacts.list.ContactListFilter restoreDefaultPreferences(android.content.SharedPreferences)>
SOURCE|<android.drm.DrmUtils$ExtendedMetadataParser: java.lang.String get(java.lang.String)>
SOURCE|<com.android.internal.telephony.ims.IsimUiccRecords: java.lang.String getIsimImpi()>
SOURCE|<android.animation.PropertyValuesHolder: java.lang.String getPropertyName()>
SOURCE|<com.android.mms.model.SmilHelper: org.w3c.dom.smil.SMILDocument getDocument(com.android.mms.model.SlideshowModel)>
SOURCE|<android.database.sqlite.SQLiteCursor: int getCount()>
SOURCE|<libcore.icu.NativeDecimalFormat: int getMaximumFractionDigits()>
SOURCE|<com.android.calendar.agenda.AgendaByDayAdapter: java.lang.Object getItem(int)>
SOURCE|<java.text.NumberFormat: java.lang.String format(long)>
SOURCE|<com.android.exchange.ExchangeService$AccountObserver: java.lang.String getAccountKeyWhere()>
SOURCE|<java.lang.reflect.Constructor: java.lang.String getName()>
SOURCE|<org.apache.harmony.xnet.provider.jsse.SSLSessionImpl: byte[] getId()>
SOURCE|<java.util.Base64: java.util.Base64$Decoder getMimeDecoder()>
SOURCE|<com.android.email.mail.transport.DiscourseLogger: java.lang.String[] getLines()>
SOURCE|<com.android.server.pm.PackageManagerService$AsecInstallArgs: java.lang.String getPackageName()>
SOURCE|<java.util.concurrent.Semaphore$Sync: int getPermits()>
SOURCE|<javax.xml.namespace.QName: java.lang.String getLocalPart()>
SOURCE|<com.android.providers.contacts.ContactsDatabaseHelper: java.lang.String getDataMimeType(long)>
SOURCE|<android.text.DynamicLayout: int getLineStart(int)>
SOURCE|<android.preference.PreferenceScreen: android.widget.ListAdapter getRootAdapter()>
SOURCE|<android.drm.mobile1.DrmRightsManager: android.drm.mobile1.DrmRights installRights(java.io.InputStream,int,java.lang.String)>
SOURCE|<com.android.browser.DataUri: java.lang.String getMimeType()>
SOURCE|<com.android.camera.CameraSettings: com.android.camera.PreferenceGroup getPreferenceGroup(int)>
SOURCE|<android.speech.tts.TextToSpeechService$SpeechItem: java.lang.String getUtteranceId()>
SOURCE|<android.view.KeyCharacterMap: int get(int,int)>
SOURCE|<com.android.contacts.list.ContactEntryListFragment: int getSortOrder()>
SOURCE|<android.text.Annotation: int getSpanTypeId()>
SOURCE|<android.widget.AutoCompleteTextView: android.widget.AutoCompleteTextView$Validator getValidator()>
SOURCE|<java.nio.DirectByteBuffer: byte get()>
SOURCE|<android.filterpacks.imageproc.CropFilter: android.filterfw.core.FrameFormat getOutputFormat(java.lang.String,android.filterfw.core.FrameFormat)>
SOURCE|<android.widget.Editor$PositionListener: int getPositionY()>
SOURCE|<com.android.server.MountService: java.lang.String[] getSecureContainerList()>
SOURCE|<com.android.org.bouncycastle.asn1.DERExternalParser: com.android.org.bouncycastle.asn1.ASN1Primitive getLoadedObject()>
SOURCE|<com.android.org.bouncycastle.asn1.x509.SubjectPublicKeyInfo: com.android.org.bouncycastle.asn1.x509.SubjectPublicKeyInfo getInstance(java.lang.Object)>
SOURCE|<gov.nist.javax.sip.stack.UDPMessageChannel: java.lang.String getKey()>
SOURCE|<java.lang.reflect.Constructor: java.lang.reflect.Type[] getGenericParameterTypes()>
SOURCE|<org.ccil.cowan.tagsoup.Schema: org.ccil.cowan.tagsoup.ElementType rootElementType()>
SOURCE|<android.content.CursorLoader: android.net.Uri getUri()>
SOURCE|<gov.nist.javax.sip.header.AuthenticationHeader: java.lang.String getRealm()>
SOURCE|<org.apache.harmony.xml.ExpatReader: org.xml.sax.EntityResolver getEntityResolver()>
SOURCE|<com.android.server.NetworkManagementService: android.net.NetworkStats getNetworkStatsDetail()>
SOURCE|<android.net.IConnectivityManager$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
SOURCE|<android.widget.TextView: android.text.method.MovementMethod getMovementMethod()>
SOURCE|<com.android.server.am.CompatModePackages: java.util.HashMap getPackages()>
SOURCE|<android.provider.MediaStore$Images$Media: android.database.Cursor query(android.content.ContentResolver,android.net.Uri,java.lang.String[])>
SOURCE|<android.graphics.drawable.AnimatedRotateDrawable: android.graphics.drawable.Drawable$ConstantState getConstantState()>
SOURCE|<gov.nist.javax.sip.stack.SIPDialog: long getOriginalLocalSequenceNumber()>
SOURCE|<android.text.format.DateUtils: java.lang.CharSequence getRelativeTimeSpanString(long)>
SOURCE|<com.android.bluetooth.hfp.HeadsetStateMachine: java.util.List getConnectedDevices()>
SOURCE|<java.security.cert.CertificateRevokedException: void readObject(java.io.ObjectInputStream)>
SOURCE|<com.google.common.base.Predicates$ObjectPredicate: com.google.common.base.Predicate withNarrowedType()>
SOURCE|<com.android.mms.MmsConfig: int getMaxImageHeight()>
SOURCE|<java.text.DateFormat: java.text.DateFormat getTimeInstance()>
SOURCE|<android.content.pm.PackageManager: java.lang.String getDataDirForUser(int,java.lang.String)>
SOURCE|<com.android.contacts.list.ContactListFilter: java.lang.String getId()>
SOURCE|<android.widget.TextView: int getTextColor(android.content.Context,android.content.res.TypedArray,int)>
SOURCE|<android.app.SearchableInfo$ActionKeyInfo: java.lang.String getQueryActionMsg()>
SOURCE|<android.widget.TextView: android.graphics.Typeface getTypeface()>
SOURCE|<com.android.mms.transaction.ReadRecTransaction: int getType()>
SOURCE|<com.android.email.RefreshManager: long getLastMessageListRefreshTime(long)>
SOURCE|<com.android.server.AppWidgetService: java.util.List getInstalledProviders(int)>
SOURCE|<android.text.StaticLayout: int getTopPadding()>
SOURCE|<android.widget.TextView: int getSelectionEnd()>
SOURCE|<com.android.inputmethod.latin.ExpandableDictionary: com.android.inputmethod.latin.ExpandableDictionary$NextWord getBigramWord(java.lang.String,java.lang.String)>
SOURCE|<android.media.videoeditor.MediaVideoItem: int getVideoBitrate()>
SOURCE|<android.view.animation.OvershootInterpolator: float getInterpolation(float)>
SOURCE|<android.app.ApplicationPackageManager: android.content.res.Resources getResourcesForApplication(java.lang.String)>
SOURCE|<android.util.SparseLongArray: long get(int)>
SOURCE|<java.net.URL: java.lang.Object getContent(java.lang.Class[])>
SOURCE|<gov.nist.javax.sip.address.SipUri: int getTTLParam()>
SOURCE|<android.view.accessibility.AccessibilityRecord: java.lang.CharSequence getContentDescription()>
SOURCE|<java.text.SimpleDateFormat: java.util.Date parse(java.lang.String,java.text.ParsePosition)>
SOURCE|<android.filterpacks.imageproc.ContrastFilter: android.filterfw.core.Program getNativeProgram(android.filterfw.core.FilterContext)>
SOURCE|<android.content.ContentResolver: android.content.IContentService getContentService()>
SOURCE|<com.android.vcard.VCardParserImpl_V21: java.util.Set getKnownValueSet()>
SOURCE|<com.android.browser.provider.BrowserProvider2$SuggestionsCursor: double getDouble(int)>
SOURCE|<com.android.calendar.agenda.AgendaWindowAdapter: int getHeaderPositionFromItemPosition(int)>
SOURCE|<android.util.SparseArray: java.lang.Object get(int,java.lang.Object)>
SOURCE|<org.apache.http.impl.auth.DigestScheme: org.apache.http.Header authenticate(org.apache.http.auth.Credentials,org.apache.http.HttpRequest)>
SOURCE|<com.android.browser.Tab: com.android.browser.Tab getParent()>
SOURCE|<android.text.Layout: int getLineForOffset(int)>
SOURCE|<android.widget.TableRow: int getNextLocationOffset(android.view.View)>
SOURCE|<android.telephony.SmsMessage: java.lang.String getServiceCenterAddress()>
SOURCE|<org.apache.harmony.xnet.provider.jsse.CipherSuite: java.lang.String getBulkEncryptionAlgorithm()>
SOURCE|<java.time.OffsetDateTime: int getHour()>
SOURCE|<org.apache.james.mime4j.field.address.Mailbox: java.lang.String getDomain()>
SOURCE|<com.android.inputmethod.keyboard.ProximityInfo: com.android.inputmethod.keyboard.Key[] getNearestKeys(int,int)>
SOURCE|<com.android.bluetooth.btservice.AdapterService: int getState()>
SOURCE|<com.android.internal.widget.multiwaveview.Ease$Linear$1: float getInterpolation(float)>
SOURCE|<android.preference.PreferenceActivity$Header: java.lang.CharSequence getBreadCrumbTitle(android.content.res.Resources)>
SOURCE|<com.android.inputmethod.latin.SubtypeLocale: java.lang.String[] getPredefinedKeyboardLayoutSet()>
SOURCE|<android.provider.MediaStore: android.net.Uri getMediaScannerUri()>
SOURCE|<java.net.DatagramSocket: int getTrafficClass()>
SOURCE|<com.android.nfc.NfcService$NfcAdapterService: android.nfc.INfcAdapterExtras getNfcAdapterExtrasInterface(java.lang.String)>
SOURCE|<android.renderscript.Mesh$AllocationBuilder: int getCurrentIndexSetIndex()>
SOURCE|<java.lang.Long: long parseLong(java.lang.String)>
SOURCE|<java.time.zone.ZoneOffsetTransition: java.time.ZoneOffset getOffsetBefore()>
SOURCE|<java.time.LocalDateTime: int getMinute()>
SOURCE|<org.apache.http.params.HttpProtocolParams: java.lang.String getContentCharset(org.apache.http.params.HttpParams)>
SOURCE|<com.google.common.collect.ForwardingConcurrentMap: java.lang.Object replace(java.lang.Object,java.lang.Object)>
SOURCE|<java.security.cert.X509CRLSelector: java.math.BigInteger getMaxCRL()>
SOURCE|<java.util.Base64: java.util.Base64$Encoder getMimeEncoder(int,byte[])>
SOURCE|<gov.nist.javax.sip.stack.MessageChannel: java.lang.String getKey(gov.nist.core.HostPort,java.lang.String)>
SOURCE|<android.app.Dialog: android.view.View getCurrentFocus()>
SOURCE|<android.view.KeyEvent: int getMetaState()>
SOURCE|<com.android.server.AppWidgetServiceImpl: android.appwidget.AppWidgetProviderInfo getAppWidgetInfo(int)>
SOURCE|<android.location.LocationRequest: long getExpireAt()>
SOURCE|<android.view.IWindowManager$Stub$Proxy: void getVisibleWindowsForDisplay(int,java.util.List)>
SOURCE|<com.android.internal.view.BaseSurfaceHolder: int getRequestedHeight()>
SOURCE|<android.net.UrlQuerySanitizer: android.net.UrlQuerySanitizer$ValueSanitizer getAllIllegal()>
SOURCE|<com.android.contacts.list.CustomContactListFilterActivity$GroupDelta: java.lang.CharSequence getTitle(android.content.Context)>
SOURCE|<android.test.ComparisonFailure: java.lang.String getMessage()>
SOURCE|<android.text.DynamicLayout: int getTopPadding()>
SOURCE|<java.io.Console: java.io.Console getConsole()>
SOURCE|<java.sql.Timestamp: int getNanos()>
SOURCE|<android.view.KeyEvent: int getDeadChar(int,int)>
SOURCE|<com.android.email.mail.store.Pop3Store$Pop3Folder: int getMessageCount()>
SOURCE|<android.drm.DrmInfo: java.lang.String getMimeType()>
SOURCE|<java.lang.RealToString: java.lang.RealToString getInstance()>
SOURCE|<com.android.launcher2.FolderIcon: boolean getTextVisible()>
SOURCE|<android.webkit.CallbackProxy: android.webkit.WebChromeClient getWebChromeClient()>
SOURCE|<android.location.ILocationManager$Stub$Proxy: com.android.internal.location.ProviderProperties getProviderProperties(java.lang.String)>
SOURCE|<com.android.launcher2.LauncherModel: android.graphics.Bitmap getFallbackIcon()>
SOURCE|<com.android.videoeditor.service.VideoEditorProject$Download: java.lang.String getMediaUri()>
SOURCE|<com.android.gallery3d.filtershow.provider.SharedImageProvider: java.lang.String getType(android.net.Uri)>
SOURCE|<android.widget.Editor$InsertionHandleView: int getHotspotX(android.graphics.drawable.Drawable,boolean)>
SOURCE|<android.content.AbstractThreadedSyncAdapter: android.os.IBinder getSyncAdapterBinder()>
SOURCE|<android.webkit.WebSettingsClassic: android.webkit.WebSettings$ZoomDensity getDefaultZoom()>
SOURCE|<android.view.View: float getTopFadingEdgeStrength()>
SOURCE|<java.security.spec.RSAOtherPrimeInfo: java.math.BigInteger getCrtCoefficient()>
SOURCE|<android.view.inputmethod.BaseInputConnection: android.text.Editable getEditable()>
SOURCE|<com.android.emailcommon.TrafficFlags: int getSmtpFlags(android.content.Context,com.android.emailcommon.provider.Account)>
SOURCE|<java.io.RandomAccessFile: char readChar()>
SOURCE|<javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManager[] getTrustManagers()>
SOURCE|<com.android.internal.telephony.gsm.SmsCbHeader: int getServiceCategory()>
SOURCE|<android.widget.ViewAnimator: android.view.animation.Animation getInAnimation()>
SOURCE|<com.android.bluetooth.btservice.ProfileService: java.lang.String getName()>
SOURCE|<com.android.server.ThrottleService: java.lang.String getHelpUri()>
SOURCE|<com.android.mms.dom.NodeImpl: java.lang.String getPrefix()>
SOURCE|<com.google.common.collect.BstCountBasedBalancePolicies$2: com.google.common.collect.BstNode combine(com.google.common.collect.BstNodeFactory,com.google.common.collect.BstNode,com.google.common.collect.BstNode)>
SOURCE|<org.apache.harmony.xnet.provider.jsse.OpenSSLSessionImpl: javax.security.cert.X509Certificate[] getPeerCertificateChain()>
SOURCE|<com.android.browser.view.BookmarkExpandableView$BookmarkAccountAdapter: long getChildId(int,int)>
SOURCE|<com.android.inputmethod.latin.WordComposer: int getCodeAt(int)>
SOURCE|<android.content.BroadcastReceiver$PendingResult: boolean getAbortBroadcast()>
SOURCE|<java.security.spec.DSAPublicKeySpec: java.math.BigInteger getG()>
SOURCE|<android.bluetooth.IBluetooth$Stub$Proxy: int getBondState(android.bluetooth.BluetoothDevice)>
SOURCE|<com.google.android.mms.pdu.AcknowledgeInd: int getReportAllowed()>
SOURCE|<com.android.providers.contacts.VoicemailStatusTable: android.database.Cursor query(com.android.providers.contacts.VoicemailContentProvider$UriData,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>
SOURCE|<android.location.Address: java.lang.String getPremises()>
SOURCE|<android.content.Context: java.lang.String getString(int,java.lang.Object[])>
SOURCE|<android.media.audiofx.EnvironmentalReverb: short getDensity()>
SOURCE|<java.net.URLConnection: java.net.FileNameMap getFileNameMap()>
SOURCE|<com.android.camera.Storage: long getAvailableSpace()>
SOURCE|<android.content.ContentValues: java.lang.Integer getAsInteger(java.lang.String)>
SOURCE|<android.text.SpannableStringBuilder: android.text.InputFilter[] getFilters()>
SOURCE|<com.android.mms.data.Conversation: long getOrCreateThreadId(android.content.Context,java.lang.String)>
SOURCE|<com.android.org.bouncycastle.asn1.ASN1Sequence: java.util.Enumeration getObjects()>
SOURCE|<com.android.internal.widget.multiwaveview.Ease$Quint$2: float getInterpolation(float)>
SOURCE|<com.android.gallery3d.filtershow.imageshow.ImageShow: com.android.gallery3d.filtershow.presets.ImagePreset getImagePreset()>
SOURCE|<com.android.browser.provider.BrowserProvider2: java.lang.String getType(android.net.Uri)>
SOURCE|<android.widget.OverScroller: int getCurrY()>
SOURCE|<java.util.zip.CRC32: long getValue()>
SOURCE|<android.net.Uri$AbstractHierarchicalUri: java.lang.String getHost()>
SOURCE|<com.android.gallery3d.ui.NinePatchTexture$SmallCache: java.lang.Object get(int)>
SOURCE|<java.util.Locale: java.lang.String getDisplayLanguage(java.util.Locale)>
SOURCE|<com.google.common.collect.Ordering: com.google.common.collect.Ordering nullsFirst()>
SOURCE|<android.location.LocationManager: android.location.GpsStatus getGpsStatus(android.location.GpsStatus)>
SOURCE|<com.android.ex.chips.RecipientEntry: byte[] getPhotoBytes()>
SOURCE|<gov.nist.javax.sip.stack.UDPMessageChannel: int getViaPort()>
SOURCE|<com.android.internal.telephony.gsm.GsmConnection: com.android.internal.telephony.Connection$DisconnectCause getDisconnectCause()>
SOURCE|<com.android.calendar.widget.CalendarAppWidgetService$CalendarFactory: java.lang.Runnable access$800(com.android.calendar.widget.CalendarAppWidgetService$CalendarFactory,java.lang.String,android.content.BroadcastReceiver$PendingResult,int)>
SOURCE|<java.security.spec.DSAParameterSpec: java.math.BigInteger getQ()>
SOURCE|<android.support.v4.view.MotionEventCompat: int getActionIndex(android.view.MotionEvent)>
SOURCE|<com.android.email.provider.ContentCache$CachedCursor: int getCount()>
SOURCE|<javax.xml.transform.sax.SAXResult: java.lang.String getSystemId()>
SOURCE|<android.app.LoadedApk: java.lang.String getDataDir()>
SOURCE|<android.widget.CursorAdapter: android.database.Cursor swapCursor(android.database.Cursor)>
SOURCE|<libcore.net.http.HttpsURLConnectionImpl: java.lang.String getHeaderField(int)>
SOURCE|<com.android.bluetooth.pan.PanService$BluetoothPanBinder: java.util.List getDevicesMatchingConnectionStates(int[])>
SOURCE|<gov.nist.javax.sip.Utils: java.lang.String getQuotedString(java.lang.String)>
SOURCE|<android.app.ApplicationPackageManager: java.util.List getInstalledPackages(int,int)>
SOURCE|<java.util.GregorianCalendar: int getLeastMaximum(int)>
SOURCE|<com.android.browser.BookmarkUtils: android.net.Uri getBookmarksUri(android.content.Context)>
SOURCE|<com.android.internal.widget.LockPatternView: int getSuggestedMinimumHeight()>
SOURCE|<android.content.pm.IPackageManager$Stub$Proxy: java.util.List queryIntentReceivers(android.content.Intent,java.lang.String,int,int)>
SOURCE|<org.apache.harmony.security.x509.GeneralName: java.util.List getAsList()>
SOURCE|<com.android.internal.app.ActionBarImpl: int getDisplayOptions()>
SOURCE|<android.app.admin.IDevicePolicyManager$Stub$Proxy: int getPasswordMinimumLetters(android.content.ComponentName,int)>
SOURCE|<com.googlecode.mp4parser.authoring.tracks.CroppedTrack: java.util.List getSampleDependencies()>
SOURCE|<com.google.common.collect.ForwardingMapEntry: java.lang.Object getValue()>
SOURCE|<com.android.email.mail.store.imap.ImapList: com.android.email.mail.store.imap.ImapElement getElementOrNone(int)>
SOURCE|<android.text.BoringLayout: int getHeight()>
SOURCE|<com.google.android.picasasync.SyncState: int getState(android.database.sqlite.SQLiteDatabase,java.lang.String)>
SOURCE|<com.coremedia.iso.boxes.SampleDependencyTypeBox$Entry: int getSampleDependsOn()>
SOURCE|<android.service.textservice.SpellCheckerService$Session: java.lang.String getLocale()>
SOURCE|<android.app.ApplicationThreadNative: android.os.IBinder asBinder()>
SOURCE|<com.google.common.collect.MapMakerInternalMap$WeakEntry: java.lang.Object getKey()>
SOURCE|<com.android.internal.view.ActionBarPolicy: int getMaxActionButtons()>
SOURCE|<java.security.UnresolvedPermission: java.lang.String getUnresolvedActions()>
SOURCE|<com.android.server.net.NetworkStatsService$DefaultNetworkStatsSettings: com.android.server.net.NetworkStatsService$NetworkStatsSettings$Config getXtConfig()>
SOURCE|<com.android.mms.model.SlideModel: int getDuration()>
SOURCE|<android.content.res.Configuration: int getLayoutDirection()>
SOURCE|<com.coremedia.iso.boxes.MediaInformationBox: com.coremedia.iso.boxes.SampleTableBox getSampleTableBox()>
SOURCE|<android.filterfw.core.SimpleFrameManager: android.filterfw.core.Frame newFrame(android.filterfw.core.FrameFormat)>
SOURCE|<android.location.Criteria: int getHorizontalAccuracy()>
SOURCE|<android.media.IMediaScannerService$Stub: android.os.IBinder asBinder()>
SOURCE|<com.android.providers.contacts.PhotoStore: long getTotalSize()>
SOURCE|<gov.nist.javax.sip.header.ContentType: java.lang.String getMediaType()>
SOURCE|<org.apache.http.impl.auth.RFC2617Scheme: java.lang.String getParameter(java.lang.String)>
SOURCE|<com.android.contacts.detail.ContactDetailDisplayUtils: java.lang.String getCompany(android.content.Context,com.android.contacts.model.Contact)>
SOURCE|<java.lang.Class: java.lang.reflect.Method[] getDeclaredMethods()>
SOURCE|<android.test.mock.MockResources: android.content.res.Configuration getConfiguration()>
SOURCE|<android.filterfw.core.GLFrameTimer: android.filterfw.core.StopWatchMap get()>
SOURCE|<android.view.textservice.TextInfo: java.lang.String getText()>
SOURCE|<com.android.gallery3d.exif.ExifTag: short getDataType()>
SOURCE|<org.kxml2.io.KXmlParser: java.lang.String getAttributeType(int)>
SOURCE|<android.filterfw.core.SimpleFrameManager: android.filterfw.core.Frame newBoundFrame(android.filterfw.core.FrameFormat,int,long)>
SOURCE|<android.test.mock.MockResources: android.content.res.XmlResourceParser getAnimation(int)>
SOURCE|<java.time.temporal.ChronoField: java.time.temporal.TemporalUnit getBaseUnit()>
SOURCE|<android.widget.CalendarView$WeeksAdapter: int getCount()>
SOURCE|<com.android.email.Preferences: boolean getInhibitGraphicsAcceleration()>
SOURCE|<com.coremedia.iso.boxes.fragment.TrackRunBox$Entry: com.coremedia.iso.boxes.fragment.SampleFlags getSampleFlags()>
SOURCE|<android.net.http.SslError: android.net.http.SslCertificate getCertificate()>
SOURCE|<org.apache.harmony.security.x509.TBSCertificate: org.apache.harmony.security.x501.Name getSubject()>
SOURCE|<android.widget.ListView: int getFooterViewsCount()>
SOURCE|<org.ccil.cowan.tagsoup.Parser: int getEntity()>
SOURCE|<com.android.contacts.detail.ContactDetailFragment$AddConnectionViewEntry: java.lang.CharSequence getLabel()>
SOURCE|<android.widget.AbsSpinner$RecycleBin: android.view.View get(int)>
SOURCE|<com.android.internal.telephony.CallManager: java.lang.String toString()>
SOURCE|<org.apache.harmony.security.provider.cert.X509CertImpl: java.lang.String getSigAlgOID()>
SOURCE|<java.security.cert.PolicyQualifierInfo: byte[] getEncoded()>
SOURCE|<java.util.logging.LogRecord: java.lang.String getMessage()>
SOURCE|<android.telephony.SmsCbCmasInfo: int getCategory()>
SOURCE|<android.hardware.display.DisplayManagerGlobal: android.hardware.display.WifiDisplayStatus getWifiDisplayStatus()>
SOURCE|<android.net.wifi.p2p.nsd.WifiP2pServiceInfo: java.util.List getSupplicantQueryList()>
SOURCE|<com.google.common.collect.ForwardingMap: java.lang.Object delegate()>
SOURCE|<android.media.AudioManager: void loadSoundEffects()>
SOURCE|<com.android.internal.os.BatteryStatsImpl$Uid: long getTcpBytesReceived(int)>
SOURCE|<android.hardware.Camera$Parameters: java.util.List getSupportedVideoSizes()>
SOURCE|<com.android.bluetooth.Utils: byte[] getByteAddress(android.bluetooth.BluetoothDevice)>
SOURCE|<com.android.server.wm.DisplayContent: android.view.DisplayInfo getDisplayInfo()>
SOURCE|<org.xml.sax.helpers.AttributesImpl: int getIndex(java.lang.String,java.lang.String)>
SOURCE|<android.app.ActivityManagerProxy: android.content.pm.UserInfo getCurrentUser()>
SOURCE|<java.util.AbstractMap: java.lang.Object clone()>
SOURCE|<java.lang.reflect.Field: int getInt(java.lang.Object)>
SOURCE|<com.android.contacts.model.dataitem.StructuredNameDataItem: java.lang.String getPhoneticFamilyName()>
SOURCE|<com.android.email.mail.store.imap.ImapString$1: java.lang.String getString()>
SOURCE|<com.android.inputmethod.latin.SubtypeLocale: java.lang.String getSubtypeDisplayName(android.view.inputmethod.InputMethodSubtype,android.content.res.Resources)>
SOURCE|<com.google.android.picasasync.UploadsManager$UploadTask: com.google.android.picasasync.UploadTaskEntry getNextUpload()>
SOURCE|<android.app.ContextImpl: android.content.Context createPackageContext(java.lang.String,int)>
SOURCE|<android.renderscript.RenderScript: android.renderscript.RenderScript$RSErrorHandler getErrorHandler()>
SOURCE|<org.xml.sax.helpers.ParserAdapter$AttributeListAdapter: int getLength()>
SOURCE|<gov.nist.javax.sip.stack.SIPTransactionStack: gov.nist.javax.sip.stack.ServerRequestInterface newSIPServerRequest(gov.nist.javax.sip.message.SIPRequest,gov.nist.javax.sip.stack.MessageChannel)>
SOURCE|<com.android.gallery3d.ui.PopupList$ItemDataAdapter: long getItemId(int)>
SOURCE|<android.widget.ExpandableListView: android.widget.Adapter getAdapter()>
SOURCE|<android.webkit.WebView: int getContentWidth()>
SOURCE|<com.android.calendar.selectcalendars.SelectSyncedCalendarsMultiAccountAdapter: android.view.View newGroupView(android.content.Context,android.database.Cursor,boolean,android.view.ViewGroup)>
SOURCE|<java.lang.reflect.Constructor: java.lang.Class[] getExceptionTypes()>
SOURCE|<com.android.server.pm.PackageManagerService: java.io.File access$2200(com.android.server.pm.PackageManagerService,java.io.File)>
SOURCE|<java.security.cert.TrustAnchor: java.lang.String getCAName()>
SOURCE|<android.preference.Preference: java.lang.String getFragment()>
SOURCE|<com.adobe.xmp.impl.XMPNode: com.adobe.xmp.impl.XMPNode getParent()>
SOURCE|<org.apache.harmony.xnet.provider.jsse.SSLSocketImpl: int getPeerPort()>
SOURCE|<com.android.mms.data.Contact: com.android.mms.data.Contact get(java.lang.String,boolean)>
SOURCE|<com.android.inputmethod.keyboard.MainKeyboardView: int getLanguageOnSpacebarAnimAlpha()>
SOURCE|<android.content.res.AssetFileDescriptor: long getStartOffset()>
SOURCE|<gov.nist.javax.sip.header.HeaderFactoryImpl: javax.sip.header.ContentLanguageHeader createContentLanguageHeader(java.util.Locale)>
SOURCE|<com.android.mms.data.ContactList: com.android.mms.data.ContactList getByNumbers(java.lang.String,boolean,boolean)>
SOURCE|<android.nfc.tech.MifareUltralight: android.nfc.tech.MifareUltralight get(android.nfc.Tag)>
SOURCE|<java.io.ObjectStreamClass: java.io.ObjectStreamField getField(java.lang.String)>
SOURCE|<org.apache.harmony.xml.dom.DocumentImpl: java.lang.String getTextContent()>
SOURCE|<android.nfc.NfcAdapter: android.content.Context getContext()>
SOURCE|<android.view.animation.Animation: boolean getTransformation(long,android.view.animation.Transformation,float)>
SOURCE|<android.util.XmlPullAttributes: int getStyleAttribute()>
SOURCE|<android.text.DynamicLayout: android.text.Layout$Directions getLineDirections(int)>
SOURCE|<android.view.animation.CycleInterpolator: float getInterpolation(float)>
SOURCE|<com.android.inputmethod.keyboard.PointerTracker$TimeRecorder: long getLastLetterTypingTime()>
SOURCE|<com.android.gallery3d.data.LocalAlbum: android.database.Cursor getItemCursor(android.content.ContentResolver,android.net.Uri,java.lang.String[],int)>
SOURCE|<javax.crypto.spec.SecretKeySpec: java.lang.String getAlgorithm()>
SOURCE|<com.android.launcher2.AppsCustomizePagedView: int getAssociatedLowerPageBound(int)>
SOURCE|<com.android.gallery3d.ui.MenuExecutor: java.lang.String getMimeType(int)>
SOURCE|<java.time.chrono.HijrahChronology: java.lang.String getId()>
SOURCE|<java.io.DataInputStream: int readInt()>
SOURCE|<android.test.mock.MockContentResolver: android.content.SyncInfo getCurrentSync()>
SOURCE|<android.app.LauncherActivity: android.content.Intent getTargetIntent()>
SOURCE|<android.view.AccessibilityIterators$ParagraphTextSegmentIterator: android.view.AccessibilityIterators$ParagraphTextSegmentIterator getInstance()>
SOURCE|<com.android.server.DevicePolicyManagerService: long getMaximumTimeToLock(android.content.ComponentName,int)>
SOURCE|<com.android.mms.data.ContactList: java.lang.String[] getNumbers()>
SOURCE|<java.util.concurrent.locks.AbstractQueuedSynchronizer: java.util.Collection getExclusiveQueuedThreads()>
SOURCE|<android.widget.SearchView: java.lang.CharSequence getQuery()>
SOURCE|<com.coremedia.iso.boxes.TrackBox: com.coremedia.iso.boxes.MediaBox getMediaBox()>
SOURCE|<org.apache.harmony.security.x509.TBSCertificate: int getVersion()>
SOURCE|<com.android.mms.layout.HVGALayoutParameters: int getTextHeight()>
SOURCE|<gov.nist.core.NameValueList: java.lang.Object getValue(java.lang.String)>
SOURCE|<com.android.internal.policy.impl.PhoneWindowManager: int getSystemDecorRectLw(android.graphics.Rect)>
SOURCE|<com.android.internal.telephony.PhoneBase: java.lang.String getIccSerialNumber()>
SOURCE|<com.android.contacts.util.AccountsListAdapter: long getItemId(int)>
SOURCE|<com.android.exchange.utility.CalendarUtilities: boolean getDSTCalendars(java.util.TimeZone,java.util.GregorianCalendar[],java.util.GregorianCalendar[])>
SOURCE|<android.widget.AbsListView: boolean performLongPress(android.view.View,int,long)>
SOURCE|<com.android.internal.telephony.gsm.GSMPhone: java.lang.String getLine1Number()>
SOURCE|<android.text.BoringLayout: int getTopPadding()>
SOURCE|<org.apache.james.mime4j.field.datetime.parser.DateTimeParserTokenManager: org.apache.james.mime4j.field.datetime.parser.Token jjFillToken()>
SOURCE|<com.android.exchange.adapter.EmailSyncAdapter: java.lang.String getCollectionName()>
SOURCE|<android.renderscript.Allocation: android.renderscript.Allocation createCubemapFromCubeFaces(android.renderscript.RenderScript,android.graphics.Bitmap,android.graphics.Bitmap,android.graphics.Bitmap,android.graphics.Bitmap,android.graphics.Bitmap,android.graphics.Bitmap,android.renderscript.Allocation$MipmapControl,int)>
SOURCE|<android.view.View: int getRawTextAlignment()>
SOURCE|<com.android.internal.telephony.DataConnectionTracker: java.lang.String getActiveApnString(java.lang.String)>
SOURCE|<libcore.icu.NativeDecimalFormat: java.lang.String getNegativeSuffix()>
SOURCE|<android.widget.Editor$SuggestionsPopupWindow$SuggestionAdapter: java.lang.Object getItem(int)>
SOURCE|<com.google.android.apps.lightcycle.panorama.StitchingServiceManager: com.google.android.apps.lightcycle.panorama.StitchingServiceManager$StitchSession popNextSession()>
SOURCE|<java.nio.CharToByteBufferAdapter: java.nio.CharBuffer get(char[],int,int)>
SOURCE|<com.android.internal.os.BatteryStatsImpl$Uid: long getVideoTurnedOnTime(long,int)>
SOURCE|<android.media.videoeditor.MediaVideoItem: int getAudioSamplingFrequency()>
SOURCE|<com.google.common.collect.MapMakerInternalMap$SoftEntry: com.google.common.collect.MapMakerInternalMap$ReferenceEntry getNextEvictable()>
SOURCE|<javax.sip.RequestEvent: javax.sip.ServerTransaction getServerTransaction()>
SOURCE|<com.android.calendar.month.MonthWeekEventsView: android.text.format.Time getDayFromLocation(float)>
SOURCE|<com.android.calendar.DayFragment: long getSupportedEventTypes()>
SOURCE|<gov.nist.javax.sip.SipStackImpl: java.lang.String[] getEnabledProtocols()>
SOURCE|<com.android.emailcommon.provider.Account: android.net.Uri save(android.content.Context)>
SOURCE|<java.security.spec.DSAPrivateKeySpec: java.math.BigInteger getG()>
SOURCE|<com.android.mms.dom.smil.SmilMediaElementImpl: short getFill()>
SOURCE|<android.view.InputDevice: int getSources()>
SOURCE|<android.media.videoeditor.TransitionAlpha: java.lang.String getMaskFilename()>
SOURCE|<com.android.internal.telephony.PhoneProxy: java.util.List getAllCellInfo()>
SOURCE|<org.apache.harmony.xnet.provider.jsse.OpenSSLEngine: int getEngineContext()>
SOURCE|<com.android.launcher2.CellLayout: int getCountX()>
SOURCE|<org.apache.harmony.xnet.provider.jsse.OpenSSLSessionImpl: byte[] getId()>
SOURCE|<com.google.common.collect.GenericMapMaker: com.google.common.collect.MapMaker$RemovalListener getRemovalListener()>
SOURCE|<com.android.inputmethod.keyboard.PointerTracker: com.android.inputmethod.keyboard.Key getKey()>
SOURCE|<java.security.Provider: void load(java.io.InputStream)>
SOURCE|<com.android.contacts.detail.ContactDetailFragment$NetworkTitleViewEntry: android.graphics.drawable.Drawable getIcon()>
SOURCE|<android.net.sip.SipSession: java.lang.String getLocalIp()>
SOURCE|<org.apache.http.impl.client.ClientParamsStack: org.apache.http.params.HttpParams getApplicationParams()>
SOURCE|<android.app.ITransientNotification$Stub: android.os.IBinder asBinder()>
SOURCE|<android.mtp.MtpObjectInfo: java.lang.String getName()>
SOURCE|<com.android.email.mail.store.imap.ImapString: byte[] access$000()>
SOURCE|<com.android.gallery3d.common.EntrySchema: java.lang.String[] getProjection()>
SOURCE|<android.content.pm.IPackageDeleteObserver$Stub: android.os.IBinder asBinder()>
SOURCE|<android.net.ConnectivityManager: int stopUsingNetworkFeature(int,java.lang.String)>
SOURCE|<com.google.common.collect.MapMakerInternalMap$NullEntry: com.google.common.collect.MapMakerInternalMap$ValueReference getValueReference()>
SOURCE|<com.android.browser.view.PieItem: float getSweep()>
SOURCE|<android.content.res.XmlBlock$Parser: java.lang.String getAttributeValue(int)>
SOURCE|<com.android.mms.data.Conversation: com.android.mms.data.Conversation get(android.content.Context,long,boolean)>
SOURCE|<android.preference.DialogPreference: android.os.Parcelable onSaveInstanceState()>
SOURCE|<com.google.common.collect.Iterators$12: java.lang.Object get(int)>
SOURCE|<com.google.common.collect.MapMakerInternalMap$StrongEntry: com.google.common.collect.MapMakerInternalMap$ReferenceEntry getNextEvictable()>
SOURCE|<com.android.internal.widget.multiwaveview.MultiWaveView: int getTargetResourceId()>
SOURCE|<java.util.concurrent.atomic.AtomicLong: long getAndDecrement()>
SOURCE|<javax.crypto.Cipher: java.lang.String getAlgorithm()>
SOURCE|<android.text.DynamicLayout: int getNumberOfBlocks()>
SOURCE|<com.android.systemui.recent.RecentTasksLoader: android.graphics.drawable.Drawable getFullResDefaultActivityIcon()>
SOURCE|<android.nfc.INfcTag$Stub$Proxy: android.nfc.NdefMessage ndefRead(int)>
SOURCE|<com.android.browser.search.DefaultSearchEngine: java.lang.String getName()>
SOURCE|<com.android.internal.os.BatteryStatsImpl$Uid$Pkg$Serv: long getStartTime(long,int)>
SOURCE|<com.android.providers.contacts.SearchIndexManager: java.lang.String getFtsMatchQuery(java.lang.String,com.android.providers.contacts.SearchIndexManager$FtsQueryBuilder)>
SOURCE|<com.android.calendar.event.EditEventFragment: android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)>
SOURCE|<android.text.Layout: float getLineLeft(int)>
SOURCE|<com.android.ex.chips.RecipientEntry: java.lang.String getDestinationLabel()>
SOURCE|<com.android.gallery3d.ui.AlbumLabelMaker$LazyLoadedBitmap: android.graphics.Bitmap get()>
SOURCE|<dalvik.system.DexFile: java.lang.Class loadClass(java.lang.String,java.lang.ClassLoader)>
SOURCE|<android.app.ContextImpl: android.content.res.AssetManager getAssets()>
SOURCE|<android.app.PendingIntent: android.app.PendingIntent getService(android.content.Context,int,android.content.Intent,int)>
SOURCE|<java.util.IntSummaryStatistics: long getSum()>
SOURCE|<android.content.pm.IPackageManager$Stub$Proxy: java.lang.String getInstallerPackageName(java.lang.String)>
SOURCE|<android.content.BroadcastReceiver: boolean getDebugUnregister()>
SOURCE|<com.android.phone.PhoneUtils: android.app.Dialog displayMMIInitiate(android.content.Context,com.android.internal.telephony.MmiCode,android.os.Message,android.app.Dialog)>
SOURCE|<org.apache.harmony.xnet.provider.jsse.PinListEntry: java.lang.String getCommonName()>
SOURCE|<android.hardware.SerialManager: java.lang.String[] getSerialPorts()>
SOURCE|<java.nio.DirectByteBuffer: int getInt()>
SOURCE|<libcore.net.http.HttpsURLConnectionImpl: java.lang.String getHeaderFieldKey(int)>
SOURCE|<android.media.AudioTrack: int getPlaybackHeadPosition()>
SOURCE|<com.android.internal.telephony.IccIoResult: com.android.internal.telephony.IccException getException()>
SOURCE|<com.android.systemui.statusbar.BaseStatusBar: com.android.systemui.statusbar.BaseStatusBar$H createHandler()>
SOURCE|<java.sql.Date: int getMinutes()>
SOURCE|<java.lang.reflect.Executable: java.lang.reflect.AnnotatedType[] getAnnotatedExceptionTypes()>
SOURCE|<com.android.videoeditor.LoadPreviewBitmapTask: android.graphics.Bitmap doInBackground(java.lang.Void[])>
SOURCE|<com.coremedia.iso.boxes.TrackHeaderBox: long getDuration()>
SOURCE|<com.android.providers.telephony.SmsProvider: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>
SOURCE|<android.preference.PreferenceActivity: java.util.List getHeaders()>
SOURCE|<org.apache.harmony.security.pkcs7.ContentInfo: java.lang.Object getContent()>
SOURCE|<com.coremedia.iso.boxes.MediaHeaderBox: long getContentSize()>
SOURCE|<android.renderscript.Allocation: android.renderscript.Allocation createTyped(android.renderscript.RenderScript,android.renderscript.Type,int)>
SOURCE|<com.android.gallery3d.ui.CacheStorageUsageInfo: long getTotalBytes()>
SOURCE|<com.android.server.wm.WindowManagerService: void getVisibleWindowsForDisplay(int,java.util.List)>
SOURCE|<android.content.IContentService$Stub: android.os.IBinder asBinder()>
SOURCE|<java.lang.BootClassLoader: java.lang.Package getPackage(java.lang.String)>
SOURCE|<java.security.spec.ECFieldF2m: int[] getMidTermsOfReductionPolynomial()>
SOURCE|<com.android.uiautomator.core.UiSelector: int getInt(int)>
SOURCE|<com.android.providers.contacts.ContactsDatabaseHelper: long getMimeTypeIdForPhone()>
SOURCE|<com.google.common.collect.MapMakerInternalMap$SoftExpirableEntry: com.google.common.collect.MapMakerInternalMap$ReferenceEntry getPreviousExpirable()>
SOURCE|<android.view.SoundEffectConstants: int getContantForFocusDirection(int)>
SOURCE|<java.net.InetAddress: java.net.InetAddress getByAddress(byte[])>
SOURCE|<com.android.launcher2.PagedView: java.lang.String getCurrentPageDescription()>
SOURCE|<java.util.HashMap: java.util.Iterator newEntryIterator()>
SOURCE|<android.telephony.gsm.SmsMessage: android.telephony.gsm.SmsMessage createFromPdu(byte[])>
SOURCE|<com.android.server.location.ComprehensiveCountryDetector: android.location.Country getSimBasedCountry()>
SOURCE|<java.time.chrono.JapaneseEra: int getValue()>
SOURCE|<com.android.internal.telephony.cdma.RuimRecords$EfCsimSpnLoaded: java.lang.String getEfName()>
SOURCE|<android.view.MotionEvent: float getHistoricalAxisValue(int,int,int)>
SOURCE|<android.content.ContentProviderClient: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>
SOURCE|<android.app.ApplicationPackageManager: android.graphics.drawable.Drawable getApplicationIcon(android.content.pm.ApplicationInfo)>
SOURCE|<android.graphics.drawable.Drawable: int getIntrinsicWidth()>
SOURCE|<java.text.NumberFormat: java.lang.Object clone()>
SOURCE|<java.util.ResourceBundle: java.lang.Object getObject(java.lang.String)>
SOURCE|<android.net.NetworkStats: android.net.NetworkStats$Entry getTotal(android.net.NetworkStats$Entry)>
SOURCE|<com.android.launcher2.CellLayout$LayoutParams: int getX()>
SOURCE|<org.json.JSONArray: int getInt(int)>
SOURCE|<java.security.MessageDigest: java.lang.String getAlgorithm()>
SOURCE|<android.util.MonthDisplayHelper: int getColumnOf(int)>
SOURCE|<java.security.cert.PKIXCertPathValidatorResult: java.security.cert.PolicyNode getPolicyTree()>
SOURCE|<com.android.contacts.quickcontact.ResolveCache: java.lang.CharSequence getDescription(com.android.contacts.quickcontact.Action)>
SOURCE|<android.media.videoeditor.Overlay: long getDuration()>
SOURCE|<com.android.contacts.quickcontact.QuickContactListFragment$1: android.view.View getView(int,android.view.View,android.view.ViewGroup)>
SOURCE|<android.provider.Telephony$Sms$Intents: android.telephony.SmsMessage[] getMessagesFromIntent(android.content.Intent)>
SOURCE|<com.android.calendar.month.SimpleWeekView: android.text.format.Time getDayFromLocation(float)>
SOURCE|<android.app.ContextImpl$StaticServiceFetcher: java.lang.Object getService(android.app.ContextImpl)>
SOURCE|<com.android.internal.os.BatteryStatsImpl: long getPhoneDataConnectionTime(int,long,int)>
SOURCE|<com.android.internal.telephony.cat.CatCmdMessage: com.android.internal.telephony.cat.ToneSettings getToneSettings()>
SOURCE|<android.support.v4.view.ViewPager: int getCurrentItem()>
SOURCE|<android.text.format.DateUtils: java.lang.String getDayOfWeekString(int,int)>
SOURCE|<com.android.contacts.ContactsUtils: android.content.Intent getCallIntent(android.net.Uri,java.lang.String)>
SOURCE|<android.widget.ExpandableListConnector: int getItemViewType(int)>
SOURCE|<android.widget.AdapterView: int getPositionForView(android.view.View)>
SOURCE|<android.graphics.Paint: android.graphics.Paint$Join getStrokeJoin()>
SOURCE|<android.content.IOnPrimaryClipChangedListener$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
SOURCE|<com.android.inputmethod.accessibility.KeyCodeDescriptionMapper: com.android.inputmethod.accessibility.KeyCodeDescriptionMapper getInstance()>
SOURCE|<org.apache.harmony.xml.dom.DOMConfigurationImpl$12: java.lang.Object get(org.apache.harmony.xml.dom.DOMConfigurationImpl)>
SOURCE|<com.android.gallery3d.data.MediaItem: long getDateInMs()>
SOURCE|<com.android.inputmethod.keyboard.PointerTracker: int getDistance(int,int,int,int)>
SOURCE|<com.android.internal.telephony.PhoneProxy: com.android.internal.telephony.Call getBackgroundCall()>
SOURCE|<android.graphics.ColorMatrix: float[] getArray()>
SOURCE|<android.view.IWindowManager$Stub: android.os.IBinder asBinder()>
SOURCE|<org.apache.harmony.xnet.provider.jsse.AlertException: byte getDescriptionCode()>
SOURCE|<android.app.SearchManager: java.util.List getSearchablesInGlobalSearch()>
SOURCE|<android.gesture.GestureOverlayView: int getGestureStrokeType()>
SOURCE|<android.webkit.PluginData: java.io.InputStream getInputStream()>
SOURCE|<java.text.DateFormat: java.text.DateFormat getDateTimeInstance()>
SOURCE|<junit.runner.BaseTestRunner: junit.runner.TestSuiteLoader getLoader()>
SOURCE|<com.android.email.Preferences: int getAutoAdvanceDirection()>
SOURCE|<com.android.vcard.VCardEntry$PhoneData: com.android.vcard.VCardEntry$EntryLabel getEntryLabel()>
SOURCE|<android.bluetooth.BluetoothDevice: android.bluetooth.BluetoothClass getBluetoothClass()>
SOURCE|<com.android.uiautomator.core.UiSelector: com.android.uiautomator.core.UiSelector getContainerSelector()>
SOURCE|<android.filterfw.core.GLFrame: int getTextureId()>
SOURCE|<com.android.contacts.editor.LabeledEditorView: com.android.contacts.model.account.AccountType$EditType getType()>
SOURCE|<java.text.DecimalFormatSymbols: char getPerMill()>
SOURCE|<android.view.inputmethod.InputMethodManager: java.util.List getEnabledInputMethodSubtypeList(android.view.inputmethod.InputMethodInfo,boolean)>
SOURCE|<java.security.Provider$Service: java.lang.String getAttribute(java.lang.String)>
SOURCE|<org.apache.http.impl.cookie.BasicClientCookie: java.lang.String getValue()>
SOURCE|<com.android.inputmethod.latin.SuggestedWords: com.android.inputmethod.latin.SuggestedWords$SuggestedWordInfo getInfo(int)>
SOURCE|<gov.nist.javax.sip.stack.SIPTransactionStack: gov.nist.javax.sip.stack.SIPServerTransaction getRetransmissionAlertTransaction(java.lang.String)>
SOURCE|<android.speech.tts.TtsEngines: android.speech.tts.TextToSpeech$EngineInfo getEngineInfo(java.lang.String)>
SOURCE|<android.view.ViewGroup$ChildListForAccessibility: android.view.View getChildAt(int)>
SOURCE|<com.android.deskclock.widget.multiwaveview.Ease$Quad$2: float getInterpolation(float)>
SOURCE|<java.lang.Class: java.lang.Object[] getSigners()>
SOURCE|<com.android.server.am.ActivityManagerService: int getFrontActivityScreenCompatMode()>
SOURCE|<org.apache.harmony.security.x509.TBSCertList: byte[] getEncoded()>
SOURCE|<com.adobe.xmp.impl.XMPNode: java.lang.String getValue()>
SOURCE|<org.apache.harmony.xnet.provider.jsse.SSLSessionImpl: java.lang.String getCipherSuite()>
SOURCE|<com.android.providers.contacts.ReorderingCursorWrapper: short getShort(int)>
SOURCE|<org.xmlpull.v1.XmlPullParserException: int getLineNumber()>
SOURCE|<com.android.internal.os.BatteryStatsImpl: int getCpuSpeedSteps()>
SOURCE|<android.hardware.usb.UsbDevice: java.lang.String getDeviceName()>
SOURCE|<com.android.gallery3d.data.SizeClustering: java.util.ArrayList getCluster(int)>
SOURCE|<android.telephony.TelephonyManager: int getPhoneType(int)>
SOURCE|<com.google.common.base.CharMatcher: com.google.common.base.CharMatcher precomputed()>
SOURCE|<org.apache.james.mime4j.field.contenttype.parser.SimpleCharStream: int getEndColumn()>
SOURCE|<java.text.MessageFormat: java.lang.Object[] parse(java.lang.String,java.text.ParsePosition)>
SOURCE|<android.widget.LinearLayout: int getDividerPadding()>
SOURCE|<java.nio.HeapByteBuffer: float getFloat()>
SOURCE|<android.os.Debug$MemoryInfo: int getTotalPrivateDirty()>
SOURCE|<android.media.AudioRecord: int getChannelConfiguration()>
SOURCE|<org.apache.harmony.luni.lang.reflect.ListOfVariables: java.lang.reflect.TypeVariable[] getArray()>
SOURCE|<com.android.nfc.SendUi: float getDegreesForRotation(int)>
SOURCE|<android.view.accessibility.AccessibilityNodeInfo: android.view.accessibility.AccessibilityNodeInfo getChild(int)>
SOURCE|<android.view.KeyCharacterMap: char getMatch(int,char[])>
SOURCE|<com.android.contacts.model.dataitem.StructuredNameDataItem: java.lang.String getPhoneticGivenName()>
SOURCE|<android.hardware.display.WifiDisplayStatus: int getFeatureState()>
SOURCE|<android.net.NetworkStats: android.net.NetworkStats$Entry getTotalIncludingTags(android.net.NetworkStats$Entry)>
SOURCE|<android.hardware.input.IInputManager$Stub$Proxy: int[] getInputDeviceIds()>
SOURCE|<com.android.org.bouncycastle.asn1.ASN1Null: com.android.org.bouncycastle.asn1.ASN1Null getInstance(java.lang.Object)>
SOURCE|<android.bluetooth.BluetoothInputDevice: boolean getProtocolMode(android.bluetooth.BluetoothDevice)>
SOURCE|<java.util.prefs.AbstractPreferences: java.util.prefs.AbstractPreferences getChild(java.lang.String)>
SOURCE|<android.media.audiofx.Virtualizer: short getRoundedStrength()>
SOURCE|<gov.nist.javax.sip.stack.SIPTransaction: int getPeerPort()>
SOURCE|<com.android.camera.ListPreference: java.lang.String getEntry()>
SOURCE|<com.android.contacts.list.ContactEntryListAdapter: int getViewTypeCount()>
SOURCE|<java.time.zone.ZoneRules: java.time.zone.ZoneOffsetTransition getTransition(java.time.LocalDateTime)>
SOURCE|<java.net.InterfaceAddress: java.net.InetAddress getAddress()>
SOURCE|<com.google.common.collect.ForwardingMultimap: java.util.Collection get(java.lang.Object)>
SOURCE|<org.apache.harmony.security.x509.SubjectPublicKeyInfo: byte[] getEncoded()>
SOURCE|<com.android.i18n.phonenumbers.PhoneNumberUtil: com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata getMetadataForRegion(java.lang.String)>
SOURCE|<android.content.res.Resources: java.lang.String getQuantityString(int,int)>
SOURCE|<com.android.inputmethod.compat.CompatUtils: java.lang.Object getFieldValue(java.lang.Object,java.lang.Object,java.lang.reflect.Field)>
SOURCE|<org.apache.james.mime4j.BodyDescriptor: java.lang.String getMimeType()>
SOURCE|<android.hardware.Camera$Parameters: java.util.List getSupportedPreviewFpsRange()>
SOURCE|<android.provider.MediaStore$Audio$Genres: android.net.Uri getContentUri(java.lang.String)>
SOURCE|<com.android.internal.telephony.IPhoneSubInfo$Stub$Proxy: java.lang.String getMsisdn()>
SOURCE|<android.net.UrlQuerySanitizer: android.net.UrlQuerySanitizer$ValueSanitizer getUrlAndSpaceLegal()>
SOURCE|<com.android.ex.variablespeed.EngineParameters: int getMaxPlayBufferCount()>
SOURCE|<com.android.gallery3d.data.Path: com.android.gallery3d.data.Path getParent()>
SOURCE|<com.google.android.mms.pdu.ReadRecInd: com.google.android.mms.pdu.EncodedStringValue[] getTo()>
SOURCE|<com.google.common.collect.Lists$ReverseList: java.util.List getForwardList()>
SOURCE|<android.net.wifi.p2p.WifiP2pGroupList: int getNetworkId(java.lang.String,java.lang.String)>
SOURCE|<com.android.internal.telephony.uicc.UiccController: com.android.internal.telephony.IccFileHandler getIccFileHandler(int)>
SOURCE|<com.android.vcard.VCardEntry$EmailData: com.android.vcard.VCardEntry$EntryLabel getEntryLabel()>
SOURCE|<org.apache.harmony.security.provider.cert.X509CertImpl: java.util.List getExtendedKeyUsage()>
SOURCE|<com.android.contacts.calllog.CallTypeIconsView: int getCallType(int)>
SOURCE|<android.net.sip.SimpleSessionDescription$Fields: java.lang.String getAddress()>
SOURCE|<java.util.Locale: java.lang.String[] getISOCountries()>
SOURCE|<android.webkit.CookieManager: java.lang.String getCookie(android.net.WebAddress)>
SOURCE|<com.android.calendar.AsyncQueryServiceHelper$OperationInfo: long getDelay(java.util.concurrent.TimeUnit)>
SOURCE|<com.android.internal.telephony.CallManager: boolean getMute()>
SOURCE|<com.android.gallery3d.ui.TileImageViewAdapter: com.android.gallery3d.ui.ScreenNail getScreenNail()>
SOURCE|<java.util.Calendar: java.util.Calendar getInstance()>
SOURCE|<org.apache.http.message.BasicHeaderValueParser: org.apache.http.NameValuePair parseNameValuePair(org.apache.http.util.CharArrayBuffer,org.apache.http.message.ParserCursor)>
SOURCE|<android.graphics.drawable.StateListDrawable: int getStateDrawableIndex(int[])>
SOURCE|<com.adobe.xmp.impl.XMPSchemaRegistryImpl$1: java.lang.String getPrefix()>
SOURCE|<com.android.server.location.LocationProviderProxy: java.lang.String getName()>
SOURCE|<java.time.OffsetDateTime: int get(java.time.temporal.TemporalField)>
SOURCE|<com.android.launcher2.LauncherViewPropertyAnimator: long getDuration()>
SOURCE|<com.google.common.collect.ComputingConcurrentHashMap$ComputationExceptionReference: java.lang.Object get()>
SOURCE|<android.util.SparseBooleanArray: boolean get(int)>
SOURCE|<android.media.AudioService$VolumeStreamState: int getIndex(int,boolean)>
SOURCE|<gov.nist.javax.sip.stack.SIPDialog: javax.sip.DialogState getState()>
SOURCE|<com.android.gallery3d.ui.BitmapTexture: int getId()>
SOURCE|<com.android.gallery3d.ui.CacheStorageUsageInfo: long getFreeBytes()>
SOURCE|<android.os.Bundle: java.lang.String[] getStringArray(java.lang.String)>
SOURCE|<com.android.email.SecurityPolicy: boolean wipeExpiredAccounts(android.content.Context,com.android.email.Controller)>
SOURCE|<android.os.Parcel: java.lang.CharSequence readCharSequence()>
SOURCE|<com.android.gallery3d.filtershow.ui.Spline: int getNbPoints()>
SOURCE|<com.android.uiautomator.core.UiDevice: java.lang.String getCurrentActivityName()>
SOURCE|<android.preference.TwoStatePreference: java.lang.CharSequence getSummaryOff()>
SOURCE|<com.google.common.base.Optional$Absent: java.lang.Object get()>
SOURCE|<com.android.camera.ui.PieItem: int getIntrinsicWidth()>
SOURCE|<com.android.gallery3d.data.ClusterAlbum: int getSupportedOperations()>
SOURCE|<android.app.LoaderManagerImpl: android.content.Loader initLoader(int,android.os.Bundle,android.app.LoaderManager$LoaderCallbacks)>
SOURCE|<com.android.server.display.WifiDisplayController: android.hardware.display.WifiDisplay access$2200(android.net.wifi.p2p.WifiP2pDevice)>
SOURCE|<android.app.ApplicationPackageManager: android.content.Intent getLaunchIntentForPackage(java.lang.String)>
SOURCE|<android.webkit.CacheManager: java.io.File access$000()>
SOURCE|<android.webkit.WebViewClassic: java.lang.String getSelection()>
SOURCE|<java.time.LocalTime: int get(java.time.temporal.TemporalField)>
SOURCE|<org.apache.http.impl.auth.BasicScheme: java.lang.String getSchemeName()>
SOURCE|<gov.nist.javax.sip.stack.SIPTransaction: gov.nist.javax.sip.header.Via getViaHeader()>
SOURCE|<com.android.email.activity.setup.SetupData: int getFlowMode()>
SOURCE|<gov.nist.javax.sip.header.Event: java.lang.String getEventType()>
SOURCE|<android.net.ConnectivityManager: android.net.NetworkQuotaInfo getActiveNetworkQuotaInfo()>
SOURCE|<android.media.audiofx.Equalizer: int[] getBandFreqRange(short)>
SOURCE|<android.media.RemoteControlClient: android.media.IRemoteControlClient getIRemoteControlClient()>
SOURCE|<com.android.server.display.PersistentDataStore: android.hardware.display.WifiDisplay[] getRememberedWifiDisplays()>
SOURCE|<com.android.browser.provider.BrowserProvider$MySuggestionCursor: java.lang.String getString(int)>
SOURCE|<android.telephony.ServiceState: java.lang.String getOperatorNumeric()>
SOURCE|<android.text.style.DynamicDrawableSpan: int getSize(android.graphics.Paint,java.lang.CharSequence,int,int,android.graphics.Paint$FontMetricsInt)>
SOURCE|<android.provider.Settings$Global: float getFloat(android.content.ContentResolver,java.lang.String)>
SOURCE|<com.android.launcher2.CellLayout: int getDesiredWidth()>
SOURCE|<com.android.mms.MmsConfig: int getSmsToMmsTextThreshold()>
SOURCE|<com.android.server.DevicePolicyManagerService: int getMaximumFailedPasswordsForWipe(android.content.ComponentName,int)>
SOURCE|<com.android.gallery3d.data.LocalAlbum: int getSupportedOperations()>
SOURCE|<android.net.UrlQuerySanitizer: java.util.List getParameterList()>
SOURCE|<com.android.contacts.editor.LabeledEditorView: android.app.Dialog createDialog(android.os.Bundle)>
SOURCE|<com.android.gallery3d.picasasource.PicasaPostAlbum: int getSupportedOperations()>
SOURCE|<android.renderscript.Sampler: android.renderscript.Sampler$Value getWrapS()>
SOURCE|<com.android.email.FolderProperties: int getMessageCountForCombinedMailbox(android.content.Context,long)>
SOURCE|<android.accessibilityservice.AccessibilityServiceInfo: java.lang.String getId()>
SOURCE|<com.android.internal.telephony.cdma.RuimSmsInterfaceManager: java.util.List getAllMessagesFromIccEf()>
SOURCE|<android.view.Display: int getFlags()>
SOURCE|<android.view.KeyEvent: int getModifiers()>
SOURCE|<android.preference.Preference: long getPersistedLong(long)>
SOURCE|<com.android.inputmethod.latin.suggestions.SuggestionStripView: com.android.inputmethod.latin.SuggestedWords getSuggestions()>
SOURCE|<android.location.Address: java.lang.String getAdminArea()>
SOURCE|<org.apache.harmony.crypto.internal.NullCipherSpi: byte[] engineDoFinal(byte[],int,int)>
SOURCE|<java.lang.reflect.Parameter: java.lang.reflect.Type getParameterizedType()>
SOURCE|<org.apache.harmony.xnet.provider.jsse.ServerHello: byte[] getRandom()>
SOURCE|<com.android.internal.telephony.IccPhoneBookInterfaceManager: java.util.List getAdnRecordsInEf(int)>
SOURCE|<java.lang.reflect.Array: short getShort(java.lang.Object,int)>
SOURCE|<org.apache.harmony.xnet.provider.jsse.SSLServerSocketFactoryImpl: java.lang.String[] getDefaultCipherSuites()>
SOURCE|<com.android.contacts.list.ContactsRequest: java.lang.CharSequence getActivityTitle()>
SOURCE|<android.media.MediaRouter$RouteInfo: android.graphics.drawable.Drawable getIconDrawable()>
SOURCE|<java.util.logging.Handler: java.util.logging.Level getLevel()>
SOURCE|<android.text.BoringLayout: android.text.Layout$Directions getLineDirections(int)>
SOURCE|<java.lang.reflect.Method: java.lang.Object getDefaultValue()>
SOURCE|<android.os.Environment: java.io.File getExternalStorageAppFilesDirectory(java.lang.String)>
SOURCE|<com.android.gallery3d.picasasource.PicasaSource: com.google.android.picasasync.PicasaFacade getPicasaFacade()>
SOURCE|<android.provider.Contacts$Organizations: java.lang.CharSequence getDisplayLabel(android.content.Context,int,java.lang.CharSequence)>
SOURCE|<org.apache.http.impl.auth.NTLMScheme: java.lang.String getSchemeName()>
SOURCE|<android.net.Uri$AbstractHierarchicalUri: java.lang.String getUserInfo()>
SOURCE|<com.android.browser.view.PieItem: int getInnerRadius()>
SOURCE|<org.apache.http.auth.NTUserPrincipal: java.lang.String getName()>
SOURCE|<android.telephony.SmsCbCmasInfo: int getResponseType()>
SOURCE|<com.android.internal.telephony.Connection: java.lang.String getOrigDialString()>
SOURCE|<com.android.contacts.model.RawContactModifier: java.util.ArrayList getValidTypes(com.android.contacts.model.RawContactDelta,com.android.contacts.model.dataitem.DataKind,com.android.contacts.model.account.AccountType$EditType)>
SOURCE|<com.android.mms.dom.smil.SmilPlayer: int getDuration()>
SOURCE|<android.view.textservice.SentenceSuggestionsInfo: android.view.textservice.SuggestionsInfo getSuggestionsInfoAt(int)>
SOURCE|<com.android.browser.view.ScrollerView: float getBottomFadingEdgeStrength()>
SOURCE|<java.lang.ClassLoader: java.lang.Class loadClass(java.lang.String,boolean)>
SOURCE|<com.android.contacts.model.RawContact: android.content.ContentValues getValues()>
SOURCE|<org.xml.sax.InputSource: java.lang.String getPublicId()>
SOURCE|<com.android.mms.data.Contact: byte[] access$1700(com.android.mms.data.Contact)>
SOURCE|<android.widget.TextView: int getCompoundPaddingRight()>
SOURCE|<android.text.style.RelativeSizeSpan: int getSpanTypeId()>
SOURCE|<com.android.internal.telephony.cdma.CDMAPhone: void getDataCallList(android.os.Message)>
SOURCE|<com.android.launcher2.Launcher: com.android.launcher2.Hotseat getHotseat()>
SOURCE|<com.android.browser.Tab: android.webkit.WebView getSubWebView()>
SOURCE|<android.net.UrlQuerySanitizer: android.net.UrlQuerySanitizer$ValueSanitizer getAllButNulAndAngleBracketsLegal()>
SOURCE|<android.filterpacks.imageproc.ImageSlicer: android.filterfw.core.FrameFormat getOutputFormat(java.lang.String,android.filterfw.core.FrameFormat)>
SOURCE|<com.android.gallery3d.data.LocationClustering: java.lang.String getClusterName(int)>
SOURCE|<com.android.org.bouncycastle.asn1.DERSequenceParser: com.android.org.bouncycastle.asn1.ASN1Primitive getLoadedObject()>
SOURCE|<com.google.android.picasasync.PicasaFacade: android.net.Uri getAlbumsUri()>
SOURCE|<android.media.audiofx.Equalizer: android.media.audiofx.Equalizer$Settings getProperties()>
SOURCE|<android.filterfw.core.Frame: android.filterfw.core.FrameFormat getFormat()>
SOURCE|<com.android.server.wm.DisplayContent: com.android.server.wm.WindowList getWindowList()>
SOURCE|<com.android.contacts.voicemail.VoicemailStatusHelperImpl: int getNumberActivityVoicemailSources(android.database.Cursor)>
SOURCE|<com.android.internal.view.WindowManagerPolicyThread: android.os.Looper getLooper()>
SOURCE|<android.view.animation.AnticipateInterpolator: float getInterpolation(float)>
SOURCE|<org.apache.http.impl.client.DefaultRequestDirector: org.apache.http.HttpResponse execute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext)>
SOURCE|<com.android.contacts.interactions.TestLoaderManager: android.content.Loader restartLoader(int,android.os.Bundle,android.app.LoaderManager$LoaderCallbacks)>
SOURCE|<com.android.gallery3d.filtershow.imageshow.ImageGeometry: float getCurrentTouchAngle()>
SOURCE|<android.app.Dialog: android.view.LayoutInflater getLayoutInflater()>
SOURCE|<java.nio.DirectByteBuffer: char getChar(int)>
SOURCE|<java.util.concurrent.RecursiveAction: java.lang.Void getRawResult()>
SOURCE|<gov.nist.javax.sip.stack.UDPMessageChannel: int getPeerPort()>
SOURCE|<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: int getConnectionsInPool()>
SOURCE|<android.net.ConnectivityManager: java.lang.String[] getTetherableWifiRegexs()>
SOURCE|<android.media.videoeditor.Transition: long getMaximumDuration()>
SOURCE|<com.android.internal.telephony.sip.SipPhoneBase: java.lang.String getDeviceSvn()>
SOURCE|<android.filterpacks.imageproc.ToGrayFilter: android.filterfw.core.Program getShaderProgram(android.filterfw.core.FilterContext)>
SOURCE|<com.android.internal.widget.multiwaveview.Ease$Sine$2: float getInterpolation(float)>
SOURCE|<libcore.net.http.HttpsURLConnectionImpl: libcore.net.http.HttpEngine getHttpEngine()>
SOURCE|<android.webkit.BrowserFrame: java.lang.String getRawResFilename(int,android.content.Context)>
SOURCE|<java.nio.FloatArrayBuffer: float get()>
SOURCE|<com.android.internal.app.LocalePicker$1: android.view.View getView(int,android.view.View,android.view.ViewGroup)>
SOURCE|<android.bluetooth.BluetoothDevice: int getBondState()>
SOURCE|<android.media.audiofx.Equalizer: int getCenterFreq(short)>
SOURCE|<org.apache.harmony.security.pkcs7.SignedData: java.util.List getCertificates()>
SOURCE|<android.view.animation.Animation: float resolveSize(int,float,int,int)>
SOURCE|<android.app.Activity: android.view.Window getWindow()>
SOURCE|<java.time.Period: int getMonths()>
SOURCE|<org.apache.harmony.xml.dom.ElementImpl: java.lang.String getAttribute(java.lang.String)>
SOURCE|<javax.crypto.Cipher: javax.crypto.ExemptionMechanism getExemptionMechanism()>
SOURCE|<com.android.contacts.model.account.ExchangeAccountType: com.android.contacts.model.dataitem.DataKind addDataKindStructuredPostal(android.content.Context)>
SOURCE|<com.android.deskclock.stopwatch.StopwatchFragment$LapsListAdapter: int getCount()>
SOURCE|<java.net.Inet6Address: java.net.Inet6Address getByAddress(java.lang.String,byte[],java.net.NetworkInterface)>
SOURCE|<android.widget.ListView: int getCheckedItemPosition()>
SOURCE|<android.webkit.WebView: void loadUrl(java.lang.String,java.util.Map)>
SOURCE|<com.android.calendar.widget.CalendarAppWidgetService$CalendarFactory: android.widget.RemoteViews getLoadingView()>
SOURCE|<com.android.email.activity.MessageListItemCoordinates: int getWidth(android.view.View,boolean)>
SOURCE|<com.android.server.LocationManagerService$Receiver: android.location.ILocationListener getListener()>
SOURCE|<com.android.bluetooth.btservice.AdapterService: android.os.ParcelUuid[] getUuids()>
SOURCE|<com.android.gallery3d.app.PhotoDataAdapter: int getLevelCount()>
SOURCE|<android.webkit.WebViewClassic$Factory: android.webkit.WebViewFactoryProvider$Statics getStatics()>
SOURCE|<android.preference.Preference: android.content.Intent getIntent()>
SOURCE|<android.content.SyncStorageEngine: long getLongColumn(android.database.Cursor,java.lang.String)>
SOURCE|<android.app.PendingIntent: android.app.PendingIntent getBroadcastAsUser(android.content.Context,int,android.content.Intent,int,android.os.UserHandle)>
SOURCE|<android.hardware.usb.UsbEndpoint: int getInterval()>
SOURCE|<android.content.SyncAdapterType: boolean supportsUploading()>
SOURCE|<com.android.ex.chips.BaseRecipientAdapter: int getViewTypeCount()>
SOURCE|<android.net.sip.SimpleSessionDescription$Media: java.lang.String[] getBandwidthTypes()>
SOURCE|<com.android.gallery3d.data.FaceClustering: com.android.gallery3d.data.MediaItem getClusterCover(int)>
SOURCE|<javax.net.ssl.HttpsURLConnection: javax.net.ssl.SSLSocketFactory getSSLSocketFactory()>
SOURCE|<libcore.net.http.HttpsURLConnectionImpl$HttpUrlConnectionDelegate: javax.net.ssl.SSLSocket getSSLSocket()>
SOURCE|<com.google.common.collect.TreeMultiset: java.util.Iterator descendingEntryIterator()>
SOURCE|<java.sql.DriverManager: java.io.PrintStream getLogStream()>
SOURCE|<com.android.videoeditor.service.IntentPool: android.content.Intent get()>
SOURCE|<android.filterfw.core.FrameFormat: int getDimension(int)>
SOURCE|<android.net.UrlQuerySanitizer: android.net.UrlQuerySanitizer$ValueSanitizer getValueSanitizer(java.lang.String)>
SOURCE|<com.android.bluetooth.pbap.BluetoothPbapVcardManager: int getPhonebookSize(int)>
SOURCE|<android.app.backup.FullBackupDataOutput: android.app.backup.BackupDataOutput getData()>
SOURCE|<com.android.ex.chips.BaseRecipientAdapter: java.util.List access$902(com.android.ex.chips.BaseRecipientAdapter,java.util.List)>
SOURCE|<java.util.concurrent.locks.AbstractQueuedSynchronizer: int getQueueLength()>
SOURCE|<android.database.MatrixCursor: java.lang.String getString(int)>
SOURCE|<android.preference.Preference: android.preference.PreferenceManager getPreferenceManager()>
SOURCE|<android.widget.TextView: java.lang.CharSequence getError()>
SOURCE|<android.content.pm.IPackageManager$Stub$Proxy: android.content.pm.ApplicationInfo getApplicationInfo(java.lang.String,int,int)>
SOURCE|<java.security.spec.RSAKeyGenParameterSpec: java.math.BigInteger getPublicExponent()>
SOURCE|<org.apache.http.impl.conn.tsccm.ThreadSafeClientConnManager: int getConnectionsInPool(org.apache.http.conn.routing.HttpRoute)>
SOURCE|<com.android.server.ConnectivityService: android.net.LinkProperties getActiveLinkProperties()>
SOURCE|<android.nfc.tech.NfcBarcode: android.nfc.tech.NfcBarcode get(android.nfc.Tag)>
SOURCE|<com.android.gallery3d.data.MediaItem: java.lang.String getName()>
SOURCE|<gov.nist.javax.sip.header.ParametersHeader: long getParameterAsLong(java.lang.String)>
SOURCE|<com.android.email.activity.AccountSelectorAdapter$CursorWithExtras: long getMailboxId()>
SOURCE|<android.webkit.CallbackProxy$ResultTransport: java.lang.Object getResult()>
SOURCE|<org.apache.http.impl.io.AbstractSessionOutputBuffer: org.apache.http.io.HttpTransportMetrics getMetrics()>
SOURCE|<com.android.server.pm.PackageManagerService$AsecInstallArgs: java.lang.String getCodePath()>
SOURCE|<org.xmlpull.v1.sax2.Driver: org.xml.sax.ContentHandler getContentHandler()>
SOURCE|<android.provider.Settings$System: int getInt(android.content.ContentResolver,java.lang.String)>
SOURCE|<com.android.inputmethod.keyboard.internal.KeyboardRow: float getDefaultKeyWidth()>
SOURCE|<android.widget.ActivityChooserView$ActivityChooserViewAdapter: int getCount()>
SOURCE|<com.android.server.location.ComprehensiveCountryDetector: android.location.Country getLocaleCountry()>
SOURCE|<org.xml.sax.helpers.NamespaceSupport: java.lang.String getPrefix(java.lang.String)>
SOURCE|<com.android.contacts.widget.IndexerListAdapter: int getIndexedPartition()>
SOURCE|<dalvik.system.VMRuntime: long getMinimumHeapSize()>
SOURCE|<java.lang.reflect.Proxy: java.lang.Class getProxyClass(java.lang.ClassLoader,java.lang.Class[])>
SOURCE|<com.google.common.collect.ForwardingCollection: java.lang.Object delegate()>
SOURCE|<javax.xml.transform.stream.StreamSource: java.lang.String getPublicId()>
SOURCE|<android.media.MediaRouter$RouteCategory: java.lang.CharSequence getName(android.content.res.Resources)>
SOURCE|<android.os.Bundle: boolean getBoolean(java.lang.String)>
SOURCE|<com.android.internal.telephony.cat.CatResponseMessage: com.android.internal.telephony.cat.CommandDetails getCmdDetails()>
SOURCE|<android.renderscript.Type: android.renderscript.Element getElement()>
SOURCE|<android.database.BulkCursorProxy: android.database.CursorWindow getWindow(int)>
SOURCE|<org.apache.http.conn.params.ConnRouteParams: java.net.InetAddress getLocalAddress(org.apache.http.params.HttpParams)>
SOURCE|<android.widget.TextView: int getTotalPaddingRight()>
SOURCE|<com.adobe.xmp.impl.XMPDateTimeImpl: java.lang.String getISO8601String()>
SOURCE|<android.app.IWallpaperManager$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
SOURCE|<android.content.res.XmlBlock$Parser: int getEventType()>
SOURCE|<java.util.logging.Formatter: java.lang.String getTail(java.util.logging.Handler)>
SOURCE|<android.content.res.TypedArray: int getColor(int,int)>
SOURCE|<com.android.contacts.model.account.BaseAccountType$PhoneActionInflater: int getTypeLabelResource(java.lang.Integer)>
SOURCE|<com.android.internal.widget.ActionBarView$HomeView: int getStartOffset()>
SOURCE|<com.android.mms.ui.ChipsRecipientAdapter: int getItemLayout()>
SOURCE|<com.google.common.collect.ForwardingMap: java.util.Set keySet()>
SOURCE|<android.server.search.SearchManagerService: android.content.ComponentName getWebSearchActivity()>
SOURCE|<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessRecord getRecordForAppLocked(android.app.IApplicationThread)>
SOURCE|<com.android.contacts.model.account.ExchangeAccountType: com.android.contacts.model.dataitem.DataKind addDataKindStructuredName(android.content.Context)>
SOURCE|<android.media.Metadata: byte[] getByteArray(int)>
SOURCE|<com.google.android.mms.util.DownloadDrmHelper: java.lang.String getOriginalMimeType(android.content.Context,java.lang.String,java.lang.String)>
SOURCE|<android.location.Location: double getLatitude()>
SOURCE|<android.webkit.CookieManager: java.lang.String getCookie(java.lang.String)>
SOURCE|<com.android.internal.widget.SizeAdaptiveLayout: android.animation.Animator getTransitionAnimation()>
SOURCE|<com.android.internal.telephony.CallManager: com.android.internal.telephony.PhoneConstants$State getState()>
SOURCE|<android.net.wifi.p2p.WifiP2pGroup: java.lang.String getNetworkName()>
SOURCE|<com.android.server.am.CoreSettingsObserver: android.os.Bundle getCoreSettingsLocked()>
SOURCE|<com.android.browser.Controller: android.app.Activity getActivity()>
SOURCE|<com.android.inputmethod.latin.makedict.FusionDictionary$CharGroup: com.android.inputmethod.latin.makedict.FusionDictionary$WeightedString getBigram(java.lang.String)>
SOURCE|<java.io.EmulatedFieldsForLoading: char get(java.lang.String,char)>
SOURCE|<org.xml.sax.ext.DefaultHandler2: org.xml.sax.InputSource getExternalSubset(java.lang.String,java.lang.String)>
SOURCE|<com.android.gallery3d.filtershow.imageshow.ImageCrop: android.graphics.Matrix getCropBoundDisplayMatrix()>
SOURCE|<gov.nist.javax.sip.header.SIPHeader: java.lang.String getHeaderName()>
SOURCE|<android.app.Activity: android.content.ComponentName getComponentName()>
SOURCE|<java.nio.MappedByteBuffer: java.nio.MappedByteBuffer load()>
SOURCE|<com.android.emailcommon.service.EmailServiceProxy: int getApiLevel()>
SOURCE|<java.security.DigestInputStream: java.security.MessageDigest getMessageDigest()>
SOURCE|<com.android.internal.textservice.ITextServicesManager$Stub$Proxy: android.view.textservice.SpellCheckerInfo getCurrentSpellChecker(java.lang.String)>
SOURCE|<android.widget.CursorAdapter: android.view.View newDropDownView(android.content.Context,android.database.Cursor,android.view.ViewGroup)>
SOURCE|<com.android.bluetooth.btservice.AdapterService: com.android.bluetooth.btservice.AdapterService getAdapterService()>
SOURCE|<org.apache.harmony.xnet.provider.jsse.SSLSessionImpl: int getApplicationBufferSize()>
SOURCE|<android.hardware.input.IInputDevicesChangedListener$Stub: android.os.IBinder asBinder()>
SOURCE|<android.media.AudioService: int getLastAudibleStreamVolume(int)>
SOURCE|<android.view.IWindowManager$Stub$Proxy: android.view.WindowInfo getWindowInfo(android.os.IBinder)>
SOURCE|<android.content.Intent: java.util.ArrayList getStringArrayListExtra(java.lang.String)>
SOURCE|<com.google.android.mms.pdu.SendConf: byte[] getMessageId()>
SOURCE|<android.emoji.EmojiFactory: int getMinimumAndroidPua()>
SOURCE|<com.android.mms.transaction.MessagingNotification$NotificationInfo: long getTime()>
SOURCE|<org.apache.harmony.security.x509.AlgorithmIdentifier$1: java.lang.Object getDecodedObject(org.apache.harmony.security.asn1.BerInputStream)>
SOURCE|<android.app.BackStackRecord: int getId()>
SOURCE|<com.android.server.WifiService: android.net.DhcpInfo getDhcpInfo()>
SOURCE|<org.apache.http.message.BasicHttpResponse: org.apache.http.HttpEntity getEntity()>
SOURCE|<com.android.browser.provider.BrowserProvider$MySuggestionCursor: java.lang.String[] getColumnNames()>
SOURCE|<android.graphics.Bitmap: android.graphics.Bitmap createBitmap(android.util.DisplayMetrics,int[],int,int,android.graphics.Bitmap$Config)>
SOURCE|<com.android.internal.telephony.cdma.CDMALTEPhone: java.lang.String getImei()>
SOURCE|<android.service.wallpaper.IWallpaperEngine$Stub: android.os.IBinder asBinder()>
SOURCE|<android.media.MediaPlayer: android.os.Parcel getParcelParameter(int)>
SOURCE|<com.android.org.bouncycastle.asn1.DEREnumerated: java.math.BigInteger getValue()>
SOURCE|<com.android.calendar.Utils: java.lang.String getTimeZone(android.content.Context,java.lang.Runnable)>
SOURCE|<android.view.ViewDebug: long getViewInstanceCount()>
SOURCE|<android.webkit.SslClientCertLookupTable: android.webkit.SslClientCertLookupTable getInstance()>
SOURCE|<com.google.android.picasasync.PrefetchHelper: com.google.android.picasasync.PrefetchHelper$CacheStats getCacheStatistics(int)>
SOURCE|<com.android.gallery3d.anim.FloatAnimation: float get()>
SOURCE|<gov.nist.javax.sip.header.ims.PChargingVector: java.lang.String getOriginatingIOI()>
SOURCE|<android.bluetooth.BluetoothAdapter: int getProfileConnectionState(int)>
SOURCE|<android.widget.RemoteViewsAdapter: java.lang.Object getItem(int)>
SOURCE|<javax.sip.TimeoutEvent: javax.sip.Timeout getTimeout()>
SOURCE|<com.android.videoeditor.service.MovieEffect: android.graphics.Rect getEndRect()>
SOURCE|<org.xml.sax.helpers.XMLFilterImpl: org.xml.sax.DTDHandler getDTDHandler()>
SOURCE|<android.app.ActivityManagerProxy: java.util.List getRunningAppProcesses()>
SOURCE|<com.android.email.activity.MailboxFinder: com.android.email.Controller$Result getControllerResultsForTest()>
SOURCE|<com.google.android.picasasync.PicasaDatabaseHelper: com.google.android.picasasync.PicasaDatabaseHelper get(android.content.Context)>
SOURCE|<javax.security.auth.Subject: java.util.Set getPublicCredentials()>
SOURCE|<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$Uid$Pkg getPackageStatsLocked(int,java.lang.String)>
SOURCE|<android.net.sip.SimpleSessionDescription: java.lang.String getEncryptionMethod()>
SOURCE|<android.text.style.EasyEditSpan: int getSpanTypeId()>
SOURCE|<com.android.contacts.quickcontact.QuickContactActivity$ViewPagerAdapter: android.app.Fragment getItem(int)>
SOURCE|<com.android.internal.os.BatteryStatsImpl: int getLowDischargeAmountSinceCharge()>
SOURCE|<com.android.inputmethod.latin.suggestions.MoreSuggestions$MoreSuggestionsParam: int getWidth(int)>
SOURCE|<android.drm.DrmRights: byte[] getData()>
SOURCE|<android.widget.SimpleAdapter: android.view.View getDropDownView(int,android.view.View,android.view.ViewGroup)>
SOURCE|<android.location.LocationManager: android.location.Location getLastLocation()>
SOURCE|<org.apache.harmony.xnet.provider.jsse.CipherSuite: java.lang.String getAuthType(boolean)>
SOURCE|<android.provider.CalendarContract$Attendees: android.database.Cursor query(android.content.ContentResolver,long,java.lang.String[])>
SOURCE|<com.android.gallery3d.util.RangeIntArray: int get(int)>
SOURCE|<android.view.KeyEvent: char getNumber()>
SOURCE|<android.speech.tts.TtsEngines: java.lang.String getDefaultEngine()>
SOURCE|<java.text.DecimalFormatSymbols: java.util.Locale[] getAvailableLocales()>
SOURCE|<javax.microedition.khronos.egl.EGLContext: javax.microedition.khronos.egl.EGL getEGL()>
SOURCE|<java.io.RandomAccessFile: short readShort()>
SOURCE|<java.security.cert.X509CertSelector: java.lang.String getSubjectPublicKeyAlgID()>
SOURCE|<com.android.exchange.adapter.AbstractSyncAdapter: android.content.ContentProviderResult[] safeExecute(java.lang.String,java.util.ArrayList)>
SOURCE|<java.security.PrivilegedActionException: java.lang.Throwable getCause()>
SOURCE|<com.android.internal.telephony.sip.SipPhoneBase: boolean getCallForwardingIndicator()>
SOURCE|<java.util.Collections$SingletonList: java.lang.Object get(int)>
SOURCE|<com.android.calendar.selectcalendars.SelectCalendarsSyncAdapter: java.lang.Object getItem(int)>
SOURCE|<android.os.Debug: int getGlobalGcInvocationCount()>
SOURCE|<android.content.Intent: java.util.ArrayList getCharSequenceArrayListExtra(java.lang.String)>
SOURCE|<com.android.internal.os.IDropBoxManagerService$Stub: android.os.IBinder asBinder()>
SOURCE|<com.android.email.Preferences: boolean getEnableExchangeLogging()>
SOURCE|<android.text.method.TextKeyListener$NullKeyListener: int getInputType()>
SOURCE|<android.hardware.display.IDisplayManagerCallback$Stub: android.os.IBinder asBinder()>
SOURCE|<com.android.commands.monkey.MonkeySourceNetworkVars$3: java.lang.String get()>
SOURCE|<com.android.systemui.recent.RecentsHorizontalScrollView: int getVerticalFadingEdgeLength()>
SOURCE|<com.android.ex.chips.RecipientAlternatesAdapter: java.util.HashMap getMatchingRecipients(android.content.Context,java.util.ArrayList)>
SOURCE|<gov.nist.javax.sip.DialogFilter: java.lang.String getProcessingInfo()>
SOURCE|<android.media.MediaRouter$RouteInfo: int getSupportedTypes()>
SOURCE|<org.apache.harmony.xml.ExpatAttributes: java.lang.String getQName(int)>
SOURCE|<com.android.gallery3d.ui.PositionController: int getImageAtEdges()>
SOURCE|<com.android.contacts.list.LegacyPhoneNumberListAdapter: android.net.Uri getPhoneUri(int)>
SOURCE|<android.media.videoeditor.MediaVideoItem: android.media.videoeditor.WaveformData getWaveformData()>
SOURCE|<java.security.AlgorithmParameters: byte[] getEncoded(java.lang.String)>
SOURCE|<libcore.net.http.HttpEngine: java.io.InputStream getResponseBody()>
SOURCE|<com.android.internal.telephony.cdma.RuimRecords: java.lang.String getSid()>
SOURCE|<java.text.Bidi: int getRunLevel(int)>
SOURCE|<com.google.android.picasasync.Authorizer: java.lang.String getFreshAuthToken(java.lang.String,java.lang.String)>
SOURCE|<java.security.Signature: java.security.Signature getInstance(java.lang.String,java.security.Provider)>
SOURCE|<android.os.Debug: int getGlobalExternalFreedSize()>
SOURCE|<com.android.server.am.ActivityManagerService: android.app.IActivityManager$ContentProviderHolder getContentProviderExternal(java.lang.String,int,android.os.IBinder)>
SOURCE|<com.android.contacts.model.account.GoogleAccountType: java.lang.String getViewContactNotifyServicePackageName()>
SOURCE|<com.android.internal.telephony.DataConnection: boolean isRetryForever()>
SOURCE|<android.os.Debug: java.lang.String getCallers(int,java.lang.String)>
SOURCE|<android.content.res.AssetFileDescriptor: android.os.ParcelFileDescriptor getParcelFileDescriptor()>
SOURCE|<com.android.launcher2.CellLayout: float getDistanceFromCell(float,float,int[])>
SOURCE|<gov.nist.javax.sip.parser.Lexer: java.lang.String getHeaderName(java.lang.String)>
SOURCE|<com.android.i18n.phonenumbers.PhoneNumberUtil: com.android.i18n.phonenumbers.PhoneNumberUtil getInstance(java.lang.String,java.util.Map)>
SOURCE|<android.widget.CursorTreeAdapter: android.widget.FilterQueryProvider getFilterQueryProvider()>
SOURCE|<android.media.AudioTrack: int getNotificationMarkerPosition()>
SOURCE|<org.apache.http.impl.cookie.BestMatchSpec: org.apache.http.impl.cookie.RFC2965Spec getStrict()>
SOURCE|<android.gesture.Gesture: android.graphics.RectF getBoundingBox()>
SOURCE|<com.android.videoeditor.service.MovieMediaItem: int getRenderingMode()>
SOURCE|<android.telephony.SmsManager: android.telephony.SmsManager getDefault()>
SOURCE|<java.time.temporal.ValueRange: long getSmallestMaximum()>
SOURCE|<com.android.gallery3d.ui.UploadedTexture: int getTarget()>
SOURCE|<org.apache.harmony.xnet.provider.jsse.OpenSSLSocketImplWrapper: java.net.InetAddress getLocalAddress()>
SOURCE|<android.content.res.Resources: android.content.res.XmlResourceParser getLayout(int)>
SOURCE|<android.webkit.HTML5VideoViewProxy: android.content.Context getContext()>
SOURCE|<android.webkit.HTML5VideoView: boolean getReadyToUseSurfTex()>
SOURCE|<android.accounts.AccountManager: android.accounts.AccountManagerFuture getAuthTokenLabel(java.lang.String,java.lang.String,android.accounts.AccountManagerCallback,android.os.Handler)>
SOURCE|<com.android.gallery3d.data.MediaItem: com.android.gallery3d.data.BytesBufferPool getBytesBufferPool()>
SOURCE|<com.google.android.apps.lightcycle.panorama.MessageDisplay: android.graphics.Bitmap access$100(com.google.android.apps.lightcycle.panorama.MessageDisplay,java.lang.String,int,android.graphics.Typeface,float[])>
SOURCE|<gov.nist.javax.sip.message.SIPResponse: java.util.LinkedList getMessageAsEncodedStrings()>
SOURCE|<com.android.deskclock.widget.multiwaveview.PointCloud$GlowManager: float getRadius()>
SOURCE|<com.googlecode.mp4parser.authoring.tracks.CroppedTrack: java.lang.String getHandler()>
SOURCE|<android.telephony.SmsCbMessage: int getServiceCategory()>
SOURCE|<com.android.gallery3d.ui.BasicTexture: int getHeight()>
SOURCE|<android.net.WebAddress: int getPort()>
SOURCE|<android.telephony.ServiceState: int getRilRadioTechnology()>
SOURCE|<android.provider.MediaStore$InternalThumbnails: android.graphics.Bitmap getThumbnail(android.content.ContentResolver,long,long,int,android.graphics.BitmapFactory$Options,android.net.Uri,boolean)>
SOURCE|<com.android.internal.telephony.cdma.CDMAPhone: java.lang.String getMeid()>
SOURCE|<android.preference.PreferenceGroupAdapter: int getItemViewType(int)>
SOURCE|<gov.nist.javax.sip.address.SipUri: java.lang.String getUser()>
SOURCE|<java.security.Timestamp: java.security.cert.CertPath getSignerCertPath()>
SOURCE|<org.apache.http.util.ByteArrayBuffer: byte[] buffer()>
SOURCE|<org.apache.harmony.xnet.provider.jsse.CipherSuite: java.lang.String getName()>
SOURCE|<com.android.videoeditor.service.MovieTheme: java.lang.String getId()>
SOURCE|<android.app.ContextImpl: android.content.SharedPreferences getSharedPreferences(java.lang.String,int)>
SOURCE|<android.widget.GridView: int getNumColumns()>
SOURCE|<android.speech.tts.TtsEngines: android.content.Intent getSettingsIntent(java.lang.String)>
SOURCE|<android.graphics.drawable.BitmapDrawable: int getOpacity()>
SOURCE|<com.android.calendar.month.SimpleWeekView: int getFirstJulianDay()>
SOURCE|<com.android.gallery3d.app.PhotoDataAdapter: int getLoadingState(int)>
SOURCE|<libcore.net.http.HttpsURLConnectionImpl: java.io.OutputStream getOutputStream()>
SOURCE|<com.android.contacts.model.RawContactModifier: java.util.ArrayList getValidTypes(com.android.contacts.model.RawContactDelta,com.android.contacts.model.dataitem.DataKind)>
SOURCE|<com.coremedia.iso.boxes.TimeToSampleBox: java.util.List getEntries()>
SOURCE|<com.android.internal.telephony.BaseCommands: com.android.internal.telephony.CommandsInterface$RadioState getRadioState()>
SOURCE|<com.android.inputmethod.latin.TargetApplicationGetter: android.content.pm.ApplicationInfo getCachedApplicationInfo(java.lang.String)>
SOURCE|<android.bluetooth.IBluetoothPbap$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
SOURCE|<android.content.IOnPrimaryClipChangedListener$Stub: android.os.IBinder asBinder()>
SOURCE|<com.android.gallery3d.filtershow.presets.ImagePreset: com.android.gallery3d.filtershow.filters.ImageFilter getFilter(java.lang.String)>
SOURCE|<com.android.gallery3d.gadget.LocalPhotoSource: android.graphics.Bitmap getImage(int)>
SOURCE|<com.android.contacts.editor.ViewIdGenerator: int getId(com.android.contacts.model.RawContactDelta,com.android.contacts.model.dataitem.DataKind,com.android.contacts.model.RawContactDelta$ValuesDelta,int)>
SOURCE|<android.util.SparseLongArray: long get(int,long)>
SOURCE|<org.apache.http.impl.cookie.BestMatchSpec: int getVersion()>
SOURCE|<android.widget.FrameLayout: boolean getMeasureAllChildren()>
SOURCE|<com.android.inputmethod.latin.Dictionary: int getFrequency(java.lang.CharSequence)>
SOURCE|<com.android.gallery3d.data.UriImage: android.net.Uri getContentUri()>
SOURCE|<com.android.mms.transaction.DefaultRetryScheme: long getWaitingInterval()>
SOURCE|<java.time.Year: int getValue()>
SOURCE|<com.android.gallery3d.picasasource.PicasaSource: java.lang.String getUserAccount(android.content.Context,com.android.gallery3d.data.MediaObject)>
SOURCE|<android.content.res.TypedArray: int getInt(int,int)>
SOURCE|<android.bluetooth.BluetoothPan: boolean isTetheringOn()>
SOURCE|<com.android.server.am.ActivityManagerService: android.content.ComponentName getActivityClassForToken(android.os.IBinder)>
SOURCE|<java.net.DatagramSocket: java.net.InetAddress getLocalAddress()>
SOURCE|<com.android.videoeditor.service.MovieTheme: com.android.videoeditor.service.MovieTransition getMidTransition()>
SOURCE|<org.xml.sax.helpers.AttributesImpl: java.lang.String getQName(int)>
SOURCE|<com.google.common.collect.MapMakerInternalMap$StrongEntry: long getExpirationTime()>
SOURCE|<gov.nist.javax.sip.message.SIPMessage: javax.sip.header.MaxForwardsHeader getMaxForwards()>
SOURCE|<android.app.ExpandableListActivity: android.widget.ExpandableListView getExpandableListView()>
SOURCE|<com.android.gallery3d.ui.GLCanvasImpl: float getAlpha()>
SOURCE|<android.content.res.Resources: float getFraction(int,int,int)>
SOURCE|<java.time.Month: int get(java.time.temporal.TemporalField)>
SOURCE|<android.drm.ProcessedData: java.lang.String getAccountId()>
SOURCE|<com.android.emailcommon.TrafficFlags: int getSyncFlags(android.content.Context,com.android.emailcommon.provider.Account)>
SOURCE|<android.text.format.DateFormat: java.text.DateFormat getLongDateFormat(android.content.Context)>
SOURCE|<com.android.contacts.list.CustomContactListFilterActivity$AccountSet: java.util.ArrayList buildDiff()>
SOURCE|<android.os.INetworkManagementService$Stub$Proxy: java.lang.String[] listTetheredInterfaces()>
SOURCE|<com.android.email.mail.store.ImapStore: com.android.email.mail.store.ImapConnection getConnection()>
SOURCE|<org.apache.harmony.crypto.internal.NullCipherSpi: byte[] engineUpdate(byte[],int,int)>
SOURCE|<java.util.Collections$EmptyList: java.lang.Object get(int)>
SOURCE|<android.app.SearchManager: android.database.Cursor getSuggestions(android.app.SearchableInfo,java.lang.String,int)>
SOURCE|<de.ecspride.PrivateDataLeak2: android.view.View findViewById(int)>
SOURCE|<com.google.android.mms.pdu.NotificationInd: byte[] getContentLocation()>
SOURCE|<android.graphics.Paint: android.graphics.Paint$FontMetrics getFontMetrics()>
SOURCE|<java.security.KeyStore: java.lang.String getType()>
SOURCE|<android.content.res.CompatibilityInfo$Translator: android.graphics.Region getTranslatedTouchableArea(android.graphics.Region)>
SOURCE|<android.widget.DialerFilter: java.lang.CharSequence getDigits()>
SOURCE|<android.telephony.gsm.SmsManager: android.telephony.gsm.SmsManager getDefault()>
SOURCE|<com.android.org.bouncycastle.asn1.DEROutputStream: com.android.org.bouncycastle.asn1.ASN1OutputStream getDERSubStream()>
SOURCE|<javax.xml.transform.dom.DOMSource: org.w3c.dom.Node getNode()>
SOURCE|<android.provider.MediaStore$Images$Thumbnails: android.database.Cursor query(android.content.ContentResolver,android.net.Uri,java.lang.String[])>
SOURCE|<com.android.mms.data.Contact: boolean getSendToVoicemail()>
SOURCE|<com.adobe.xmp.impl.XMPNodeUtils: com.adobe.xmp.impl.XMPNode findSchemaNode(com.adobe.xmp.impl.XMPNode,java.lang.String,java.lang.String,boolean)>
SOURCE|<java.lang.Class: java.lang.'annotation'.Annotation getAnnotation(java.lang.Class)>
SOURCE|<com.android.gallery3d.app.PackagesMonitor: int getPackagesVersion(android.content.Context)>
SOURCE|<java.io.RandomAccessFile: int readUnsignedShort()>
SOURCE|<android.test.mock.MockPackageManager: android.graphics.drawable.Drawable getDefaultActivityIcon()>
SOURCE|<com.android.gallery3d.data.MediaDetails: int getUnit(int)>
SOURCE|<android.content.ContextWrapper: java.io.File getFilesDir()>
SOURCE|<android.webkit.WebViewClassic: int getHistoryPictureWidth()>
SOURCE|<com.android.internal.telephony.ServiceStateTracker: boolean onSignalStrengthResult(android.os.AsyncResult,boolean)>
SOURCE|<android.graphics.drawable.DrawableContainer: android.graphics.drawable.Drawable$ConstantState getConstantState()>
SOURCE|<com.android.email.activity.UIControllerBase: long getActualAccountId()>
SOURCE|<com.android.mms.MmsApp: com.android.mms.MmsApp getApplication()>
SOURCE|<android.drm.DrmEvent: java.lang.Object getAttribute(java.lang.String)>
SOURCE|<javax.xml.validation.SchemaFactory: java.lang.Object getProperty(java.lang.String)>
SOURCE|<android.renderscript.Element: int getBytesSize()>
SOURCE|<android.view.textservice.TextServicesManager: android.view.textservice.SpellCheckerInfo getCurrentSpellChecker()>
SOURCE|<com.android.i18n.phonenumbers.PhoneNumberUtil: com.android.i18n.phonenumbers.Phonemetadata$PhoneNumberDesc getNumberDescByType(com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata,com.android.i18n.phonenumbers.PhoneNumberUtil$PhoneNumberType)>
SOURCE|<gov.nist.javax.sip.stack.UDPMessageProcessor: java.lang.String getTransport()>
SOURCE|<android.telephony.TelephonyManager: java.lang.String[] getIsimImpu()>
SOURCE|<org.apache.harmony.xnet.provider.jsse.ConnectionState: int getFragmentSize(int)>
SOURCE|<org.apache.harmony.xnet.provider.jsse.ClientHello: byte[] getRandom()>
SOURCE|<com.android.internal.telephony.IIccPhoneBook$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
SOURCE|<android.media.MediaRouter$RouteCategory: int getSupportedTypes()>
SOURCE|<android.webkit.WebView: java.lang.String getTitle()>
SOURCE|<android.test.mock.MockPackageManager: android.content.pm.ServiceInfo getServiceInfo(android.content.ComponentName,int)>
SOURCE|<android.widget.GridLayout$Axis: int getCount()>
SOURCE|<android.webkit.WebSyncManager: java.lang.Object clone()>
SOURCE|<android.content.res.ObbScanner: android.content.res.ObbInfo getObbInfo(java.lang.String)>
SOURCE|<android.media.AudioTrack: float getMaxVolume()>
SOURCE|<com.google.android.gms.common.internal.IGmsCallbacks$Stub: android.os.IBinder asBinder()>
SOURCE|<org.apache.http.message.BasicNameValuePair: java.lang.String getName()>
SOURCE|<com.android.calendar.agenda.AgendaWindowAdapter: com.android.calendar.agenda.AgendaWindowAdapter$DayAdapterInfo getAdapterInfoByPosition(int)>
SOURCE|<org.apache.harmony.xnet.provider.jsse.SSLRecordProtocol: byte[] getChangeCipherSpecMesage(org.apache.harmony.xnet.provider.jsse.SSLSessionImpl)>
SOURCE|<android.support.v13.app.FragmentPagerAdapter: java.lang.Object instantiateItem(android.view.ViewGroup,int)>
SOURCE|<android.app.PendingIntent: android.app.PendingIntent getActivities(android.content.Context,int,android.content.Intent[],int,android.os.Bundle)>
SOURCE|<java.util.concurrent.ForkJoinWorkerThread: int getPoolIndex()>
SOURCE|<org.apache.harmony.xml.dom.DocumentImpl: boolean getStrictErrorChecking()>
SOURCE|<com.google.common.collect.Multimaps$CustomSortedSetMultimap: java.util.Collection createCollection()>
SOURCE|<android.test.mock.MockContext: android.content.Context getApplicationContext()>
SOURCE|<com.android.internal.telephony.DriverCall: java.lang.String toString()>
SOURCE|<android.media.videoeditor.MediaProperties: int[] getSupportedVideoFileFormat()>
SOURCE|<java.lang.System: java.lang.String getProperty(java.lang.String,java.lang.String)>
SOURCE|<com.android.gallery3d.picasasource.PicasaSource: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>
SOURCE|<android.view.View: android.graphics.Bitmap getDrawingCache()>
SOURCE|<android.net.Uri$OpaqueUri: java.lang.String getAuthority()>
SOURCE|<com.android.gallery3d.util.LightCycleHelper: com.android.gallery3d.util.LightCycleHelper$PanoramaMetadata getPanoramaMetadata(android.content.Context,android.net.Uri)>
SOURCE|<android.widget.CompoundButton: android.os.Parcelable onSaveInstanceState()>
SOURCE|<com.android.contacts.calllog.CallTypeIconsView: int getCount()>
SOURCE|<com.android.internal.telephony.cat.BerTlv: java.util.List getComprehensionTlvs()>
SOURCE|<com.android.calendar.month.SimpleWeekView: int getLastMonth()>
SOURCE|<android.net.Uri$AbstractHierarchicalUri: java.lang.String getEncodedUserInfo()>
SOURCE|<android.net.sip.SipSession: android.net.sip.SipProfile getPeerProfile()>
SOURCE|<java.time.chrono.HijrahDate: int getDayOfYear()>
SOURCE|<com.android.contacts.model.account.BaseAccountType: com.android.contacts.model.dataitem.DataKind addDataKindNickname(android.content.Context)>
SOURCE|<com.android.server.location.GeocoderProxy: java.lang.String getFromLocation(double,double,int,android.location.GeocoderParams,java.util.List)>
SOURCE|<libcore.icu.ICU: java.util.Locale[] getAvailableDecimalFormatSymbolsLocales()>
SOURCE|<com.android.mms.MmsConfig: int getMaxTextLimit()>
SOURCE|<com.android.internal.view.ActionBarPolicy: int getStackedTabMaxWidth()>
SOURCE|<android.graphics.Paint: android.graphics.Shader getShader()>
SOURCE|<android.view.accessibility.AccessibilityNodeInfo: int getChildCount()>
SOURCE|<android.util.Xml: void parse(java.io.InputStream,android.util.Xml$Encoding,org.xml.sax.ContentHandler)>
SOURCE|<android.view.KeyCharacterMap: android.view.KeyEvent[] getEvents(char[])>
SOURCE|<com.android.calendar.month.MonthByWeekAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)>
SOURCE|<com.android.emailcommon.utility.Utility: java.lang.String[] getRowColumns(android.content.Context,android.net.Uri,long,java.lang.String[])>
SOURCE|<android.app.ActivityThread: android.util.DisplayMetrics getDisplayMetricsLocked(int,android.content.res.CompatibilityInfo)>
SOURCE|<org.apache.harmony.xnet.provider.jsse.SSLSocketFactoryImpl: java.lang.String[] getDefaultCipherSuites()>
SOURCE|<android.net.Uri$OpaqueUri: int getPort()>
SOURCE|<com.android.contacts.datepicker.DatePicker: int getMonth()>
SOURCE|<android.net.MailTo: java.lang.String getTo()>
SOURCE|<android.hardware.usb.UsbInterface: int getEndpointCount()>
SOURCE|<java.net.CookieManager: java.net.CookieStore getCookieStore()>
SOURCE|<com.android.internal.os.BatteryStatsImpl$Uid$Proc: long getForegroundTime(int)>
SOURCE|<android.animation.AnimatorSet: java.util.ArrayList getChildAnimations()>
SOURCE|<android.test.mock.MockPackageManager: int getApplicationEnabledSetting(java.lang.String)>
SOURCE|<java.security.cert.CertPathBuilder: java.security.cert.CertPathBuilder getInstance(java.lang.String,java.lang.String)>
SOURCE|<android.webkit.ByteArrayBuilder: android.webkit.ByteArrayBuilder$Chunk getFirstChunk()>
SOURCE|<com.adobe.xmp.options.SerializeOptions: java.lang.String getNewline()>
SOURCE|<android.media.IAudioService$Stub$Proxy: int getStreamMaxVolume(int)>
SOURCE|<java.security.spec.PKCS8EncodedKeySpec: java.lang.String getFormat()>
SOURCE|<gov.nist.javax.sip.address.SipUri: gov.nist.javax.sip.address.TelephoneNumber getTelephoneSubscriber()>
SOURCE|<android.location.Geofence: int getType()>
SOURCE|<libcore.icu.ICU: java.lang.String[] getISOLanguages()>
SOURCE|<com.android.mms.dom.NodeImpl: java.lang.Object getUserData(java.lang.String)>
SOURCE|<libcore.net.http.RawHeaders: java.lang.String getFieldName(int)>
SOURCE|<android.content.ContentProviderProxy: java.lang.String getType(android.net.Uri)>
SOURCE|<android.view.ViewConfiguration: int getScrollBarSize()>
SOURCE|<android.nfc.INfcTag$Stub$Proxy: boolean isPresent(int)>
SOURCE|<com.android.ex.chips.BaseRecipientAdapter: int getQueryType()>
SOURCE|<com.android.email.activity.MessageOrderManager: android.os.Handler getHandlerForContentObserver()>
SOURCE|<com.android.gallery3d.provider.GalleryProvider: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>
SOURCE|<java.lang.Package: java.lang.String getImplementationVersion()>
SOURCE|<android.widget.ImageView: android.graphics.ColorFilter getColorFilter()>
SOURCE|<android.net.ConnectivityManager: boolean isNetworkSupported(int)>
SOURCE|<gov.nist.javax.sip.address.SipUri: java.lang.String getLrParam()>
SOURCE|<android.app.ActivityManagerProxy: java.lang.String getProviderMimeType(android.net.Uri,int)>
SOURCE|<android.bluetooth.IBluetooth$Stub$Proxy: int getRemoteClass(android.bluetooth.BluetoothDevice)>
SOURCE|<com.android.emailcommon.internet.MimeMessage: java.lang.String[] getHeader(java.lang.String)>
SOURCE|<java.lang.System: java.lang.SecurityManager getSecurityManager()>
SOURCE|<java.time.format.DateTimeFormatterBuilder: java.time.format.DateTimeFormatterBuilder parseCaseInsensitive()>
SOURCE|<java.util.concurrent.atomic.AtomicLongArray: long getAndIncrement(int)>
SOURCE|<android.widget.ProgressBar: android.view.animation.Interpolator getInterpolator()>
SOURCE|<com.android.browser.Tab: int getLoadProgress()>
SOURCE|<com.android.internal.textservice.ITextServicesManager$Stub: android.os.IBinder asBinder()>
SOURCE|<java.security.cert.CertificateRevokedException: java.util.Date getInvalidityDate()>
SOURCE|<com.android.internal.telephony.DataConnectionAc: android.net.LinkCapabilities getLinkCapabilitiesSync()>
SOURCE|<com.android.browser.BrowserHistoryPage$HistoryAdapter: int getGroupCount()>
SOURCE|<android.content.pm.Signature: java.security.PublicKey getPublicKey()>
SOURCE|<com.android.launcher2.PagedViewCellLayout: int getCellCountX()>
SOURCE|<com.google.common.collect.BstModificationResult: com.google.common.collect.BstModificationResult$ModificationType getType()>
SOURCE|<android.database.CursorWrapper: java.lang.String[] getColumnNames()>
SOURCE|<android.app.ContextImpl: int getThemeResId()>
SOURCE|<org.apache.http.impl.SocketHttpServerConnection: java.net.InetAddress getLocalAddress()>
SOURCE|<com.android.deskclock.AlarmClock$AlarmItemAdapter: int[] getRepeatArray()>
SOURCE|<android.media.audiofx.AudioEffect: int getParameter(int,short[])>
SOURCE|<android.filterpacks.imageproc.ToRGBFilter: android.filterfw.core.FrameFormat getConvertedFormat(android.filterfw.core.FrameFormat)>
SOURCE|<com.android.internal.telephony.PhoneProxy: boolean getCallForwardingIndicator()>
SOURCE|<android.text.style.BulletSpan: int getLeadingMargin(boolean)>
SOURCE|<org.apache.harmony.xnet.provider.jsse.OpenSSLRSAPrivateKey: java.math.BigInteger getPrivateExponent()>
SOURCE|<com.googlecode.mp4parser.authoring.Mp4TrackImpl: java.util.List getSampleDependencies()>
SOURCE|<android.graphics.drawable.StateListDrawable: int getStateCount()>
SOURCE|<android.speech.tts.TextToSpeechService$SpeechItem: int getCallerUid()>
SOURCE|<android.media.videoeditor.EffectKenBurns: android.graphics.Rect getEndRect()>
SOURCE|<com.android.videoeditor.BaseAdapterWithImages: long getItemId(int)>
SOURCE|<org.apache.harmony.security.provider.cert.X509CertImpl: byte[] getEncoded()>
SOURCE|<java.util.logging.MemoryHandler: java.util.logging.Level getPushLevel()>
SOURCE|<android.bluetooth.IBluetoothStateChangeCallback$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
SOURCE|<com.android.internal.telephony.gsm.SIMRecords: java.lang.String getVoiceMailAlphaTag()>
SOURCE|<java.nio.CharToByteBufferAdapter: char get()>
SOURCE|<com.android.server.NetworkManagementService: android.net.NetworkStats getNetworkStatsSummaryDev()>
SOURCE|<com.android.internal.view.IInputMethod$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
SOURCE|<javax.xml.transform.sax.SAXSource: java.lang.String getSystemId()>
SOURCE|<android.filterfw.core.GLFrame: android.graphics.Bitmap getBitmap()>
SOURCE|<com.android.gallery3d.filtershow.presets.ImagePreset: float getScaleFactor()>
SOURCE|<android.renderscript.Mesh$Builder: int getCurrentVertexTypeIndex()>
SOURCE|<android.net.TrafficStats: long getRxPackets(java.lang.String)>
SOURCE|<gov.nist.javax.sip.stack.SIPTransaction: java.lang.String getBranch()>
SOURCE|<com.android.contacts.util.AccountsListAdapter: com.android.contacts.model.account.AccountWithDataSet getItem(int)>
SOURCE|<com.android.internal.telephony.cat.ComprehensionTlv: byte[] getRawValue()>
SOURCE|<com.android.contacts.model.account.BaseAccountType$NameKindBuilder: java.lang.String getTagName()>
SOURCE|<android.database.AbstractWindowedCursor: int getType(int)>
SOURCE|<android.widget.ExpandableListConnector: android.widget.Filter getFilter()>
SOURCE|<com.android.ex.chips.BaseRecipientAdapter: int getItemLayout()>
SOURCE|<com.android.contacts.list.ContactEntryListFragment: android.content.Context getContext()>
SOURCE|<android.app.ActivityThread: android.app.Instrumentation getInstrumentation()>
SOURCE|<org.apache.harmony.xnet.provider.jsse.OpenSSLSessionImpl: byte[] getEncoded()>
SOURCE|<android.widget.RemoteViewsAdapter$FixedSizeRemoteViewsCache: android.widget.RemoteViewsAdapter$RemoteViewsIndexMetaData getMetaDataAt(int)>
SOURCE|<com.android.internal.telephony.ITelephony$Stub$Proxy: int getCdmaEriIconIndex()>
SOURCE|<com.android.deskclock.SettingsActivity: java.lang.CharSequence[][] getAllTimezones()>
SOURCE|<org.apache.http.protocol.HttpDateGenerator: java.lang.String getCurrentDate()>
SOURCE|<com.android.phone.PhoneInterfaceManager: int getNetworkType()>
SOURCE|<com.android.emailcommon.utility.SSLUtils$KeyChainKeyManager: java.lang.String chooseClientAlias(java.lang.String[],java.security.Principal[],java.net.Socket)>
SOURCE|<java.security.cert.X509CertSelector: byte[] getIssuerAsBytes()>
SOURCE|<gov.nist.javax.sip.header.ims.SecurityAgree: java.lang.Object clone()>
SOURCE|<com.android.systemui.recent.RecentsPanelView$TaskDescriptionAdapter: int getCount()>
SOURCE|<java.lang.reflect.Field: double getDouble(java.lang.Object)>
SOURCE|<com.android.mms.dom.smil.TimeListImpl: int getLength()>
SOURCE|<android.app.ContextImpl: android.graphics.drawable.Drawable getWallpaper()>
SOURCE|<org.apache.harmony.xml.dom.NodeImpl: java.lang.Object getFeature(java.lang.String,java.lang.String)>
SOURCE|<com.android.contacts.editor.LabeledEditorView$EditTypeAdapter: android.view.View getDropDownView(int,android.view.View,android.view.ViewGroup)>
SOURCE|<com.android.camera.ui.PieItem: float getAnimationAngle()>
SOURCE|<android.renderscript.Mesh$TriangleMeshBuilder: android.renderscript.Mesh create(boolean)>
SOURCE|<android.text.method.QwertyKeyListener: android.text.method.QwertyKeyListener getInstanceForFullKeyboard()>
SOURCE|<com.android.contacts.dialpad.DialpadFragment$DialpadChooserAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)>
SOURCE|<java.sql.DataTruncation: boolean getParameter()>
SOURCE|<java.lang.VMClassLoader: java.net.URL getResource(java.lang.String)>
SOURCE|<com.android.bluetooth.pbap.BluetoothPbapVcardManager: java.util.ArrayList loadCallHistoryList(int)>
SOURCE|<com.android.videoeditor.service.MovieAudioTrack: long getTimelineDuration()>
SOURCE|<com.android.email.NotificationController: android.text.SpannableString getNewMessageTitle(java.lang.String,int)>
SOURCE|<com.android.gallery3d.data.MediaObject: long getCacheSize()>
SOURCE|<android.widget.GridLayout$Alignment: android.widget.GridLayout$Bounds getBounds()>
SOURCE|<com.android.contacts.detail.ContactDetailTabCarousel: float getStoredYCoordinateForTab(int)>
SOURCE|<android.content.res.TypedArray: android.content.res.Resources getResources()>
SOURCE|<org.xml.sax.helpers.AttributeListImpl: java.lang.String getValue(int)>
SOURCE|<android.app.ApplicationPackageManager: java.util.List getAllPermissionGroups(int)>
SOURCE|<java.nio.ShortBuffer: java.nio.ShortBuffer get(short[],int,int)>
SOURCE|<android.view.PointerIcon: float getHotSpotX()>
SOURCE|<com.android.contacts.calllog.DefaultVoicemailNotifier: com.android.contacts.calllog.DefaultVoicemailNotifier getInstance(android.content.Context)>
SOURCE|<android.view.View$AccessibilityDelegate: android.view.accessibility.AccessibilityNodeProvider getAccessibilityNodeProvider(android.view.View)>
SOURCE|<android.filterpacks.imageproc.PosterizeFilter: android.filterfw.core.FrameFormat getOutputFormat(java.lang.String,android.filterfw.core.FrameFormat)>
SOURCE|<android.view.IWindowManager$Stub$Proxy: int getRotation()>
SOURCE|<android.accessibilityservice.AccessibilityService: android.view.accessibility.AccessibilityNodeInfo getRootInActiveWindow()>
SOURCE|<com.android.server.sip.SipService: android.net.sip.SipProfile[] getListOfProfiles()>
SOURCE|<com.android.internal.telephony.CallerInfo: com.android.internal.telephony.CallerInfo getCallerInfo(android.content.Context,android.net.Uri)>
SOURCE|<com.android.vcard.VCardSourceDetector: java.lang.String getEstimatedCharset()>
SOURCE|<android.content.Intent: java.lang.Object getExtra(java.lang.String)>
SOURCE|<android.drm.ProcessedData: java.lang.String getSubscriptionId()>
SOURCE|<android.webkit.WebViewDatabaseClassic: java.util.ArrayList getFormData(java.lang.String,java.lang.String)>
SOURCE|<org.apache.harmony.xnet.provider.jsse.HandshakeIODataStream: byte[] getData(int)>
SOURCE|<org.apache.harmony.security.utils.Array: java.lang.String getBytesAsString(byte[])>
SOURCE|<android.content.Context: int getThemeResId()>
SOURCE|<com.googlecode.mp4parser.authoring.Movie: java.util.List getTracks()>
SOURCE|<com.android.org.bouncycastle.asn1.ASN1OctetString: com.android.org.bouncycastle.asn1.ASN1OctetStringParser parser()>
SOURCE|<gov.nist.javax.sip.header.SubscriptionState: java.lang.String getState()>
SOURCE|<android.hardware.usb.UsbAccessory: java.lang.String getSerial()>
SOURCE|<android.accounts.AccountManager: android.accounts.AccountManagerFuture getAuthToken(android.accounts.Account,java.lang.String,android.os.Bundle,android.app.Activity,android.accounts.AccountManagerCallback,android.os.Handler)>
SOURCE|<com.android.browser.TitleBar: android.webkit.WebView getCurrentWebView()>
SOURCE|<java.util.AbstractMap$SimpleEntry: java.lang.Object getValue()>
SOURCE|<com.android.vcard.VCardComposer: int getCount()>
SOURCE|<com.android.server.pm.PackageManagerService: int getInstallLocation()>
SOURCE|<com.android.email.FolderProperties: android.graphics.drawable.Drawable getIcon(int,long,int)>
SOURCE|<android.widget.RatingBar: int getNumStars()>
SOURCE|<com.android.commands.monkey.MonkeySourceNetworkVars$10: java.lang.String get()>
SOURCE|<org.xmlpull.v1.XmlPullParserFactory: boolean getFeature(java.lang.String)>
SOURCE|<com.android.server.InputMethodManagerService$InputMethodAndSubtypeListManager: java.util.List getSortedInputMethodAndSubtypeList()>
SOURCE|<com.google.android.picasastore.PicasaStoreFacade: java.lang.String getAlbumCoverKey(long,java.lang.String)>
SOURCE|<com.android.systemui.recent.RecentsVerticalScrollView: android.view.View getChildAtPosition(android.view.MotionEvent)>
SOURCE|<javax.crypto.spec.DHPrivateKeySpec: java.math.BigInteger getG()>
SOURCE|<com.android.browser.PreloadController: android.app.Activity getActivity()>
SOURCE|<android.app.SearchableInfo: int getVoiceMaxResults()>
SOURCE|<com.android.gallery3d.data.SecureAlbum: java.util.ArrayList getMediaItem(int,int)>
SOURCE|<com.google.android.gms.panorama.internal.IPanoramaCallbacks$Stub: android.os.IBinder asBinder()>
SOURCE|<android.filterfw.core.SimpleFrameManager: android.filterfw.core.Frame releaseFrame(android.filterfw.core.Frame)>
SOURCE|<android.renderscript.Allocation: android.renderscript.Allocation createFromBitmapResource(android.renderscript.RenderScript,android.content.res.Resources,int)>
SOURCE|<com.android.contacts.editor.AggregationSuggestionEngine: int getSuggestedContactCount()>
SOURCE|<com.android.videoeditor.widgets.AudioTrackLinearLayout: android.app.Dialog onCreateDialog(int,android.os.Bundle)>
SOURCE|<android.net.SntpClient: long getRoundTripTime()>
SOURCE|<android.content.res.TypedArray: java.lang.CharSequence getText(int)>
SOURCE|<com.android.internal.telephony.gsm.SmsMessage: com.android.internal.telephony.gsm.SmsMessage$SubmitPdu getSubmitPdu(java.lang.String,java.lang.String,java.lang.String,boolean,byte[])>
SOURCE|<android.gesture.GestureStore: void load(java.io.InputStream,boolean)>
SOURCE|<android.telephony.cdma.CdmaSmsCbProgramData: int getCategory()>
SOURCE|<java.time.ZoneId: java.lang.String getDisplayName(java.time.format.TextStyle,java.util.Locale)>
SOURCE|<android.mtp.MtpObjectInfo: int getSequenceNumber()>
SOURCE|<android.filterpacks.imageproc.TintFilter: android.filterfw.core.FrameFormat getOutputFormat(java.lang.String,android.filterfw.core.FrameFormat)>
SOURCE|<android.database.sqlite.SQLiteDatabase: long getPageSize()>
SOURCE|<android.media.MediaScanner$WplHandler: org.xml.sax.ContentHandler getContentHandler()>
SOURCE|<org.apache.harmony.xnet.provider.jsse.SSLSessionImpl: java.lang.String getPeerHost()>
SOURCE|<android.webkit.WebViewClassic$InvokeListBox$MyArrayListAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)>
SOURCE|<com.android.videoeditor.service.VideoEditorProject$Download: long getTime()>
SOURCE|<android.net.SntpClient: long getNtpTimeReference()>
SOURCE|<android.widget.TextView: boolean getHorizontallyScrolling()>
SOURCE|<com.android.server.am.ProviderMap: com.android.server.am.ContentProviderRecord getProviderByClass(android.content.ComponentName,int)>
SOURCE|<com.google.android.mms.pdu.RetrieveConf: byte[] getContentType()>
SOURCE|<android.content.pm.IPackageStatsObserver$Stub: android.os.IBinder asBinder()>
SOURCE|<com.android.camera.PanoramaModule: int getPreviewBufSize()>
SOURCE|<android.animation.Keyframe: java.lang.Class getType()>
SOURCE|<com.coremedia.iso.boxes.StaticChunkOffsetBox: long getContentSize()>
SOURCE|<com.coremedia.iso.IsoFile: com.coremedia.iso.boxes.MovieBox getMovieBox()>
SOURCE|<android.telephony.TelephonyManager: java.lang.String getLine1AlphaTag()>
SOURCE|<com.android.contacts.voicemail.VoicemailStatusHelperImpl$OverallState: int getCallLogMessageId()>
SOURCE|<android.view.Choreographer: long getFrameTime()>
SOURCE|<com.android.email.SecurityPolicy: com.android.email.SecurityPolicy getInstance(android.content.Context)>
SOURCE|<com.android.launcher2.PagedViewGridLayout: int getPageChildCount()>
SOURCE|<com.android.internal.telephony.ApnSetting: java.lang.String toString()>
SOURCE|<com.android.contacts.util.StructuredPostalUtils: android.net.Uri getPostalAddressUri(java.lang.String)>
SOURCE|<com.android.mms.model.SmilHelper: org.w3c.dom.smil.SMILMediaElement createMediaElement(java.lang.String,org.w3c.dom.smil.SMILDocument,java.lang.String)>
SOURCE|<android.app.DownloadManager: android.net.Uri getDownloadUri(long)>
SOURCE|<com.android.gallery3d.util.RangeArray: java.lang.Object get(int)>
SOURCE|<android.telephony.TelephonyManager: java.lang.String getVoiceMailNumber()>
SOURCE|<android.widget.TextView: int getRightPaddingOffset()>
SOURCE|<gov.nist.javax.sip.stack.SIPTransaction: int getViaPort()>
SOURCE|<com.android.server.location.LocationBasedCountryDetector: android.location.Country detectCountry()>
SOURCE|<java.text.DecimalFormat: java.lang.Number parse(java.lang.String,java.text.ParsePosition)>
SOURCE|<com.google.common.collect.TransformedImmutableList: com.google.common.collect.ImmutableList subList(int,int)>
SOURCE|<gov.nist.javax.sip.parser.Pipeline$Buffer: int getNextByte()>
SOURCE|<java.time.chrono.MinguoChronology: java.lang.String getId()>
SOURCE|<android.speech.tts.ITextToSpeechService$Stub$Proxy: java.lang.String[] getFeaturesForLanguage(java.lang.String,java.lang.String,java.lang.String)>
SOURCE|<android.filterfw.core.Filter: int getNumberOfInputs()>
SOURCE|<android.filterfw.core.GLFrame: java.lang.Object getObjectValue()>
SOURCE|<com.android.musicfx.ControlPanelEffect: com.android.musicfx.ControlPanelEffect$ControlMode getControlMode(int)>
SOURCE|<android.graphics.drawable.GradientDrawable: android.graphics.drawable.Drawable$ConstantState getConstantState()>
SOURCE|<android.net.NetworkPolicyManager: long computeLastCycleBoundary(long,android.net.NetworkPolicy)>
SOURCE|<com.android.gallery3d.ui.GLRootView: android.graphics.Matrix getCompensationMatrix()>
SOURCE|<com.android.contacts.widget.IndexerListAdapter: int getPositionForSection(int)>
SOURCE|<java.sql.SQLWarning: java.sql.SQLWarning getNextWarning()>
SOURCE|<com.android.gallery3d.data.LocalMergeAlbum: android.net.Uri getContentUri()>
SOURCE|<com.android.internal.telephony.sip.SipPhoneBase: java.lang.String getVoiceMailNumber()>
SOURCE|<android.security.IKeyChainAliasCallback$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
SOURCE|<com.android.mms.data.Contact: long getRecipientId()>
SOURCE|<com.android.email.activity.AccountSelectorAdapter$CursorWithExtras: java.lang.String getAccountDisplayName()>
SOURCE|<android.widget.ProgressBar: android.graphics.drawable.Drawable getProgressDrawable()>
SOURCE|<com.google.common.collect.MapMakerInternalMap$StrongValueReference: java.lang.Object get()>
SOURCE|<com.android.i18n.phonenumbers.Phonemetadata$NumberFormat: java.lang.String getLeadingDigitsPattern(int)>
SOURCE|<java.util.concurrent.ThreadPoolExecutor: java.util.List shutdownNow()>
SOURCE|<com.android.contacts.util.ExpirableCache$GenerationalCachedValue: java.lang.Object getValue()>
SOURCE|<org.apache.harmony.security.asn1.ASN1Type: java.lang.Object decode(java.io.InputStream)>
SOURCE|<gov.nist.javax.sip.header.extensions.References: java.lang.String getRel()>
SOURCE|<android.graphics.Bitmap: int getHeight()>
SOURCE|<java.time.chrono.HijrahChronology: int[] parseMonths(java.lang.String)>
SOURCE|<com.android.emailcommon.internet.MimeMultipart: java.lang.String getContentType()>
SOURCE|<com.android.mms.data.Contact: java.lang.String getNameAndNumber()>
SOURCE|<com.android.internal.policy.impl.keyguard.KeyguardPasswordView: int getWrongPasswordStringId()>
SOURCE|<org.apache.http.message.BufferedHeader: org.apache.http.util.CharArrayBuffer getBuffer()>
SOURCE|<android.app.PendingIntent: int getCreatorUid()>
SOURCE|<com.android.browser.view.BookmarkExpandableView: com.android.browser.BreadCrumbView getBreadCrumbs(int)>
SOURCE|<android.nfc.tech.NfcF: int getMaxTransceiveLength()>
SOURCE|<android.widget.ListView: android.widget.ListAdapter getAdapter()>
SOURCE|<com.android.server.location.LocationProviderProxy: long getStatusUpdateTime()>
SOURCE|<android.webkit.WebSettingsClassic$AutoFillProfile: java.lang.String getCountry()>
SOURCE|<android.graphics.drawable.LayerDrawable: android.graphics.drawable.Drawable getDrawable(int)>
SOURCE|<android.hardware.usb.IUsbManager$Stub$Proxy: android.os.ParcelFileDescriptor openAccessory(android.hardware.usb.UsbAccessory)>
SOURCE|<java.time.ZonedDateTime: int getHour()>
SOURCE|<java.util.Hashtable$HashtableEntry: java.lang.Object getValue()>
SOURCE|<android.widget.CursorAdapter: android.view.View getDropDownView(int,android.view.View,android.view.ViewGroup)>
SOURCE|<com.android.internal.widget.ActionBarContextView: java.lang.CharSequence getTitle()>
SOURCE|<com.android.deskclock.AlarmClock$AlarmItemAdapter: int[] getSelectedAlarmsArray()>
SOURCE|<android.media.videoeditor.MediaVideoItem: int getAudioType()>
SOURCE|<com.google.common.collect.AbstractMultimap$WrappedCollection$WrappedIterator: java.util.Iterator getDelegateIterator()>
SOURCE|<com.android.server.MountService: int getEncryptionState()>
SOURCE|<com.android.launcher2.LauncherModel: int getCellLayoutChildId(long,int,int,int,int,int)>
SOURCE|<com.android.email.activity.MailboxMoveToAdapter$MailboxMoveToLoader: android.database.Cursor loadInBackground()>
SOURCE|<android.net.ConnectivityManager: boolean getMobileDataEnabled()>
SOURCE|<com.google.common.collect.MapMaker: com.google.common.collect.MapMakerInternalMap$Strength getKeyStrength()>
SOURCE|<org.apache.harmony.xnet.provider.jsse.SSLServerSocketImpl: boolean getEnableSessionCreation()>
SOURCE|<org.apache.james.mime4j.field.address.parser.TokenMgrError: java.lang.String getMessage()>
SOURCE|<com.android.camera.Util: int getDisplayOrientation(int,int)>
SOURCE|<com.android.contacts.group.GroupBrowseListAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)>
SOURCE|<com.android.browser.provider.BrowserProvider$MySuggestionCursor: int getInt(int)>
SOURCE|<com.google.android.picasasync.UploadTaskEntry: java.lang.String getRequestTemplate()>
SOURCE|<android.app.admin.IDevicePolicyManager$Stub$Proxy: int getPasswordMinimumNonLetter(android.content.ComponentName,int)>
SOURCE|<com.android.internal.widget.multiwaveview.TargetDrawable: float getY()>
SOURCE|<com.android.server.pm.PackageManagerService: android.content.pm.ParceledListSlice getInstalledPackages(int,java.lang.String,int)>
SOURCE|<java.lang.BootClassLoader: java.util.Enumeration getResources(java.lang.String)>
SOURCE|<com.google.common.collect.Multimaps$FilteredMultimap: java.util.Collection get(java.lang.Object)>
SOURCE|<com.android.gallery3d.filtershow.imageshow.ImageGeometry: android.graphics.RectF straightenBounds()>
SOURCE|<com.coremedia.iso.boxes.fragment.TrackFragmentHeaderBox: long getContentSize()>
SOURCE|<java.security.spec.DSAPublicKeySpec: java.math.BigInteger getP()>
SOURCE|<android.widget.ArrayAdapter: android.widget.Filter getFilter()>
SOURCE|<com.android.internal.util.StateMachine: com.android.internal.util.IState getCurrentState()>
SOURCE|<com.google.common.collect.ImmutableSortedMap: com.google.common.collect.ImmutableSet entrySet()>
SOURCE|<gov.nist.javax.sip.header.SIPHeaderList: java.lang.Object[] toArray()>
SOURCE|<com.google.common.collect.BstNodeFactory: com.google.common.collect.BstNode createLeaf(com.google.common.collect.BstNode)>
SOURCE|<android.content.SyncStorageEngine: int getPendingOperationCount()>
SOURCE|<gov.nist.javax.sip.stack.SIPTransactionStack: gov.nist.javax.sip.stack.MessageChannel createRawMessageChannel(java.lang.String,int,javax.sip.address.Hop)>
SOURCE|<android.view.Window: android.content.res.TypedArray getWindowStyle()>
SOURCE|<android.view.TextureView: android.graphics.Bitmap getBitmap()>
SOURCE|<android.media.audiofx.PresetReverb: short getPreset()>
SOURCE|<com.coremedia.iso.boxes.DataReferenceBox: long getContentSize()>
SOURCE|<android.net.Uri$Builder: android.net.Uri$Builder encodedQuery(java.lang.String)>
SOURCE|<android.preference.PreferenceManager: android.preference.PreferenceScreen getPreferenceScreen()>
SOURCE|<android.os.Bundle: java.lang.CharSequence getCharSequence(java.lang.String)>
SOURCE|<com.android.nfc.snep.SnepMessage: byte getField()>
SOURCE|<com.android.contacts.editor.ContactEditorUtils: com.android.contacts.model.account.AccountWithDataSet getCreatedAccount(int,android.content.Intent)>
SOURCE|<com.coremedia.iso.boxes.SampleDependencyTypeBox: long getContentSize()>
SOURCE|<com.google.android.mms.pdu.PduPart: byte[] getContentDisposition()>
SOURCE|<com.google.common.collect.ForwardingCollection: java.lang.String standardToString()>
SOURCE|<android.filterfw.core.NativeFrame: int getCapacity()>
SOURCE|<com.android.internal.telephony.gsm.GSMPhone: void getCallForwardingOption(int,android.os.Message)>
SOURCE|<com.android.browser.Tab: android.net.http.SslError getSslCertificateError()>
SOURCE|<com.google.android.mms.pdu.PduHeaders: long getLongInteger(int)>
SOURCE|<com.android.internal.telephony.sip.SipPhone: java.lang.String getImei()>
SOURCE|<java.lang.reflect.Parameter: java.lang.'annotation'.Annotation[] getDeclaredAnnotations()>
SOURCE|<java.nio.IntArrayBuffer: int get(int)>
SOURCE|<android.gesture.GestureOverlayView: int getUncertainGestureColor()>
SOURCE|<android.filterfw.core.Frame: int getBindingType()>
SOURCE|<android.net.Uri$HierarchicalUri: java.lang.String getScheme()>
SOURCE|<java.security.KeyFactory: java.security.spec.KeySpec getKeySpec(java.security.Key,java.lang.Class)>
SOURCE|<org.apache.harmony.security.x509.AlgorithmIdentifier: byte[] getEncoded()>
SOURCE|<com.android.mms.dom.NodeImpl: org.w3c.dom.NamedNodeMap getAttributes()>
SOURCE|<java.util.concurrent.LinkedBlockingDeque: java.lang.Object getLast()>
SOURCE|<com.android.camera.CameraHolder: int getNumberOfCameras()>
SOURCE|<java.text.AttributedString$AttributedIterator: java.util.Set getAllAttributeKeys()>
SOURCE|<java.lang.System: java.util.Properties getProperties()>
SOURCE|<com.google.common.collect.Multimaps$UnmodifiableMultimap: java.util.Collection get(java.lang.Object)>
SOURCE|<com.android.providers.contacts.ContactsProvider2: java.lang.ThreadLocal getTransactionHolder()>
SOURCE|<com.android.i18n.phonenumbers.CountryCodeToRegionCodeMap: java.util.Map getCountryCodeToRegionCodeMap()>
SOURCE|<java.util.Currency: java.lang.String getSymbol(java.util.Locale)>
SOURCE|<android.graphics.NinePatch: int getDensity()>
SOURCE|<com.android.contacts.model.RawContactDeltaList: java.util.ArrayList buildDiff()>
SOURCE|<android.os.SystemProperties: int getInt(java.lang.String,int)>
SOURCE|<android.database.sqlite.SQLiteCursor: android.database.sqlite.SQLiteDatabase getDatabase()>
SOURCE|<android.service.dreams.IDreamManager$Stub$Proxy: android.content.ComponentName[] getDreamComponents()>
SOURCE|<android.view.accessibility.AccessibilityManager: android.view.accessibility.AccessibilityManager getInstance(android.content.Context)>
SOURCE|<com.google.android.picasasync.PrefetchHelper: java.io.File getAlbumCover(long,java.lang.String)>
SOURCE|<java.util.Locale: java.lang.String getDisplayCountry(java.util.Locale)>
SOURCE|<android.app.admin.IDevicePolicyManager$Stub$Proxy: int getPasswordHistoryLength(android.content.ComponentName,int)>
SOURCE|<com.android.internal.telephony.cdma.CDMALTEPhone: void getSmscAddress(android.os.Message)>
SOURCE|<gov.nist.javax.sip.stack.SIPDialog: java.lang.Object getApplicationData()>
SOURCE|<android.provider.CallLog$Calls: java.lang.String getLastOutgoingCall(android.content.Context)>
SOURCE|<com.google.android.mms.ContentType: java.util.ArrayList getImageTypes()>
SOURCE|<com.android.contacts.model.dataitem.DataItem: com.android.contacts.model.dataitem.DataKind getDataKind()>
SOURCE|<android.telephony.TelephonyManager: int getDataState()>
SOURCE|<com.android.email.mail.store.imap.ImapResponse: com.android.email.mail.store.imap.ImapString getAlertTextOrEmpty()>
SOURCE|<org.apache.harmony.xnet.provider.jsse.AlertProtocol: byte getDescriptionCode()>
SOURCE|<android.test.mock.MockCursor: double getDouble(int)>
SOURCE|<com.android.browser.DateSortedExpandableListAdapter: java.lang.Object getGroup(int)>
SOURCE|<java.security.MessageDigest: java.lang.Object clone()>
SOURCE|<android.view.ViewRootImpl$ViewRootHandler: java.lang.String getMessageName(android.os.Message)>
SOURCE|<com.android.internal.os.BatteryStatsImpl$Uid: long getWifiMulticastTime(long,int)>
SOURCE|<android.animation.LayoutTransition: long getStartDelay(int)>
SOURCE|<android.content.ContextWrapper: java.lang.Object getSystemService(java.lang.String)>
SOURCE|<android.accounts.AccountManagerService: android.accounts.AccountAndUser[] getRunningAccounts()>
SOURCE|<android.view.ViewPropertyAnimator: long getStartDelay()>
SOURCE|<com.android.mms.ui.ComposeMessageActivity: com.android.mms.ui.AsyncDialog getAsyncDialog()>
SOURCE|<com.android.contacts.editor.EventFieldEditorView: com.android.contacts.model.account.AccountType$EditType getType()>
SOURCE|<com.android.internal.widget.multiwaveview.TargetDrawable: float getScaleY()>
SOURCE|<com.android.providers.telephony.MmsSmsProvider: java.lang.String getType(android.net.Uri)>
SOURCE|<android.view.View: android.view.ViewRootImpl getViewRootImpl()>
SOURCE|<android.test.mock.MockPackageManager: int getComponentEnabledSetting(android.content.ComponentName)>
SOURCE|<com.android.email.activity.setup.AccountSetupBasics$NoteDialogFragment: android.app.Dialog onCreateDialog(android.os.Bundle)>
SOURCE|<android.media.videoeditor.MediaVideoItem: int getAspectRatio()>
SOURCE|<android.content.res.TypedArray: java.lang.String getString(int)>
SOURCE|<android.content.ContextWrapper: java.io.File getCacheDir()>
SOURCE|<javax.sip.RequestEvent: javax.sip.Dialog getDialog()>
SOURCE|<com.android.gallery3d.data.LocalVideo: android.net.Uri getContentUri()>
SOURCE|<com.android.gallery3d.filtershow.cache.ImageLoader: int getZoomOrientation()>
SOURCE|<android.app.WallpaperManager$FastBitmapDrawable: int getMinimumWidth()>
SOURCE|<com.android.launcher2.FastBitmapDrawable: int getMinimumHeight()>
SOURCE|<android.location.Geocoder: java.util.List getFromLocationName(java.lang.String,int)>
SOURCE|<com.googlecode.mp4parser.authoring.TrackMetaData: float getVolume()>
SOURCE|<java.nio.CharArrayBuffer: char get()>
SOURCE|<android.support.v4.app.TaskStackBuilder$TaskStackBuilderImplHoneycomb: android.app.PendingIntent getPendingIntent(android.content.Context,android.content.Intent[],int,int,android.os.Bundle)>
SOURCE|<android.view.MotionEvent: void getPointerCoords(int,android.view.MotionEvent$PointerCoords)>
SOURCE|<java.net.InetAddress: java.net.InetAddress getByName(java.lang.String)>
SOURCE|<com.android.bluetooth.pan.PanService: int getConnectionState(android.bluetooth.BluetoothDevice)>
SOURCE|<com.android.internal.telephony.PhoneProxy: int getVoiceMessageCount()>
SOURCE|<android.view.KeyEvent: char getMatch(char[],int)>
SOURCE|<com.android.internal.policy.impl.keyguard.PagedView: int getViewportOffsetX()>
SOURCE|<gov.nist.javax.sip.stack.SIPTransaction: javax.sip.message.Request getRequest()>
SOURCE|<com.android.internal.telephony.UiccCardApplication: com.android.internal.telephony.IccFileHandler getIccFileHandler()>
SOURCE|<com.googlecode.mp4parser.authoring.Mp4TrackImpl: java.util.List getDecodingTimeEntries()>
SOURCE|<com.android.internal.telephony.GsmAlphabet: byte[] stringToGsm8BitPacked(java.lang.String)>
SOURCE|<com.google.android.gms.common.internal.GmsClient: android.os.IInterface getService()>
SOURCE|<android.view.accessibility.AccessibilityRecord: android.view.accessibility.AccessibilityNodeInfo getSource()>
SOURCE|<com.android.contacts.model.account.BaseAccountType: com.android.contacts.model.dataitem.DataKind addDataKindNote(android.content.Context)>
SOURCE|<com.android.browser.BrowserHistoryPage$HistoryGroupWrapper: long getItemId(int)>
SOURCE|<com.android.internal.content.PackageHelper: android.os.storage.IMountService getMountService()>
SOURCE|<com.android.emailcommon.internet.Rfc822Output: java.lang.String getHtmlAlternate(com.android.emailcommon.provider.EmailContent$Body,boolean)>
SOURCE|<org.apache.harmony.xnet.provider.jsse.SSLServerSocketImpl: boolean getNeedClientAuth()>
SOURCE|<com.android.server.NetworkManagementService: android.net.NetworkStats getNetworkStatsTethering(java.lang.String[])>
SOURCE|<com.google.common.collect.Lists$TransformingRandomAccessList: java.lang.Object get(int)>
SOURCE|<android.media.audiofx.EnvironmentalReverb: int getReflectionsDelay()>
SOURCE|<com.android.server.ConnectivityService: android.net.NetworkState[] getAllNetworkState()>
SOURCE|<android.preference.ListPreference: java.lang.CharSequence getSummary()>
SOURCE|<com.android.contacts.model.RawContactDelta$ValuesDelta: java.lang.Integer getAsInteger(java.lang.String)>
SOURCE|<android.telephony.TelephonyManager: java.lang.String getSimOperatorName()>
SOURCE|<com.android.internal.view.menu.MenuPopupHelper$MenuAdapter: int getCount()>
SOURCE|<com.android.internal.telephony.GsmAlphabet: byte[] stringToGsm7BitPackedWithHeader(java.lang.String,byte[],int,int)>
SOURCE|<com.android.common.contacts.BaseEmailAddressAdapter$DirectoryPartitionFilter: int getLimit()>
SOURCE|<android.content.res.Resources: int getDimensionPixelSize(int)>
SOURCE|<com.android.videoeditor.service.MovieOverlay: long getDuration()>
SOURCE|<javax.crypto.spec.OAEPParameterSpec: java.security.spec.AlgorithmParameterSpec getMGFParameters()>
SOURCE|<android.view.AccessibilityIterators$WordTextSegmentIterator: android.view.AccessibilityIterators$WordTextSegmentIterator getInstance(java.util.Locale)>
SOURCE|<java.util.prefs.NodeChangeEvent: java.util.prefs.Preferences getParent()>
SOURCE|<org.apache.harmony.security.x509.IssuingDistributionPoint: byte[] getEncoded()>
SOURCE|<com.android.internal.telephony.PhoneProxy: void getDataCallList(android.os.Message)>
SOURCE|<android.app.ApplicationPackageManager: java.util.List queryIntentActivitiesAsUser(android.content.Intent,int,int)>
SOURCE|<android.renderscript.Allocation: int getBytesSize()>
SOURCE|<com.android.server.wm.WindowManagerService: com.android.server.wm.WindowList getWindowListLocked(android.view.Display)>
SOURCE|<com.android.phone.CallNotifier: boolean getVoicePrivacyState()>
SOURCE|<com.android.gallery3d.app.AlbumSetDataLoader: com.android.gallery3d.data.MediaItem getCoverItem(int)>
SOURCE|<android.content.Intent: java.lang.String getDataString()>
SOURCE|<com.android.internal.telephony.gsm.SmsBroadcastConfigInfo: int getFromCodeScheme()>
SOURCE|<android.database.CursorWrapper: android.database.Cursor getWrappedCursor()>
SOURCE|<android.widget.VideoView: int getDuration()>
SOURCE|<java.util.concurrent.ForkJoinTask: java.lang.Object get(long,java.util.concurrent.TimeUnit)>
SOURCE|<org.apache.harmony.security.x509.DistributionPointName$1: java.lang.Object getObjectToEncode(java.lang.Object)>
SOURCE|<libcore.icu.NativeDecimalFormat: java.lang.String getPositiveSuffix()>
SOURCE|<com.android.contacts.model.RawContactDeltaList: com.android.contacts.model.RawContactDelta getByRawContactId(java.lang.Long)>
SOURCE|<com.android.internal.widget.multiwaveview.MultiWaveView: int getDirectionDescriptionsResourceId()>
SOURCE|<java.util.Properties: java.lang.String getProperty(java.lang.String)>
SOURCE|<com.android.internal.telephony.cdma.CdmaSubscriptionSourceManager: com.android.internal.telephony.cdma.CdmaSubscriptionSourceManager getInstance(android.content.Context,com.android.internal.telephony.CommandsInterface,android.os.Handler,int,java.lang.Object)>
SOURCE|<com.google.android.apps.lightcycle.opengl.Shader: int getUniform(int,java.lang.String)>
SOURCE|<javax.obex.ClientOperation: int getHeaderLength()>
SOURCE|<com.android.systemui.statusbar.phone.PhoneStatusBar: android.view.WindowManager$LayoutParams getSearchLayoutParams(android.view.ViewGroup$LayoutParams)>
SOURCE|<org.apache.harmony.luni.lang.reflect.ListOfTypes: java.lang.reflect.Type[] getResolvedTypes()>
SOURCE|<java.lang.ClassLoader: java.lang.Class findClass(java.lang.String)>
SOURCE|<com.android.inputmethod.latin.ImfUtils: java.lang.String getInputMethodIdOfThisIme(android.content.Context)>
SOURCE|<com.google.common.collect.MapMakerInternalMap$StrongValueReference: com.google.common.collect.MapMakerInternalMap$ReferenceEntry getEntry()>
SOURCE|<android.os.Bundle: android.os.IBinder getIBinder(java.lang.String)>
SOURCE|<org.apache.http.message.BasicHeader: java.lang.String getName()>
SOURCE|<android.text.style.SubscriptSpan: int getSpanTypeId()>
SOURCE|<java.time.chrono.JapaneseEra: java.lang.String getAbbreviation()>
SOURCE|<android.content.BroadcastReceiver: android.os.Bundle getResultExtras(boolean)>
SOURCE|<com.android.browser.BrowserSettings: int getTextZoom()>
SOURCE|<android.os.Bundle: java.util.ArrayList getCharSequenceArrayList(java.lang.String)>
SOURCE|<org.apache.harmony.security.x509.InvalidityDate: byte[] getEncoded()>
SOURCE|<com.android.internal.telephony.cdma.RuimRecords: byte[] access$102(com.android.internal.telephony.cdma.RuimRecords,byte[])>
SOURCE|<com.android.videoeditor.service.MovieMediaItem: int getAppRenderingMode()>
SOURCE|<com.google.android.apps.lightcycle.camera.CameraUtility: com.google.android.apps.lightcycle.util.Size getPhotoSize()>
SOURCE|<android.media.AudioManager: boolean isSpeechRecognitionActive()>
SOURCE|<com.android.server.connectivity.Tethering: int getLastTetherError(java.lang.String)>
SOURCE|<java.text.DecimalFormat: int getMaximumIntegerDigits()>
SOURCE|<android.filterfw.format.PrimitiveFormat: android.filterfw.core.MutableFrameFormat createDoubleFormat(int)>
SOURCE|<gov.nist.javax.sip.header.SIPHeader: java.lang.String toString()>
SOURCE|<com.android.gallery3d.ui.ResourceTexture: int getTextureWidth()>
SOURCE|<org.apache.http.protocol.HttpService: org.apache.http.params.HttpParams getParams()>
SOURCE|<android.text.method.TextKeyListener: int getInputType()>
SOURCE|<com.google.common.collect.TransformedImmutableList: java.lang.Object get(int)>
SOURCE|<java.nio.SocketChannelImpl: java.net.InetAddress getLocalAddress()>
SOURCE|<com.android.server.pm.UserManagerService: int getUserSerialNumber(int)>
SOURCE|<android.view.accessibility.AccessibilityNodeInfoCache: android.view.accessibility.AccessibilityNodeInfo get(long)>
SOURCE|<com.android.providers.contacts.LegacyApiSupport: java.lang.String getType(android.net.Uri)>
SOURCE|<com.google.common.collect.ForwardingMapEntry: java.lang.Object getKey()>
SOURCE|<com.android.server.WiredAccessoryManager$WiredAccessoryObserver$UEventInfo: java.lang.String getDevName()>
SOURCE|<gov.nist.core.LexerCore: java.lang.String getRest()>
SOURCE|<com.android.internal.statusbar.StatusBarIconList: int getViewIndex(int)>
SOURCE|<android.view.ViewGroup: android.view.View findViewByAccessibilityIdTraversal(int)>
SOURCE|<android.graphics.drawable.Drawable: android.graphics.drawable.Drawable$ConstantState getConstantState()>
SOURCE|<android.filterpacks.imageproc.ResizeFilter: android.filterfw.core.FrameFormat getOutputFormat(java.lang.String,android.filterfw.core.FrameFormat)>
SOURCE|<gov.nist.javax.sip.header.ErrorInfo: javax.sip.address.URI getErrorInfo()>
SOURCE|<android.media.AudioService$ScoClient: android.os.IBinder getBinder()>
SOURCE|<android.text.format.DateUtils: java.lang.CharSequence getRelativeTimeSpanString(android.content.Context,long,boolean)>
SOURCE|<com.google.common.collect.MapMakerInternalMap$AbstractReferenceEntry: long getExpirationTime()>
SOURCE|<android.view.LayoutInflater: android.view.LayoutInflater$Filter getFilter()>
SOURCE|<com.android.server.pm.UserManagerService: int[] getUserIdsLPr()>
SOURCE|<java.util.BitSet: boolean get(int)>
SOURCE|<com.android.server.pm.PackageManagerService$FileInstallArgs: boolean doRename(int,java.lang.String,java.lang.String)>
SOURCE|<com.android.org.bouncycastle.asn1.DERGeneralizedTime: java.lang.String getTime()>
SOURCE|<android.animation.ObjectAnimator: java.lang.String getPropertyName()>
SOURCE|<android.net.sip.SipAudioCall: android.net.sip.SimpleSessionDescription access$400(android.net.sip.SipAudioCall,java.lang.String)>
SOURCE|<android.os.Environment: java.io.File getExternalStoragePublicDirectory(java.lang.String)>
SOURCE|<java.util.Date: int getDate()>
SOURCE|<java.net.Authenticator: int getRequestingPort()>
SOURCE|<java.security.cert.CertPathValidator: java.lang.String getAlgorithm()>
SOURCE|<libcore.net.http.HttpsURLConnectionImpl: java.lang.String getRequestMethod()>
SOURCE|<android.net.BaseNetworkStateTracker: android.net.LinkProperties getLinkProperties()>
SOURCE|<android.provider.BrowserContract$SyncState: android.util.Pair getWithUri(android.content.ContentProviderClient,android.accounts.Account)>
SOURCE|<java.net.URI: java.lang.String getRawAuthority()>
SOURCE|<android.content.pm.ApplicationInfo: java.lang.CharSequence loadDescription(android.content.pm.PackageManager)>
SOURCE|<android.renderscript.Matrix4f: float get(int,int)>
SOURCE|<android.net.Uri$StringUri: android.net.Uri$Builder buildUpon()>
SOURCE|<android.webkit.WebViewClassic: int getContentWidth()>
SOURCE|<android.text.Layout: int getWidth()>
SOURCE|<com.android.musicfx.ControlPanelEffect: int getParameterInt(android.content.Context,java.lang.String,int,com.android.musicfx.ControlPanelEffect$Key)>
SOURCE|<android.view.inputmethod.InputMethodManager: com.android.internal.view.IInputMethodClient getClient()>
SOURCE|<com.android.providers.contacts.ProfileDatabaseHelper: com.android.providers.contacts.ProfileDatabaseHelper getNewInstanceForTest(android.content.Context)>
SOURCE|<com.google.android.mms.pdu.PduPart: byte[] getContentId()>
SOURCE|<com.android.providers.contacts.aggregation.ContactAggregator: android.database.Cursor queryAggregationSuggestions(android.database.sqlite.SQLiteQueryBuilder,java.lang.String[],long,int,java.lang.String,java.util.ArrayList)>
SOURCE|<android.media.IAudioService$Stub$Proxy: boolean isStreamMute(int)>
SOURCE|<com.google.common.collect.MapMakerInternalMap$EvictionQueue$1: com.google.common.collect.MapMakerInternalMap$ReferenceEntry getNextEvictable()>
SOURCE|<java.text.DateFormatSymbols: java.text.DateFormatSymbols getInstance()>
SOURCE|<android.bluetooth.BluetoothClass: int getMajorDeviceClass()>
SOURCE|<java.util.Locale: java.lang.String getISO3Country()>
SOURCE|<com.android.providers.contacts.NameSplitter: int getAdjustedFullNameStyle(int)>
SOURCE|<com.android.contacts.list.ProviderStatusWatcher: com.android.contacts.list.ProviderStatusWatcher$Status getProviderStatus()>
SOURCE|<com.google.common.collect.AbstractMultiset: java.util.Set createElementSet()>
SOURCE|<android.content.res.Resources: java.lang.String getResourceName(int)>
SOURCE|<com.android.contacts.interactions.TestLoaderManager: android.content.Loader initLoader(int,android.os.Bundle,android.app.LoaderManager$LoaderCallbacks)>
SOURCE|<android.app.IProcessObserver$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
SOURCE|<com.android.server.net.NetworkStatsRecorder: android.net.NetworkStats$Entry getTotalSinceBootLocked(android.net.NetworkTemplate)>
SOURCE|<org.apache.http.impl.client.EntityEnclosingRequestWrapper: org.apache.http.HttpEntity getEntity()>
SOURCE|<com.android.commands.monkey.MonkeySourceScript: com.android.commands.monkey.MonkeyEvent getNextEvent()>
SOURCE|<android.widget.BaseExpandableListAdapter: int getChildType(int,int)>
SOURCE|<android.filterfw.core.Filter: android.filterfw.core.InputPort getInputPort(java.lang.String)>
SOURCE|<com.android.internal.backup.IBackupTransport$Stub: android.os.IBinder asBinder()>
SOURCE|<com.android.contacts.list.ContactListItemView: android.widget.TextView getNameTextView()>
SOURCE|<com.android.providers.contacts.ContactsDatabaseHelper: long getMimeTypeIdForSip()>
SOURCE|<android.text.Layout: int getLineBottom(int)>
SOURCE|<com.android.providers.contacts.ReorderingCursorWrapper: java.lang.String getString(int)>
SOURCE|<org.apache.harmony.xml.dom.AttrImpl: java.lang.String getNodeName()>
SOURCE|<java.text.AttributedCharacterIterator$Attribute: java.lang.String getName()>
SOURCE|<com.coremedia.iso.boxes.fragment.TrackExtendsBox: long getDefaultSampleDuration()>
SOURCE|<com.android.server.display.DisplayManagerService: int[] getDisplayIds()>
SOURCE|<java.io.DataInputStream: char readChar()>
SOURCE|<javax.crypto.spec.RC5ParameterSpec: int getVersion()>
SOURCE|<org.apache.harmony.xnet.provider.jsse.CipherSuite: int getMACLength()>
SOURCE|<com.android.mms.transaction.DefaultRetryScheme: int getRetryLimit()>
SOURCE|<com.android.browser.DateSortedExpandableListAdapter: android.view.View getGroupView(int,boolean,android.view.View,android.view.ViewGroup)>
SOURCE|<com.adobe.xmp.options.SerializeOptions: boolean getSort()>
SOURCE|<android.view.MotionEvent: float getPressure(int)>
SOURCE|<com.android.commands.monkey.MonkeySourceNetworkVars$9: java.lang.String get()>
SOURCE|<android.bluetooth.IBluetoothHeadset$Stub$Proxy: int getPriority(android.bluetooth.BluetoothDevice)>
SOURCE|<android.inputmethodservice.AbstractInputMethodService: android.view.KeyEvent$DispatcherState getKeyDispatcherState()>
SOURCE|<android.content.ContextWrapper: android.graphics.drawable.Drawable getWallpaper()>
SOURCE|<com.google.common.collect.AbstractMultimap: java.util.Map backingMap()>
SOURCE|<android.media.AudioRecord: int getNotificationMarkerPosition()>
SOURCE|<android.mtp.MtpDeviceInfo: java.lang.String getManufacturer()>
SOURCE|<org.apache.harmony.security.asn1.ASN1Type: java.lang.Object decode(byte[])>
SOURCE|<android.webkit.ZoomManager: float getMaxZoomScale()>
SOURCE|<com.android.browser.BrowserHistoryPage$HistoryChildWrapper: android.view.View getView(int,android.view.View,android.view.ViewGroup)>
SOURCE|<java.lang.reflect.Constructor: java.lang.annotation.Annotation[] getDeclaredAnnotations()>
SOURCE|<java.lang.reflect.AccessibleObject: java.lang.annotation.Annotation[] getDeclaredAnnotations()>
SOURCE|<android.telephony.PhoneNumberUtils: byte[] networkPortionToCalledPartyBCDWithLength(java.lang.String)>
SOURCE|<gov.nist.javax.sip.stack.SIPTransactionStack: gov.nist.core.ServerLogger getServerLogger()>
SOURCE|<org.apache.harmony.security.asn1.ASN1ValueCollection: java.util.Collection getValues(java.lang.Object)>
SOURCE|<com.google.common.collect.Multimaps$FilteredMultimap: java.util.Map asMap()>
SOURCE|<com.android.emailcommon.TempDirectory: java.io.File getTempDirectory()>
SOURCE|<libcore.icu.TimeZones: java.lang.String[][] getZoneStrings(java.util.Locale)>
SOURCE|<com.google.android.picasasync.SyncTask: java.lang.String toString()>
SOURCE|<java.util.concurrent.locks.AbstractQueuedSynchronizer: java.lang.String toString()>
SOURCE|<com.google.android.apps.lightcycle.camera.TextureCameraPreview: float getReportedHorizontalFovDegrees()>
SOURCE|<android.widget.AdapterView: long getSelectedItemId()>
SOURCE|<com.android.gallery3d.filtershow.imageshow.GeometryMetadata: android.graphics.RectF getPhotoBounds()>
SOURCE|<com.android.browser.view.PieItem: float getStartAngle()>
SOURCE|<org.apache.http.entity.StringEntity: long getContentLength()>
SOURCE|<android.webkit.WebSettings: int getDefaultFontSize()>
SOURCE|<com.android.gallery3d.data.Path: com.android.gallery3d.data.Path getChild(int)>
SOURCE|<gov.nist.javax.sip.message.SIPMessage: java.lang.Object getApplicationData()>
SOURCE|<android.text.style.ImageSpan: android.graphics.drawable.Drawable getDrawable()>
SOURCE|<android.os.Bundle: float getFloat(java.lang.String)>
SOURCE|<java.nio.DirectByteBuffer: char getChar()>
SOURCE|<com.android.gallery3d.ui.BasicTexture: int getId()>
SOURCE|<android.filterfw.core.FrameFormat: java.lang.Class getObjectClass()>
SOURCE|<android.net.http.RequestQueue$ActivePool: android.net.http.ConnectionThread getThread(org.apache.http.HttpHost)>
SOURCE|<com.android.contacts.group.SuggestedMemberListAdapter$SuggestedMember: java.lang.String getDisplayName()>
SOURCE|<com.android.gallery3d.ui.BitmapTileProvider: com.android.gallery3d.ui.ScreenNail getScreenNail()>
SOURCE|<org.apache.http.impl.conn.SingleClientConnManager: org.apache.http.conn.ManagedClientConnection getConnection(org.apache.http.conn.routing.HttpRoute,java.lang.Object)>
SOURCE|<android.view.ViewRootImpl: int getHostVisibility()>
SOURCE|<com.android.server.pm.PackageManagerService: int getComponentEnabledSetting(android.content.ComponentName,int)>
SOURCE|<org.apache.http.impl.conn.tsccm.RouteSpecificPool: int getMaxEntries()>
SOURCE|<android.graphics.Bitmap: int getByteCount()>
SOURCE|<com.android.providers.contacts.CallLogProvider: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>
SOURCE|<com.google.common.base.CharMatcher: com.google.common.base.CharMatcher precomputedInternal()>
SOURCE|<com.android.internal.telephony.PhoneProxy: int getLteOnCdmaMode()>
SOURCE|<com.android.browser.Preloader: com.android.browser.PreloadedTabControl getPreloadedTab(java.lang.String)>
SOURCE|<android.accounts.IAccountManager$Stub: android.os.IBinder asBinder()>
SOURCE|<com.android.server.am.ActivityManagerService: java.lang.String getPackageForIntentSender(android.content.IIntentSender)>
SOURCE|<com.android.gallery3d.data.LocationClustering: java.util.ArrayList getCluster(int)>
SOURCE|<java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String,java.security.Provider)>
SOURCE|<android.gesture.GestureOverlayView: int getOrientation()>
SOURCE|<com.android.server.BackupManagerService: long getAvailableRestoreToken(java.lang.String)>
SOURCE|<android.animation.LayoutTransition: long getDuration(int)>
SOURCE|<com.android.i18n.phonenumbers.RegexCache$LRUCache: java.lang.Object get(java.lang.Object)>
SOURCE|<android.view.View: float getAlpha()>
SOURCE|<com.android.ex.chips.BaseRecipientAdapter: java.util.List access$900(com.android.ex.chips.BaseRecipientAdapter)>
SOURCE|<android.graphics.Bitmap: android.graphics.Bitmap$Config getConfig()>
SOURCE|<android.telephony.SmsMessage: java.lang.String getEmailBody()>
SOURCE|<android.text.SpannableStringBuilder: int getTextRunCursor(int,int,int,int,int,android.graphics.Paint)>
SOURCE|<com.android.emailcommon.mail.PackedString$Builder: java.lang.String get(java.lang.String)>
SOURCE|<java.util.concurrent.locks.ReentrantLock: int getWaitQueueLength(java.util.concurrent.locks.Condition)>
SOURCE|<android.webkit.WebHistoryItemClassic: java.lang.String getTouchIconUrl()>
SOURCE|<gov.nist.javax.sip.message.SIPMessage: javax.sip.header.ContentLengthHeader getContentLength()>
SOURCE|<java.lang.reflect.Array: float getFloat(java.lang.Object,int)>
SOURCE|<org.apache.harmony.security.asn1.ASN1OctetString: org.apache.harmony.security.asn1.ASN1OctetString getInstance()>
SOURCE|<gov.nist.javax.sip.message.SIPMessage: java.lang.String encode()>
SOURCE|<gov.nist.javax.sip.stack.IOHandler: java.net.Socket getSocket(java.lang.String)>
SOURCE|<com.android.mms.dom.smil.SmilRegionElementImpl: int getHeight()>
SOURCE|<android.telephony.PhoneNumberUtils: java.lang.String getNumberFromIntent(android.content.Intent,android.content.Context)>
SOURCE|<android.os.INetworkManagementService$Stub$Proxy: int getInterfaceRxThrottle(java.lang.String)>
SOURCE|<org.apache.harmony.xml.dom.DOMErrorImpl: java.lang.Object getRelatedData()>
SOURCE|<java.io.SerializablePermission: java.lang.String getActions()>
SOURCE|<android.webkit.WebViewClassic: java.lang.String getUrl()>
SOURCE|<com.android.contacts.list.ContactListAdapter: long getSelectedContactId()>
SOURCE|<com.android.email.Controller: java.util.Collection getResultCallbacksForTest()>
SOURCE|<android.test.ServiceTestCase: android.app.Application getApplication()>
SOURCE|<android.security.KeyStore: byte[] getPubkey(java.lang.String)>
SOURCE|<android.net.sip.ISipService$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
SOURCE|<com.android.contacts.ContactPhotoManager: int getDefaultAvatarResId(boolean,boolean)>
SOURCE|<gov.nist.javax.sip.header.HeaderFactoryImpl: javax.sip.header.TimeStampHeader createTimeStampHeader(float)>
SOURCE|<android.content.pm.IPackageManager$Stub: android.os.IBinder asBinder()>
SOURCE|<com.android.org.bouncycastle.asn1.DERGeneralizedTime: com.android.org.bouncycastle.asn1.ASN1GeneralizedTime getInstance(java.lang.Object)>
SOURCE|<com.android.internal.telephony.IccRecords: java.lang.String getVoiceMailAlphaTag()>
SOURCE|<libcore.io.IoBridge: int getSocketLocalPort(java.io.FileDescriptor)>
SOURCE|<java.text.ParseException: int getErrorOffset()>
SOURCE|<gov.nist.javax.sip.header.Challenge: java.lang.String getSignedBy()>
SOURCE|<com.android.gallery3d.filtershow.cache.ImageLoader: android.graphics.Bitmap getImageForPreset(com.android.gallery3d.filtershow.imageshow.ImageShow,com.android.gallery3d.filtershow.presets.ImagePreset,boolean)>
SOURCE|<android.widget.Switch: android.graphics.drawable.Drawable getTrackDrawable()>
SOURCE|<java.net.URLConnection: long getExpiration()>
SOURCE|<com.android.mms.ui.MessageListItem$5: android.view.View getView(int,android.view.View,android.view.ViewGroup)>
SOURCE|<android.renderscript.Allocation: android.renderscript.Allocation createSized(android.renderscript.RenderScript,android.renderscript.Element,int)>
SOURCE|<com.android.contacts.list.JoinContactListFragment: com.android.contacts.list.ContactEntryListAdapter createListAdapter()>
SOURCE|<org.apache.harmony.luni.lang.reflect.GenericSignatureParser: org.apache.harmony.luni.lang.reflect.ImplForVariable parseTypeVariableSignature()>
SOURCE|<android.webkit.AccessibilityInjectorFallback$AccessibilityWebContentKeyBinding: int getSecondArgument(int)>
SOURCE|<javax.net.ssl.DefaultSSLServerSocketFactory: java.lang.String[] getSupportedCipherSuites()>
SOURCE|<android.widget.PopupWindow: int getHeight()>
SOURCE|<com.adobe.xmp.options.AliasOptions: int getValidOptions()>
SOURCE|<java.nio.charset.CharsetDecoder: java.lang.String replacement()>
SOURCE|<com.android.mms.MmsApp: android.telephony.TelephonyManager getTelephonyManager()>
SOURCE|<android.text.method.TextKeyListener: android.text.method.TextKeyListener getInstance(boolean,android.text.method.TextKeyListener$Capitalize)>
SOURCE|<com.android.videoeditor.BaseAdapterWithImages: java.util.List access$100(com.android.videoeditor.BaseAdapterWithImages)>
SOURCE|<com.android.inputmethod.keyboard.PointerTracker: com.android.inputmethod.keyboard.Key getKeyOn(int,int)>
SOURCE|<com.google.android.mms.pdu.PduParser: com.google.android.mms.pdu.PduHeaders parseHeaders(java.io.ByteArrayInputStream)>
SOURCE|<com.android.contacts.detail.ContactDetailFragment$ViewAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)>
SOURCE|<com.android.mms.ui.MessageListAdapter: int getItemViewType(int)>
SOURCE|<org.apache.harmony.xml.ExpatParser$ClonedAttributes: int getPointer()>
SOURCE|<android.gesture.GestureOverlayView: long getFadeOffset()>
SOURCE|<java.util.concurrent.ForkJoinPool: java.lang.Thread$UncaughtExceptionHandler getUncaughtExceptionHandler()>
SOURCE|<com.android.exchange.EasSyncService: android.os.Bundle tryAutodiscover(java.lang.String,java.lang.String)>
SOURCE|<android.widget.Spinner$DropDownAdapter: java.lang.Object getItem(int)>
SOURCE|<java.lang.String: byte[] getBytes(java.nio.charset.Charset)>
SOURCE|<com.android.internal.os.BatteryStatsImpl$Uid$Proc: com.android.internal.os.BatteryStatsImpl getBatteryStats()>
SOURCE|<android.media.MediaPlayer: android.media.MediaPlayer create(android.content.Context,android.net.Uri)>
SOURCE|<com.android.server.am.ActivityRecord$Token: long getKeyDispatchingTimeout()>
SOURCE|<org.apache.http.impl.AbstractHttpClientConnection: org.apache.http.HttpResponseFactory createHttpResponseFactory()>
SOURCE|<android.telephony.SmsMessage: java.lang.String getOriginatingAddress()>
SOURCE|<android.view.Display: int getPixelFormat()>
SOURCE|<com.google.common.io.ByteStreams$1: java.io.ByteArrayInputStream getInput()>
SOURCE|<com.android.emailcommon.provider.HostAuth: com.android.emailcommon.provider.HostAuth restoreHostAuthWithId(android.content.Context,long)>
SOURCE|<com.google.common.collect.SortedMultisets$DescendingMultiset: java.util.Set createEntrySet()>
SOURCE|<android.widget.ListView: int getDividerHeight()>
SOURCE|<org.apache.http.impl.client.AbstractAuthenticationHandler: java.util.List getAuthPreferences(org.apache.http.HttpResponse,org.apache.http.protocol.HttpContext)>
SOURCE|<android.bluetooth.IBluetoothA2dp$Stub$Proxy: int getConnectionState(android.bluetooth.BluetoothDevice)>
SOURCE|<android.gesture.GestureOverlayView: java.util.ArrayList getCurrentStroke()>
SOURCE|<java.time.Instant: long getEpochSecond()>
SOURCE|<org.apache.harmony.xml.ExpatParser$ExpatLocator: int getLineNumber()>
SOURCE|<android.media.videoeditor.MediaArtistNativeHelper: int getMediaItemRenderingMode(int)>
SOURCE|<android.widget.Editor$SuggestionsPopupWindow: int getTextOffset()>
SOURCE|<gov.nist.javax.sip.address.UserInfo: java.lang.String getPassword()>
SOURCE|<android.view.KeyEvent: int getFlags()>
SOURCE|<com.android.bluetooth.hid.HidService: java.util.List getDevicesMatchingConnectionStates(int[])>
SOURCE|<com.android.videoeditor.service.MovieTransition: int getAlphaMaskResId()>
SOURCE|<android.test.InstrumentationTestCase: android.app.Instrumentation getInstrumentation()>
SOURCE|<android.preference.VolumePreference$SavedState: android.preference.VolumePreference$VolumeStore getVolumeStore()>
SOURCE|<android.hardware.GeomagneticField: float getFieldStrength()>
SOURCE|<java.util.concurrent.CopyOnWriteArrayList: java.lang.Object get(int)>
SOURCE|<com.android.gallery3d.picasasource.PicasaSource: com.android.gallery3d.data.Path getDefaultSetOf(com.android.gallery3d.data.Path)>
SOURCE|<com.android.contacts.quickcontact.ResolveCache: com.android.contacts.quickcontact.ResolveCache$Entry getEntry(com.android.contacts.quickcontact.Action)>
SOURCE|<java.nio.charset.CharsetDecoder: java.nio.charset.CodingErrorAction malformedInputAction()>
SOURCE|<com.android.deskclock.worldclock.CitiesActivity$CityAdapter: int getCount()>
SOURCE|<java.io.File: java.io.File getParentFile()>
SOURCE|<com.google.common.collect.Lists$TwoPlusArrayList: java.lang.Object get(int)>
SOURCE|<com.android.gallery3d.ui.PhotoView$FullPicture: com.android.gallery3d.ui.PhotoView$Size getSize()>
SOURCE|<com.android.server.BackupManagerService$PerformFullRestoreTask$RestoreInstallObserver: int getResult()>
SOURCE|<com.android.calendar.agenda.AgendaByDayAdapter: long getInstanceId(int)>
SOURCE|<com.android.launcher2.LauncherModel: java.util.ArrayList getItemsInLocalCoordinates(android.content.Context)>
SOURCE|<com.android.server.pm.PackageManagerService: android.content.pm.PermissionGroupInfo getPermissionGroupInfo(java.lang.String,int)>
SOURCE|<javax.net.ssl.SSLEngine: javax.net.ssl.SSLEngineResult wrap(java.nio.ByteBuffer[],java.nio.ByteBuffer)>
SOURCE|<android.database.sqlite.SQLiteProgram: int getConnectionFlags()>
SOURCE|<android.hardware.Camera$Parameters: android.hardware.Camera$Size getJpegThumbnailSize()>
SOURCE|<javax.crypto.spec.DHParameterSpec: java.math.BigInteger getP()>
SOURCE|<com.android.videoeditor.service.MovieTransition: int getAlphaMaskBlendingPercent()>
SOURCE|<android.filterpacks.imageproc.BlendFilter: android.filterfw.core.Program getNativeProgram(android.filterfw.core.FilterContext)>
SOURCE|<org.apache.http.impl.cookie.BasicClientCookie2: java.lang.String getCommentURL()>
SOURCE|<com.android.server.pm.PackageManagerService: android.content.pm.ActivityInfo getActivityInfo(android.content.ComponentName,int,int)>
SOURCE|<android.media.videoeditor.Transition: android.media.videoeditor.MediaItem getBeforeMediaItem()>
SOURCE|<com.android.deskclock.worldclock.CitiesActivity$CityAdapter: long getItemId(int)>
SOURCE|<java.security.PKCS12Attribute: java.lang.String getValue()>
SOURCE|<com.google.android.mms.pdu.NotificationInd: long getMessageSize()>
SOURCE|<android.telephony.SignalStrength: int getCdmaAsuLevel()>
SOURCE|<com.android.videoeditor.service.MovieOverlay: long getAppDuration()>
SOURCE|<java.util.concurrent.locks.ReentrantReadWriteLock: int getQueueLength()>
SOURCE|<android.bluetooth.BluetoothPan: java.util.List getDevicesMatchingConnectionStates(int[])>
SOURCE|<com.android.launcher2.LauncherViewPropertyAnimator: java.util.ArrayList getListeners()>
SOURCE|<android.view.InputDevice: java.util.List getMotionRanges()>
SOURCE|<java.security.ProtectionDomain: java.security.Principal[] getPrincipals()>
SOURCE|<org.apache.harmony.security.x509.Extension$1: java.lang.Object getDecodedObject(org.apache.harmony.security.asn1.BerInputStream)>
SOURCE|<com.google.android.mms.pdu.PduPersister: com.google.android.mms.pdu.PduPersister getPduPersister(android.content.Context)>
SOURCE|<com.android.browser.Tab: android.view.View getSubViewContainer()>
SOURCE|<com.android.camera.ActivityBase: com.android.gallery3d.app.GalleryActionBar getGalleryActionBar()>
SOURCE|<android.view.View: android.view.accessibility.AccessibilityNodeProvider getAccessibilityNodeProvider()>
SOURCE|<android.widget.AutoCompleteTextView: android.widget.AdapterView$OnItemSelectedListener getItemSelectedListener()>
SOURCE|<com.android.browser.NavTabScroller: int getScrollValue()>
SOURCE|<android.app.ContextImpl: java.lang.ClassLoader getClassLoader()>
SOURCE|<gov.nist.javax.sip.header.AuthenticationInfo: java.lang.String getQop()>
SOURCE|<gov.nist.javax.sip.message.SIPMessage: javax.sip.header.FromHeader getFrom()>
SOURCE|<com.android.org.bouncycastle.util.encoders.Base64: byte[] encode(byte[])>
SOURCE|<android.view.View: android.view.IWindowSession getWindowSession()>
SOURCE|<android.app.Activity: java.util.HashMap getLastNonConfigurationChildInstances()>
SOURCE|<com.android.server.InputMethodManagerService: java.util.List getEnabledInputMethodList()>
SOURCE|<com.android.server.net.NetworkPolicyManagerService: boolean getRestrictBackground()>
SOURCE|<com.android.email.activity.MailboxFragmentAdapter: long getAccountId(int)>
SOURCE|<android.filterpacks.imageproc.DuotoneFilter: android.filterfw.core.FrameFormat getOutputFormat(java.lang.String,android.filterfw.core.FrameFormat)>
SOURCE|<android.os.storage.StorageManager: android.os.storage.StorageVolume getPrimaryVolume(android.os.storage.StorageVolume[])>
SOURCE|<com.android.vcard.VCardParserImpl_V21: java.util.Set getAvailableEncodingSet()>
SOURCE|<android.preference.Preference: android.graphics.drawable.Drawable getIcon()>
SOURCE|<java.nio.charset.CharsetEncoder: byte[] replacement()>
SOURCE|<java.text.DecimalFormatSymbols: char getGroupingSeparator()>
SOURCE|<android.view.accessibility.IAccessibilityManager$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
SOURCE|<com.android.gallery3d.picasasource.PicasaPostAlbum: java.lang.String getName()>
SOURCE|<com.android.systemui.recent.RecentsHorizontalScrollView: android.view.View getChildAtPosition(android.view.MotionEvent)>
SOURCE|<com.android.gallery3d.ui.NinePatchTexture: android.graphics.Rect getPaddings()>
SOURCE|<com.android.internal.telephony.ApnContext: com.android.internal.telephony.DctConstants$State getState()>
SOURCE|<com.android.internal.telephony.gsm.GsmConnection: com.android.internal.telephony.Connection$PostDialState getPostDialState()>
SOURCE|<java.util.EnumSet: java.util.EnumSet range(java.lang.Enum,java.lang.Enum)>
SOURCE|<com.android.gallery3d.ui.PreparePageFadeoutTexture: com.android.gallery3d.ui.RawTexture get()>
SOURCE|<java.sql.DriverManager: java.sql.Driver getDriver(java.lang.String)>
SOURCE|<com.android.server.InputMethodManagerService$InputMethodAndSubtypeListManager: com.android.server.InputMethodManagerService$ImeSubtypeListItem getNextInputMethod(boolean,android.view.inputmethod.InputMethodInfo,android.view.inputmethod.InputMethodSubtype)>
SOURCE|<javax.xml.transform.TransformerFactoryConfigurationError: java.lang.Exception getException()>
SOURCE|<android.content.Intent: byte[] getByteArrayExtra(java.lang.String)>
SOURCE|<org.apache.harmony.security.x509.GeneralName: int getTag()>
SOURCE|<android.test.mock.MockContext: android.content.pm.PackageManager getPackageManager()>
SOURCE|<com.android.exchange.EasResponse: int getLength()>
SOURCE|<javax.obex.ObexHelper: byte[] getTagValue(byte,byte[])>
SOURCE|<com.android.inputmethod.keyboard.Keyboard: com.android.inputmethod.keyboard.Key getKey(int)>
SOURCE|<java.net.ResponseCache: java.net.ResponseCache getDefault()>
SOURCE|<com.android.systemui.statusbar.phone.PanelView: float getExpandedHeight()>
SOURCE|<android.media.videoeditor.MediaArtistNativeHelper: android.media.videoeditor.MediaArtistNativeHelper$EffectSettings getOverlaySettings(android.media.videoeditor.OverlayFrame)>
SOURCE|<com.android.internal.view.menu.MenuBuilder: java.lang.String getActionViewStatesKey()>
SOURCE|<android.view.View: int getPaddingRight()>
SOURCE|<android.hardware.display.WifiDisplay: java.lang.String getFriendlyDisplayName()>
SOURCE|<com.coremedia.iso.boxes.DataEntryUrlBox: long getContentSize()>
SOURCE|<android.webkit.UrlInterceptRegistry: android.webkit.CacheManager$CacheResult getSurrogate(java.lang.String,java.util.Map)>
SOURCE|<java.io.EmulatedFieldsForLoading: java.lang.Object get(java.lang.String,java.lang.Object)>
SOURCE|<com.googlecode.mp4parser.authoring.TrackMetaData: int getLayer()>
SOURCE|<android.net.sip.SimpleSessionDescription: java.lang.String getAddress()>
SOURCE|<java.time.YearMonth: long getLong(java.time.temporal.TemporalField)>
SOURCE|<android.bluetooth.BluetoothPan: int getConnectionState(android.bluetooth.BluetoothDevice)>
SOURCE|<com.android.contacts.widget.PinnedHeaderListDemoActivity$TestPinnedHeaderListAdapter: android.view.View newHeaderView(android.content.Context,int,android.database.Cursor,android.view.ViewGroup)>
SOURCE|<android.database.MergeCursor: int getInt(int)>
SOURCE|<java.net.Socket: boolean getKeepAlive()>
SOURCE|<java.security.MessageDigestSpi: java.lang.Object clone()>
SOURCE|<org.apache.harmony.xnet.provider.jsse.SSLSocketWrapper: int getPort()>
SOURCE|<com.android.gallery3d.app.PhotoPage$MyDetailsSource: int setIndex()>
SOURCE|<org.apache.harmony.xnet.provider.jsse.OpenSSLSocketImpl: java.lang.String[] getSupportedCipherSuites()>
SOURCE|<gov.nist.core.GenericObject: java.lang.Class getClassFromName(java.lang.String)>
SOURCE|<com.coremedia.iso.boxes.TrackHeaderBox: int getAlternateGroup()>
SOURCE|<com.android.providers.downloads.StorageManager: java.io.File getDownloadDataDirectory()>
SOURCE|<android.hardware.usb.UsbEndpoint: int getEndpointNumber()>
SOURCE|<java.io.ByteArrayOutputStream: byte[] toByteArray()>
SOURCE|<android.widget.RemoteViews: java.lang.String getPackage()>
SOURCE|<android.view.inputmethod.CompletionInfo: java.lang.CharSequence getText()>
SOURCE|<com.android.gallery3d.data.ClusterAlbum: com.android.gallery3d.data.MediaItem getCoverMediaItem()>
SOURCE|<com.android.contacts.editor.ContactEditorFragment: com.android.contacts.editor.BaseRawContactEditorView getRawContactEditorView(long)>
SOURCE|<java.util.SimpleTimeZone: int getOffset(int,int,int,int,int,int)>
SOURCE|<android.accounts.AccountManager: java.lang.String peekAuthToken(android.accounts.Account,java.lang.String)>
SOURCE|<android.accounts.AccountManager: android.accounts.AccountManagerFuture hasFeatures(android.accounts.Account,java.lang.String[],android.accounts.AccountManagerCallback,android.os.Handler)>
SOURCE|<com.android.browser.Tab: android.webkit.WebViewClassic getWebViewClassic()>
SOURCE|<android.content.res.Resources: android.content.res.ColorStateList loadColorStateList(android.util.TypedValue,int)>
SOURCE|<java.net.URLConnection: java.util.Map getRequestProperties()>
SOURCE|<libcore.util.ZoneInfoDB: java.lang.String getVersion()>
SOURCE|<com.android.server.InputMethodManagerService$InputMethodSettings: java.lang.String getSelectedInputMethod()>
SOURCE|<android.app.WallpaperManager: int getDesiredMinimumHeight()>
SOURCE|<com.googlecode.mp4parser.authoring.TrackMetaData: double getWidth()>
SOURCE|<gov.nist.javax.sip.message.SIPMessage: javax.sip.header.FromHeader getFromHeader()>
SOURCE|<gov.nist.javax.sip.SipProviderImpl: javax.sip.ListeningPoint getListeningPoint(java.lang.String)>
SOURCE|<android.view.inputmethod.InputMethodInfo: java.lang.CharSequence loadLabel(android.content.pm.PackageManager)>
SOURCE|<android.content.Intent: android.content.Intent parseUri(java.lang.String,int)>
SOURCE|<com.android.nfc.dhimpl.NativeNfcTag: byte[] readNdef()>
SOURCE|<android.graphics.drawable.ScaleDrawable: int getOpacity()>
SOURCE|<com.android.gallery3d.app.GalleryActionBar: int getClusterTypeAction()>
SOURCE|<com.android.server.display.DisplayDevice: com.android.server.display.DisplayAdapter getAdapterLocked()>
SOURCE|<android.graphics.Paint: android.graphics.Xfermode getXfermode()>
SOURCE|<com.coremedia.iso.boxes.MediaInformationBox: com.coremedia.iso.boxes.AbstractMediaHeaderBox getMediaHeaderBox()>
SOURCE|<java.nio.MappedByteBufferAdapter: int getInt()>
SOURCE|<android.test.ProviderTestCase2: android.test.IsolatedContext getMockContext()>
SOURCE|<android.view.View: boolean getKeepScreenOn()>
SOURCE|<android.app.backup.RestoreSession: int getAvailableRestoreSets(android.app.backup.RestoreObserver)>
SOURCE|<com.android.internal.util.StateMachine$LogRec: com.android.internal.util.State getState()>
SOURCE|<javax.crypto.EncryptedPrivateKeyInfo: java.security.spec.PKCS8EncodedKeySpec getKeySpec(javax.crypto.Cipher)>
SOURCE|<com.android.internal.util.TypedProperties: float getFloat(java.lang.String)>
SOURCE|<com.android.internal.view.menu.ActionMenuItem: java.lang.CharSequence getTitle()>
SOURCE|<com.android.vcard.VCardEntry$OrganizationData: java.lang.String getFormattedString()>
SOURCE|<android.preference.DialogPreference: java.lang.CharSequence getDialogMessage()>
SOURCE|<android.os.Bundle: java.io.Serializable getSerializable(java.lang.String)>
SOURCE|<android.os.ISchedulingPolicyService$Stub: android.os.IBinder asBinder()>
SOURCE|<android.net.wifi.IWifiManager$Stub$Proxy: int getFrequencyBand()>
SOURCE|<com.google.common.collect.Multimaps$TransformedEntriesMultimap$TransformedEntries$1$1: java.lang.Object getKey()>
SOURCE|<com.android.server.location.LocationProviderProxy: int getStatus(android.os.Bundle)>
SOURCE|<com.android.gallery3d.filtershow.imageshow.ImageGeometry: android.graphics.RectF getUntranslatedStraightenCropBounds(android.graphics.RectF,float)>
SOURCE|<org.apache.http.impl.cookie.RFC2109Spec: org.apache.http.Header getVersionHeader()>
SOURCE|<com.google.common.collect.Iterators: java.lang.Object getOnlyElement(java.util.Iterator)>
SOURCE|<com.android.contacts.group.GroupEditorFragment$Member: long getContactId()>
SOURCE|<java.time.zone.ZoneOffsetTransition: java.time.Duration getDuration()>
SOURCE|<com.android.internal.widget.IRemoteViewsFactory$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
SOURCE|<com.android.providers.contacts.AccountWithDataSet: com.android.providers.contacts.AccountWithDataSet get(java.lang.String,java.lang.String,java.lang.String)>
SOURCE|<android.webkit.CookieSyncManager: android.webkit.CookieSyncManager createInstance(android.content.Context)>
SOURCE|<com.android.bluetooth.opp.BluetoothOppManager: com.android.bluetooth.opp.BluetoothOppManager getInstance(android.content.Context)>
SOURCE|<java.util.GregorianCalendar: java.util.Date getGregorianChange()>
SOURCE|<com.android.launcher2.CellLayout: int getCellHeight()>
SOURCE|<com.android.internal.telephony.gsm.GsmDataConnectionTracker: java.lang.String getActionIntentReconnectAlarm()>
SOURCE|<com.android.browser.Bookmarks: android.database.Cursor queryCombinedForUrl(android.content.ContentResolver,java.lang.String,java.lang.String)>
SOURCE|<java.time.format.DateTimeFormatter: java.util.Set getResolverFields()>
SOURCE|<gov.nist.javax.sip.stack.SIPDialog: javax.sip.header.CallIdHeader getCallId()>
SOURCE|<com.android.systemui.recent.RecentsVerticalScrollView: android.view.View getChildContentView(android.view.View)>
SOURCE|<com.google.android.gms.common.internal.GmsClient: java.util.ArrayList access$200(com.google.android.gms.common.internal.GmsClient)>
SOURCE|<android.database.sqlite.SQLiteConnection: byte[] access$500()>
SOURCE|<android.widget.Editor$ActionPopupWindow: int getVerticalLocalPosition(int)>
SOURCE|<org.apache.http.params.DefaultedHttpParams: org.apache.http.params.HttpParams getDefaults()>
SOURCE|<com.google.common.collect.Lists$StringAsImmutableList: java.lang.Character get(int)>
SOURCE|<com.android.videoeditor.ExportOptionsDialog: android.app.Dialog create(android.content.Context,com.android.videoeditor.ExportOptionsDialog$ExportOptionsListener,android.content.DialogInterface$OnClickListener,android.content.DialogInterface$OnCancelListener,int)>
SOURCE|<com.android.nfc.NfcDispatcher$DispatchInfo: android.content.Intent setTechIntent()>
SOURCE|<com.android.gallery3d.app.PhotoDataAdapter: android.graphics.Bitmap getTile(int,int,int,int,int,com.android.gallery3d.data.BitmapPool)>
SOURCE|<android.os.Parcel: byte[] createByteArray()>
SOURCE|<com.android.internal.telephony.PhoneSubInfo: java.lang.String getLine1Number()>
SOURCE|<com.google.android.mms.pdu.EncodedStringValue: byte[] getTextString()>
SOURCE|<android.app.Activity: android.content.ComponentName getCallingActivity()>
SOURCE|<android.app.admin.IDevicePolicyManager$Stub$Proxy: boolean isActivePasswordSufficient(int)>
SOURCE|<android.os.IHardwareService$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
SOURCE|<java.net.URLStreamHandler: java.net.InetAddress getHostAddress(java.net.URL)>
SOURCE|<org.apache.harmony.xml.dom.ElementImpl: org.apache.harmony.xml.dom.AttrImpl getAttributeNode(java.lang.String)>
SOURCE|<com.coremedia.iso.boxes.fragment.TrackExtendsBox: long getTrackId()>
SOURCE|<java.util.jar.Attributes$Name: java.lang.String getName()>
SOURCE|<org.apache.harmony.security.pkcs7.SignerInfo$2: java.lang.Object getDecodedObject(org.apache.harmony.security.asn1.BerInputStream)>
SOURCE|<org.apache.harmony.xml.dom.InnerNodeImpl: void getTextContent(java.lang.StringBuilder)>
SOURCE|<com.android.browser.provider.SQLiteContentProvider: android.net.Uri insert(android.net.Uri,android.content.ContentValues)>
SOURCE|<com.android.contacts.list.DefaultContactBrowseListFragment: com.android.contacts.list.ContactEntryListAdapter createListAdapter()>
SOURCE|<android.preference.DialogPreference: android.graphics.drawable.Drawable getDialogIcon()>
SOURCE|<android.bluetooth.BluetoothDevice: java.lang.String getAddress()>
SOURCE|<com.android.mms.ui.UriImage: java.lang.String getContentType()>
SOURCE|<android.media.videoeditor.MediaArtistNativeHelper$Version: android.media.videoeditor.MediaArtistNativeHelper$Version getVersion()>
SOURCE|<com.android.internal.telephony.gsm.GSMPhone: java.lang.String getMeid()>
SOURCE|<com.google.common.collect.BstMutationRule: com.google.common.collect.BstBalancePolicy getBalancePolicy()>
SOURCE|<android.media.videoeditor.MediaItem: android.media.videoeditor.Effect getEffect(java.lang.String)>
SOURCE|<com.android.internal.policy.impl.keyguard.KeyguardWidgetPager: float getAlphaForPage(int,int,boolean)>
SOURCE|<android.location.Country: java.lang.String getCountryIso()>
SOURCE|<com.android.phone.EditPhoneNumberPreference: java.lang.String getPhoneNumber()>
SOURCE|<com.android.contacts.model.account.BaseAccountType$CommonInflater: java.lang.String getLabelColumn()>
SOURCE|<com.android.inputmethod.latin.suggestions.MoreSuggestionsView: com.android.inputmethod.keyboard.PointerTracker$TimerProxy getTimerProxy()>
SOURCE|<com.google.android.apps.lightcycle.LightCycleApp: com.google.android.apps.lightcycle.camera.CameraUtility getCameraUtility()>
SOURCE|<android.graphics.Canvas: int getDensity()>
SOURCE|<java.io.FileInputStream: java.nio.channels.FileChannel getChannel()>
SOURCE|<org.apache.commons.codec.binary.Base64: byte[] discardNonBase64(byte[])>
SOURCE|<gov.nist.javax.sip.header.AuthenticationInfo: gov.nist.core.NameValue getAuthInfo(java.lang.String)>
SOURCE|<com.android.gallery3d.app.AbstractGalleryActivity: com.android.gallery3d.data.DataManager getDataManager()>
SOURCE|<com.android.inputmethod.keyboard.Key: int getAltCode()>
SOURCE|<org.apache.http.impl.client.AbstractHttpClient: org.apache.http.HttpRequestInterceptor getRequestInterceptor(int)>
SOURCE|<com.android.videoeditor.service.MovieAudioTrack: int getVolume()>
SOURCE|<android.hardware.Camera$Parameters: float getExposureCompensationStep()>
SOURCE|<com.android.systemui.statusbar.phone.Ticker: java.util.ArrayList access$200(com.android.systemui.statusbar.phone.Ticker)>
SOURCE|<com.android.internal.util.TypedProperties: long getLong(java.lang.String,long)>
SOURCE|<org.apache.harmony.xnet.provider.jsse.SSLSocketInputStream: byte[] access$300(org.apache.harmony.xnet.provider.jsse.SSLSocketInputStream)>
SOURCE|<android.content.Intent: java.lang.String getType()>
SOURCE|<java.io.FilePermission: java.lang.String getActions()>
SOURCE|<android.renderscript.Mesh: android.renderscript.Allocation getVertexAllocation(int)>
SOURCE|<android.webkit.SslCertLookupTable: android.webkit.SslCertLookupTable getInstance()>
SOURCE|<com.android.mms.data.WorkingMessage: java.lang.String getWorkingRecipients()>
SOURCE|<android.widget.TabWidget: android.view.View getChildTabViewAt(int)>
SOURCE|<java.text.CollationElementIterator: int getOffset()>
SOURCE|<java.time.chrono.JapaneseChronology: java.lang.String getCalendarType()>
SOURCE|<java.security.spec.EllipticCurve: byte[] getSeed()>
SOURCE|<android.appwidget.AppWidgetHostView: android.graphics.Rect getDefaultPaddingForWidget(android.content.Context,android.content.ComponentName,android.graphics.Rect)>
SOURCE|<android.view.VelocityTracker: float getYVelocity(int)>
SOURCE|<org.apache.harmony.xnet.provider.jsse.OpenSSLDSAPrivateKey: org.apache.harmony.xnet.provider.jsse.OpenSSLKey getOpenSSLKey()>
SOURCE|<com.android.providers.calendar.CalendarDatabaseHelper: android.database.sqlite.SQLiteDatabase getWritableDatabase()>
SOURCE|<android.database.CursorToBulkCursorAdaptor: android.os.Bundle getExtras()>
SOURCE|<org.apache.http.message.BasicHttpResponse: java.util.Locale getLocale()>
SOURCE|<com.android.email.activity.setup.SetupData: com.android.email.activity.setup.SetupData getInstance()>
SOURCE|<com.android.contacts.list.ContactEntryListAdapter: android.view.View createPinnedSectionHeaderView(android.content.Context,android.view.ViewGroup)>
SOURCE|<org.apache.http.impl.conn.LoggingSessionInputBuffer: java.lang.String readLine()>
SOURCE|<android.media.videoeditor.VideoEditorImpl: android.media.videoeditor.Transition getTransition(java.lang.String)>
SOURCE|<gov.nist.javax.sip.header.SIPObject: java.lang.String debugDump()>
SOURCE|<com.android.internal.telephony.PhoneBase: int getCdmaEriIconMode()>
SOURCE|<android.hardware.Camera$Parameters: int getJpegQuality()>
SOURCE|<android.app.ContextImpl: java.io.File getDatabasePath(java.lang.String)>
SOURCE|<java.util.concurrent.atomic.AtomicReference: java.lang.Object get()>
SOURCE|<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.stack.SIPTransaction getLastTransaction()>
SOURCE|<android.webkit.WebView$HitTestResult: java.lang.String getExtra()>
SOURCE|<android.widget.TextView: android.content.res.ColorStateList getLinkTextColors()>
SOURCE|<com.android.mms.dom.smil.SmilRegionMediaElementImpl: org.w3c.dom.smil.SMILRegionElement getRegion()>
SOURCE|<de.ecspride.PrivateDateLeakage: android.view.View findViewById(int)>
SOURCE|<android.media.AudioService: int getStreamVolume(int)>
SOURCE|<android.test.IsolatedContext: java.io.File getFilesDir()>
SOURCE|<android.media.videoeditor.WaveformData: int getFramesCount()>
SOURCE|<com.android.internal.policy.impl.keyguard.KeyguardSecurityContainer: com.android.internal.policy.impl.keyguard.KeyguardSecurityViewFlipper getFlipper()>
SOURCE|<android.bluetooth.BluetoothPbap: android.bluetooth.BluetoothDevice getClient()>
SOURCE|<java.nio.MappedByteBufferAdapter: double getDouble(int)>
SOURCE|<org.apache.http.message.BasicHttpResponse: org.apache.http.ProtocolVersion getProtocolVersion()>
SOURCE|<com.android.gallery3d.filtershow.imageshow.ImageCrop: java.lang.String getName()>
SOURCE|<org.apache.james.mime4j.field.address.parser.ParseException: java.lang.String getMessage()>
SOURCE|<com.android.calendar.alerts.AlertActivity: android.database.Cursor access$002(com.android.calendar.alerts.AlertActivity,android.database.Cursor)>
SOURCE|<org.apache.james.mime4j.field.Field: java.lang.String getName()>
SOURCE|<android.app.admin.DevicePolicyManager: void getRemoveWarning(android.content.ComponentName,android.os.RemoteCallback)>
SOURCE|<java.lang.ThreadLocal$Values: java.lang.Object getAfterMiss(java.lang.ThreadLocal)>
SOURCE|<com.android.videoeditor.service.MovieOverlay: java.lang.String getSubtitle(android.os.Bundle)>
SOURCE|<com.android.inputmethod.keyboard.internal.KeysCache: com.android.inputmethod.keyboard.Key get(com.android.inputmethod.keyboard.Key)>
SOURCE|<javax.crypto.Cipher: java.security.spec.AlgorithmParameterSpec getMaxAllowedParameterSpec(java.lang.String)>
SOURCE|<com.android.providers.contacts.CountryMonitor: java.lang.String getCountryIso()>
SOURCE|<com.android.gallery3d.util.HelpUtils: android.content.Intent getHelpIntent(android.content.Context,int)>
SOURCE|<android.content.Entity: android.content.ContentValues getEntityValues()>
SOURCE|<gov.nist.javax.sip.header.CallID: java.lang.String getCallId()>
SOURCE|<android.animation.ValueAnimator: java.lang.Object getAnimatedValue()>
SOURCE|<com.android.bluetooth.pan.PanService: java.util.List getConnectedDevices()>
SOURCE|<android.media.videoeditor.VideoEditorImpl: java.util.List getAllTransitions()>
SOURCE|<java.net.HttpURLConnection: boolean getFollowRedirects()>
SOURCE|<com.android.internal.policy.impl.PhoneWindowManager: com.android.internal.statusbar.IStatusBarService getStatusBarService()>
SOURCE|<com.google.common.collect.MapMakerInternalMap$StrongExpirableEntry: long getExpirationTime()>
SOURCE|<com.android.org.bouncycastle.asn1.x500.X500Name: com.android.org.bouncycastle.asn1.ASN1ObjectIdentifier[] getAttributeTypes()>
SOURCE|<java.security.spec.DSAParameterSpec: java.math.BigInteger getG()>
SOURCE|<java.security.cert.CertStore: java.security.cert.CertStoreParameters getCertStoreParameters()>
SOURCE|<com.android.gallery3d.filtershow.ImageStateAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)>
SOURCE|<android.util.TypedValue: float getFloat()>
SOURCE|<android.media.AudioRecord: int getSampleRate()>
SOURCE|<com.google.common.collect.Maps$ImprovedAbstractMap: java.util.Set entrySet()>
SOURCE|<android.net.sip.SimpleSessionDescription$Fields: int getBandwidth(java.lang.String)>
SOURCE|<com.android.internal.telephony.cdma.CDMAPhone: com.android.internal.telephony.ServiceStateTracker getServiceStateTracker()>
SOURCE|<com.android.mms.util.Recycler$MmsRecycler: int getMessageLimit(android.content.Context)>
SOURCE|<dalvik.system.DexFile: java.lang.String getName()>
SOURCE|<android.net.http.RequestQueue$SyncFeeder: android.net.http.Request getRequest(org.apache.http.HttpHost)>
SOURCE|<com.android.contacts.list.JoinContactListAdapter: int getViewTypeCount()>
SOURCE|<com.android.server.ThrottleService$DataRecorder: int getPeriodCount()>
SOURCE|<org.apache.james.mime4j.field.DelegatingFieldParser: org.apache.james.mime4j.field.FieldParser getParser(java.lang.String)>
SOURCE|<android.hardware.usb.UsbDevice: java.lang.String getDeviceName(int)>
SOURCE|<com.android.server.NetworkManagementService: android.net.InterfaceConfiguration getInterfaceConfig(java.lang.String)>
SOURCE|<android.app.Fragment: android.app.Fragment getParentFragment()>
SOURCE|<android.location.LocationManager: android.location.LocationProvider getProvider(java.lang.String)>
SOURCE|<com.android.gallery3d.data.LocalMediaItem: java.lang.String getMimeType()>
SOURCE|<android.hardware.display.WifiDisplayStatus: android.hardware.display.WifiDisplay[] getAvailableDisplays()>
SOURCE|<com.android.gallery3d.exif.ExifReader: com.android.gallery3d.exif.ExifData read(java.io.InputStream)>
SOURCE|<android.animation.Keyframe: float getFraction()>
SOURCE|<com.android.internal.telephony.PhoneProxy: com.android.internal.telephony.Phone$DataActivityState getDataActivityState()>
SOURCE|<android.net.SSLCertificateSocketFactory: java.net.Socket createSocket()>
SOURCE|<java.net.ContentHandler: java.lang.Object getContent(java.net.URLConnection,java.lang.Class[])>
SOURCE|<android.mtp.MtpStorage: int getStorageId(int)>
SOURCE|<java.lang.Class: java.lang.Class[] getClasses()>
SOURCE|<java.lang.Class: java.lang.Object[] getEnumConstants()>
SOURCE|<com.android.internal.widget.LockPatternView$Cell: int getRow()>
SOURCE|<android.media.JetPlayer: boolean loadJetFile(android.content.res.AssetFileDescriptor)>
SOURCE|<libcore.io.ForwardingOs: libcore.io.StructPasswd getpwuid(int)>
SOURCE|<com.android.internal.telephony.DataConnectionAc: int getCidSync()>
SOURCE|<com.google.common.collect.ForwardingCollection: java.util.Iterator iterator()>
SOURCE|<android.widget.AbsListView: long[] getCheckedItemIds()>
SOURCE|<org.apache.harmony.security.fortress.Services: java.security.Provider getProvider(java.lang.String)>
SOURCE|<javax.security.auth.callback.PasswordCallback: java.lang.String getPrompt()>
SOURCE|<libcore.icu.RuleBasedCollatorICU: int getAttribute(int)>
SOURCE|<com.android.gallery3d.data.MtpImage: java.lang.String getMimeType()>
SOURCE|<android.widget.CheckedTextView: android.graphics.drawable.Drawable getCheckMarkDrawable()>
SOURCE|<android.view.MotionEvent: float getRawY()>
SOURCE|<java.security.KeyStore: void load(java.security.KeyStore$LoadStoreParameter)>
SOURCE|<gov.nist.javax.sip.header.AcceptLanguage: java.lang.String getLanguageRange()>
SOURCE|<com.android.commands.monkey.MonkeyTrackballEvent: java.lang.String getTypeLabel()>
SOURCE|<java.text.DecimalFormatSymbols: java.util.Currency getCurrency()>
SOURCE|<android.webkit.CallbackProxy: int getProgress()>
SOURCE|<android.app.admin.DevicePolicyManager: int getPasswordMinimumUpperCase(android.content.ComponentName,int)>
SOURCE|<android.location.GpsStatus: java.lang.Iterable getSatellites()>
SOURCE|<android.app.ApplicationPackageManager: java.util.List getInstalledPackages(int)>
SOURCE|<java.lang.reflect.Parameter: int getModifiers()>
SOURCE|<gov.nist.javax.sip.header.SIPHeaderList: java.util.Iterator iterator()>
SOURCE|<com.android.server.pm.PackageManagerService: android.content.pm.ServiceInfo getServiceInfo(android.content.ComponentName,int,int)>
SOURCE|<com.android.internal.telephony.Call: long getEarliestCreateTime()>
SOURCE|<com.android.email.activity.EmailActivity: android.content.Intent createOpenAccountIntent(android.app.Activity,long)>
SOURCE|<com.android.server.display.DisplayManagerService: android.hardware.display.WifiDisplayStatus getWifiDisplayStatus()>
SOURCE|<org.ccil.cowan.tagsoup.Parser: org.xml.sax.DTDHandler getDTDHandler()>
SOURCE|<com.android.internal.telephony.cdma.SmsMessage: int getStatus()>
SOURCE|<android.hardware.usb.UsbInterface: int getInterfaceProtocol()>
SOURCE|<android.text.SpannableStringInternal: int getSpanFlags(java.lang.Object)>
SOURCE|<android.util.EventLog$Event: int getThreadId()>
SOURCE|<android.view.FocusFinder: android.view.View findNextFocusInAbsoluteDirection(java.util.ArrayList,android.view.ViewGroup,android.view.View,android.graphics.Rect,int)>
SOURCE|<com.android.contacts.vcard.ImportVCardActivity$VCardFile: java.lang.String getName()>
SOURCE|<com.android.browser.BrowserSettings: android.webkit.WebSettings$PluginState getPluginState()>
SOURCE|<com.android.server.BackupManagerService: java.lang.String getCurrentTransport()>
SOURCE|<java.lang.Class: int getModifiers()>
SOURCE|<android.text.method.ArrowKeyMovementMethod: android.text.method.MovementMethod getInstance()>
SOURCE|<com.android.contacts.model.RawContact: java.util.List getDataItems()>
SOURCE|<com.android.contacts.editor.SplitContactConfirmationDialogFragment: android.app.Dialog onCreateDialog(android.os.Bundle)>
SOURCE|<org.apache.harmony.security.x509.GeneralNames: java.util.List getNames()>
SOURCE|<android.widget.ImageView: android.widget.ImageView$ScaleType getScaleType()>
SOURCE|<java.util.AbstractSequentialList: java.util.Iterator iterator()>
SOURCE|<javax.security.cert.X509Certificate$1: byte[] getEncoded()>
SOURCE|<android.content.ContentProviderNative: android.os.IBinder asBinder()>
SOURCE|<com.android.browser.provider.BrowserProvider$MySuggestionCursor: short getShort(int)>
SOURCE|<com.android.contacts.group.SuggestedMemberListAdapter: android.widget.Filter getFilter()>
SOURCE|<com.android.inputmethod.latin.suggestions.MoreSuggestionsView$2: com.android.inputmethod.keyboard.KeyDetector getKeyDetector()>
SOURCE|<java.awt.font.NumericShaper: java.awt.font.NumericShaper getContextualShaper(int)>
SOURCE|<android.database.ContentObserver: android.database.IContentObserver releaseContentObserver()>
SOURCE|<android.os.Environment: java.io.File getExternalStorageAndroidDataDir()>
SOURCE|<android.bluetooth.IBluetooth$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
SOURCE|<org.apache.james.mime4j.field.datetime.parser.SimpleCharStream: int getEndColumn()>
SOURCE|<java.nio.Buffer: java.nio.Buffer mark()>
SOURCE|<gov.nist.javax.sip.header.ims.Privacy: java.lang.String getPrivacy()>
SOURCE|<java.util.logging.Level: java.lang.String getResourceBundleName()>
SOURCE|<android.app.admin.IDevicePolicyManager$Stub$Proxy: long getPasswordExpiration(android.content.ComponentName,int)>
SOURCE|<gov.nist.javax.sip.SipStackImpl: javax.sip.ListeningPoint createListeningPoint(int,java.lang.String)>
SOURCE|<com.android.internal.policy.impl.keyguard.KeyguardSecurityModel: com.android.internal.policy.impl.keyguard.KeyguardSecurityModel$SecurityMode getBackupSecurityMode(com.android.internal.policy.impl.keyguard.KeyguardSecurityModel$SecurityMode)>
SOURCE|<gov.nist.javax.sip.message.SIPMessage: javax.sip.header.CallIdHeader getCallIdHeader()>
SOURCE|<com.android.videoeditor.service.VideoEditorProject: com.android.videoeditor.service.MovieMediaItem getMediaItem(java.lang.String)>
SOURCE|<com.android.camera.CameraSettings: java.lang.String getDefaultVideoQuality(int,java.lang.String)>
SOURCE|<com.android.internal.telephony.RetryManager: int getRetryCount()>
SOURCE|<com.android.browser.BrowserSettings: java.lang.String getSearchEngineName()>
SOURCE|<android.net.wifi.p2p.nsd.WifiP2pUpnpServiceResponse: java.util.List getUniqueServiceNames()>
SOURCE|<gov.nist.javax.sip.header.SIPHeaderList: java.util.ListIterator listIterator(int)>
SOURCE|<android.graphics.drawable.RotateDrawable: int getOpacity()>
SOURCE|<java.text.DateFormatSymbols: java.lang.String[] getAmPmStrings()>
SOURCE|<gov.nist.javax.sip.address.SipUri: java.util.Iterator getParameterNames()>
SOURCE|<android.app.ISearchManager$Stub$Proxy: android.content.ComponentName getAssistIntent(int)>
SOURCE|<com.android.internal.telephony.cdma.CdmaServiceStateTracker: java.lang.String getPrlVersion()>
SOURCE|<android.graphics.drawable.DrawableContainer$DrawableContainerState: int getChildCount()>
SOURCE|<com.android.server.am.UsageStatsService: com.android.internal.app.IUsageStats getService()>
SOURCE|<android.app.ApplicationPackageManager: android.content.pm.FeatureInfo[] getSystemAvailableFeatures()>
SOURCE|<android.bluetooth.IBluetooth$Stub$Proxy: java.lang.String getAddress()>
SOURCE|<libcore.icu.TimeZones$ZoneStringsCache: java.lang.Object create(java.lang.Object)>
SOURCE|<com.android.org.bouncycastle.asn1.ASN1StreamParser: com.android.org.bouncycastle.asn1.ASN1Primitive readTaggedObject(boolean,int)>
SOURCE|<com.android.internal.policy.impl.keyguard.KeyguardWidgetFrame: float getBackgroundAlpha()>
SOURCE|<android.view.IWindowManager$Stub$Proxy: android.os.IBinder getFocusedWindowToken()>
SOURCE|<android.content.pm.IPackageManager$Stub$Proxy: android.content.pm.InstrumentationInfo getInstrumentationInfo(android.content.ComponentName,int)>
SOURCE|<android.animation.LayoutTransition: long getStagger(int)>
SOURCE|<com.android.server.InputMethodManagerService$InputMethodFileManager: java.util.HashMap getAllAdditionalInputMethodSubtypes()>
SOURCE|<org.apache.james.mime4j.field.address.Mailbox: java.lang.String getAddressString()>
SOURCE|<gov.nist.javax.sip.header.ContentLanguage: java.util.Locale getContentLanguage()>
SOURCE|<com.android.contacts.ContactsActivity: android.app.Fragment getFragment(int)>
SOURCE|<java.net.NetworkInterface: int getMTU()>
SOURCE|<com.android.email.mail.store.Pop3Store: com.android.emailcommon.mail.Folder getFolder(java.lang.String)>
SOURCE|<com.android.mms.dom.AttrImpl: org.w3c.dom.Element getOwnerElement()>
SOURCE|<java.util.DoubleSummaryStatistics: double getAverage()>
SOURCE|<com.android.server.pm.PackageManagerService: java.lang.String[] getPackagesForUid(int)>
SOURCE|<java.net.DatagramSocketImpl: java.net.InetAddress getLocalAddress()>
SOURCE|<com.android.internal.telephony.ServiceStateTracker: boolean getDesiredPowerState()>
SOURCE|<com.android.internal.telephony.sip.SipConnectionBase: int getNumberPresentation()>
SOURCE|<android.content.res.TypedArray: int getResourceId(int,int)>
SOURCE|<com.android.emailcommon.provider.EmailContent$Message: com.android.emailcommon.provider.EmailContent$Message restoreMessageWithId(android.content.Context,long)>
SOURCE|<android.test.IsolatedContext$MockAccountManager$MockAccountManagerFuture: java.lang.Object getResult(long,java.util.concurrent.TimeUnit)>
SOURCE|<com.android.deskclock.widget.multiwaveview.TargetDrawable: float getPositionY()>
SOURCE|<com.android.internal.telephony.DataConnection: java.lang.String getWhatToString(int)>
SOURCE|<org.apache.harmony.security.x509.Extensions: java.util.Set getNonCriticalExtensions()>
SOURCE|<com.android.contacts.activities.ContactEditorActivity: com.android.contacts.util.DialogManager getDialogManager()>
SOURCE|<java.net.Authenticator: java.lang.String getRequestingScheme()>
SOURCE|<android.widget.ProgressBar: android.graphics.drawable.shapes.Shape getDrawableShape()>
SOURCE|<android.nfc.Tag: int getConnectedTechnology()>
SOURCE|<android.media.videoeditor.MediaImageItem: java.lang.String getGeneratedImageClip()>
SOURCE|<com.android.internal.widget.DrawableHolder: float getAlpha()>
SOURCE|<com.android.emailcommon.mail.Message: java.lang.String toString()>
SOURCE|<java.io.StringWriter: java.lang.StringBuffer getBuffer()>
SOURCE|<android.text.style.SuggestionSpan: java.lang.String getNotificationTargetClassName()>
SOURCE|<com.android.contacts.ContactSaveService: java.lang.Object getSystemService(java.lang.String)>
SOURCE|<android.media.videoeditor.MediaItem: android.media.videoeditor.Overlay getOverlay(java.lang.String)>
SOURCE|<libcore.net.http.RequestHeaders: java.lang.String getIfNoneMatch()>
SOURCE|<java.time.chrono.HijrahDate: java.time.chrono.HijrahChronology getChronology()>
SOURCE|<android.net.http.RequestQueue$ActivePool: android.net.http.Connection getConnection(android.content.Context,org.apache.http.HttpHost)>
SOURCE|<com.android.server.net.NetworkStatsService$DefaultNetworkStatsSettings: long getGlobalAlertBytes(long)>
SOURCE|<java.time.format.DateTimeFormatter: java.time.temporal.TemporalAccessor parseUnresolved(java.lang.CharSequence,java.text.ParsePosition)>
SOURCE|<android.widget.RemoteViews$SetPendingIntentTemplate: java.lang.String getActionName()>
SOURCE|<java.lang.reflect.Field: java.lang.annotation.Annotation getAnnotation(java.lang.Class)>
SOURCE|<org.apache.james.mime4j.field.address.parser.SimpleCharStream: int getEndLine()>
SOURCE|<com.android.mms.MmsConfig: java.lang.String getUserAgent()>
SOURCE|<android.media.videoeditor.MediaVideoItem: int getVolume()>
SOURCE|<com.android.internal.telephony.CallManager: com.android.internal.telephony.CallManager getInstance()>
SOURCE|<com.android.videoeditor.OverlaysAdapter: java.lang.Object getItem(int)>
SOURCE|<com.android.internal.view.menu.BaseMenuPresenter: android.view.View getItemView(com.android.internal.view.menu.MenuItemImpl,android.view.View,android.view.ViewGroup)>
SOURCE|<com.android.org.bouncycastle.asn1.LazyEncodedSequence: com.android.org.bouncycastle.asn1.ASN1Encodable getObjectAt(int)>
SOURCE|<com.android.contacts.calllog.CallLogFragment: com.android.contacts.calllog.CallLogAdapter getAdapter()>
SOURCE|<android.database.sqlite.SQLiteGlobal: int getWALConnectionPoolSize()>
SOURCE|<android.app.ContextImpl$ApplicationContentResolver: android.content.SyncInfo getCurrentSync()>
SOURCE|<org.apache.harmony.security.x509.TBSCertificate: java.math.BigInteger getSerialNumber()>
SOURCE|<com.android.email.view.CertificateSelector: java.lang.String getCertificate()>
SOURCE|<android.net.http.RequestQueue$ActivePool: org.apache.http.HttpHost getProxyHost()>
SOURCE|<com.android.browser.PieControl$TabAdapter: int getCount()>
SOURCE|<android.nfc.INfcAdapterExtras$Stub: android.os.IBinder asBinder()>
SOURCE|<com.google.android.apps.lightcycle.camera.CameraUtility: java.lang.String getFlashMode(com.google.android.apps.lightcycle.camera.CameraApiProxy$CameraProxy)>
SOURCE|<android.mtp.MtpStorage: long getReserveSpace()>
SOURCE|<android.gesture.GestureStore: java.util.Set getGestureEntries()>
SOURCE|<android.hardware.Camera$Parameters: float getVerticalViewAngle()>
SOURCE|<javax.xml.transform.TransformerException: java.lang.String getLocationAsString()>
SOURCE|<android.widget.TextView: float getShadowDy()>
SOURCE|<android.widget.CursorTreeAdapter: android.database.Cursor getCursor()>
SOURCE|<android.content.ContentService: int getIsSyncable(android.accounts.Account,java.lang.String)>
SOURCE|<com.android.gallery3d.ui.AlbumSlidingWindow: com.android.gallery3d.ui.AlbumSlidingWindow$AlbumEntry get(int)>
SOURCE|<android.text.method.DialerKeyListener: android.text.method.DialerKeyListener getInstance()>
SOURCE|<com.android.providers.contacts.TransactionContext: java.util.Set getInsertedRawContactIds()>
SOURCE|<android.text.SpannableStringBuilder: java.lang.Object[] getSpans(int,int,java.lang.Class)>
SOURCE|<android.app.ActivityManager: int getMemoryClass()>
SOURCE|<org.apache.harmony.xnet.provider.jsse.OpenSSLDSAPrivateKey: int getPkeyContext()>
SOURCE|<com.android.i18n.phonenumbers.Phonenumber$PhoneNumber: long getNationalNumber()>
SOURCE|<java.util.zip.Adler32: long getValue()>
SOURCE|<android.telephony.gsm.SmsMessage: java.lang.String getDisplayOriginatingAddress()>
SOURCE|<java.security.cert.CertPathBuilder: java.lang.String getAlgorithm()>
SOURCE|<com.android.browser.SnapshotTab: android.graphics.Bitmap getScreenshot()>
SOURCE|<java.util.logging.LogRecord: java.lang.String getSourceMethodName()>
SOURCE|<java.text.DecimalFormatSymbols: java.lang.String getExponentSeparator()>
SOURCE|<gov.nist.javax.sip.header.HeaderFactoryImpl: javax.sip.header.ExpiresHeader createExpiresHeader(int)>
SOURCE|<org.apache.http.impl.conn.SingleClientConnManager: org.apache.http.conn.scheme.SchemeRegistry getSchemeRegistry()>
SOURCE|<android.graphics.drawable.shapes.Shape: float getHeight()>
SOURCE|<com.google.android.mms.pdu.NotificationInd: long getExpiry()>
SOURCE|<java.text.MessageFormat: java.lang.Object[] parse(java.lang.String)>
SOURCE|<android.os.DropBoxManager$Entry: int getFlags()>
SOURCE|<com.android.internal.telephony.PhoneBase: com.android.internal.telephony.gsm.UsimServiceTable getUsimServiceTable()>
SOURCE|<java.util.concurrent.ScheduledThreadPoolExecutor: boolean getExecuteExistingDelayedTasksAfterShutdownPolicy()>
SOURCE|<android.security.KeyChain: java.security.PrivateKey getPrivateKey(android.content.Context,java.lang.String)>
SOURCE|<android.app.ActivityManagerProxy: int getFrontActivityScreenCompatMode()>
SOURCE|<com.android.calendar.agenda.AgendaByDayAdapter: int getCursorPosition(int)>
SOURCE|<android.widget.AutoCompleteTextView: int getDropDownWidth()>
SOURCE|<com.android.ex.variablespeed.SingleThreadedMediaPlayerProxy: int getCurrentPosition()>
SOURCE|<com.android.mms.dom.smil.ElementTimeImpl: int getEndConstraints()>
SOURCE|<android.view.ViewConfiguration: int getKeyRepeatTimeout()>
SOURCE|<com.android.mms.ui.ManageSimMessages: android.database.Cursor access$100(com.android.mms.ui.ManageSimMessages)>
SOURCE|<com.android.email.mail.Store: java.lang.Class getSettingActivityClass()>
SOURCE|<android.media.MediaRouter$RouteCategory: java.util.List getRoutes(java.util.List)>
SOURCE|<com.android.camera.CameraSettings: int getMaxVideoDuration(android.content.Context)>
SOURCE|<com.android.server.AppWidgetServiceImpl: int[] getAppWidgetIds(android.content.ComponentName)>
SOURCE|<com.android.emailcommon.service.IAccountService$Stub$Proxy: int getAccountColor(long)>
SOURCE|<android.text.method.QwertyKeyListener: int getInputType()>
SOURCE|<com.android.server.wm.WindowManagerService: com.android.server.wm.WindowList getDefaultWindowListLocked()>
SOURCE|<android.content.ContentService: java.util.List getPeriodicSyncs(android.accounts.Account,java.lang.String)>
SOURCE|<android.renderscript.Program: android.renderscript.Program$TextureType getTextureType(int)>
SOURCE|<org.apache.harmony.security.x509.GeneralName: java.lang.Object getName()>
SOURCE|<com.android.internal.telephony.cdma.CdmaSubscriptionSourceManager: int getCdmaSubscriptionSource()>
SOURCE|<org.apache.http.impl.client.AbstractAuthenticationHandler: java.util.Map parseChallenges(org.apache.http.Header[])>
SOURCE|<com.android.internal.view.menu.MenuBuilder: android.view.MenuItem getItem(int)>
SOURCE|<com.google.android.mms.pdu.PduBody: int getPartsNum()>
SOURCE|<com.android.mms.dom.smil.SmilPlayer$TimelineEntry: int getAction()>
SOURCE|<com.android.contacts.model.dataitem.StructuredNameDataItem: java.lang.String getDisplayName()>
SOURCE|<gov.nist.javax.sip.header.StatusLine: java.lang.String getVersionMajor()>
SOURCE|<android.widget.Editor$SelectionStartHandleView: int getHotspotX(android.graphics.drawable.Drawable,boolean)>
SOURCE|<gov.nist.javax.sip.header.ims.PChargingVector: java.lang.String getTerminatingIOI()>
SOURCE|<com.android.internal.telephony.Call: long getEarliestConnectTime()>
SOURCE|<android.drm.DrmManagerClient: int getDrmObjectType(android.net.Uri,java.lang.String)>
SOURCE|<com.android.internal.telephony.cat.ItemsIconId: com.android.internal.telephony.cat.ComprehensionTlvTag getTag()>
SOURCE|<com.android.contacts.model.RawContact: com.android.contacts.model.RawContact$NamedDataItem addNamedDataItemValues(android.net.Uri,android.content.ContentValues)>
SOURCE|<com.google.android.mms.pdu.EncodedStringValue: java.lang.String getString()>
SOURCE|<java.sql.DataTruncation: int getTransferSize()>
SOURCE|<com.android.mms.MmsConfig: int getMaxSubjectLength()>
SOURCE|<android.test.mock.MockContext: android.content.res.AssetManager getAssets()>
SOURCE|<android.telephony.cdma.CdmaSmsCbProgramResults: int getCategory()>
SOURCE|<org.apache.harmony.xnet.provider.jsse.SSLSocketWrapper: boolean getOOBInline()>
SOURCE|<android.net.wifi.WifiConfigStore: android.net.DhcpInfoInternal getIpConfiguration(int)>
SOURCE|<android.service.dreams.IDreamManager$Stub: android.os.IBinder asBinder()>
SOURCE|<android.support.v4.app.TaskStackBuilder$TaskStackBuilderImplBase: android.app.PendingIntent getPendingIntent(android.content.Context,android.content.Intent[],int,int,android.os.Bundle)>
SOURCE|<android.hardware.input.KeyboardLayout: java.lang.String getLabel()>
SOURCE|<android.renderscript.Mesh$Builder: int getCurrentIndexSetIndex()>
SOURCE|<java.util.IllformedLocaleException: int getErrorIndex()>
SOURCE|<com.android.internal.os.BatteryStatsImpl: android.util.SparseArray getUidStats()>
SOURCE|<com.android.server.Watchdog: com.android.server.Watchdog getInstance()>
SOURCE|<com.android.providers.contacts.aggregation.util.ContactMatcher$MatchScore: int getScore()>
SOURCE|<android.database.AbstractCursor: boolean getWantsAllOnMoveCalls()>
SOURCE|<com.android.browser.view.BookmarkExpandableView$BookmarkAccountAdapter: long getGroupId(int)>
SOURCE|<org.apache.http.message.BasicHeaderValueParser: org.apache.http.NameValuePair[] parseParameters(java.lang.String,org.apache.http.message.HeaderValueParser)>
SOURCE|<android.test.mock.MockContext: java.lang.String getPackageCodePath()>
SOURCE|<com.android.providers.contacts.CallLogProvider: com.android.providers.contacts.ContactsDatabaseHelper getDatabaseHelper(android.content.Context)>
SOURCE|<javax.xml.parsers.DocumentBuilder: org.w3c.dom.Document parse(java.lang.String)>
SOURCE|<java.security.spec.PSSParameterSpec: java.lang.String getMGFAlgorithm()>
SOURCE|<org.apache.james.mime4j.RootInputStream: int getLineNumber()>
SOURCE|<android.bluetooth.IBluetoothPbap$Stub: android.os.IBinder asBinder()>
SOURCE|<android.hardware.usb.UsbEndpoint: int getAddress()>
SOURCE|<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.message.SIPRequest getLastAckReceived()>
SOURCE|<com.google.common.collect.ImmutableSet$TransformedImmutableSet$1: java.lang.Object get(int)>
SOURCE|<android.drm.mobile1.DrmRightsManager: android.drm.mobile1.DrmRightsManager getInstance()>
SOURCE|<java.io.File: java.lang.String getCanonicalPath()>
SOURCE|<com.google.common.collect.SortedMultisets$DescendingMultiset: com.google.common.collect.SortedMultiset tailMultiset(java.lang.Object,com.google.common.collect.BoundType)>
SOURCE|<org.apache.http.client.methods.HttpPut: java.lang.String getMethod()>
SOURCE|<com.android.contacts.interactions.ContactDeletionInteraction: android.app.LoaderManager getLoaderManager()>
SOURCE|<android.provider.MediaStore$Audio$Media: android.net.Uri getContentUri(java.lang.String)>
SOURCE|<gov.nist.javax.sip.message.SIPMessage: gov.nist.javax.sip.header.ViaList getViaHeaders()>
SOURCE|<com.android.inputmethod.keyboard.internal.TouchPositionCorrection: float getY(int)>
SOURCE|<com.android.mms.model.TextModel: int getCharset()>
SOURCE|<com.android.mms.transaction.MessagingNotification: long getThreadId(android.content.Context,android.net.Uri)>
SOURCE|<org.xml.sax.helpers.NamespaceSupport: java.util.Enumeration getPrefixes(java.lang.String)>
SOURCE|<org.apache.harmony.xnet.provider.jsse.SSLSocketWrapper: int getReceiveBufferSize()>
SOURCE|<gov.nist.javax.sip.address.SipUri: java.lang.String getTransportParam()>
SOURCE|<com.android.inputmethod.latin.RichInputConnection: java.lang.CharSequence getWordBeforeCursorIfAtEndOfWord(com.android.inputmethod.latin.SettingsValues)>
SOURCE|<android.app.ApplicationPackageManager: java.lang.String[] getSystemSharedLibraryNames()>
SOURCE|<com.android.providers.contacts.ContactsProvider2: com.android.providers.contacts.DataRowHandler getDataRowHandlerForProfile(java.lang.String)>
SOURCE|<android.graphics.drawable.Drawable: int getLevel()>
SOURCE|<java.beans.PropertyChangeEvent: java.lang.String getPropertyName()>
SOURCE|<android.widget.BaseExpandableListAdapter: long getCombinedChildId(long,long)>
SOURCE|<com.android.bluetooth.pbap.BluetoothPbapService: java.lang.String getLocalPhoneName()>
SOURCE|<android.bluetooth.IBluetoothHeadset$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
SOURCE|<android.sax.BadXmlException: java.lang.String getMessage()>
SOURCE|<com.android.server.pm.PackageManagerService: java.util.List queryIntentReceivers(android.content.Intent,java.lang.String,int,int)>
SOURCE|<android.webkit.JsResult: boolean getResult()>
SOURCE|<com.android.contacts.model.account.AccountType: java.lang.String getViewContactNotifyServiceClassName()>
SOURCE|<android.content.ISyncAdapter$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
SOURCE|<com.android.email.FolderProperties: com.android.email.FolderProperties getInstance(android.content.Context)>
SOURCE|<javax.xml.transform.TransformerException: java.lang.Throwable getCause()>
SOURCE|<com.android.bluetooth.btservice.AdapterService: java.lang.String getAddress()>
SOURCE|<android.view.KeyEvent: int getRepeatCount()>
SOURCE|<org.apache.http.impl.io.ChunkedInputStream: org.apache.http.Header[] getFooters()>
SOURCE|<android.webkit.WebSettings: int getCacheMode()>
SOURCE|<com.android.server.wm.WindowState: android.graphics.Rect getDisplayFrameLw()>
SOURCE|<java.security.AlgorithmParameterGenerator: java.lang.String getAlgorithm()>
SOURCE|<com.android.email.activity.MessageCompose: android.content.Intent getMessageComposeIntent(android.content.Context,long)>
SOURCE|<com.android.email.MessageListContext: long getMailboxId()>
SOURCE|<javax.crypto.KeyGenerator: javax.crypto.KeyGenerator getInstance(java.lang.String,java.security.Provider)>
SOURCE|<android.content.res.Resources: java.lang.String getResourceEntryName(int)>
SOURCE|<org.apache.http.conn.scheme.Scheme: java.lang.String getName()>
SOURCE|<android.view.accessibility.IAccessibilityManagerClient$Stub: android.os.IBinder asBinder()>
SOURCE|<com.android.inputmethod.latin.SubtypeSwitcher: java.util.Locale getCurrentSubtypeLocale()>
SOURCE|<java.time.format.DateTimeFormatterBuilder: java.time.format.DateTimeFormatterBuilder parseLenient()>
SOURCE|<android.app.ISearchManager$Stub$Proxy: android.content.ComponentName getGlobalSearchActivity()>
SOURCE|<com.android.bluetooth.btservice.AdapterService: int getBondState(android.bluetooth.BluetoothDevice)>
SOURCE|<org.apache.harmony.security.x501.Name: java.lang.String getName(java.lang.String)>
SOURCE|<com.coremedia.iso.boxes.SampleSizeBox: long getSampleCount()>
SOURCE|<android.telephony.ServiceState: boolean getIsManualSelection()>
SOURCE|<java.security.spec.ECFieldFp: java.math.BigInteger getP()>
SOURCE|<android.widget.TextView: int getExtendedPaddingBottom()>
SOURCE|<android.net.ConnectivityManager: java.lang.String[] getTetheringErroredIfaces()>
SOURCE|<com.android.contacts.activities.PhotoSelectionActivity$PhotoHandler: com.android.contacts.detail.PhotoSelectionHandler$PhotoActionListener getListener()>
SOURCE|<com.android.org.bouncycastle.asn1.ASN1Set: com.android.org.bouncycastle.asn1.ASN1Encodable getObjectAt(int)>
SOURCE|<com.android.internal.telephony.sip.SipPhone: java.lang.String getMeid()>
SOURCE|<com.android.providers.downloads.DownloadInfo: android.net.Uri getMyDownloadsUri()>
SOURCE|<com.android.internal.view.IInputMethodManager$Stub$Proxy: java.util.List getEnabledInputMethodList()>
SOURCE|<android.telephony.CellSignalStrengthCdma: int getCdmaLevel()>
SOURCE|<gov.nist.javax.sip.header.ims.SecurityAgree: java.lang.String getEncryptionAlgorithm()>
SOURCE|<android.text.SpannableStringInternal: int getSpanStart(java.lang.Object)>
SOURCE|<android.content.pm.ComponentInfo: int getIconResource()>
SOURCE|<java.security.spec.RSAMultiPrimePrivateCrtKeySpec: java.math.BigInteger getPrimeExponentP()>
SOURCE|<android.media.videoeditor.AudioTrack: android.media.videoeditor.WaveformData getWaveformData()>
SOURCE|<android.content.Intent: java.lang.String getScheme()>
SOURCE|<com.android.mms.ui.AttachmentTypeSelectorAdapter$AttachmentListItem: int getCommand()>
SOURCE|<android.view.animation.AnimationUtils: android.view.animation.Interpolator loadInterpolator(android.content.Context,int)>
SOURCE|<com.android.providers.calendar.SQLiteContentProvider: boolean getIsCallerSyncAdapter(android.net.Uri)>
SOURCE|<android.graphics.drawable.DrawableContainer: android.graphics.drawable.Drawable getCurrent()>
SOURCE|<android.graphics.drawable.Drawable: android.graphics.drawable.Drawable$Callback getCallback()>
SOURCE|<android.content.pm.LabeledIntent: int getIconResource()>
SOURCE|<com.android.browser.Controller: int getDesiredThumbnailWidth(android.content.Context)>
SOURCE|<com.android.camera.CameraActivity: com.android.camera.ShutterButton getShutterButton()>
SOURCE|<com.android.commands.monkey.MonkeySourceNetworkViews$GetChildren: com.android.commands.monkey.MonkeySourceNetwork$MonkeyCommandReturn query(android.view.accessibility.AccessibilityNodeInfo,java.util.List)>
SOURCE|<android.widget.TextView: int getBottomPaddingOffset()>
SOURCE|<org.apache.harmony.security.x509.GeneralName$1: java.lang.Object getDecodedObject(org.apache.harmony.security.asn1.BerInputStream)>
SOURCE|<android.media.videoeditor.TransitionAlpha: int getRGBFileHeight()>
SOURCE|<com.android.internal.util.TypedProperties: byte getByte(java.lang.String,byte)>
SOURCE|<com.android.providers.contacts.ProfileProvider: java.lang.ThreadLocal getTransactionHolder()>
SOURCE|<android.media.videoeditor.MediaArtistNativeHelper: int getFrameRate(int)>
SOURCE|<com.android.gallery3d.data.ClusterAlbum: java.lang.String getName()>
SOURCE|<org.apache.harmony.security.pkcs7.SignedData: java.util.List getSignerInfos()>
SOURCE|<com.android.internal.policy.impl.GlobalActions$MyAdapter: com.android.internal.policy.impl.GlobalActions$Action getItem(int)>
SOURCE|<android.widget.Spinner$DialogPopup: java.lang.CharSequence getHintText()>
SOURCE|<android.hardware.ISerialManager$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
SOURCE|<android.net.wifi.p2p.nsd.WifiP2pDnsSdServiceResponse: java.lang.String getDnsQueryName()>
SOURCE|<org.kxml2.io.KXmlParser: int getColumnNumber()>
SOURCE|<com.android.gallery3d.data.TimeClustering: java.lang.String getClusterName(int)>
SOURCE|<android.text.ClipboardManager: java.lang.CharSequence getText()>
SOURCE|<java.util.prefs.AbstractPreferences: float getFloat(java.lang.String,float)>
SOURCE|<android.speech.tts.TextToSpeech: java.lang.String getDefaultEngine()>
SOURCE|<com.example.bankmanager.BankActivity: android.view.View findViewById(int)>
SOURCE|<com.android.ex.chips.BaseRecipientAdapter: android.database.Cursor access$200(com.android.ex.chips.BaseRecipientAdapter,java.lang.CharSequence,int,java.lang.Long)>
SOURCE|<android.content.res.TypedArray: java.lang.String getNonConfigurationString(int,int)>
SOURCE|<android.widget.RemoteViews$MemoryUsageCounter: int getMemoryUsage()>
SOURCE|<android.database.sqlite.SQLiteConnection: java.lang.String describeCurrentOperationUnsafe()>
SOURCE|<com.android.bluetooth.hfp.HeadsetPhoneState: int getNumHeldCall()>
SOURCE|<com.android.email.mail.transport.MailTransport: java.io.InputStream getInputStream()>
SOURCE|<com.android.internal.view.IInputContext$Stub$Proxy: void getTextAfterCursor(int,int,int,com.android.internal.view.IInputContextCallback)>
SOURCE|<gov.nist.javax.sip.message.MessageFactoryImpl: javax.sip.header.ServerHeader getDefaultServerHeader()>
SOURCE|<com.google.common.collect.SingletonImmutableMap: java.lang.Object get(java.lang.Object)>
SOURCE|<android.net.WebAddress: java.lang.String getHost()>
SOURCE|<android.telephony.CellSignalStrengthCdma: int getEvdoLevel()>
SOURCE|<android.webkit.WebSettings: boolean getLoadsImagesAutomatically()>
SOURCE|<org.apache.harmony.xnet.provider.jsse.SSLSessionImpl: java.security.Principal getLocalPrincipal()>
SOURCE|<com.android.server.ConnectivityService: int getLastTetherError(java.lang.String)>
SOURCE|<org.apache.harmony.xnet.provider.jsse.ServerHelloDone: int getType()>
SOURCE|<android.view.ScaleGestureDetector: float getPreviousSpan()>
SOURCE|<com.android.internal.telephony.sip.SipPhone$SipConnection: java.lang.String getCnapName()>
SOURCE|<com.android.server.pm.PackageManagerService: android.content.pm.ApplicationInfo getApplicationInfo(java.lang.String,int,int)>
SOURCE|<com.android.gallery3d.data.LocalImage$LocalLargeImageRequest: android.graphics.BitmapRegionDecoder run(com.android.gallery3d.util.ThreadPool$JobContext)>
SOURCE|<android.view.DragEvent: float getY()>
SOURCE|<com.android.gallery3d.data.EmptyAlbumImage: int getSupportedOperations()>
SOURCE|<android.accessibilityservice.AccessibilityServiceInfo: boolean getCanRetrieveWindowContent()>
SOURCE|<android.app.WallpaperManager$FastBitmapDrawable: int getIntrinsicWidth()>
SOURCE|<android.content.ContentProviderClient: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,android.os.CancellationSignal)>
SOURCE|<org.xml.sax.helpers.AttributesImpl: int getIndex(java.lang.String)>
SOURCE|<com.android.server.WifiService: java.lang.String getConfigFile()>
SOURCE|<java.nio.charset.CharsetDecoder: java.nio.charset.Charset charset()>
SOURCE|<org.apache.commons.codec.binary.Base64: byte[] encode(byte[])>
SOURCE|<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: int getMaxTotalConnections()>
SOURCE|<gov.nist.javax.sip.stack.TCPMessageChannel: java.lang.String getPeerAddress()>
SOURCE|<android.content.ContentResolver: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>
SOURCE|<android.media.videoeditor.Effect: java.lang.String getId()>
SOURCE|<javax.xml.validation.ValidatorHandler: java.lang.Object getProperty(java.lang.String)>
SOURCE|<android.webkit.WebViewClassic$InvokeListBox$MyArrayListAdapter: long getItemId(int)>
SOURCE|<android.widget.BaseAdapter: android.view.View getDropDownView(int,android.view.View,android.view.ViewGroup)>
SOURCE|<com.android.contacts.group.GroupDetailFragment$1: int getApproximateTileWidth()>
SOURCE|<gov.nist.javax.sip.header.AuthenticationHeader: java.lang.String getScheme()>
SOURCE|<android.net.LocalSocketAddress: android.net.LocalSocketAddress$Namespace getNamespace()>
SOURCE|<org.apache.harmony.security.x509.ORAddress$2: java.lang.Object getDecodedObject(org.apache.harmony.security.asn1.BerInputStream)>
SOURCE|<com.android.server.accessibility.TouchExplorer$InjectedPointerTracker: long getLastInjectedDownEventTime()>
SOURCE|<com.android.inputmethod.latin.Suggest: com.android.inputmethod.latin.Dictionary getMainDictionary()>
SOURCE|<com.android.uiautomator.testrunner.UiAutomatorTestRunner: com.android.uiautomator.testrunner.TestCaseCollector getTestCaseCollector(java.lang.ClassLoader)>
SOURCE|<android.app.SearchableInfo: int getSearchButtonText()>
SOURCE|<com.android.server.net.NetworkStatsCollection: long getTotalBytes()>
SOURCE|<java.net.URI: java.lang.String getRawSchemeSpecificPart()>
SOURCE|<android.content.Intent: byte getByteExtra(java.lang.String,byte)>
SOURCE|<com.android.launcher2.PagedViewGridLayout: int getCellCountX()>
SOURCE|<com.android.server.location.MockProvider: com.android.internal.location.ProviderProperties getProperties()>
SOURCE|<android.animation.AnimatorSet$Builder: android.animation.AnimatorSet$Builder after(long)>
SOURCE|<org.apache.http.impl.client.AbstractHttpClient: org.apache.http.protocol.HttpProcessor getProtocolProcessor()>
SOURCE|<android.net.IThrottleManager$Stub$Proxy: long getResetTime(java.lang.String)>
SOURCE|<com.android.internal.widget.LockPatternUtils: int getRequestedPasswordMinimumLowerCase()>
SOURCE|<com.android.providers.contacts.ContactsDatabaseHelper: long getMimeTypeIdForEmail()>
SOURCE|<android.view.TextureView: android.graphics.Matrix getTransform(android.graphics.Matrix)>
SOURCE|<android.app.ExpandableListActivity: long getSelectedPosition()>
SOURCE|<android.database.CursorWindow: int getNumRows()>
SOURCE|<android.mtp.MtpStorageInfo: long getFreeSpace()>
SOURCE|<android.accounts.AccountManager: android.accounts.AccountManagerFuture confirmCredentialsAsUser(android.accounts.Account,android.os.Bundle,android.app.Activity,android.accounts.AccountManagerCallback,android.os.Handler,android.os.UserHandle)>
SOURCE|<android.net.IConnectivityManager$Stub$Proxy: android.net.NetworkQuotaInfo getActiveNetworkQuotaInfo()>
SOURCE|<com.android.nfc.NfcService: com.android.nfc.NfcService getInstance()>
SOURCE|<com.android.videoeditor.service.MovieTransition: java.lang.Class getTypeClass()>
SOURCE|<com.android.gallery3d.data.DataManager: com.android.gallery3d.data.MediaObject getMediaObject(com.android.gallery3d.data.Path)>
SOURCE|<java.text.DecimalFormat: int getMultiplier()>
SOURCE|<com.android.videoeditor.service.VideoEditorProject: java.lang.String getName()>
SOURCE|<java.lang.Thread: java.lang.String getName()>
SOURCE|<com.android.launcher2.LauncherAppWidgetHostView: int getDescendantFocusability()>
SOURCE|<gov.nist.javax.sip.header.extensions.Replaces: java.lang.String getFromTag()>
SOURCE|<android.filterfw.core.FrameManager: android.filterfw.core.Frame duplicateFrameToTarget(android.filterfw.core.Frame,int)>
SOURCE|<android.graphics.Region: android.graphics.Rect getBounds()>
SOURCE|<android.content.pm.VerificationParams: android.content.pm.ManifestDigest getManifestDigest()>
SOURCE|<gov.nist.core.LexerCore: int getPtr()>
SOURCE|<org.apache.http.auth.AuthScope: int getPort()>
SOURCE|<com.android.inputmethod.latin.ImfUtils: android.view.inputmethod.InputMethodManager getInputMethodManager(android.content.Context)>
SOURCE|<com.android.contacts.activities.ActionBarAdapter: int getCurrentTab()>
SOURCE|<android.webkit.Plugin: java.lang.String getName()>
SOURCE|<android.speech.tts.TextToSpeech: java.lang.String getCurrentEngine()>
SOURCE|<com.android.server.DevicePolicyManagerService: com.android.server.DevicePolicyManagerService$ActiveAdmin getActiveAdminForCallerLocked(android.content.ComponentName,int)>
SOURCE|<android.widget.ListView: android.widget.Adapter getAdapter()>
SOURCE|<javax.crypto.SecretKeyFactory: javax.crypto.SecretKeyFactory getInstance(java.lang.String,java.security.Provider)>
SOURCE|<java.util.BitSet: java.util.BitSet get(int,int)>
SOURCE|<android.widget.AdapterViewAnimator: android.widget.FrameLayout getFrameForChild()>
SOURCE|<com.android.bluetooth.hfp.AtPhonebook: boolean getCheckingAccessPermission()>
SOURCE|<android.app.ListFragment: android.widget.ListView getListView()>
SOURCE|<com.android.contacts.editor.RawContactEditorView: long getRawContactId()>
SOURCE|<com.google.common.collect.MapMakerInternalMap$ExpirationQueue$1: com.google.common.collect.MapMakerInternalMap$ReferenceEntry getPreviousExpirable()>
SOURCE|<java.util.Collections$SingletonMap: java.lang.Object get(java.lang.Object)>
SOURCE|<android.os.UEventObserver$UEvent: java.lang.String get(java.lang.String)>
SOURCE|<com.android.browser.SuggestionsAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)>
SOURCE|<com.android.internal.view.menu.MenuBuilder: int addIntentOptions(int,int,int,android.content.ComponentName,android.content.Intent[],android.content.Intent,int,android.view.MenuItem[])>
SOURCE|<android.net.Proxy: java.net.Proxy getProxy(android.content.Context,java.lang.String)>
SOURCE|<android.content.ContentProvider$Transport: java.lang.String getType(android.net.Uri)>
SOURCE|<com.android.phone.PhoneUtils: java.lang.CharSequence getProviderLabel(android.content.Context,android.content.Intent)>
SOURCE|<android.text.method.CharacterPickerDialog$OptionsAdapter: int getCount()>
SOURCE|<com.android.internal.view.menu.MenuBuilder: android.content.Context getContext()>
SOURCE|<android.text.method.DateTimeKeyListener: android.text.method.DateTimeKeyListener getInstance()>
SOURCE|<java.text.DecimalFormat: java.text.DecimalFormatSymbols getDecimalFormatSymbols()>
SOURCE|<android.app.DownloadManager: java.lang.String[] getWhereArgsForIds(long[])>
SOURCE|<com.android.providers.contacts.PhotoProcessor: int getMaxThumbnailPhotoDim()>
SOURCE|<java.nio.ShortBuffer: java.lang.Object array()>
SOURCE|<com.android.gallery3d.data.MtpImage: byte[] getImageData()>
SOURCE|<com.android.org.bouncycastle.asn1.DERUTCTime: java.util.Date getDate()>
SOURCE|<java.util.AbstractList: java.util.ListIterator listIterator()>
SOURCE|<com.android.contacts.model.AccountTypeManagerImpl: com.android.contacts.model.dataitem.DataKind getKindOrFallback(java.lang.String,java.lang.String,java.lang.String)>
SOURCE|<libcore.net.http.HttpEngine: java.io.OutputStream getRequestBody()>
SOURCE|<com.android.contacts.ContactsActivity: android.content.SharedPreferences getSharedPreferences(java.lang.String,int)>
SOURCE|<android.widget.NumberPicker: float getTopFadingEdgeStrength()>
SOURCE|<com.android.exchange.adapter.Parser: int getValueInt()>
SOURCE|<android.net.http.RequestHandle: java.lang.String getMethod()>
SOURCE|<android.media.videoeditor.MediaVideoItem: int getFileType()>
SOURCE|<android.webkit.CertTool: java.lang.String getSignedPublicKey(android.content.Context,int,java.lang.String)>
SOURCE|<com.android.launcher2.LauncherProvider: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>
SOURCE|<android.view.KeyEvent: int getUnicodeChar()>
SOURCE|<android.view.IInputFilter$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
SOURCE|<com.android.internal.telephony.gsm.SIMRecords: java.lang.String getVoiceMailNumber()>
SOURCE|<com.android.internal.policy.impl.PhoneWindowManager: int getMaxWallpaperLayer()>
SOURCE|<java.net.InetAddress: java.lang.String getHostAddress()>
SOURCE|<java.nio.Buffer: java.nio.Buffer rewind()>
SOURCE|<com.android.internal.net.VpnConfig: android.content.Intent getIntentForConfirmation()>
SOURCE|<android.widget.GridView: int getStretchMode()>
SOURCE|<java.time.ZoneId: java.util.Set getAvailableZoneIds()>
SOURCE|<dalvik.system.profiler.HprofData: int getFlags()>
SOURCE|<com.android.phone.PhoneInterfaceManager: int getLteOnCdmaMode()>
SOURCE|<com.android.browser.SuggestionsAdapter$CombinedCursor: com.android.browser.SuggestionsAdapter$SuggestItem getItem()>
SOURCE|<com.android.i18n.phonenumbers.AsYouTypeFormatter: int getRememberedPosition()>
SOURCE|<android.os.INetworkManagementService$Stub$Proxy: android.net.InterfaceConfiguration getInterfaceConfig(java.lang.String)>
SOURCE|<android.database.MatrixCursor: int getCount()>
SOURCE|<org.apache.harmony.xnet.provider.jsse.SSLRecordProtocol: int getRecordSize(int)>
SOURCE|<com.android.internal.os.BatteryStatsImpl$Uid: android.os.BatteryStats$Uid$Pid getPidStatsLocked(int)>
SOURCE|<android.app.ActivityThread: android.os.Handler getHandler()>
SOURCE|<com.android.browser.BrowserHistoryPage$HistoryChildWrapper: java.lang.Object getItem(int)>
SOURCE|<com.android.internal.telephony.UUSInfo: int getType()>
SOURCE|<com.android.gallery3d.ui.PopupList$ItemDataAdapter: int getCount()>
SOURCE|<java.time.Period: java.util.List getUnits()>
SOURCE|<com.android.launcher2.PagedViewCellLayout: int getCellCountY()>
SOURCE|<org.apache.harmony.xml.dom.DocumentImpl: short getNodeType()>
SOURCE|<org.apache.harmony.xnet.provider.jsse.SSLEngineImpl: java.lang.Runnable getDelegatedTask()>
SOURCE|<android.app.admin.DeviceAdminInfo: java.lang.CharSequence loadLabel(android.content.pm.PackageManager)>
SOURCE|<java.lang.ClassLoader: java.net.URL findResource(java.lang.String)>
SOURCE|<com.android.bluetooth.hfp.HeadsetService: java.util.List getConnectedDevices()>
SOURCE|<android.view.View: android.view.AccessibilityIterators$TextSegmentIterator getIteratorForGranularity(int)>
SOURCE|<java.security.IdentityScope: java.security.IdentityScope getSystemScope()>
SOURCE|<com.android.internal.widget.multiwaveview.PointCloud$GlowManager: float getAlpha()>
SOURCE|<com.google.android.picasasync.UploadTaskEntry: long getBytesUploaded()>
SOURCE|<com.android.bluetooth.hdp.HealthService$BluetoothHealthBinder: android.os.ParcelFileDescriptor getMainChannelFd(android.bluetooth.BluetoothDevice,android.bluetooth.BluetoothHealthAppConfiguration)>
SOURCE|<android.content.ISyncContext$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
SOURCE|<android.sax.Children: android.sax.Element get(java.lang.String,java.lang.String)>
SOURCE|<com.android.systemui.statusbar.tablet.TabletStatusBar: android.content.Context getContext()>
SOURCE|<android.widget.TextView: int getExtendedPaddingTop()>
SOURCE|<gov.nist.javax.sip.header.SIPHeaderList: gov.nist.javax.sip.header.SIPHeader remove(int)>
SOURCE|<com.android.mms.model.MediaModel: int getSeekTo()>
SOURCE|<org.kxml2.io.KXmlParser: java.lang.String getPrefix()>
SOURCE|<com.android.server.am.ActivityManagerService: android.content.Intent createAppErrorIntentLocked(com.android.server.am.ProcessRecord,long,android.app.ApplicationErrorReport$CrashInfo)>
SOURCE|<android.webkit.WebSettings: android.webkit.WebSettings$ZoomDensity getDefaultZoom()>
SOURCE|<gov.nist.javax.sip.stack.MessageProcessor: gov.nist.javax.sip.ListeningPointImpl getListeningPoint()>
SOURCE|<android.location.Address: java.lang.String getFeatureName()>
SOURCE|<java.text.DecimalFormatSymbols: char getPercent()>
SOURCE|<android.preference.Preference: int getLayoutResource()>
SOURCE|<android.app.WallpaperInfo: android.graphics.drawable.Drawable loadIcon(android.content.pm.PackageManager)>
SOURCE|<com.android.contacts.ContactsActivity: java.lang.Object getSystemService(java.lang.String)>
SOURCE|<android.view.TextureView: android.graphics.Bitmap getBitmap(android.graphics.Bitmap)>
SOURCE|<org.apache.james.mime4j.BodyDescriptor: java.lang.String getBoundary()>
SOURCE|<android.renderscript.Sampler: android.renderscript.Sampler$Value getWrapT()>
SOURCE|<android.webkit.WebSettings: boolean getJavaScriptCanOpenWindowsAutomatically()>
SOURCE|<com.android.mms.transaction.TransactionSettings: java.lang.String getProxyAddress()>
SOURCE|<android.app.Activity: java.lang.CharSequence getTitle()>
SOURCE|<java.time.chrono.HijrahChronology: int getMinimumYear()>
SOURCE|<com.android.browser.view.PieItem: float getAlpha()>
SOURCE|<android.media.MediaPlayer$TrackInfo: int getTrackType()>
SOURCE|<org.apache.http.impl.io.IdentityInputStream: int read()>
SOURCE|<android.text.Layout: int getLineAscent(int)>
SOURCE|<javax.xml.transform.sax.SAXResult: org.xml.sax.ContentHandler getHandler()>
SOURCE|<android.media.AudioSystem: java.lang.String getDeviceName(int)>
SOURCE|<java.net.Socket: int getSoLinger()>
SOURCE|<java.time.OffsetTime: int getSecond()>
SOURCE|<android.renderscript.Matrix2f: float[] getArray()>
SOURCE|<android.view.IInputFilterHost$Stub: android.os.IBinder asBinder()>
SOURCE|<com.android.calendar.CalendarViewAdapter: int getViewTypeCount()>
SOURCE|<android.content.ContextWrapper: android.content.res.AssetManager getAssets()>
SOURCE|<android.graphics.drawable.ColorDrawable: int getOpacity()>
SOURCE|<org.apache.harmony.xml.dom.DOMConfigurationImpl$5: java.lang.Object get(org.apache.harmony.xml.dom.DOMConfigurationImpl)>
SOURCE|<android.net.sip.SipProfile: javax.sip.address.SipURI getUri()>
SOURCE|<com.android.mms.ui.MessageListItem: com.android.mms.ui.MessageItem getMessageItem()>
SOURCE|<com.google.common.collect.AbstractSortedSetMultimap: java.util.Collection get(java.lang.Object)>
SOURCE|<com.android.org.bouncycastle.asn1.ASN1Set: com.android.org.bouncycastle.asn1.ASN1SetParser parser()>
SOURCE|<java.text.NumberFormat: java.text.NumberFormat getCurrencyInstance()>
SOURCE|<java.security.cert.CertPathValidatorException: java.security.cert.CertPath getCertPath()>
SOURCE|<android.support.v4.view.MotionEventCompat$EclairMotionEventVersionImpl: float getX(android.view.MotionEvent,int)>
SOURCE|<com.android.internal.telephony.PhoneBase: com.android.internal.telephony.test.SimulatedRadioControl getSimulatedRadioControl()>
SOURCE|<java.net.HttpURLConnection: java.security.Permission getPermission()>
SOURCE|<android.webkit.CacheManager$CacheResult: java.lang.String getEncoding()>
SOURCE|<com.google.android.mms.pdu.ReadRecInd: int getReadStatus()>
SOURCE|<android.webkit.WebViewClassic$Factory: android.webkit.WebViewDatabase getWebViewDatabase(android.content.Context)>
SOURCE|<android.net.INetworkStatsSession$Stub$Proxy: android.net.NetworkStatsHistory getHistoryForNetwork(android.net.NetworkTemplate,int)>
SOURCE|<android.media.MediaPlayer: int getIntParameter(int)>
SOURCE|<com.android.launcher2.PagedView: int getNextPage()>
SOURCE|<android.widget.ProgressBar: int getProgress()>
SOURCE|<com.android.bluetooth.btservice.RemoteDevices$DeviceProperties: short getRssi()>
SOURCE|<android.location.Criteria: int getPowerRequirement()>
SOURCE|<com.android.server.am.ActivityManagerService: android.content.ComponentName getCallingActivity(android.os.IBinder)>
SOURCE|<org.apache.http.entity.BufferedHttpEntity: java.io.InputStream getContent()>
SOURCE|<java.lang.String: void getChars(int,int,char[],int)>
SOURCE|<org.apache.harmony.security.utils.ObjectIdentifier: java.lang.Object getGroup()>
SOURCE|<com.android.internal.os.ProcessStats: int getLastIoWaitTime()>
SOURCE|<android.os.Handler: android.os.Looper getLooper()>
SOURCE|<libcore.icu.NativeDecimalFormat: int getMinimumFractionDigits()>
SOURCE|<gov.nist.core.MultiValueMapImpl: java.lang.Object get(java.lang.Object)>
SOURCE|<android.os.ICancellationSignal$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
SOURCE|<com.android.internal.telephony.ITelephony$Stub$Proxy: int getCdmaEriIconMode()>
SOURCE|<android.text.method.LinkMovementMethod: android.text.method.MovementMethod getInstance()>
SOURCE|<com.android.org.bouncycastle.asn1.x509.X509NameEntryConverter: com.android.org.bouncycastle.asn1.ASN1Primitive convertHexEncoded(java.lang.String,int)>
SOURCE|<com.android.browser.homepages.HomeProvider: java.lang.String getType(android.net.Uri)>
SOURCE|<com.android.contacts.model.dataitem.DataItem: com.android.contacts.model.RawContact getRawContact()>
SOURCE|<java.net.PasswordAuthentication: char[] getPassword()>
SOURCE|<android.app.backup.RestoreSession: int restoreAll(long,android.app.backup.RestoreObserver)>
SOURCE|<android.media.RemoteControlClient: android.app.PendingIntent getRcMediaIntent()>
SOURCE|<android.view.SurfaceView$4: android.view.Surface getSurface()>
SOURCE|<android.view.AccessibilityIterators$AbstractTextSegmentIterator: int[] getRange(int,int)>
SOURCE|<java.nio.MappedByteBufferAdapter: double getDouble()>
SOURCE|<android.view.InputDevice: android.view.InputDevice getDevice(int)>
SOURCE|<com.android.browser.BrowserBookmarksAdapter: com.android.browser.BrowserBookmarksAdapterItem getRowObject(android.database.Cursor,com.android.browser.BrowserBookmarksAdapterItem)>
SOURCE|<android.gesture.GestureLibrary: java.util.ArrayList recognize(android.gesture.Gesture)>
SOURCE|<com.android.launcher2.LauncherApplication: com.android.launcher2.LauncherModel getModel()>
SOURCE|<com.android.internal.telephony.WspTypeDecoder: int getDecodedDataLength()>
SOURCE|<com.android.i18n.phonenumbers.NumberParseException: com.android.i18n.phonenumbers.NumberParseException$ErrorType getErrorType()>
SOURCE|<java.text.Collator: java.util.Locale[] getAvailableLocales()>
SOURCE|<android.widget.ScrollView: float getTopFadingEdgeStrength()>
SOURCE|<java.security.cert.CertificateRevokedException: java.util.Map getExtensions()>
SOURCE|<com.android.gallery3d.exif.ExifTag: int getOffset()>
SOURCE|<com.android.server.net.NetworkStatsRecorder: com.android.server.net.NetworkStatsCollection getOrLoadCompleteLocked()>
SOURCE|<android.bluetooth.BluetoothTetheringDataTracker: android.net.LinkCapabilities getLinkCapabilities()>
SOURCE|<android.view.animation.AnimationSet: boolean getTransformation(long,android.view.animation.Transformation)>
SOURCE|<javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManagerFactory getInstance(java.lang.String)>
SOURCE|<com.android.server.connectivity.Tethering: int[] getUpstreamIfaceTypes()>
SOURCE|<java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject: int getWaitQueueLength()>
SOURCE|<android.util.AtomicFile: byte[] readFully()>
SOURCE|<com.android.calendar.EventInfoFragment: long getSupportedEventTypes()>
SOURCE|<com.android.launcher2.CellLayout: int getWidthGap()>
SOURCE|<android.content.ContentQueryMap: java.util.Map getRows()>
SOURCE|<org.apache.harmony.xml.dom.DOMConfigurationImpl$8: java.lang.Object get(org.apache.harmony.xml.dom.DOMConfigurationImpl)>
SOURCE|<com.coremedia.iso.boxes.fragment.TrackRunBox: java.util.List getEntries()>
SOURCE|<com.android.internal.telephony.cdma.RuimRecords: java.lang.String getCdmaMin()>
SOURCE|<com.coremedia.iso.boxes.SampleToChunkBox$Entry: long getSamplesPerChunk()>
SOURCE|<android.telephony.CellInfoLte: android.telephony.CellIdentityLte getCellIdentity()>
SOURCE|<com.android.internal.telephony.PhoneProxy: boolean getUnitTestMode()>
SOURCE|<com.android.internal.telephony.cdma.RuimSmsInterfaceManager: java.util.List access$200(com.android.internal.telephony.cdma.RuimSmsInterfaceManager)>
SOURCE|<android.filterpacks.base.RetargetFilter: android.filterfw.core.FrameFormat getOutputFormat(java.lang.String,android.filterfw.core.FrameFormat)>
SOURCE|<android.animation.ValueAnimator: int getCurrentAnimationsCount()>
SOURCE|<com.android.internal.telephony.gsm.GsmCallTracker: com.android.internal.telephony.gsm.GsmConnection getConnectionByIndex(com.android.internal.telephony.gsm.GsmCall,int)>
SOURCE|<android.net.UrlQuerySanitizer: boolean getAllowUnregisteredParamaters()>
SOURCE|<com.android.contacts.preference.ContactsPreferences: int getDefaultDisplayOrder()>
SOURCE|<com.android.contacts.model.RawContactModifier: com.android.contacts.model.account.AccountType$EditType getCurrentType(com.android.contacts.model.RawContactDelta$ValuesDelta,com.android.contacts.model.dataitem.DataKind)>
SOURCE|<android.view.ActionMode: java.lang.Object getTag()>
SOURCE|<com.android.contacts.model.account.ExchangeAccountType: com.android.contacts.model.dataitem.DataKind addDataKindEmail(android.content.Context)>
SOURCE|<android.app.IUserSwitchObserver$Stub: android.os.IBinder asBinder()>
SOURCE|<org.xml.sax.SAXException: java.lang.Throwable getCause()>
SOURCE|<com.android.email.SecurityPolicy: android.app.admin.DevicePolicyManager getDPM()>
SOURCE|<com.android.server.wm.WindowManagerService: com.android.server.wm.DisplayContent getDisplayContentLocked(int)>
SOURCE|<org.apache.harmony.xnet.provider.jsse.OpenSSLServerSocketImpl: java.lang.String[] getSupportedCipherSuites()>
SOURCE|<java.security.spec.RSAOtherPrimeInfo: java.math.BigInteger getExponent()>
SOURCE|<libcore.net.http.HttpsURLConnectionImpl: java.util.Map getRequestProperties()>
SOURCE|<com.android.videoeditor.service.MovieTransition: int getSlidingDirection()>
SOURCE|<java.security.cert.LDAPCertStoreParameters: java.lang.String getServerName()>
SOURCE|<java.lang.Daemons$Daemon: java.lang.StackTraceElement[] getStackTrace()>
SOURCE|<android.view.View: java.util.ArrayList getFocusables(int)>
SOURCE|<android.content.pm.IPackageManager$Stub$Proxy: java.util.List queryInstrumentation(java.lang.String,int)>
SOURCE|<java.io.Reader: long skip(long)>
SOURCE|<com.android.internal.telephony.gsm.GsmServiceStateTracker: com.android.internal.telephony.Phone getPhone()>
SOURCE|<javax.crypto.Mac: byte[] doFinal(byte[])>
SOURCE|<gov.nist.core.GenericObjectList: java.lang.String debugDump()>
SOURCE|<com.android.systemui.recent.RecentTasksLoader: com.android.systemui.recent.TaskDescription loadFirstTask()>
SOURCE|<com.google.common.collect.MapMakerInternalMap$WriteThroughEntry: java.lang.Object getValue()>
SOURCE|<android.speech.tts.ITextToSpeechService$Stub$Proxy: java.lang.String[] getLanguage()>
SOURCE|<android.graphics.Color: int parseColor(java.lang.String)>
SOURCE|<com.android.contacts.detail.ContactDetailUpdatesFragment: int getFirstListItemOffset()>
SOURCE|<com.android.internal.telephony.RIL: void getSmscAddress(android.os.Message)>
SOURCE|<org.kxml2.io.KXmlParser: java.lang.String getNamespacePrefix(int)>
SOURCE|<com.google.android.mms.pdu.ReadRecInd: byte[] getMessageId()>
SOURCE|<android.view.View: int getDrawingCacheQuality()>
SOURCE|<android.support.v4.view.PagerAdapter: java.lang.CharSequence getPageTitle(int)>
SOURCE|<org.apache.http.impl.conn.tsccm.ThreadSafeClientConnManager: int getMaxTotal()>
SOURCE|<android.net.Uri$AbstractHierarchicalUri: java.lang.String getLastPathSegment()>
SOURCE|<android.app.ContextImpl: java.lang.String getPackageCodePath()>
SOURCE|<android.content.SyncStorageEngine: android.content.SyncStorageEngine$DayStats[] getDayStatistics()>
SOURCE|<com.android.org.bouncycastle.asn1.ASN1InputStream: int getLimit()>
SOURCE|<android.animation.ValueAnimator: long getCurrentPlayTime()>
SOURCE|<com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata: com.android.i18n.phonenumbers.Phonemetadata$PhoneNumberDesc getVoicemail()>
SOURCE|<android.test.mock.MockPackageManager: android.graphics.drawable.Drawable getActivityLogo(android.content.Intent)>
SOURCE|<android.graphics.ImageFormat: int getBitsPerPixel(int)>
SOURCE|<android.provider.Telephony$Sms: android.database.Cursor query(android.content.ContentResolver,java.lang.String[],java.lang.String,java.lang.String)>
SOURCE|<com.android.internal.view.IInputMethodManager$Stub$Proxy: android.view.inputmethod.InputMethodSubtype getLastInputMethodSubtype()>
SOURCE|<com.android.server.am.ActivityManagerService: android.app.IActivityManager$ContentProviderHolder getContentProvider(android.app.IApplicationThread,java.lang.String,int,boolean)>
SOURCE|<gov.nist.javax.sip.stack.TCPMessageChannel: int getPeerPort()>
SOURCE|<gov.nist.javax.sip.header.Via: java.lang.String getBranch()>
SOURCE|<android.bluetooth.BluetoothHealthAppConfiguration: java.lang.String getName()>
SOURCE|<com.android.i18n.phonenumbers.PhoneNumberUtil: com.android.i18n.phonenumbers.Phonenumber$PhoneNumber getExampleNumberForType(java.lang.String,com.android.i18n.phonenumbers.PhoneNumberUtil$PhoneNumberType)>
SOURCE|<com.android.internal.telephony.sip.SipPhone: java.lang.String getEsn()>
SOURCE|<com.android.emailcommon.service.IEmailService$Stub$Proxy: android.os.Bundle autoDiscover(java.lang.String,java.lang.String)>
SOURCE|<com.android.exchange.EasOutboxService$SendMailParser: int getStatus()>
SOURCE|<java.sql.Date: int getSeconds()>
SOURCE|<java.lang.Math: int getExponent(double)>
SOURCE|<android.app.PendingIntent: android.content.IntentSender getIntentSender()>
SOURCE|<com.android.inputmethod.latin.BinaryDictionaryGetter: java.lang.String getTempFileName(java.lang.String,android.content.Context)>
SOURCE|<com.android.camera.CameraScreenNail: float getAlpha()>
SOURCE|<android.app.ApplicationPackageManager: android.graphics.drawable.Drawable getActivityLogo(android.content.Intent)>
SOURCE|<java.net.Socket: java.io.InputStream getInputStream()>
SOURCE|<com.android.gallery3d.filtershow.imageshow.ImageShow: android.graphics.Rect getDisplayedImageBounds()>
SOURCE|<gov.nist.javax.sip.stack.TLSMessageChannel: int getPeerPort()>
SOURCE|<gov.nist.javax.sip.header.ParametersHeader: gov.nist.core.NameValueList getParameters()>
SOURCE|<java.security.KeyFactory: java.security.KeyFactory getInstance(java.lang.String,java.lang.String)>
SOURCE|<com.android.server.am.ActivityManagerService: java.util.List getProcessesInErrorState()>
SOURCE|<com.coremedia.iso.boxes.MovieHeaderBox: double getRate()>
SOURCE|<javax.net.ssl.SSLContext: java.lang.String getProtocol()>
SOURCE|<android.net.sip.SimpleSessionDescription$Fields: java.lang.String getEncryptionKey()>
SOURCE|<android.app.ActivityOptions: int getCustomEnterResId()>
SOURCE|<android.hardware.usb.UsbDevice: int getInterfaceCount()>
SOURCE|<com.android.contacts.vcard.VCardService$MyBinder: com.android.contacts.vcard.VCardService getService()>
SOURCE|<gov.nist.javax.sip.header.SIPDate: java.util.Calendar getJavaCal()>
SOURCE|<android.widget.AbsSpinner: int getCount()>
SOURCE|<android.text.Layout: float getPrimaryHorizontal(int)>
SOURCE|<com.android.internal.view.InputConnectionWrapper: java.lang.CharSequence getTextBeforeCursor(int,int)>
SOURCE|<android.text.BoringLayout: int getEllipsisCount(int)>
SOURCE|<android.content.ContextWrapper: java.lang.ClassLoader getClassLoader()>
SOURCE|<android.view.View: boolean getFilterTouchesWhenObscured()>
SOURCE|<org.apache.harmony.xnet.provider.jsse.OpenSSLDSAParams: java.math.BigInteger getX()>
SOURCE|<android.telephony.SmsCbLocation: java.lang.String getPlmn()>
SOURCE|<android.renderscript.AllocationAdapter: int getID(android.renderscript.RenderScript)>
SOURCE|<com.android.nfc.ndefpush.NdefPushProtocol: byte[] toByteArray()>
SOURCE|<org.apache.harmony.xnet.provider.jsse.CipherSuite: org.apache.harmony.xnet.provider.jsse.CipherSuite getByCode(byte,byte)>
SOURCE|<android.filterfw.core.Filter: int getSleepDelay()>
SOURCE|<com.android.gallery3d.data.MediaObject: android.net.Uri getPlayUri()>
SOURCE|<com.android.internal.net.VpnConfig: android.app.PendingIntent getIntentForStatusPanel(android.content.Context,com.android.internal.net.VpnConfig)>
SOURCE|<java.time.format.DateTimeFormatter: java.time.temporal.TemporalAccessor parseResolved0(java.lang.CharSequence,java.text.ParsePosition)>
SOURCE|<android.database.sqlite.SQLiteProgram: android.database.sqlite.SQLiteDatabase getDatabase()>
SOURCE|<com.android.internal.app.ResolverActivity$ResolveListAdapter: int getCount()>
SOURCE|<com.android.org.bouncycastle.asn1.DefiniteLengthInputStream: byte[] toByteArray()>
SOURCE|<com.android.camera.ComboPreferences: android.content.SharedPreferences getGlobal()>
SOURCE|<org.apache.harmony.xml.dom.DocumentTypeImpl: java.lang.String getTextContent()>
SOURCE|<com.android.calendar.selectcalendars.SelectVisibleCalendarsFragment: long getSupportedEventTypes()>
SOURCE|<com.android.browser.preferences.WebsiteSettingsFragment$Site: int getFeatureByIndex(int)>
SOURCE|<com.coremedia.iso.boxes.SampleTableBox: com.coremedia.iso.boxes.SampleDescriptionBox getSampleDescriptionBox()>
SOURCE|<android.util.EventLog$Event: java.lang.Object getData()>
SOURCE|<org.apache.james.mime4j.field.datetime.parser.DateTimeParser$Time: int getHour()>
SOURCE|<org.xml.sax.helpers.NamespaceSupport$Context: java.lang.String getURI(java.lang.String)>
SOURCE|<android.webkit.CacheManager$CacheResult: java.lang.String getLastModified()>
SOURCE|<libcore.icu.RuleBasedCollatorICU: libcore.icu.CollationElementIteratorICU getCollationElementIterator(java.text.CharacterIterator)>
SOURCE|<android.graphics.drawable.ShapeDrawable: int getOpacity()>
SOURCE|<android.widget.Spinner$DropDownAdapter: android.view.View getDropDownView(int,android.view.View,android.view.ViewGroup)>
SOURCE|<java.util.Calendar: java.lang.String toString()>
SOURCE|<android.content.BroadcastReceiver: java.lang.String getResultData()>
SOURCE|<com.android.contacts.list.LegacyContactListAdapter: android.view.View newView(android.content.Context,int,android.database.Cursor,int,android.view.ViewGroup)>
SOURCE|<android.view.MotionEvent: float getRawX()>
SOURCE|<java.util.ServiceLoader: void reload()>
SOURCE|<android.hardware.usb.UsbAccessory: java.lang.String getDescription()>
SOURCE|<android.view.View: int getDrawingCacheBackgroundColor()>
SOURCE|<android.text.method.MetaKeyKeyListener: int getMetaState(long)>
SOURCE|<com.google.elements.Utils: java.lang.String getDeviceId()>
SOURCE|<android.util.NtpTrustedTime: long getCachedNtpTimeReference()>
SOURCE|<com.android.email.widget.EmailWidgetLoader$WidgetCursor: java.lang.String getAccountName()>
SOURCE|<android.media.MediaRouter: android.media.MediaRouter$RouteCategory getSystemAudioCategory()>
SOURCE|<com.android.camera.MosaicFrameProcessor: byte[] getFinalMosaicNV21()>
SOURCE|<android.content.ContentValues: java.lang.String getAsString(java.lang.String)>
SOURCE|<com.android.mms.transaction.NotificationTransaction: int getType()>
SOURCE|<android.app.WallpaperManager$FastBitmapDrawable: int getIntrinsicHeight()>
SOURCE|<com.android.org.bouncycastle.asn1.BEROctetString: byte[] getOctets()>
SOURCE|<gov.nist.javax.sip.ListeningPointImpl: java.lang.String getKey()>
SOURCE|<com.android.org.bouncycastle.asn1.ASN1Primitive: com.android.org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()>
SOURCE|<android.view.View: int getWindowAttachCount()>
SOURCE|<org.apache.harmony.xml.dom.DocumentImpl: org.w3c.dom.Element getElementById(java.lang.String)>
SOURCE|<android.app.ActivityManager: int getCurrentUser()>
SOURCE|<com.android.internal.telephony.PhoneProxy: java.lang.String getCdmaMin()>
SOURCE|<android.media.videoeditor.MediaArtistNativeHelper: int getMediaItemFileType(int)>
SOURCE|<com.android.internal.policy.impl.keyguard.PagedView: int getPageCount()>
SOURCE|<android.net.wifi.IWifiManager$Stub$Proxy: android.net.wifi.WifiConfiguration getWifiApConfiguration()>
SOURCE|<com.android.inputmethod.keyboard.internal.KeyStylesSet$DeclaredKeyStyle: int getInt(android.content.res.TypedArray,int,int)>
SOURCE|<android.view.animation.Animation: long getStartOffset()>
SOURCE|<org.apache.http.impl.auth.NTLMScheme: java.lang.String getParameter(java.lang.String)>
SOURCE|<android.renderscript.Script$FieldBase: android.renderscript.Allocation getAllocation()>
SOURCE|<android.test.mock.MockResources: android.graphics.drawable.Drawable getDrawable(int)>
SOURCE|<android.net.http.RequestQueue: android.net.http.Request getRequest(org.apache.http.HttpHost)>
SOURCE|<gov.nist.core.net.DefaultNetworkLayer: javax.net.ssl.SSLSocket createSSLSocket(java.net.InetAddress,int,java.net.InetAddress)>
SOURCE|<android.graphics.Typeface: int getStyle()>
SOURCE|<com.android.mms.dom.smil.ElementTimeImpl: org.w3c.dom.smil.TimeList getEnd()>
SOURCE|<com.android.deskclock.AlarmClock$AlarmItemAdapter: android.os.Bundle getPreviousDaysOfWeekMap()>
SOURCE|<org.apache.http.impl.cookie.CookieSpecBase: java.lang.String getDefaultPath(org.apache.http.cookie.CookieOrigin)>
SOURCE|<com.android.contacts.list.ContactTileListFragment$2: int getApproximateTileWidth()>
SOURCE|<org.apache.harmony.luni.lang.reflect.GenericSignatureParser: java.lang.reflect.Type parseClassTypeSignature()>
SOURCE|<android.util.SparseArray: java.lang.Object get(int)>
SOURCE|<com.android.gallery3d.exif.CountedDataInputStream: int getReadByteCount()>
SOURCE|<libcore.util.ZoneInfo: int getOffset(int,int,int,int,int,int)>
SOURCE|<android.app.ActivityManagerProxy: boolean isUserRunning(int,boolean)>
SOURCE|<com.android.emailcommon.internet.MimeUtility: java.lang.String getHeaderParameter(java.lang.String,java.lang.String)>
SOURCE|<org.apache.harmony.xnet.provider.jsse.SSLParametersImpl: javax.net.ssl.X509TrustManager getTrustManager()>
SOURCE|<com.android.org.bouncycastle.asn1.x500.AttributeTypeAndValue: com.android.org.bouncycastle.asn1.ASN1ObjectIdentifier getType()>
SOURCE|<com.android.internal.os.BatteryStatsImpl$Timer: int getCountLocked(int)>
SOURCE|<android.preference.Preference: java.lang.CharSequence getSummary()>
SOURCE|<com.android.contacts.model.AccountTypeManager: com.android.contacts.model.account.AccountType getAccountTypeForAccount(com.android.contacts.model.account.AccountWithDataSet)>
SOURCE|<com.android.internal.policy.impl.PhoneWindowManager: int finishPostLayoutPolicyLw()>
SOURCE|<com.android.email.service.AttachmentDownloadService$AccountManagerStub: int getNumberOfAccounts()>
SOURCE|<android.test.mock.MockResources: void getValue(int,android.util.TypedValue,boolean)>
SOURCE|<android.inputmethodservice.InputMethodService: int getMaxWidth()>
SOURCE|<com.android.server.pm.UserManagerService: int getUserHandle(int)>
SOURCE|<android.view.PointerIcon: android.view.PointerIcon getDefaultIcon(android.content.Context)>
SOURCE|<com.android.inputmethod.compat.CompatUtils: java.lang.reflect.Method getMethod(java.lang.Class,java.lang.String,java.lang.Class[])>
SOURCE|<java.time.chrono.ThaiBuddhistDate: java.time.chrono.ThaiBuddhistChronology getChronology()>
SOURCE|<com.android.contacts.activities.NonPhoneActivity$NonPhoneDialogFragment: android.app.Dialog onCreateDialog(android.os.Bundle)>
SOURCE|<com.android.gallery3d.ui.GLView: int getWidth()>
SOURCE|<com.android.internal.telephony.PhoneProxy: com.android.internal.telephony.Phone getActivePhone()>
SOURCE|<com.android.i18n.phonenumbers.Phonenumber$PhoneNumber: com.android.i18n.phonenumbers.Phonenumber$PhoneNumber$CountryCodeSource getCountryCodeSource()>
SOURCE|<android.view.MotionEvent: int getActionMasked()>
SOURCE|<com.android.providers.contacts.PhotoProcessor: android.graphics.Bitmap getDisplayPhoto()>
SOURCE|<com.adobe.xmp.options.SerializeOptions: boolean getOmitVersionAttribute()>
SOURCE|<android.text.method.HideReturnsTransformationMethod: char[] getReplacement()>
SOURCE|<org.kxml2.io.KXmlParser: java.lang.String getSystemId()>
SOURCE|<android.widget.LinearLayout: android.graphics.drawable.Drawable getDividerDrawable()>
SOURCE|<com.android.gallery3d.filtershow.imageshow.ImageShow: com.android.gallery3d.filtershow.PanelController getPanelController()>
SOURCE|<com.android.internal.telephony.ATResponseParser: java.lang.String nextString()>
SOURCE|<com.android.gallery3d.filtershow.imageshow.ImageGeometry: android.graphics.RectF unrotatedCropBounds()>
SOURCE|<com.android.gallery3d.filtershow.imageshow.ImageSlave: com.android.gallery3d.filtershow.imageshow.ImageShow getMaster()>
SOURCE|<android.media.MediaRouter$RouteGroup: int getRouteCount()>
SOURCE|<com.android.org.bouncycastle.util.encoders.Hex: byte[] decode(byte[])>
SOURCE|<java.security.MessageDigest: java.security.Provider getProvider()>
SOURCE|<org.apache.http.protocol.BasicHttpProcessor: int getRequestInterceptorCount()>
SOURCE|<android.app.Fragment: android.app.Fragment getTargetFragment()>
SOURCE|<android.view.MotionEvent: int getMetaState()>
SOURCE|<java.util.UUID: long getMostSignificantBits()>
SOURCE|<android.app.Fragment: int getId()>
SOURCE|<java.net.Inet6Address: java.net.NetworkInterface getScopedInterface()>
SOURCE|<com.android.server.input.InputManagerService: android.hardware.input.KeyboardLayout[] getKeyboardLayouts()>
SOURCE|<com.android.providers.calendar.SQLiteContentProvider: int bulkInsert(android.net.Uri,android.content.ContentValues[])>
SOURCE|<android.graphics.drawable.BitmapDrawable: int getIntrinsicHeight()>
SOURCE|<com.android.deskclock.widget.multiwaveview.TargetDrawable: float getPositionX()>
SOURCE|<gov.nist.javax.sip.header.ims.SecurityAgree: int getPortClient()>
SOURCE|<libcore.io.ForwardingOs: int getsockoptByte(java.io.FileDescriptor,int,int)>
SOURCE|<android.telephony.CellSignalStrengthCdma: int getCdmaDbm()>
SOURCE|<android.view.animation.Transformation: int getTransformationType()>
SOURCE|<android.content.pm.IPackageManager$Stub$Proxy: android.content.pm.ServiceInfo getServiceInfo(android.content.ComponentName,int,int)>
SOURCE|<java.text.DecimalFormatSymbols: char getMonetaryDecimalSeparator()>
SOURCE|<com.android.email.mail.store.ImapStore: java.lang.String getImapId(android.content.Context,java.lang.String,java.lang.String,java.lang.String)>
SOURCE|<org.apache.harmony.security.x509.TBSCertificate: byte[] getEncoded()>
SOURCE|<com.android.internal.view.menu.MenuItemImpl: java.lang.String getShortcutLabel()>
SOURCE|<com.android.contacts.model.account.BaseAccountType: com.android.contacts.model.dataitem.DataKind addDataKindPhoto(android.content.Context)>
SOURCE|<android.os.Environment: java.io.File getEmulatedStorageSource(int)>
SOURCE|<android.view.textservice.SpellCheckerInfo: android.content.ComponentName getComponent()>
SOURCE|<android.media.audiofx.BassBoost: boolean getStrengthSupported()>
SOURCE|<android.widget.AdapterView: int getCount()>
SOURCE|<gov.nist.core.ThreadAuditor$ThreadHandle: java.lang.Thread getThread()>
SOURCE|<android.widget.ListPopupWindow: android.widget.ListView getListView()>
SOURCE|<com.android.contacts.socialwidget.SocialWidgetSettings: com.android.contacts.socialwidget.SocialWidgetSettings getInstance()>
SOURCE|<com.googlecode.mp4parser.AbstractBox: com.coremedia.iso.IsoFile getIsoFile()>
SOURCE|<android.graphics.drawable.LayerDrawable: int getChangingConfigurations()>
SOURCE|<org.apache.harmony.xnet.provider.jsse.SSLRecordProtocol: org.apache.harmony.xnet.provider.jsse.SSLSessionImpl getSession()>
SOURCE|<android.app.LoadedApk$ServiceDispatcher: android.app.IServiceConnection getIServiceConnection()>
SOURCE|<com.coremedia.iso.IsoFile: com.coremedia.iso.IsoFile getIsoFile()>
SOURCE|<com.google.android.mms.pdu.PduBody: com.google.android.mms.pdu.PduPart getPartByFileName(java.lang.String)>
SOURCE|<com.googlecode.mp4parser.AbstractFullBox: int getFlags()>
SOURCE|<com.android.vcard.VCardEntry: java.lang.String getDisplayName()>
SOURCE|<android.view.KeyEvent: int getKeyCode()>
SOURCE|<com.android.exchange.utility.CalendarUtilities: int getLong(byte[],int)>
SOURCE|<com.android.videoeditor.service.VideoEditorProject$Download: java.lang.String getFilename()>
SOURCE|<com.android.contacts.model.Contact: java.lang.String getDirectoryType()>
SOURCE|<com.android.providers.contacts.ProfileProvider: android.database.sqlite.SQLiteOpenHelper getDatabaseHelper(android.content.Context)>
SOURCE|<android.telephony.gsm.SmsMessage: java.lang.String getServiceCenterAddress()>
SOURCE|<java.util.Date: int getHours()>
SOURCE|<android.graphics.Region: android.graphics.Path getBoundaryPath()>
SOURCE|<android.telephony.NeighboringCellInfo: int getCid()>
SOURCE|<android.widget.TextView: float getShadowDx()>
SOURCE|<android.support.v4.view.PagerAdapter: android.os.Parcelable saveState()>
SOURCE|<com.android.internal.os.BatteryStatsImpl: long getRadioDataUptime()>
SOURCE|<com.android.internal.telephony.UiccCardApplication: boolean getIccLockEnabled()>
SOURCE|<android.graphics.drawable.DrawableContainer$DrawableContainerState: int getEnterFadeDuration()>
SOURCE|<com.android.contacts.model.RawContactDelta$ValuesDelta: java.lang.Long getId()>
SOURCE|<android.media.videoeditor.Effect: long getStartTime()>
SOURCE|<com.android.email.activity.setup.AccountCheckSettingsFragment$SecurityRequiredDialog: android.app.Dialog onCreateDialog(android.os.Bundle)>
SOURCE|<com.android.contacts.model.RawContactDelta: com.android.contacts.model.RawContactDelta$ValuesDelta getPrimaryEntry(java.lang.String)>
SOURCE|<org.apache.harmony.xnet.provider.jsse.CipherSuite: org.apache.harmony.xnet.provider.jsse.CipherSuite getByCode(byte,byte,byte)>
SOURCE|<android.accounts.AccountManagerService: android.accounts.Account[] getAccounts(java.lang.String)>
SOURCE|<android.telephony.SmsCbMessage: android.telephony.SmsCbLocation getLocation()>
SOURCE|<org.apache.harmony.xnet.provider.jsse.CertificateMessage: int getType()>
SOURCE|<com.android.bluetooth.pbap.BluetoothPbapVcardManager: int getCallHistorySize(int)>
SOURCE|<com.android.internal.telephony.cdma.CDMAPhone: java.lang.String getCdmaPrlVersion()>
SOURCE|<com.android.internal.telephony.gsm.SmsCbHeader: int getSerialNumber()>
SOURCE|<com.android.contacts.detail.ContactDetailFragment: android.content.Context getContext()>
SOURCE|<com.android.emailcommon.internet.MimeBodyPart: java.lang.String getDisposition()>
SOURCE|<org.apache.http.params.AbstractHttpParams: double getDoubleParameter(java.lang.String,double)>
SOURCE|<android.speech.tts.ITextToSpeechService$Stub$Proxy: int isLanguageAvailable(java.lang.String,java.lang.String,java.lang.String)>
SOURCE|<com.android.internal.telephony.gsm.GsmSmsCbMessage: android.telephony.SmsCbMessage createSmsCbMessage(android.telephony.SmsCbLocation,byte[][])>
SOURCE|<android.net.wifi.p2p.WifiP2pGroup: java.lang.String getPassphrase()>
SOURCE|<gov.nist.core.Token: java.lang.String getTokenValue()>
SOURCE|<android.view.ViewGroup: android.view.View findFrontmostDroppableChildAt(float,float,android.graphics.PointF)>
SOURCE|<org.apache.http.impl.client.AbstractHttpClient: org.apache.http.client.AuthenticationHandler getProxyAuthenticationHandler()>
SOURCE|<android.app.ApplicationPackageManager: android.content.pm.ResolveInfo resolveService(android.content.Intent,int)>
SOURCE|<java.text.ParsePosition: int getIndex()>
SOURCE|<android.media.AudioManager: void unloadSoundEffects()>
SOURCE|<org.apache.harmony.xnet.provider.jsse.OpenSSLSocketImpl: java.lang.String[] getEnabledCipherSuites()>
SOURCE|<java.time.LocalTime: int getSecond()>
SOURCE|<android.view.MotionEvent: long getHistoricalEventTime(int)>
SOURCE|<com.android.internal.telephony.gsm.GSMPhone: java.lang.String getImei()>
SOURCE|<com.android.mms.ui.SlideshowActivity$SmilPlayerController: int getDuration()>
SOURCE|<android.provider.Settings$Global: float getFloat(android.content.ContentResolver,java.lang.String,float)>
SOURCE|<com.android.browser.TitleBar: com.android.browser.BaseUi getUi()>
SOURCE|<org.apache.harmony.security.x509.TBSCertList$1: java.lang.Object getDecodedObject(org.apache.harmony.security.asn1.BerInputStream)>
SOURCE|<org.apache.http.conn.routing.RouteTracker: org.apache.http.HttpHost getProxyHost()>
SOURCE|<android.app.IWallpaperManager$Stub: android.os.IBinder asBinder()>
SOURCE|<android.os.ServiceManagerProxy: android.os.IBinder getService(java.lang.String)>
SOURCE|<org.apache.harmony.security.x509.CRLNumber: byte[] getEncoded()>
SOURCE|<com.android.gallery3d.data.PathMatcher: int getIntVar(int)>
SOURCE|<org.apache.harmony.xnet.provider.jsse.AbstractSessionContext: javax.net.ssl.SSLSession getSession(byte[])>
SOURCE|<com.android.exchange.adapter.ContactsSyncAdapter$ContactOperations: com.android.exchange.adapter.ContactsSyncAdapter$RowBuilder createBuilder(android.content.Entity,java.lang.String,int,java.lang.String)>
SOURCE|<android.net.sip.SipProfile: java.lang.String getSipDomain()>
SOURCE|<com.android.contacts.detail.ContactDetailViewPagerAdapter: int getCount()>
SOURCE|<org.apache.harmony.xml.dom.InnerNodeImpl: void getElementsByTagNameNS(org.apache.harmony.xml.dom.NodeListImpl,java.lang.String,java.lang.String)>
SOURCE|<com.android.deskclock.widget.multiwaveview.TargetDrawable: int getWidth()>
SOURCE|<java.security.KeyStore: void load(java.io.InputStream,char[])>
SOURCE|<com.android.deskclock.widget.multiwaveview.GlowPadView: int getSuggestedMinimumHeight()>
SOURCE|<com.google.android.picasasync.AlbumCollectorJson: java.util.Map getEntryFieldMap()>
SOURCE|<javax.crypto.spec.DESedeKeySpec: byte[] getKey()>
SOURCE|<android.support.v4.view.MotionEventCompat$BaseMotionEventVersionImpl: int getPointerId(android.view.MotionEvent,int)>
SOURCE|<android.widget.ViewAnimator: int getBaseline()>
SOURCE|<android.widget.EditText: android.text.Editable getText()>
SOURCE|<org.apache.http.conn.routing.RouteTracker: org.apache.http.conn.routing.RouteInfo$TunnelType getTunnelType()>
SOURCE|<org.apache.harmony.xnet.provider.jsse.SSLSessionImpl: java.security.Principal getPeerPrincipal()>
SOURCE|<gov.nist.javax.sip.header.extensions.References: java.util.Iterator getParameterNames()>
SOURCE|<java.util.IllegalFormatFlagsException: java.lang.String getFlags()>
SOURCE|<java.util.Optional: java.lang.Object get()>
SOURCE|<java.net.URI: java.lang.String getRawPath()>
SOURCE|<android.media.videoeditor.OverlayFrame: android.graphics.Bitmap getBitmap()>
SOURCE|<android.filterfw.core.FilterFunction: android.filterfw.core.FilterContext getContext()>
SOURCE|<com.google.android.mms.pdu.PduPart: int getCharset()>
SOURCE|<libcore.net.http.RequestHeaders: java.lang.String getTransferEncoding()>
SOURCE|<com.android.internal.telephony.cat.IconLoader: com.android.internal.telephony.cat.IconLoader getInstance(android.os.Handler,com.android.internal.telephony.IccFileHandler)>
SOURCE|<org.apache.http.impl.client.AbstractHttpClient: org.apache.http.client.RedirectHandler getRedirectHandler()>
SOURCE|<com.android.providers.contacts.ContactsProvider2: com.android.providers.contacts.ContactDirectoryManager getContactDirectoryManagerForTest()>
SOURCE|<android.net.Uri$StringUri: java.util.List getPathSegments()>
SOURCE|<com.android.internal.view.menu.BaseMenuPresenter: com.android.internal.view.menu.MenuView getMenuView(android.view.ViewGroup)>
SOURCE|<com.android.internal.telephony.cat.CatCmdMessage: com.android.internal.telephony.cat.AppInterface$CommandType getCmdType()>
SOURCE|<android.speech.tts.ITextToSpeechCallback$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
SOURCE|<com.android.org.bouncycastle.asn1.ASN1Object: byte[] getEncoded()>
SOURCE|<android.widget.TextView: int getMaxWidth()>
SOURCE|<android.view.accessibility.AccessibilityRecord: int getCurrentItemIndex()>
SOURCE|<com.android.email.activity.setup.SetupData: com.android.emailcommon.provider.Policy getPolicy()>
SOURCE|<android.media.audiofx.Virtualizer: android.media.audiofx.Virtualizer$Settings getProperties()>
SOURCE|<com.android.contacts.list.ContactTileAdapter: int getItemViewType(int)>
SOURCE|<android.net.SSLCertificateSocketFactory: java.lang.String[] getDefaultCipherSuites()>
SOURCE|<android.app.WallpaperManager: android.app.IWallpaperManager getIWallpaperManager()>
SOURCE|<org.apache.harmony.xnet.provider.jsse.OpenSSLSocketImpl: java.lang.String[] getSupportedProtocols()>
SOURCE|<android.animation.Keyframe: android.animation.TimeInterpolator getInterpolator()>
SOURCE|<android.os.CommonTimeConfig: int getClientSyncInterval()>
SOURCE|<com.android.systemui.statusbar.BaseStatusBar: android.view.View$OnLongClickListener getNotificationLongClicker()>
SOURCE|<com.google.android.picasasync.UploadTaskEntry: java.lang.String getAlbumTitle()>
SOURCE|<android.os.UEventObserver$UEvent: java.lang.String get(java.lang.String,java.lang.String)>
SOURCE|<java.security.ProtectionDomain: java.lang.ClassLoader getClassLoader()>
SOURCE|<com.google.common.collect.ComputingConcurrentHashMap$ComputingSegment: java.lang.Object getOrCompute(java.lang.Object,int,com.google.common.base.Function)>
SOURCE|<android.view.Choreographer: android.view.Choreographer getInstance()>
SOURCE|<com.android.org.bouncycastle.asn1.DERPrintableString: com.android.org.bouncycastle.asn1.DERPrintableString getInstance(java.lang.Object)>
SOURCE|<com.android.server.BackupManagerService: java.util.List allAgentPackages()>
SOURCE|<com.android.inputmethod.latin.ExpandableDictionary: java.util.ArrayList getWordsInner(com.android.inputmethod.latin.WordComposer,java.lang.CharSequence,com.android.inputmethod.keyboard.ProximityInfo)>
SOURCE|<com.android.nfc.snep.SnepMessage: com.android.nfc.snep.SnepMessage getGetRequest(int,android.nfc.NdefMessage)>
SOURCE|<javax.security.auth.callback.PasswordCallback: char[] getPassword()>
SOURCE|<javax.sip.IOExceptionEvent: int getPort()>
SOURCE|<com.android.internal.textservice.ITextServicesManager$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
SOURCE|<java.net.PlainDatagramSocketImpl: byte getTTL()>
SOURCE|<java.nio.file.Files: java.util.Set getPosixFilePermissions(java.nio.file.Path,java.nio.file.LinkOption[])>
SOURCE|<com.android.contacts.widget.PinnedHeaderListAdapter: int getPinnedHeaderCount()>
SOURCE|<android.provider.Settings$Secure: long getLong(android.content.ContentResolver,java.lang.String,long)>
SOURCE|<com.android.contacts.model.account.AccountType: android.graphics.drawable.Drawable getDisplayIcon(android.content.Context)>
SOURCE|<com.android.gallery3d.gadget.WidgetService$PhotoRVFactory: long getItemId(int)>
SOURCE|<android.text.Layout$SpannedEllipsizer: int getSpanEnd(java.lang.Object)>
SOURCE|<android.telephony.SignalStrength: int getGsmLevel()>
SOURCE|<com.google.android.mms.pdu.ReadOrigInd: long getDate()>
SOURCE|<android.widget.AlphabetIndexer: int getSectionForPosition(int)>
SOURCE|<com.android.internal.telephony.cdma.CdmaMmiCode: com.android.internal.telephony.MmiCode$State getState()>
SOURCE|<android.animation.ValueAnimator: long getFrameDelay()>
SOURCE|<android.hardware.usb.UsbInterface: int getInterfaceClass()>
SOURCE|<com.android.contacts.model.RawContactModifier: com.android.contacts.model.account.AccountType$EditType getType(com.android.contacts.model.dataitem.DataKind,int)>
SOURCE|<gov.nist.javax.sip.stack.MessageChannel: java.lang.String getHost()>
SOURCE|<android.app.ActivityManager: boolean getPackageAskScreenCompat(java.lang.String)>
SOURCE|<android.view.ViewConfiguration: int getWindowTouchSlop()>
SOURCE|<com.android.deskclock.widget.multiwaveview.TargetDrawable: int getResourceId()>
SOURCE|<com.android.exchange.adapter.MoveItemsParser: java.lang.String getNewServerId()>
SOURCE|<com.android.email.activity.MessageListItemCoordinates: int getHeight(android.view.View,boolean)>
SOURCE|<android.app.SearchableInfo: java.lang.String getSuggestSelection()>
SOURCE|<android.webkit.WebSettingsClassic: boolean getJavaScriptCanOpenWindowsAutomatically()>
SOURCE|<com.android.contacts.quickcontact.DataAction: java.lang.String getMimeType()>
SOURCE|<android.renderscript.Sampler: android.renderscript.Sampler$Value getMinification()>
SOURCE|<android.gesture.GestureOverlayView: android.gesture.Gesture getGesture()>
SOURCE|<org.apache.harmony.xml.ExpatAttributes: java.lang.String getType(java.lang.String,java.lang.String)>
SOURCE|<gov.nist.javax.sip.header.Challenge: java.lang.String getOpaque()>
SOURCE|<android.widget.TextView: int getCompoundPaddingBottom()>
SOURCE|<javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>
SOURCE|<org.apache.harmony.security.x509.DistributionPoint$1: java.lang.Object getDecodedObject(org.apache.harmony.security.asn1.BerInputStream)>
SOURCE|<android.support.v4.view.VelocityTrackerCompat: float getXVelocity(android.view.VelocityTracker,int)>
SOURCE|<android.net.Uri$HierarchicalUri: android.net.Uri$Builder buildUpon()>
SOURCE|<android.os.INetworkManagementService$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
SOURCE|<android.view.inputmethod.CompletionInfo: int getPosition()>
SOURCE|<com.android.calendar.month.SimpleWeeksAdapter: java.lang.Object getItem(int)>
SOURCE|<java.lang.Package: java.lang.annotation.Annotation[] getAnnotations()>
SOURCE|<android.hardware.display.DisplayManager: android.hardware.display.WifiDisplayStatus getWifiDisplayStatus()>
SOURCE|<java.lang.Short: java.lang.Short decode(java.lang.String)>
SOURCE|<org.apache.harmony.xml.dom.NodeImpl: java.lang.String getNodeName()>
SOURCE|<android.provider.Settings$Bookmarks: java.lang.CharSequence getLabelForFolder(android.content.res.Resources,java.lang.String)>
SOURCE|<android.text.BoringLayout: int getLineTop(int)>
SOURCE|<android.filterfw.core.ShaderProgram: android.filterfw.core.GLEnvironment getGLEnvironment()>
SOURCE|<java.security.cert.X509CertSelector: int getBasicConstraints()>
SOURCE|<android.mtp.MtpDevice: java.lang.String getDeviceName()>
SOURCE|<gov.nist.javax.sip.header.SIPHeaderList: javax.sip.header.Header getLast()>
SOURCE|<android.app.Notification$Builder: android.app.Notification getNotification()>
SOURCE|<android.net.EthernetDataTracker: int getDefaultGatewayAddr()>
SOURCE|<com.android.internal.view.BaseSurfaceHolder: android.graphics.Canvas lockCanvas()>
SOURCE|<android.test.mock.MockResources: android.content.res.XmlResourceParser getLayout(int)>
SOURCE|<gov.nist.javax.sip.stack.HopImpl: java.lang.String getHost()>
SOURCE|<java.sql.DataTruncation: int getDataSize()>
SOURCE|<com.android.mms.MmsConfig: java.lang.String getUaProfUrl()>
SOURCE|<android.hardware.Camera$Parameters: java.util.List getSupportedPreviewFrameRates()>
SOURCE|<com.android.internal.policy.impl.keyguard.PagedView: int getChildOffset(int)>
SOURCE|<gov.nist.javax.sip.header.InReplyTo: java.lang.String getCallId()>
SOURCE|<android.nfc.NdefMessage: android.nfc.NdefRecord[] getRecords()>
SOURCE|<android.telephony.CellSignalStrengthCdma: int getLevel()>
SOURCE|<com.android.contacts.vcard.ImportVCardActivity$VCardFile: java.lang.String getCanonicalPath()>
SOURCE|<com.android.calendar.agenda.AgendaFragment: long getLastShowEventId()>
SOURCE|<android.view.View: android.graphics.Insets getOpticalInsets()>
SOURCE|<android.view.WindowManagerImpl: android.view.Display getDefaultDisplay()>
SOURCE|<com.android.exchange.adapter.ItemOperationsParser: int getStatusCode()>
SOURCE|<android.view.View: android.view.KeyEvent$DispatcherState getKeyDispatcherState()>
SOURCE|<org.apache.harmony.security.x509.Extension$2: java.lang.Object getDecodedObject(org.apache.harmony.security.asn1.BerInputStream)>
SOURCE|<java.util.concurrent.locks.LockSupport: java.lang.Object getBlocker(java.lang.Thread)>
SOURCE|<java.lang.ClassLoader: java.lang.Package getPackage(java.lang.String)>
SOURCE|<java.util.zip.ZipFile: java.lang.String getName()>
SOURCE|<android.bluetooth.IBluetoothInputDevice$Stub$Proxy: java.util.List getDevicesMatchingConnectionStates(int[])>
SOURCE|<android.graphics.drawable.ScaleDrawable: int getIntrinsicWidth()>
SOURCE|<com.android.internal.telephony.cdma.RuimRecords$EfCsimLiLoaded: java.lang.String getEfName()>
SOURCE|<com.android.contacts.model.RawContactDelta$ValuesDelta: java.lang.Long getGroupRowId()>
SOURCE|<org.apache.http.cookie.CookieOrigin: java.lang.String getHost()>
SOURCE|<android.database.sqlite.SQLiteOpenHelper: java.lang.String getDatabaseName()>
SOURCE|<com.android.mms.data.RecipientIdCache: java.util.List getAddresses(java.lang.String)>
SOURCE|<android.provider.Settings$Global: java.lang.String getBluetoothInputDevicePriorityKey(java.lang.String)>
SOURCE|<android.webkit.WebViewCore: android.webkit.BrowserFrame getBrowserFrame()>
SOURCE|<com.android.gallery3d.data.MtpImage: int getHeight()>
SOURCE|<java.net.Socket: java.net.SocketAddress getRemoteSocketAddress()>
SOURCE|<com.android.server.accessibility.TouchExplorer$ReceivedPointerTracker: android.view.MotionEvent getLastReceivedEvent()>
SOURCE|<com.android.internal.telephony.sip.SipPhone: java.lang.String getPhoneName()>
SOURCE|<com.android.calendar.event.EditEventHelper: java.util.LinkedHashSet getAddressesFromList(java.lang.String,com.android.common.Rfc822Validator)>
SOURCE|<com.android.systemui.recent.RecentsPanelView$TaskDescriptionAdapter: long getItemId(int)>
SOURCE|<gov.nist.javax.sip.header.Warning: int getCode()>
SOURCE|<android.widget.ExpandableListView: int getFlatListPosition(long)>
SOURCE|<android.net.wifi.p2p.WifiP2pWfdInfo: java.lang.String getDeviceInfoHex()>
SOURCE|<com.android.internal.telephony.gsm.SmsCbHeader: int getGeographicalScope()>
SOURCE|<android.media.IAudioService$Stub$Proxy: int getMasterMaxVolume()>
SOURCE|<android.webkit.WebSettingsClassic$AutoFillProfile: java.lang.String getFullName()>
SOURCE|<com.android.contacts.model.Contact: com.google.common.collect.ImmutableMap getStatuses()>
SOURCE|<android.webkit.WebViewClassic: android.webkit.PluginList getPluginList()>
SOURCE|<com.android.calendar.Event: long getEndMillis()>
SOURCE|<android.webkit.WebViewClassic: int getTitleHeight()>
SOURCE|<android.webkit.WebViewCore$AutoFillData: java.lang.String getPreviewString()>
SOURCE|<com.android.nfc.handover.HandoverManager: android.nfc.NdefMessage createHandoverSelectMessage(boolean)>
SOURCE|<com.android.internal.widget.multiwaveview.TargetDrawable: int getResourceId()>
SOURCE|<com.google.common.collect.ForwardingMultiset: java.util.Set elementSet()>
SOURCE|<org.apache.http.protocol.HttpRequestHandlerRegistry: java.util.Map getHandlers()>
SOURCE|<com.android.internal.widget.ILockSettings$Stub: android.os.IBinder asBinder()>
SOURCE|<libcore.io.ForwardingOs: int getpid()>
SOURCE|<com.android.deskclock.Alarm$DaysOfWeek: boolean[] getBooleanArray()>
SOURCE|<javax.xml.transform.TransformerException: javax.xml.transform.SourceLocator getLocator()>
SOURCE|<com.android.mms.dom.ElementImpl: java.lang.String getNodeName()>
SOURCE|<com.coremedia.iso.boxes.SyncSampleBox: long getContentSize()>
SOURCE|<android.content.ContentProviderClient: android.net.Uri insert(android.net.Uri,android.content.ContentValues)>
SOURCE|<com.android.browser.BaseUi: android.view.View getVideoLoadingProgressView()>
SOURCE|<javax.security.auth.x500.X500Principal: java.lang.String getName(java.lang.String,java.util.Map)>
SOURCE|<android.text.Layout: int getLineBaseline(int)>
SOURCE|<org.apache.harmony.xnet.provider.jsse.SSLInputStream: long readUint64()>
SOURCE|<android.content.res.ColorStateList: int getDefaultColor()>
SOURCE|<com.android.internal.telephony.gsm.GsmConnection: long getHoldDurationMillis()>
SOURCE|<com.android.gallery3d.data.LocalVideo: int getMediaType()>
SOURCE|<com.android.camera.ui.PieItem: int getOuterRadius()>
SOURCE|<android.bluetooth.BluetoothHealthAppConfiguration: int getRole()>
SOURCE|<android.mtp.MtpDevice: byte[] getThumbnail(int)>
SOURCE|<java.lang.Class: java.lang.reflect.Method[] getMethods()>
SOURCE|<com.android.mms.dom.smil.SmilParElementImpl: org.w3c.dom.NodeList getActiveChildrenAt(float)>
SOURCE|<android.telephony.SignalStrength: int getDbm()>
SOURCE|<android.app.ActivityManagerProxy: android.content.ComponentName getActivityClassForToken(android.os.IBinder)>
SOURCE|<java.util.concurrent.ForkJoinPool: int getPoolSize()>
SOURCE|<com.android.nfc.snep.SnepMessage: byte[] toByteArray()>
SOURCE|<gov.nist.javax.sip.header.To: java.lang.String getDisplayName()>
SOURCE|<android.view.animation.Animation: android.view.animation.Interpolator getInterpolator()>
SOURCE|<com.google.common.collect.ForwardingCollection: java.lang.Object[] standardToArray(java.lang.Object[])>
SOURCE|<org.apache.http.client.params.HttpClientParams: java.lang.String getCookiePolicy(org.apache.http.params.HttpParams)>
SOURCE|<com.android.server.ClipboardService: android.content.ClipDescription getPrimaryClipDescription()>
SOURCE|<com.android.systemui.statusbar.phone.PhoneStatusBar: android.view.View getStatusBarView()>
SOURCE|<android.mtp.MtpDevice: int getDeviceId()>
SOURCE|<com.android.phone.ContactsAsyncHelper$ImageTracker: int getPhotoState()>
SOURCE|<java.time.Period: int parseNumber(java.lang.CharSequence,java.lang.String,int)>
SOURCE|<com.android.internal.telephony.cdma.SmsMessage: int getMessageType()>
SOURCE|<org.apache.harmony.xnet.provider.jsse.HandshakeProtocol: org.apache.harmony.xnet.provider.jsse.SSLSessionImpl getSession()>
SOURCE|<com.android.bluetooth.hid.HidService: int getConnectionState(android.bluetooth.BluetoothDevice)>
SOURCE|<com.google.android.apps.lightcycle.sensor.SensorReader: com.google.android.apps.lightcycle.math.Vector3 getFilteredAcceleration()>
SOURCE|<android.mtp.MtpObjectInfo: int getObjectHandle()>
SOURCE|<javax.crypto.ExemptionMechanism: javax.crypto.ExemptionMechanism getInstance(java.lang.String,java.security.Provider)>
SOURCE|<android.webkit.WebViewDatabaseClassic: android.webkit.WebViewDatabaseClassic getInstance(android.content.Context)>
SOURCE|<java.time.format.DateTimeFormatter: java.time.temporal.TemporalQuery parsedExcessDays()>
SOURCE|<com.android.inputmethod.latin.spellcheck.SpellCheckerProximityInfo: int[] getProximityForScript(int)>
SOURCE|<com.android.i18n.phonenumbers.geocoding.FlyweightMapStorage: int getPrefix(int)>
SOURCE|<java.time.YearMonth: long getProlepticMonth()>
SOURCE|<javax.net.ssl.HandshakeCompletedEvent: java.security.cert.Certificate[] getPeerCertificates()>
SOURCE|<java.time.chrono.HijrahChronology: java.lang.String getCalendarType()>
SOURCE|<com.google.common.collect.MapMakerInternalMap$NullEntry: com.google.common.collect.MapMakerInternalMap$ReferenceEntry getPreviousExpirable()>
SOURCE|<android.os.storage.StorageManager: java.lang.String getVolumeState(java.lang.String)>
SOURCE|<gov.nist.javax.sip.stack.SIPClientTransaction: java.lang.String getViaHost()>
SOURCE|<javax.xml.transform.TransformerFactoryConfigurationError: java.lang.String getMessage()>
SOURCE|<android.test.mock.MockResources: int getDimensionPixelOffset(int)>
SOURCE|<com.android.contacts.datepicker.DatePicker$SavedState: int getMonth()>
SOURCE|<android.nfc.INfcAdapter$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
SOURCE|<java.util.logging.Handler: java.lang.String getEncoding()>
SOURCE|<javax.xml.transform.TransformerException: java.lang.Throwable getException()>
SOURCE|<android.preference.RingtonePreference: int getRingtoneType()>
SOURCE|<com.android.videoeditor.ProjectPickerAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)>
SOURCE|<java.lang.Runtime: java.io.InputStream getLocalizedInputStream(java.io.InputStream)>
SOURCE|<android.text.Layout: int getHeight()>
SOURCE|<com.google.common.collect.Multimaps$Keys: java.util.Set createEntrySet()>
SOURCE|<android.gesture.Gesture: android.graphics.Bitmap toBitmap(int,int,int,int)>
SOURCE|<android.text.TextUtils: void getChars(java.lang.CharSequence,int,int,char[],int)>
SOURCE|<com.android.internal.telephony.sip.SipConnectionBase: java.lang.String getRemainingPostDialString()>
SOURCE|<org.ccil.cowan.tagsoup.PYXWriter: int getEntity()>
SOURCE|<android.os.storage.IMountService$Stub$Proxy: android.os.storage.StorageVolume[] getVolumeList()>
SOURCE|<android.webkit.CacheManager$CacheResult: java.lang.String getLocation()>
SOURCE|<java.util.concurrent.locks.AbstractQueuedLongSynchronizer: java.util.Collection getQueuedThreads()>
SOURCE|<org.apache.harmony.xml.dom.NodeImpl: java.lang.String getNodeValue()>
SOURCE|<com.android.emailcommon.mail.Multipart: java.lang.String getContentType()>
SOURCE|<org.xml.sax.helpers.NamespaceSupport: java.util.Enumeration getPrefixes()>
SOURCE|<com.android.email.activity.setup.SetupData: com.android.emailcommon.provider.Account getAccount()>
SOURCE|<java.lang.Thread: int getPriority()>
SOURCE|<javax.crypto.KeyAgreement: javax.crypto.KeyAgreement getInstance(java.lang.String,java.lang.String)>
SOURCE|<javax.xml.transform.stream.StreamSource: java.lang.String getSystemId()>
SOURCE|<java.util.Locale: java.lang.String getISO3Language()>
SOURCE|<org.apache.http.impl.io.IdentityInputStream: int read(byte[],int,int)>
SOURCE|<com.android.camera.ComboPreferences: com.android.camera.ComboPreferences get(android.content.Context)>
SOURCE|<com.android.gallery3d.app.PhotoDataAdapter: int getImageWidth()>
SOURCE|<com.android.providers.applications.ApplicationsProvider: android.content.pm.PackageManager getPackageManager()>
SOURCE|<java.util.concurrent.locks.ReentrantReadWriteLock$Sync: int getReadLockCount()>
SOURCE|<android.view.inputmethod.InputMethodInfo: android.graphics.drawable.Drawable loadIcon(android.content.pm.PackageManager)>
SOURCE|<com.android.contacts.calllog.ExtendedCursor: short getShort(int)>
SOURCE|<com.adobe.xmp.impl.QName: java.lang.String getPrefix()>
SOURCE|<java.net.URLClassLoader: java.security.PermissionCollection getPermissions(java.security.CodeSource)>
SOURCE|<org.apache.http.impl.client.DefaultProxyAuthenticationHandler: java.util.List getAuthPreferences(org.apache.http.HttpResponse,org.apache.http.protocol.HttpContext)>
SOURCE|<org.apache.http.client.utils.URLEncodedUtils: java.lang.String decode(java.lang.String,java.lang.String)>
SOURCE|<android.widget.OverScroller: int getCurrX()>
SOURCE|<java.io.RandomAccessFile: java.lang.String readUTF()>
SOURCE|<libcore.net.http.HttpEngine: libcore.net.http.HttpConnection getConnection()>
SOURCE|<android.util.TypedValue: float getDimension(android.util.DisplayMetrics)>
SOURCE|<com.android.server.WallpaperManagerService: int getHeightHint()>
SOURCE|<android.net.INetworkPolicyManager$Stub$Proxy: android.net.NetworkPolicy[] getNetworkPolicies()>
SOURCE|<org.apache.harmony.xnet.provider.jsse.OpenSSLRSAPrivateCrtKey: java.math.BigInteger getPrimeExponentP()>
SOURCE|<com.android.browser.search.OpenSearchSearchEngine: java.lang.CharSequence getLabel()>
SOURCE|<com.android.internal.widget.multiwaveview.TargetDrawable: float getPositionX()>
SOURCE|<com.android.internal.telephony.cdma.CdmaCall: com.android.internal.telephony.Call$State getState()>
SOURCE|<org.apache.http.impl.cookie.BasicClientCookie: java.lang.String getName()>
SOURCE|<java.text.DecimalFormatSymbols: char getZeroDigit()>
SOURCE|<java.lang.ExceptionInInitializerError: java.lang.Throwable getException()>
SOURCE|<com.android.internal.telephony.cdma.RuimRecords: java.lang.String getMin()>
SOURCE|<javax.sip.ResponseEvent: javax.sip.ClientTransaction getClientTransaction()>
SOURCE|<java.lang.reflect.Method: java.lang.'annotation'.Annotation[][] getParameterAnnotations()>
SOURCE|<gov.nist.javax.sip.address.AddressImpl: int getAddressType()>
SOURCE|<java.security.KeyPairGenerator: java.security.KeyPairGenerator getInstance(java.lang.String)>
SOURCE|<com.android.ex.chips.RecipientEntry: long getContactId()>
SOURCE|<android.net.IThrottleManager$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
SOURCE|<com.android.internal.telephony.gsm.SimSmsInterfaceManager: java.util.List getAllMessagesFromIccEf()>
SOURCE|<android.content.ContextWrapper: android.content.SharedPreferences getSharedPreferences(java.lang.String,int)>
SOURCE|<org.xmlpull.v1.sax2.Driver: java.lang.String getValue(int)>
SOURCE|<com.android.phone.PhoneGlobals: android.bluetooth.IBluetoothHeadsetPhone getBluetoothPhoneService()>
SOURCE|<javax.xml.transform.dom.DOMResult: org.w3c.dom.Node getNode()>
SOURCE|<java.util.logging.LogRecord: long getMillis()>
SOURCE|<org.apache.harmony.xnet.provider.jsse.SSLSocketImpl: java.lang.String[] getEnabledProtocols()>
SOURCE|<com.android.internal.view.menu.ActionMenuItem: int getItemId()>
SOURCE|<android.app.LoaderManagerImpl: android.content.Loader getLoader(int)>
SOURCE|<android.net.ThrottleManager: java.lang.String getHelpUri()>
SOURCE|<com.android.launcher2.PagedViewWidget: int[] getPreviewSize()>
SOURCE|<com.android.email.activity.UiUtilities: android.view.View getViewOrNull(android.view.View,int)>
SOURCE|<com.android.internal.view.menu.ActionMenuItem: int getOrder()>
SOURCE|<android.text.method.QwertyKeyListener: android.text.method.QwertyKeyListener getInstance(boolean,android.text.method.TextKeyListener$Capitalize)>
SOURCE|<com.android.email.activity.UIControllerOnePane$ActionBarControllerCallback: java.lang.String getMessageSubject()>
SOURCE|<android.view.GLES20Canvas: int getMaximumBitmapHeight()>
SOURCE|<com.android.camera.Storage: android.net.Uri newImage(android.content.ContentResolver,java.lang.String,long,int,int)>
SOURCE|<com.android.internal.content.PackageMonitor: int getChangingUserId()>
SOURCE|<android.bluetooth.BluetoothPan: java.util.List getConnectedDevices()>
SOURCE|<com.android.i18n.phonenumbers.geocoding.PhoneNumberOfflineGeocoder: java.lang.String getDescriptionForValidNumber(com.android.i18n.phonenumbers.Phonenumber$PhoneNumber,java.util.Locale)>
SOURCE|<org.apache.http.entity.AbstractHttpEntity: org.apache.http.Header getContentEncoding()>
SOURCE|<com.android.email.activity.MailboxFragmentAdapter: long getAccountId(android.database.Cursor)>
SOURCE|<android.widget.Editor$PositionListener: int getPositionX()>
SOURCE|<java.io.ObjectStreamClass: java.io.ObjectStreamClass getSuperclass()>
SOURCE|<org.apache.harmony.xml.dom.NodeImpl: java.lang.String getPrefix()>
SOURCE|<org.apache.harmony.xnet.provider.jsse.ServerKeyExchange: java.security.interfaces.RSAPublicKey getRSAPublicKey()>
SOURCE|<android.media.DecoderCapabilities: java.util.List getAudioDecoders()>
SOURCE|<com.android.internal.telephony.gsm.SmsCbHeader: android.telephony.SmsCbEtwsInfo getEtwsInfo()>
SOURCE|<android.text.Layout: int getLineVisibleEnd(int)>
SOURCE|<com.google.common.collect.MapMakerInternalMap$WeakEntry: com.google.common.collect.MapMakerInternalMap$ValueReference getValueReference()>
SOURCE|<java.util.Hashtable$HashIterator: java.util.Hashtable$HashtableEntry nextEntryNotFailFast()>
SOURCE|<gov.nist.javax.sip.header.MediaRange: java.lang.String getSubtype()>
SOURCE|<com.android.server.DevicePolicyManagerService: int getKeyguardDisabledFeatures(android.content.ComponentName,int)>
SOURCE|<com.android.launcher2.Folder: float getPivotYForIconAnimation()>
SOURCE|<com.android.internal.telephony.CallManager: com.android.internal.telephony.Call getFirstActiveRingingCall()>
SOURCE|<android.view.ViewConfiguration: int getScrollBarFadeDuration()>
SOURCE|<com.google.common.collect.SortedMultisets$ElementSet: java.util.SortedSet headSet(java.lang.Object)>
SOURCE|<android.server.search.SearchManagerService: java.util.List getSearchablesInGlobalSearch()>
SOURCE|<android.view.ViewConfiguration: int getTouchSlop()>
SOURCE|<com.android.email.activity.UIControllerTwoPane$ActionBarControllerCallback: int getTitleMode()>
SOURCE|<android.view.ViewGroup: android.view.View getFocusedChild()>
SOURCE|<android.net.BaseNetworkStateTracker: android.net.NetworkInfo getNetworkInfo()>
SOURCE|<java.net.URI: java.lang.String getPath()>
SOURCE|<com.android.internal.view.IInputContextCallback$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
SOURCE|<android.widget.PopupMenu: android.view.Menu getMenu()>
SOURCE|<java.security.KeyStore$SecretKeyEntry: javax.crypto.SecretKey getSecretKey()>
SOURCE|<com.android.gallery3d.ui.RawTexture: int getId()>
SOURCE|<com.android.internal.telephony.sip.SipPhoneBase: java.util.List getCurrentDataConnectionList()>
SOURCE|<com.android.contacts.list.ContactTileAdapter: java.lang.Object getItem(int)>
SOURCE|<org.apache.harmony.xml.dom.DOMErrorImpl: java.lang.String getType()>
SOURCE|<org.apache.harmony.security.x501.Name: javax.security.auth.x500.X500Principal getX500Principal()>
SOURCE|<android.widget.HeaderViewListAdapter: java.lang.Object getItem(int)>
SOURCE|<android.webkit.WebViewClassic: java.lang.String getTouchIconUrl()>
SOURCE|<android.webkit.WebViewClassic: float getDefaultZoomScale()>
SOURCE|<android.filterfw.core.Filter: java.util.Collection getInputPorts()>
SOURCE|<android.net.UrlQuerySanitizer: boolean getPreferFirstRepeatedParameter()>
SOURCE|<com.android.contacts.calllog.IntentProvider: com.android.contacts.calllog.IntentProvider getCallDetailIntentProvider(com.android.contacts.calllog.CallLogAdapter,int,long,int)>
SOURCE|<java.nio.DirectByteBuffer: java.nio.ByteBuffer get(byte[],int,int)>
SOURCE|<com.android.launcher2.CellLayout: float getBackgroundAlpha()>
SOURCE|<com.android.gallery3d.ui.CanvasTexture: android.graphics.Bitmap onGetBitmap()>
SOURCE|<com.android.gallery3d.app.TransitionStore: java.lang.Object get(java.lang.Object,java.lang.Object)>
SOURCE|<android.location.ICountryDetector$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
SOURCE|<android.os.Binder: java.lang.String getInterfaceDescriptor()>
SOURCE|<android.support.v13.app.FragmentPagerAdapter: long getItemId(int)>
SOURCE|<android.telephony.TelephonyManager: int getCdmaEriIconIndex()>
SOURCE|<com.android.videoeditor.service.MovieMediaItem: int getWidth()>
SOURCE|<android.widget.TextView: float getLeftFadingEdgeStrength()>
SOURCE|<android.speech.tts.SynthesisRequest: android.os.Bundle getParams()>
SOURCE|<android.app.WallpaperManager: android.graphics.drawable.Drawable peekFastDrawable()>
SOURCE|<org.apache.http.impl.client.DefaultProxyAuthenticationHandler: java.util.Map getChallenges(org.apache.http.HttpResponse,org.apache.http.protocol.HttpContext)>
SOURCE|<com.android.internal.telephony.cat.IconId: com.android.internal.telephony.cat.ComprehensionTlvTag getTag()>
SOURCE|<android.net.rtp.RtpStream: java.net.InetAddress getRemoteAddress()>
SOURCE|<java.security.Signature: java.lang.Object getParameter(java.lang.String)>
SOURCE|<com.android.bluetooth.btservice.AdapterService$AdapterServiceBinder: android.os.ParcelUuid[] getRemoteUuids(android.bluetooth.BluetoothDevice)>
SOURCE|<com.android.launcher2.Launcher: com.android.launcher2.DragLayer getDragLayer()>
SOURCE|<com.android.internal.widget.ILockSettings$Stub$Proxy: long getLong(java.lang.String,long,int)>
SOURCE|<com.android.contacts.list.PhoneFavoriteMergedAdapter: int getViewTypeCount()>
SOURCE|<com.android.org.bouncycastle.asn1.DEROutputStream: com.android.org.bouncycastle.asn1.ASN1OutputStream getDLSubStream()>
SOURCE|<android.widget.VideoView: int getBufferPercentage()>
SOURCE|<android.net.TrafficStats: long getTotalRxBytes()>
SOURCE|<com.android.internal.telephony.IIccPhoneBook$Stub: com.android.internal.telephony.IIccPhoneBook asInterface(android.os.IBinder)>
SOURCE|<com.android.vcard.VCardParserImpl_V21: java.util.Set getKnownPropertyNameSet()>
SOURCE|<gov.nist.javax.sip.message.SIPMessage: java.lang.String encodeSIPHeaders()>
SOURCE|<com.android.internal.telephony.gsm.SmsMessage$PduParser: byte[] getUserData()>
SOURCE|<android.telephony.CellIdentityLte: int getTac()>
SOURCE|<com.android.gallery3d.picasasource.PicasaAlbum$CoverItem: java.lang.String getMimeType()>
SOURCE|<com.coremedia.iso.boxes.MediaHeaderBox: java.lang.String getLanguage()>
SOURCE|<com.android.providers.contacts.ContactsProvider2: android.database.Cursor buildSingleRowResult(java.lang.String[],java.lang.String[],java.lang.Object[])>
SOURCE|<com.android.browser.view.BookmarkExpandableView$BookmarkAccountAdapter: android.view.View getChildView(int,int,boolean,android.view.View,android.view.ViewGroup)>
SOURCE|<gov.nist.javax.sip.stack.SIPTransactionStack: gov.nist.core.ThreadAuditor getThreadAuditor()>
SOURCE|<com.googlecode.mp4parser.authoring.Movie: com.googlecode.mp4parser.authoring.Track getTrackByTrackId(long)>
SOURCE|<org.apache.james.mime4j.field.address.parser.SimpleCharStream: int getEndColumn()>
SOURCE|<com.android.browser.util.ThreadedCursorAdapter: long getItemId(int)>
SOURCE|<android.graphics.Paint: android.graphics.Typeface getTypeface()>
SOURCE|<com.android.videoeditor.util.FileUtils: java.io.File getProjectsRootDir(android.content.Context)>
SOURCE|<org.apache.http.impl.SocketHttpClientConnection: int getLocalPort()>
SOURCE|<android.media.videoeditor.Overlay: long getStartTime()>
SOURCE|<android.webkit.ViewManager: java.util.ArrayList access$300(android.webkit.ViewManager)>
SOURCE|<com.android.internal.os.BatteryStatsImpl: int getBluetoothPingCount()>
SOURCE|<com.googlecode.mp4parser.AbstractContainerBox: java.util.List getBoxes(java.lang.Class)>
SOURCE|<com.android.internal.telephony.UiccCard: com.android.internal.telephony.IccCardStatus$CardState getCardState()>
SOURCE|<android.webkit.WebSettingsClassic: boolean getUseWebViewBackgroundForOverscrollBackground()>
SOURCE|<android.net.SSLCertificateSocketFactory: byte[] toNpnProtocolsList(byte[][])>
SOURCE|<android.animation.FloatKeyframeSet: java.lang.Object getValue(float)>
SOURCE|<com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata: com.android.i18n.phonenumbers.Phonemetadata$PhoneNumberDesc getPager()>
SOURCE|<org.apache.http.impl.client.DefaultTargetAuthenticationHandler: java.util.List getAuthPreferences(org.apache.http.HttpResponse,org.apache.http.protocol.HttpContext)>
SOURCE|<android.os.StatFs: int getFreeBlocks()>
SOURCE|<android.app.ActivityOptions: android.os.IRemoteCallback getOnAnimationStartListener()>
SOURCE|<com.adobe.xmp.options.SerializeOptions: java.lang.String getEncoding()>
SOURCE|<android.widget.AdapterViewAnimator: android.view.View getViewAtRelativeIndex(int)>
SOURCE|<com.android.mms.model.SlideModel: com.android.mms.model.ImageModel getImage()>
SOURCE|<gov.nist.javax.sip.header.HeaderFactoryImpl: javax.sip.header.Header createHeader(java.lang.String,java.lang.String)>
SOURCE|<gov.nist.core.DuplicateNameValueList: java.util.Iterator getNames()>
SOURCE|<com.android.contacts.editor.ContactEditorFragment$PhotoHandler$PhotoEditorListener: java.lang.String getCurrentPhotoFile()>
SOURCE|<org.apache.http.params.DefaultedHttpParams: java.util.Set getDefaultNames()>
SOURCE|<java.time.OffsetDateTime: int getYear()>
SOURCE|<com.android.contacts.editor.EventFieldEditorView: android.app.Dialog createDialog(android.os.Bundle)>
SOURCE|<java.util.jar.Attributes: java.lang.String getValue(java.util.jar.Attributes$Name)>
SOURCE|<android.filterfw.core.SimpleFrameManager: android.filterfw.core.Frame retainFrame(android.filterfw.core.Frame)>
SOURCE|<com.android.internal.telephony.PhoneBase: int getVoiceMessageCount()>
SOURCE|<com.android.gallery3d.data.SingleItemAlbum: com.android.gallery3d.data.MediaItem getItem()>
SOURCE|<android.view.IRotationWatcher$Stub: android.os.IBinder asBinder()>
SOURCE|<org.apache.http.impl.conn.AbstractPooledConnAdapter: org.apache.http.impl.conn.AbstractPoolEntry getPoolEntry()>
SOURCE|<android.widget.Gallery: int getLimitedMotionScrollAmount(boolean,int)>
SOURCE|<gov.nist.javax.sip.header.SIPHeaderList: java.util.List getHeadersAsEncodedStrings()>
SOURCE|<java.security.cert.Certificate: java.lang.String getType()>
SOURCE|<java.util.jar.JarFile: java.io.InputStream getInputStream(java.util.zip.ZipEntry)>
SOURCE|<android.content.Intent: android.content.Intent setClass(android.content.Context,java.lang.Class)>
SOURCE|<javax.sql.StatementEvent: java.sql.PreparedStatement getStatement()>
SOURCE|<com.android.internal.app.ResolverActivity$ResolveListAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)>
SOURCE|<android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)>
SOURCE|<android.content.IIntentSender$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
SOURCE|<com.android.vcard.VCardParserImpl_V30: java.lang.String getVersionString()>
SOURCE|<com.android.commands.monkey.MonkeyMotionEvent: boolean getIntermediateNote()>
SOURCE|<java.lang.Class: java.lang.annotation.Annotation getAnnotation(java.lang.Class)>
SOURCE|<com.android.contacts.model.account.BaseAccountType$RelationActionInflater: int getTypeLabelResource(java.lang.Integer)>
SOURCE|<android.text.format.DateUtils: java.lang.String getMonthString(int,int)>
SOURCE|<android.filterfw.core.FilterPort: android.filterfw.core.FrameFormat getPortFormat()>
SOURCE|<com.android.mms.model.MediaModelFactory: com.android.mms.model.MediaModel getMediaModel(android.content.Context,org.w3c.dom.smil.SMILMediaElement,com.android.mms.model.LayoutModel,com.google.android.mms.pdu.PduBody)>
SOURCE|<gov.nist.javax.sip.address.Authority: java.lang.String getPassword()>
SOURCE|<junit.framework.ComparisonFailure: java.lang.String getExpected()>
SOURCE|<android.media.effect.EffectContext: android.media.effect.EffectFactory getFactory()>
SOURCE|<android.graphics.Bitmap: int getRowBytes()>
SOURCE|<com.android.providers.contacts.DataRowHandlerForEmail: int getTypeRank(int)>
SOURCE|<com.android.launcher2.Folder: com.android.launcher2.DropTarget getDropTargetDelegate(com.android.launcher2.DropTarget$DragObject)>
SOURCE|<com.android.internal.view.menu.MenuPopupHelper: com.android.internal.view.menu.MenuView getMenuView(android.view.ViewGroup)>
SOURCE|<android.app.WallpaperManager: android.graphics.drawable.Drawable getDrawable()>
SOURCE|<android.webkit.WebViewClassic: android.webkit.WebView getWebView()>
SOURCE|<java.time.temporal.ChronoField: java.lang.String getDisplayName(java.util.Locale)>
SOURCE|<com.android.internal.database.SortCursor: short getShort(int)>
SOURCE|<com.googlecode.mp4parser.AbstractFullBox: int getVersion()>
SOURCE|<org.apache.james.mime4j.field.datetime.parser.TokenMgrError: java.lang.String getMessage()>
SOURCE|<android.net.wifi.WifiStateMachine: int getFrequencyBand()>
SOURCE|<android.webkit.WebSettings: boolean getSaveFormData()>
SOURCE|<android.os.StrictMode: android.os.StrictMode$VmPolicy getVmPolicy()>
SOURCE|<java.util.prefs.PreferenceChangeEvent: java.lang.String getNewValue()>
SOURCE|<com.android.email.Preferences: long getLastUsedAccountId()>
SOURCE|<java.nio.DirectByteBuffer: byte get(int)>
SOURCE|<android.content.SyncStatusInfo: long getPeriodicSyncTime(int)>
SOURCE|<android.view.ViewConfiguration: int getScrollDefaultDelay()>
SOURCE|<java.net.HttpCookie: long getMaxAge()>
SOURCE|<org.apache.james.mime4j.field.address.NamedMailbox: java.lang.String getAddressString(boolean)>
SOURCE|<java.lang.Class: java.lang.reflect.Constructor getEnclosingConstructor()>
SOURCE|<com.android.gallery3d.ui.FadeTexture: int getWidth()>
SOURCE|<android.content.ContentProvider: android.os.ParcelFileDescriptor openPipeHelper(android.net.Uri,java.lang.String,android.os.Bundle,java.lang.Object,android.content.ContentProvider$PipeDataWriter)>
SOURCE|<com.google.android.apps.lightcycle.panorama.LightCycleView: android.hardware.Camera$PreviewCallback getPreviewCallback()>
SOURCE|<android.media.MediaRouter$RouteInfo: android.view.Display getPresentationDisplay()>
SOURCE|<com.android.internal.widget.multiwaveview.TargetDrawable: float getScaleX()>
SOURCE|<android.database.sqlite.SQLiteCursor: java.lang.String[] getColumnNames()>
SOURCE|<com.google.common.collect.MapMakerInternalMap$AbstractReferenceEntry: int getHash()>
SOURCE|<com.android.gallery3d.filtershow.filters.ImageFilter: java.lang.String getName()>
SOURCE|<android.media.videoeditor.OverlayFrame: java.lang.String getBitmapImageFileName()>
SOURCE|<com.android.internal.app.ActionBarImpl: int getSelectedNavigationIndex()>
SOURCE|<android.view.accessibility.AccessibilityEvent: int getFromIndex()>
SOURCE|<android.net.Uri: java.lang.String decode(java.lang.String)>
SOURCE|<gov.nist.javax.sip.header.extensions.Join: java.lang.String getToTag()>
SOURCE|<com.android.phone.sip.SipProfileDb: int getProfilesCount()>
SOURCE|<android.view.accessibility.AccessibilityNodeInfo: long getSourceNodeId()>
SOURCE|<com.android.providers.contacts.util.Clock: com.android.providers.contacts.util.Clock getInstance()>
SOURCE|<com.android.browser.BrowserSettings: java.lang.String getPreloadOnWifiOnlyPreferenceString(android.content.Context)>
SOURCE|<com.android.internal.telephony.cdma.CdmaLteServiceStateTracker: java.util.List getAllCellInfo()>
SOURCE|<com.android.email.mail.transport.MailTransport: java.io.OutputStream getOutputStream()>
SOURCE|<android.accounts.AccountManager: android.accounts.Account[] getAccountsByType(java.lang.String)>
SOURCE|<com.google.common.collect.MapMakerInternalMap$WeakExpirableEntry: com.google.common.collect.MapMakerInternalMap$ReferenceEntry getNextExpirable()>
SOURCE|<java.lang.Throwable: java.lang.String getLocalizedMessage()>
SOURCE|<com.android.server.location.GpsLocationProvider: com.android.internal.location.ProviderProperties getProperties()>
SOURCE|<android.security.KeyChain: java.security.cert.X509Certificate[] getCertificateChain(android.content.Context,java.lang.String)>
SOURCE|<android.bluetooth.BluetoothHealth: int getConnectionState(android.bluetooth.BluetoothDevice)>
SOURCE|<com.android.i18n.phonenumbers.Phonenumber$PhoneNumber: java.lang.String getPreferredDomesticCarrierCode()>
SOURCE|<android.content.res.TypedArray: int getDimensionPixelSize(int,int)>
SOURCE|<com.android.email.mail.store.ImapConnection: java.util.List executeSimpleCommand(java.lang.String,boolean)>
SOURCE|<android.webkit.PluginManager: java.lang.String getPluginSharedDataDirectory()>
SOURCE|<android.hardware.Camera$Parameters: java.util.List getSupportedAntibanding()>
SOURCE|<javax.crypto.SecretKeyFactory: java.security.Provider getProvider()>
SOURCE|<com.android.contacts.model.RawContactDelta: java.util.ArrayList getMimeEntries(java.lang.String)>
SOURCE|<com.android.bluetooth.hfp.HeadsetService: int getConnectionState(android.bluetooth.BluetoothDevice)>
SOURCE|<android.telephony.CellIdentityCdma: int getSystemId()>
SOURCE|<com.android.internal.os.BatteryStatsImpl: long getBatteryRealtime(long)>
SOURCE|<android.test.mock.MockPackageManager: android.content.res.Resources getResourcesForApplication(java.lang.String)>
SOURCE|<com.android.server.wm.WindowManagerService: int getRotation()>
SOURCE|<android.view.ViewConfiguration: int getScaledFadingEdgeLength()>
SOURCE|<com.android.mms.model.ContentRestrictionFactory: com.android.mms.model.ContentRestriction getContentRestriction()>
SOURCE|<com.android.contacts.calllog.CallDetailHistoryAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)>
SOURCE|<java.text.DateFormatSymbols: java.lang.String getLocalPatternChars()>
SOURCE|<android.mtp.MtpStorageInfo: long getMaxCapacity()>
SOURCE|<org.apache.harmony.xml.dom.DOMConfigurationImpl: org.w3c.dom.DOMStringList getParameterNames()>
SOURCE|<android.graphics.NinePatch: int getHeight()>
SOURCE|<com.android.gallery3d.data.DownloadCache$TaskProxy: com.android.gallery3d.data.DownloadCache$Entry get(com.android.gallery3d.util.ThreadPool$JobContext)>
SOURCE|<com.android.browser.BrowserSettings: int getPageCacheCapacity()>
SOURCE|<gov.nist.javax.sip.message.SIPMessage: javax.sip.header.Header getHeader(java.lang.String)>
SOURCE|<com.android.mms.dom.smil.ElementTimeImpl: int getBeginConstraints()>
SOURCE|<android.net.IConnectivityManager$Stub$Proxy: android.net.NetworkInfo getNetworkInfo(int)>
SOURCE|<org.apache.harmony.luni.internal.util.TimezoneGetter: org.apache.harmony.luni.internal.util.TimezoneGetter getInstance()>
SOURCE|<java.nio.file.Files: java.nio.file.attribute.UserPrincipal getOwner(java.nio.file.Path,java.nio.file.LinkOption[])>
SOURCE|<com.android.internal.backup.IBackupTransport$Stub$Proxy: long getCurrentRestoreSet()>
SOURCE|<com.android.contacts.model.RawContactDelta: java.lang.Long getRawContactId()>
SOURCE|<android.view.ViewConfiguration: long getGlobalActionKeyTimeout()>
SOURCE|<com.android.videoeditor.service.MovieTransition: java.lang.String getId()>
SOURCE|<android.sax.Element: android.sax.Element getChild(java.lang.String)>
SOURCE|<org.apache.harmony.xml.dom.NodeImpl: org.w3c.dom.NodeList getChildNodes()>
SOURCE|<com.android.ex.chips.RecipientAlternatesAdapter: long getItemId(int)>
SOURCE|<gov.nist.javax.sip.stack.SIPDialog: javax.sip.message.Request createAck(long)>
SOURCE|<com.android.org.bouncycastle.asn1.DERSetParser: com.android.org.bouncycastle.asn1.ASN1Primitive getLoadedObject()>
SOURCE|<java.security.AccessControlException: java.security.Permission getPermission()>
SOURCE|<android.widget.DatePicker: long getMaxDate()>
SOURCE|<com.android.contacts.model.AccountTypeManager: com.android.contacts.model.AccountTypeManager getInstance(android.content.Context)>
SOURCE|<android.filterpacks.imageproc.BrightnessFilter: android.filterfw.core.Program getNativeProgram(android.filterfw.core.FilterContext)>
SOURCE|<com.android.inputmethod.latin.SubtypeSwitcher: com.android.inputmethod.latin.SubtypeSwitcher getInstance()>
SOURCE|<android.nfc.NfcAdapter: int getSdkVersion()>
SOURCE|<com.android.internal.os.ProcessStats: int getLastIdleTime()>
SOURCE|<java.util.Base64: java.util.Base64$Decoder getUrlDecoder()>
SOURCE|<android.test.mock.MockCursor: int getPosition()>
SOURCE|<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.stack.SIPTransactionStack getStack()>
SOURCE|<android.graphics.Bitmap: int getScaledHeight(int)>
SOURCE|<com.android.gallery3d.ui.BasicTexture: int getTextureWidth()>
SOURCE|<android.app.Instrumentation$ActivityMonitor: android.content.IntentFilter getFilter()>
SOURCE|<android.app.PendingIntent: java.lang.String getCreatorPackage()>
SOURCE|<org.apache.commons.logging.LogFactory: java.lang.ClassLoader getContextClassLoader()>
SOURCE|<java.text.NumberFormat: java.text.NumberFormat getNumberInstance()>
SOURCE|<android.view.InputDevice$MotionRange: float getRange()>
SOURCE|<com.android.internal.policy.impl.keyguard.KeyguardAbsKeyInputView: int getWrongPasswordStringId()>
SOURCE|<org.apache.harmony.xml.dom.ElementImpl$ElementAttrNamedNodeMapImpl: org.w3c.dom.Node getNamedItem(java.lang.String)>
SOURCE|<com.android.contacts.model.account.BaseAccountType$NoteKindBuilder: java.lang.String getTagName()>
SOURCE|<java.net.InetAddress: java.lang.String getHostName()>
SOURCE|<com.android.launcher2.LauncherApplication: com.android.launcher2.IconCache getIconCache()>
SOURCE|<android.widget.ActivityChooserModel: int getHistoryMaxSize()>
SOURCE|<com.android.camera.ListPreference: java.lang.String getValue()>
SOURCE|<com.android.camera.CameraHolder: int getBackCameraId()>
SOURCE|<android.test.AndroidTestRunner: java.util.List getTestCases()>
SOURCE|<android.media.audiofx.Equalizer: short getBand(int)>
SOURCE|<com.android.org.bouncycastle.asn1.ASN1Null: java.lang.String toString()>
SOURCE|<com.android.gallery3d.data.UriImage: int getRotation()>
SOURCE|<android.nfc.tech.NfcA: byte[] transceive(byte[])>
SOURCE|<com.android.internal.telephony.cdma.CDMAPhone: boolean getCallForwardingIndicator()>
SOURCE|<com.android.internal.textservice.ITextServicesManager$Stub$Proxy: android.view.textservice.SpellCheckerSubtype getCurrentSpellCheckerSubtype(java.lang.String,boolean)>
SOURCE|<android.gesture.Gesture: int getStrokesCount()>
SOURCE|<com.android.email.activity.UiUtilities: android.view.View getViewOrNull(android.app.Activity,int)>
SOURCE|<gov.nist.javax.sip.header.ContentDisposition: java.lang.String getHandling()>
SOURCE|<gov.nist.javax.sip.address.TelURLImpl: java.lang.String getIsdnSubAddress()>
SOURCE|<java.time.Period: int getYears()>
SOURCE|<android.location.Location: float getBearing()>
SOURCE|<android.media.videoeditor.AudioTrack: long getDuration()>
SOURCE|<com.android.internal.telephony.cdma.CDMAPhone: java.lang.String getDeviceId()>
SOURCE|<com.google.common.collect.MapMakerInternalMap$SoftEntry: long getExpirationTime()>
SOURCE|<android.widget.SimpleCursorTreeAdapter: android.widget.SimpleCursorTreeAdapter$ViewBinder getViewBinder()>
SOURCE|<java.time.LocalDate: java.time.chrono.Era getEra()>
SOURCE|<android.app.TaskStackBuilder: android.app.PendingIntent getPendingIntent(int,int,android.os.Bundle,android.os.UserHandle)>
SOURCE|<com.android.server.am.ActivityManagerService: int getProcessLimit()>
SOURCE|<android.widget.TextView: int getFadeTop(boolean)>
SOURCE|<android.media.videoeditor.Transition: android.media.videoeditor.MediaItem getAfterMediaItem()>
SOURCE|<com.android.contacts.model.RawContact: com.android.contacts.model.account.AccountType getAccountType()>
SOURCE|<org.xml.sax.helpers.ParserAdapter: org.xml.sax.EntityResolver getEntityResolver()>
SOURCE|<com.android.calendar.TimezoneAdapter: int getRowById(java.lang.String)>
SOURCE|<android.content.IntentFilter: java.lang.String getDataScheme(int)>
SOURCE|<android.view.View: int getId()>
SOURCE|<com.android.org.bouncycastle.asn1.x509.AlgorithmIdentifier: com.android.org.bouncycastle.asn1.x509.AlgorithmIdentifier getInstance(com.android.org.bouncycastle.asn1.ASN1TaggedObject,boolean)>
SOURCE|<android.media.videoeditor.AudioTrack: long getBoundaryEndTime()>
SOURCE|<android.webkit.CertTool: java.lang.String[] getKeyStrengthList()>
SOURCE|<java.nio.MappedByteBufferAdapter: char getChar(int)>
SOURCE|<android.util.EventLog$Event: int getProcessId()>
SOURCE|<com.android.org.bouncycastle.asn1.ASN1Sequence: com.android.org.bouncycastle.asn1.ASN1Encodable[] toArray()>
SOURCE|<android.net.NetworkStatsHistory: int getIndexBefore(long)>
SOURCE|<gov.nist.javax.sip.address.SipUri: java.lang.String getUserAtHost()>
SOURCE|<android.net.DummyDataStateTracker: android.net.NetworkInfo getNetworkInfo()>
SOURCE|<android.widget.TextView: boolean getFreezesText()>
SOURCE|<android.test.mock.MockContentResolver: android.content.SyncStatusInfo getSyncStatus(android.accounts.Account,java.lang.String)>
SOURCE|<android.content.ContentQueryMap: android.content.ContentValues getValues(java.lang.String)>
SOURCE|<android.graphics.Bitmap: int getScaledHeight(android.graphics.Canvas)>
SOURCE|<gov.nist.javax.sip.stack.SIPTransaction: long getCSeq()>
SOURCE|<org.apache.harmony.security.x509.ExtendedKeyUsage: byte[] getEncoded()>
SOURCE|<com.android.contacts.editor.PhoneticNameEditorView$PhoneticValuesDelta: java.lang.Long getId()>
SOURCE|<com.android.contacts.model.account.BaseAccountType$GroupMembershipKindBuilder: java.lang.String getTagName()>
SOURCE|<android.webkit.WebSettingsClassic: int getDefaultFontSize()>
SOURCE|<java.util.ServiceLoader: java.util.ServiceLoader loadInstalled(java.lang.Class)>
SOURCE|<com.android.bluetooth.hfp.HeadsetPhoneState: int getCallState()>
SOURCE|<android.widget.GridLayout: boolean getUseDefaultMargins()>
SOURCE|<com.android.email.SecurityPolicy: com.android.emailcommon.provider.Policy getAggregatePolicy()>
SOURCE|<android.hardware.display.WifiDisplayStatus: int getActiveDisplayState()>
SOURCE|<com.android.nfc.P2pLinkManager: int getMessageSize(android.nfc.NdefMessage)>
SOURCE|<android.view.HardwareLayer: android.view.DisplayList getDisplayList()>
SOURCE|<com.android.mms.ui.MessageItem: long getMessageId()>
SOURCE|<android.os.IUserManager$Stub$Proxy: android.content.pm.UserInfo createUser(java.lang.String,int)>
SOURCE|<com.googlecode.mp4parser.FullContainerBox: void getContent(java.nio.ByteBuffer)>
SOURCE|<android.app.ContextImpl: android.content.Context getReceiverRestrictedContext()>
SOURCE|<android.database.CursorWindow: int getType(int,int)>
SOURCE|<com.google.common.collect.MapMakerInternalMap$StrongEntry: java.lang.Object getKey()>
SOURCE|<com.android.server.power.DisplayPowerState: float getElectronBeamLevel()>
SOURCE|<android.app.WallpaperInfo: java.lang.CharSequence loadLabel(android.content.pm.PackageManager)>
SOURCE|<org.apache.http.impl.cookie.BasicClientCookie: java.lang.String getDomain()>
SOURCE|<com.android.contacts.util.StreamItemEntry: java.lang.String getResPackage()>
SOURCE|<gov.nist.javax.sip.header.extensions.References: java.lang.String getName()>
SOURCE|<android.text.method.PasswordTransformationMethod: android.text.method.PasswordTransformationMethod getInstance()>
SOURCE|<com.android.providers.telephony.MmsSmsDatabaseHelper: com.android.providers.telephony.MmsSmsDatabaseHelper getInstance(android.content.Context)>
SOURCE|<gov.nist.core.net.SslNetworkLayer: javax.net.ssl.SSLServerSocket createSSLServerSocket(int,int,java.net.InetAddress)>
SOURCE|<android.app.ContextImpl: android.content.Context createPackageContextAsUser(java.lang.String,int,android.os.UserHandle)>
SOURCE|<com.android.internal.telephony.sip.SipPhone$SipCall: com.android.internal.telephony.Phone getPhone()>
SOURCE|<com.android.mms.dom.smil.SmilMediaElementImpl: org.w3c.dom.smil.TimeList getEnd()>
SOURCE|<java.util.WeakHashMap: java.lang.Object get(java.lang.Object)>
SOURCE|<android.net.wifi.WifiStateTracker: android.net.LinkProperties getLinkProperties()>
SOURCE|<com.android.server.net.NetworkStatsService$1: android.net.NetworkStatsHistory getHistoryForNetwork(android.net.NetworkTemplate,int)>
SOURCE|<java.time.chrono.HijrahChronology: int getYearLength(int)>
SOURCE|<android.telephony.CellIdentityLte: int getPci()>
SOURCE|<org.xmlpull.v1.sax2.Driver: java.lang.String getValue(java.lang.String)>
SOURCE|<android.app.TaskStackBuilder: int getIntentCount()>
SOURCE|<java.net.HttpCookie: java.lang.String getName()>
SOURCE|<java.util.concurrent.atomic.AtomicLongArray: long getAndAdd(int,long)>
SOURCE|<android.content.res.Resources: float getDimension(int)>
SOURCE|<com.android.deskclock.widget.multiwaveview.TargetDrawable$DrawableWithAlpha: float getAlpha()>
SOURCE|<com.android.internal.policy.impl.PhoneWindowManager: int getNonDecorDisplayWidth(int,int,int)>
SOURCE|<android.text.style.IconMarginSpan: int getLeadingMargin(boolean)>
SOURCE|<com.android.browser.Controller: android.webkit.WebView getCurrentWebView()>
SOURCE|<com.android.internal.policy.impl.keyguard.KeyguardCircleFramedDrawable: float getScale()>
SOURCE|<org.apache.harmony.xnet.provider.jsse.SSLParametersImpl: java.security.SecureRandom getSecureRandomMember()>
SOURCE|<com.android.email.activity.MessageCompose$ActionSpinnerAdapter: android.view.View getDropDownView(int,android.view.View,android.view.ViewGroup)>
SOURCE|<android.webkit.WebViewClassic: android.webkit.WebViewCore getWebViewCore()>
SOURCE|<android.widget.RemoteViewsService$RemoteViewsFactoryAdapter: int getCount()>
SOURCE|<android.net.NetworkPolicyManager: int[] getUidsWithPolicy(int)>
SOURCE|<gov.nist.javax.sip.header.SIPHeaderList: java.lang.String encodeBody()>
SOURCE|<android.support.v4.view.VelocityTrackerCompat$HoneycombVelocityTrackerVersionImpl: float getXVelocity(android.view.VelocityTracker,int)>
SOURCE|<com.android.systemui.recent.RecentsScrollViewPerformanceHelper: int getVerticalFadingEdgeLengthCallback()>
SOURCE|<com.android.providers.contacts.ContactsProvider2: int getMaxThumbnailDim()>
SOURCE|<android.filterfw.core.ShaderProgram: java.lang.Object getHostValue(java.lang.String)>
SOURCE|<com.beetstra.jutf7.Base64Util: int getSextet(byte)>
SOURCE|<com.android.inputmethod.latin.ExpandableDictionary$NextStaticWord: int getFrequency()>
SOURCE|<android.content.pm.PermissionInfo: java.lang.CharSequence loadDescription(android.content.pm.PackageManager)>
SOURCE|<android.database.sqlite.SQLiteGlobal: int getJournalSizeLimit()>
SOURCE|<android.filterfw.core.Frame: long getBindingId()>
SOURCE|<android.telephony.CellIdentityCdma: int getLatitude()>
SOURCE|<com.android.gallery3d.ui.TiledTexture: int getHeight()>
SOURCE|<android.net.NetworkStatsHistory: int getIndexAfter(long)>
SOURCE|<android.accounts.AuthenticatorDescription: java.lang.String toString()>
SOURCE|<java.nio.charset.CharsetDecoder: java.nio.charset.Charset detectedCharset()>
SOURCE|<android.media.audiofx.AudioEffect: int getParameter(int[],int[])>
SOURCE|<org.apache.james.mime4j.field.address.Builder: org.apache.james.mime4j.field.address.Builder getInstance()>
SOURCE|<com.android.gallery3d.data.MediaItem: com.android.gallery3d.ui.ScreenNail getScreenNail()>
SOURCE|<com.android.contacts.model.dataitem.DataItem: com.android.contacts.model.account.AccountType getAccountType()>
SOURCE|<com.android.email.FixedLengthInputStream: int getLength()>
SOURCE|<com.android.browser.Controller: com.android.browser.WebViewFactory getWebViewFactory()>
SOURCE|<android.preference.Preference: int getTitleRes()>
SOURCE|<com.android.gallery3d.picasasource.PicasaPostAlbum$PostSyncFuture: java.lang.Integer get()>
SOURCE|<android.widget.ActivityChooserModel: android.widget.ActivityChooserModel get(android.content.Context,java.lang.String)>
SOURCE|<com.android.launcher2.LauncherApplication: com.android.launcher2.LauncherProvider getLauncherProvider()>
SOURCE|<com.android.internal.os.PowerProfile: double getBatteryCapacity()>
SOURCE|<com.android.internal.telephony.IccRecords: java.lang.String getOperatorNumeric()>
SOURCE|<org.apache.http.params.AbstractHttpParams: java.util.Set getNames()>
SOURCE|<com.android.email.SecurityPolicy: int getInactiveReasons(com.android.emailcommon.provider.Policy)>
SOURCE|<com.android.gallery3d.filtershow.imageshow.ImageGeometry: float getLocalScale()>
SOURCE|<android.filterfw.core.NativeFrame: float[] getFloats()>
SOURCE|<com.android.videoeditor.service.MovieAudioTrack: int getRawResourceId()>
SOURCE|<java.nio.charset.CharsetEncoder: java.nio.charset.CodingErrorAction unmappableCharacterAction()>
SOURCE|<android.net.Proxy: java.lang.String getHost(android.content.Context)>
SOURCE|<com.android.nfc.dhimpl.NativeP2pDevice: byte[] receive()>
SOURCE|<com.android.server.am.ActiveServices: java.util.List getRunningServiceInfoLocked(int,int)>
SOURCE|<android.media.videoeditor.WaveformData: short[] getFrameGains()>
SOURCE|<org.apache.harmony.security.x501.AttributeTypeAndValue$1: java.lang.Object getDecodedObject(org.apache.harmony.security.asn1.BerInputStream)>
SOURCE|<com.android.launcher2.DragController: long getLastGestureUpTime()>
SOURCE|<com.android.providers.contacts.AbstractContactsProvider: int update(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[])>
SOURCE|<android.widget.TextView: int getAccessibilityCursorPosition()>
SOURCE|<android.text.Layout: float getLineMax(int)>
SOURCE|<com.android.camera.ComboPreferences: long getLong(java.lang.String,long)>
SOURCE|<com.android.internal.telephony.IccCardProxy: boolean getIccFdnEnabled()>
SOURCE|<android.speech.tts.SynthesisRequest: java.lang.String getLanguage()>
SOURCE|<org.apache.harmony.security.asn1.BerInputStream: int getLength()>
SOURCE|<com.android.deskclock.widget.multiwaveview.TargetDrawable: float getY()>
SOURCE|<java.lang.Package: java.lang.String getSpecificationVendor()>
SOURCE|<com.android.internal.telephony.SMSDispatcher: int getPremiumSmsPermission(java.lang.String)>
SOURCE|<com.android.phone.AnimationUtils$CrossFadeDrawable: android.animation.ObjectAnimator getAnimator()>
SOURCE|<org.apache.http.impl.SocketHttpClientConnection: int getSocketTimeout()>
SOURCE|<com.android.internal.telephony.cdma.CDMALTEPhone: void getPreferredNetworkType(android.os.Message)>
SOURCE|<android.webkit.WebSettingsClassic$AutoFillProfile: java.lang.String getCity()>
SOURCE|<org.apache.harmony.security.x509.X509PublicKey: java.lang.String getAlgorithm()>
SOURCE|<android.view.animation.Transformation: float getAlpha()>
SOURCE|<android.os.Environment: java.io.File getDirectory(java.lang.String,java.lang.String)>
SOURCE|<android.net.IConnectivityManager$Stub$Proxy: int getNetworkPreference()>
SOURCE|<com.android.videoeditor.util.StringUtils: java.lang.String getSimpleTimestampAsString(android.content.Context,long)>
SOURCE|<com.android.server.sip.SipSessionGroup$SipSessionImpl: int getState()>
SOURCE|<android.content.res.AssetManager: boolean getThemeValue(int,int,android.util.TypedValue,boolean)>
SOURCE|<com.android.exchange.EasSyncService: boolean getValidateRedirect(com.android.exchange.EasResponse,com.android.emailcommon.provider.HostAuth)>
SOURCE|<com.android.calendar.agenda.AgendaByDayAdapter: int getHeaderPosition(int)>
SOURCE|<android.view.ViewConfiguration: int getLongPressTimeout()>
SOURCE|<com.android.ex.variablespeed.EngineParameters: float getWindowOverlapDuration()>
SOURCE|<com.android.internal.app.ResolverActivity: android.graphics.drawable.Drawable getIcon(android.content.res.Resources,int)>
SOURCE|<android.telephony.CellIdentityCdma: android.telephony.CellIdentityCdma copy()>
SOURCE|<android.widget.PopupWindow: int getInputMethodMode()>
SOURCE|<org.apache.http.impl.client.AbstractHttpClient: org.apache.http.auth.AuthSchemeRegistry getAuthSchemes()>
SOURCE|<android.view.inputmethod.InputMethodSubtype: java.lang.String getLocale()>
SOURCE|<android.os.INetworkManagementService$Stub$Proxy: android.net.NetworkStats getNetworkStatsSummaryDev()>
SOURCE|<com.android.gallery3d.picasasource.PicasaAlbum: android.database.Cursor internalQuery(int,int)>
SOURCE|<org.apache.harmony.security.utils.ObjectIdentifier: int[] getOid()>
SOURCE|<com.coremedia.iso.boxes.SampleToChunkBox: long getContentSize()>
SOURCE|<com.coremedia.iso.boxes.mdat.SampleList: java.util.Map getOffsets(com.coremedia.iso.boxes.fragment.MovieFragmentBox,long,com.coremedia.iso.boxes.fragment.TrackExtendsBox)>
SOURCE|<org.ccil.cowan.tagsoup.AttributesImpl: java.lang.String getValue(java.lang.String,java.lang.String)>
SOURCE|<android.net.Uri$OpaqueUri: java.lang.String getQuery()>
SOURCE|<com.android.email.activity.UiUtilities: java.lang.String getMessageCountForUi(android.content.Context,int,boolean)>
SOURCE|<javax.xml.datatype.Duration: int getYears()>
SOURCE|<java.util.concurrent.locks.ReentrantLock$Sync: int getHoldCount()>
SOURCE|<android.app.LoadedApk$ServiceDispatcher: int getFlags()>
SOURCE|<java.util.regex.PatternSyntaxException: java.lang.String getDescription()>
SOURCE|<com.android.internal.telephony.GsmAlphabet: int[] getEnabledLockingShiftTables()>
SOURCE|<com.android.email.mail.store.ImapStore$ImapException: java.lang.String getAlertText()>
SOURCE|<com.android.calendar.month.MonthWeekEventsView: int getDayIndexFromLocation(float)>
SOURCE|<com.android.contacts.editor.ContactEditorFragment$CancelEditDialogFragment: android.app.Dialog onCreateDialog(android.os.Bundle)>
SOURCE|<android.renderscript.ProgramFragmentFixedFunction$Builder: android.renderscript.ProgramFragmentFixedFunction create()>
SOURCE|<com.android.providers.contacts.ContactLocaleUtils: com.android.providers.contacts.ContactLocaleUtils getIntance()>
SOURCE|<com.android.internal.widget.ActionBarView: int getDropdownSelectedPosition()>
SOURCE|<com.android.internal.os.BatteryStatsImpl: int getPhoneSignalStrengthCount(int,int)>
SOURCE|<gov.nist.javax.sip.header.SIPHeaderList: java.lang.Object clone()>
SOURCE|<com.google.android.picasasync.UploadTaskEntry: com.google.android.picasasync.UploadTaskEntry createNew(android.content.ContentValues,int)>
SOURCE|<android.widget.SimpleAdapter: android.widget.SimpleAdapter$ViewBinder getViewBinder()>
SOURCE|<com.android.deskclock.widget.multiwaveview.GlowPadView: int getSuggestedMinimumWidth()>
SOURCE|<android.telephony.ServiceState: int getCssIndicator()>
SOURCE|<com.android.contacts.group.GroupBrowseListFragment: android.database.Cursor access$302(com.android.contacts.group.GroupBrowseListFragment,android.database.Cursor)>
SOURCE|<com.android.launcher2.CellLayout$LayoutParams: int getY()>
SOURCE|<com.android.internal.telephony.IccUtils: android.graphics.Bitmap parseToBnW(byte[],int)>
SOURCE|<android.bluetooth.IBluetooth$Stub$Proxy: android.os.ParcelFileDescriptor connectSocket(android.bluetooth.BluetoothDevice,int,android.os.ParcelUuid,int,int)>
SOURCE|<com.android.camera.CameraActivity: long getPictureDisplayedToJpegCallbackTime()>
SOURCE|<com.android.contacts.list.LegacyPostalAddressListAdapter: android.view.View newView(android.content.Context,int,android.database.Cursor,int,android.view.ViewGroup)>
SOURCE|<java.time.ZonedDateTime: java.time.ZoneId getZone()>
SOURCE|<java.net.Socket: int getSoTimeout()>
SOURCE|<com.android.org.bouncycastle.asn1.ASN1OctetString: com.android.org.bouncycastle.asn1.ASN1OctetString getInstance(com.android.org.bouncycastle.asn1.ASN1TaggedObject,boolean)>
SOURCE|<android.text.method.MetaKeyKeyListener: int getMetaState(java.lang.CharSequence)>
SOURCE|<android.os.Environment: java.io.File getDataDirectory()>
SOURCE|<android.webkit.WebViewClassic: android.graphics.Bitmap getFavicon()>
SOURCE|<com.android.mms.model.MediaModel: android.net.Uri getUri()>
SOURCE|<com.android.contacts.model.Contact: java.lang.Exception getException()>
SOURCE|<android.app.PendingIntent: android.content.Intent getIntent()>
SOURCE|<com.android.internal.telephony.IccRecords: com.android.internal.telephony.ims.IsimRecords getIsimRecords()>
SOURCE|<org.apache.harmony.xml.dom.AttrImpl: java.lang.String getName()>
SOURCE|<android.os.RemoteCallbackList: int getRegisteredCallbackCount()>
SOURCE|<gov.nist.javax.sip.SipStackImpl: java.util.Iterator getListeningPoints()>
SOURCE|<org.apache.harmony.security.provider.cert.X509CertImpl: javax.security.auth.x500.X500Principal getIssuerX500Principal()>
SOURCE|<com.google.common.collect.MapMakerInternalMap$SoftEntry: int getHash()>
SOURCE|<java.util.logging.Logger: java.util.logging.Logger getAnonymousLogger(java.lang.String)>
SOURCE|<java.util.concurrent.atomic.AtomicLongFieldUpdater: long getAndSet(java.lang.Object,long)>
SOURCE|<android.view.MotionEvent: float getHistoricalSize(int)>
SOURCE|<com.android.server.am.CompatModePackages: int getFrontActivityScreenCompatModeLocked()>
SOURCE|<com.coremedia.iso.boxes.TrackHeaderBox: long getCreationTime()>
SOURCE|<com.android.browser.Tab: android.webkit.WebView getTopWindow()>
SOURCE|<android.content.ContextWrapper: java.io.File getSharedPrefsFile(java.lang.String)>
SOURCE|<android.test.mock.MockResources: java.lang.String getQuantityString(int,int,java.lang.Object[])>
SOURCE|<com.android.internal.telephony.gsm.GsmDataConnectionTracker: java.lang.String[] getActiveApnTypes()>
SOURCE|<com.android.contacts.util.StreamItemEntry: long getTimestamp()>
SOURCE|<gov.nist.javax.sip.header.AuthenticationHeader: java.lang.String getUsername()>
SOURCE|<com.android.launcher2.Workspace: com.android.launcher2.CellLayout getCurrentDropLayout()>
SOURCE|<com.android.bluetooth.hfp.HeadsetPhoneState: int getNumActiveCall()>
SOURCE|<com.android.internal.telephony.cdma.CDMALTEPhone: void getAvailableNetworks(android.os.Message)>
SOURCE|<gov.nist.javax.sip.stack.TLSMessageChannel: java.lang.String getViaHost()>
SOURCE|<android.os.Environment: java.io.File getMediaStorageDirectory()>
SOURCE|<android.widget.SearchView: java.lang.CharSequence getQueryHint()>
SOURCE|<java.nio.SocketChannelImpl: java.io.FileDescriptor getFD()>
SOURCE|<android.webkit.WebViewClassic: android.content.Context getContext()>
SOURCE|<android.database.BulkCursorToCursorAdaptor: android.database.IContentObserver getObserver()>
SOURCE|<gov.nist.javax.sip.stack.UDPMessageProcessor: int getPort()>
SOURCE|<com.android.server.wm.WindowAnimator: com.android.server.wm.ScreenRotationAnimation getScreenRotationAnimationLocked(int)>
SOURCE|<javax.crypto.Cipher: byte[] update(byte[])>
SOURCE|<org.apache.http.conn.routing.HttpRoute: org.apache.http.HttpHost getTargetHost()>
SOURCE|<com.android.providers.calendar.CalendarInstancesHelper: java.lang.String getSyncIdKey(java.lang.String,long)>
SOURCE|<android.filterfw.core.SimpleFrame: float[] getFloats()>
SOURCE|<com.android.server.am.ActivityStack: java.util.ArrayList processStoppingActivitiesLocked(boolean)>
SOURCE|<android.os.Environment: java.io.File getDownloadCacheDirectory()>
SOURCE|<org.apache.harmony.xml.dom.EntityReferenceImpl: short getNodeType()>
SOURCE|<com.android.contacts.ContactsActivity: android.view.View getView(int)>
SOURCE|<android.os.Parcel: android.util.SparseArray readSparseArray(java.lang.ClassLoader)>
SOURCE|<android.filterfw.core.SerializedFrame: java.nio.ByteBuffer getData()>
SOURCE|<com.android.mms.dom.DocumentImpl: boolean getXmlStandalone()>
SOURCE|<com.android.contacts.model.account.ExternalAccountType: java.lang.String getViewGroupActivity()>
SOURCE|<android.media.videoeditor.Transition: java.lang.String getFilename()>
SOURCE|<com.android.mms.dom.smil.SmilParElementImpl$1: org.w3c.dom.smil.ElementTime getParentElementTime()>
SOURCE|<android.widget.NumberPicker: android.view.accessibility.AccessibilityNodeProvider getAccessibilityNodeProvider()>
SOURCE|<com.android.contacts.list.ContactTileAdapter: int getNumFrequents()>
SOURCE|<dalvik.system.profiler.PortableThreadSampler: java.lang.StackTraceElement[] getStackTrace(java.lang.Thread)>
SOURCE|<android.os.storage.IMountService$Stub$Proxy: java.lang.String getVolumeState(java.lang.String)>
SOURCE|<com.android.contacts.interactions.GroupDeletionDialogFragment: android.app.Dialog onCreateDialog(android.os.Bundle)>
SOURCE|<com.coremedia.iso.boxes.TimeToSampleBox: long getContentSize()>
SOURCE|<android.filterfw.core.Frame: android.filterfw.core.FrameManager getFrameManager()>
SOURCE|<android.graphics.drawable.ShapeDrawable: android.graphics.drawable.Drawable$ConstantState getConstantState()>
SOURCE|<com.android.mms.data.Contact: java.lang.String getName()>
SOURCE|<dalvik.system.SocketTagger: dalvik.system.SocketTagger get()>
SOURCE|<com.android.org.bouncycastle.asn1.DERExternal: com.android.org.bouncycastle.asn1.ASN1Primitive getDataValueDescriptor()>
SOURCE|<android.view.View: int getSuggestedMinimumWidth()>
SOURCE|<com.android.providers.userdictionary.UserDictionaryProvider: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>
SOURCE|<android.database.CursorToBulkCursorAdaptor: android.database.BulkCursorDescriptor getBulkCursorDescriptor()>
SOURCE|<org.apache.http.params.AbstractHttpParams: boolean getBooleanParameter(java.lang.String,boolean)>
SOURCE|<android.app.Activity: android.app.LoaderManagerImpl getLoaderManager(java.lang.String,boolean,boolean)>
SOURCE|<java.net.URLClassLoader: java.net.URL[] getURLs()>
SOURCE|<com.android.internal.telephony.Connection: java.lang.String toString()>
SOURCE|<com.android.providers.contacts.ContactLocaleUtils$ContactLocaleUtilsBase: java.lang.String getSortKey(java.lang.String)>
SOURCE|<android.media.RingtoneManager: boolean getIncludeDrm()>
SOURCE|<com.android.gallery3d.data.MediaSet: java.util.ArrayList getMediaItem(int,int)>
SOURCE|<android.content.res.AssetFileDescriptor: long getDeclaredLength()>
SOURCE|<android.content.Intent: int getFlags()>
SOURCE|<com.android.internal.app.ResolverActivity$ResolveListAdapter: long getItemId(int)>
SOURCE|<gov.nist.javax.sip.message.MultipartMimeContentImpl: java.util.Iterator getContents()>
SOURCE|<android.content.Intent: android.os.Bundle getExtras()>
SOURCE|<android.media.videoeditor.MediaArtistNativeHelper: int getFileType(int)>
SOURCE|<android.widget.AbsListView: android.view.View getSelectedView()>
SOURCE|<java.security.spec.PKCS8EncodedKeySpec: byte[] getEncoded()>
SOURCE|<android.view.Display: android.view.CompatibilityInfoHolder getCompatibilityInfo()>
SOURCE|<java.time.Period: int getDays()>
SOURCE|<com.android.server.ThrottleService$DataRecorder: long getPeriodRx(int)>
SOURCE|<android.media.AudioManager: int getVibrateSetting(int)>
SOURCE|<org.apache.harmony.xnet.provider.jsse.OpenSSLSocketImpl: boolean getNeedClientAuth()>
SOURCE|<org.apache.harmony.xml.dom.DOMErrorImpl: java.lang.Object getRelatedException()>
SOURCE|<java.sql.Time: int getYear()>
SOURCE|<android.widget.AbsSpinner: int getChildHeight(android.view.View)>
SOURCE|<com.android.inputmethod.latin.UserHistoryForgettingCurveUtils$ForgettingCurveParams: int getFrequency()>
SOURCE|<com.google.android.apps.lightcycle.opengl.DrawableGL: com.google.android.apps.lightcycle.opengl.Shader getShader()>
SOURCE|<com.android.server.accessibility.AccessibilityManagerService: boolean getAccessibilityFocusBoundsInActiveWindow(android.graphics.Rect)>
SOURCE|<java.util.LinkedHashMap: java.util.Iterator newKeyIterator()>
SOURCE|<android.widget.GridLayout: int getOrientation()>
SOURCE|<android.view.View: java.lang.Object getTag()>
SOURCE|<android.content.Intent: void setExtrasClassLoader(java.lang.ClassLoader)>
SOURCE|<com.android.videoeditor.AlertDialogs: android.app.AlertDialog createAlert(android.content.Context,java.lang.String,int,java.lang.String,java.lang.String,android.content.DialogInterface$OnClickListener,java.lang.String,android.content.DialogInterface$OnClickListener,android.content.DialogInterface$OnCancelListener,boolean)>
SOURCE|<com.android.contacts.list.ContactListAdapter: android.view.View newView(android.content.Context,int,android.database.Cursor,int,android.view.ViewGroup)>
SOURCE|<java.nio.ShortArrayBuffer: java.nio.ShortBuffer get(short[],int,int)>
SOURCE|<com.android.mms.util.RateController: com.android.mms.util.RateController getInstance()>
SOURCE|<com.android.contacts.editor.ContactEditorFragment$AggregationSuggestionAdapter: int getCount()>
SOURCE|<gov.nist.javax.sip.address.Authority: int getPort()>
SOURCE|<android.graphics.Paint: android.graphics.PathEffect getPathEffect()>
SOURCE|<android.media.AudioService: int getVibrateSetting(int)>
SOURCE|<com.android.nfc.dhimpl.NativeNfcManager: byte[][] getWipeApdus()>
SOURCE|<com.android.internal.telephony.PhoneBase: java.lang.String getActiveApnHost(java.lang.String)>
SOURCE|<android.view.KeyCharacterMap: int getKeyboardType()>
SOURCE|<com.android.internal.telephony.IccPhoneBookInterfaceManagerProxy: java.util.List getAdnRecordsInEf(int)>
SOURCE|<com.google.android.picasasync.PicasaFacade: android.net.Uri getPostPhotosUri()>
SOURCE|<com.android.server.accessibility.TouchExplorer$ReceivedPointerTracker: int getPrimaryActivePointerId()>
SOURCE|<android.graphics.PathMeasure: boolean getPosTan(float,float[],float[])>
SOURCE|<java.nio.charset.CharsetDecoder: java.nio.charset.CodingErrorAction unmappableCharacterAction()>
SOURCE|<com.googlecode.mp4parser.authoring.tracks.CroppedTrack: com.googlecode.mp4parser.authoring.TrackMetaData getTrackMetaData()>
SOURCE|<android.view.View: float getPivotX()>
SOURCE|<com.android.internal.widget.LockPatternUtils: boolean getPowerButtonInstantlyLocks()>
SOURCE|<java.lang.reflect.Field: boolean getBoolean(java.lang.Object)>
SOURCE|<com.android.nfc.NfcService$NfcAdapterExtrasService: java.lang.String getDriverName(java.lang.String)>
SOURCE|<com.android.contacts.ContactsActivity: android.content.ContentResolver getContentResolver()>
SOURCE|<com.android.calendar.agenda.AgendaByDayAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)>
SOURCE|<android.os.PowerManager: android.os.PowerManager$WakeLock newWakeLock(int,java.lang.String)>
SOURCE|<com.android.providers.contacts.ContactsDatabaseHelper: long getMimeTypeId(java.lang.String)>
SOURCE|<android.app.admin.DevicePolicyManager: int getPasswordQuality(android.content.ComponentName,int)>
SOURCE|<com.android.server.RecognitionManagerService: android.content.ComponentName getCurRecognizer(int)>
SOURCE|<android.media.RingtoneManager: android.database.Cursor getCursor()>
SOURCE|<com.android.browser.view.BookmarkExpandableView$BookmarkAccountAdapter: java.lang.Object getChild(int,int)>
SOURCE|<android.media.audiofx.EnvironmentalReverb: short getReflectionsLevel()>
SOURCE|<android.webkit.WebSettingsClassic: android.webkit.WebSettingsClassic$AutoFillProfile getAutoFillProfile()>
SOURCE|<javax.security.cert.X509Certificate$1: java.security.Principal getIssuerDN()>
SOURCE|<android.webkit.ZoomManager: float getDefaultMinZoomScale()>
SOURCE|<com.android.gallery3d.data.LocalMergeAlbum: int getSupportedOperations()>
SOURCE|<com.android.internal.telephony.PhoneBase: void getEnhancedVoicePrivacy(android.os.Message)>
SOURCE|<com.android.inputmethod.latin.suggestions.SuggestionStripView$SuggestionStripViewParams: int getMaxMoreSuggestionsRow()>
SOURCE|<gov.nist.javax.sip.header.ims.SecurityAgree: java.lang.String getSecurityMechanism()>
SOURCE|<com.android.contacts.list.ContactListItemView: android.widget.TextView getCountView()>
SOURCE|<android.location.Location: long getElapsedRealtimeNanos()>
SOURCE|<com.android.bluetooth.btservice.AdapterService$AdapterServiceBinder: int getState()>
SOURCE|<android.net.nsd.NsdServiceInfo: java.lang.String getServiceType()>
SOURCE|<com.android.deskclock.widget.multiwaveview.Ease$Quint$3: float getInterpolation(float)>
SOURCE|<com.android.email.mail.store.ImapConnection: java.util.List getCommandResponses()>
SOURCE|<com.android.internal.telephony.CallManager: com.android.internal.telephony.Call$State getActiveFgCallState()>
SOURCE|<android.content.ContentProvider: android.content.Context getContext()>
SOURCE|<org.apache.harmony.xml.dom.TextImpl: java.lang.String getNodeName()>
SOURCE|<android.widget.GridLayout$4: int getAlignmentValue(android.view.View,int,int)>
SOURCE|<java.net.Socket: int getSendBufferSize()>
SOURCE|<java.security.cert.X509CertSelector: java.lang.String getSubjectAsString()>
SOURCE|<com.android.gallery3d.common.OverScroller: int getCurrX()>
SOURCE|<java.util.Formatter$FormatSpecifierParser: java.lang.String getFormatSpecifierText()>
SOURCE|<gov.nist.core.NameValueList: gov.nist.core.NameValue getNameValue(java.lang.String)>
SOURCE|<android.view.inputmethod.InputMethodSubtype: java.lang.String getMode()>
SOURCE|<com.android.inputmethod.keyboard.KeyDetector: int getTouchX(int)>
SOURCE|<com.android.gallery3d.common.Utils: byte[] getBytes(java.lang.String)>
SOURCE|<com.android.gallery3d.exif.ExifParser: int getStripSize()>
SOURCE|<gov.nist.javax.sip.stack.SIPTransaction: int getRetransmitTimer()>
SOURCE|<com.android.contacts.model.RawContactDelta: java.lang.String getDataSet()>
SOURCE|<com.android.server.location.MockProvider: long getStatusUpdateTime()>
SOURCE|<java.security.spec.RSAPublicKeySpec: java.math.BigInteger getPublicExponent()>
SOURCE|<com.android.mms.dom.events.EventImpl: java.lang.String getType()>
SOURCE|<org.apache.harmony.xnet.provider.jsse.AlertProtocol: java.lang.String getAlertDescription()>
SOURCE|<java.util.zip.Deflater: int getTotalIn()>
SOURCE|<org.ccil.cowan.tagsoup.HTMLScanner: java.lang.String getSystemId()>
SOURCE|<android.os.IPowerManager$Stub: android.os.IBinder asBinder()>
SOURCE|<java.security.spec.ECParameterSpec: int getCofactor()>
SOURCE|<java.util.regex.PatternSyntaxException: java.lang.String getMessage()>
SOURCE|<android.content.ContextWrapper: android.content.Context createConfigurationContext(android.content.res.Configuration)>
SOURCE|<com.android.email.mail.store.ImapFolder: com.android.emailcommon.mail.Message getMessage(java.lang.String)>
SOURCE|<org.apache.james.mime4j.field.address.parser.AddressListParser: org.apache.james.mime4j.field.address.parser.Token getToken(int)>
SOURCE|<android.media.AudioService: android.media.IRingtonePlayer getRingtonePlayer()>
SOURCE|<com.android.server.input.InputManagerService: android.view.InputDevice[] getInputDevices()>
SOURCE|<com.android.gallery3d.ui.BitmapTexture: int getWidth()>
SOURCE|<com.android.server.IntentResolver: java.lang.Object newResult(android.content.IntentFilter,int,int)>
SOURCE|<android.widget.TextView: int getMinHeight()>
SOURCE|<com.android.internal.telephony.gsm.SmsMessage$PduParser: com.android.internal.telephony.SmsHeader getUserDataHeader()>
SOURCE|<android.net.sip.SipProfile: java.lang.String getAuthUserName()>
SOURCE|<java.time.Instant: long getLong(java.time.temporal.TemporalField)>
SOURCE|<java.security.cert.CertificateRevokedException: java.util.Date getRevocationDate()>
SOURCE|<com.android.gallery3d.filtershow.imageshow.ImageShow: boolean getDirtyGeometryFlag()>
SOURCE|<java.sql.Date: int getHours()>
SOURCE|<com.android.internal.telephony.sip.SipPhone$SipConnection: android.net.rtp.AudioGroup getAudioGroup()>
SOURCE|<android.webkit.WebViewClassic: android.net.http.SslCertificate getCertificate()>
SOURCE|<com.android.server.ConnectivityService: java.lang.String[] getTetherableBluetoothRegexs()>
SOURCE|<org.apache.harmony.xml.ExpatReader: org.xml.sax.ext.LexicalHandler getLexicalHandler()>
SOURCE|<gov.nist.javax.sip.message.MultipartMimeContentImpl: javax.sip.header.ContentTypeHeader getContentTypeHeader()>
SOURCE|<org.kxml2.io.KXmlParser: java.lang.String getName()>
SOURCE|<android.webkit.WebView: android.webkit.WebBackForwardList saveState(android.os.Bundle)>
SOURCE|<com.android.email.mail.store.ImapFolder: int getUnreadMessageCount()>
SOURCE|<com.android.gallery3d.data.LocalAlbumSet: java.lang.String getName()>
SOURCE|<gov.nist.javax.sip.header.RAck: long getCSequenceNumber()>
SOURCE|<java.net.JarURLConnection: java.net.URL getJarFileURL()>
SOURCE|<org.xml.sax.helpers.NamespaceSupport: java.lang.String getURI(java.lang.String)>
SOURCE|<android.widget.RemoteViews$SetRemoteViewsAdapterIntent: java.lang.String getActionName()>
SOURCE|<android.app.ApplicationPackageManager: java.lang.CharSequence getApplicationLabel(android.content.pm.ApplicationInfo)>
SOURCE|<java.util.DuplicateFormatFlagsException: java.lang.String getMessage()>
SOURCE|<libcore.net.http.HttpsURLConnectionImpl: long getExpiration()>
SOURCE|<android.net.SSLCertificateSocketFactory: javax.net.ssl.SSLSocketFactory getInsecure(int,android.net.SSLSessionCache)>
SOURCE|<com.android.email.activity.MessageViewFragmentBase: com.android.emailcommon.provider.EmailContent$Message reloadMessageSync(android.app.Activity)>
SOURCE|<com.android.providers.calendar.CalendarDatabaseHelper: com.android.providers.calendar.CalendarDatabaseHelper getInstance(android.content.Context)>
SOURCE|<com.android.mms.data.WorkingMessage: com.android.mms.model.SlideshowModel getSlideshow()>
SOURCE|<android.widget.TabHost: android.widget.FrameLayout getTabContentView()>
SOURCE|<com.android.videoeditor.widgets.OverlayView: int getState()>
SOURCE|<com.android.commands.monkey.MonkeySourceNetworkVars$8: java.lang.String get()>
SOURCE|<com.android.launcher2.PagedViewCellLayout: int getContentHeight()>
SOURCE|<android.speech.tts.TextToSpeech: java.util.Set getFeatures(java.util.Locale)>
SOURCE|<com.android.internal.view.IInputMethodManager$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
SOURCE|<java.util.concurrent.atomic.LongAccumulator: long get()>
SOURCE|<android.content.CursorLoader: java.lang.String[] getSelectionArgs()>
SOURCE|<com.android.contacts.editor.GroupMembershipView$GroupMembershipAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)>
SOURCE|<android.app.ApplicationPackageManager: java.util.List queryIntentActivityOptions(android.content.ComponentName,android.content.Intent[],android.content.Intent,int)>
SOURCE|<android.content.pm.ActivityInfo: int getThemeResource()>
SOURCE|<com.android.internal.os.BatteryStatsImpl$Uid: com.android.internal.os.BatteryStatsImpl$Uid$Pkg getPackageStatsLocked(java.lang.String)>
SOURCE|<android.view.MotionEvent: float getOrientation()>
SOURCE|<android.view.inputmethod.InputMethodInfo: int getIsDefaultResourceId()>
SOURCE|<android.opengl.GLUtils: int getInternalFormat(android.graphics.Bitmap)>
SOURCE|<libcore.net.http.HttpsURLConnectionImpl$ProxyConnectEngine: libcore.net.http.RawHeaders getNetworkRequestHeaders()>
SOURCE|<android.accounts.AccountManager: java.lang.String blockingGetAuthToken(android.accounts.Account,java.lang.String,boolean)>
SOURCE|<org.apache.harmony.security.x509.TBSCertList: int getVersion()>
SOURCE|<javax.net.ssl.SSLEngine: java.lang.String getPeerHost()>
SOURCE|<java.text.RuleBasedCollator: java.text.CollationKey getCollationKey(java.lang.String)>
SOURCE|<android.text.method.SingleLineTransformationMethod: char[] getReplacement()>
SOURCE|<android.util.MonthDisplayHelper: int[] getDigitsForRow(int)>
SOURCE|<com.android.gallery3d.ui.SlotView$Layout: int getVisibleEnd()>
SOURCE|<java.text.DateFormatSymbols: java.lang.String[] getWeekdays()>
SOURCE|<org.apache.harmony.xnet.provider.jsse.OpenSSLRSAPrivateKey: java.math.BigInteger getModulus()>
SOURCE|<com.android.internal.view.IInputMethodSession$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
SOURCE|<android.app.DialogFragment: android.view.LayoutInflater getLayoutInflater(android.os.Bundle)>
SOURCE|<com.google.common.collect.MapMakerInternalMap$WeakValueReference: com.google.common.collect.MapMakerInternalMap$ReferenceEntry getEntry()>
SOURCE|<com.android.internal.telephony.PhoneBase: android.content.Context getContext()>
SOURCE|<android.net.sip.SipManager: android.net.sip.SipAudioCall takeAudioCall(android.content.Intent,android.net.sip.SipAudioCall$Listener)>
SOURCE|<com.android.mms.model.LayoutModel: java.util.ArrayList getRegions()>
SOURCE|<com.android.server.NativeDaemonConnector: java.util.ArrayList doCommand(java.lang.String)>
SOURCE|<com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadataCollection: int getMetadataCount()>
SOURCE|<com.google.common.collect.MapMakerInternalMap$WriteThroughEntry: java.lang.Object getKey()>
SOURCE|<com.android.internal.telephony.sip.SipCallBase: java.util.List getConnections()>
SOURCE|<com.android.bluetooth.btservice.AdapterService: int getProfileConnectionState(int)>
SOURCE|<android.hardware.input.IInputManager$Stub$Proxy: android.hardware.input.KeyboardLayout getKeyboardLayout(java.lang.String)>
SOURCE|<java.security.spec.RSAMultiPrimePrivateCrtKeySpec: java.math.BigInteger getCrtCoefficient()>
SOURCE|<com.android.browser.addbookmark.FolderSpinnerAdapter: int getCount()>
SOURCE|<libcore.io.ForwardingOs: int geteuid()>
SOURCE|<com.android.org.bouncycastle.asn1.DERT61String: java.lang.String getString()>
SOURCE|<android.widget.ActivityChooserModel: android.content.pm.ResolveInfo getDefaultActivity()>
SOURCE|<com.android.inputmethod.keyboard.Key: int getDrawWidth()>
SOURCE|<android.view.IDisplayContentChangeListener$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
SOURCE|<com.android.gallery3d.picasasource.PicasaAlbumSet$PicasaSyncTaskFuture: int getSyncResult()>
SOURCE|<com.android.server.location.GpsLocationProvider: java.lang.String getName()>
SOURCE|<android.provider.MediaStore$Audio$Albums: android.net.Uri getContentUri(java.lang.String)>
SOURCE|<java.security.spec.ECPublicKeySpec: java.security.spec.ECParameterSpec getParams()>
SOURCE|<com.android.internal.telephony.PhoneProxy: int getPhoneType()>
SOURCE|<com.googlecode.mp4parser.authoring.Mp4TrackImpl: com.googlecode.mp4parser.authoring.TrackMetaData getTrackMetaData()>
SOURCE|<com.android.phone.PhoneGlobals: boolean getRestoreMuteOnInCallResume()>
SOURCE|<com.android.emailcommon.service.IAccountService$Stub$Proxy: java.lang.String getDeviceId()>
SOURCE|<gov.nist.javax.sip.header.Warning: java.lang.String getText()>
SOURCE|<org.apache.harmony.security.provider.cert.X509CertImpl: byte[] getSigAlgParams()>
SOURCE|<android.bluetooth.IBluetoothHealth$Stub$Proxy: int getHealthDeviceConnectionState(android.bluetooth.BluetoothDevice)>
SOURCE|<org.apache.harmony.xnet.provider.jsse.Finished: byte[] getData()>
SOURCE|<org.apache.http.conn.params.ConnManagerParams: long getTimeout(org.apache.http.params.HttpParams)>
SOURCE|<com.android.gallery3d.data.LocalVideo: int getHeight()>
SOURCE|<android.net.TrafficStats: long getMobileTxPackets()>
SOURCE|<com.android.internal.view.menu.ListMenuItemView: com.android.internal.view.menu.MenuItemImpl getItemData()>
SOURCE|<android.widget.SearchView: int getImeOptions()>
SOURCE|<android.media.MediaRouter$RouteCategory: java.lang.CharSequence getName()>
SOURCE|<android.os.UserManager: int getMaxSupportedUsers()>
SOURCE|<java.nio.file.FileSystemException: java.lang.String getReason()>
SOURCE|<com.google.common.collect.ForwardingMap: java.lang.Object remove(java.lang.Object)>
SOURCE|<org.apache.http.impl.AbstractHttpServerConnection: org.apache.http.HttpRequestFactory createHttpRequestFactory()>
SOURCE|<java.net.URISyntaxException: java.lang.String getInput()>
SOURCE|<android.view.ViewGroup: int getLayoutMode()>
SOURCE|<android.view.accessibility.AccessibilityNodeInfo: int getMovementGranularities()>
SOURCE|<org.apache.harmony.xnet.provider.jsse.OpenSSLSocketImplWrapper: int getReceiveBufferSize()>
SOURCE|<android.text.method.ReplacementTransformationMethod$SpannedReplacementCharSequence: java.lang.Object[] getSpans(int,int,java.lang.Class)>
SOURCE|<org.xmlpull.v1.XmlPullParserException: java.lang.Throwable getDetail()>
SOURCE|<android.widget.AbsListView: android.view.View obtainView(int,boolean[])>
SOURCE|<android.test.mock.MockPackageManager: android.content.res.XmlResourceParser getXml(java.lang.String,int,android.content.pm.ApplicationInfo)>
SOURCE|<java.nio.HeapByteBuffer: java.nio.ByteBuffer get(byte[],int,int)>
SOURCE|<com.android.server.AppWidgetServiceImpl: int[] getAppWidgetIds(com.android.server.AppWidgetServiceImpl$Host)>
SOURCE|<java.util.logging.Handler: java.util.logging.Formatter getFormatter()>
SOURCE|<org.apache.harmony.security.asn1.ASN1Oid: java.lang.Object getDecodedObject(org.apache.harmony.security.asn1.BerInputStream)>
SOURCE|<com.android.mms.dom.smil.SmilMediaElementImpl: org.w3c.dom.smil.TimeList getBegin()>
SOURCE|<com.android.internal.view.IInputMethodManager$Stub$Proxy: com.android.internal.view.InputBindResult windowGainedFocus(com.android.internal.view.IInputMethodClient,android.os.IBinder,int,int,int,android.view.inputmethod.EditorInfo,com.android.internal.view.IInputContext)>
SOURCE|<java.time.zone.ZoneRules: java.time.ZoneOffset getStandardOffset(java.time.Instant)>
SOURCE|<android.nfc.tech.NfcA: int getTimeout()>
SOURCE|<gov.nist.javax.sip.message.ListMap: gov.nist.javax.sip.header.SIPHeaderList getList(gov.nist.javax.sip.header.SIPHeader)>
SOURCE|<java.time.chrono.HijrahChronology: int getMaximumYear()>
SOURCE|<com.android.contacts.activities.ActionBarAdapter: java.lang.String getQueryString()>
SOURCE|<com.coremedia.iso.boxes.TrackBox: com.coremedia.iso.boxes.TrackHeaderBox getTrackHeaderBox()>
SOURCE|<java.security.Provider: java.util.Set entrySet()>
SOURCE|<com.android.emailcommon.provider.EmailContent$Body: com.android.emailcommon.provider.EmailContent$Body restoreBodyWithMessageId(android.content.Context,long)>
SOURCE|<android.hardware.usb.UsbInterface: int getInterfaceSubclass()>
SOURCE|<android.media.RingtoneManager: int getRingtonePosition(android.net.Uri)>
SOURCE|<java.text.BreakIterator: java.util.Locale[] getAvailableLocales()>
SOURCE|<com.android.internal.telephony.ims.IsimUiccRecords: java.lang.String[] getIsimImpu()>
SOURCE|<android.util.MonthDisplayHelper: int getYear()>
SOURCE|<java.time.MonthDay: long getLong(java.time.temporal.TemporalField)>
SOURCE|<android.content.res.AssetManager: android.content.res.AssetManager getSystem()>
SOURCE|<java.util.concurrent.atomic.AtomicIntegerArray: int getAndDecrement(int)>
SOURCE|<com.android.org.bouncycastle.asn1.ASN1Sequence: com.android.org.bouncycastle.asn1.ASN1Sequence getInstance(com.android.org.bouncycastle.asn1.ASN1TaggedObject,boolean)>
SOURCE|<com.android.browser.BaseUi: android.webkit.WebView getWebView()>
SOURCE|<android.widget.TextView: int getVerticalOffset(boolean)>
SOURCE|<java.net.URLConnection: long getHeaderFieldDate(java.lang.String,long)>
SOURCE|<gov.nist.javax.sip.header.AlertInfo: javax.sip.address.URI getAlertInfo()>
SOURCE|<com.adobe.xmp.impl.XMPNodeUtils: java.lang.String serializeNodeValue(java.lang.Object)>
SOURCE|<android.net.http.AndroidHttpClient: org.apache.http.entity.AbstractHttpEntity getCompressedEntity(byte[],android.content.ContentResolver)>
SOURCE|<android.hardware.Camera$Parameters: float getFocalLength()>
SOURCE|<com.google.common.collect.ComputingConcurrentHashMap$ComputedReference: java.lang.Object get()>
SOURCE|<com.googlecode.mp4parser.authoring.tracks.CroppedTrack: java.util.List getSamples()>
SOURCE|<com.android.calendar.CalendarViewAdapter: int getItemViewType(int)>
SOURCE|<android.widget.FastScroller$ScrollFade: int getAlpha()>
SOURCE|<org.apache.harmony.security.x509.BasicConstraints: int getPathLenConstraint()>
SOURCE|<com.android.contacts.detail.ContactDetailDisplayUtils: java.lang.String getAttribution(android.content.Context,com.android.contacts.model.Contact)>
SOURCE|<com.coremedia.iso.boxes.SampleSizeBox: long[] getSampleSizes()>
SOURCE|<android.widget.TextView: int getTotalPaddingLeft()>
SOURCE|<com.android.contacts.model.Contact: java.lang.String getDisplayName()>
SOURCE|<com.android.gallery3d.app.PhotoDataAdapter: int getImageHeight()>
SOURCE|<android.app.admin.IDevicePolicyManager$Stub$Proxy: boolean getStorageEncryption(android.content.ComponentName,int)>
SOURCE|<java.util.concurrent.atomic.AtomicIntegerArray: int getAndAdd(int,int)>
SOURCE|<com.android.uiautomator.core.UiDevice: java.lang.String getProductName()>
SOURCE|<android.net.Uri$StringUri: java.lang.String getEncodedSchemeSpecificPart()>
SOURCE|<com.android.gallery3d.data.Path: com.android.gallery3d.data.Path getChild(java.lang.String)>
SOURCE|<android.accounts.AccountManagerService: java.lang.String getPassword(android.accounts.Account)>
SOURCE|<android.net.nsd.DnsSdTxtRecord: java.lang.String get(java.lang.String)>
SOURCE|<com.android.contacts.ContactsUtils: android.content.Intent getVoicemailIntent()>
SOURCE|<com.adobe.xmp.impl.XMPNode: com.adobe.xmp.impl.XMPNode getQualifier(int)>
SOURCE|<java.nio.channels.spi.SelectorProvider: java.nio.channels.Channel inheritedChannel()>
SOURCE|<android.view.View: android.view.View$ListenerInfo getListenerInfo()>
SOURCE|<com.android.bluetooth.btservice.AdapterService$AdapterServiceBinder: android.bluetooth.BluetoothDevice[] getBondedDevices()>
SOURCE|<java.time.zone.ZoneOffsetTransition: java.time.LocalDateTime getDateTimeAfter()>
SOURCE|<com.android.contacts.preference.ContactsPreferences: int getDefaultSortOrder()>
SOURCE|<java.text.RuleBasedCollator: java.text.CollationElementIterator getCollationElementIterator(java.lang.String)>
SOURCE|<com.android.calendar.month.SimpleWeeksAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)>
SOURCE|<android.content.res.XmlBlock$Parser: java.lang.Object getProperty(java.lang.String)>
SOURCE|<android.os.DropBoxManager$Entry: long getTimeMillis()>
SOURCE|<com.android.exchange.ExchangeService: int getStatusType(java.lang.String)>
SOURCE|<com.android.bluetooth.btservice.AdapterService: int getScanMode()>
SOURCE|<android.mtp.MtpDevice: byte[] getObject(int,int)>
SOURCE|<com.android.inputmethod.latin.SynchronouslyLoadedUserBinaryDictionary: java.util.ArrayList getSuggestions(com.android.inputmethod.latin.WordComposer,java.lang.CharSequence,com.android.inputmethod.keyboard.ProximityInfo)>
SOURCE|<android.view.GLES20Canvas: int getDisplayList(int)>
SOURCE|<com.android.internal.telephony.SmsMessageBase: byte[] getUserData()>
SOURCE|<com.android.contacts.model.account.ExternalAccountType: java.lang.String getInviteContactActivityClassName()>
SOURCE|<java.nio.charset.Charset: java.lang.String name()>
SOURCE|<com.android.internal.telephony.ITelephony$Stub: com.android.internal.telephony.ITelephony asInterface(android.os.IBinder)>
SOURCE|<com.android.internal.telephony.cdma.RuimPhoneBookInterfaceManager: int[] getAdnRecordsSize(int)>
SOURCE|<com.android.videoeditor.service.MovieOverlay: java.lang.String getId()>
SOURCE|<com.android.contacts.model.account.AccountType: java.lang.CharSequence getViewGroupLabel(android.content.Context)>
SOURCE|<com.android.internal.telephony.SmsMessageBase: int getStatusOnIcc()>
SOURCE|<com.adobe.xmp.options.SerializeOptions: boolean getExactPacketLength()>
SOURCE|<java.time.chrono.HijrahDate: java.time.chrono.HijrahEra getEra()>
SOURCE|<android.widget.GridLayout$5: int getGravityOffset(android.view.View,int)>
SOURCE|<gov.nist.javax.sip.header.HeaderFactoryImpl: javax.sip.header.AcceptLanguageHeader createAcceptLanguageHeader(java.util.Locale)>
SOURCE|<org.apache.harmony.security.pkcs7.ContentInfo: org.apache.harmony.security.pkcs7.SignedData getSignedData()>
SOURCE|<org.apache.http.conn.HttpHostConnectException: org.apache.http.HttpHost getHost()>
SOURCE|<android.net.wifi.p2p.WifiP2pGroup: int getNetworkId()>
SOURCE|<com.android.uiautomator.core.UiAutomatorBridge: com.android.uiautomator.core.InteractionController getInteractionController()>
SOURCE|<com.android.bluetooth.pbap.BluetoothPbapUtils: java.lang.String createProfileVCard(android.content.Context,int,byte[])>
SOURCE|<gov.nist.javax.sip.header.SIPHeaderList: javax.sip.header.Header getFirst()>
SOURCE|<android.net.SSLCertificateSocketFactory: byte[] getNpnSelectedProtocol(java.net.Socket)>
SOURCE|<com.google.android.mms.pdu.SendReq: long getExpiry()>
SOURCE|<android.webkit.WebSettings: int getMinimumLogicalFontSize()>
SOURCE|<android.app.ActivityManagerNative: android.app.IActivityManager getDefault()>
SOURCE|<javax.xml.datatype.XMLGregorianCalendar: int getMillisecond()>
SOURCE|<org.apache.http.conn.scheme.SchemeRegistry: org.apache.http.conn.scheme.Scheme get(java.lang.String)>
SOURCE|<com.android.deskclock.widget.multiwaveview.Ease$Cubic$1: float getInterpolation(float)>
SOURCE|<android.content.ContextWrapper: android.content.res.Resources getResources()>
SOURCE|<android.telephony.ServiceState: int getCdmaDefaultRoamingIndicator()>
SOURCE|<com.android.email.mail.store.ImapStore: java.util.Collection getConnectionPoolForTest()>
SOURCE|<com.android.internal.telephony.gsm.SmsCbHeader: int getNumberOfPages()>
SOURCE|<android.filterpacks.imageproc.AutoFixFilter: android.filterfw.core.FrameFormat getOutputFormat(java.lang.String,android.filterfw.core.FrameFormat)>
SOURCE|<android.location.Geofence: double getLatitude()>
SOURCE|<com.coremedia.iso.boxes.CompositionTimeToSample$Entry: int getCount()>
SOURCE|<com.android.server.accessibility.TouchExplorer$ReceivedPointerTracker: long getReceivedPointerDownTime(int)>
SOURCE|<com.android.internal.telephony.cdma.CDMAPhone: java.lang.String getPhoneName()>
SOURCE|<android.telephony.CellIdentityGsm: int getMnc()>
SOURCE|<android.net.wifi.WifiManager: android.net.wifi.WifiManager$WifiLock createWifiLock(java.lang.String)>
SOURCE|<com.android.gallery3d.filtershow.imageshow.ImageGeometry: android.graphics.Matrix getLocalGeoFlipMatrix(float,float)>
SOURCE|<com.android.mms.util.Recycler$SmsRecycler: android.database.Cursor getAllThreads(android.content.Context)>
SOURCE|<com.android.launcher2.Workspace: android.animation.Animator getChangeStateAnimation(com.android.launcher2.Workspace$State,boolean,int)>
SOURCE|<android.content.res.Resources: java.lang.String getResourcePackageName(int)>
SOURCE|<com.android.server.ServiceWatcher: java.lang.String getBestPackageName()>
SOURCE|<android.text.format.Time: int getWeekNumber()>
SOURCE|<android.content.BroadcastReceiver: int getResultCode()>
SOURCE|<com.android.email.mail.store.imap.ImapTempFileLiteral: java.io.InputStream getAsStream()>
SOURCE|<org.xml.sax.helpers.NamespaceSupport$Context: java.util.Enumeration getDeclaredPrefixes()>
SOURCE|<android.view.ViewConfiguration: float getScrollFriction()>
SOURCE|<com.android.internal.telephony.AdnRecord: java.lang.String getNumber()>
SOURCE|<org.apache.http.ProtocolVersion: java.lang.String getProtocol()>
SOURCE|<com.android.browser.search.DefaultSearchEngine: java.lang.CharSequence getLabel()>
SOURCE|<com.android.gallery3d.exif.ExifData: com.android.gallery3d.exif.IfdData getIfdData(int)>
SOURCE|<com.android.internal.widget.LockPatternUtils: android.app.admin.DevicePolicyManager getDevicePolicyManager()>
SOURCE|<com.android.internal.telephony.DataConnectionTracker: int enableApnType(java.lang.String)>
SOURCE|<junit.runner.StandardTestSuiteLoader: java.lang.Class load(java.lang.String)>
SOURCE|<android.text.method.PasswordTransformationMethod: java.lang.CharSequence getTransformation(java.lang.CharSequence,android.view.View)>
SOURCE|<java.util.Locale: java.lang.String getDisplayCountry()>
SOURCE|<android.content.ContentResolver: java.util.List getPeriodicSyncs(android.accounts.Account,java.lang.String)>
SOURCE|<com.android.deskclock.timer.TimerFragment: android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)>
SOURCE|<org.xml.sax.helpers.LocatorImpl: java.lang.String getPublicId()>
SOURCE|<com.android.internal.widget.multiwaveview.PointCloud$GlowManager: float getRadius()>
SOURCE|<java.security.spec.ECFieldF2m: java.math.BigInteger getReductionPolynomial()>
SOURCE|<com.google.android.apps.lightcycle.panorama.LightCycleRenderer: com.google.android.apps.lightcycle.panorama.Pano2dPreviewOverlay getPanoPreview2d()>
SOURCE|<android.accessibilityservice.UiTestAutomationBridge: android.view.accessibility.AccessibilityNodeInfo getRootAccessibilityNodeInfoInActiveWindow()>
SOURCE|<android.widget.ActivityChooserModel: int getActivityCount()>
SOURCE|<android.telephony.SignalStrength: int getEvdoLevel()>
SOURCE|<com.android.nfc.dhimpl.NativeNfcManager: int getDefaultLlcpRwSize()>
SOURCE|<java.nio.CharArrayBuffer: java.nio.CharBuffer get(char[],int,int)>
SOURCE|<android.app.ActivityThread: android.app.LoadedApk getPackageInfoNoCheck(android.content.pm.ApplicationInfo,android.content.res.CompatibilityInfo)>
SOURCE|<com.android.nfc.dhimpl.NativeNfcManager: int getMaxTransceiveLength(int)>
SOURCE|<android.widget.SimpleExpandableListAdapter: java.lang.Object getGroup(int)>
SOURCE|<java.sql.DriverManager: java.io.PrintWriter getLogWriter()>
SOURCE|<com.googlecode.mp4parser.authoring.builder.TwoSecondIntersectionFinder: long getDuration(com.googlecode.mp4parser.authoring.Track)>
SOURCE|<org.apache.harmony.xnet.provider.jsse.DefaultSSLContextImpl: javax.net.ssl.KeyManager[] getKeyManagers()>
SOURCE|<android.view.inputmethod.InputMethodManager: android.view.inputmethod.InputMethodManager getInstance(android.os.Looper)>
SOURCE|<org.apache.http.conn.params.ConnPerRouteBean: int getMaxForRoute(org.apache.http.conn.routing.HttpRoute)>
SOURCE|<android.widget.TextView: int getMaxEms()>
SOURCE|<java.lang.Character: int getType(char)>
SOURCE|<android.renderscript.Program: int getTextureCount()>
SOURCE|<com.android.org.bouncycastle.asn1.x509.X509Name: com.android.org.bouncycastle.asn1.x509.X509Name getInstance(java.lang.Object)>
SOURCE|<com.android.server.location.GeofenceState: double getDistanceToBoundary()>
SOURCE|<java.security.cert.X509CertSelector: java.math.BigInteger getSerialNumber()>
SOURCE|<com.android.org.bouncycastle.asn1.BERSequenceParser: com.android.org.bouncycastle.asn1.ASN1Primitive getLoadedObject()>
SOURCE|<android.drm.DrmInfoRequest: java.lang.String getMimeType()>
SOURCE|<android.filterfw.core.SerializedFrame$DirectByteOutputStream: android.filterfw.core.SerializedFrame$DirectByteInputStream getInputStream()>
SOURCE|<com.android.bluetooth.btservice.AdapterService: java.lang.String getName()>
SOURCE|<android.os.Debug: int getThreadAllocSize()>
SOURCE|<org.apache.harmony.xml.dom.DocumentImpl: java.util.Map getUserDataMap(org.apache.harmony.xml.dom.NodeImpl)>
SOURCE|<com.android.providers.contacts.ContactsProvider2: com.android.providers.contacts.ContactsDatabaseHelper getThreadActiveDatabaseHelperForTest()>
SOURCE|<android.media.MiniThumbFile: byte[] getMiniThumbFromFile(long,byte[])>
SOURCE|<com.android.email.activity.AccountSelectorAdapter: long getId(int)>
SOURCE|<android.hardware.GeomagneticField: float getDeclination()>
SOURCE|<android.animation.ValueAnimator: int getRepeatCount()>
SOURCE|<android.net.Uri$OpaqueUri: java.lang.String getEncodedQuery()>
SOURCE|<android.bluetooth.IBluetoothHealth$Stub$Proxy: java.util.List getHealthDevicesMatchingConnectionStates(int[])>
SOURCE|<android.nfc.tech.MifareUltralight: byte[] readPages(int)>
SOURCE|<com.google.common.collect.BstPath: com.google.common.collect.BstNode getTip()>
SOURCE|<android.content.ContentValues: java.util.ArrayList getStringArrayList(java.lang.String)>
SOURCE|<android.test.suitebuilder.TestMethod: java.lang.'annotation'.Annotation getAnnotation(java.lang.Class)>
SOURCE|<android.app.ApplicationPackageManager: android.graphics.drawable.Drawable getApplicationLogo(android.content.pm.ApplicationInfo)>
SOURCE|<android.content.Intent: short[] getShortArrayExtra(java.lang.String)>
SOURCE|<com.android.mms.model.SlideModel: com.android.mms.model.MediaModel get(int)>
SOURCE|<com.android.gallery3d.ui.CropView: int getImageWidth()>
SOURCE|<android.net.NetworkInfo: java.lang.String getSubtypeName()>
SOURCE|<com.android.email.Throttle: int getTimeoutForTest()>
SOURCE|<org.apache.harmony.security.x509.PolicyInformation: byte[] getEncoded()>
SOURCE|<android.view.ContextThemeWrapper: java.lang.Object getSystemService(java.lang.String)>
SOURCE|<android.text.format.DateFormat: java.text.DateFormat getTimeFormat(android.content.Context)>
SOURCE|<com.android.org.bouncycastle.asn1.x509.AlgorithmIdentifier: com.android.org.bouncycastle.asn1.ASN1ObjectIdentifier getObjectId()>
SOURCE|<com.google.common.collect.ImmutableMap: java.util.Set entrySet()>
SOURCE|<java.nio.channels.SocketChannel: long read(java.nio.ByteBuffer[])>
SOURCE|<com.android.launcher2.Hotseat: com.android.launcher2.CellLayout getLayout()>
SOURCE|<com.android.internal.telephony.PhoneProxy: java.lang.String getPhoneName()>
SOURCE|<com.android.deskclock.widget.multiwaveview.TargetDrawable: float getAlpha()>
SOURCE|<android.graphics.Bitmap: android.graphics.Bitmap createBitmap(android.util.DisplayMetrics,int,int,android.graphics.Bitmap$Config)>
SOURCE|<java.security.KeyStore: java.util.Date getCreationDate(java.lang.String)>
SOURCE|<android.mtp.MtpDevice: android.mtp.MtpDeviceInfo getDeviceInfo()>
SOURCE|<android.webkit.WebSettingsClassic: boolean getAllowFileAccess()>
SOURCE|<com.android.contacts.model.RawContactDelta$ValuesDelta: java.lang.String getPhoneticFamilyName()>
SOURCE|<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.header.Contact getMyContactHeader()>
SOURCE|<com.google.android.picasasync.UploadTaskEntry: int getPercentageUploaded()>
SOURCE|<com.android.calendar.event.EditEventHelper: long constructDefaultStartTime(long)>
SOURCE|<com.android.calendar.CalendarController: int getViewType()>
SOURCE|<android.graphics.drawable.Drawable: android.graphics.drawable.Drawable createFromXml(android.content.res.Resources,org.xmlpull.v1.XmlPullParser)>
SOURCE|<gov.nist.javax.sip.message.SIPDuplicateHeaderException: gov.nist.javax.sip.header.SIPHeader getSIPHeader()>
SOURCE|<android.net.SSLCertificateSocketFactory: java.net.Socket createSocket(java.net.InetAddress,int)>
SOURCE|<android.drm.mobile1.DrmRights: android.drm.mobile1.DrmConstraintInfo getConstraint(int)>
SOURCE|<android.appwidget.AppWidgetHostView: int getAppWidgetId()>
SOURCE|<android.view.accessibility.AccessibilityManager: java.util.List getEnabledAccessibilityServiceList(int)>
SOURCE|<org.apache.harmony.xnet.provider.jsse.ServerHello: int getType()>
SOURCE|<com.android.browser.DateSortedExpandableListAdapter: long getGroupId(int)>
SOURCE|<android.webkit.WebBackForwardListClassic: int getSize()>
SOURCE|<javax.crypto.ExemptionMechanism: java.security.Provider getProvider()>
SOURCE|<android.text.style.SuggestionSpan: int getFlags()>
SOURCE|<com.android.internal.os.BatteryStatsImpl: long getRadioDataUptimeMs()>
SOURCE|<libcore.net.http.RequestHeaders: int getContentLength()>
SOURCE|<android.test.mock.MockPackageManager: android.content.res.Resources getResourcesForApplication(android.content.pm.ApplicationInfo)>
SOURCE|<android.view.animation.GridLayoutAnimationController: long getDelayForView(android.view.View)>
SOURCE|<android.app.admin.DevicePolicyManager: int getPasswordMinimumLetters(android.content.ComponentName)>
SOURCE|<android.net.LocalSocket: java.io.FileDescriptor getFileDescriptor()>
SOURCE|<com.android.calendar.SearchActivity: long getSupportedEventTypes()>
SOURCE|<com.android.email.mail.store.imap.ImapList: com.android.email.mail.store.imap.ImapString getKeyedStringOrEmpty(java.lang.String)>
SOURCE|<android.renderscript.Allocation: android.renderscript.Element getElement()>
SOURCE|<libcore.net.http.HttpsURLConnectionImpl$HttpUrlConnectionDelegate: java.net.SecureCacheResponse getCacheResponse()>
SOURCE|<com.android.browser.util.ThreadedCursorAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)>
SOURCE|<com.android.videoeditor.util.FileUtils: java.lang.String getSimpleName(java.lang.String)>
SOURCE|<android.app.ContextImpl: java.io.File getObbDir()>
SOURCE|<android.view.VelocityTracker: float getXVelocity()>
SOURCE|<android.app.Instrumentation: android.app.Instrumentation$ActivityResult execStartActivity(android.content.Context,android.os.IBinder,android.os.IBinder,android.app.Fragment,android.content.Intent,int,android.os.Bundle)>
SOURCE|<android.app.Activity: java.lang.String getCallingPackage()>
SOURCE|<com.google.common.collect.ImmutableSortedSet: java.lang.Object writeReplace()>
SOURCE|<gov.nist.core.GenericObject: gov.nist.core.Match getMatcher()>
SOURCE|<android.media.videoeditor.MediaVideoItem: long getTimelineDuration()>
SOURCE|<java.net.Socket: java.net.SocketAddress getLocalSocketAddress()>
SOURCE|<android.content.ContentService: android.content.SyncStatusInfo getSyncStatus(android.accounts.Account,java.lang.String)>
SOURCE|<gov.nist.javax.sip.message.SIPResponse: java.lang.String getFirstLine()>
SOURCE|<com.android.internal.telephony.PhoneBase: boolean getIccRecordsLoaded()>
SOURCE|<android.webkit.WebViewClassic$FocusTransitionDrawable: int getOpacity()>
SOURCE|<android.app.ActivityManager: java.util.Map getAllPackageLaunchCounts()>
SOURCE|<android.app.IAlarmManager$Stub: android.os.IBinder asBinder()>
SOURCE|<com.android.internal.telephony.cdma.SmsMessage: com.android.internal.telephony.cdma.SmsMessage$SubmitPdu getSubmitPdu(java.lang.String,com.android.internal.telephony.cdma.sms.UserData,boolean)>
SOURCE|<com.android.browser.preferences.WebsiteSettingsFragment$Site: java.lang.String getPrettyOrigin()>
SOURCE|<android.view.animation.Animation: boolean getFillBefore()>
SOURCE|<com.android.internal.location.ILocationProvider$Stub$Proxy: com.android.internal.location.ProviderProperties getProperties()>
SOURCE|<libcore.net.url.UrlUtils: java.lang.String getSchemePrefix(java.lang.String)>
SOURCE|<android.location.GeocoderParams: java.util.Locale getLocale()>
SOURCE|<com.android.mms.model.SmilHelper: org.w3c.dom.smil.SMILParElement addPar(org.w3c.dom.smil.SMILDocument)>
SOURCE|<gov.nist.javax.sip.header.MediaRange: java.lang.String getType()>
SOURCE|<org.apache.harmony.luni.util.DeleteOnExit: org.apache.harmony.luni.util.DeleteOnExit getInstance()>
SOURCE|<com.android.org.bouncycastle.asn1.DERIA5String: com.android.org.bouncycastle.asn1.DERIA5String getInstance(com.android.org.bouncycastle.asn1.ASN1TaggedObject,boolean)>
SOURCE|<javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String,java.security.Provider)>
SOURCE|<com.android.contacts.detail.ContactDetailFragment$ViewEntryDimensions: int getPaddingBottom()>
SOURCE|<gov.nist.javax.sip.header.Priority: java.lang.String getPriority()>
SOURCE|<com.android.mms.model.MediaModel: java.lang.String getContentType()>
SOURCE|<com.android.browser.addbookmark.FolderSpinnerAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)>
SOURCE|<org.apache.harmony.security.asn1.ASN1OctetString: java.lang.Object getDecodedObject(org.apache.harmony.security.asn1.BerInputStream)>
SOURCE|<android.net.wifi.p2p.WifiP2pManager: android.net.wifi.p2p.WifiP2pManager$Channel initialize(android.content.Context,android.os.Looper,android.net.wifi.p2p.WifiP2pManager$ChannelListener)>
SOURCE|<android.webkit.BrowserFrame: java.lang.String getUserAgentString()>
SOURCE|<java.security.KeyStore$PrivateKeyEntry: java.security.cert.Certificate[] getCertificateChain()>
SOURCE|<android.preference.PreferenceActivity: android.preference.PreferenceActivity$Header onGetNewHeader()>
SOURCE|<com.android.internal.widget.multiwaveview.GlowPadView: int getSuggestedMinimumWidth()>
SOURCE|<gov.nist.javax.sip.message.SIPResponse: java.lang.String getDialogId(boolean)>
SOURCE|<org.apache.james.mime4j.field.datetime.parser.DateTimeParser$Time: int getSecond()>
SOURCE|<java.net.HttpCookie: java.lang.String getComment()>
SOURCE|<com.android.email.widget.EmailWidget: int getCount()>
SOURCE|<com.android.server.location.PassiveProvider: int getStatus(android.os.Bundle)>
SOURCE|<java.security.cert.PKIXCertPathValidatorResult: java.security.cert.TrustAnchor getTrustAnchor()>
SOURCE|<android.app.DialogFragment: android.app.Dialog getDialog()>
SOURCE|<com.android.i18n.phonenumbers.PhoneNumberUtil: java.lang.String getNddPrefixForRegion(java.lang.String,boolean)>
SOURCE|<gov.nist.javax.sip.message.SIPMessage: javax.sip.header.ViaHeader getTopmostViaHeader()>
SOURCE|<android.media.videoeditor.Transition: java.lang.String getId()>
SOURCE|<android.bluetooth.IBluetoothHeadsetPhone$Stub$Proxy: java.lang.String getSubscriberNumber()>
SOURCE|<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>
SOURCE|<java.nio.SocketChannelImpl$SocketAdapter: java.net.InetAddress getLocalAddress()>
SOURCE|<android.drm.DrmInfoRequest: int getInfoType()>
SOURCE|<java.net.Socket: java.net.InetAddress getInetAddress()>
SOURCE|<libcore.icu.NativeDecimalFormat: int getMultiplier()>
SOURCE|<android.media.audiofx.Equalizer: short getCurrentPreset()>
SOURCE|<com.android.inputmethod.latin.BinaryDictionaryGetter: java.util.ArrayList getDictionaryFiles(java.util.Locale,android.content.Context)>
SOURCE|<android.inputmethodservice.Keyboard: int[] getShiftKeyIndices()>
SOURCE|<android.net.http.Headers: java.lang.String getProxyAuthenticate()>
SOURCE|<android.preference.Preference: java.lang.String getPersistedString(java.lang.String)>
SOURCE|<android.test.suitebuilder.TestMethod: java.lang.String getName()>
SOURCE|<com.android.inputmethod.compat.InputMethodManagerCompatWrapper: com.android.inputmethod.compat.InputMethodManagerCompatWrapper getInstance()>
SOURCE|<gov.nist.javax.sip.header.AuthenticationHeader: java.lang.String getIntegrityProtected()>
SOURCE|<android.filterfw.core.VertexFrame: float[] getFloats()>
SOURCE|<com.android.email.activity.MessageListFragment: com.android.emailcommon.provider.Account getAccount()>
SOURCE|<android.nfc.INfcTag$Stub$Proxy: boolean isNdef(int)>
SOURCE|<com.android.gallery3d.ui.CacheStorageUsageInfo: long getExpectedUsedBytes()>
SOURCE|<com.android.server.connectivity.Tethering: java.lang.String[] getTetherableUsbRegexs()>
SOURCE|<org.xmlpull.v1.sax2.Driver: java.lang.String getType(java.lang.String)>
SOURCE|<java.nio.DirectByteBuffer: int getInt(int)>
SOURCE|<android.app.admin.DevicePolicyManager: int getMaximumFailedPasswordsForWipe(android.content.ComponentName,int)>
SOURCE|<com.android.launcher2.Workspace$ZoomInInterpolator: float getInterpolation(float)>
SOURCE|<java.nio.MappedByteBufferAdapter: short getShort()>
SOURCE|<org.apache.http.impl.io.ChunkedInputStream: int getChunkSize()>
SOURCE|<com.android.org.bouncycastle.asn1.x509.SubjectPublicKeyInfo: com.android.org.bouncycastle.asn1.x509.AlgorithmIdentifier getAlgorithm()>
SOURCE|<org.apache.harmony.xnet.provider.jsse.CipherSuite: java.lang.String[] getSupportedCipherSuiteNames()>
SOURCE|<android.bluetooth.BluetoothInputDevice: boolean getReport(android.bluetooth.BluetoothDevice,byte,byte,int)>
SOURCE|<java.net.URLConnection: java.net.URL getURL()>
SOURCE|<android.widget.Scroller: int getFinalX()>
SOURCE|<android.content.pm.IPackageManager$Stub$Proxy: android.content.pm.PermissionGroupInfo getPermissionGroupInfo(java.lang.String,int)>
SOURCE|<com.android.calendar.EventInfoFragment: android.database.Cursor access$602(com.android.calendar.EventInfoFragment,android.database.Cursor)>
SOURCE|<android.nfc.NfcActivityManager: android.nfc.NdefMessage createMessage()>
SOURCE|<java.nio.LongToByteBufferAdapter: long get()>
SOURCE|<android.webkit.WebSettingsClassic: android.webkit.WebSettings$PluginState getPluginState()>
SOURCE|<org.apache.harmony.xml.dom.TextImpl: java.lang.String getWholeText()>
SOURCE|<com.android.providers.contacts.ContactsDatabaseHelper: long getOrCreateAccountIdInTransaction(com.android.providers.contacts.AccountWithDataSet)>
SOURCE|<android.webkit.WebBackForwardList: android.webkit.WebHistoryItem getItemAtIndex(int)>
SOURCE|<android.inputmethodservice.Keyboard: int getDimensionOrFraction(android.content.res.TypedArray,int,int,int)>
SOURCE|<com.android.phone.OtaUtils: com.android.phone.OtaUtils$CdmaOtaInCallScreenUiState$State getCdmaOtaInCallScreenUiState()>
SOURCE|<android.telephony.CellInfo: int getTimeStampType()>
SOURCE|<java.nio.file.InvalidPathException: java.lang.String getInput()>
SOURCE|<org.xml.sax.helpers.AttributeListImpl: int getLength()>
SOURCE|<org.apache.http.util.EncodingUtils: java.lang.String getAsciiString(byte[])>
SOURCE|<com.google.android.mms.pdu.RetrieveConf: int getReadReport()>
SOURCE|<com.android.providers.downloads.RealSystemFacade: java.lang.Long getRecommendedMaxBytesOverMobile()>
SOURCE|<com.android.server.ServiceWatcher: android.os.IBinder getBinder()>
SOURCE|<com.google.common.collect.ImmutableSortedSet: java.util.Comparator comparator()>
SOURCE|<android.net.Uri$Builder: android.net.Uri$Builder clearQuery()>
SOURCE|<android.widget.TextView: android.text.style.URLSpan[] getUrls()>
SOURCE|<android.nfc.tech.MifareClassic: int getMaxTransceiveLength()>
SOURCE|<android.content.IntentSender: android.content.IIntentSender getTarget()>
SOURCE|<com.android.inputmethod.keyboard.internal.KeyboardTextsSet: java.lang.String getText(java.lang.String)>
SOURCE|<com.android.internal.widget.multiwaveview.PointCloud$GlowManager: float getX()>
SOURCE|<com.android.exchange.EasSyncService: com.android.exchange.provider.GalResult searchGal(android.content.Context,long,java.lang.String,int)>
SOURCE|<java.nio.charset.CharsetEncoder: java.nio.charset.CoderResult implFlush(java.nio.ByteBuffer)>
SOURCE|<com.android.server.input.InputManagerService: int getKeyCodeState(int,int,int)>
SOURCE|<android.app.ContextImpl: int getUserId()>
SOURCE|<com.android.deskclock.Alarm$DaysOfWeek: int getNextAlarm(java.util.Calendar)>
SOURCE|<com.android.internal.telephony.sip.SipPhone: java.lang.String getSubscriberId()>
SOURCE|<android.text.Layout: float getDesiredWidth(java.lang.CharSequence,int,int,android.text.TextPaint)>
SOURCE|<java.lang.reflect.Field: char getChar(java.lang.Object)>
SOURCE|<com.google.android.picasasync.PicasaDatabaseHelper: com.google.android.picasasync.AlbumEntry getAlbumEntry(java.lang.String,java.lang.String)>
SOURCE|<android.app.Fragment: android.app.Activity getActivity()>
SOURCE|<android.webkit.WebViewClassic: int getScrollX()>
SOURCE|<com.android.org.bouncycastle.asn1.ASN1OctetString: java.io.InputStream getOctetStream()>
SOURCE|<org.apache.http.impl.auth.DigestScheme: java.lang.String getCnonce()>
SOURCE|<com.android.server.ConnectivityService: java.lang.String[] getTetherableUsbRegexs()>
SOURCE|<java.lang.reflect.Executable: byte[] getTypeAnnotationBytes()>
SOURCE|<libcore.net.http.HttpURLConnectionImpl: int getFixedContentLength()>
SOURCE|<com.android.gallery3d.data.ActionImage: int getHeight()>
SOURCE|<com.android.contacts.editor.KindSectionView: java.lang.String getTitle()>
SOURCE|<com.android.server.sip.SipHelper: javax.sip.ServerTransaction getServerTransaction(javax.sip.RequestEvent)>
SOURCE|<com.adobe.xmp.options.Options: boolean getOption(int)>
SOURCE|<android.bluetooth.IBluetoothInputDevice$Stub: android.os.IBinder asBinder()>
SOURCE|<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: org.apache.http.impl.conn.tsccm.BasicPoolEntry createEntry(org.apache.http.impl.conn.tsccm.RouteSpecificPool,org.apache.http.conn.ClientConnectionOperator)>
SOURCE|<org.apache.harmony.xnet.provider.jsse.ServerKeyExchange: int getType()>
SOURCE|<com.android.internal.os.RuntimeInit$1: java.lang.String getId()>
SOURCE|<com.android.bluetooth.pbap.BluetoothPbapService$2: android.bluetooth.BluetoothDevice getClient()>
SOURCE|<java.security.Security$SecurityDoor: java.security.Provider$Service getService(java.security.Provider,java.lang.String)>
SOURCE|<java.util.jar.JarFile: java.util.jar.Manifest getManifest()>
SOURCE|<com.android.gallery3d.filtershow.cache.DirectPresetCache: android.graphics.Bitmap get(com.android.gallery3d.filtershow.presets.ImagePreset)>
SOURCE|<com.android.mms.dom.NodeImpl: org.w3c.dom.Node getLastChild()>
SOURCE|<org.apache.harmony.security.x509.OtherName: byte[] getEncoded()>
SOURCE|<com.android.contacts.group.GroupBrowseListAdapter: int getSelectedGroupPosition()>
SOURCE|<org.apache.harmony.xml.dom.CommentImpl: short getNodeType()>
SOURCE|<android.webkit.WebSettings: android.webkit.WebSettings$TextSize getTextSize()>
SOURCE|<android.hardware.SensorManager: void getRotationMatrixFromVector(float[],float[])>
SOURCE|<java.security.cert.PKIXParameters: java.util.Set getInitialPolicies()>
SOURCE|<android.net.sip.SipManager: boolean isOpened(java.lang.String)>
SOURCE|<java.util.concurrent.locks.AbstractQueuedSynchronizer: java.util.Collection getQueuedThreads()>
SOURCE|<com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata: com.android.i18n.phonenumbers.Phonemetadata$PhoneNumberDesc getPersonalNumber()>
SOURCE|<org.apache.harmony.xml.dom.DocumentImpl: org.w3c.dom.NodeList getElementsByTagNameNS(java.lang.String,java.lang.String)>
SOURCE|<java.util.concurrent.ExecutorCompletionService: java.util.concurrent.Future poll(long,java.util.concurrent.TimeUnit)>
SOURCE|<java.util.TimeZone: int getDSTSavings()>
SOURCE|<com.android.videoeditor.service.MovieTheme: com.android.videoeditor.service.MovieAudioTrack getAudioTrack()>
SOURCE|<android.view.SurfaceView: android.view.SurfaceHolder getHolder()>
SOURCE|<libcore.net.url.FileURLConnection: int getContentLength()>
SOURCE|<com.android.bluetooth.hfp.HeadsetService$BluetoothHeadsetBinder: java.util.List getDevicesMatchingConnectionStates(int[])>
SOURCE|<android.database.sqlite.SQLiteOpenHelper: android.database.sqlite.SQLiteDatabase getWritableDatabase()>
SOURCE|<android.util.SparseIntArray: int get(int,int)>
SOURCE|<com.android.email.activity.MessageOrderManager: int getTotalMessageCount()>
SOURCE|<com.android.gallery3d.ui.SlotView: android.graphics.Rect getSlotRect(int)>
SOURCE|<org.apache.http.message.BasicNameValuePair: java.lang.String getValue()>
SOURCE|<com.android.contacts.vcard.NfcImportVCardActivity$ImportTask: com.android.contacts.vcard.ImportRequest doInBackground(com.android.contacts.vcard.VCardService[])>
SOURCE|<libcore.io.ForwardingOs: int getsockoptInt(java.io.FileDescriptor,int,int)>
SOURCE|<com.android.providers.contacts.GlobalSearchSupport: android.database.Cursor handleSearchShortcutRefresh(android.database.sqlite.SQLiteDatabase,java.lang.String[],java.lang.String,java.lang.String)>
SOURCE|<java.time.LocalDate: int getYear()>
SOURCE|<com.android.camera.PreferenceGroup: com.android.camera.CameraPreference get(int)>
SOURCE|<org.apache.harmony.xml.dom.DocumentImpl: boolean getXmlStandalone()>
SOURCE|<org.apache.harmony.xml.dom.ElementImpl: java.lang.String getNamespaceURI()>
SOURCE|<android.net.SSLCertificateSocketFactory: org.apache.http.conn.ssl.SSLSocketFactory getHttpSocketFactory(int,android.net.SSLSessionCache)>
SOURCE|<android.view.textservice.SpellCheckerInfo: java.lang.String getId()>
SOURCE|<com.android.server.LocationManagerService: android.location.Location getLastLocation(android.location.LocationRequest,java.lang.String)>
SOURCE|<android.media.videoeditor.MediaVideoItem: int getVideoLevel()>
SOURCE|<com.android.launcher2.PagedView: int getChildOffset(int)>
SOURCE|<android.app.AlertDialog$Builder: android.content.Context getContext()>
SOURCE|<com.android.org.bouncycastle.util.io.pem.PemGenerationException: java.lang.Throwable getCause()>
SOURCE|<java.security.cert.CertStore: java.util.Collection getCertificates(java.security.cert.CertSelector)>
SOURCE|<com.android.ex.chips.RecipientEditTextView: com.android.ex.chips.RecipientEntry access$2300(com.android.ex.chips.RecipientEditTextView,com.android.ex.chips.RecipientEntry)>
SOURCE|<com.android.server.connectivity.Tethering: java.lang.String[] getTetheredIfacePairs()>
SOURCE|<com.android.browser.Controller: android.graphics.Bitmap getDefaultVideoPoster()>
SOURCE|<android.content.ContextWrapper: java.io.File getObbDir()>
SOURCE|<android.server.search.Searchables: android.content.ComponentName getWebSearchActivity()>
SOURCE|<android.media.AudioManager: int getStreamMaxVolume(int)>
SOURCE|<org.apache.harmony.xnet.provider.jsse.OpenSSLServerSocketFactoryImpl: java.lang.String[] getSupportedCipherSuites()>
SOURCE|<org.apache.james.mime4j.field.address.parser.AddressListParserTokenManager: org.apache.james.mime4j.field.address.parser.Token jjFillToken()>
SOURCE|<com.android.inputmethod.latin.WordComposer: java.lang.String getTypedWord()>
SOURCE|<android.media.IAudioService$Stub$Proxy: int getRemoteStreamMaxVolume()>
SOURCE|<com.android.server.ServiceWatcher: int getBestVersion()>
SOURCE|<org.json.JSONArray: org.json.JSONArray getJSONArray(int)>
SOURCE|<com.android.gallery3d.picasasource.PicasaAlbumSet: long getTotalUsedCacheSize(android.content.Context)>
SOURCE|<android.widget.TimePicker: java.lang.Integer getCurrentHour()>
SOURCE|<com.android.contacts.group.GroupBrowseListAdapter: long getItemId(int)>
SOURCE|<org.apache.harmony.security.utils.JarUtils: java.security.cert.Certificate[] verifySignature(java.io.InputStream,java.io.InputStream)>
SOURCE|<com.android.gallery3d.filtershow.imageshow.ImageShow: int getDefaultBackgroundColor()>
SOURCE|<com.android.org.bouncycastle.asn1.ASN1ParsingException: java.lang.Throwable getCause()>
SOURCE|<com.android.contacts.editor.RawContactEditorView: com.android.contacts.editor.TextFieldsEditorView getNameEditor()>
SOURCE|<android.view.animation.AnimationUtils: android.view.animation.LayoutAnimationController loadLayoutAnimation(android.content.Context,int)>
SOURCE|<com.android.camera.CameraActivity: long getAutoFocusTime()>
SOURCE|<com.android.videoeditor.util.MediaItemUtils: long getMinimumImageItemDuration()>
SOURCE|<android.filterpacks.performance.Throughput: int getTotalFrameCount()>
SOURCE|<com.android.internal.util.BitwiseOutputStream: byte[] toByteArray()>
SOURCE|<org.apache.http.impl.conn.tsccm.RouteSpecificPool: org.apache.http.conn.routing.HttpRoute getRoute()>
SOURCE|<android.content.pm.PackageItemInfo: android.content.pm.ApplicationInfo getApplicationInfo()>
SOURCE|<android.app.SearchableInfo: int getVoicePromptTextId()>
SOURCE|<android.accounts.AccountManager: android.accounts.Account[] getAccountsByTypeAsUser(java.lang.String,android.os.UserHandle)>
SOURCE|<android.net.sip.SipSession: android.net.sip.ISipSession getRealSession()>
SOURCE|<com.google.android.picasasync.UploadsManager: com.google.android.picasasync.SyncTaskProvider getManualPhotoUploadTaskProvider()>
SOURCE|<com.android.providers.calendar.CalendarDatabaseHelper: com.android.common.content.SyncStateContentProviderHelper getSyncState()>
SOURCE|<android.telephony.CellIdentityGsm: int getMcc()>
SOURCE|<android.net.LocalSocketImpl: java.io.InputStream getInputStream()>
SOURCE|<com.android.internal.telephony.cdma.CdmaConnection: com.android.internal.telephony.Call$State getState()>
SOURCE|<android.content.Context: java.lang.Object getSystemService(java.lang.String)>
SOURCE|<android.view.ScaleGestureDetector: long getTimeDelta()>
SOURCE|<gov.nist.core.net.SslNetworkLayer: javax.net.ssl.SSLSocket createSSLSocket(java.net.InetAddress,int,java.net.InetAddress)>
SOURCE|<javax.net.ssl.SSLSocket: javax.net.ssl.SSLParameters getSSLParameters()>
SOURCE|<java.text.MessageFormat: java.text.Format[] getFormatsByArgumentIndex()>
SOURCE|<android.net.sip.SimpleSessionDescription$Fields: java.lang.String getEncryptionMethod()>
SOURCE|<android.net.wifi.WifiSsid: java.lang.String getHexString()>
SOURCE|<android.view.AccessibilityInteractionController$PrivateHandler: java.lang.String getMessageName(android.os.Message)>
SOURCE|<java.lang.reflect.AccessibleObject: java.lang.'annotation'.Annotation[] getDeclaredAnnotations()>
SOURCE|<android.security.SystemKeyStore: byte[] retrieveKey(java.lang.String)>
SOURCE|<android.animation.LayoutTransition: java.util.List getTransitionListeners()>
SOURCE|<javax.crypto.KeyGenerator: javax.crypto.KeyGenerator getInstance(java.lang.String,java.lang.String)>
SOURCE|<gov.nist.javax.sip.header.SubscriptionState: int getRetryAfter()>
SOURCE|<android.provider.Settings$Secure: int getInt(android.content.ContentResolver,java.lang.String)>
SOURCE|<com.google.android.mms.pdu.RetrieveConf: com.google.android.mms.pdu.EncodedStringValue[] getCc()>
SOURCE|<android.accounts.IAccountAuthenticatorResponse$Stub: android.os.IBinder asBinder()>
SOURCE|<com.android.mms.dom.smil.parser.SmilContentHandler: org.w3c.dom.smil.SMILDocument getSmilDocument()>
SOURCE|<android.test.IsolatedContext$MockAccountManager$MockAccountManagerFuture: java.lang.Object getResult()>
SOURCE|<com.android.contacts.list.AccountFilterActivity$FilterListAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)>
SOURCE|<android.os.Debug: int getGlobalExternalAllocCount()>
SOURCE|<gov.nist.javax.sip.header.Via: int getRPort()>
SOURCE|<android.view.View: int getLeft()>
SOURCE|<android.net.Uri: boolean getBooleanQueryParameter(java.lang.String,boolean)>
SOURCE|<java.util.logging.LogRecord: java.lang.String getSourceClassName()>
SOURCE|<android.hardware.Sensor: float getMaximumRange()>
SOURCE|<java.io.RandomAccessFile: byte readByte()>
SOURCE|<com.android.contacts.dialpad.DialpadFragment: android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)>
SOURCE|<android.app.ActivityManager: java.util.List getRunningServices(int)>
SOURCE|<com.android.contacts.model.account.BaseAccountType$CommonInflater: java.lang.CharSequence inflateUsing(android.content.Context,android.content.ContentValues)>
SOURCE|<android.widget.ActivityChooserView$ActivityChooserViewAdapter: int getHistorySize()>
SOURCE|<android.net.sip.SimpleSessionDescription: android.net.sip.SimpleSessionDescription$Media[] getMedia()>
SOURCE|<com.google.android.picasasync.UploadsDatabaseHelper: android.database.sqlite.SQLiteDatabase getWritableDatabase()>
SOURCE|<com.android.systemui.statusbar.policy.NotificationRowLayout: android.view.View getChildAtRawPosition(float,float)>
SOURCE|<android.drm.mobile1.DrmConstraintInfo: long getInterval()>
SOURCE|<com.android.calendar.widget.CalendarAppWidgetProvider: android.app.PendingIntent getLaunchPendingIntentTemplate(android.content.Context)>
SOURCE|<gov.nist.javax.sip.header.Challenge: java.lang.String getStale()>
SOURCE|<android.graphics.drawable.ShapeDrawable: android.graphics.drawable.ShapeDrawable$ShaderFactory getShaderFactory()>
SOURCE|<com.google.common.collect.BstMutationRule: com.google.common.collect.BstModifier getModifier()>
SOURCE|<gov.nist.javax.sip.stack.TLSMessageChannel: java.lang.String getTransport()>
SOURCE|<com.google.common.collect.MapMakerInternalMap: com.google.common.collect.MapMakerInternalMap$ReferenceEntry getEntry(java.lang.Object)>
SOURCE|<com.android.commands.monkey.MonkeySourceRandom: int getKeyCode(java.lang.String)>
SOURCE|<android.test.mock.MockContext: java.io.File getExternalCacheDir()>
SOURCE|<org.apache.http.impl.cookie.RFC2109VersionHandler: void parse(org.apache.http.cookie.SetCookie,java.lang.String)>
SOURCE|<com.android.mms.dom.NamedNodeMapImpl: org.w3c.dom.Node getNamedItem(java.lang.String)>
SOURCE|<com.android.gallery3d.filtershow.imageshow.ImageShow: android.graphics.Bitmap getGeometryOnlyImage()>
SOURCE|<com.android.internal.telephony.cdma.CdmaConnection: int getNumberPresentation()>
SOURCE|<com.android.org.bouncycastle.util.io.pem.PemWriter: int getOutputSize(com.android.org.bouncycastle.util.io.pem.PemObject)>
SOURCE|<com.android.emailcommon.utility.SSLUtils$TrackingKeyManager: java.security.cert.X509Certificate[] getCertificateChain(java.lang.String)>
SOURCE|<android.net.http.Headers: java.lang.String getPragma()>
SOURCE|<android.mtp.MtpDevice: long getParent(int)>
SOURCE|<com.android.browser.UrlInputView: android.widget.ListAdapter getAdapter()>
SOURCE|<com.android.videoeditor.service.MovieEffect: java.lang.String getId()>
SOURCE|<android.appwidget.AppWidgetHost: int[] getAppWidgetIds()>
SOURCE|<com.android.server.TextServicesManagerService: android.view.textservice.SpellCheckerInfo[] getEnabledSpellCheckers()>
SOURCE|<android.media.MediaRouter$UserRouteInfo: android.media.RemoteControlClient getRemoteControlClient()>
SOURCE|<com.android.server.pm.PackageManagerService$FileInstallArgs: java.lang.String getResourcePath()>
SOURCE|<android.view.IOnKeyguardExitResult$Stub: android.os.IBinder asBinder()>
SOURCE|<android.view.textservice.SentenceSuggestionsInfo: int getLengthAt(int)>
SOURCE|<java.text.DateFormat: java.text.DateFormat getDateInstance()>
SOURCE|<java.lang.reflect.Constructor: java.lang.String getSignatureAttribute()>
SOURCE|<com.android.phone.PhoneUtils: android.graphics.drawable.Drawable getProviderIcon(android.content.Context,android.content.Intent)>
SOURCE|<java.text.DateFormat: java.util.TimeZone getTimeZone()>
SOURCE|<java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet$UnmodifiableMapEntry: java.lang.Object getValue()>
SOURCE|<org.apache.harmony.xml.dom.AttrImpl: boolean getSpecified()>
SOURCE|<com.android.emailcommon.service.IEmailService$Stub$Proxy: android.os.Bundle validate(com.android.emailcommon.provider.HostAuth)>
SOURCE|<android.app.BackStackRecord: int getBreadCrumbShortTitleRes()>
SOURCE|<org.apache.harmony.xml.dom.ProcessingInstructionImpl: java.lang.String getNodeName()>
SOURCE|<android.os.Looper: android.os.MessageQueue getQueue()>
SOURCE|<com.google.android.mms.pdu.PduComposer: byte[] make()>
SOURCE|<org.apache.harmony.xnet.provider.jsse.OpenSSLSocketImpl: boolean getUseClientMode()>
SOURCE|<com.coremedia.iso.boxes.SampleTableBox: com.coremedia.iso.boxes.SampleSizeBox getSampleSizeBox()>
SOURCE|<java.security.UnresolvedPermission: java.lang.String getUnresolvedName()>
SOURCE|<android.graphics.Paint: float getTextRunAdvances(java.lang.String,int,int,int,int,int,float[],int,int)>
SOURCE|<com.android.contacts.model.account.BaseAccountType: com.android.contacts.model.dataitem.DataKind addDataKindDisplayName(android.content.Context)>
SOURCE|<android.content.ClipData: int getItemCount()>
SOURCE|<org.apache.harmony.security.pkcs7.SignerInfo: java.lang.String getDigestEncryptionAlgorithm()>
SOURCE|<org.apache.http.util.EntityUtils: java.lang.String getContentCharSet(org.apache.http.HttpEntity)>
SOURCE|<com.android.internal.telephony.cat.CatCmdMessage: com.android.internal.telephony.cat.CatCmdMessage$BrowserSettings getBrowserSettings()>
SOURCE|<com.android.inputmethod.keyboard.internal.KeySpecParser: java.lang.String getLabel(java.lang.String)>
SOURCE|<com.google.common.collect.Sets$PowerSet$1: java.lang.Object get(int)>
SOURCE|<com.google.android.picasasync.PicasaFacade: android.net.Uri getUploadsUri()>
SOURCE|<com.coremedia.iso.boxes.MovieHeaderBox: float getVolume()>
SOURCE|<java.nio.LongBuffer: java.nio.LongBuffer get(long[])>
SOURCE|<java.util.jar.JarFile: java.util.jar.JarEntry getJarEntry(java.lang.String)>
SOURCE|<org.apache.james.mime4j.field.datetime.DateTime: java.util.Date getDate()>
SOURCE|<org.apache.harmony.xnet.provider.jsse.TrustManagerImpl: java.security.cert.X509Certificate[] getAcceptedIssuers()>
SOURCE|<com.android.mms.util.Recycler: com.android.mms.util.Recycler$SmsRecycler getSmsRecycler()>
SOURCE|<android.content.SearchRecentSuggestionsProvider: java.lang.String getType(android.net.Uri)>
SOURCE|<com.android.videoeditor.ProjectPickerAdapter: long getItemId(int)>
SOURCE|<android.os.RemoteCallbackList: java.lang.Object getBroadcastCookie(int)>
SOURCE|<android.net.Uri$HierarchicalUri: java.util.List getPathSegments()>
SOURCE|<org.apache.harmony.xml.dom.ElementImpl$ElementAttrNamedNodeMapImpl: org.w3c.dom.Node getNamedItemNS(java.lang.String,java.lang.String)>
SOURCE|<android.widget.HeaderViewListAdapter: android.widget.Filter getFilter()>
SOURCE|<android.widget.NumberPicker$InputTextFilter: int getInputType()>
SOURCE|<android.support.v4.view.AccessibilityDelegateCompatJellyBean$1: android.view.accessibility.AccessibilityNodeProvider getAccessibilityNodeProvider(android.view.View)>
SOURCE|<android.app.IUiModeManager$Stub: android.os.IBinder asBinder()>
SOURCE|<android.drm.mobile1.DrmConstraintInfo: java.util.Date getEndDate()>
SOURCE|<com.android.internal.telephony.gsm.GSMPhone: android.telephony.ServiceState getServiceState()>
SOURCE|<android.accounts.IAccountManagerResponse$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
SOURCE|<com.android.server.pm.Settings: java.util.ArrayList getListOfIncompleteInstallPackagesLPr()>
SOURCE|<android.telephony.TelephonyManager: java.lang.String getDeviceSoftwareVersion()>
SOURCE|<android.bluetooth.BluetoothSocket: int getPort()>
SOURCE|<org.apache.harmony.security.x509.CertificatePolicies$1: java.util.Collection getValues(java.lang.Object)>
SOURCE|<com.android.org.bouncycastle.asn1.BERSetParser: com.android.org.bouncycastle.asn1.ASN1Primitive getLoadedObject()>
SOURCE|<org.apache.http.impl.client.ClientParamsStack: java.lang.Object getParameter(java.lang.String)>
SOURCE|<javax.net.ServerSocketFactory: java.net.ServerSocket createServerSocket()>
SOURCE|<com.google.android.apps.lightcycle.panorama.StitchingService: android.net.Uri access$700(com.google.android.apps.lightcycle.panorama.StitchingService,java.lang.String,android.net.Uri)>
SOURCE|<android.view.ViewConfiguration: int getScaledWindowTouchSlop()>
SOURCE|<com.android.internal.view.InputConnectionWrapper: android.view.inputmethod.ExtractedText getExtractedText(android.view.inputmethod.ExtractedTextRequest,int)>
SOURCE|<android.bluetooth.IBluetoothPan$Stub: android.os.IBinder asBinder()>
SOURCE|<java.nio.ShortToByteBufferAdapter: java.nio.ShortBuffer get(short[],int,int)>
SOURCE|<android.location.IGeocodeProvider$Stub$Proxy: java.lang.String getFromLocationName(java.lang.String,double,double,double,double,int,android.location.GeocoderParams,java.util.List)>
SOURCE|<org.apache.harmony.security.x509.TBSCertList: java.util.Date getNextUpdate()>
SOURCE|<android.bluetooth.BluetoothHeadset: int getAudioState(android.bluetooth.BluetoothDevice)>
SOURCE|<org.apache.harmony.xnet.provider.jsse.SSLEngineDataStream: byte[] getData(int)>
SOURCE|<java.util.logging.XMLFormatter: java.lang.String getHead(java.util.logging.Handler)>
SOURCE|<com.android.org.bouncycastle.jce.netscape.NetscapeCertRequest: java.lang.String getChallenge()>
SOURCE|<org.apache.http.entity.BasicHttpEntity: java.io.InputStream getContent()>
SOURCE|<android.view.accessibility.AccessibilityNodeInfo: android.view.accessibility.AccessibilityNodeInfo getLabelFor()>
SOURCE|<com.android.internal.widget.multiwaveview.PointCloud: int getAlphaForPoint(com.android.internal.widget.multiwaveview.PointCloud$Point)>
SOURCE|<android.widget.BaseExpandableListAdapter: long getCombinedGroupId(long)>
SOURCE|<com.google.common.collect.MapMakerInternalMap$SoftExpirableEvictableEntry: com.google.common.collect.MapMakerInternalMap$ReferenceEntry getPreviousExpirable()>
SOURCE|<com.android.internal.widget.multiwaveview.Ease$Quart$1: float getInterpolation(float)>
SOURCE|<android.graphics.drawable.GradientDrawable: int getIntrinsicWidth()>
SOURCE|<java.util.concurrent.atomic.AtomicMarkableReference: java.lang.Object getReference()>
SOURCE|<com.android.browser.DateSortedExpandableListAdapter: long getCombinedChildId(long,long)>
SOURCE|<android.widget.TextView: android.text.Layout getLayout()>
SOURCE|<com.android.email.mail.store.imap.ImapList: com.android.email.mail.store.imap.ImapList getListOrEmpty(int)>
SOURCE|<com.android.deskclock.AlarmPreference: android.net.Uri getAlert()>
SOURCE|<com.android.contacts.vcard.ProcessorBase: java.lang.Object get()>
SOURCE|<android.widget.TabWidget: int getChildDrawingOrder(int,int)>
SOURCE|<com.android.gallery3d.filtershow.filters.ImageFilter: int getParameter()>
SOURCE|<android.provider.MediaStore$Video$Thumbnails: android.graphics.Bitmap getThumbnail(android.content.ContentResolver,long,int,android.graphics.BitmapFactory$Options)>
SOURCE|<com.android.deskclock.widget.multiwaveview.Ease$Quint$1: float getInterpolation(float)>
SOURCE|<com.android.exchange.utility.CalendarUtilities: java.lang.String getUidFromGlobalObjId(java.lang.String)>
SOURCE|<com.android.internal.telephony.UiccCardApplication: com.android.internal.telephony.IccCardApplicationStatus$AppType getType()>
SOURCE|<com.android.calendar.selectcalendars.SelectVisibleCalendarsFragment: android.database.Cursor access$102(com.android.calendar.selectcalendars.SelectVisibleCalendarsFragment,android.database.Cursor)>
SOURCE|<org.apache.http.auth.BasicUserPrincipal: java.lang.String getName()>
SOURCE|<android.app.Activity: int getChangingConfigurations()>
SOURCE|<com.android.contacts.model.dataitem.ImDataItem: int getChatCapability()>
SOURCE|<com.android.internal.telephony.PhoneBase: int getLteOnCdmaMode()>
SOURCE|<com.android.gallery3d.exif.ExifParser: int getCompressedImageSize()>
SOURCE|<org.apache.harmony.xnet.provider.jsse.OpenSSLSocketImpl: java.io.OutputStream getOutputStream()>
SOURCE|<android.os.storage.StorageManager$ListenerDelegate: android.os.storage.StorageEventListener getListener()>
SOURCE|<android.media.videoeditor.MediaVideoItem: int getAudioChannels()>
SOURCE|<com.android.internal.telephony.IccCardProxy: com.android.internal.telephony.IccFileHandler getIccFileHandler()>
SOURCE|<com.android.contacts.widget.IndexerListAdapter: android.view.View getPinnedHeaderView(int,android.view.View,android.view.ViewGroup)>
SOURCE|<com.android.nfc.dhimpl.NativeNfcManager: java.lang.String getName()>
SOURCE|<com.android.browser.SnapshotTab: com.android.browser.Tab getParent()>
SOURCE|<com.android.org.bouncycastle.asn1.DERPrintableString: com.android.org.bouncycastle.asn1.DERPrintableString getInstance(com.android.org.bouncycastle.asn1.ASN1TaggedObject,boolean)>
SOURCE|<com.android.browser.search.OpenSearchSearchEngine$SuggestionsCursor: long getLong(int)>
SOURCE|<com.android.inputmethod.keyboard.Keyboard: com.android.inputmethod.keyboard.ProximityInfo getProximityInfo()>
SOURCE|<com.android.server.display.WifiDisplayAdapter$WifiDisplayDevice: com.android.server.display.DisplayDeviceInfo getDisplayDeviceInfoLocked()>
SOURCE|<android.app.ActivityManagerProxy: int getProcessLimit()>
SOURCE|<java.util.logging.XMLFormatter: java.lang.String getTail(java.util.logging.Handler)>
SOURCE|<android.telephony.TelephonyManager: java.lang.String getMsisdn()>
SOURCE|<org.apache.http.impl.io.ContentLengthInputStream: int read(byte[],int,int)>
SOURCE|<android.telephony.PhoneNumberUtils: java.lang.String getUsernameFromUriNumber(java.lang.String)>
SOURCE|<com.android.launcher2.Folder: int getItemCount()>
SOURCE|<android.text.SpannableStringInternal: void getChars(int,int,char[],int)>
SOURCE|<android.telephony.CellIdentityGsm: android.telephony.CellIdentityGsm copy()>
SOURCE|<com.android.launcher2.Workspace: java.lang.String getCurrentPageDescription()>
SOURCE|<android.nfc.tech.BasicTagTechnology: android.nfc.Tag getTag()>
SOURCE|<org.json.JSONObject: org.json.JSONObject getJSONObject(java.lang.String)>
SOURCE|<java.text.DateFormat: java.lang.String format(java.util.Date)>
SOURCE|<android.text.BoringLayout: float getLineMax(int)>
SOURCE|<java.nio.HeapByteBuffer: byte get()>
SOURCE|<android.widget.AbsSpinner: android.widget.Adapter getAdapter()>
SOURCE|<com.android.internal.widget.multiwaveview.TargetDrawable: float getX()>
SOURCE|<com.android.org.bouncycastle.jce.netscape.NetscapeCertRequest: java.security.PublicKey getPublicKey()>
SOURCE|<android.filterfw.core.FrameFormat: int getTarget()>
SOURCE|<javax.xml.parsers.SAXParserFactory: javax.xml.validation.Schema getSchema()>
SOURCE|<android.content.IntentSender: android.os.UserHandle getCreatorUserHandle()>
SOURCE|<com.android.org.bouncycastle.asn1.DERBMPString: com.android.org.bouncycastle.asn1.DERBMPString getInstance(com.android.org.bouncycastle.asn1.ASN1TaggedObject,boolean)>
SOURCE|<javax.crypto.spec.OAEPParameterSpec: java.lang.String getMGFAlgorithm()>
SOURCE|<java.text.NumberFormat: java.util.Locale[] getAvailableLocales()>
SOURCE|<android.os.MemoryFile: java.io.InputStream getInputStream()>
SOURCE|<com.android.contacts.util.ExpirableCache: com.android.contacts.util.ExpirableCache create(int)>
SOURCE|<com.android.gallery3d.app.GalleryActionBar$AlbumModeAdapter: int getCount()>
SOURCE|<android.view.inputmethod.InputMethodInfo: java.lang.String getSettingsActivity()>
SOURCE|<com.android.org.bouncycastle.asn1.DERInteger: java.math.BigInteger getPositiveValue()>
SOURCE|<com.android.internal.widget.ActionBarView: android.widget.SpinnerAdapter getDropdownAdapter()>
SOURCE|<com.android.browser.homepages.RequestHandler: byte[] htmlEncode(java.lang.String)>
SOURCE|<android.app.Activity: android.content.Intent getIntent()>
SOURCE|<android.widget.RemoteViews$SetOnClickFillInIntent: java.lang.String getActionName()>
SOURCE|<android.app.Activity: android.app.Activity getParent()>
SOURCE|<com.android.videoeditor.util.StringUtils: java.lang.String getDurationAsString(android.content.Context,long)>
SOURCE|<org.apache.harmony.security.utils.AlgNameMapper: java.lang.String getStandardName(java.lang.String)>
SOURCE|<com.android.email.activity.EmailActivity: android.content.Intent createOpenMailboxIntent(android.app.Activity,long,long)>
SOURCE|<android.net.sip.SipAudioCall: android.net.rtp.AudioStream getAudioStream()>
SOURCE|<android.widget.CalendarView: long getMinDate()>
SOURCE|<java.lang.Character: int getNumericValue(char)>
SOURCE|<java.lang.reflect.Executable: java.lang.reflect.AnnotatedType getAnnotatedReturnType0(java.lang.reflect.Type)>
SOURCE|<com.android.mms.ui.MessageUtils: java.lang.String getMessageDetails(android.content.Context,android.database.Cursor,int)>
SOURCE|<android.widget.TextView: int getShadowColor()>
SOURCE|<com.android.exchange.adapter.ProvisionParser: boolean getRemoteWipe()>
SOURCE|<java.util.jar.Manifest: java.util.jar.Attributes getMainAttributes()>
SOURCE|<com.android.emailcommon.utility.SSLUtils$StubKeyManager: java.lang.String[] getServerAliases(java.lang.String,java.security.Principal[])>
SOURCE|<android.database.CursorWrapper: int getPosition()>
SOURCE|<com.android.ex.chips.BaseRecipientAdapter: int getPhotoId()>
SOURCE|<android.media.AudioRecord: int getAudioSource()>
SOURCE|<org.apache.harmony.security.x509.Extension: boolean getCritical()>
SOURCE|<android.graphics.Interpolator: int getKeyFrameCount()>
SOURCE|<android.webkit.WebSettings: java.lang.String getCursiveFontFamily()>
SOURCE|<android.view.ViewGroup: android.view.View findFocus()>
SOURCE|<com.android.server.accessibility.ScreenMagnifier$DisplayProvider: android.view.DisplayInfo getDisplayInfo()>
SOURCE|<com.android.bluetooth.hid.HidService: boolean getReport(android.bluetooth.BluetoothDevice,byte,byte,int)>
SOURCE|<com.android.gallery3d.ui.CropView: android.graphics.RectF getCropRectangle()>
SOURCE|<com.android.gallery3d.filtershow.imageshow.ImageFlip: java.lang.String getName()>
SOURCE|<java.nio.DoubleBuffer: java.lang.Object array()>
SOURCE|<android.mtp.MtpStorage: java.lang.String getPath()>
SOURCE|<android.media.AudioManager: int getLastAudibleStreamVolume(int)>
SOURCE|<android.animation.IntKeyframeSet: java.lang.Object getValue(float)>
SOURCE|<com.android.internal.telephony.ITelephony$Stub$Proxy: java.util.List getAllCellInfo()>
SOURCE|<android.text.method.ScrollingMovementMethod: android.text.method.MovementMethod getInstance()>
SOURCE|<android.view.Display: int getDisplayId()>
SOURCE|<com.android.internal.policy.impl.keyguard.KeyguardWidgetFrame: int getSmallFrameHeight()>
SOURCE|<android.content.Intent: int getIntExtra(java.lang.String,int)>
SOURCE|<com.android.internal.telephony.ims.IsimFileHandler: java.lang.String getEFPath(int)>
SOURCE|<android.view.Surface: int getHeight()>
SOURCE|<libcore.io.EventLogger: libcore.io.EventLogger$Reporter getReporter()>
SOURCE|<android.net.http.RequestHandle: int getRedirectCount()>
SOURCE|<com.android.internal.telephony.sip.SipPhone: boolean getMute()>
SOURCE|<android.os.Bundle: long[] getLongArray(java.lang.String)>
SOURCE|<org.apache.http.conn.scheme.PlainSocketFactory: java.net.Socket connectSocket(java.net.Socket,java.lang.String,int,java.net.InetAddress,int,org.apache.http.params.HttpParams)>
SOURCE|<libcore.io.ForwardingOs: java.net.InetAddress ioctlInetAddress(java.io.FileDescriptor,int,java.lang.String)>
SOURCE|<javax.net.ssl.KeyManagerFactory: java.lang.String getDefaultAlgorithm()>
SOURCE|<org.apache.http.conn.routing.RouteTracker: org.apache.http.conn.routing.RouteInfo$LayerType getLayerType()>
SOURCE|<java.sql.DriverManager: java.sql.Connection getConnection(java.lang.String)>
SOURCE|<com.android.browser.search.OpenSearchSearchEngine$SuggestionsCursor: java.lang.String getString(int)>
SOURCE|<android.view.LayoutInflater: android.view.View onCreateView(java.lang.String,android.util.AttributeSet)>
SOURCE|<android.net.wifi.IWifiManager$Stub$Proxy: android.os.Messenger getWifiServiceMessenger()>
SOURCE|<com.android.contacts.widget.PinnedHeaderListView: float getTopFadingEdgeStrength()>
SOURCE|<com.android.browser.search.OpenSearchSearchEngine$SuggestionsCursor: short getShort(int)>
SOURCE|<com.android.phone.EditPhoneNumberPreference: java.lang.String getStringValue()>
SOURCE|<android.webkit.WebBackForwardList: int getSize()>
SOURCE|<com.google.common.collect.MapMakerInternalMap$SoftEntry: com.google.common.collect.MapMakerInternalMap$ReferenceEntry getNext()>
SOURCE|<java.net.URLConnection$DefaultContentHandler: java.lang.Object getContent(java.net.URLConnection)>
SOURCE|<com.android.email.activity.MessagesAdapter$SearchCursorLoader: android.database.Cursor wrapCursor(android.database.Cursor,boolean,com.android.emailcommon.provider.Account,com.android.emailcommon.provider.Mailbox,boolean,boolean,int)>
SOURCE|<com.google.common.collect.MapMakerInternalMap$EntryFactory: com.google.common.collect.MapMakerInternalMap$ReferenceEntry copyEntry(com.google.common.collect.MapMakerInternalMap$Segment,com.google.common.collect.MapMakerInternalMap$ReferenceEntry,com.google.common.collect.MapMakerInternalMap$ReferenceEntry)>
SOURCE|<java.net.URL: java.lang.String getPath()>
SOURCE|<com.android.internal.telephony.sip.SipPhoneBase: com.android.internal.telephony.PhoneConstants$State getState()>
SOURCE|<java.text.AttributedString$AttributedIterator: int getIndex()>
SOURCE|<java.lang.Character: byte getDirectionality(int)>
SOURCE|<android.view.MotionEvent: int getPointerId(int)>
SOURCE|<com.android.server.input.InputManagerService: java.lang.String getCurrentKeyboardLayoutForInputDevice(java.lang.String)>
SOURCE|<com.android.email.mail.store.ImapFolder: int getMessageCount()>
SOURCE|<com.android.internal.telephony.cdma.CdmaCallTracker: boolean getMute()>
SOURCE|<android.support.v4.content.LocalBroadcastManager: android.support.v4.content.LocalBroadcastManager getInstance(android.content.Context)>
SOURCE|<gov.nist.javax.sip.message.SIPResponse: byte[] encodeAsBytes(java.lang.String)>
SOURCE|<com.android.phone.CallNotifier: com.android.internal.telephony.Call$State getPreviousCdmaCallState()>
SOURCE|<android.net.NetworkTemplate: java.lang.String getNetworkId()>
SOURCE|<android.util.XmlPullAttributes: java.lang.String getAttributeValue(int)>
SOURCE|<libcore.net.http.HttpURLConnectionImpl: libcore.net.http.HttpEngine getHttpEngine()>
SOURCE|<com.android.launcher2.Hotseat: int getCellYFromOrder(int)>
SOURCE|<com.android.internal.telephony.gsm.GSMPhone: java.lang.String getDeviceSvn()>
SOURCE|<org.apache.harmony.security.x509.ExtensionValue: byte[] getEncoded()>
SOURCE|<android.bluetooth.IBluetooth$Stub$Proxy: int getAdapterConnectionState()>
SOURCE|<android.telephony.SignalStrength: java.lang.String toString()>
SOURCE|<android.accounts.AccountManager$Future2Task: java.lang.Object getResult()>
SOURCE|<com.android.contacts.editor.ContactEditorFragment$SuggestionEditConfirmationDialogFragment: android.app.Dialog onCreateDialog(android.os.Bundle)>
SOURCE|<java.net.URLConnection: java.security.Permission getPermission()>
SOURCE|<java.security.cert.CertificateFactory: java.security.cert.CertificateFactory getInstance(java.lang.String)>
SOURCE|<com.android.server.input.InputManagerService: java.lang.String[] getKeyboardLayoutsForInputDevice(java.lang.String)>
SOURCE|<javax.crypto.Mac: java.lang.String getAlgorithm()>
SOURCE|<android.media.RingtoneManager: android.net.Uri getValidRingtoneUri(android.content.Context)>
SOURCE|<android.hardware.SystemSensorManager$ListenerDelegate: java.lang.Object getListener()>
SOURCE|<android.view.ViewGroup$ChildListForAccessibility: int getChildIndex(android.view.View)>
SOURCE|<android.view.textservice.SpellCheckerInfo: int getSubtypeCount()>
SOURCE|<java.net.URL: java.io.InputStream openStream()>
SOURCE|<android.os.Environment: java.io.File getExternalStorageAppObbDirectory(java.lang.String)>
SOURCE|<com.android.calendar.agenda.AgendaWindowAdapter: com.android.calendar.agenda.AgendaWindowAdapter$EventInfo getEventByPosition(int)>
SOURCE|<android.graphics.drawable.Drawable: int[] getState()>
SOURCE|<android.net.wifi.WifiManager: android.os.Messenger getWifiStateMachineMessenger()>
SOURCE|<android.net.MobileDataStateTracker: java.lang.String getTcpBufferSizesPropName()>
SOURCE|<com.android.videoeditor.service.MovieMediaItem: java.lang.String getId()>
SOURCE|<android.widget.TimePicker: int getBaseline()>
SOURCE|<java.io.ObjectStreamClass: long getSerialVersionUID()>
SOURCE|<org.apache.harmony.security.asn1.ASN1Time: java.lang.Object getDecodedObject(org.apache.harmony.security.asn1.BerInputStream)>
SOURCE|<com.android.server.am.UriPermissionOwner: android.os.Binder getExternalTokenLocked()>
SOURCE|<com.android.bluetooth.a2dp.A2dpStateMachine: java.util.List getDevicesMatchingConnectionStates(int[])>
SOURCE|<org.apache.http.impl.conn.tsccm.AbstractConnPool: org.apache.http.impl.conn.tsccm.BasicPoolEntry getEntry(org.apache.http.conn.routing.HttpRoute,java.lang.Object,long,java.util.concurrent.TimeUnit)>
SOURCE|<java.lang.Number: short shortValue()>
SOURCE|<java.nio.file.Files: java.nio.file.attribute.FileTime getLastModifiedTime(java.nio.file.Path,java.nio.file.LinkOption[])>
SOURCE|<android.widget.TwoLineListItem: android.widget.TextView getText1()>
SOURCE|<gov.nist.javax.sip.message.SIPRequest: java.lang.String getMethod()>
SOURCE|<java.time.chrono.ThaiBuddhistDate: long getLong(java.time.temporal.TemporalField)>
SOURCE|<android.graphics.Paint: float getFontSpacing()>
SOURCE|<android.view.ViewGroup: int getChildCount()>
SOURCE|<java.security.cert.CertificateRevokedException: java.security.cert.CRLReason getRevocationReason()>
SOURCE|<android.app.admin.DevicePolicyManager: boolean isAdminActive(android.content.ComponentName)>
SOURCE|<android.media.ExifInterface: double getAttributeDouble(java.lang.String,double)>
SOURCE|<com.android.calendar.selectcalendars.SelectCalendarsSyncAdapter: int getCount()>
SOURCE|<android.bluetooth.BluetoothAdapter: android.bluetooth.IBluetooth getBluetoothService(android.bluetooth.IBluetoothManagerCallback)>
SOURCE|<com.google.common.collect.MapMakerInternalMap$StrongEvictableEntry: com.google.common.collect.MapMakerInternalMap$ReferenceEntry getPreviousEvictable()>
SOURCE|<android.media.videoeditor.OverlayFrame: int getOverlayFrameWidth()>
SOURCE|<com.android.org.bouncycastle.asn1.ASN1Set: com.android.org.bouncycastle.asn1.ASN1Encodable[] toArray()>
SOURCE|<android.graphics.Bitmap: int getScaledWidth(android.graphics.Canvas)>
SOURCE|<com.android.providers.contacts.ContactsDatabaseHelper: long getMimeTypeIdForIm()>
SOURCE|<android.content.res.AssetManager: java.io.InputStream open(java.lang.String)>
SOURCE|<android.webkit.WebSettingsClassic: boolean getBuiltInZoomControls()>
SOURCE|<android.app.ExpandableListActivity: android.widget.ExpandableListAdapter getExpandableListAdapter()>
SOURCE|<com.android.contacts.model.RawContactDelta$ValuesDelta: java.lang.String getPhoneNormalizedNumber()>
SOURCE|<com.android.bluetooth.hfp.HeadsetStateMachine: int getConnectionState(android.bluetooth.BluetoothDevice)>
SOURCE|<com.android.internal.textservice.ITextServicesSessionListener$Stub: android.os.IBinder asBinder()>
SOURCE|<android.provider.MediaStore$Images$Thumbnails: android.graphics.Bitmap getThumbnail(android.content.ContentResolver,long,int,android.graphics.BitmapFactory$Options)>
SOURCE|<android.view.View: int getBottomPaddingOffset()>
SOURCE|<com.android.internal.telephony.CallManager: java.util.List getFgCallConnections()>
SOURCE|<com.android.vcard.VCardEntry$SipData: com.android.vcard.VCardEntry$EntryLabel getEntryLabel()>
SOURCE|<com.android.internal.telephony.gsm.GSMPhone: com.android.internal.telephony.PhoneSubInfo getPhoneSubInfo()>
SOURCE|<android.net.wifi.WifiNative: java.lang.String getMacAddress()>
SOURCE|<android.widget.RemoteViews$ViewGroupAction: java.lang.String getActionName()>
SOURCE|<com.android.nfc.NfcDispatcher: android.content.Intent getAppSearchIntent(java.lang.String)>
SOURCE|<com.android.contacts.model.RawContactDelta$ValuesDelta: java.lang.String getPhoneLabel()>
SOURCE|<com.android.internal.telephony.gsm.GSMPhone: void getAvailableNetworks(android.os.Message)>
SOURCE|<android.app.backup.IRestoreSession$Stub$Proxy: int getAvailableRestoreSets(android.app.backup.IRestoreObserver)>
SOURCE|<com.android.gallery3d.filtershow.PanelController: com.android.gallery3d.filtershow.presets.ImagePreset getImagePreset()>
SOURCE|<com.google.android.picasasync.UploadTaskEntry: android.content.ComponentName getComponentName()>
SOURCE|<com.android.email.provider.ContentCache: com.android.email.provider.ContentCache$CacheToken getCacheToken(java.lang.String)>
SOURCE|<android.nfc.tech.MifareUltralight: byte[] transceive(byte[],boolean)>
SOURCE|<com.android.deskclock.widget.multiwaveview.Ease$Cubic$3: float getInterpolation(float)>
SOURCE|<android.widget.ActivityChooserView$ActivityChooserViewAdapter: android.widget.ActivityChooserModel getDataModel()>
SOURCE|<android.accounts.AccountManager: android.accounts.Account[] getAccounts()>
SOURCE|<android.database.CursorWrapper: java.lang.String getColumnName(int)>
SOURCE|<com.android.providers.contacts.AbstractContactsProvider: com.android.providers.contacts.ContactsTransaction getCurrentTransaction()>
SOURCE|<com.android.providers.contacts.FastScrollingIndexCache: android.os.Bundle get(android.net.Uri,java.lang.String,java.lang.String[],java.lang.String,java.lang.String)>
SOURCE|<android.app.ApplicationPackageManager: java.lang.String getNameForUid(int)>
SOURCE|<android.view.ViewGroup: android.view.animation.Animation$AnimationListener getLayoutAnimationListener()>
SOURCE|<android.hardware.SensorManager: float getInclination(float[])>
SOURCE|<com.coremedia.iso.boxes.CompositionTimeToSample: java.util.List getEntries()>
SOURCE|<com.android.server.wm.WindowManagerService: float[] getAnimationScales()>
SOURCE|<com.android.org.bouncycastle.asn1.BERTaggedObjectParser: com.android.org.bouncycastle.asn1.ASN1Encodable getObjectParser(int,boolean)>
SOURCE|<libcore.net.http.HttpsURLConnectionImpl: java.lang.String getCipherSuite()>
SOURCE|<android.graphics.drawable.AnimatedRotateDrawable: int getChangingConfigurations()>
SOURCE|<android.filterpacks.imageproc.FixedRotationFilter: android.filterfw.core.FrameFormat getOutputFormat(java.lang.String,android.filterfw.core.FrameFormat)>
SOURCE|<gov.nist.javax.sip.stack.SIPServerTransaction: javax.sip.TransactionState getState()>
SOURCE|<com.android.browser.DateSortedExpandableListAdapter: int getGroupCount()>
SOURCE|<com.android.mms.dom.smil.SmilDocumentImpl: org.w3c.dom.smil.SMILLayoutElement getLayout()>
SOURCE|<org.apache.http.auth.NTUserPrincipal: java.lang.String getUsername()>
SOURCE|<org.apache.http.impl.conn.AbstractClientConnAdapter: int getRemotePort()>
SOURCE|<com.android.internal.telephony.cdma.RuimRecords$EfCsimCdmaHomeLoaded: java.lang.String getEfName()>
SOURCE|<com.android.internal.policy.impl.ShortcutManager: android.content.Intent getIntent(android.view.KeyCharacterMap,int,int)>
SOURCE|<java.sql.Time: int getDate()>
SOURCE|<com.android.contacts.interactions.ImportExportDialogFragment$1: android.view.View getView(int,android.view.View,android.view.ViewGroup)>
SOURCE|<android.content.ClipData: android.content.ClipData$Item getItemAt(int)>
SOURCE|<com.android.internal.view.IInputMethodManager$Stub$Proxy: java.util.List getInputMethodList()>
SOURCE|<android.content.IntentFilter: android.content.IntentFilter$AuthorityEntry getDataAuthority(int)>
SOURCE|<com.android.server.pm.PackageManagerService$FileInstallArgs: java.lang.String getNativeLibraryPath()>
SOURCE|<com.android.contacts.vcard.ExportProcessor: com.android.contacts.vcard.ExportRequest getRequest()>
SOURCE|<java.util.concurrent.locks.ReentrantReadWriteLock: java.util.Collection getWaitingThreads(java.util.concurrent.locks.Condition)>
SOURCE|<android.webkit.WebSettings: boolean getBlockNetworkImage()>
SOURCE|<android.provider.Telephony$Mms: java.lang.String getMessageBoxName(int)>
SOURCE|<android.widget.TextView: android.graphics.drawable.Drawable[] getCompoundDrawablesRelative()>
SOURCE|<android.mtp.MtpDevice: long getStorageId(int)>
SOURCE|<com.coremedia.iso.boxes.fragment.TrackRunBox$Entry: long getSampleSize()>
SOURCE|<com.android.providers.contacts.util.DbQueryUtils: java.lang.String getInequalityClause(java.lang.String,long)>
SOURCE|<android.database.sqlite.SQLiteDatabase: android.database.Cursor queryWithFactory(android.database.sqlite.SQLiteDatabase$CursorFactory,boolean,java.lang.String,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,java.lang.String,java.lang.String,java.lang.String)>
SOURCE|<com.android.uiautomator.core.UiDevice: java.lang.String getCurrentPackageName()>
SOURCE|<java.util.Locale: java.lang.String getDisplayLanguage()>
SOURCE|<com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata: com.android.i18n.phonenumbers.Phonemetadata$PhoneNumberDesc getUan()>
SOURCE|<org.apache.http.util.EncodingUtils: java.lang.String getString(byte[],int,int,java.lang.String)>
SOURCE|<android.widget.ZoomButtonsController: android.view.View getZoomControls()>
SOURCE|<android.hardware.Camera$Parameters: int getInt(java.lang.String)>
SOURCE|<com.google.common.collect.BstPath: com.google.common.collect.BstPath getPrefix()>
SOURCE|<android.hardware.Camera$Parameters: java.util.List getSupportedPictureFormats()>
SOURCE|<java.lang.Enum: java.lang.Object clone()>
SOURCE|<com.google.common.collect.ImmutableSet: java.lang.Object writeReplace()>
SOURCE|<com.android.camera.ComboPreferences: int getInt(java.lang.String,int)>
SOURCE|<junit.framework.TestCase: junit.framework.TestResult run()>
SOURCE|<android.hardware.input.InputManager: android.hardware.input.KeyboardLayout getKeyboardLayout(java.lang.String)>
SOURCE|<android.net.sip.SipSession: int getState()>
SOURCE|<android.graphics.drawable.LayerDrawable: boolean getPadding(android.graphics.Rect)>
SOURCE|<android.filterfw.core.Frame: int getCapacity()>
SOURCE|<android.widget.AutoCompleteTextView: android.graphics.drawable.Drawable getDropDownBackground()>
SOURCE|<org.xmlpull.v1.sax2.Driver: boolean getFeature(java.lang.String)>
SOURCE|<android.filterfw.core.SimpleFrame: android.graphics.Bitmap getBitmap()>
SOURCE|<com.android.internal.widget.LockPatternView$Cell: int getColumn()>
SOURCE|<com.google.common.collect.MapMakerInternalMap$StrongEntry: com.google.common.collect.MapMakerInternalMap$ReferenceEntry getNext()>
SOURCE|<com.android.i18n.phonenumbers.PhoneNumberUtil: com.android.i18n.phonenumbers.Phonenumber$PhoneNumber getExampleNumberForNonGeoEntity(int)>
SOURCE|<android.app.ApplicationPackageManager: android.content.pm.ProviderInfo resolveContentProvider(java.lang.String,int)>
SOURCE|<android.net.INetworkStatsSession$Stub$Proxy: android.net.NetworkStatsHistory getHistoryForUid(android.net.NetworkTemplate,int,int,int,int)>
SOURCE|<android.database.BulkCursorToCursorAdaptor: java.lang.String[] getColumnNames()>
SOURCE|<com.android.gallery3d.app.GalleryActionBar: int getHeight()>
SOURCE|<com.android.videoeditor.widgets.MediaLinearLayout: android.app.Dialog onCreateDialog(int,android.os.Bundle)>
SOURCE|<android.content.res.TypedArray: int getDimensionPixelOffset(int,int)>
SOURCE|<org.apache.harmony.xml.dom.DocumentImpl: java.lang.String getInputEncoding()>
SOURCE|<android.filterpacks.imageproc.DrawOverlayFilter: android.filterfw.core.FrameFormat getOutputFormat(java.lang.String,android.filterfw.core.FrameFormat)>
SOURCE|<com.google.android.picasasync.PicasaSyncHelper: android.database.sqlite.SQLiteDatabase getWritableDatabase()>
SOURCE|<java.nio.channels.spi.AbstractSelectableChannel: java.nio.channels.SelectionKey register(java.nio.channels.Selector,int,java.lang.Object)>
SOURCE|<com.android.internal.os.BatteryStatsImpl: long getScreenBrightnessTime(int,long,int)>
SOURCE|<com.android.browser.view.BookmarkExpandableView: android.view.ContextMenu$ContextMenuInfo getContextMenuInfo()>
SOURCE|<android.text.StaticLayout: int getLineCount()>
SOURCE|<android.nfc.INdefPushCallback$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
SOURCE|<com.android.videoeditor.util.ImageUtils: android.graphics.Bitmap scaleImage(java.lang.String,int,int,int)>
SOURCE|<com.google.common.io.CharStreams$3: java.io.OutputStreamWriter getOutput()>
SOURCE|<com.android.videoeditor.service.VideoEditorProject: java.util.List getDownloads()>
SOURCE|<com.android.mms.dom.ElementImpl: java.lang.String getAttribute(java.lang.String)>
SOURCE|<com.android.gallery3d.data.FilterDeleteSet: int getMediaItemCount()>
SOURCE|<com.android.videoeditor.service.VideoEditorProject: java.lang.String getPath()>
SOURCE|<android.media.IRemoteVolumeObserver$Stub: android.os.IBinder asBinder()>
SOURCE|<com.android.internal.telephony.sip.SipPhone: boolean getDataRoamingEnabled()>
SOURCE|<com.android.wallpaper.galaxy.ScriptField_Particle: android.renderscript.Element createElement(android.renderscript.RenderScript)>
SOURCE|<android.renderscript.Allocation: android.renderscript.Allocation createCubemapFromBitmap(android.renderscript.RenderScript,android.graphics.Bitmap,android.renderscript.Allocation$MipmapControl,int)>
SOURCE|<android.widget.ViewAnimator: android.view.animation.Animation getOutAnimation()>
SOURCE|<com.googlecode.mp4parser.authoring.tracks.CroppedTrack: java.util.List getDecodingTimeEntries()>
SOURCE|<android.graphics.drawable.BitmapDrawable: int getChangingConfigurations()>
SOURCE|<android.net.NetworkQuotaInfo: long getSoftLimitBytes()>
SOURCE|<com.android.vcard.VCardParserImpl_V30: java.lang.String getLine()>
SOURCE|<com.google.common.collect.MapMakerInternalMap$AbstractReferenceEntry: com.google.common.collect.MapMakerInternalMap$ReferenceEntry getNext()>
SOURCE|<com.android.org.bouncycastle.asn1.x500.RDN: com.android.org.bouncycastle.asn1.x500.RDN getInstance(java.lang.Object)>
SOURCE|<android.bluetooth.BluetoothHeadset: int getBatteryUsageHint(android.bluetooth.BluetoothDevice)>
SOURCE|<com.android.email.Controller: java.lang.String getMailboxServerName(android.content.Context,int)>
SOURCE|<android.view.View: int getMinimumWidth()>
SOURCE|<com.android.gallery3d.filtershow.filters.ImageFilter: com.android.gallery3d.filtershow.presets.ImagePreset getImagePreset()>
SOURCE|<com.android.gallery3d.data.MediaSet: com.android.gallery3d.util.Future requestSyncOnMultipleSets(com.android.gallery3d.data.MediaSet[],com.android.gallery3d.data.MediaSet$SyncListener)>
SOURCE|<javax.sip.TransactionTerminatedEvent: javax.sip.ClientTransaction getClientTransaction()>
SOURCE|<android.content.BroadcastReceiver$PendingResult: int getResultCode()>
SOURCE|<gov.nist.javax.sip.header.SIPHeaderList: java.util.ListIterator listIterator()>
SOURCE|<com.android.videoeditor.service.VideoEditorProject: int getAspectRatio()>
SOURCE|<java.util.GregorianCalendar: int getGreatestMinimum(int)>
SOURCE|<com.android.internal.telephony.PhoneBase: boolean isDataConnectivityPossible()>
SOURCE|<android.telephony.CellLocation: android.telephony.CellLocation getEmpty()>
SOURCE|<com.android.internal.telephony.gsm.GSMPhone: java.lang.String getMsisdn()>
SOURCE|<java.util.MapEntry: java.lang.Object getKey()>
SOURCE|<com.android.internal.telephony.sip.SipConnectionBase: com.android.internal.telephony.Connection$PostDialState getPostDialState()>
SOURCE|<com.android.camera.ui.PieItem: float getCenter()>
SOURCE|<android.accounts.AccountAuthenticatorCache: android.accounts.AuthenticatorDescription parseServiceAttributes(android.content.res.Resources,java.lang.String,android.util.AttributeSet)>
SOURCE|<com.android.server.wm.WindowManagerService: int getOrientationFromAppTokensLocked()>
SOURCE|<org.apache.harmony.security.x509.Extensions$1: java.lang.Object getDecodedObject(org.apache.harmony.security.asn1.BerInputStream)>
SOURCE|<android.media.videoeditor.MediaItem: boolean getRegenerateClip()>
SOURCE|<com.android.camera.CameraManager: com.android.camera.CameraManager$CameraProxy cameraOpen(int)>
SOURCE|<android.view.HardwareRenderer$GlRenderer: int getHeight()>
SOURCE|<android.view.inputmethod.InputMethodManager: java.util.List getEnabledInputMethodList()>
SOURCE|<android.webkit.WebViewDatabaseClassic: java.lang.String[] getHttpAuthUsernamePassword(java.lang.String,java.lang.String)>
SOURCE|<com.android.contacts.list.EmailAddressListAdapter: android.net.Uri getDataUri(int)>
SOURCE|<com.android.browser.XLargeUi: android.graphics.drawable.Drawable getFaviconDrawable(android.graphics.Bitmap)>
SOURCE|<com.android.browser.SuggestionsAdapter: com.android.browser.SuggestionsAdapter$SuggestionResults buildSuggestionResults()>
SOURCE|<org.apache.http.impl.cookie.AbstractCookieSpec: org.apache.http.cookie.CookieAttributeHandler findAttribHandler(java.lang.String)>
SOURCE|<android.test.mock.MockPackageManager: android.content.Intent getLaunchIntentForPackage(java.lang.String)>
SOURCE|<com.android.internal.os.BatteryStatsImpl$Counter: int getCountLocked(int)>
SOURCE|<java.io.DataInputStream: boolean readBoolean()>
SOURCE|<android.view.InputEvent: int getSequenceNumber()>
SOURCE|<android.accounts.AccountManagerService: java.lang.String getUserData(android.accounts.Account,java.lang.String)>
SOURCE|<com.android.server.am.UsageStatsService: com.android.internal.os.PkgUsageStats getPkgUsageStats(android.content.ComponentName)>
SOURCE|<android.renderscript.Element: android.renderscript.Element$DataType getDataType()>
SOURCE|<com.android.browser.DeviceAccountLogin: java.lang.String[] getAccountNames()>
SOURCE|<android.media.videoeditor.TransitionAlpha: int getBlendingPercent()>
SOURCE|<android.widget.AccessibilityIterators$LineTextSegmentIterator: android.widget.AccessibilityIterators$LineTextSegmentIterator getInstance()>
SOURCE|<java.util.ResourceBundle: java.util.Locale getLocale()>
SOURCE|<android.preference.Preference: android.content.SharedPreferences getSharedPreferences()>
SOURCE|<android.content.Entity: java.util.ArrayList getSubValues()>
SOURCE|<com.android.email.activity.UIControllerTwoPane$ActionBarControllerCallback: java.lang.String getMessageSubject()>
SOURCE|<com.android.mms.dom.NodeImpl: org.w3c.dom.Document getOwnerDocument()>
SOURCE|<gov.nist.javax.sip.header.ContentDisposition: java.lang.String getContentDisposition()>
SOURCE|<com.android.providers.contacts.VoicemailContentProvider: java.lang.String getCallingPackage()>
SOURCE|<android.view.View: android.view.HardwareLayer getHardwareLayer()>
SOURCE|<com.android.ex.chips.RecipientChip: long getDataId()>
SOURCE|<android.graphics.drawable.AnimatedRotateDrawable: int getOpacity()>
SOURCE|<com.android.internal.telephony.IPhoneStateListener$Stub: android.os.IBinder asBinder()>
SOURCE|<android.graphics.drawable.PictureDrawable: android.graphics.Picture getPicture()>
SOURCE|<android.speech.tts.TextToSpeechService$SpeechItem: float getPan()>
SOURCE|<android.content.res.Resources: android.util.DisplayMetrics getDisplayMetrics()>
SOURCE|<java.util.concurrent.ScheduledThreadPoolExecutor: boolean getRemoveOnCancelPolicy()>
SOURCE|<android.nfc.tech.NfcA: int getMaxTransceiveLength()>
SOURCE|<android.view.View: int getBottom()>
SOURCE|<android.provider.Settings$NameValueCache: java.lang.String getStringForUser(android.content.ContentResolver,java.lang.String,int)>
SOURCE|<android.app.SearchableInfo: int getHintId()>
SOURCE|<com.android.browser.BrowserSnapshotPage: android.graphics.Bitmap getBitmap(android.database.Cursor,int)>
SOURCE|<com.android.emailcommon.internet.MimeBodyPart: com.android.emailcommon.mail.Body getBody()>
SOURCE|<com.android.mms.model.RegionMediaModel: com.android.mms.model.RegionModel getRegion()>
SOURCE|<com.android.inputmethod.keyboard.KeyboardLayoutSet: com.android.inputmethod.keyboard.Keyboard getKeyboard(int)>
SOURCE|<java.io.ObjectStreamField: java.lang.Class getType()>
SOURCE|<android.hardware.Sensor: int getHandle()>
SOURCE|<com.android.contacts.model.account.BaseAccountType: com.android.contacts.model.dataitem.DataKind addDataKindIm(android.content.Context)>
SOURCE|<java.util.jar.InitManifest: int getPos()>
SOURCE|<gov.nist.javax.sip.header.SIPDateHeader: java.util.Calendar getDate()>
SOURCE|<org.apache.harmony.xnet.provider.jsse.SSLServerSocketImpl: java.lang.String[] getEnabledProtocols()>
SOURCE|<com.android.email.mail.Store: com.android.emailcommon.mail.Folder getFolder(java.lang.String)>
SOURCE|<com.android.launcher2.PagedView: android.view.View getScrollingIndicator()>
SOURCE|<java.net.URL: java.lang.String getQuery()>
SOURCE|<android.location.ILocationManager$Stub: android.os.IBinder asBinder()>
SOURCE|<android.webkit.WebViewClassic: android.webkit.WebBackForwardListClient getWebBackForwardListClient()>
SOURCE|<com.android.browser.SuggestionsAdapter: android.widget.Filter getFilter()>
SOURCE|<android.widget.RemoteViewsService$RemoteViewsFactoryAdapter: int getViewTypeCount()>
SOURCE|<javax.crypto.SealedObject: java.lang.Object getObject(javax.crypto.Cipher)>
SOURCE|<com.android.email.activity.MessageViewFragmentBase: com.android.emailcommon.provider.EmailContent$Message getMessage()>
SOURCE|<javax.crypto.SecretKeyFactory: javax.crypto.SecretKeyFactory getInstance(java.lang.String,java.lang.String)>
SOURCE|<org.apache.harmony.xnet.provider.jsse.OpenSSLRSAPrivateKey: java.lang.String getPkeyAlias()>
SOURCE|<android.mtp.MtpDeviceInfo: java.lang.String getModel()>
SOURCE|<com.android.internal.widget.SizeAdaptiveLayout: android.view.View getModestyPanel()>
SOURCE|<com.android.gallery3d.picasasource.PicasaSource: android.app.Dialog getVersionCheckDialog(android.app.Activity)>
SOURCE|<com.android.mms.dom.smil.SmilRegionElementImpl: java.lang.String getBackgroundColor()>
SOURCE|<com.android.org.bouncycastle.asn1.DERGeneralString: com.android.org.bouncycastle.asn1.DERGeneralString getInstance(java.lang.Object)>
SOURCE|<android.widget.RelativeLayout$DependencyGraph$Node: android.widget.RelativeLayout$DependencyGraph$Node getNextPoolable()>
SOURCE|<org.apache.harmony.xnet.provider.jsse.SSLEngineImpl: boolean getUseClientMode()>
SOURCE|<com.android.email.activity.MailboxFragmentAdapter: long getId(int)>
SOURCE|<com.android.phone.PhoneGlobals: com.android.phone.PhoneGlobals getInstance()>
SOURCE|<android.util.XmlPullAttributes: java.lang.String getClassAttribute()>
SOURCE|<com.android.gallery3d.filtershow.filters.ImageFilter: int getDefaultParameter()>
SOURCE|<org.ccil.cowan.tagsoup.AttributesImpl: java.lang.String getLocalName(int)>
SOURCE|<java.util.EnumMap$Entry: java.lang.Enum getKey()>
SOURCE|<java.nio.DirectByteBuffer: byte[] protectedArray()>
SOURCE|<android.filterpacks.performance.Throughput: int getPeriodFrameCount()>
SOURCE|<android.graphics.drawable.ClipDrawable: int getChangingConfigurations()>
SOURCE|<com.android.mms.util.Recycler$MmsRecycler: long getThreadId(android.database.Cursor)>
SOURCE|<com.android.gallery3d.picasasource.PicasaSource: double getLongitude(com.android.gallery3d.data.MediaObject)>
SOURCE|<java.util.ResourceBundle$NoFallbackControl: java.util.Locale getFallbackLocale(java.lang.String,java.util.Locale)>
SOURCE|<gov.nist.javax.sip.header.AuthenticationHeader: java.lang.String getNonce()>
SOURCE|<android.os.storage.IMountService$Stub$Proxy: java.lang.String[] getSecureContainerList()>
SOURCE|<com.android.mms.transaction.SendTransaction: int getType()>
SOURCE|<com.android.calendar.TimezoneAdapter: java.lang.CharSequence[][] getAllTimezones()>
SOURCE|<com.android.internal.policy.impl.keyguard.PagedView: int getCurrentPage()>
SOURCE|<android.webkit.WebHistoryItemClassic: byte[] getFlattenedData()>
SOURCE|<org.apache.harmony.xnet.provider.jsse.SSLRecordProtocol: byte[] wrap(byte,org.apache.harmony.xnet.provider.jsse.DataStream)>
SOURCE|<java.lang.Class: java.lang.reflect.Type getGenericSuperclass()>
SOURCE|<com.android.internal.os.BatteryStatsImpl: long getMobileTcpBytesSent(int)>
SOURCE|<com.android.org.bouncycastle.asn1.BERTaggedObjectParser: com.android.org.bouncycastle.asn1.ASN1Primitive getLoadedObject()>
SOURCE|<com.android.internal.telephony.gsm.SmsMessage: int getDataCodingScheme()>
SOURCE|<com.android.providers.contacts.ContactsProvider2: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>
SOURCE|<com.android.mms.ui.MessageItem: com.android.mms.model.SlideshowModel getSlideshow()>
SOURCE|<com.android.contacts.editor.ContactEditorFragment$PhotoHandler: com.android.contacts.detail.PhotoSelectionHandler$PhotoActionListener getListener()>
SOURCE|<com.google.common.io.CharStreams$1: java.io.StringReader getInput()>
SOURCE|<com.android.internal.telephony.PhoneFactory: com.android.internal.telephony.Phone getCdmaPhone()>
SOURCE|<android.view.DragEvent: java.lang.Object getLocalState()>
SOURCE|<android.view.InputEvent: int getSource()>
SOURCE|<com.android.server.accessibility.ScreenMagnifier$MagnificationController: float getMagnifiedRegionCenterX()>
SOURCE|<com.android.contacts.model.Contact: long getDirectoryId()>
SOURCE|<org.apache.http.impl.conn.AbstractClientConnAdapter: int getSocketTimeout()>
SOURCE|<com.android.internal.app.ResolverActivity$ResolveListAdapter: java.lang.Object getItem(int)>
SOURCE|<android.media.RingtoneManager: android.media.Ringtone getRingtone(android.content.Context,android.net.Uri)>
SOURCE|<libcore.net.http.RequestHeaders: java.lang.String getHost()>
SOURCE|<com.android.internal.telephony.CallManager: java.util.List getPendingMmiCodes(com.android.internal.telephony.Phone)>
SOURCE|<com.android.browser.provider.BrowserProvider2: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>
SOURCE|<org.apache.http.impl.conn.tsccm.BasicPoolEntry: org.apache.http.conn.routing.HttpRoute getPlannedRoute()>
SOURCE|<android.nfc.NfcAdapter: android.nfc.NfcAdapter getDefaultAdapter()>
SOURCE|<android.os.UserManager: android.graphics.Bitmap getUserIcon(int)>
SOURCE|<android.mtp.MtpStorage: int getStorageId()>
SOURCE|<android.provider.MediaStore$Files: android.net.Uri getMtpReferencesUri(java.lang.String,long)>
SOURCE|<com.android.gallery3d.ui.GLView: int getMeasuredHeight()>
SOURCE|<com.android.gallery3d.data.FilterDeleteSet: long reload()>
SOURCE|<java.net.URI: java.lang.String getAuthority()>
SOURCE|<com.coremedia.iso.boxes.ChunkOffsetBox: java.lang.String toString()>
SOURCE|<android.database.CursorWrapper: byte[] getBlob(int)>
SOURCE|<com.google.common.collect.Multimaps$MapMultimap: java.util.Collection get(java.lang.Object)>
SOURCE|<org.apache.harmony.xml.dom.DOMErrorImpl$1: org.w3c.dom.Node getRelatedNode()>
SOURCE|<com.android.internal.os.AtomicFile: java.io.File getBaseFile()>
SOURCE|<com.android.ex.chips.Queries$Query: android.net.Uri getContentFilterUri()>
SOURCE|<android.app.Fragment: android.view.View getView()>
SOURCE|<android.webkit.WebSettingsClassic: boolean getHardwareAccelSkiaEnabled()>
SOURCE|<android.preference.PreferenceActivity: android.preference.PreferenceScreen getPreferenceScreen()>
SOURCE|<android.widget.DialerFilter: java.lang.CharSequence getLetters()>
SOURCE|<android.graphics.BitmapFactory: android.graphics.Bitmap decodeResourceStream(android.content.res.Resources,android.util.TypedValue,java.io.InputStream,android.graphics.Rect,android.graphics.BitmapFactory$Options)>
SOURCE|<com.android.mms.layout.HVGALayoutParameters: int getWidth()>
SOURCE|<gov.nist.javax.sip.header.SIPDate: int getMinute()>
SOURCE|<com.android.browser.homepages.RequestHandler$4: com.android.browser.homepages.Template$ListEntityIterator getListIterator(java.lang.String)>
SOURCE|<android.net.sip.SipProfile: java.lang.String getProfileName()>
SOURCE|<com.android.internal.app.IMediaContainerService$Stub$Proxy: android.content.pm.PackageInfoLite getMinimalPackageInfo(java.lang.String,int,long)>
SOURCE|<com.android.org.bouncycastle.asn1.DERBMPString: java.lang.String getString()>
SOURCE|<android.bluetooth.BluetoothDevice: android.os.ParcelUuid[] getUuids()>
SOURCE|<com.android.bluetooth.hdp.HealthService: com.android.bluetooth.btservice.ProfileService$IProfileServiceBinder initBinder()>
SOURCE|<android.test.mock.MockContext: android.content.res.Resources$Theme getTheme()>
SOURCE|<android.telephony.SignalStrength: int getAsuLevel()>
SOURCE|<junit.framework.TestCase: java.lang.String toString()>
SOURCE|<android.view.ViewGroup$MarginLayoutParams: int getMarginEnd()>
SOURCE|<com.android.internal.policy.impl.PhoneWindowManager: int getConfigDisplayHeight(int,int,int)>
SOURCE|<com.android.browser.WebStorageSizeManager$StatFsDiskInfo: long getTotalSizeBytes()>
SOURCE|<java.security.cert.X509CRLEntry: javax.security.auth.x500.X500Principal getCertificateIssuer()>
SOURCE|<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$SamplingTimer getKernelWakelockTimerLocked(java.lang.String)>
SOURCE|<android.app.ApplicationPackageManager: android.content.pm.InstrumentationInfo getInstrumentationInfo(android.content.ComponentName,int)>
SOURCE|<com.android.org.bouncycastle.util.io.pem.PemObject: java.lang.String getType()>
SOURCE|<java.util.Hashtable$HashtableEntry: java.lang.Object getKey()>
SOURCE|<com.android.server.wm.WindowState: android.graphics.Rect getGivenVisibleInsetsLw()>
SOURCE|<android.app.ActivityManager: java.util.List getRunningTasks(int,int,android.app.IThumbnailReceiver)>
SOURCE|<org.json.JSONArray: org.json.JSONObject getJSONObject(int)>
SOURCE|<com.android.calendar.Event: int getMaxColumns()>
SOURCE|<org.apache.harmony.xml.dom.DOMImplementationImpl: org.apache.harmony.xml.dom.DOMImplementationImpl getInstance()>
SOURCE|<com.android.camera.CameraManager$CameraProxy: android.hardware.Camera getCamera()>
SOURCE|<com.android.contacts.list.DirectoryListLoader: android.database.Cursor loadInBackground()>
SOURCE|<java.security.Security: java.util.Set getAlgorithms(java.lang.String)>
SOURCE|<com.android.gallery3d.data.ActionImage: int getSupportedOperations()>
SOURCE|<android.view.GLES20DisplayList: int getSize()>
SOURCE|<java.security.cert.PKIXParameters: java.util.List getCertStores()>
SOURCE|<com.android.internal.telephony.Call: com.android.internal.telephony.Call$State getState()>
SOURCE|<org.apache.harmony.xml.parsers.DocumentBuilderFactoryImpl: java.lang.Object getAttribute(java.lang.String)>
SOURCE|<com.android.email.widget.EmailWidgetLoader$WidgetCursor: int getMessageCount()>
SOURCE|<android.view.KeyCharacterMap: char getDisplayLabel(int)>
SOURCE|<com.android.org.bouncycastle.asn1.ASN1Set: com.android.org.bouncycastle.asn1.ASN1Set getInstance(com.android.org.bouncycastle.asn1.ASN1TaggedObject,boolean)>
SOURCE|<com.android.internal.telephony.test.SimulatedGsmCallState: java.util.List getClccLines()>
SOURCE|<gov.nist.javax.sip.header.AuthenticationInfo: java.lang.String getResponse()>
SOURCE|<android.app.ContextImpl: java.lang.String getPackageResourcePath()>
SOURCE|<org.apache.james.mime4j.field.contenttype.parser.ContentTypeParser: java.util.ArrayList getParamNames()>
SOURCE|<com.android.mms.ui.AttachmentTypeSelectorAdapter: java.util.List getData(int,android.content.Context)>
SOURCE|<com.android.internal.telephony.gsm.GsmDataConnectionTracker: com.android.internal.telephony.DctConstants$State getOverallState()>
SOURCE|<com.android.server.sip.SipSessionGroup$SipSessionImpl$2$1: java.lang.String getSipDomain()>
SOURCE|<com.android.contacts.list.ProviderStatusWatcher: com.android.contacts.list.ProviderStatusWatcher getInstance(android.content.Context)>
SOURCE|<com.android.gallery3d.data.ClusterAlbum: java.util.ArrayList getMediaItems()>
SOURCE|<com.android.launcher2.Workspace: int getScrollMode()>
SOURCE|<com.android.browser.PieControl$TabAdapter: com.android.browser.Tab getItem(int)>
SOURCE|<android.text.SpannedString: java.lang.Object[] getSpans(int,int,java.lang.Class)>
SOURCE|<android.media.videoeditor.MediaImageItem: int getAspectRatio()>
SOURCE|<android.emoji.EmojiFactory: int getAndroidPuaFromVendorSpecificPua(int)>
SOURCE|<com.android.contacts.model.Contact: java.lang.String getDirectoryAccountName()>
SOURCE|<android.telephony.CellSignalStrengthCdma: int getEvdoDbm()>
SOURCE|<org.apache.http.message.BasicHeader: org.apache.http.HeaderElement[] getElements()>
SOURCE|<java.util.ResourceBundle$Control: long getTimeToLive(java.lang.String,java.util.Locale)>
SOURCE|<com.android.server.MountService$ObbAction: android.content.res.ObbInfo getObbInfo()>
SOURCE|<android.bluetooth.BluetoothHealth: android.os.ParcelFileDescriptor getMainChannelFd(android.bluetooth.BluetoothDevice,android.bluetooth.BluetoothHealthAppConfiguration)>
SOURCE|<com.google.common.collect.ImmutableSortedMap$SerializedForm: java.lang.Object readResolve()>
SOURCE|<android.net.sip.SimpleSessionDescription$Media: java.lang.String getProtocol()>
SOURCE|<org.json.JSONArray: double getDouble(int)>
SOURCE|<android.net.NetworkPolicyManager: android.net.NetworkPolicy[] getNetworkPolicies()>
SOURCE|<java.time.chrono.HijrahChronology: int[] parseYMD(java.lang.String)>
SOURCE|<com.android.internal.telephony.gsm.SIMFileHandler: java.lang.String getEFPath(int)>
SOURCE|<com.android.emailcommon.internet.BinaryTempFileBody: java.io.InputStream getInputStream()>
SOURCE|<org.apache.http.message.BasicStatusLine: java.lang.String getReasonPhrase()>
SOURCE|<libcore.net.http.HttpURLConnectionImpl: java.io.InputStream getInputStream()>
SOURCE|<com.android.providers.contacts.NameSplitter: int getAdjustedNameStyleBasedOnPhoneticNameStyle(int,int)>
SOURCE|<com.android.gallery3d.gadget.WidgetUtils: android.graphics.Bitmap createWidgetBitmap(android.graphics.Bitmap,int)>
SOURCE|<android.renderscript.RenderScriptGL: int getHeight()>
SOURCE|<android.net.wifi.WifiInfo: android.net.wifi.SupplicantState getSupplicantState()>
SOURCE|<com.android.launcher2.AppsCustomizeTabHost: android.view.View getContent()>
SOURCE|<com.googlecode.mp4parser.authoring.builder.DefaultMp4Builder: int[] getChunkSizes(com.googlecode.mp4parser.authoring.Track,com.googlecode.mp4parser.authoring.Movie)>
SOURCE|<android.provider.Telephony$Sms: android.database.Cursor query(android.content.ContentResolver,java.lang.String[])>
SOURCE|<com.android.internal.util.StateMachine$LogRec: long getWhat()>
SOURCE|<com.android.gallery3d.data.MediaObject: int getCacheStatus()>
SOURCE|<com.android.systemui.statusbar.phone.NavigationBarView: android.view.View getHomeButton()>
SOURCE|<android.content.IContentService$Stub$Proxy: int getIsSyncable(android.accounts.Account,java.lang.String)>
SOURCE|<com.android.contacts.model.account.BaseAccountType$StructuredPostalKindBuilder: java.lang.String getTagName()>
SOURCE|<gov.nist.javax.sip.header.ReplyTo: gov.nist.core.HostPort getHostPort()>
SOURCE|<android.media.MediaRouter: int getRouteCount()>
SOURCE|<android.telephony.SmsCbMessage: int getMessageFormat()>
SOURCE|<android.database.AbstractCursor: int getColumnCount()>
SOURCE|<com.coremedia.iso.boxes.TrackHeaderBox: double getHeight()>
SOURCE|<com.android.internal.telephony.cat.CommandDetails: com.android.internal.telephony.cat.ComprehensionTlvTag getTag()>
SOURCE|<com.android.org.bouncycastle.asn1.DERUTF8String: com.android.org.bouncycastle.asn1.DERUTF8String getInstance(java.lang.Object)>
SOURCE|<com.android.internal.policy.impl.keyguard.KeyguardStatusView: int getAppWidgetId()>
SOURCE|<java.util.logging.Logger: java.util.logging.Handler[] getHandlers()>
SOURCE|<android.os.UserManager: java.lang.String getUserName()>
SOURCE|<org.apache.http.auth.AuthSchemeRegistry: org.apache.http.auth.AuthScheme getAuthScheme(java.lang.String,org.apache.http.params.HttpParams)>
SOURCE|<com.android.org.bouncycastle.asn1.ASN1OctetString: com.android.org.bouncycastle.asn1.ASN1Primitive toDLObject()>
SOURCE|<android.filterpacks.imageproc.Invert: android.filterfw.core.Program getNativeProgram(android.filterfw.core.FilterContext)>
SOURCE|<android.hardware.display.IDisplayManager$Stub: android.os.IBinder asBinder()>
SOURCE|<com.android.email.RefreshManager: com.android.email.RefreshManager$Status getMessageListStatusForTest(long)>
SOURCE|<org.apache.harmony.xml.dom.ElementImpl$ElementAttrNamedNodeMapImpl: int getLength()>
SOURCE|<android.server.search.Searchables: java.util.ArrayList getSearchablesInGlobalSearchList()>
SOURCE|<com.android.gallery3d.picasasource.PicasaSource: android.content.ContentResolver getContentResolver()>
SOURCE|<com.android.bluetooth.a2dp.A2dpService: java.lang.String getName()>
SOURCE|<gov.nist.javax.sip.header.WWWAuthenticate: javax.sip.address.URI getURI()>
SOURCE|<com.android.browser.DateSortedExpandableListAdapter: android.content.Context getContext()>
SOURCE|<org.apache.harmony.security.pkcs7.SignedData$1: java.lang.Object getDecodedObject(org.apache.harmony.security.asn1.BerInputStream)>
SOURCE|<android.view.IWindowSession$Stub: android.os.IBinder asBinder()>
SOURCE|<gov.nist.javax.sip.address.TelURLImpl: java.util.Iterator getParameterNames()>
SOURCE|<android.graphics.Bitmap: void getPixels(int[],int,int,int,int,int,int)>
SOURCE|<gov.nist.javax.sip.stack.SIPTransaction: java.lang.String getTransport()>
SOURCE|<com.android.server.MountService: java.lang.String getSecureContainerFilesystemPath(java.lang.String)>
SOURCE|<com.android.internal.telephony.PhoneSubInfoProxy: java.lang.String[] getIsimImpu()>
SOURCE|<com.android.gallery3d.gadget.WidgetService$EmptySource: android.net.Uri getContentUri(int)>
SOURCE|<javax.security.auth.Subject: int getCredHashCode(java.lang.Object)>
SOURCE|<android.telephony.SmsMessage: int getProtocolIdentifier()>
SOURCE|<java.security.KeyFactory: java.lang.String getAlgorithm()>
SOURCE|<com.android.gallery3d.ui.ExtTexture: int getTextureHeight()>
SOURCE|<android.app.SearchableInfo$ActionKeyInfo: java.lang.String getSuggestActionMsg()>
SOURCE|<java.sql.SQLException: int getErrorCode()>
SOURCE|<com.android.gallery3d.ui.DetailsHelper: java.lang.String getDetailsName(android.content.Context,int)>
SOURCE|<android.media.videoeditor.MediaItem: java.util.List getAllOverlays()>
SOURCE|<android.mtp.MtpObjectInfo: long getDateCreated()>
SOURCE|<gov.nist.javax.sip.stack.SIPTransactionStack: int getServerTransactionTableSize()>
SOURCE|<com.android.videoeditor.service.MovieTheme: int getPreviewImageResId()>
SOURCE|<com.adobe.xmp.impl.XMPMetaImpl: java.util.Calendar getPropertyCalendar(java.lang.String,java.lang.String)>
SOURCE|<com.google.common.collect.ForwardingMapEntry: java.lang.Object delegate()>
SOURCE|<com.android.launcher2.DeleteDropTarget$3: float getInterpolation(float)>
SOURCE|<com.android.systemui.recent.RecentsVerticalScrollView: int getVerticalFadingEdgeLength()>
SOURCE|<java.lang.ClassLoader: java.lang.String findLibrary(java.lang.String)>
SOURCE|<com.android.internal.telephony.PhoneProxy: java.lang.String getLine1Number()>
SOURCE|<android.media.MediaRouter$RouteInfo: java.lang.CharSequence getName()>
SOURCE|<android.location.Address: java.util.Locale getLocale()>
SOURCE|<javax.net.ssl.SSLContext: javax.net.ssl.SSLParameters getSupportedSSLParameters()>
SOURCE|<org.apache.harmony.dalvik.ddmc.ChunkHandler: java.lang.String getString(java.nio.ByteBuffer,int)>
SOURCE|<com.android.camera.IconListPreference: int[] getImageIds()>
SOURCE|<java.net.HttpURLConnection: java.lang.String getResponseMessage()>
SOURCE|<android.net.Uri$HierarchicalUri: java.lang.String getEncodedQuery()>
SOURCE|<android.net.ThrottleManager: long getPeriodStartTime(java.lang.String)>
SOURCE|<com.android.mms.dom.NodeImpl: java.lang.String getNamespaceURI()>
SOURCE|<android.support.v4.view.accessibility.AccessibilityNodeProviderCompatJellyBean$1: android.view.accessibility.AccessibilityNodeInfo createAccessibilityNodeInfo(int)>
SOURCE|<java.security.KeyStore$CallbackHandlerProtection: javax.security.auth.callback.CallbackHandler getCallbackHandler()>
SOURCE|<java.security.SecureRandom: java.lang.String getAlgorithm()>
SOURCE|<com.android.server.pm.PackageManagerService: java.util.List queryIntentActivities(android.content.Intent,java.lang.String,int,int)>
SOURCE|<java.util.logging.Logger: java.util.ResourceBundle getResourceBundle()>
SOURCE|<com.google.android.mms.ContentType: java.util.ArrayList getAudioTypes()>
SOURCE|<com.android.i18n.phonenumbers.Phonemetadata$PhoneNumberDesc: com.android.i18n.phonenumbers.Phonemetadata$PhoneNumberDesc mergeFrom(com.android.i18n.phonenumbers.Phonemetadata$PhoneNumberDesc)>
SOURCE|<com.android.server.MountService: java.lang.String getMountedObbPath(java.lang.String)>
SOURCE|<libcore.net.http.HttpsURLConnectionImpl: java.security.Principal getPeerPrincipal()>
SOURCE|<android.widget.HeaderViewListAdapter: android.widget.ListAdapter getWrappedAdapter()>
SOURCE|<android.media.videoeditor.OverlayFrame: int getResizedRGBSizeWidth()>
SOURCE|<com.android.ex.chips.RecipientEntry: int getEntryType()>
SOURCE|<com.android.server.MountService: int[] getStorageUsers(java.lang.String)>
SOURCE|<com.android.browser.BrowserHistoryPage$HistoryChildWrapper: int getCount()>
SOURCE|<com.google.android.mms.pdu.Base64: byte[] discardNonBase64(byte[])>
SOURCE|<com.android.internal.telephony.gsm.GsmConnection: long getDurationMillis()>
SOURCE|<org.apache.harmony.xnet.provider.jsse.OpenSSLRSAPrivateCrtKey: java.math.BigInteger getPrimeExponentQ()>
SOURCE|<com.android.internal.telephony.cat.CommandParams: com.android.internal.telephony.cat.AppInterface$CommandType getCommandType()>
SOURCE|<android.graphics.drawable.BitmapDrawable: android.graphics.Shader$TileMode getTileModeY()>
SOURCE|<org.apache.http.protocol.UriPatternMatcher: java.util.Map getObjects()>
SOURCE|<com.android.mms.model.MediaModel: int getDuration()>
SOURCE|<gov.nist.javax.sip.stack.SIPDialog: java.lang.String getDialogId()>
SOURCE|<com.android.internal.policy.impl.keyguard.KeyguardViewStateManager: boolean isBouncing()>
SOURCE|<android.filterpacks.videosrc.CameraSource: android.hardware.Camera$Parameters getCameraParameters()>
SOURCE|<org.apache.http.message.BasicHeaderValueParser: org.apache.http.HeaderElement[] parseElements(org.apache.http.util.CharArrayBuffer,org.apache.http.message.ParserCursor)>
SOURCE|<libcore.net.http.ResponseHeaders: int getMaxAgeSeconds()>
SOURCE|<org.apache.http.impl.SocketHttpServerConnection: java.net.InetAddress getRemoteAddress()>
SOURCE|<com.android.gallery3d.app.SlideshowPage: int getBackgroundColorId()>
SOURCE|<com.google.android.apps.lightcycle.sensor.SensorReader: int getAzimuthInDeg()>
SOURCE|<com.android.contacts.group.GroupListItem: java.lang.String getAccountType()>
SOURCE|<android.test.ProviderTestCase: android.content.ContentProvider getProvider()>
SOURCE|<android.text.SpannableStringBuilder: void getChars(int,int,char[],int)>
SOURCE|<com.android.browser.BaseUi: android.app.Activity getActivity()>
SOURCE|<java.io.File: java.io.File getCanonicalFile()>
SOURCE|<com.android.internal.telephony.PhoneProxy: boolean getMessageWaitingIndicator()>
SOURCE|<com.android.internal.policy.impl.GlobalActions$MyAdapter: long getItemId(int)>
SOURCE|<com.android.i18n.phonenumbers.PhoneNumberUtil: com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata getMetadataForNonGeographicalRegion(int)>
SOURCE|<android.os.IUserManager$Stub$Proxy: int getUserSerialNumber(int)>
SOURCE|<org.apache.harmony.xml.dom.NodeImpl: org.w3c.dom.Document getOwnerDocument()>
SOURCE|<android.content.res.XmlBlock$Parser: java.lang.String getName()>
SOURCE|<com.android.browser.provider.BrowserProvider2$SuggestionsCursor: long getLong(int)>
SOURCE|<com.android.emailcommon.utility.SSLSocketFactory: java.net.Socket connectSocket(java.net.Socket,java.lang.String,int,java.net.InetAddress,int,org.apache.http.params.HttpParams)>
SOURCE|<org.apache.harmony.security.provider.cert.X509CertImpl: java.util.Date getNotAfter()>
SOURCE|<com.android.mms.dom.ElementImpl: org.w3c.dom.Attr getAttributeNode(java.lang.String)>
SOURCE|<android.webkit.WebBackForwardList: android.webkit.WebBackForwardList clone()>
SOURCE|<android.text.SpanSet: int getNextTransition(int,int)>
SOURCE|<android.view.View: int getWidth()>
SOURCE|<libcore.net.http.HttpsURLConnectionImpl: java.lang.String getResponseMessage()>
SOURCE|<android.text.style.TextAppearanceSpan: int getTextSize()>
SOURCE|<com.android.mms.util.PduLoaderManager: java.lang.String getTag()>
SOURCE|<org.ccil.cowan.tagsoup.AttributesImpl: java.lang.String getType(int)>
SOURCE|<java.nio.charset.Charset: java.lang.String displayName()>
SOURCE|<com.android.mms.dom.ElementImpl: org.w3c.dom.NodeList getElementsByTagName(java.lang.String)>
SOURCE|<javax.xml.datatype.Duration: int getHours()>
SOURCE|<com.android.gallery3d.exif.ExifTag: int getIfd()>
SOURCE|<com.android.emailcommon.service.IEmailService$Stub$Proxy: int getApiLevel()>
SOURCE|<android.hardware.Camera$Parameters: int getZoom()>
SOURCE|<android.test.mock.MockContext: android.content.pm.ApplicationInfo getApplicationInfo()>
SOURCE|<com.android.providers.calendar.CalendarProvider2: com.android.providers.calendar.CalendarProvider2 getInstance()>
SOURCE|<com.android.internal.widget.ScrollingTabContainerView$TabAdapter: long getItemId(int)>
SOURCE|<gov.nist.javax.sip.header.From: java.lang.String getUserAtHostPort()>
SOURCE|<com.android.internal.view.menu.MenuBuilder: com.android.internal.view.menu.MenuItemImpl getExpandedItem()>
SOURCE|<com.android.deskclock.AlarmClock$AlarmItemAdapter: int getSelectedItemsNum()>
SOURCE|<javax.obex.ServerOperation: javax.obex.HeaderSet getReceivedHeader()>
SOURCE|<java.security.Signer: java.security.PrivateKey getPrivateKey()>
SOURCE|<com.android.mms.data.Conversation: com.android.mms.data.Conversation get(android.content.Context,android.net.Uri,boolean)>
SOURCE|<com.android.contacts.ContactsUtils: android.content.Intent getCallIntent(java.lang.String,java.lang.String)>
SOURCE|<com.android.org.bouncycastle.asn1.DefiniteLengthInputStream: int getRemaining()>
SOURCE|<com.android.gallery3d.picasasource.PicasaSource: com.android.gallery3d.app.GalleryApp getApplication()>
SOURCE|<gov.nist.javax.sip.stack.MessageProcessor: java.net.InetAddress getIpAddress()>
SOURCE|<com.android.internal.widget.EditableInputConnection: android.view.inputmethod.ExtractedText getExtractedText(android.view.inputmethod.ExtractedTextRequest,int)>
SOURCE|<android.content.pm.LabeledIntent: java.lang.CharSequence loadLabel(android.content.pm.PackageManager)>
SOURCE|<android.telephony.CellSignalStrengthCdma: int getEvdoSnr()>
SOURCE|<com.android.providers.media.MediaProvider: android.os.ParcelFileDescriptor openFile(android.net.Uri,java.lang.String)>
SOURCE|<com.android.emailcommon.utility.SSLUtils$KeyChainKeyManager: java.security.cert.X509Certificate[] getCertificateChain(java.lang.String)>
SOURCE|<dalvik.system.BaseDexClassLoader: java.lang.Package getPackage(java.lang.String)>
SOURCE|<com.android.internal.telephony.AdnRecord: java.lang.String[] getEmails()>
SOURCE|<android.app.backup.IBackupManager$Stub$Proxy: java.lang.String getCurrentTransport()>
SOURCE|<org.apache.harmony.security.provider.cert.X509CertImpl: boolean[] getKeyUsage()>
SOURCE|<javax.net.ssl.DefaultSSLSocketFactory: java.lang.String[] getDefaultCipherSuites()>
SOURCE|<com.android.internal.textservice.ISpellCheckerSession$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
SOURCE|<android.webkit.CacheManager$CacheResult: java.lang.String getContentDisposition()>
SOURCE|<com.android.gallery3d.picasasource.FaceImage: int getWidth()>
SOURCE|<com.android.server.WiredAccessoryManager$WiredAccessoryObserver$UEventInfo: java.lang.String getSwitchStatePath()>
SOURCE|<android.content.ContentProviderOperation: int getType()>
SOURCE|<com.android.internal.telephony.cdma.CdmaDataConnectionTracker: java.lang.String getActionIntentReconnectAlarm()>
SOURCE|<android.view.View: android.view.ViewTreeObserver getViewTreeObserver()>
SOURCE|<android.net.Uri$OpaqueUri: java.lang.String getSchemeSpecificPart()>
SOURCE|<com.android.contacts.model.account.GoogleAccountType: com.android.contacts.model.dataitem.DataKind addDataKindPhone(android.content.Context)>
SOURCE|<com.android.exchange.ExchangeService$AccountObserver: java.lang.String getSyncableEasMailboxWhere()>
SOURCE|<android.content.SyncQueue: java.util.Collection getOperations()>
SOURCE|<java.net.HttpURLConnection: java.lang.String getRequestMethod()>
SOURCE|<com.android.org.bouncycastle.util.encoders.Base64: byte[] decode(byte[])>
SOURCE|<android.webkit.GeolocationPermissions: android.webkit.GeolocationPermissions getInstance()>
SOURCE|<com.android.internal.telephony.PhoneProxy: void getAvailableNetworks(android.os.Message)>
SOURCE|<gov.nist.javax.sip.stack.SIPTransactionStack: javax.sip.address.Router getRouter()>
SOURCE|<com.android.server.am.ServiceRecord$StartItem: com.android.server.am.UriPermissionOwner getUriPermissionsLocked()>
SOURCE|<java.util.concurrent.CopyOnWriteArrayList$CowSubList: java.lang.Object get(int)>
SOURCE|<android.preference.PreferenceManager: android.preference.PreferenceManager$OnPreferenceTreeClickListener getOnPreferenceTreeClickListener()>
SOURCE|<com.android.contacts.model.account.BaseAccountType$ImActionInflater: java.lang.String getLabelColumn()>
SOURCE|<com.android.mms.ui.MessageListAdapter: android.database.Cursor getCursorForItem(com.android.mms.ui.MessageItem)>
SOURCE|<gov.nist.javax.sip.message.SIPMessage: javax.sip.header.ExpiresHeader getExpires()>
SOURCE|<android.view.accessibility.AccessibilityNodeInfo: java.lang.CharSequence getContentDescription()>
SOURCE|<com.android.gallery3d.picasasource.PicasaImage: int getHeight()>
SOURCE|<com.android.uiautomator.core.QueryController: java.lang.String getCurrentActivityName()>
SOURCE|<com.android.exchange.adapter.ProvisionParser: java.lang.String getSecuritySyncKey()>
SOURCE|<android.webkit.CallbackProxy: android.webkit.WebBackForwardListClassic getBackForwardList()>
SOURCE|<javax.net.ssl.HttpsURLConnection: javax.net.ssl.HostnameVerifier getHostnameVerifier()>
SOURCE|<android.webkit.CallbackProxy: android.webkit.WebBackForwardListClient getWebBackForwardListClient()>
SOURCE|<android.view.textservice.TextServicesManager: android.view.textservice.SpellCheckerInfo[] getEnabledSpellCheckers()>
SOURCE|<com.android.bluetooth.pbap.BluetoothPbapVcardManager: java.util.ArrayList getPhonebookNameList(int)>
SOURCE|<java.nio.charset.MalformedInputException: int getInputLength()>
SOURCE|<com.android.internal.policy.impl.PhoneWindowManager: com.android.internal.telephony.ITelephony getTelephonyService()>
SOURCE|<com.android.mms.dom.smil.SmilDocumentImpl: org.w3c.dom.smil.SMILElement getHead()>
SOURCE|<com.android.launcher2.Workspace: com.android.launcher2.CellLayout getParentCellLayoutForView(android.view.View)>
SOURCE|<com.android.contacts.list.ContactListItemView: android.widget.TextView getStatusView()>
SOURCE|<com.android.contacts.quickcontact.DataAction: android.content.Intent getIntent()>
SOURCE|<com.android.emailcommon.provider.Account: com.android.emailcommon.provider.Account restoreAccountWithId(android.content.Context,long)>
SOURCE|<com.android.calendar.CalendarController: com.android.calendar.CalendarController getInstance(android.content.Context)>
SOURCE|<android.net.ConnectivityManager: android.net.ProxyProperties getProxy()>
SOURCE|<java.security.Signature: java.security.Signature getInstance(java.lang.String)>
SOURCE|<java.lang.Float: float parseFloat(java.lang.String)>
SOURCE|<com.android.contacts.editor.KindSectionView: int getEditorCount()>
SOURCE|<android.gesture.GestureStore: int getSequenceType()>
SOURCE|<com.android.bluetooth.btservice.AdapterService$AdapterServiceBinder: java.lang.String getRemoteName(android.bluetooth.BluetoothDevice)>
SOURCE|<com.android.uiautomator.core.QueryController: java.lang.String getLastTraversedText()>
SOURCE|<android.preference.Preference: long getId()>
SOURCE|<android.view.ViewConfiguration: int getHoverTapSlop()>
SOURCE|<com.android.contacts.group.GroupEditorFragment$Member: java.lang.String getDisplayName()>
SOURCE|<java.net.DatagramSocket: int getPort()>
SOURCE|<android.webkit.WebSettings: java.lang.String getPluginsPath()>
SOURCE|<android.test.mock.MockCursor: boolean getWantsAllOnMoveCalls()>
SOURCE|<android.graphics.Canvas: int getMaximumBitmapHeight()>
SOURCE|<android.renderscript.Sampler: float getAnisotropy()>
SOURCE|<com.android.internal.widget.multiwaveview.Ease$Quart$3: float getInterpolation(float)>
SOURCE|<android.content.pm.ContainerEncryptionParams: javax.crypto.SecretKey getEncryptionKey()>
SOURCE|<android.hardware.Camera$Parameters: java.util.List getSupportedJpegThumbnailSizes()>
SOURCE|<android.preference.GenericInflater: android.preference.GenericInflater$Factory getFactory()>
SOURCE|<com.android.internal.statusbar.IStatusBar$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
SOURCE|<com.android.providers.contacts.NameNormalizer: java.text.RuleBasedCollator getCompressingCollator()>
SOURCE|<java.util.Formatter$FormatToken: int getArgIndex()>
SOURCE|<com.android.internal.telephony.cdma.RuimSmsInterfaceManager: java.util.ArrayList access$300(com.android.internal.telephony.cdma.RuimSmsInterfaceManager,java.util.ArrayList)>
SOURCE|<com.android.internal.telephony.CallerInfo: java.lang.String toString()>
SOURCE|<java.security.MessageDigest$MessageDigestImpl: byte[] engineDigest()>
SOURCE|<com.android.videoeditor.service.MovieTransition: long getDuration()>
SOURCE|<android.net.ConnectivityManager: android.net.NetworkInfo getActiveNetworkInfo()>
SOURCE|<android.webkit.WebSettings: void setLoadWithOverviewMode(boolean)>
SOURCE|<android.app.ActivityGroup: android.app.Activity getCurrentActivity()>
SOURCE|<com.android.contacts.GroupMetaData: java.lang.String getTitle()>
SOURCE|<java.util.logging.Logger: java.util.logging.Logger getGlobal()>
SOURCE|<java.util.jar.JarInputStream: java.util.zip.ZipEntry getNextEntry()>
SOURCE|<java.util.concurrent.locks.AbstractQueuedLongSynchronizer: long getState()>
SOURCE|<com.android.mms.util.SendingProgressTokenManager: long get(java.lang.Object)>
SOURCE|<android.view.ScaleGestureDetector: float getPreviousSpanX()>
SOURCE|<java.lang.reflect.InvocationTargetException: java.lang.Throwable getTargetException()>
SOURCE|<android.hardware.Camera$Parameters: boolean getAutoExposureLock()>
SOURCE|<android.app.ISearchManager$Stub: android.os.IBinder asBinder()>
SOURCE|<android.graphics.drawable.ScaleDrawable$ScaleState: int getChangingConfigurations()>
SOURCE|<android.media.AudioService$VolumeStreamState: int getMaxIndex()>
SOURCE|<org.apache.james.mime4j.field.contenttype.parser.SimpleCharStream: int getBeginColumn()>
SOURCE|<javax.security.auth.PrivateCredentialPermission: java.lang.String[][] getPrincipals()>
SOURCE|<android.widget.TextView: int getCompoundDrawablePadding()>
SOURCE|<com.android.inputmethod.latin.ResizableIntArray: int[] getPrimitiveArray()>
SOURCE|<org.ccil.cowan.tagsoup.AttributesImpl: java.lang.String getType(java.lang.String,java.lang.String)>
SOURCE|<android.app.admin.DeviceAdminInfo: java.util.ArrayList getUsedPolicies()>
SOURCE|<java.util.logging.LogRecord: java.lang.String getResourceBundleName()>
SOURCE|<android.widget.CursorTreeAdapter$MyCursorHelper: android.database.Cursor moveTo(int)>
SOURCE|<com.android.email.activity.MessagesAdapter$MessagesCursorLoader: android.database.Cursor loadInBackground()>
SOURCE|<org.apache.http.auth.NTCredentials: java.lang.String getUserName()>
SOURCE|<android.app.Fragment: boolean getUserVisibleHint()>
SOURCE|<java.util.LongSummaryStatistics: long getMax()>
SOURCE|<android.view.IWindowManager$Stub$Proxy: int getPreferredOptionsPanelGravity()>
SOURCE|<android.webkit.WebSettingsClassic: java.lang.String getSansSerifFontFamily()>
SOURCE|<com.android.internal.telephony.DataConnectionAc: android.app.PendingIntent getReconnectIntentSync()>
SOURCE|<java.util.Collections$CheckedMap$CheckedEntry: java.lang.Object getValue()>
SOURCE|<android.telephony.SignalStrength: int getLteCqi()>
SOURCE|<com.google.android.mms.pdu.PduBody: int getPartIndex(com.google.android.mms.pdu.PduPart)>
SOURCE|<android.telephony.SmsMessage: android.telephony.SmsMessage createFromPdu(byte[])>
SOURCE|<com.google.android.mms.pdu.GenericPdu: com.google.android.mms.pdu.PduHeaders getPduHeaders()>
SOURCE|<com.android.gallery3d.data.ActionImage: int getMediaType()>
SOURCE|<com.android.mms.data.Conversation: com.android.mms.data.Conversation get(android.content.Context,com.android.mms.data.ContactList,boolean)>
SOURCE|<com.android.gallery3d.ui.AlbumSetSlidingWindow: com.android.gallery3d.ui.AlbumSetSlidingWindow$AlbumSetEntry get(int)>
SOURCE|<com.google.android.picasasync.UploadTaskEntry: java.lang.String getDisplayName()>
SOURCE|<com.android.contacts.detail.ContactDetailFragmentCarousel: int getCurrentPage()>
SOURCE|<android.database.MatrixCursor: byte[] getBlob(int)>
SOURCE|<com.android.nfc.dhimpl.NativeP2pDevice: byte[] getGeneralBytes()>
SOURCE|<com.android.deskclock.widget.multiwaveview.TargetDrawable: float getScaleY()>
SOURCE|<android.net.INetworkPolicyManager$Stub$Proxy: boolean isUidForeground(int)>
SOURCE|<android.net.NetworkStatsHistory: long getStart()>
SOURCE|<android.os.storage.IMountServiceListener$Stub: android.os.IBinder asBinder()>
SOURCE|<com.android.phone.PhoneGlobals: com.android.internal.telephony.PhoneConstants$State getPhoneState()>
SOURCE|<com.android.server.sip.SipSessionGroup: com.android.server.sip.SipSessionGroup$SipSessionImpl access$400(com.android.server.sip.SipSessionGroup,javax.sip.RequestEvent,android.net.sip.ISipSessionListener,javax.sip.ServerTransaction,int)>
SOURCE|<android.text.method.SingleLineTransformationMethod: android.text.method.SingleLineTransformationMethod getInstance()>
SOURCE|<org.apache.harmony.xml.dom.DOMConfigurationImpl$7: java.lang.Object get(org.apache.harmony.xml.dom.DOMConfigurationImpl)>
SOURCE|<com.android.email.mail.store.ImapStore: android.content.Context getContext()>
SOURCE|<android.app.SearchableInfo: int getVoiceLanguageModeId()>
SOURCE|<java.net.URLConnection: int getContentLength()>
SOURCE|<org.apache.harmony.xnet.provider.jsse.SSLSocketWrapper: int getSoTimeout()>
SOURCE|<android.media.AudioTrack: int getPositionNotificationPeriod()>
SOURCE|<com.android.mms.ui.MessageItem: int getMmsDownloadStatus()>
SOURCE|<org.apache.harmony.security.x509.X509PublicKey: java.lang.String getFormat()>
SOURCE|<com.android.internal.telephony.CallManager: com.android.internal.telephony.Call getFirstActiveBgCall()>
SOURCE|<android.app.ActivityManagerProxy: android.os.ParcelFileDescriptor openContentUri(android.net.Uri)>
SOURCE|<android.media.AudioManager: android.media.IRingtonePlayer getRingtonePlayer()>
SOURCE|<com.android.contacts.model.account.BaseAccountType$EmailActionInflater: int getTypeLabelResource(java.lang.Integer)>
SOURCE|<com.google.android.mms.pdu.DeliveryInd: byte[] getMessageId()>
SOURCE|<java.nio.IntToByteBufferAdapter: int get()>
SOURCE|<android.bluetooth.IBluetoothManager$Stub$Proxy: java.lang.String getName()>
SOURCE|<com.android.contacts.model.account.AccountType: java.lang.CharSequence getResourceText(android.content.Context,java.lang.String,int,java.lang.String)>
SOURCE|<android.content.IClipboard$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
SOURCE|<com.android.emailcommon.internet.MimeMessage: java.lang.String getFirstHeader(java.lang.String)>
SOURCE|<com.android.browser.view.BookmarkExpandableView$BookmarkAccountAdapter: int getGroupCount()>
SOURCE|<com.android.providers.contacts.NameSplitter$Name: java.lang.String getMiddleName()>
SOURCE|<java.nio.channels.FileChannel: long read(java.nio.ByteBuffer[])>
SOURCE|<org.apache.harmony.xnet.provider.jsse.OpenSSLRSAPrivateKey: org.apache.harmony.xnet.provider.jsse.OpenSSLRSAPrivateKey getInstance(org.apache.harmony.xnet.provider.jsse.OpenSSLKey)>
SOURCE|<java.util.ServiceLoader: java.util.ServiceLoader load(java.lang.Class,java.lang.ClassLoader)>
SOURCE|<android.widget.Switch: int getCompoundPaddingRight()>
SOURCE|<android.net.Credentials: int getPid()>
SOURCE|<com.google.android.picasasync.PicasaFacade: android.net.Uri getPostAlbumsUri()>
SOURCE|<com.android.gallery3d.app.Bookmarker: java.lang.Integer getBookmark(android.net.Uri)>
SOURCE|<com.android.internal.os.BatteryStatsImpl$Uid: long getAudioTurnedOnTime(long,int)>
SOURCE|<android.os.storage.StorageVolume: int getStorageId()>
SOURCE|<android.content.res.Resources: android.content.res.AssetManager getAssets()>
SOURCE|<libcore.icu.TimeZones: java.lang.String getDisplayName(java.lang.String[][],java.lang.String,boolean,int)>
SOURCE|<java.time.temporal.ChronoField: long getFrom(java.time.temporal.TemporalAccessor)>
SOURCE|<java.security.Security: java.security.Provider getProvider(java.lang.String)>
SOURCE|<libcore.net.url.FileURLConnection: java.lang.String getContentType()>
SOURCE|<java.time.chrono.HijrahDate: long getLong(java.time.temporal.TemporalField)>
SOURCE|<java.util.TreeMap$Node: java.lang.Object getValue()>
SOURCE|<android.content.BroadcastReceiver: android.os.IBinder peekService(android.content.Context,android.content.Intent)>
SOURCE|<android.hardware.Camera$Parameters: java.util.List getSupportedFocusModes()>
SOURCE|<android.media.audiofx.EnvironmentalReverb: short getDecayHFRatio()>
SOURCE|<android.bluetooth.BluetoothAdapter: java.util.Set getBondedDevices()>
SOURCE|<com.android.org.bouncycastle.asn1.DERIA5String: com.android.org.bouncycastle.asn1.DERIA5String getInstance(java.lang.Object)>
SOURCE|<com.android.videoeditor.widgets.AudioTrackView: android.media.videoeditor.WaveformData getWaveformData()>
SOURCE|<android.media.AudioManager: int getLastAudibleMasterVolume()>
SOURCE|<java.nio.LongBuffer: java.lang.Object array()>
SOURCE|<com.android.internal.statusbar.IStatusBarService$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
SOURCE|<java.util.IntSummaryStatistics: int getMin()>
SOURCE|<com.android.internal.telephony.PhoneProxy: com.android.internal.telephony.PhoneSubInfo getPhoneSubInfo()>
SOURCE|<android.gesture.GestureStore: android.gesture.Learner getLearner()>
SOURCE|<com.android.browser.PieControl$TabAdapter: long getItemId(int)>
SOURCE|<com.android.common.widget.CompositeCursorAdapter: android.content.Context getContext()>
SOURCE|<com.android.server.RecognitionManagerService: android.content.ComponentName findAvailRecognizer(java.lang.String,int)>
SOURCE|<com.googlecode.mp4parser.authoring.Mp4TrackImpl: com.coremedia.iso.boxes.SampleDescriptionBox getSampleDescriptionBox()>
SOURCE|<com.android.gallery3d.ui.BitmapScreenNail: int getHeight()>
SOURCE|<com.android.internal.database.SortCursor: int getInt(int)>
SOURCE|<com.android.inputmethod.keyboard.MoreKeysKeyboardView: com.android.inputmethod.keyboard.KeyDetector getKeyDetector()>
SOURCE|<android.net.EthernetDataTracker: android.net.LinkCapabilities getLinkCapabilities()>
SOURCE|<com.android.server.InputMethodManagerService$InputMethodSettings: int getSelectedInputMethodSubtypeHashCode()>
SOURCE|<android.provider.Settings$NameValueTable: android.net.Uri getUriFor(android.net.Uri,java.lang.String)>
SOURCE|<com.android.gallery3d.filtershow.imageshow.ImageGeometry: int getLocalValue()>
SOURCE|<java.text.DateFormat: java.text.DateFormat getDateTimeInstance(int,int,java.util.Locale)>
SOURCE|<org.apache.http.client.methods.HttpHead: java.lang.String getMethod()>
SOURCE|<com.android.internal.telephony.ims.IsimUiccRecords$EfIsimImpiLoaded: java.lang.String getEfName()>
SOURCE|<java.util.Calendar: java.util.Date getTime()>
SOURCE|<com.android.org.bouncycastle.asn1.ASN1Object: byte[] getEncoded(java.lang.String)>
SOURCE|<com.android.emailcommon.provider.EmailContent$Attachment: com.android.emailcommon.provider.EmailContent$Attachment restoreAttachmentWithId(android.content.Context,long)>
SOURCE|<javax.security.auth.Subject: java.util.Set getPublicCredentials(java.lang.Class)>
SOURCE|<com.android.contacts.model.Contact: android.net.Uri getRequestedUri()>
SOURCE|<com.android.mms.transaction.Transaction: java.lang.String toString()>
SOURCE|<com.android.internal.telephony.PhoneBase: java.lang.String getCdmaPrlVersion()>
SOURCE|<com.android.nfc.snep.SnepMessenger: com.android.nfc.snep.SnepMessage getMessage()>
SOURCE|<com.android.server.net.NetworkPolicyManagerService: int getUidPolicy(int)>
SOURCE|<com.android.internal.telephony.IccPhoneBookInterfaceManagerProxy: int[] getAdnRecordsSize(int)>
SOURCE|<android.media.Metadata: java.lang.String getString(int)>
SOURCE|<android.net.UrlQuerySanitizer: android.net.UrlQuerySanitizer$ValueSanitizer getSpaceLegal()>
SOURCE|<com.android.internal.telephony.cdma.CDMAPhone: int getPhoneType()>
SOURCE|<android.database.sqlite.SQLiteProgram: java.lang.String getSql()>
SOURCE|<com.android.browser.NavTabScroller: int getGap()>
SOURCE|<org.json.JSONArray: boolean getBoolean(int)>
SOURCE|<org.apache.harmony.xml.dom.NodeImpl$1: java.lang.String getTypeNamespace()>
SOURCE|<com.android.systemui.recent.RecentsHorizontalScrollView: android.view.View getChildContentView(android.view.View)>
SOURCE|<com.android.mms.data.Conversation: android.net.Uri getUri(long)>
SOURCE|<com.android.server.NativeDaemonEvent: java.lang.String getRawEvent()>
SOURCE|<android.app.Activity: android.view.View onCreateView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet)>
SOURCE|<gov.nist.javax.sip.stack.SIPTransaction: java.lang.String getKey()>
SOURCE|<com.android.internal.widget.ScrollingTabContainerView$TabAdapter: java.lang.Object getItem(int)>
SOURCE|<android.nfc.tech.NfcV: byte[] transceive(byte[],boolean)>
SOURCE|<android.app.Instrumentation: android.content.Context getContext()>
SOURCE|<android.filterfw.core.FilterSurfaceView: android.filterfw.core.GLEnvironment getGLEnv()>
SOURCE|<android.drm.mobile1.DrmRawContent: int getRawType()>
SOURCE|<gov.nist.javax.sip.header.Via: gov.nist.javax.sip.header.Protocol getSentProtocol()>
SOURCE|<android.webkit.WebView$PrivateAccess: float getHorizontalScrollFactor()>
SOURCE|<java.util.concurrent.atomic.AtomicInteger: int getAndAdd(int)>
SOURCE|<android.filterpacks.imageproc.ImageCombineFilter: android.filterfw.core.FrameFormat getOutputFormat(java.lang.String,android.filterfw.core.FrameFormat)>
SOURCE|<com.android.inputmethod.latin.AdditionalSubtype: android.view.inputmethod.InputMethodSubtype createAdditionalSubtype(java.lang.String)>
SOURCE|<android.database.sqlite.SQLiteDatabase: int getVersion()>
SOURCE|<android.widget.BaseExpandableListAdapter: int getGroupType(int)>
SOURCE|<android.text.Layout: int getOffsetForHorizontal(int,float)>
SOURCE|<android.database.MatrixCursor: java.lang.String[] getColumnNames()>
SOURCE|<android.speech.RecognizerIntent: android.content.Intent getVoiceDetailsIntent(android.content.Context)>
SOURCE|<android.widget.BaseAdapter: int getViewTypeCount()>
SOURCE|<java.nio.PipeImpl$PipeSinkChannel: long write(java.nio.ByteBuffer[],int,int)>
SOURCE|<android.media.MediaRouter$RouteGroup: java.lang.CharSequence getName(android.content.res.Resources)>
SOURCE|<android.database.CursorWrapper: android.os.Bundle getExtras()>
SOURCE|<com.android.internal.statusbar.StatusBarIconList: java.lang.String getSlot(int)>
SOURCE|<com.android.internal.policy.impl.PhoneWindowManager: int getAboveUniverseLayer()>
SOURCE|<android.os.MemoryFile: int getSize(java.io.FileDescriptor)>
SOURCE|<libcore.io.DropBox: libcore.io.DropBox$Reporter getReporter()>
SOURCE|<android.telephony.PhoneNumberUtils: java.lang.String getStrippedReversed(java.lang.String)>
SOURCE|<com.android.nfc.snep.SnepMessage: com.android.nfc.snep.SnepMessage getMessage(byte)>
SOURCE|<com.android.org.bouncycastle.asn1.DERApplicationSpecific: byte[] getContents()>
SOURCE|<com.android.bluetooth.opp.BluetoothOppReceiveFileInfo: com.android.bluetooth.opp.BluetoothOppReceiveFileInfo generateFileInfo(android.content.Context,int)>
SOURCE|<android.webkit.GeolocationPermissionsClassic: android.webkit.GeolocationPermissionsClassic getInstance()>
SOURCE|<com.android.launcher2.AppsCustomizeTabHost: java.lang.String getTabTagForContentType(com.android.launcher2.AppsCustomizePagedView$ContentType)>
SOURCE|<android.os.Debug: int getGlobalClassInitTime()>
SOURCE|<java.util.logging.LogManager: java.lang.String getProperty(java.lang.String)>
SOURCE|<com.android.email.activity.ShortcutPickerFragment$MailboxShortcutPickerFragment: int getFilter()>
SOURCE|<com.android.email.Controller: com.android.emailcommon.provider.Mailbox getSearchMailbox(long)>
SOURCE|<java.net.NetworkInterface: java.util.Enumeration getNetworkInterfaces()>
SOURCE|<android.text.AutoText: java.lang.String get(java.lang.CharSequence,int,int,android.view.View)>
SOURCE|<android.bluetooth.BluetoothAdapter: android.bluetooth.BluetoothAdapter getDefaultAdapter()>
SOURCE|<org.apache.harmony.xnet.provider.jsse.OpenSSLServerSocketImpl: java.lang.String[] getEnabledCipherSuites()>
SOURCE|<com.android.server.wm.WindowManagerService: android.content.res.Configuration computeNewConfigurationLocked()>
SOURCE|<android.media.AudioTrack: int reloadStaticData()>
SOURCE|<android.view.IWindowManager$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
SOURCE|<java.security.Identity: java.lang.String getName()>
SOURCE|<com.google.common.collect.AbstractMultimap: java.util.Collection entries()>
SOURCE|<android.net.sip.ISipSession$Stub$Proxy: int getState()>
SOURCE|<android.bluetooth.BluetoothServerSocket: int getChannel()>
SOURCE|<android.widget.TextView: void getFocusedRect(android.graphics.Rect)>
SOURCE|<android.filterpacks.imageproc.ImageStitcher: android.filterfw.core.FrameFormat getOutputFormat(java.lang.String,android.filterfw.core.FrameFormat)>
SOURCE|<com.android.internal.telephony.gsm.GSMPhone: com.android.internal.telephony.PhoneConstants$DataState getDataConnectionState(java.lang.String)>
SOURCE|<com.google.common.collect.MapMakerInternalMap$StrongExpirableEvictableEntry: com.google.common.collect.MapMakerInternalMap$ReferenceEntry getPreviousEvictable()>
SOURCE|<android.nfc.tech.MifareClassic: int getBlockCountInSector(int)>
SOURCE|<com.android.server.net.NetworkStatsService$DefaultNetworkStatsSettings: long getXtPersistBytes(long)>
SOURCE|<com.android.inputmethod.latin.RichInputConnection: java.lang.CharSequence getTextAfterCursor(int,int)>
SOURCE|<gov.nist.javax.sip.message.MessageFactoryImpl: javax.sip.message.Response createResponse(int,javax.sip.message.Request,javax.sip.header.ContentTypeHeader,java.lang.Object)>
SOURCE|<org.apache.http.auth.UsernamePasswordCredentials: java.security.Principal getUserPrincipal()>
SOURCE|<android.os.UserManager: android.os.UserHandle getUserForSerialNumber(long)>
SOURCE|<com.android.email.activity.ThreePaneLayout: com.android.email.activity.MessageCommandButtonView getInMessageCommandButtons()>
SOURCE|<com.android.mms.dom.NamedNodeMapImpl: int getLength()>
SOURCE|<javax.xml.parsers.SAXParser: void parse(java.io.File,org.xml.sax.HandlerBase)>
SOURCE|<java.util.jar.JarInputStream: java.util.jar.Manifest getManifest()>
SOURCE|<java.lang.Character: int getType(int)>
SOURCE|<java.time.zone.ZoneRules: java.util.List getTransitionRules()>
SOURCE|<android.widget.AbsListView: int getListPaddingTop()>
SOURCE|<android.location.LocationManager: boolean isProviderEnabled(java.lang.String)>
SOURCE|<java.net.InetAddress: java.net.InetAddress[] getAllByName(java.lang.String)>
SOURCE|<android.net.ConnectivityManager: boolean getBackgroundDataSetting()>
SOURCE|<com.google.android.picasasync.PicasaDatabaseHelper: android.database.sqlite.SQLiteDatabase getWritableDatabase()>
SOURCE|<java.security.cert.X509CertSelector: java.util.Collection getSubjectAlternativeNames()>
SOURCE|<android.filterfw.core.FrameFormat: int getWidth()>
SOURCE|<com.android.mms.data.WorkingMessage: com.android.mms.data.WorkingMessage loadDraft(com.android.mms.ui.ComposeMessageActivity,com.android.mms.data.Conversation,java.lang.Runnable)>
SOURCE|<com.android.gallery3d.data.LocalMediaItem: void getLatLong(double[])>
SOURCE|<com.android.launcher2.DragLayer$LayoutParams: int getHeight()>
SOURCE|<javax.crypto.Cipher: byte[] doFinal()>
SOURCE|<com.android.mms.data.WorkingMessage: com.android.mms.data.Conversation getConversation()>
SOURCE|<com.android.mms.transaction.RetrieveTransaction: byte[] getPdu(java.lang.String)>
SOURCE|<android.widget.CursorAdapter: android.database.Cursor getCursor()>
SOURCE|<javax.net.ssl.KeyManagerFactory: javax.net.ssl.KeyManagerFactory getInstance(java.lang.String,java.security.Provider)>
SOURCE|<com.android.internal.telephony.sip.SipPhoneBase: java.lang.String getDeviceId()>
SOURCE|<android.bluetooth.BluetoothTetheringDataTracker: android.net.NetworkInfo getNetworkInfo()>
SOURCE|<android.content.res.ColorStateList: android.content.res.ColorStateList createFromXml(android.content.res.Resources,org.xmlpull.v1.XmlPullParser)>
SOURCE|<java.time.zone.ZoneOffsetTransitionRule: java.time.zone.ZoneOffsetTransitionRule readExternal(java.io.DataInput)>
SOURCE|<com.android.internal.policy.impl.keyguard.PagedView: float[] mapPointFromViewToParent(android.view.View,float,float)>
SOURCE|<gov.nist.javax.sip.stack.SIPTransaction: java.net.InetAddress getPeerInetAddress()>
SOURCE|<gov.nist.javax.sip.header.Challenge: gov.nist.core.NameValueList getAuthParams()>
SOURCE|<android.content.ContextWrapper: android.view.CompatibilityInfoHolder getCompatibilityInfo(int)>
SOURCE|<org.apache.http.params.DefaultedHttpParams: java.util.Set getNames()>
SOURCE|<gov.nist.javax.sip.stack.SIPDialog: java.lang.String getMethod()>
SOURCE|<android.os.Parcel: android.os.Parcelable readParcelable(java.lang.ClassLoader)>
SOURCE|<com.android.gallery3d.ui.TileImageViewAdapter: int getImageWidth()>
SOURCE|<android.filterpacks.imageproc.NegativeFilter: android.filterfw.core.FrameFormat getOutputFormat(java.lang.String,android.filterfw.core.FrameFormat)>
SOURCE|<android.filterpacks.imageproc.FisheyeFilter: android.filterfw.core.FrameFormat getOutputFormat(java.lang.String,android.filterfw.core.FrameFormat)>
SOURCE|<android.media.TimedText: android.graphics.Rect getBounds()>
SOURCE|<com.android.internal.telephony.CsimFileHandler: java.lang.String getEFPath(int)>
SOURCE|<android.os.StatFs: int getBlockSize()>
SOURCE|<android.widget.CursorAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)>
SOURCE|<android.app.ContextImpl: android.content.Context getOuterContext()>
SOURCE|<com.android.phone.EmergencyDialer: android.app.Dialog onCreateDialog(int)>
SOURCE|<com.android.contacts.model.RawContactDeltaList: com.android.contacts.model.RawContactDelta getFirstWritableRawContact(android.content.Context)>
SOURCE|<com.adobe.xmp.options.ParseOptions: boolean getRequireXMPMeta()>
SOURCE|<com.android.email.mail.store.imap.ImapResponseParser: java.lang.String readUntilEol()>
SOURCE|<com.android.browser.util.ThreadedCursorAdapter: android.database.Cursor getItem(int)>
SOURCE|<com.android.gallery3d.filtershow.imageshow.GeometryMetadata: android.graphics.Matrix getFlipMatrix(float,float,com.android.gallery3d.filtershow.imageshow.GeometryMetadata$FLIP)>
SOURCE|<com.android.org.bouncycastle.asn1.DERInteger: com.android.org.bouncycastle.asn1.ASN1Integer getInstance(com.android.org.bouncycastle.asn1.ASN1TaggedObject,boolean)>
SOURCE|<android.net.rtp.AudioGroup: android.net.rtp.AudioStream[] getStreams()>
SOURCE|<org.apache.http.auth.AuthScope: java.lang.String getRealm()>
SOURCE|<android.support.v4.view.MotionEventCompat: float getX(android.view.MotionEvent,int)>
SOURCE|<android.os.Bundle: android.util.SparseArray getSparseParcelableArray(java.lang.String)>
SOURCE|<java.text.DecimalFormat: java.math.RoundingMode getRoundingMode()>
SOURCE|<android.webkit.PluginData: long getContentLength()>
SOURCE|<com.android.mms.util.ThumbnailManager: android.graphics.Bitmap access$300()>
SOURCE|<android.app.ContextImpl: java.io.File getCacheDir()>
SOURCE|<java.util.jar.JarFile: java.util.zip.ZipEntry getEntry(java.lang.String)>
SOURCE|<com.android.calendar.agenda.AgendaWindowAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)>
SOURCE|<android.webkit.WebView$PrivateAccess: float getVerticalScrollFactor()>
SOURCE|<com.android.nfc.dhimpl.NativeP2pDevice: byte[] transceive(byte[])>
SOURCE|<com.android.browser.BreadCrumbView: java.lang.Object getTopData()>
SOURCE|<com.android.internal.telephony.ISms$Stub$Proxy: java.util.List getAllMessagesFromIccEf()>
SOURCE|<com.android.internal.telephony.PhoneSubInfo: java.lang.String getMsisdn()>
SOURCE|<com.android.server.net.NetworkStatsService: java.lang.String[] getMobileIfaces()>
SOURCE|<java.util.zip.Deflater: long getBytesRead()>
SOURCE|<com.android.internal.telephony.sip.SipPhone: java.lang.String getDeviceId()>
SOURCE|<android.media.AudioService: int getMasterMaxVolume()>
SOURCE|<java.net.URI: java.lang.String getUserInfo()>
SOURCE|<com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata: com.android.i18n.phonenumbers.Phonemetadata$PhoneNumberDesc getNoInternationalDialling()>
SOURCE|<com.android.uiautomator.core.QueryController: android.view.accessibility.AccessibilityNodeInfo getAccessibilityRootNode()>
SOURCE|<java.lang.Thread: java.lang.Thread$UncaughtExceptionHandler getDefaultUncaughtExceptionHandler()>
SOURCE|<com.android.internal.telephony.UiccCard: com.android.internal.telephony.UiccCardApplication getApplication(int)>
SOURCE|<org.apache.harmony.xnet.provider.jsse.SSLSocketWrapper: int getSoLinger()>
SOURCE|<com.googlecode.mp4parser.authoring.builder.DefaultMp4Builder$InterleaveChunkMdat: long getSize()>
SOURCE|<com.android.mms.MmsApp: java.lang.String getCurrentCountryIso()>
SOURCE|<android.app.ProgressDialog: int getSecondaryProgress()>
SOURCE|<com.android.uiautomator.core.QueryController: android.view.accessibility.AccessibilityNodeInfo getRootNode()>
SOURCE|<android.os.Bundle: int getInt(java.lang.String)>
SOURCE|<android.widget.ToggleButton: java.lang.CharSequence getTextOn()>
SOURCE|<com.android.common.widget.CompositeCursorAdapter: int getPartitionCount()>
SOURCE|<android.telephony.TelephonyManager: int getDataActivity()>
SOURCE|<libcore.io.IoBridge: java.net.InetAddress getSocketLocalAddress(java.io.FileDescriptor)>
SOURCE|<android.graphics.Bitmap: int getDefaultDensity()>
SOURCE|<android.content.IntentFilter: java.lang.String getAction(int)>
SOURCE|<android.os.MemoryFile: java.io.FileDescriptor getFileDescriptor()>
SOURCE|<com.android.bluetooth.btservice.AdapterService: android.os.ParcelFileDescriptor createSocketChannel(int,java.lang.String,android.os.ParcelUuid,int,int)>
SOURCE|<java.math.BigInt: int getNativeBIGNUM()>
SOURCE|<com.android.bluetooth.hdp.HealthService: java.lang.String getName()>
SOURCE|<com.android.gallery3d.data.FilterTypeSet: int getSubMediaSetCount()>
SOURCE|<android.content.pm.ContainerEncryptionParams: long getDataEnd()>
SOURCE|<com.android.systemui.recent.TaskDescription: android.graphics.drawable.Drawable getIcon()>
SOURCE|<android.bluetooth.IBluetooth$Stub$Proxy: int getProfileConnectionState(int)>
SOURCE|<com.android.phone.PhoneUtils: com.android.internal.telephony.CallerInfo getCallerInfo(android.content.Context,com.android.internal.telephony.Connection)>
SOURCE|<com.google.android.picasastore.PicasaStoreFacade: java.io.File getCacheFile(long,java.lang.String)>
SOURCE|<com.android.mms.model.SmilHelper: org.w3c.dom.smil.SMILDocument getDocument(com.google.android.mms.pdu.PduBody)>
SOURCE|<android.telephony.TelephonyManager: java.util.List getNeighboringCellInfo()>
SOURCE|<android.media.videoeditor.Transition: android.media.videoeditor.MediaArtistNativeHelper$TransitionSettings getTransitionSettings()>
SOURCE|<com.android.gallery3d.picasasource.PicasaSource: java.lang.String getContentType(com.android.gallery3d.data.MediaObject)>
SOURCE|<android.text.DynamicLayout: int getLineDescent(int)>
SOURCE|<java.security.cert.X509CRL: java.security.cert.X509CRLEntry getRevokedCertificate(java.security.cert.X509Certificate)>
SOURCE|<android.telephony.TelephonyManager: int getVoiceMessageCount()>
SOURCE|<com.adobe.xmp.options.SerializeOptions: boolean getEncodeUTF16LE()>
SOURCE|<android.graphics.drawable.BitmapDrawable: android.graphics.Bitmap getBitmap()>
SOURCE|<com.android.internal.widget.LockPatternUtils: int getRequestedPasswordMinimumNonLetter()>
SOURCE|<android.widget.TextView: android.text.Editable getEditableText()>
SOURCE|<android.os.Parcel: java.util.ArrayList createTypedArrayList(android.os.Parcelable$Creator)>
SOURCE|<libcore.io.GaiException: java.lang.String getMessage()>
SOURCE|<com.android.contacts.CallDetailActivity$1UpdateContactDetailsTask$2: int getMaximumScrollableHeaderOffset()>
SOURCE|<android.test.RenamingDelegatingContext: java.io.File getDatabasePath(java.lang.String)>
SOURCE|<android.widget.AbsListView: int getChoiceMode()>
SOURCE|<libcore.io.ForwardingOs: java.lang.String getenv(java.lang.String)>
SOURCE|<gov.nist.javax.sip.stack.MessageChannel: int getPort()>
SOURCE|<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.SipProviderImpl getSipProvider()>
SOURCE|<android.net.Proxy: org.apache.http.HttpHost getPreferredHttpHost(android.content.Context,java.lang.String)>
SOURCE|<android.hardware.usb.UsbAccessory: java.lang.String getVersion()>
SOURCE|<android.net.http.RequestQueue: android.net.http.Request getRequest()>
SOURCE|<android.test.AndroidTestRunner: junit.framework.TestResult getTestResult()>
SOURCE|<org.apache.harmony.security.x509.GeneralSubtrees: java.util.List getSubtrees()>
SOURCE|<com.android.inputmethod.latin.spellcheck.AndroidSpellCheckerService: android.view.textservice.SuggestionsInfo getInDictEmptySuggestions()>
SOURCE|<android.widget.SimpleExpandableListAdapter: int getChildrenCount(int)>
SOURCE|<com.android.camera.ComboPreferences: java.util.Set getStringSet(java.lang.String,java.util.Set)>
SOURCE|<android.nfc.NdefRecord: short getTnf()>
SOURCE|<android.media.MediaRouter$RouteCategory: java.lang.CharSequence getName(android.content.Context)>
SOURCE|<java.util.concurrent.locks.AbstractOwnableSynchronizer: java.lang.Thread getExclusiveOwnerThread()>
SOURCE|<android.media.IAudioService$Stub$Proxy: int getMasterVolume()>
SOURCE|<com.coremedia.iso.boxes.fragment.TrackRunBox: int getDataOffset()>
SOURCE|<java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String,java.lang.String)>
SOURCE|<com.android.server.location.GpsLocationProvider: long getStatusUpdateTime()>
SOURCE|<com.android.launcher2.Workspace: android.view.View getContent()>
SOURCE|<com.android.browser.preferences.WebsiteSettingsFragment$SiteAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)>
SOURCE|<com.android.videoeditor.widgets.OverlayLinearLayout: android.app.Dialog onCreateDialog(int,android.os.Bundle)>
SOURCE|<com.android.org.bouncycastle.asn1.x509.X509Name: java.util.Vector getValues(com.android.org.bouncycastle.asn1.ASN1ObjectIdentifier)>
SOURCE|<android.media.RemoteControlClient: int getRcseId()>
SOURCE|<android.widget.AdapterView: android.view.View getEmptyView()>
SOURCE|<android.inputmethodservice.Keyboard: int getMinWidth()>
SOURCE|<com.android.browser.PreloadController: com.android.browser.WebViewFactory getWebViewFactory()>
SOURCE|<java.text.DecimalFormat: java.lang.String getNegativePrefix()>
SOURCE|<android.widget.TabHost$IntentContentStrategy: android.view.View getContentView()>
SOURCE|<com.android.email.mail.Store: android.os.Bundle autoDiscover(android.content.Context,java.lang.String,java.lang.String)>
SOURCE|<android.widget.GridLayout: android.widget.GridLayout$Alignment getAlignment(android.widget.GridLayout$Alignment,boolean)>
SOURCE|<com.android.contacts.list.ContactBrowseListFragment: android.net.Uri getSelectedContactUri()>
SOURCE|<com.android.inputmethod.latin.RichInputConnection: int getCursorCapsMode(int,java.util.Locale,boolean)>
SOURCE|<com.android.internal.app.AlertController$AlertParams$1: android.view.View getView(int,android.view.View,android.view.ViewGroup)>
SOURCE|<android.widget.TabHost: int getCurrentTab()>
SOURCE|<com.android.server.AppWidgetService: android.os.Bundle getAppWidgetOptions(int)>
SOURCE|<gov.nist.javax.sip.SipStackImpl: gov.nist.javax.sip.LogRecordFactory getLogRecordFactory()>
SOURCE|<android.app.ContextImpl: android.content.Context getApplicationContext()>
SOURCE|<gov.nist.javax.sip.header.SIPHeaderList: java.lang.String getName()>
SOURCE|<android.speech.tts.TextToSpeechService$1: java.lang.String[] getFeaturesForLanguage(java.lang.String,java.lang.String,java.lang.String)>
SOURCE|<android.net.sip.SimpleSessionDescription: java.lang.String[] getBandwidthTypes()>
SOURCE|<com.android.deskclock.worldclock.WorldClockAdapter: int getCount()>
SOURCE|<com.android.contacts.model.Contact: long getFirstWritableRawContactId(android.content.Context)>
SOURCE|<android.webkit.WebViewCore$EventHub: android.os.Looper getWebKitLooper()>
SOURCE|<android.content.res.AssetFileDescriptor: java.io.FileDescriptor getFileDescriptor()>
SOURCE|<com.android.internal.os.BatteryStatsImpl: long getWifiOnTime(long,int)>
SOURCE|<android.database.MatrixCursor: int getType(int)>
SOURCE|<com.android.server.am.ActivityManagerService: android.content.pm.UserInfo getCurrentUser()>
SOURCE|<com.adobe.xmp.impl.XMPNode: com.adobe.xmp.impl.XMPNode findChildByName(java.lang.String)>
SOURCE|<java.util.TreeMap: java.util.TreeMap$Node find(java.lang.Object,java.util.TreeMap$Relation)>
SOURCE|<android.preference.DialogPreference: android.view.View onCreateDialogView()>
SOURCE|<android.hardware.usb.UsbManager: android.os.ParcelFileDescriptor openAccessory(android.hardware.usb.UsbAccessory)>
SOURCE|<android.app.admin.IDevicePolicyManager$Stub$Proxy: int getPasswordMinimumNumeric(android.content.ComponentName,int)>
SOURCE|<com.android.emailcommon.service.IEmailServiceCallback$Stub: android.os.IBinder asBinder()>
SOURCE|<libcore.net.http.RequestHeaders: java.lang.String getContentType()>
SOURCE|<com.android.systemui.recent.RecentTasksLoader: java.util.ArrayList getLoadedTasks()>
SOURCE|<com.android.internal.telephony.cdma.CdmaServiceStateTracker: java.lang.String getImsi()>
SOURCE|<android.os.Message: android.os.Bundle getData()>
SOURCE|<java.io.ObjectStreamField: java.lang.String getName()>
SOURCE|<android.content.BroadcastReceiver: android.content.BroadcastReceiver$PendingResult goAsync()>
SOURCE|<com.android.launcher2.DeleteDropTarget$5: float getInterpolation(float)>
SOURCE|<libcore.io.ForwardingOs: libcore.io.StructLinger getsockoptLinger(java.io.FileDescriptor,int,int)>
SOURCE|<java.text.DecimalFormatSymbols: java.lang.String getInternationalCurrencySymbol()>
SOURCE|<com.android.internal.view.IInputMethod$Stub: android.os.IBinder asBinder()>
SOURCE|<com.adobe.xmp.options.ParseOptions: int getValidOptions()>
SOURCE|<com.android.server.DevicePolicyManagerService: java.util.List getActiveAdmins(int)>
SOURCE|<android.net.Proxy: int getPort(android.content.Context)>
SOURCE|<org.apache.http.impl.client.AbstractHttpClient: org.apache.http.client.HttpRequestRetryHandler createHttpRequestRetryHandler()>
SOURCE|<com.android.internal.os.ProcessStats: int getLastSystemTime()>
SOURCE|<java.sql.SQLClientInfoException: java.util.Map getFailedProperties()>
SOURCE|<android.telephony.TelephonyManager: android.telephony.TelephonyManager getDefault()>
SOURCE|<org.apache.harmony.xnet.provider.jsse.ProtocolVersion: org.apache.harmony.xnet.provider.jsse.ProtocolVersion getByVersion(byte[])>
SOURCE|<com.android.internal.telephony.IPhoneSubInfo$Stub$Proxy: java.lang.String getIccSerialNumber()>
SOURCE|<android.view.inputmethod.BaseInputConnection: java.lang.CharSequence getTextBeforeCursor(int,int)>
SOURCE|<org.apache.harmony.security.x509.GeneralSubtree$1: java.lang.Object getDecodedObject(org.apache.harmony.security.asn1.BerInputStream)>
SOURCE|<android.net.TrafficStats: long getTxBytes(java.lang.String)>
SOURCE|<java.net.HttpRetryException: java.lang.String getLocation()>
SOURCE|<javax.crypto.ExemptionMechanism: java.lang.String getName()>
SOURCE|<android.media.videoeditor.MediaImageItem: java.lang.String getDecodedImageFileName()>
SOURCE|<java.security.cert.X509CertSelector: java.util.Set getPolicy()>
SOURCE|<android.media.IAudioService$Stub$Proxy: int getMode()>
SOURCE|<android.widget.GridLayout: int getRowCount()>
SOURCE|<com.android.email.activity.InsertQuickResponseDialog: android.app.Dialog onCreateDialog(android.os.Bundle)>
SOURCE|<android.content.ContentResolver: android.content.SyncAdapterType[] getSyncAdapterTypes()>
SOURCE|<com.android.providers.contacts.AbstractContactsProvider: android.net.Uri insert(android.net.Uri,android.content.ContentValues)>
SOURCE|<com.android.internal.os.BatteryStatsImpl: int getHighDischargeAmountSinceCharge()>
SOURCE|<android.util.LongSparseArray: java.lang.Object get(long,java.lang.Object)>
SOURCE|<com.android.gallery3d.picasasource.PicasaAlbum: java.lang.String getName()>
SOURCE|<android.nfc.NdefMessage: int getByteArrayLength()>
SOURCE|<java.beans.IndexedPropertyChangeEvent: int getIndex()>
SOURCE|<android.mtp.MtpDevice: int[] getStorageIds()>
SOURCE|<libcore.net.http.RawHeaders: java.lang.String get(java.lang.String)>
SOURCE|<com.android.browser.Controller: int getDesiredThumbnailHeight(android.content.Context)>
SOURCE|<com.google.android.apps.lightcycle.sensor.DeviceOrientationDetector: com.google.android.apps.lightcycle.sensor.DeviceOrientationDetector$DeviceOrientation getOrientation()>
SOURCE|<android.net.wifi.p2p.WifiP2pDeviceList: android.net.wifi.p2p.WifiP2pDevice get(java.lang.String)>
SOURCE|<gov.nist.javax.sip.header.RAck: long getCSeqNumberLong()>
SOURCE|<java.text.Collator: java.text.Collator getInstance(java.util.Locale)>
SOURCE|<java.io.ObjectStreamClass: java.lang.reflect.Method getMethodReadObjectNoData()>
SOURCE|<org.apache.http.message.BasicHeaderElement: int getParameterCount()>
SOURCE|<java.security.cert.X509CertSelector: boolean[] getKeyUsage()>
SOURCE|<java.time.LocalDate: long getProlepticMonth()>
SOURCE|<android.telephony.CellIdentityGsm: int getPsc()>
SOURCE|<android.test.mock.MockResources: java.lang.String[] getStringArray(int)>
SOURCE|<android.provider.Settings$Secure: java.lang.String getString(android.content.ContentResolver,java.lang.String)>
SOURCE|<com.android.internal.telephony.sip.SipPhone: com.android.internal.telephony.IccFileHandler getIccFileHandler()>
SOURCE|<gov.nist.javax.sip.SipStackImpl: java.lang.String getStackName()>
SOURCE|<com.android.email.activity.MessagesAdapter$SearchCursorLoader: android.database.Cursor loadInBackground()>
SOURCE|<com.android.browser.DateSortedExpandableListAdapter: int getChildrenCount(int)>
SOURCE|<com.android.internal.view.menu.ActionMenuItem: android.view.ActionProvider getActionProvider()>
SOURCE|<gov.nist.javax.sip.header.Via: java.lang.String getSentByField()>
SOURCE|<gov.nist.javax.sip.address.UserInfo: java.lang.String getUser()>
SOURCE|<android.widget.ScrollView: float getBottomFadingEdgeStrength()>
SOURCE|<com.google.common.collect.AbstractListMultimap: java.util.Collection get(java.lang.Object)>
SOURCE|<com.android.mms.model.SlideshowModel: com.android.mms.model.LayoutModel getLayout()>
SOURCE|<android.view.MotionEvent: float getPressure()>
SOURCE|<java.util.concurrent.locks.ReentrantLock: java.lang.Thread getOwner()>
SOURCE|<com.android.email.mail.Sender: com.android.email.mail.Sender getInstance(android.content.Context,com.android.emailcommon.provider.Account)>
SOURCE|<org.apache.harmony.xnet.provider.jsse.AlertProtocol: byte[] wrap()>
SOURCE|<com.android.internal.util.StateMachine$LogRec: long getTime()>
SOURCE|<java.text.DecimalFormatSymbols: char getMinusSign()>
SOURCE|<javax.net.ssl.SNIHostName: java.lang.String getAsciiName()>
SOURCE|<com.android.launcher2.CellLayout: android.view.View getChildAt(int,int)>
SOURCE|<com.android.mms.dom.NodeImpl: java.lang.String getBaseURI()>
SOURCE|<org.kxml2.io.KXmlParser: int getLineNumber()>
SOURCE|<org.apache.james.mime4j.field.address.parser.AddressListParserTokenManager: org.apache.james.mime4j.field.address.parser.Token getNextToken()>
SOURCE|<com.android.contacts.detail.StreamItemAdapter: int getItemViewType(int)>
SOURCE|<android.widget.GridLayout$Spec: int getFlexibility()>
SOURCE|<gov.nist.javax.sip.stack.SIPServerTransaction: javax.sip.Dialog getDialog()>
SOURCE|<com.android.server.LocationManagerService: java.lang.String getFromLocation(double,double,int,android.location.GeocoderParams,java.util.List)>
SOURCE|<com.android.gallery3d.data.UriImage: com.android.gallery3d.data.MediaDetails getDetails()>
SOURCE|<com.android.email.mail.store.ImapFolder: com.android.emailcommon.mail.Message[] getMessages(int,int,com.android.emailcommon.mail.Folder$MessageRetrievalListener)>
SOURCE|<com.android.internal.telephony.CallManager: com.android.internal.telephony.Connection getFgCallLatestConnection()>
SOURCE|<org.apache.harmony.xnet.provider.jsse.OpenSSLSocketImpl: java.io.FileDescriptor getFileDescriptor$()>
SOURCE|<com.android.internal.telephony.cat.CatCmdMessage: com.android.internal.telephony.cat.CatCmdMessage$CallSettings getCallSettings()>
SOURCE|<org.apache.harmony.security.x509.Extension: byte[] getEncoded()>
SOURCE|<com.android.internal.telephony.PhoneBase: void getPreferredNetworkType(android.os.Message)>
SOURCE|<java.lang.Thread: java.lang.ClassLoader getContextClassLoader()>
SOURCE|<javax.xml.datatype.Duration: int getSeconds()>
SOURCE|<android.view.accessibility.AccessibilityNodeProvider: java.util.List findAccessibilityNodeInfosByText(java.lang.String,int)>
SOURCE|<com.android.inputmethod.latin.Utils: java.lang.String getDebugInfo(com.android.inputmethod.latin.SuggestedWords,int)>
SOURCE|<com.android.mms.util.DownloadManager: boolean getAutoDownloadState(android.content.SharedPreferences)>
SOURCE|<com.android.gallery3d.data.UriImage: int getWidth()>
SOURCE|<com.android.browser.BrowserSettings: android.webkit.WebSettings$ZoomDensity getDefaultZoom()>
SOURCE|<com.android.org.bouncycastle.asn1.x509.X509Name: java.util.Vector getValues()>
SOURCE|<com.android.internal.view.IInputContext$Stub$Proxy: void getTextBeforeCursor(int,int,int,com.android.internal.view.IInputContextCallback)>
SOURCE|<org.apache.harmony.luni.lang.reflect.ImplForWildcard: java.lang.reflect.Type[] getUpperBounds()>
SOURCE|<com.google.common.collect.SortedMultisets$ElementSet: java.util.SortedSet tailSet(java.lang.Object)>
SOURCE|<android.text.style.URLSpan: java.lang.String getURL()>
SOURCE|<com.android.internal.telephony.GsmAlphabet: byte[] stringToGsm7BitPacked(java.lang.String)>
SOURCE|<android.net.http.Headers: java.lang.String getContentDisposition()>
SOURCE|<java.time.chrono.HijrahDate: int getEraValue()>
SOURCE|<com.google.android.picasastore.PicasaStoreFacade: com.google.android.picasastore.PicasaStoreFacade get(android.content.Context)>
SOURCE|<com.android.server.net.NetworkStatsCollection: android.net.NetworkStatsHistory getHistory(android.net.NetworkTemplate,int,int,int,int,long,long)>
SOURCE|<android.widget.AdapterViewAnimator: android.animation.ObjectAnimator getOutAnimation()>
SOURCE|<java.net.PlainSocketImpl: java.io.InputStream getInputStream()>
SOURCE|<com.android.mms.model.SlideshowModel: com.android.mms.model.SlideModel get(int)>
SOURCE|<com.android.contacts.model.dataitem.PhoneDataItem: java.lang.String getNormalizedNumber()>
SOURCE|<com.android.deskclock.widget.swipeablelistview.SwipeableListView: android.view.View getChildAtPosition(android.view.MotionEvent)>
SOURCE|<org.apache.harmony.security.x509.Time$1: java.lang.Object getObjectToEncode(java.lang.Object)>
SOURCE|<android.preference.PreferenceGroupAdapter: int getViewTypeCount()>
SOURCE|<java.util.zip.ZipEntry: int getMethod()>
SOURCE|<android.app.admin.DevicePolicyManager: int getStorageEncryptionStatus()>
SOURCE|<com.android.videoeditor.VideoEditorActivity: android.app.Dialog onCreateDialog(int,android.os.Bundle)>
SOURCE|<com.android.emailcommon.utility.Utility$3: java.lang.Long get(android.database.Cursor,int)>
SOURCE|<android.net.wifi.p2p.WifiP2pGroupList: java.lang.String getOwnerAddr(int)>
SOURCE|<android.widget.ExpandableListPosition: long getPackedPosition()>
SOURCE|<android.widget.ImageView: boolean getCropToPadding()>
SOURCE|<gov.nist.javax.sip.stack.SIPTransactionStack: int getMaxMessageSize()>
SOURCE|<gov.nist.javax.sip.parser.Parser: java.lang.String sipVersion()>
SOURCE|<org.apache.harmony.security.pkcs7.SignerInfo: java.util.List getAuthenticatedAttributes()>
SOURCE|<com.android.mms.model.LayoutModel: int getLayoutType()>
SOURCE|<java.time.zone.ZoneRules: java.time.Duration getDaylightSavings(java.time.Instant)>
SOURCE|<android.service.textservice.SpellCheckerService$InternalISpellCheckerSession: android.os.Bundle getBundle()>
SOURCE|<android.net.sip.SimpleSessionDescription$Media: java.lang.String getEncryptionMethod()>
SOURCE|<com.android.internal.database.SortCursor: int getType(int)>
SOURCE|<android.graphics.Bitmap: android.graphics.Bitmap createBitmap(int[],int,int,android.graphics.Bitmap$Config)>
SOURCE|<java.nio.CharSequenceAdapter: char get(int)>
SOURCE|<org.apache.harmony.xml.dom.AttrImpl: java.lang.String getLocalName()>
SOURCE|<android.hardware.usb.UsbEndpoint: int getDirection()>
SOURCE|<android.app.Instrumentation: android.content.ComponentName getComponentName()>
SOURCE|<javax.crypto.spec.DHGenParameterSpec: int getPrimeSize()>
SOURCE|<org.apache.harmony.xnet.provider.jsse.SSLSessionImpl: int getPeerPort()>
SOURCE|<android.app.admin.DevicePolicyManager: long getPasswordExpiration(android.content.ComponentName)>
SOURCE|<java.lang.reflect.Executable: java.lang.'annotation'.Annotation[][] parseParameterAnnotations(byte[])>
SOURCE|<android.net.wifi.WifiConfigStore: android.net.wifi.NetworkUpdateResult saveNetwork(android.net.wifi.WifiConfiguration)>
SOURCE|<com.android.internal.telephony.PhoneProxy: android.telephony.CellLocation getCellLocation()>
SOURCE|<java.util.zip.Deflater: int getAdler()>
SOURCE|<com.android.internal.widget.multiwaveview.MultiWaveView: int getSuggestedMinimumWidth()>
SOURCE|<android.view.KeyCharacterMap: android.view.KeyCharacterMap load(int)>
SOURCE|<org.ccil.cowan.tagsoup.AttributesImpl: int getIndex(java.lang.String,java.lang.String)>
SOURCE|<android.widget.SimpleCursorAdapter: android.widget.SimpleCursorAdapter$CursorToStringConverter getCursorToStringConverter()>
SOURCE|<java.lang.Package: java.lang.Package[] getPackages()>
SOURCE|<android.bluetooth.BluetoothDevice: int getServiceChannel(android.os.ParcelUuid)>
SOURCE|<android.bluetooth.IBluetoothHealthCallback$Stub: android.os.IBinder asBinder()>
SOURCE|<com.adobe.xmp.impl.XMPDateTimeImpl: int getDay()>
SOURCE|<java.lang.Class: java.lang.reflect.Constructor[] getDeclaredConstructors()>
SOURCE|<com.android.internal.telephony.ims.IsimUiccRecords: java.lang.String getIsimDomain()>
SOURCE|<android.view.ViewGroup: android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams)>
SOURCE|<com.android.musicfx.seekbar.ProgressBar: int getMax()>
SOURCE|<android.media.MediaPlayer: android.media.Metadata getMetadata(boolean,boolean)>
SOURCE|<android.content.res.Resources: android.content.res.CompatibilityInfo getCompatibilityInfo()>
SOURCE|<android.filterfw.core.Filter: int getNumberOfConnectedInputs()>
SOURCE|<org.apache.james.mime4j.field.contenttype.parser.SimpleCharStream: int getEndLine()>
SOURCE|<android.app.ActivityManagerProxy: java.lang.String getCallingPackage(android.os.IBinder)>
SOURCE|<com.android.systemui.recent.RecentTasksLoader: android.graphics.Bitmap getDefaultIcon()>
SOURCE|<org.apache.harmony.xml.ExpatReader: org.xml.sax.DTDHandler getDTDHandler()>
SOURCE|<com.android.server.am.ActivityManagerService: android.content.IIntentSender getIntentSenderLocked(int,java.lang.String,int,int,android.os.IBinder,java.lang.String,int,android.content.Intent[],java.lang.String[],int,android.os.Bundle)>
SOURCE|<java.lang.Long: java.lang.Long getLong(java.lang.String,java.lang.Long)>
SOURCE|<com.android.gallery3d.app.PhotoDataAdapter: com.android.gallery3d.ui.ScreenNail getScreenNail(int)>
SOURCE|<com.google.common.collect.ImmutableList: com.google.common.collect.UnmodifiableIterator iterator()>
SOURCE|<com.android.contacts.model.Contact: long getNameRawContactId()>
SOURCE|<com.google.common.collect.AbstractSortedMultiset: java.util.Set createElementSet()>
SOURCE|<javax.security.auth.x500.X500Principal: java.lang.String getName(java.lang.String)>
SOURCE|<com.android.gallery3d.app.PhotoDataAdapter: int getImageRotation(int)>
SOURCE|<gov.nist.javax.sip.message.ContentImpl: javax.sip.header.ContentDispositionHeader getContentDispositionHeader()>
SOURCE|<java.security.Identity: java.security.IdentityScope getScope()>
SOURCE|<java.util.TreeMap$Node: java.lang.Object getKey()>
SOURCE|<com.android.internal.telephony.CallManager: java.util.List getBackgroundCalls()>
SOURCE|<android.widget.TextView: int getLineCount()>
SOURCE|<android.net.sip.SimpleSessionDescription$Fields: java.lang.String getAttribute(java.lang.String)>
SOURCE|<java.security.spec.ECPrivateKeySpec: java.security.spec.ECParameterSpec getParams()>
SOURCE|<android.widget.TextView$Marquee: float getScroll()>
SOURCE|<com.android.i18n.phonenumbers.PhoneNumberUtil: com.android.i18n.phonenumbers.PhoneNumberUtil getInstance()>
SOURCE|<gov.nist.javax.sip.header.SIPHeaderList: java.util.List getHeaderList()>
SOURCE|<com.android.launcher2.Launcher: com.android.launcher2.Workspace getWorkspace()>
SOURCE|<java.util.concurrent.atomic.AtomicReferenceArray: java.lang.Object get(int)>
SOURCE|<com.android.server.ConnectivityService: java.lang.String[] getTetherableIfaces()>
SOURCE|<com.coremedia.iso.boxes.fragment.MovieFragmentBox: long getOffset()>
SOURCE|<com.android.contacts.model.Contact: int getDirectoryExportSupport()>
SOURCE|<android.webkit.WebSettingsClassic: java.lang.String getAcceptLanguage()>
SOURCE|<java.util.concurrent.AbstractExecutorService: java.util.List invokeAll(java.util.Collection,long,java.util.concurrent.TimeUnit)>
SOURCE|<android.net.rtp.RtpStream: int getMode()>
SOURCE|<com.android.browser.TabControl: long getNextId()>
SOURCE|<java.net.URLConnection: java.lang.String getHeaderField(int)>
SOURCE|<com.android.inputmethod.latin.Utils: java.lang.String getStackTrace()>
SOURCE|<com.android.emailcommon.utility.SSLUtils: android.net.SSLCertificateSocketFactory getSSLSocketFactory(boolean,int)>
SOURCE|<com.android.gallery3d.data.MediaDetails: java.lang.Object getDetail(int)>
SOURCE|<android.view.ViewRootImpl: android.view.View getView()>
SOURCE|<org.apache.harmony.xnet.provider.jsse.CertificateVerify: int getType()>
SOURCE|<android.hardware.display.WifiDisplay: java.lang.String getDeviceAlias()>
SOURCE|<com.android.server.accessibility.AccessibilityManagerService$SecurityPolicy: int getRetrievalAllowingWindowLocked()>
SOURCE|<android.net.NetworkPolicyManager: long computeNextCycleBoundary(long,android.net.NetworkPolicy)>
SOURCE|<com.android.contacts.widget.IndexerListAdapter: java.lang.Object[] getSections()>
SOURCE|<com.android.gallery3d.data.MtpDeviceSet: int getSubMediaSetCount()>
SOURCE|<java.security.KeyStoreSpi: java.security.KeyStore$Entry engineGetEntry(java.lang.String,java.security.KeyStore$ProtectionParameter)>
SOURCE|<android.view.textservice.SpellCheckerInfo: java.lang.String getSettingsActivity()>
SOURCE|<org.apache.http.auth.NTCredentials: java.security.Principal getUserPrincipal()>
SOURCE|<android.webkit.WebHistoryItemClassic: java.lang.String getUrl()>
SOURCE|<libcore.icu.NativeBreakIterator: libcore.icu.NativeBreakIterator getSentenceInstance(java.util.Locale)>
SOURCE|<com.android.email.activity.setup.AccountSettings$LoginWarningDialog: android.app.Dialog onCreateDialog(android.os.Bundle)>
SOURCE|<android.os.Bundle: double getDouble(java.lang.String,double)>
SOURCE|<android.view.IApplicationToken$Stub$Proxy: long getKeyDispatchingTimeout()>
SOURCE|<org.apache.harmony.security.x509.TBSCertList$RevokedCertificate: org.apache.harmony.security.x509.Extensions getCrlEntryExtensions()>
SOURCE|<com.android.contacts.detail.ContactDetailFragment: android.net.Uri getUri()>
SOURCE|<android.preference.PreferenceManager: android.content.SharedPreferences getDefaultSharedPreferences(android.content.Context)>
SOURCE|<android.view.Window: android.view.Window$Callback getCallback()>
SOURCE|<android.inputmethodservice.InputMethodService: android.view.inputmethod.InputConnection getCurrentInputConnection()>
SOURCE|<java.security.AccessControlContext: java.security.DomainCombiner getDomainCombiner()>
SOURCE|<android.net.sip.ISipSession$Stub: android.os.IBinder asBinder()>
SOURCE|<android.webkit.WebViewClassic: int getScaledNavSlop()>
SOURCE|<android.content.pm.IPackageManager$Stub$Proxy: int getUidForSharedUser(java.lang.String)>
SOURCE|<com.android.calendar.Utils: java.lang.String[] getQuickResponses(android.content.Context)>
SOURCE|<com.android.systemui.statusbar.phone.PhoneStatusBar$FastColorDrawable: int getOpacity()>
SOURCE|<com.android.providers.media.MediaProvider: int getDatabaseVersion(android.content.Context)>
SOURCE|<android.app.SearchableInfo: boolean getVoiceSearchLaunchWebSearch()>
SOURCE|<android.widget.ViewSwitcher: android.view.View getNextView()>
SOURCE|<android.database.Cursor: int getInt(int)>
SOURCE|<java.time.zone.ZoneOffsetTransition: int getDurationSeconds()>
SOURCE|<javax.net.ssl.SSLContext: java.security.Provider getProvider()>
SOURCE|<com.android.contacts.group.GroupListItem: java.lang.String getTitle()>
SOURCE|<android.widget.FastScroller: int getState()>
SOURCE|<com.android.org.bouncycastle.asn1.x500.X500Name: com.android.org.bouncycastle.asn1.x500.X500NameStyle getDefaultStyle()>
SOURCE|<com.android.internal.telephony.sip.SipPhoneBase: com.android.internal.telephony.PhoneSubInfo getPhoneSubInfo()>
SOURCE|<com.android.internal.app.ActionBarImpl: int getNavigationMode()>
SOURCE|<android.util.XmlPullAttributes: float getAttributeFloatValue(java.lang.String,java.lang.String,float)>
SOURCE|<com.android.gallery3d.data.SnailItem: java.lang.String getMimeType()>
SOURCE|<android.widget.ListPopupWindow: int getWidth()>
SOURCE|<com.android.inputmethod.latin.LatinIME: int getCurrentAutoCapsState()>
SOURCE|<android.opengl.GLSurfaceView: int getDebugFlags()>
SOURCE|<java.util.concurrent.ThreadPoolExecutor: java.util.concurrent.RejectedExecutionHandler getRejectedExecutionHandler()>
SOURCE|<com.android.internal.os.ProcessStats: int getLastSoftIrqTime()>
SOURCE|<android.media.MediaRouter$Static: android.view.Display[] getAllPresentationDisplays()>
SOURCE|<com.android.internal.os.PowerProfile: double getAveragePower(java.lang.String)>
SOURCE|<org.xmlpull.v1.sax2.Driver: java.lang.String getLocalName(int)>
SOURCE|<org.apache.harmony.xml.dom.DOMErrorImpl$1: java.lang.String getUri()>
SOURCE|<android.net.wifi.WifiInfo: int getIpAddress()>
SOURCE|<org.apache.http.impl.HttpConnectionMetricsImpl: long getResponseCount()>
SOURCE|<org.apache.http.impl.conn.tsccm.BasicPoolEntry: org.apache.http.conn.OperatedClientConnection getConnection()>
SOURCE|<gov.nist.javax.sip.header.Event: java.lang.String getEventId()>
SOURCE|<android.widget.Toast: int getDuration()>
SOURCE|<android.content.ContextWrapper: java.io.File getDatabasePath(java.lang.String)>
SOURCE|<com.android.internal.database.SortCursor: float getFloat(int)>
SOURCE|<com.android.exchange.EasSyncService: java.lang.String getTargetCollectionClassFromCursor(android.database.Cursor)>
SOURCE|<com.android.contacts.model.account.BaseAccountType$CommonInflater: java.lang.String toString()>
SOURCE|<android.widget.ScrollBarDrawable: int getSize(boolean)>
SOURCE|<android.widget.TextView$Marquee: float getGhostOffset()>
SOURCE|<gov.nist.javax.sip.stack.TLSMessageProcessor: gov.nist.javax.sip.stack.SIPTransactionStack getSIPStack()>
SOURCE|<libcore.net.http.HttpsURLConnectionImpl: java.security.Principal getLocalPrincipal()>
SOURCE|<com.android.providers.contacts.SearchIndexManager$FtsQueryBuilder: com.android.providers.contacts.SearchIndexManager$FtsQueryBuilder getDigitsQueryBuilder(java.lang.String)>
SOURCE|<javax.security.cert.X509Certificate$1: java.math.BigInteger getSerialNumber()>
SOURCE|<android.bluetooth.BluetoothTetheringDataTracker: android.net.LinkProperties getLinkProperties()>
SOURCE|<com.coremedia.iso.boxes.MediaBox: com.coremedia.iso.boxes.MediaHeaderBox getMediaHeaderBox()>
SOURCE|<com.android.contacts.group.GroupEditorFragment$MemberListAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)>
SOURCE|<java.text.AttributedString: java.text.AttributedCharacterIterator getIterator(java.text.AttributedCharacterIterator$Attribute[])>
SOURCE|<com.adobe.xmp.impl.XMPMetaImpl: java.lang.String getPacketHeader()>
SOURCE|<java.util.GregorianCalendar: int getActualMaximum(int)>
SOURCE|<android.content.BroadcastReceiver$PendingResult: android.os.Bundle getResultExtras(boolean)>
SOURCE|<java.security.cert.PKIXParameters: java.security.cert.CertSelector getTargetCertConstraints()>
SOURCE|<com.android.email.activity.MessageListItemCoordinates: int getHeight(android.content.Context,int)>
SOURCE|<java.security.spec.RSAMultiPrimePrivateCrtKeySpec: java.math.BigInteger getPrimeExponentQ()>
SOURCE|<com.android.internal.telephony.gsm.GSMPhone: android.telephony.CellLocation getCellLocation()>
SOURCE|<javax.net.ssl.HandshakeCompletedEvent: javax.security.cert.X509Certificate[] getPeerCertificateChain()>
SOURCE|<android.webkit.WebSettingsClassic: boolean getPluginsEnabled()>
SOURCE|<com.google.android.apps.lightcycle.sensor.SensorReader: double getHeadingDegrees()>
SOURCE|<com.android.internal.telephony.PhoneBase: boolean getCallForwardingIndicator()>
SOURCE|<com.android.email.activity.UIControllerOnePane$ActionBarControllerCallback: long getUIAccountId()>
SOURCE|<com.android.gallery3d.data.BytesBufferPool: com.android.gallery3d.data.BytesBufferPool$BytesBuffer get()>
SOURCE|<android.inputmethodservice.KeyboardView$SwipeTracker: float getYVelocity()>
SOURCE|<com.android.internal.telephony.SMSDispatcher: int getNextConcatenatedRef()>
SOURCE|<android.media.videoeditor.MediaArtistNativeHelper: boolean getGeneratePreview()>
SOURCE|<android.text.Layout: java.lang.Object[] getParagraphSpans(android.text.Spanned,int,int,java.lang.Class)>
SOURCE|<com.android.exchange.utility.CalendarUtilities: long getMillisAtTimeZoneDateTransition(java.util.TimeZone,com.android.exchange.utility.CalendarUtilities$TimeZoneDate)>
SOURCE|<android.telephony.SignalStrength: int getEvdoDbm()>
SOURCE|<android.content.ClipData$Item: android.net.Uri getUri()>
SOURCE|<com.android.contacts.voicemail.VoicemailStatusHelperImpl$OverallState: int getCallDetailsMessageId()>
SOURCE|<com.android.server.InputMethodManagerService$InputMethodSettings: java.util.List getEnabledInputMethodSubtypeListLocked(android.view.inputmethod.InputMethodInfo)>
SOURCE|<com.android.providers.calendar.CalendarCache: java.lang.String readDataLocked(android.database.sqlite.SQLiteDatabase,java.lang.String)>
SOURCE|<com.android.ex.variablespeed.SingleThreadedMediaPlayerProxy: int getDuration()>
SOURCE|<gov.nist.javax.sip.header.RequestLine: java.lang.String getVersionMinor()>
SOURCE|<com.android.internal.view.menu.MenuBuilder: android.view.SubMenu addSubMenu(int,int,int,java.lang.CharSequence)>
SOURCE|<android.os.Bundle: int getInt(java.lang.String,int)>
SOURCE|<android.text.style.LeadingMarginSpan$Standard: int getSpanTypeId()>
SOURCE|<android.content.Intent: long getLongExtra(java.lang.String,long)>
SOURCE|<com.android.internal.os.BatteryStatsImpl: long getPhoneSignalStrengthTime(int,long,int)>
SOURCE|<android.content.pm.PathPermission: java.lang.String getWritePermission()>
SOURCE|<android.service.wallpaper.WallpaperService: java.util.ArrayList access$300(android.service.wallpaper.WallpaperService)>
SOURCE|<gov.nist.javax.sip.header.To: java.lang.String getTag()>
SOURCE|<android.os.storage.StorageManager: java.lang.String getMountedObbPath(java.lang.String)>
SOURCE|<com.android.browser.PieControl: com.android.browser.view.PieItem makeItem(int,int)>
SOURCE|<android.provider.Settings$System: float getFloatForUser(android.content.ContentResolver,java.lang.String,float,int)>
SOURCE|<com.android.internal.view.menu.MenuPopupHelper: int getId()>
SOURCE|<android.hardware.Camera$Parameters: boolean getVideoStabilization()>
SOURCE|<com.android.nfc.handover.HandoverManager: android.nfc.NdefRecord createCollisionRecord()>
SOURCE|<android.content.SyncManager: java.lang.String formatTime(long)>
SOURCE|<android.widget.HeaderViewListAdapter: int getCount()>
SOURCE|<com.android.email.activity.UIControllerTwoPane: int getLayoutId()>
SOURCE|<android.app.LoadedApk: android.content.res.AssetManager getAssets(android.app.ActivityThread)>
SOURCE|<com.android.browser.homepages.HomeProvider: android.os.ParcelFileDescriptor openFile(android.net.Uri,java.lang.String)>
SOURCE|<gov.nist.javax.sip.header.Require: java.lang.String getOptionTag()>
SOURCE|<java.time.chrono.MinguoDate: java.time.chrono.MinguoChronology getChronology()>
SOURCE|<com.android.launcher2.AppsCustomizePagedView: android.view.View getContent()>
SOURCE|<com.android.videoeditor.service.MovieTheme: com.android.videoeditor.service.MovieTransition getBeginTransition()>
SOURCE|<com.google.common.collect.ForwardingConcurrentMap: java.lang.Object delegate()>
SOURCE|<com.android.contacts.list.ContactEntryListAdapter: com.android.contacts.list.DirectoryPartition createDefaultDirectoryPartition()>
SOURCE|<java.security.KeyPairGenerator: java.security.KeyPair genKeyPair()>
SOURCE|<android.view.KeyCharacterMap: boolean getKeyData(int,android.view.KeyCharacterMap$KeyData)>
SOURCE|<android.location.LocationManager: java.lang.String getBestProvider(android.location.Criteria,boolean)>
SOURCE|<com.android.contacts.model.dataitem.StructuredNameDataItem: java.lang.String getPhoneticMiddleName()>
SOURCE|<com.android.server.PackageManagerBackupAgent: com.android.server.PackageManagerBackupAgent$Metadata getRestoredMetadata(java.lang.String)>
SOURCE|<com.android.gallery3d.ui.FlingScroller: int getDuration()>
SOURCE|<com.android.internal.telephony.IPhoneSubInfo$Stub$Proxy: java.lang.String getCompleteVoiceMailNumber()>
SOURCE|<com.android.contacts.calllog.ExtendedCursor: java.lang.String[] getColumnNames()>
SOURCE|<android.app.ApplicationPackageManager: android.content.pm.PermissionGroupInfo getPermissionGroupInfo(java.lang.String,int)>
SOURCE|<com.android.providers.downloads.DownloadDrmHelper: java.lang.String getOriginalMimeType(android.content.Context,java.lang.String,java.lang.String)>
SOURCE|<com.android.gallery3d.filtershow.imageshow.GeometryMetadata: android.graphics.Matrix getFlipMatrix(float,float)>
SOURCE|<com.android.gallery3d.app.PhotoPage$MyDetailsSource: com.android.gallery3d.data.MediaDetails getDetails()>
SOURCE|<android.app.ApplicationPackageManager: java.util.List queryContentProviders(java.lang.String,int,int)>
SOURCE|<com.android.server.am.ActivityRecord: long getKeyDispatchingTimeout()>
SOURCE|<com.android.contacts.util.StopWatch: com.android.contacts.util.StopWatch getNullStopWatch()>
SOURCE|<android.filterfw.core.FilterFunction: android.filterfw.core.Filter getFilter()>
SOURCE|<java.nio.HeapByteBuffer: int getInt(int)>
SOURCE|<gov.nist.javax.sip.address.TelURLImpl: java.lang.String getPostDial()>
SOURCE|<android.widget.ResourceCursorAdapter: android.view.View newDropDownView(android.content.Context,android.database.Cursor,android.view.ViewGroup)>
SOURCE|<android.net.sip.ISipService$Stub$Proxy: android.net.sip.ISipSession createSession(android.net.sip.SipProfile,android.net.sip.ISipSessionListener)>
SOURCE|<com.android.browser.BrowserSettings: java.lang.String getLinkPrefetchEnabled()>
SOURCE|<android.media.videoeditor.AudioTrack: java.lang.String getAudioWaveformFilename()>
SOURCE|<android.text.method.TimeKeyListener: char[] getAcceptedChars()>
SOURCE|<android.app.ListActivity: android.widget.ListView getListView()>
SOURCE|<android.webkit.WebSettings: boolean getDatabaseEnabled()>
SOURCE|<java.util.DuplicateFormatFlagsException: java.lang.String getFlags()>
SOURCE|<com.android.mms.MmsConfig: int getHttpSocketTimeout()>
SOURCE|<android.opengl.GLUtils: java.lang.String getEGLErrorString(int)>
SOURCE|<com.android.mms.data.Conversation: java.lang.String getSnippet()>
SOURCE|<com.android.server.TextServicesManagerService$TextServicesSettings: java.lang.String getSelectedSpellCheckerSubtype()>
SOURCE|<com.android.email.activity.AccountSelectorAdapter$CursorWithExtras: java.lang.String getMailboxDisplayName()>
SOURCE|<android.server.search.SearchManagerService: android.app.SearchableInfo getSearchableInfo(android.content.ComponentName)>
SOURCE|<com.android.inputmethod.accessibility.AccessibilityUtils: com.android.inputmethod.accessibility.AccessibilityUtils getInstance()>
SOURCE|<org.apache.http.impl.cookie.BestMatchSpec: org.apache.http.impl.cookie.RFC2109Spec getObsoleteStrict()>
SOURCE|<javax.crypto.KeyGenerator: java.lang.String getAlgorithm()>
SOURCE|<com.android.gallery3d.data.LocalImage: int getSupportedOperations()>
SOURCE|<org.apache.http.impl.cookie.BasicClientCookie: int getVersion()>
SOURCE|<java.util.concurrent.ForkJoinTask: short getForkJoinTaskTag()>
SOURCE|<android.filterfw.core.NativeFrame: java.nio.ByteBuffer getData()>
SOURCE|<com.google.common.collect.ImmutableSortedSet: com.google.common.collect.ImmutableSortedSet headSet(java.lang.Object,boolean)>
SOURCE|<gov.nist.javax.sip.stack.SIPDialog: long getRemoteSeqNumber()>
SOURCE|<java.lang.Short: short parseShort(java.lang.String,int)>
SOURCE|<java.time.Period: java.time.chrono.IsoChronology getChronology()>
SOURCE|<android.media.IAudioRoutesObserver$Stub: android.os.IBinder asBinder()>
SOURCE|<gov.nist.javax.sip.message.SIPRequest: gov.nist.javax.sip.message.SIPRequest createACKRequest()>
SOURCE|<android.webkit.CacheManager$CacheResult: long getContentLength()>
SOURCE|<org.apache.http.impl.io.AbstractSessionInputBuffer: int appendDecoded(org.apache.http.util.CharArrayBuffer,java.nio.ByteBuffer)>
SOURCE|<org.apache.http.impl.client.AbstractHttpClient: org.apache.http.client.RequestDirector createClientRequestDirector(org.apache.http.protocol.HttpRequestExecutor,org.apache.http.conn.ClientConnectionManager,org.apache.http.ConnectionReuseStrategy,org.apache.http.conn.ConnectionKeepAliveStrategy,org.apache.http.conn.routing.HttpRoutePlanner,org.apache.http.protocol.HttpProcessor,org.apache.http.client.HttpRequestRetryHandler,org.apache.http.client.RedirectStrategy,org.apache.http.client.AuthenticationHandler,org.apache.http.client.AuthenticationHandler,org.apache.http.client.UserTokenHandler,org.apache.http.params.HttpParams)>
SOURCE|<java.net.DatagramSocket: java.nio.channels.DatagramChannel getChannel()>
SOURCE|<org.apache.harmony.security.x509.ReasonCode: byte[] getEncoded()>
SOURCE|<com.android.mms.data.RecipientIdCache: java.lang.String getSingleAddressFromCanonicalAddressInDb(android.content.Context,java.lang.String)>
SOURCE|<android.net.wifi.IWifiManager$Stub$Proxy: android.os.Messenger getWifiStateMachineMessenger()>
SOURCE|<java.time.chrono.HijrahChronology: int getSmallestMaximumDayOfYear()>
SOURCE|<android.telephony.SignalStrength: int getLteRsrq()>
SOURCE|<java.text.BreakIterator: java.text.BreakIterator getLineInstance(java.util.Locale)>
SOURCE|<com.android.launcher2.LauncherModel: com.android.launcher2.FolderInfo getFolderById(android.content.Context,java.util.HashMap,long)>
SOURCE|<android.location.ILocationManager$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
SOURCE|<com.android.browser.BrowserHistoryPage$HistoryAdapter: android.database.Cursor getCursor(int)>
SOURCE|<com.google.common.collect.MapMakerInternalMap$WeakEntry: com.google.common.collect.MapMakerInternalMap$ReferenceEntry getPreviousExpirable()>
SOURCE|<org.apache.harmony.xml.dom.InnerNodeImpl: org.w3c.dom.Node insertChildAt(org.w3c.dom.Node,int)>
SOURCE|<com.android.server.pm.PackageManagerService$InstallParams: android.net.Uri getPackageUri()>
SOURCE|<com.android.calendar.DayView: android.text.format.Time getSelectedTime()>
SOURCE|<org.apache.harmony.security.asn1.ASN1Type: java.lang.Object decode(byte[],int,int)>
SOURCE|<com.android.videoeditor.service.VideoEditorProject: java.util.List getAudioTracks()>
SOURCE|<javax.crypto.SecretKeyFactory: java.security.spec.KeySpec getKeySpec(javax.crypto.SecretKey,java.lang.Class)>
SOURCE|<android.view.accessibility.AccessibilityEvent: long getEventTime()>
SOURCE|<java.time.temporal.ValueRange: long getMinimum()>
SOURCE|<com.android.i18n.phonenumbers.PhoneNumberUtil: com.android.i18n.phonenumbers.PhoneNumberUtil$MatchType isNumberMatch(com.android.i18n.phonenumbers.Phonenumber$PhoneNumber,java.lang.String)>
SOURCE|<org.apache.harmony.security.provider.cert.X509CertImpl: java.util.Set getCriticalExtensionOIDs()>
SOURCE|<java.lang.Class: java.net.URL getResource(java.lang.String)>
SOURCE|<android.support.v4.view.VelocityTrackerCompat$HoneycombVelocityTrackerVersionImpl: float getYVelocity(android.view.VelocityTracker,int)>
SOURCE|<com.android.internal.widget.multiwaveview.MultiWaveView: int getSuggestedMinimumHeight()>
SOURCE|<android.webkit.WebViewClassic$Factory: android.webkit.WebIconDatabase getWebIconDatabase()>
SOURCE|<com.android.contacts.calllog.CallDetailHistoryAdapter: int getViewTypeCount()>
SOURCE|<com.android.exchange.adapter.AccountSyncAdapter: java.lang.String getSyncKey()>
SOURCE|<android.net.DummyDataStateTracker: android.net.LinkProperties getLinkProperties()>
SOURCE|<android.service.wallpaper.WallpaperService$Engine: android.view.SurfaceHolder getSurfaceHolder()>
SOURCE|<gov.nist.javax.sip.stack.SIPClientTransaction: javax.sip.message.Request createAck()>
SOURCE|<javax.crypto.spec.IvParameterSpec: byte[] getIV()>
SOURCE|<com.android.internal.telephony.PhoneProxy: void getPreferredNetworkType(android.os.Message)>
SOURCE|<android.provider.Settings$Secure: float getFloat(android.content.ContentResolver,java.lang.String,float)>
SOURCE|<org.apache.james.mime4j.BodyDescriptor: java.lang.String getTransferEncoding()>
SOURCE|<org.apache.http.impl.AbstractHttpClientConnection: boolean isResponseAvailable(int)>
SOURCE|<android.view.DragEvent: android.content.ClipDescription getClipDescription()>
SOURCE|<com.android.exchange.provider.ExchangeDirectoryProvider: android.database.Cursor buildGalResultCursor(java.lang.String[],com.android.exchange.provider.GalResult)>
SOURCE|<com.android.launcher2.WallpaperChooserDialogFragment$ImageAdapter: long getItemId(int)>
SOURCE|<javax.crypto.spec.PBEKeySpec: int getIterationCount()>
SOURCE|<android.app.ApplicationPackageManager: java.lang.String getInstallerPackageName(java.lang.String)>
SOURCE|<android.content.pm.IPackageManager$Stub$Proxy: java.util.List getPreferredPackages(int)>
SOURCE|<javax.crypto.spec.DHPrivateKeySpec: java.math.BigInteger getX()>
SOURCE|<android.test.IsolatedContext$MockAccountManager: java.lang.String peekAuthToken(android.accounts.Account,java.lang.String)>
SOURCE|<com.android.contacts.calllog.ExtendedCursor: float getFloat(int)>
SOURCE|<android.view.inputmethod.InputConnectionWrapper: java.lang.CharSequence getTextBeforeCursor(int,int)>
SOURCE|<java.lang.reflect.Parameter: java.lang.'annotation'.Annotation[] getAnnotationsByType(java.lang.Class)>
SOURCE|<com.android.contacts.detail.PhotoSelectionHandler: long getWritableEntityId()>
SOURCE|<android.speech.IRecognitionService$Stub: android.os.IBinder asBinder()>
SOURCE|<java.util.Collections$SynchronizedList: java.lang.Object get(int)>
SOURCE|<com.android.browser.Controller: android.graphics.Bitmap createScreenshot(android.webkit.WebView,int,int)>
SOURCE|<java.util.prefs.AbstractPreferences: byte[] getByteArray(java.lang.String,byte[])>
SOURCE|<android.net.ConnectivityManager: android.net.LinkProperties getLinkProperties(int)>
SOURCE|<android.webkit.PluginList: java.util.List getList()>
SOURCE|<android.view.textservice.SpellCheckerSubtype: java.lang.String getExtraValueOf(java.lang.String)>
SOURCE|<android.widget.LinearLayout: int getBaselineAlignedChildIndex()>
SOURCE|<android.os.Environment$UserEnvironment: java.io.File getExternalStorageAppObbDirectory(java.lang.String)>
SOURCE|<android.filterfw.core.VertexFrame: int getVboId()>
SOURCE|<java.text.DecimalFormatSymbols: java.text.DecimalFormatSymbols getInstance()>
SOURCE|<com.android.org.bouncycastle.asn1.DERUTCTime: java.util.Date getAdjustedDate()>
SOURCE|<android.test.IsolatedContext: java.util.List getAndClearBroadcastIntents()>
SOURCE|<com.android.server.am.ActivityManagerService: int[] getRunningUserIds()>
SOURCE|<com.android.mms.ui.UriImage: int getWidth()>
SOURCE|<com.android.internal.telephony.cat.DeviceIdentities: com.android.internal.telephony.cat.ComprehensionTlvTag getTag()>
SOURCE|<android.nfc.tech.NfcV: int getMaxTransceiveLength()>
SOURCE|<java.lang.reflect.Method: java.lang.'annotation'.Annotation[] getDeclaredAnnotations()>
SOURCE|<android.view.ViewConfiguration: long getSendRecurringAccessibilityEventsInterval()>
SOURCE|<org.apache.http.impl.AbstractHttpClientConnection: org.apache.http.impl.entity.EntitySerializer createEntitySerializer()>
SOURCE|<com.android.internal.widget.ActionBarView$ExpandedActionViewMenuPresenter: com.android.internal.view.menu.MenuView getMenuView(android.view.ViewGroup)>
SOURCE|<com.google.common.collect.ForwardingCollection: java.lang.Object[] standardToArray()>
SOURCE|<com.google.common.collect.ImmutableSet$ArrayImmutableSet: com.google.common.collect.ImmutableList createAsList()>
SOURCE|<java.nio.charset.CharsetDecoder: java.nio.charset.CoderResult implFlush(java.nio.CharBuffer)>
SOURCE|<dalvik.system.profiler.HprofData$StackTrace: int getThreadId()>
SOURCE|<android.bluetooth.IBluetooth$Stub$Proxy: java.lang.String getName()>
SOURCE|<com.android.email.VendorPolicyLoader: java.lang.String getImapIdValues(java.lang.String,java.lang.String,java.lang.String)>
SOURCE|<com.android.contacts.model.account.ExchangeAccountType: com.android.contacts.model.dataitem.DataKind addDataKindNickname(android.content.Context)>
SOURCE|<com.android.email.widget.EmailWidget: long getItemId(int)>
SOURCE|<com.android.videoeditor.service.MovieTheme: int getPreviewMovieResId()>
SOURCE|<com.android.internal.telephony.PhoneProxy: java.lang.String getActiveApnHost(java.lang.String)>
SOURCE|<com.android.internal.policy.impl.PhoneWindowManager: android.view.animation.Animation createForceHideEnterAnimation(boolean)>
SOURCE|<com.google.common.collect.ImmutableSortedMap: com.google.common.collect.ImmutableSortedMap subMap(java.lang.Object,boolean,java.lang.Object,boolean)>
SOURCE|<android.widget.RelativeLayout$LayoutParams: int[] getRules()>
SOURCE|<android.telephony.SmsMessage: byte[] getUserData()>
SOURCE|<com.android.contacts.list.LegacyPostalAddressListAdapter: android.net.Uri getContactMethodUri(int)>
SOURCE|<com.android.contacts.model.account.BaseAccountType$EventKindBuilder: java.lang.String getTagName()>
SOURCE|<java.lang.VMClassLoader: java.util.List getResources(java.lang.String)>
SOURCE|<java.nio.LongToByteBufferAdapter: long get(int)>
SOURCE|<org.apache.http.message.BasicRequestLine: java.lang.String getUri()>
SOURCE|<org.apache.harmony.security.utils.ObjectIdentifier: java.lang.String getName()>
SOURCE|<android.net.sip.SipProfile: java.lang.String getProxyAddress()>
SOURCE|<com.google.android.mms.pdu.ReadRecInd: long getDate()>
SOURCE|<android.view.accessibility.AccessibilityEvent: java.lang.CharSequence getBeforeText()>
SOURCE|<com.android.gallery3d.filtershow.imageshow.ImageSmallFilter: com.android.gallery3d.filtershow.presets.ImagePreset getImagePreset()>
SOURCE|<com.android.gallery3d.ui.DialogDetailsView$DetailsAdapter: int getCount()>
SOURCE|<com.android.browser.BrowserHistoryPage$HistoryAdapter: long getChildId(int,int)>
SOURCE|<gov.nist.javax.sip.header.HeaderFactoryImpl: javax.sip.header.MinExpiresHeader createMinExpiresHeader(int)>
SOURCE|<android.widget.Editor$SuggestionsPopupWindow$SuggestionAdapter: int getCount()>
SOURCE|<com.android.launcher2.Folder: android.view.View getItemAt(int)>
SOURCE|<com.android.internal.statusbar.StatusBarNotification: int getUserId()>
SOURCE|<gov.nist.core.StringTokenizer: java.lang.String getNextToken(char)>
SOURCE|<javax.xml.parsers.DocumentBuilder: org.w3c.dom.Document parse(java.io.InputStream)>
SOURCE|<android.net.INetworkStatsSession$Stub$Proxy: android.net.NetworkStats getSummaryForNetwork(android.net.NetworkTemplate,long,long)>
SOURCE|<android.net.http.Headers: int getConnectionType()>
SOURCE|<java.util.Currency: java.util.Currency getInstance(java.util.Locale)>
SOURCE|<android.view.InputDevice$MotionRange: int getSource()>
SOURCE|<com.android.gallery3d.app.AbstractGalleryActivity: com.android.gallery3d.app.OrientationManager getOrientationManager()>
SOURCE|<com.android.mms.util.Recycler$SmsRecycler: long getThreadId(android.database.Cursor)>
SOURCE|<org.apache.http.impl.client.AbstractHttpClient: org.apache.http.ConnectionReuseStrategy getConnectionReuseStrategy()>
SOURCE|<com.google.common.collect.MapMakerInternalMap$WeakEntry: com.google.common.collect.MapMakerInternalMap$ReferenceEntry getNext()>
SOURCE|<android.webkit.WebView: void loadUrl(java.lang.String)>
SOURCE|<com.android.internal.telephony.IccSmsInterfaceManagerProxy: int getPremiumSmsPermission(java.lang.String)>
SOURCE|<com.google.android.mms.pdu.SendReq: com.google.android.mms.pdu.EncodedStringValue[] getBcc()>
SOURCE|<com.android.bluetooth.pan.PanService: java.lang.String getName()>
SOURCE|<com.android.internal.telephony.SmsAddress: java.lang.String getAddressString()>
SOURCE|<com.android.contacts.calllog.CallDetailHistoryAdapter: int getItemViewType(int)>
SOURCE|<android.media.ExifInterface: long getGpsDateTime()>
SOURCE|<android.text.SpannableString: int getSpanFlags(java.lang.Object)>
SOURCE|<com.android.browser.provider.BrowserProvider: java.lang.String getClientId(android.content.ContentResolver)>
SOURCE|<android.nfc.tech.MifareClassic: byte[] transceive(byte[],boolean)>
SOURCE|<android.content.ComponentName: java.lang.String getShortClassName()>
SOURCE|<org.apache.harmony.xnet.provider.jsse.PinListEntry: boolean getEnforcing()>
SOURCE|<android.media.videoeditor.MediaVideoItem: android.media.videoeditor.MediaArtistNativeHelper$ClipSettings getVideoClipProperties()>
SOURCE|<android.graphics.Bitmap: int[] getLayoutBounds()>
SOURCE|<org.apache.harmony.xnet.provider.jsse.CipherSuite: java.lang.String getServerKeyType()>
SOURCE|<com.android.email.mail.store.ImapFolder: com.android.emailcommon.mail.Message[] getMessages(java.lang.String[],com.android.emailcommon.mail.Folder$MessageRetrievalListener)>
SOURCE|<android.graphics.drawable.RotateDrawable: android.graphics.drawable.Drawable getDrawable()>
SOURCE|<com.android.internal.telephony.IccCardProxy: com.android.internal.telephony.IccRecords getIccRecords()>
SOURCE|<android.app.ContextImpl$15: java.lang.Object createStaticService()>
SOURCE|<com.android.contacts.model.dataitem.PhotoDataItem: byte[] getPhoto()>
SOURCE|<com.android.camera.IconListPreference: boolean getUseSingleIcon()>
SOURCE|<gov.nist.core.NameValueList: java.util.Iterator getNames()>
SOURCE|<java.net.DatagramPacket: java.net.InetAddress getAddress()>
SOURCE|<com.android.contacts.model.dataitem.DataItem: android.content.ContentValues getContentValues()>
SOURCE|<com.android.internal.telephony.gsm.SmsMessage$PduParser: java.lang.String getUserDataGSM7Bit(int,int,int)>
SOURCE|<android.test.mock.MockContext: java.lang.String getPackageResourcePath()>
SOURCE|<com.android.mms.ui.RecipientsEditor: android.view.ContextMenu$ContextMenuInfo getContextMenuInfo()>
SOURCE|<com.android.providers.contacts.ContactsProvider2: android.database.sqlite.SQLiteOpenHelper getDatabaseHelper(android.content.Context)>
SOURCE|<android.database.sqlite.SQLiteDatabase: long getMaximumSize()>
SOURCE|<com.android.mms.model.SlideshowModel: com.android.mms.model.SlideshowModel createFromMessageUri(android.content.Context,android.net.Uri)>
SOURCE|<android.app.LoadedApk$ReceiverDispatcher: android.content.IIntentReceiver getIIntentReceiver()>
SOURCE|<gov.nist.javax.sip.header.SIPHeader: java.lang.String getValue()>
SOURCE|<com.android.server.am.ActiveServices$ServiceMap: com.android.server.am.ServiceRecord getServiceByIntent(android.content.Intent$FilterComparison,int)>
SOURCE|<com.android.i18n.phonenumbers.PhoneNumberUtil: java.lang.String getRegionCodeForCountryCode(int)>
SOURCE|<android.text.style.QuoteSpan: int getSpanTypeId()>
SOURCE|<android.provider.Contacts$Phones: java.lang.CharSequence getDisplayLabel(android.content.Context,int,java.lang.CharSequence,java.lang.CharSequence[])>
SOURCE|<javax.obex.ServerOperation: int getHeaderLength()>
SOURCE|<com.android.browser.BrowserSettings: java.lang.String getLinkPrefetchAlwaysPreferenceString(android.content.Context)>
SOURCE|<com.google.common.collect.MapMaker$NullComputingConcurrentMap: java.lang.Object get(java.lang.Object)>
SOURCE|<android.net.LocalSocket: android.net.LocalSocketAddress getLocalSocketAddress()>
SOURCE|<java.security.UnresolvedPermission: java.security.cert.Certificate[] getUnresolvedCerts()>
SOURCE|<com.android.contacts.list.ContactEntryListFragment: android.content.Loader onCreateLoader(int,android.os.Bundle)>
SOURCE|<android.preference.PreferenceActivity: android.preference.PreferenceManager getPreferenceManager()>
SOURCE|<com.android.internal.telephony.IPhoneSubInfo$Stub$Proxy: java.lang.String getLine1AlphaTag()>
SOURCE|<java.lang.reflect.Method: java.lang.reflect.Type[] getGenericExceptionTypes()>
SOURCE|<com.android.email.activity.AccountSelectorAdapter: int getViewTypeCount()>
SOURCE|<java.time.zone.ZoneOffsetTransitionRule: java.time.zone.ZoneOffsetTransitionRule$TimeDefinition getTimeDefinition()>
SOURCE|<libcore.net.http.HttpConnection: java.io.OutputStream getOutputStream()>
SOURCE|<com.android.deskclock.widget.swipeablelistview.SwipeableListView: android.view.View getChildContentView(android.view.View)>
SOURCE|<com.android.mms.dom.smil.SmilPlayer: com.android.mms.dom.smil.SmilPlayer getPlayer()>
SOURCE|<java.util.Date: int getTimezoneOffset()>
SOURCE|<org.apache.harmony.xnet.provider.jsse.ConnectionState: byte[] encrypt(byte,byte[])>
SOURCE|<android.preference.VolumePreference$SeekBarVolumizer: android.widget.SeekBar getSeekBar()>
SOURCE|<com.android.internal.widget.LockPatternUtils: java.lang.String getNextAlarm()>
SOURCE|<android.os.Bundle: java.lang.Object get(java.lang.String)>
SOURCE|<java.util.concurrent.locks.ReentrantReadWriteLock: int getReadLockCount()>
SOURCE|<android.webkit.WebView: void stopLoading()>
SOURCE|<android.telephony.gsm.SmsMessage: java.lang.String getMessageBody()>
SOURCE|<com.android.launcher2.Utilities: android.graphics.Bitmap createIconBitmap(android.graphics.drawable.Drawable,android.content.Context)>
SOURCE|<com.android.email.activity.MessageOrderManager: long getCurrentMessageId()>
SOURCE|<com.google.android.picasastore.PicasaStoreFacade: java.io.File getCacheDirectory()>
SOURCE|<java.util.concurrent.atomic.AtomicIntegerFieldUpdater: int getAndSet(java.lang.Object,int)>
SOURCE|<com.android.contacts.model.account.BaseAccountType: com.android.contacts.model.dataitem.DataKind addDataKindSipAddress(android.content.Context)>
SOURCE|<android.os.Looper: android.os.Looper getMainLooper()>
SOURCE|<com.android.contacts.model.account.AccountType: com.android.contacts.model.dataitem.DataKind getKindForMimetype(java.lang.String)>
SOURCE|<java.lang.invoke.VolatileCallSite: java.lang.invoke.MethodHandle getTarget()>
SOURCE|<com.android.phone.sip.SipEditor$PreferenceKey: java.lang.String getValue()>
SOURCE|<android.webkit.CacheManager$CacheResult: long getExpires()>
SOURCE|<android.net.INetworkManagementEventObserver$Stub: android.os.IBinder asBinder()>
SOURCE|<java.lang.Package: java.lang.String getImplementationVendor()>
SOURCE|<android.widget.AdapterViewAnimator: android.view.View getCurrentView()>
SOURCE|<org.apache.harmony.xnet.provider.jsse.SSLParametersImpl: org.apache.harmony.xnet.provider.jsse.SSLParametersImpl getDefault()>
SOURCE|<android.net.INetworkPolicyManager$Stub$Proxy: int getUidPolicy(int)>
SOURCE|<android.webkit.ByteArrayBuilder: int getByteSize()>
SOURCE|<com.coremedia.iso.boxes.FileTypeBox: long getContentSize()>
SOURCE|<android.support.v4.view.PagerAdapter: int getItemPosition(java.lang.Object)>
SOURCE|<java.security.cert.CertificateRevokedException: javax.security.auth.x500.X500Principal getAuthorityName()>
SOURCE|<android.widget.RelativeLayout: int getBaseline()>
SOURCE|<android.app.BackStackRecord: int getBreadCrumbTitleRes()>
SOURCE|<com.android.internal.telephony.gsm.SmsMessage: com.android.internal.telephony.SmsConstants$MessageClass getMessageClass()>
SOURCE|<com.android.exchange.ExchangeService$AccountList: com.android.emailcommon.provider.Account getById(long)>
SOURCE|<com.adobe.xmp.impl.XMPMetaImpl: java.lang.Integer getPropertyInteger(java.lang.String,java.lang.String)>
SOURCE|<gov.nist.javax.sip.stack.SIPTransaction: java.lang.String getPeerProtocol()>
SOURCE|<android.view.KeyCharacterMap: android.view.KeyCharacterMap$FallbackAction getFallbackAction(int,int)>
SOURCE|<java.time.zone.ZoneRules: java.time.ZoneOffset getOffset(java.time.LocalDateTime)>
SOURCE|<java.time.YearMonth: java.time.Month getMonth()>
SOURCE|<com.android.providers.downloads.DownloadInfo$Reader: com.android.providers.downloads.DownloadInfo newDownloadInfo(android.content.Context,com.android.providers.downloads.SystemFacade)>
SOURCE|<org.apache.http.impl.client.DefaultUserTokenHandler: java.lang.Object getUserToken(org.apache.http.protocol.HttpContext)>
SOURCE|<android.graphics.drawable.DrawableContainer: int getMinimumHeight()>
SOURCE|<com.android.gallery3d.data.TagClustering: int getNumberOfClusters()>
SOURCE|<android.webkit.WebSettingsClassic: boolean getUseFixedViewport()>
SOURCE|<android.content.IIntentReceiver$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
SOURCE|<com.android.contacts.list.ContactEntryListAdapter: char[] getUpperCaseQueryString()>
SOURCE|<org.xml.sax.helpers.ParserAdapter$AttributeListAdapter: java.lang.String getValue(int)>
SOURCE|<android.app.ApplicationPackageManager: android.content.res.Resources getResourcesForApplication(android.content.pm.ApplicationInfo)>
SOURCE|<android.graphics.drawable.LayerDrawable: int getIntrinsicWidth()>
SOURCE|<android.graphics.YuvImage: byte[] getYuvData()>
SOURCE|<android.widget.VideoView: int getCurrentPosition()>
SOURCE|<com.android.internal.telephony.SmsMessageBase$SubmitPduBase: java.lang.String toString()>
SOURCE|<java.io.EmulatedFields: java.lang.Object get(java.lang.String,java.lang.Object)>
SOURCE|<javax.obex.HeaderSet: java.lang.Object getHeader(int)>
SOURCE|<java.nio.file.FileSystems: java.nio.file.FileSystem getFileSystem(java.net.URI)>
SOURCE|<android.net.LocalServerSocket: android.net.LocalSocketAddress getLocalSocketAddress()>
SOURCE|<com.android.commands.monkey.MonkeySourceNetwork: com.android.commands.monkey.MonkeyEvent getNextEvent()>
SOURCE|<gov.nist.javax.sip.SipProviderImpl: javax.sip.ServerTransaction getNewServerTransaction(javax.sip.message.Request)>
SOURCE|<android.net.INetworkPolicyListener$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
SOURCE|<com.android.email.activity.UIControllerBase: com.android.email.activity.MailboxListFragment getMailboxListFragment()>
SOURCE|<com.android.server.accessibility.ScreenMagnifier$MagnificationController: float getScaledOffsetY()>
SOURCE|<java.util.IllegalFormatConversionException: char getConversion()>
SOURCE|<com.android.i18n.phonenumbers.geocoding.DefaultMapStorage: java.lang.String getDescription(int)>
SOURCE|<javax.net.ssl.SSLEngine: javax.net.ssl.SSLEngineResult unwrap(java.nio.ByteBuffer,java.nio.ByteBuffer[])>
SOURCE|<android.app.ContextImpl: android.content.res.Resources getResources()>
SOURCE|<com.android.wallpaper.RenderScriptWallpaper: android.service.wallpaper.WallpaperService$Engine onCreateEngine()>
SOURCE|<com.coremedia.iso.boxes.CompositionTimeToSample: long getContentSize()>
SOURCE|<android.widget.TextView: int getLeftPaddingOffset()>
SOURCE|<com.android.gallery3d.ui.GLView: int getVisibility()>
SOURCE|<com.android.internal.telephony.ITelephony$Stub$Proxy: java.util.List getNeighboringCellInfo()>
SOURCE|<android.accounts.AccountManager$AmsTask: android.os.Bundle getResult(long,java.util.concurrent.TimeUnit)>
SOURCE|<java.net.DatagramSocket: java.io.FileDescriptor getFileDescriptor$()>
SOURCE|<gov.nist.javax.sip.stack.MessageProcessor: gov.nist.javax.sip.header.Via getViaHeader()>
SOURCE|<android.os.IUpdateLock$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
SOURCE|<java.lang.Class: java.lang.reflect.Method getDeclaredMethod(java.lang.String,java.lang.Class[])>
SOURCE|<android.view.KeyCharacterMap: int getDeadChar(int,int)>
SOURCE|<android.widget.NumberPicker$AccessibilityNodeProviderImpl: android.view.accessibility.AccessibilityNodeInfo createAccessibilityNodeInfo(int)>
SOURCE|<com.android.uiautomator.core.UiSelector: com.android.uiautomator.core.UiSelector getPatternSelector()>
SOURCE|<java.nio.channels.SelectionKey: java.lang.Object attachment()>
SOURCE|<javax.obex.ClientSession: javax.obex.HeaderSet disconnect(javax.obex.HeaderSet)>
SOURCE|<com.google.common.collect.AbstractMultimap$WrappedSortedSet: java.util.SortedSet getSortedSetDelegate()>
SOURCE|<gov.nist.javax.sip.stack.SIPTransaction: java.security.cert.Certificate[] getPeerCertificates()>
SOURCE|<android.view.textservice.SpellCheckerSession: com.android.internal.textservice.ITextServicesSessionListener getTextServicesSessionListener()>
SOURCE|<android.widget.HorizontalScrollView: float getLeftFadingEdgeStrength()>
SOURCE|<com.android.internal.telephony.AdnRecord: java.lang.String getAlphaTag()>
SOURCE|<com.android.gallery3d.data.LocalSource: com.android.gallery3d.data.Path getDefaultSetOf(com.android.gallery3d.data.Path)>
SOURCE|<com.android.inputmethod.keyboard.KeyDetector: int getTouchY(int)>
SOURCE|<java.text.DecimalFormatSymbols: char getPatternSeparator()>
SOURCE|<com.android.server.ThrottleService: int getCliffLevel(java.lang.String,int)>
SOURCE|<org.apache.harmony.xml.dom.ProcessingInstructionImpl: java.lang.String getNodeValue()>
SOURCE|<gov.nist.javax.sip.message.SIPMessage: java.lang.String debugDump()>
SOURCE|<com.android.internal.telephony.IPhoneSubInfo$Stub$Proxy: java.lang.String getDeviceId()>
SOURCE|<java.util.Locale: java.lang.String getLanguage()>
SOURCE|<com.android.mms.data.Contact: java.util.List getByPhoneUris(android.os.Parcelable[])>
SOURCE|<gov.nist.javax.sip.stack.HandshakeCompletedListenerImpl: javax.net.ssl.HandshakeCompletedEvent getHandshakeCompletedEvent()>
SOURCE|<android.test.mock.MockResources: java.lang.String getString(int,java.lang.Object[])>
SOURCE|<com.android.internal.telephony.cdma.RuimRecords: boolean getCsimSpnDisplayCondition()>
SOURCE|<com.android.gallery3d.app.GalleryActionBar$ClusterAdapter: long getItemId(int)>
SOURCE|<android.widget.RemoteViews$SetDrawableParameters: java.lang.String getActionName()>
SOURCE|<android.app.ContextImpl: java.io.File getFilesDir()>
SOURCE|<com.android.mms.dom.smil.ElementParallelTimeContainerImpl: java.lang.String getEndSync()>
SOURCE|<com.android.contacts.model.account.AccountType: int getViewGroupLabelResId()>
SOURCE|<com.android.launcher2.PagedView: int getAssociatedLowerPageBound(int)>
SOURCE|<com.android.org.bouncycastle.asn1.DERBMPString: com.android.org.bouncycastle.asn1.DERBMPString getInstance(java.lang.Object)>
SOURCE|<com.android.gallery3d.filtershow.imageshow.ImageSlave: com.android.gallery3d.filtershow.filters.ImageFilter getCurrentFilter()>
SOURCE|<android.media.ThumbnailUtils: android.graphics.Bitmap createVideoThumbnail(java.lang.String,int)>
SOURCE|<org.apache.harmony.xnet.provider.jsse.OpenSSLDSAParams: org.apache.harmony.xnet.provider.jsse.OpenSSLKey getOpenSSLKey()>
SOURCE|<android.database.MergeCursor: byte[] getBlob(int)>
SOURCE|<com.android.gallery3d.picasasource.PicasaImage: java.lang.String getMimeType()>
SOURCE|<android.os.Debug: int getThreadAllocCount()>
SOURCE|<java.security.cert.PKIXParameters: java.util.Set getTrustAnchors()>
SOURCE|<com.android.bluetooth.btservice.RemoteDevices$DeviceProperties: java.lang.String getAlias()>
SOURCE|<com.android.browser.TabControl: com.android.browser.Tab createNewTab(android.os.Bundle,boolean)>
SOURCE|<android.nfc.NfcAdapter: android.nfc.NfcAdapter getDefaultAdapter(android.content.Context)>
SOURCE|<android.net.LocalSocketImpl: java.io.FileDescriptor getFileDescriptor()>
SOURCE|<org.kxml2.io.KXmlParser: java.lang.String getRootElementName()>
SOURCE|<com.android.browser.widget.BookmarkThumbnailWidgetProvider: android.content.ComponentName getComponentName(android.content.Context)>
SOURCE|<com.android.email.widget.EmailWidget: android.widget.RemoteViews getViewAt(int)>
SOURCE|<android.speech.tts.TextToSpeechService$SpeechItem: float getVolume()>
SOURCE|<java.net.Authenticator: java.net.Authenticator$RequestorType getRequestorType()>
SOURCE|<com.android.emailcommon.mail.Multipart: int getCount()>
SOURCE|<android.app.backup.IFullBackupRestoreObserver$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
SOURCE|<android.os.Debug$MemoryInfo: int getOtherPss(int)>
SOURCE|<com.android.server.wm.WindowManagerService: com.android.server.wm.WindowList getTokenWindowsOnDisplay(com.android.server.wm.WindowToken,com.android.server.wm.DisplayContent)>
SOURCE|<com.android.gallery3d.picasasource.PicasaImage: int getWidth()>
SOURCE|<java.util.Calendar: int getActualMinimum(int)>
SOURCE|<gov.nist.javax.sip.header.Challenge: java.lang.String getRealm()>
SOURCE|<android.emoji.EmojiFactory: android.graphics.Bitmap getBitmapFromVendorSpecificPua(int)>
SOURCE|<android.webkit.WebSettingsClassic: boolean getMediaPlaybackRequiresUserGesture()>
SOURCE|<java.net.MulticastSocket: int getTimeToLive()>
SOURCE|<com.android.launcher2.Launcher: com.android.launcher2.DragController getDragController()>
SOURCE|<android.telephony.gsm.SmsMessage: int getProtocolIdentifier()>
SOURCE|<java.text.ChoiceFormat: java.lang.Object[] getFormats()>
SOURCE|<android.provider.Settings$System: int getInt(android.content.ContentResolver,java.lang.String,int)>
SOURCE|<com.android.server.am.ActivityManagerService: int[] getUsersLocked()>
SOURCE|<android.view.animation.LayoutAnimationController: long getDelayForView(android.view.View)>
SOURCE|<android.mtp.MtpStorage: java.lang.String getDescription()>
SOURCE|<java.time.chrono.HijrahEra: int getValue()>
SOURCE|<android.app.ContextImpl$ApplicationContentResolver: boolean getSyncAutomatically(android.accounts.Account,java.lang.String)>
SOURCE|<android.renderscript.Matrix3f: float get(int,int)>
SOURCE|<com.android.mms.util.Recycler$MmsRecycler: android.database.Cursor getAllThreads(android.content.Context)>
SOURCE|<android.view.HardwareLayer: int getWidth()>
SOURCE|<org.apache.harmony.luni.lang.reflect.ImplForArray: java.lang.reflect.Type getGenericComponentType()>
SOURCE|<com.android.browser.DateSortedExpandableListAdapter: long getCombinedGroupId(long)>
SOURCE|<com.android.internal.telephony.sip.SipConnectionBase: long getConnectTime()>
SOURCE|<com.android.email.activity.MessageViewFragmentBase: com.android.email.Controller getController()>
SOURCE|<java.lang.reflect.AccessibleObject: java.lang.'annotation'.Annotation getAnnotation(java.lang.Class)>
SOURCE|<android.location.LocationProvider: int getPowerRequirement()>
SOURCE|<android.content.res.Resources: java.lang.CharSequence getQuantityText(int,int)>
SOURCE|<android.accounts.AccountManager: android.accounts.AccountManagerFuture getAuthTokenByFeatures(java.lang.String,java.lang.String,java.lang.String[],android.app.Activity,android.os.Bundle,android.os.Bundle,android.accounts.AccountManagerCallback,android.os.Handler)>
SOURCE|<com.android.contacts.datepicker.DatePicker: int getDayOfMonth()>
SOURCE|<android.media.JetPlayer: int getMaxTracks()>
SOURCE|<com.android.internal.widget.LockPatternUtils: int getRequestedPasswordMinimumUpperCase()>
SOURCE|<com.android.internal.telephony.cdma.SmsMessage: int getTeleService()>
SOURCE|<android.database.sqlite.SQLiteDatabase: android.database.Cursor rawQuery(java.lang.String,java.lang.String[],android.os.CancellationSignal)>
SOURCE|<android.provider.MediaStore$Audio$Media: android.net.Uri getContentUriForPath(java.lang.String)>
SOURCE|<com.android.gallery3d.gadget.WidgetService$PhotoRVFactory: android.widget.RemoteViews getLoadingView()>
SOURCE|<com.android.browser.Preloader$PreloaderSession: android.webkit.WebView getWebView()>
SOURCE|<android.util.ReflectiveProperty: java.lang.Object get(java.lang.Object)>
SOURCE|<com.android.providers.contacts.SearchIndexManager$IndexBuilder: java.lang.String getTokens()>
SOURCE|<com.android.contacts.widget.PinnedHeaderListDemoActivity$TestPinnedHeaderListAdapter: int getPinnedHeaderCount()>
SOURCE|<android.widget.AbsSeekBar: android.graphics.drawable.Drawable getThumb()>
SOURCE|<java.security.spec.ECFieldF2m: int getFieldSize()>
SOURCE|<android.view.TextureView: int getLayerType()>
SOURCE|<android.filterfw.core.FilterGraph: java.util.Set getFilters()>
SOURCE|<com.adobe.xmp.impl.XMPMetaImpl: java.lang.Boolean getPropertyBoolean(java.lang.String,java.lang.String)>
SOURCE|<android.animation.ValueAnimator: java.lang.Object getAnimatedValue(java.lang.String)>
SOURCE|<android.net.nsd.DnsSdTxtRecord: byte[] getRawData()>
SOURCE|<android.view.IInputFilter$Stub: android.os.IBinder asBinder()>
SOURCE|<android.os.IRemoteCallback$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
SOURCE|<java.nio.SocketChannelImpl$SocketAdapter: java.io.InputStream getInputStream()>
SOURCE|<android.widget.Editor$SuggestionsPopupWindow$SuggestionAdapter: long getItemId(int)>
SOURCE|<android.telephony.TelephonyManager: java.util.List getAllCellInfo()>
SOURCE|<android.provider.SyncStateContract$Helpers: byte[] get(android.content.ContentProviderClient,android.net.Uri,android.accounts.Account)>
SOURCE|<com.android.internal.app.ActionBarImpl$TabImpl: java.lang.CharSequence getContentDescription()>
SOURCE|<gov.nist.javax.sip.clientauthutils.CredentialsCache: java.util.Collection getCachedAuthorizationHeaders(java.lang.String)>
SOURCE|<com.android.server.wm.WindowState: android.view.IApplicationToken getAppToken()>
SOURCE|<com.android.launcher2.PagedView$ScrollInterpolator: float getInterpolation(float)>
SOURCE|<android.hardware.input.InputManager: android.view.InputDevice getInputDevice(int)>
SOURCE|<org.apache.harmony.xml.dom.CharacterDataImpl: int getLength()>
SOURCE|<java.util.UUID: long getLeastSignificantBits()>
SOURCE|<java.net.SocketPermission: java.lang.String getActions()>
SOURCE|<android.webkit.WebViewClassic$Factory: android.webkit.CookieManager getCookieManager()>
SOURCE|<com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata: java.lang.String getPreferredInternationalPrefix()>
SOURCE|<com.android.emailcommon.utility.EmailAsyncTask$Tracker: int getTaskCountForTest()>
SOURCE|<android.content.res.Resources: int getInteger(int)>
SOURCE|<android.support.v4.app.TaskStackBuilderHoneycomb: android.app.PendingIntent getActivitiesPendingIntent(android.content.Context,int,android.content.Intent[],int)>
SOURCE|<com.android.providers.contacts.PhotoPriorityResolver: int getPhotoPriority(java.lang.String)>
SOURCE|<com.android.gallery3d.app.TimeBar: int getPreferredHeight()>
SOURCE|<com.android.musicfx.ControlPanelEffect: java.lang.String getParameterString(android.content.Context,java.lang.String,int,java.lang.String)>
SOURCE|<com.android.inputmethod.latin.spellcheck.AndroidSpellCheckerService: android.view.textservice.SuggestionsInfo getNotInDictEmptySuggestions()>
SOURCE|<android.view.MotionEvent: long getDownTime()>
SOURCE|<com.android.internal.telephony.DataConnectionTracker: java.lang.String apnIdToType(int)>
SOURCE|<java.lang.Class: java.lang.'annotation'.Annotation[] getDeclaredAnnotations()>
SOURCE|<java.lang.ClassLoader: java.io.InputStream getSystemResourceAsStream(java.lang.String)>
SOURCE|<com.android.camera.MosaicFrameProcessor: int createMosaic(boolean)>
SOURCE|<android.net.IThrottleManager$Stub: android.os.IBinder asBinder()>
SOURCE|<com.android.inputmethod.keyboard.MoreKeysKeyboardView: com.android.inputmethod.keyboard.PointerTracker$TimerProxy getTimerProxy()>
SOURCE|<com.android.server.WifiService: android.net.wifi.WifiConfiguration getWifiApConfiguration()>
SOURCE|<com.android.server.net.NetworkStatsCollection: long getFirstAtomicBucketMillis()>
SOURCE|<android.view.accessibility.AccessibilityEvent: android.os.Parcelable getParcelableData()>
SOURCE|<android.media.IAudioService$Stub$Proxy: int getVibrateSetting(int)>
SOURCE|<com.android.contacts.editor.ContactEditorFragment$AggregationSuggestionAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)>
SOURCE|<com.android.contacts.detail.ContactDetailFragment$ViewEntryDimensions: int getPaddingLeft()>
SOURCE|<com.android.org.bouncycastle.asn1.x509.SubjectPublicKeyInfo: com.android.org.bouncycastle.asn1.x509.AlgorithmIdentifier getAlgorithmId()>
SOURCE|<android.location.Address: android.os.Bundle getExtras()>
SOURCE|<android.webkit.PluginManager: java.lang.String getPluginsAPKName(java.lang.String)>
SOURCE|<java.nio.IntArrayBuffer: int get()>
SOURCE|<com.android.server.wm.WindowManagerService$4: float getInterpolation(float)>
SOURCE|<com.android.server.location.MockProvider: java.lang.String getName()>
SOURCE|<com.android.launcher2.PagedViewCellLayout: com.android.launcher2.PagedViewCellLayoutChildren getChildrenLayout()>
SOURCE|<android.webkit.WebView: void loadData(java.lang.String,java.lang.String,java.lang.String)>
SOURCE|<com.google.common.collect.MapMakerInternalMap$StrongEntry: com.google.common.collect.MapMakerInternalMap$ValueReference getValueReference()>
SOURCE|<android.drm.DrmInfo: java.lang.Object get(java.lang.String)>
SOURCE|<android.widget.CursorAdapter: android.database.Cursor runQueryOnBackgroundThread(java.lang.CharSequence)>
SOURCE|<com.android.gallery3d.data.MtpDevice: android.mtp.MtpObjectInfo getObjectInfo(com.android.gallery3d.data.MtpContext,int,int)>
SOURCE|<java.security.MessageDigest: byte[] digest()>
SOURCE|<android.net.IConnectivityManager$Stub$Proxy: android.net.NetworkInfo[] getAllNetworkInfo()>
SOURCE|<com.android.internal.policy.impl.PhoneWindowManager: long interceptKeyBeforeDispatching(android.view.WindowManagerPolicy$WindowState,android.view.KeyEvent,int)>
SOURCE|<android.test.AndroidTestRunner: java.lang.String getTestClassName()>
SOURCE|<java.text.MessageFormat: java.lang.Object parseObject(java.lang.String,java.text.ParsePosition)>
SOURCE|<android.app.ApplicationErrorReport: android.content.ComponentName getErrorReportReceiver(android.content.Context,java.lang.String,int)>
SOURCE|<com.android.internal.telephony.PhoneBase: com.android.internal.telephony.ims.IsimRecords getIsimRecords()>
SOURCE|<com.google.android.mms.util.DrmConvertSession: byte[] convert(byte[],int)>
SOURCE|<gov.nist.javax.sip.address.Authority: gov.nist.core.Host getHost()>
SOURCE|<org.kxml2.io.KXmlParser: int getDepth()>
SOURCE|<java.text.DateFormat: java.lang.Object parseObject(java.lang.String,java.text.ParsePosition)>
SOURCE|<com.android.launcher2.LauncherModel: java.util.Comparator getAppNameComparator()>
SOURCE|<com.android.emailcommon.service.IEmailService$Stub: android.os.IBinder asBinder()>
SOURCE|<org.apache.http.impl.client.AbstractHttpClient: org.apache.http.HttpResponseInterceptor getResponseInterceptor(int)>
SOURCE|<android.hardware.Camera$Parameters: int getMaxNumMeteringAreas()>
SOURCE|<javax.obex.PasswordAuthentication: byte[] getUserName()>
SOURCE|<com.android.browser.provider.SQLiteContentProvider: int bulkInsert(android.net.Uri,android.content.ContentValues[])>
SOURCE|<android.renderscript.Allocation: android.view.Surface getSurface()>
SOURCE|<org.apache.harmony.xnet.provider.jsse.OpenSSLRSAPrivateCrtKey: java.math.BigInteger getCrtCoefficient()>
SOURCE|<android.nfc.tech.NfcV: byte getResponseFlags()>
SOURCE|<com.android.emailcommon.utility.SSLUtils$TrackingKeyManager: long getLastCertReqTime()>
SOURCE|<org.apache.http.impl.AbstractHttpServerConnection: org.apache.http.HttpConnectionMetrics getMetrics()>
SOURCE|<com.android.calendar.selectcalendars.SelectCalendarsSimpleAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)>
SOURCE|<java.util.Base64: java.util.Base64$Decoder getDecoder()>
SOURCE|<android.app.IServiceConnection$Stub: android.os.IBinder asBinder()>
SOURCE|<android.net.TrafficStats: long getTotalRxPackets()>
SOURCE|<com.android.bluetooth.btservice.AdapterService: int getDiscoverableTimeout()>
SOURCE|<com.android.internal.util.FastXmlSerializer: java.lang.String getName()>
SOURCE|<org.apache.james.mime4j.field.datetime.parser.ParseException: java.lang.String getMessage()>
SOURCE|<com.android.internal.os.IResultReceiver$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
SOURCE|<com.android.bluetooth.hdp.HealthService: android.os.ParcelFileDescriptor getMainChannelFd(android.bluetooth.BluetoothDevice,android.bluetooth.BluetoothHealthAppConfiguration)>
SOURCE|<com.android.contacts.quickcontact.ResolveCache: com.android.contacts.quickcontact.ResolveCache getInstance(android.content.Context)>
SOURCE|<android.provider.MediaStore$Audio$Artists$Albums: android.net.Uri getContentUri(java.lang.String,long)>
SOURCE|<com.android.gallery3d.data.DataManager: com.android.gallery3d.data.Path getDefaultSetOf(com.android.gallery3d.data.Path)>
SOURCE|<android.net.sip.SipProfile: javax.sip.address.Address getSipAddress()>
SOURCE|<com.android.launcher2.IconCache: android.graphics.drawable.Drawable getFullResDefaultActivityIcon()>
SOURCE|<android.os.Looper: java.lang.Thread getThread()>
SOURCE|<android.view.InputDevice: int[] getDeviceIds()>
SOURCE|<android.media.ExifInterface: java.lang.String getAttribute(java.lang.String)>
SOURCE|<android.view.MotionEvent: float getAxisValue(int,int)>
SOURCE|<android.net.wifi.WifiConfigStore: android.net.ProxyProperties getProxyProperties(int)>
SOURCE|<com.android.commands.monkey.MonkeySourceRandom: com.android.commands.monkey.MonkeyEvent getNextEvent()>
SOURCE|<android.filterpacks.imageproc.CrossProcessFilter: android.filterfw.core.FrameFormat getOutputFormat(java.lang.String,android.filterfw.core.FrameFormat)>
SOURCE|<com.android.deskclock.Alarm: java.lang.String getLabelOrDefault(android.content.Context)>
SOURCE|<com.android.server.accessibility.AccessibilityManagerService$Service: float findAccessibilityNodeInfosByText(int,long,java.lang.String,int,android.view.accessibility.IAccessibilityInteractionConnectionCallback,long)>
SOURCE|<android.net.LocalSocketImpl: java.io.OutputStream getOutputStream()>
SOURCE|<android.webkit.WebSettings: boolean getBlockNetworkLoads()>
SOURCE|<java.nio.charset.CharsetDecoder: java.nio.CharBuffer decode(java.nio.ByteBuffer)>
SOURCE|<org.apache.http.impl.client.DefaultRequestDirector: boolean createTunnelToTarget(org.apache.http.conn.routing.HttpRoute,org.apache.http.protocol.HttpContext)>
SOURCE|<com.android.browser.BrowserSettings: java.lang.String getDefaultTextEncoding()>
SOURCE|<com.google.android.gms.panorama.internal.PanoramaClientImpl: java.lang.String getServiceDescriptor()>
SOURCE|<gov.nist.javax.sip.header.ParametersHeader: java.lang.Object getMultiParameterValue(java.lang.String)>
SOURCE|<javax.security.cert.X509Certificate$1: java.util.Date getNotBefore()>
SOURCE|<android.view.KeyEvent: android.view.KeyCharacterMap getKeyCharacterMap()>
SOURCE|<android.widget.Scroller: float getCurrVelocity()>
SOURCE|<gov.nist.javax.sip.header.AcceptEncoding: java.lang.String getEncoding()>
SOURCE|<com.android.server.net.NetworkStatsService$DefaultNetworkStatsSettings: long getPollInterval()>
SOURCE|<android.widget.AutoCompleteTextView: android.widget.ListAdapter getAdapter()>
SOURCE|<com.android.email.activity.UIControllerBase: com.android.email.activity.MessageViewFragment getMessageViewFragment()>
SOURCE|<com.android.mms.MmsApp: android.drm.DrmManagerClient getDrmManagerClient()>
SOURCE|<com.google.android.mms.pdu.ReadOrigInd: int getReadStatus()>
SOURCE|<android.view.VelocityTracker: android.view.VelocityTracker getNextPoolable()>
SOURCE|<java.security.Provider$Service: java.lang.String getClassName()>
SOURCE|<org.apache.harmony.xnet.provider.jsse.HandshakeProtocol: byte[] wrap()>
SOURCE|<com.android.contacts.util.ExpirableCache: com.android.contacts.util.ExpirableCache$CachedValue getCachedValue(java.lang.Object)>
SOURCE|<android.app.ContextImpl: android.content.pm.PackageManager getPackageManager()>
SOURCE|<android.mtp.MtpObjectInfo: java.lang.String getKeywords()>
SOURCE|<android.widget.DatePicker: boolean getSpinnersShown()>
SOURCE|<android.bluetooth.IBluetooth$Stub$Proxy: java.lang.String getRemoteName(android.bluetooth.BluetoothDevice)>
SOURCE|<com.google.common.collect.AbstractSortedMultiset: com.google.common.collect.SortedMultiset createDescendingMultiset()>
SOURCE|<com.android.internal.telephony.cdma.RuimRecords: java.lang.String getRUIMOperatorNumeric()>
SOURCE|<com.android.videoeditor.service.VideoEditorProject: java.util.ArrayList getUniqueAspectRatiosList()>
SOURCE|<android.widget.AdapterView: int getFirstVisiblePosition()>
SOURCE|<android.widget.RemoteViews$BitmapCache: int getBitmapId(android.graphics.Bitmap)>
SOURCE|<android.media.videoeditor.MediaImageItem: long getDuration()>
SOURCE|<com.android.videoeditor.widgets.ThumbnailCache: android.graphics.Bitmap get(com.android.videoeditor.widgets.ThumbnailKey)>
SOURCE|<android.net.wifi.WifiManager: android.net.wifi.WifiConfiguration getWifiApConfiguration()>
SOURCE|<java.net.URI: java.lang.String getRawQuery()>
SOURCE|<libcore.net.url.FtpHandler: int getDefaultPort()>
SOURCE|<android.os.PowerManager: boolean isWakeLockLevelSupported(int)>
SOURCE|<java.io.ObjectInputStream: java.lang.String readUTF()>
SOURCE|<com.android.emailcommon.internet.MimeMessage: java.io.InputStream getInputStream()>
SOURCE|<android.filterpacks.imageproc.BitmapOverlayFilter: android.filterfw.core.FrameFormat getOutputFormat(java.lang.String,android.filterfw.core.FrameFormat)>
SOURCE|<android.app.Activity: long getInstanceCount()>
SOURCE|<com.android.gallery3d.data.FaceClustering: java.util.ArrayList getCluster(int)>
SOURCE|<android.app.ActivityManagerProxy: java.util.List getServices(int,int)>
SOURCE|<com.android.org.bouncycastle.asn1.ASN1TaggedObject: java.lang.String toString()>
SOURCE|<android.app.ActivityManagerProxy: java.util.List getRecentTasks(int,int,int)>
SOURCE|<org.apache.http.message.BasicLineParser: org.apache.http.StatusLine parseStatusLine(org.apache.http.util.CharArrayBuffer,org.apache.http.message.ParserCursor)>
SOURCE|<com.android.providers.contacts.ContactsDatabaseHelper: android.database.sqlite.SQLiteDatabase getDatabase(boolean)>
SOURCE|<android.service.textservice.SpellCheckerService$Session: android.view.textservice.SuggestionsInfo[] onGetSuggestionsMultiple(android.view.textservice.TextInfo[],int,boolean)>
SOURCE|<org.apache.harmony.xml.dom.ElementImpl: java.lang.String getNodeName()>
SOURCE|<android.app.AppGlobals: android.app.Application getInitialApplication()>
SOURCE|<android.gesture.GestureOverlayView: float getGestureStrokeAngleThreshold()>
SOURCE|<com.android.inputmethod.keyboard.KeyboardSwitcher: int getKeyboardShiftMode()>
SOURCE|<com.android.browser.BrowserSettings: java.lang.String getLinkPrefetchOnWifiOnlyPreferenceString(android.content.Context)>
SOURCE|<org.apache.james.mime4j.field.datetime.parser.DateTimeParser$Date: java.lang.String getYear()>
SOURCE|<com.android.internal.telephony.cdma.sms.BearerData: java.lang.String getLanguage()>
SOURCE|<com.android.mms.dom.AttrImpl: org.w3c.dom.Node getNextSibling()>
SOURCE|<android.media.videoeditor.Overlay: java.util.Map getUserAttributes()>
SOURCE|<java.net.HttpURLConnection: java.io.InputStream getInputStream()>
SOURCE|<gov.nist.javax.sip.header.RetryAfter: java.lang.String getComment()>
SOURCE|<android.net.wifi.p2p.nsd.WifiP2pDnsSdServiceResponse: int getVersion()>
SOURCE|<com.android.contacts.quickcontact.QuickContactActivity$ViewPagerAdapter: int getCount()>
SOURCE|<android.os.IHardwareService$Stub: android.os.IBinder asBinder()>
SOURCE|<com.android.bluetooth.btservice.AdapterProperties: int getConnectionState()>
SOURCE|<android.widget.AbsSpinner: android.view.ViewGroup$LayoutParams generateDefaultLayoutParams()>
SOURCE|<android.widget.SimpleExpandableListAdapter: long getGroupId(int)>
SOURCE|<com.android.gallery3d.ui.SlotView: android.graphics.Rect getSlotRect(int,com.android.gallery3d.ui.GLView)>
SOURCE|<android.widget.GridLayout$Axis: android.widget.GridLayout$Arc[] getArcs()>
SOURCE|<com.google.common.collect.AbstractMultiset: java.util.Set createEntrySet()>
SOURCE|<java.security.ProtectionDomain: java.security.PermissionCollection getPermissions()>
SOURCE|<android.accounts.AccountManager: android.accounts.AccountManagerFuture getAccountsByTypeAndFeatures(java.lang.String,java.lang.String[],android.accounts.AccountManagerCallback,android.os.Handler)>
SOURCE|<android.test.AndroidTestRunner: java.lang.Class loadSuiteClass(java.lang.String)>
SOURCE|<android.provider.Contacts$Settings: java.lang.String getSetting(android.content.ContentResolver,java.lang.String,java.lang.String)>
SOURCE|<android.net.LinkProperties$1: android.net.LinkProperties createFromParcel(android.os.Parcel)>
SOURCE|<android.graphics.drawable.DrawableContainer: android.graphics.Insets getLayoutInsets()>
SOURCE|<java.util.concurrent.locks.ReentrantLock: java.util.Collection getQueuedThreads()>
SOURCE|<android.widget.FrameLayout: int getForegroundGravity()>
SOURCE|<android.net.http.AndroidHttpClientConnection: org.apache.http.HttpConnectionMetrics getMetrics()>
SOURCE|<android.media.audiofx.PresetReverb: android.media.audiofx.PresetReverb$Settings getProperties()>
SOURCE|<android.widget.TabHost$ViewIdContentStrategy: android.view.View getContentView()>
SOURCE|<com.android.org.bouncycastle.asn1.x509.SubjectPublicKeyInfo: com.android.org.bouncycastle.asn1.x509.SubjectPublicKeyInfo getInstance(com.android.org.bouncycastle.asn1.ASN1TaggedObject,boolean)>
SOURCE|<android.view.MotionEvent: long getHistoricalEventTimeNano(int)>
SOURCE|<android.view.MotionEvent: float getHistoricalToolMajor(int)>
SOURCE|<com.android.providers.contacts.DataRowHandler: int getTypeRank(int)>
SOURCE|<com.android.internal.database.SortCursor: int getCount()>
SOURCE|<org.apache.harmony.xnet.provider.jsse.OpenSSLSocketImplWrapper: int getPort()>
SOURCE|<com.google.common.collect.MapMaker: com.google.common.base.Equivalence getKeyEquivalence()>
SOURCE|<com.google.android.mms.util.PduCacheEntry: com.google.android.mms.pdu.GenericPdu getPdu()>
SOURCE|<com.google.android.picasasync.PicasaFacade: android.net.Uri getPhotosUri()>
SOURCE|<gov.nist.javax.sip.stack.SIPTransactionStack: int getReceiveUdpBufferSize()>
SOURCE|<android.net.sip.ISipService$Stub: android.os.IBinder asBinder()>
SOURCE|<org.apache.harmony.xnet.provider.jsse.SSLSessionImpl: java.security.cert.Certificate[] getPeerCertificates()>
SOURCE|<com.google.common.collect.MapMakerInternalMap$WeakEntry: int getHash()>
SOURCE|<com.google.common.collect.MapMakerInternalMap$SoftEntry: java.lang.Object getKey()>
SOURCE|<org.xml.sax.ext.Locator2Impl: java.lang.String getXMLVersion()>
SOURCE|<java.lang.AbstractStringBuilder: char[] getValue()>
SOURCE|<android.location.LocationRequest: int getNumUpdates()>
SOURCE|<com.google.android.apps.lightcycle.xmp.XmpUtil: com.adobe.xmp.XMPMeta createXMPMeta()>
SOURCE|<com.google.android.mms.pdu.ReadOrigInd: com.google.android.mms.pdu.EncodedStringValue getFrom()>
SOURCE|<java.lang.reflect.Constructor: java.lang.'annotation'.Annotation[][] getParameterAnnotations()>
SOURCE|<com.android.server.wm.DisplayContent: int getDisplayId()>
SOURCE|<android.widget.RatingBar: float getRating()>
SOURCE|<android.test.ActivityInstrumentationTestCase: android.app.Activity getActivity()>
SOURCE|<com.android.providers.contacts.DefaultCallLogInsertionHelper: com.android.providers.contacts.DefaultCallLogInsertionHelper getInstance(android.content.Context)>
SOURCE|<libcore.icu.NativeDecimalFormat: java.lang.String getNegativePrefix()>
SOURCE|<java.security.cert.CertPathBuilder: java.security.cert.CertPathBuilder getInstance(java.lang.String,java.security.Provider)>
SOURCE|<com.android.systemui.recent.RecentsVerticalScrollView: int getHorizontalFadingEdgeLength()>
SOURCE|<com.android.videoeditor.service.MovieTransition: long getAppDuration()>
SOURCE|<com.android.org.bouncycastle.asn1.LimitedInputStream: int getRemaining()>
SOURCE|<android.widget.CursorAdapter: long getItemId(int)>
SOURCE|<android.net.sip.SipAudioCall: int getState()>
SOURCE|<android.hardware.usb.UsbDevice: int getProductId()>
SOURCE|<com.android.providers.downloads.OpenHelper: android.content.Intent buildViewIntent(android.content.Context,long)>
SOURCE|<android.view.VelocityTracker$Estimator: float getXCoeff(int)>
SOURCE|<android.database.CursorWindow: short getShort(int,int)>
SOURCE|<com.android.gallery3d.filtershow.imageshow.ImageRotate: java.lang.String getName()>
SOURCE|<com.android.server.am.ActivityManagerService: long[] getProcessPss(int[])>
SOURCE|<java.util.AbstractCollection: java.lang.String toString()>
SOURCE|<java.net.SocketImpl: java.lang.String toString()>
SOURCE|<java.security.spec.RSAPrivateKeySpec: java.math.BigInteger getModulus()>
SOURCE|<org.xmlpull.v1.sax2.Driver: java.lang.String getType(int)>
SOURCE|<android.filterfw.core.Frame: long getTimestamp()>
SOURCE|<javax.security.auth.x500.X500Principal: byte[] getEncoded()>
SOURCE|<org.apache.harmony.security.fortress.Engine: org.apache.harmony.security.fortress.Engine$SpiAndProvider getInstance(java.lang.String,java.lang.Object)>
SOURCE|<com.google.common.collect.ImmutableMap: java.lang.String toString()>
SOURCE|<android.net.LocalSocketImpl: android.net.LocalSocketAddress getSockAddress()>
SOURCE|<com.android.internal.app.IUsageStats$Stub: android.os.IBinder asBinder()>
SOURCE|<gov.nist.javax.sip.header.HeaderFactoryImpl: javax.sip.header.RSeqHeader createRSeqHeader(long)>
SOURCE|<android.drm.DrmRights: java.lang.String getAccountId()>
SOURCE|<com.android.providers.contacts.ContactsDatabaseHelper: long getMimeTypeIdForStructuredPostal()>
SOURCE|<android.renderscript.Element: int getVectorSize()>
SOURCE|<com.android.inputmethod.latin.InputPointers: int[] getXCoordinates()>
SOURCE|<com.android.videoeditor.TransitionsAdapter: com.android.videoeditor.TransitionType[] getTransitions()>
SOURCE|<java.text.DecimalFormatSymbols: java.lang.String getCurrencySymbol()>
SOURCE|<android.util.XmlPullAttributes: int getAttributeNameResource(int)>
SOURCE|<java.io.ObjectStreamField: char getTypeCode()>
SOURCE|<com.android.camera.CameraActivity: long getShutterToPictureDisplayedTime()>
SOURCE|<android.filterfw.core.AsyncRunner: android.filterfw.core.FilterGraph getGraph()>
SOURCE|<android.net.ConnectivityManager: android.net.NetworkInfo[] getAllNetworkInfo()>
SOURCE|<android.view.ViewGroup: int getPersistentDrawingCache()>
SOURCE|<android.widget.ExpandableListConnector: int getViewTypeCount()>
SOURCE|<java.security.KeyPairGenerator: java.security.KeyPair generateKeyPair()>
SOURCE|<com.android.internal.telephony.gsm.VoiceMailConstants: java.lang.String getVoiceMailTag(java.lang.String)>
SOURCE|<android.media.SoundPool: int load(android.content.res.AssetFileDescriptor,int)>
SOURCE|<android.view.Window: android.view.Window getContainer()>
SOURCE|<com.google.common.collect.RegularImmutableSortedSet: com.google.common.collect.ImmutableSortedSet headSetImpl(java.lang.Object,boolean)>
SOURCE|<org.apache.http.impl.conn.tsccm.WaitingThread: java.util.concurrent.locks.Condition getCondition()>
SOURCE|<android.os.ServiceManager: android.os.IBinder getService(java.lang.String)>
SOURCE|<com.android.gallery3d.data.MtpImage: com.android.gallery3d.data.MediaDetails getDetails()>
SOURCE|<gov.nist.javax.sip.header.SIPHeaderList: java.util.List subList(int,int)>
SOURCE|<org.json.JSONArray: java.lang.String getString(int)>
SOURCE|<com.android.gallery3d.data.MtpClient: android.mtp.MtpDevice getDevice(java.lang.String)>
SOURCE|<com.android.providers.contacts.ContactsProvider2: java.lang.String[] getDefaultProjection(android.net.Uri)>
SOURCE|<android.net.IThrottleManager$Stub$Proxy: int getCliffLevel(java.lang.String,int)>
SOURCE|<com.android.internal.util.StateMachine$LogRec: java.lang.String getInfo()>
SOURCE|<android.os.Bundle: java.util.ArrayList getIntegerArrayList(java.lang.String)>
SOURCE|<com.android.browser.BreadCrumbView: com.android.browser.BreadCrumbView$Crumb getTopCrumb()>
SOURCE|<com.android.internal.telephony.PhoneProxy: void getEnhancedVoicePrivacy(android.os.Message)>
SOURCE|<com.android.internal.telephony.sip.SipPhone$SipConnection: com.android.internal.telephony.Call$State getState()>
SOURCE|<com.android.contacts.detail.ContactDetailDisplayUtils: android.text.Html$ImageGetter getImageGetter(android.content.Context)>
SOURCE|<com.android.providers.contacts.ContactsDatabaseHelper: long getMimeTypeIdForStructuredName()>
SOURCE|<android.hardware.input.IInputDevicesChangedListener$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
SOURCE|<com.android.deskclock.stopwatch.StopwatchFragment$ImageLabelAdapter: java.lang.String getPackageName(int)>
SOURCE|<android.location.Country: long getTimestamp()>
SOURCE|<com.android.org.bouncycastle.asn1.ASN1OctetString: java.lang.String toString()>
SOURCE|<android.app.LoadedApk: android.app.Application getApplication()>
SOURCE|<android.os.IUserManager$Stub: android.os.IBinder asBinder()>
SOURCE|<gov.nist.javax.sip.message.SIPRequest: java.lang.String getDialogId(boolean)>
SOURCE|<libcore.net.http.HttpsURLConnectionImpl: java.security.Permission getPermission()>
SOURCE|<android.text.PackedObjectVector: java.lang.Object getValue(int,int)>
SOURCE|<android.accounts.AccountManager$AmsTask: android.os.Bundle getResult()>
SOURCE|<android.content.ContentProviderClient: java.lang.String getType(android.net.Uri)>
SOURCE|<android.content.res.TypedArray: float getDimension(int,float)>
SOURCE|<android.app.ActivityManager: void getMyMemoryState(android.app.ActivityManager$RunningAppProcessInfo)>
SOURCE|<java.net.PasswordAuthentication: java.lang.String getUserName()>
SOURCE|<org.apache.harmony.xml.dom.CharacterDataImpl: java.lang.String getNodeValue()>
SOURCE|<com.android.internal.telephony.cdma.CDMAPhone: com.android.internal.telephony.Call getForegroundCall()>
SOURCE|<javax.xml.transform.stream.StreamSource: java.io.InputStream getInputStream()>
SOURCE|<com.android.server.WallpaperManagerService: java.lang.String getName()>
SOURCE|<java.lang.Class: java.io.InputStream getResourceAsStream(java.lang.String)>
SOURCE|<com.google.android.mms.ContentType: java.util.ArrayList getSupportedTypes()>
SOURCE|<com.google.common.collect.MapMakerInternalMap$WeakEntry: long getExpirationTime()>
SOURCE|<java.util.Locale: java.util.Locale getDefault()>
SOURCE|<java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>
SOURCE|<com.android.gallery3d.app.OrientationManager: int getCompensation()>
SOURCE|<com.android.internal.view.menu.ActionMenuItem: android.view.SubMenu getSubMenu()>
SOURCE|<com.android.ex.chips.RecipientEditTextView: com.android.ex.chips.RecipientChip getLastChip()>
SOURCE|<gov.nist.javax.sip.header.AuthenticationInfo: int getNonceCount()>
SOURCE|<com.android.inputmethod.keyboard.internal.KeyboardRow: int getDefaultKeyLabelFlags()>
SOURCE|<com.android.videoeditor.service.MovieTransition: int getBehavior()>
SOURCE|<android.net.wifi.WifiNative: java.lang.String getNetworkVariable(int,java.lang.String)>
SOURCE|<com.android.launcher2.AppsCustomizePagedView: android.view.View getPageAt(int)>
SOURCE|<android.view.View: int getRight()>
SOURCE|<com.android.email.activity.MailboxListFragment: long getAccountId()>
SOURCE|<com.android.internal.util.XmlUtils: java.util.ArrayList readListXml(java.io.InputStream)>
SOURCE|<org.apache.harmony.security.x509.TBSCertificate: org.apache.harmony.security.x501.Name getIssuer()>
SOURCE|<com.android.camera.CameraActivity: long getCaptureStartTime()>
SOURCE|<android.bluetooth.IBluetoothHealth$Stub$Proxy: android.os.ParcelFileDescriptor getMainChannelFd(android.bluetooth.BluetoothDevice,android.bluetooth.BluetoothHealthAppConfiguration)>
SOURCE|<com.android.internal.textservice.ISpellCheckerService$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
SOURCE|<android.media.CamcorderProfile: android.media.CamcorderProfile get(int)>
SOURCE|<com.android.server.wm.WindowManagerService: float getWindowCompatibilityScale(android.os.IBinder)>
SOURCE|<android.content.pm.IPackageManager$Stub$Proxy: java.util.List queryContentProviders(java.lang.String,int,int)>
SOURCE|<android.view.textservice.SuggestionsInfo: int getSuggestionsCount()>
SOURCE|<com.android.gallery3d.app.CommonControllerOverlay: android.view.View getView()>
SOURCE|<android.drm.DrmRights: java.lang.String getSubscriptionId()>
SOURCE|<android.content.res.AssetFileDescriptor: long getLength()>
SOURCE|<android.os.storage.StorageManager: java.util.List access$000(android.os.storage.StorageManager)>
SOURCE|<java.util.concurrent.Phaser: int getRegisteredParties()>
SOURCE|<android.app.ListActivity: android.widget.ListAdapter getListAdapter()>
SOURCE|<android.content.IntentFilter$AuthorityEntry: java.lang.String getHost()>
SOURCE|<android.util.EventLogTags: android.util.EventLogTags$Description get(int)>
SOURCE|<android.graphics.Paint: void getTextPath(java.lang.String,int,int,float,float,android.graphics.Path)>
SOURCE|<com.android.gallery3d.ui.TileImageView$Tile: com.android.gallery3d.ui.TileImageView$Tile getParentTile()>
SOURCE|<org.apache.james.mime4j.field.contenttype.parser.ContentTypeParserTokenManager: org.apache.james.mime4j.field.contenttype.parser.Token getNextToken()>
SOURCE|<com.android.ex.chips.BaseRecipientAdapter: java.util.List access$600(com.android.ex.chips.BaseRecipientAdapter,android.database.Cursor)>
SOURCE|<android.content.IntentFilter$AuthorityEntry: int getPort()>
SOURCE|<android.view.animation.Animation: boolean getFillAfter()>
SOURCE|<android.content.ContentResolver: android.net.Uri insert(android.net.Uri,android.content.ContentValues)>
SOURCE|<com.android.internal.telephony.DataCallState: java.lang.String toString()>
SOURCE|<java.time.Month: java.lang.String getDisplayName(java.time.format.TextStyle,java.util.Locale)>
SOURCE|<android.hardware.Camera$Parameters: int getMaxExposureCompensation()>
SOURCE|<com.android.internal.telephony.PhoneProxy: com.android.internal.telephony.PhoneConstants$DataState getDataConnectionState(java.lang.String)>
SOURCE|<com.android.internal.telephony.PhoneProxy: java.lang.String getIccSerialNumber()>
SOURCE|<android.content.SyncStorageEngine: java.util.ArrayList getAuthorities()>
SOURCE|<com.android.internal.telephony.sip.SipPhone: java.lang.String getLine1AlphaTag()>
SOURCE|<com.google.common.collect.AbstractLinkedIterator: java.lang.Object next()>
SOURCE|<com.android.internal.view.ActionBarPolicy: int getEmbeddedMenuWidthLimit()>
SOURCE|<com.android.systemui.statusbar.tablet.TabletStatusBar: android.view.WindowManager$LayoutParams getSearchLayoutParams(android.view.ViewGroup$LayoutParams)>
SOURCE|<android.graphics.NinePatch: android.graphics.Region getTransparentRegion(android.graphics.Rect)>
SOURCE|<java.security.spec.RSAPrivateCrtKeySpec: java.math.BigInteger getPrimeP()>
SOURCE|<android.media.CameraProfile: int getJpegEncodingQualityParameter(int)>
SOURCE|<com.android.org.bouncycastle.asn1.DERGeneralString: java.lang.String getString()>
SOURCE|<com.adobe.xmp.options.SerializeOptions: int getBaseIndent()>
SOURCE|<java.math.BigInteger: java.math.BigInt getBigInt()>
SOURCE|<java.lang.invoke.ConstantCallSite: java.lang.invoke.MethodHandle getTarget()>
SOURCE|<gov.nist.javax.sip.stack.SIPDialog: javax.sip.address.Address getRemoteTarget()>
SOURCE|<java.util.concurrent.CountDownLatch: long getCount()>
SOURCE|<java.security.Policy: java.security.Policy getPolicy()>
SOURCE|<com.android.contacts.ContactPhotoManager: int getDefaultAvatarResId(android.content.Context,int,boolean)>
SOURCE|<com.android.internal.telephony.gsm.UsimPhoneBookManager: java.util.ArrayList loadEfFilesFromUsim()>
SOURCE|<com.android.calendar.CalendarUtils: android.content.SharedPreferences getSharedPreferences(android.content.Context,java.lang.String)>
SOURCE|<com.android.browser.BrowserBookmarksPage$OpenAllInTabsTask: android.database.Cursor doInBackground(java.lang.Void[])>
SOURCE|<org.apache.http.entity.StringEntity: java.io.InputStream getContent()>
SOURCE|<com.android.launcher2.FolderIcon$FolderRingAnimator: float getOuterRingSize()>
SOURCE|<android.text.method.MetaKeyKeyListener: int getMetaState(java.lang.CharSequence,int)>
SOURCE|<android.media.videoeditor.VideoEditorImpl: android.media.videoeditor.AudioTrack getAudioTrack(java.lang.String)>
SOURCE|<android.app.backup.IRestoreSession$Stub: android.os.IBinder asBinder()>
SOURCE|<com.android.browser.Preloader$PreloaderSession: com.android.browser.PreloadedTabControl getTabControl()>
SOURCE|<gov.nist.javax.sip.DialogTimeoutEvent: javax.sip.Dialog getDialog()>
SOURCE|<android.view.GLES20TextureLayer: android.view.HardwareCanvas getCanvas()>
SOURCE|<java.security.cert.PKIXRevocationChecker: java.util.Map getOcspResponses()>
SOURCE|<android.provider.Contacts$Phones: java.lang.CharSequence getDisplayLabel(android.content.Context,int,java.lang.CharSequence)>
SOURCE|<android.view.View: int getVisibility()>
SOURCE|<com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata: java.lang.String getId()>
SOURCE|<android.os.Debug: java.lang.String getCallers(int)>
SOURCE|<android.content.ContextWrapper: android.content.ContentResolver getContentResolver()>
SOURCE|<android.text.Layout: int getOffsetToLeftOf(int)>
SOURCE|<java.net.HttpURLConnection: long getHeaderFieldDate(java.lang.String,long)>
SOURCE|<com.android.contacts.util.StreamItemPhotoEntry: long getId()>
SOURCE|<android.bluetooth.BluetoothAdapter: java.lang.String getName()>
SOURCE|<android.app.backup.IBackupManager$Stub$Proxy: java.lang.String getDestinationString(java.lang.String)>
SOURCE|<java.security.UnresolvedPermission: java.lang.String getActions()>
SOURCE|<gov.nist.javax.sip.header.ReplyTo: java.lang.String getDisplayName()>
SOURCE|<android.view.DragEvent: boolean getResult()>
SOURCE|<android.app.AppGlobals: java.lang.String getInitialPackage()>
SOURCE|<android.inputmethodservice.Keyboard: int getHeight()>
SOURCE|<java.util.TimerTask: long scheduledExecutionTime()>
SOURCE|<java.math.BigInteger: int getFirstNonzeroDigit()>
SOURCE|<android.filterfw.core.CachedFrameManager: android.filterfw.core.Frame newBoundFrame(android.filterfw.core.FrameFormat,int,long)>
SOURCE|<com.android.browser.AutoFillProfileDatabase: com.android.browser.AutoFillProfileDatabase getInstance(android.content.Context)>
SOURCE|<com.android.internal.policy.impl.keyguard.KeyguardUpdateMonitor: com.android.internal.telephony.IccCardConstants$State getSimState()>
SOURCE|<android.os.INetworkManagementService$Stub$Proxy: java.lang.String[] listInterfaces()>
SOURCE|<com.android.deskclock.stopwatch.StopwatchFragment$ImageLabelAdapter: com.android.deskclock.stopwatch.StopwatchFragment$ImageLabelAdapter getShowAllAdapter()>
SOURCE|<java.io.InvalidClassException: java.lang.String getMessage()>
SOURCE|<android.view.View: boolean getLocalVisibleRect(android.graphics.Rect)>
SOURCE|<com.android.gallery3d.picasasource.PicasaSource: long getPicasaId(com.android.gallery3d.data.MediaObject)>
SOURCE|<com.android.inputmethod.latin.Suggest: java.util.concurrent.ConcurrentHashMap getUnigramDictionaries()>
SOURCE|<java.util.zip.Inflater: int getTotalIn()>
SOURCE|<java.security.AlgorithmParameterGenerator: java.security.AlgorithmParameterGenerator getInstance(java.lang.String,java.security.Provider)>
SOURCE|<com.android.server.display.DisplayDevice: android.os.IBinder getDisplayTokenLocked()>
SOURCE|<android.telephony.gsm.SmsMessage: java.lang.String getEmailBody()>
SOURCE|<java.lang.String: byte[] getBytes(java.lang.String)>
SOURCE|<android.app.ApplicationPackageManager: void getPackageSizeInfo(java.lang.String,int,android.content.pm.IPackageStatsObserver)>
SOURCE|<org.ccil.cowan.tagsoup.AttributesImpl: java.lang.String getType(java.lang.String)>
SOURCE|<android.content.SyncStorageEngine: int getIsSyncable(android.accounts.Account,int,java.lang.String)>
SOURCE|<com.android.contacts.list.CustomContactListFilterActivity$DisplayAdapter: int getChildrenCount(int)>
SOURCE|<android.telephony.SignalStrength: int getGsmSignalStrength()>
SOURCE|<android.view.ViewRootImpl: android.view.WindowLeaked getLocation()>
SOURCE|<android.content.SyncStorageEngine: android.util.Pair getBackoff(android.accounts.Account,int,java.lang.String)>
SOURCE|<android.view.accessibility.AccessibilityEvent: int getEventType()>
SOURCE|<com.android.contacts.model.AccountTypeManagerImpl: java.util.Map getUsableInvitableAccountTypes()>
SOURCE|<com.android.calendar.alerts.AlertReceiver: android.content.Intent createEmailIntent(android.content.Context,long,java.lang.String)>
SOURCE|<com.google.android.mms.pdu.SendReq: com.google.android.mms.pdu.EncodedStringValue[] getCc()>
SOURCE|<org.apache.harmony.xnet.provider.jsse.OpenSSLDSAPrivateKey: java.security.interfaces.DSAParams getParams()>
SOURCE|<org.xml.sax.helpers.ParserAdapter$AttributeListAdapter: java.lang.String getURI(int)>
SOURCE|<com.android.contacts.calllog.PhoneNumberHelper: java.lang.CharSequence getDisplayNumber(java.lang.CharSequence,java.lang.CharSequence)>
SOURCE|<android.widget.TextView: float getTextSize()>
SOURCE|<javax.xml.transform.sax.SAXResult: org.xml.sax.ext.LexicalHandler getLexicalHandler()>
SOURCE|<javax.crypto.spec.PBEKeySpec: char[] getPassword()>
SOURCE|<com.android.mms.ui.UriImage: int getHeight()>
SOURCE|<org.apache.harmony.luni.lang.reflect.ImplForVariable: java.lang.reflect.Type[] getBounds()>
SOURCE|<com.android.server.am.ActivityRecord: com.android.server.am.UriPermissionOwner getUriPermissionsLocked()>
SOURCE|<org.apache.harmony.xnet.provider.jsse.SSLSocketWrapper: boolean getKeepAlive()>
SOURCE|<android.database.CursorWrapper: boolean getWantsAllOnMoveCalls()>
SOURCE|<com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata: java.util.List intlNumberFormats()>
SOURCE|<com.android.phone.ContactsAsyncHelper$ImageTracker: android.net.Uri getPhotoUri()>
SOURCE|<org.apache.http.message.BasicHeaderValueParser: org.apache.http.NameValuePair[] parseParameters(org.apache.http.util.CharArrayBuffer,org.apache.http.message.ParserCursor)>
SOURCE|<com.android.ex.variablespeed.EngineParameters: int getAudioStreamType()>
SOURCE|<com.android.camera.drawable.TextDrawable: int getIntrinsicHeight()>
SOURCE|<android.filterfw.core.FrameFormat: int getBytesPerSample()>
SOURCE|<android.view.accessibility.IAccessibilityManagerClient$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
SOURCE|<android.media.videoeditor.MediaProperties: int getSupportedAudioTrackCount()>
SOURCE|<java.security.spec.EllipticCurve: java.math.BigInteger getB()>
SOURCE|<com.android.inputmethod.keyboard.internal.KeyboardCodesSet: int getCode(java.lang.String)>
SOURCE|<com.android.mms.dom.smil.ElementTimeImpl: short getFill()>
SOURCE|<java.time.format.DateTimeFormatter: java.time.temporal.TemporalAccessor parseBest(java.lang.CharSequence,java.time.temporal.TemporalQuery[])>
SOURCE|<org.apache.harmony.security.asn1.ASN1Any: java.lang.Object getDecodedObject(org.apache.harmony.security.asn1.BerInputStream)>
SOURCE|<android.net.WebAddress: java.lang.String getScheme()>
SOURCE|<android.provider.MediaStore$Images$Media: android.graphics.Bitmap getBitmap(android.content.ContentResolver,android.net.Uri)>
SOURCE|<com.android.internal.view.IInputMethodManager$Stub$Proxy: java.util.List getEnabledInputMethodSubtypeList(android.view.inputmethod.InputMethodInfo,boolean)>
SOURCE|<java.lang.reflect.Field: java.lang.annotation.Annotation[] getDeclaredAnnotations()>
SOURCE|<org.apache.http.impl.auth.RFC2617Scheme: void parseChallenge(org.apache.http.util.CharArrayBuffer,int,int)>
SOURCE|<java.security.KeyStore$Builder$BuilderImpl: java.security.KeyStore$ProtectionParameter getProtectionParameter(java.lang.String)>
SOURCE|<android.webkit.WebViewClassic: android.webkit.WebChromeClient getWebChromeClient()>
SOURCE|<com.android.calendar.Utils: int getDisplayColorFromColor(int)>
SOURCE|<android.webkit.WebSettingsClassic$AutoFillProfile: java.lang.String getEmailAddress()>
SOURCE|<com.android.internal.telephony.IPhoneSubInfo$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
SOURCE|<com.android.gallery3d.data.FilterEmptyPromptSet: java.lang.String getName()>
SOURCE|<android.media.videoeditor.Transition: long getDuration()>
SOURCE|<java.security.spec.RSAKeyGenParameterSpec: int getKeysize()>
SOURCE|<com.android.emailcommon.internet.Rfc822Output: java.lang.String getHtmlBody(java.lang.String)>
SOURCE|<java.security.spec.MGF1ParameterSpec: java.lang.String getDigestAlgorithm()>
SOURCE|<android.media.videoeditor.AudioTrack: long getTimelineDuration()>
SOURCE|<com.android.providers.contacts.ContactsProvider2$StructuredNameLookupBuilder: java.lang.String[] getCommonNicknameClusters(java.lang.String)>
SOURCE|<com.google.common.collect.RegularImmutableList$1: java.lang.Object get(int)>
SOURCE|<com.android.gallery3d.ui.CropView$AnimationController: float getScale()>
SOURCE|<android.nfc.Tag: java.lang.String[] getTechList()>
SOURCE|<com.android.contacts.list.PostalAddressListAdapter: android.net.Uri getDataUri(int)>
SOURCE|<android.view.ViewConfiguration: int getPressedStateDuration()>
SOURCE|<com.android.internal.telephony.PhoneProxy: boolean getDataRoamingEnabled()>
SOURCE|<android.view.inputmethod.CompletionInfo: long getId()>
SOURCE|<com.android.systemui.screenshot.GlobalScreenshot$4: float getInterpolation(float)>
SOURCE|<com.android.internal.telephony.sip.SipPhone: java.lang.String getSipUri()>
SOURCE|<gov.nist.javax.sip.stack.SIPDialog: java.util.Iterator getRouteSet()>
SOURCE|<com.android.gallery3d.data.TagClustering: java.util.ArrayList getCluster(int)>
SOURCE|<com.android.server.DevicePolicyManagerService: int getPasswordMinimumLetters(android.content.ComponentName,int)>
SOURCE|<org.apache.harmony.security.x509.TBSCertList: java.util.List getRevokedCertificates()>
SOURCE|<com.google.common.collect.ForwardingMultimap: java.util.Set keySet()>
SOURCE|<android.app.ContextImpl$ApplicationContentResolver: java.util.List getPeriodicSyncs(android.accounts.Account,java.lang.String)>
SOURCE|<android.content.ContentValues: java.lang.Double getAsDouble(java.lang.String)>
SOURCE|<android.content.IntentSender: int getCreatorUid()>
SOURCE|<com.android.internal.telephony.gsm.SimTlv: int getTag()>
SOURCE|<com.android.deskclock.timer.CountingTimerView$UnsignedTime: float calcTotalWidth(java.lang.String)>
SOURCE|<com.android.email.mail.store.ServiceStore: android.os.Bundle autoDiscover(android.content.Context,java.lang.String,java.lang.String)>
SOURCE|<android.graphics.drawable.GradientDrawable$GradientState: int getChangingConfigurations()>
SOURCE|<com.android.contacts.model.account.AccountType: java.lang.String getEditContactActivityClassName()>
SOURCE|<java.text.BreakIterator: java.text.BreakIterator getSentenceInstance()>
SOURCE|<com.android.exchange.adapter.CalendarSyncAdapter: java.lang.String getCollectionName()>
SOURCE|<android.view.Choreographer: long getFrameDelay()>
SOURCE|<com.android.providers.calendar.SQLiteContentProvider: int update(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[])>
SOURCE|<android.preference.PreferenceGroup: android.preference.Preference getPreference(int)>
SOURCE|<com.android.bluetooth.pbap.BluetoothPbapUtils: java.lang.String getProfileName(android.content.Context)>
SOURCE|<java.security.spec.PSSParameterSpec: java.lang.String getDigestAlgorithm()>
SOURCE|<com.android.mms.data.Conversation: long getThreadId()>
SOURCE|<org.apache.http.conn.scheme.SchemeRegistry: org.apache.http.conn.scheme.Scheme getScheme(java.lang.String)>
SOURCE|<com.android.server.accessibility.AccessibilityManagerService$Service: android.accessibilityservice.AccessibilityServiceInfo getServiceInfo()>
SOURCE|<java.util.jar.JarEntry: java.security.CodeSigner[] getCodeSigners()>
SOURCE|<android.view.TextureView: android.graphics.Bitmap getBitmap(int,int)>
SOURCE|<java.text.DateFormat: java.text.DateFormat getDateTimeInstance(int,int)>
SOURCE|<org.apache.harmony.security.x509.Extension: org.apache.harmony.security.x509.BasicConstraints getBasicConstraintsValue()>
SOURCE|<com.android.deskclock.Alarm$DaysOfWeek: java.util.HashSet getSetDays()>
SOURCE|<android.content.ContextWrapper: android.content.pm.PackageManager getPackageManager()>
SOURCE|<java.util.concurrent.ForkJoinPool: boolean createWorker()>
SOURCE|<android.view.Window: android.content.Context getContext()>
SOURCE|<com.android.vcard.VCardEntry$AnniversaryData: com.android.vcard.VCardEntry$EntryLabel getEntryLabel()>
SOURCE|<com.android.internal.telephony.gsm.SIMRecords: java.lang.String getOperatorNumeric()>
SOURCE|<org.apache.commons.logging.LogFactory: org.apache.commons.logging.Log getLog(java.lang.String)>
SOURCE|<com.android.server.location.GeocoderProxy: java.lang.String getConnectedPackageName()>
SOURCE|<android.app.ActivityManagerProxy: android.os.Debug$MemoryInfo[] getProcessMemoryInfo(int[])>
SOURCE|<com.google.common.collect.MapMaker: com.google.common.base.Equivalence getValueEquivalence()>
SOURCE|<javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String,java.security.Provider)>
SOURCE|<com.android.calendar.selectcalendars.SelectSyncedCalendarsMultiAccountAdapter: android.view.View newChildView(android.content.Context,android.database.Cursor,boolean,android.view.ViewGroup)>
SOURCE|<javax.security.cert.X509Certificate: javax.security.cert.X509Certificate getInstance(byte[])>
SOURCE|<com.android.email.activity.RecentMailboxManager: java.util.ArrayList getMostRecent(long,boolean)>
SOURCE|<com.android.gallery3d.app.AbstractGalleryActivity: com.android.gallery3d.util.ThreadPool getThreadPool()>
SOURCE|<android.server.search.Searchables: android.app.SearchableInfo getSearchableInfo(android.content.ComponentName)>
SOURCE|<java.lang.ThreadGroup: java.lang.String getName()>
SOURCE|<com.google.android.apps.lightcycle.panorama.VideoFrameProcessor: float[] getRotationEstimate()>
SOURCE|<android.net.wifi.WifiInfo: android.net.wifi.WifiSsid getWifiSsid()>
SOURCE|<com.android.providers.contacts.ContactLocaleUtils$ChineseContactUtils: java.util.Iterator getNameLookupKeys(java.lang.String)>
SOURCE|<com.android.mms.MmsConfig: java.lang.String getHttpParamsLine1Key()>
SOURCE|<dalvik.system.PathClassLoader: java.lang.Package getPackage(java.lang.String)>
SOURCE|<android.view.MotionEvent: int getToolType(int)>
SOURCE|<java.lang.ClassLoader: java.lang.Class defineClass(byte[],int,int)>
SOURCE|<android.text.StaticLayout: boolean getLineContainsTab(int)>
SOURCE|<com.android.deskclock.worldclock.CitiesActivity$CityAdapter: int getPositionForSection(int)>
SOURCE|<com.android.org.bouncycastle.asn1.DERUTCTime: java.lang.String getAdjustedTime()>
SOURCE|<com.android.gallery3d.picasasource.PicasaAlbum: int getMediaItemCount()>
SOURCE|<android.widget.TextView: int getFadeHeight(boolean)>
SOURCE|<java.lang.reflect.Method: java.lang.Class[] getExceptionTypes()>
SOURCE|<java.security.AlgorithmParameterGenerator: java.security.AlgorithmParameterGenerator getInstance(java.lang.String)>
SOURCE|<com.android.providers.calendar.QueryParameterUtils: java.lang.String getQueryParameter(android.net.Uri,java.lang.String)>
SOURCE|<com.android.mms.MmsConfig: int getMinMessageCountPerThread()>
SOURCE|<libcore.net.url.FtpURLConnection: java.security.Permission getPermission()>
SOURCE|<com.android.email.activity.MessageOrderManager: android.database.Cursor access$500(com.android.email.activity.MessageOrderManager)>
SOURCE|<com.android.mms.util.ThumbnailManager: java.lang.String getTag()>
SOURCE|<java.util.concurrent.ThreadPoolExecutor: int getActiveCount()>
SOURCE|<com.android.contacts.list.ContactBrowseListFragment: com.android.contacts.list.ContactListFilter getFilter()>
SOURCE|<android.net.Uri$StringUri: java.lang.String getEncodedAuthority()>
SOURCE|<android.view.ViewConfiguration: int getMinimumFlingVelocity()>
SOURCE|<java.io.WriteAbortedException: java.lang.Throwable getCause()>
SOURCE|<android.preference.GenericInflater: android.content.Context getContext()>
SOURCE|<android.view.inputmethod.InputMethodManager: android.view.inputmethod.InputMethodSubtype getCurrentInputMethodSubtype()>
SOURCE|<java.security.cert.CertStore: java.util.Collection getCRLs(java.security.cert.CRLSelector)>
SOURCE|<java.security.spec.RSAMultiPrimePrivateCrtKeySpec: java.math.BigInteger getPublicExponent()>
SOURCE|<android.widget.CalendarView$WeekView: int getMonthOfFirstWeekDay()>
SOURCE|<com.android.camera.CameraScreenNail: int getHeight()>
SOURCE|<java.io.Writer: java.io.Writer append(java.lang.CharSequence,int,int)>
SOURCE|<android.os.Debug: int getGlobalFreedCount()>
SOURCE|<android.provider.ContactsContract$RawContacts: android.net.Uri getContactLookupUri(android.content.ContentResolver,android.net.Uri)>
SOURCE|<android.graphics.Canvas: boolean getClipBounds(android.graphics.Rect)>
SOURCE|<android.webkit.WebSettings: void setBlockNetworkLoads(boolean)>
SOURCE|<android.support.v4.net.ConnectivityManagerCompat: android.net.NetworkInfo getNetworkInfoFromBroadcast(android.net.ConnectivityManager,android.content.Intent)>
SOURCE|<java.net.URI: java.net.URI parseServerAuthority()>
SOURCE|<com.android.videoeditor.service.VideoEditorProject: com.android.videoeditor.service.MovieOverlay getOverlay(java.lang.String,java.lang.String)>
SOURCE|<android.os.IRemoteCallback$Stub: android.os.IBinder asBinder()>
SOURCE|<android.filterfw.core.Scheduler: android.filterfw.core.FilterGraph getGraph()>
SOURCE|<java.time.zone.ZoneOffsetTransitionRule: java.time.ZoneOffset getStandardOffset()>
SOURCE|<com.android.browser.SnapshotTab: long getDateCreated()>
SOURCE|<com.android.server.ConnectivityService: android.net.ProxyProperties getProxy()>
SOURCE|<javax.crypto.Cipher: byte[] doFinal(byte[])>
SOURCE|<android.telephony.SmsMessage$SubmitPdu: java.lang.String toString()>
SOURCE|<com.android.internal.telephony.cdma.RuimRecords: java.lang.String getPrlVersion()>
SOURCE|<android.media.MediaRouter$RouteInfo: java.lang.CharSequence getName(android.content.res.Resources)>
SOURCE|<android.app.Instrumentation: android.app.Instrumentation$ActivityResult execStartActivity(android.content.Context,android.os.IBinder,android.os.IBinder,android.app.Activity,android.content.Intent,int,android.os.Bundle)>
SOURCE|<android.content.pm.ContainerEncryptionParams: java.security.spec.AlgorithmParameterSpec getMacSpec()>
SOURCE|<com.google.android.apps.lightcycle.storage.LocalFileStorageManager: java.io.File getSessionBaseDirectory()>
SOURCE|<com.android.server.accessibility.ScreenMagnifier$MagnificationController: float getMagnifiedRegionCenterY()>
SOURCE|<java.nio.DirectByteBuffer: double getDouble(int)>
SOURCE|<com.android.calendar.CalendarUtils$TimeZoneUtils: java.lang.String getTimeZone(android.content.Context,java.lang.Runnable)>
SOURCE|<android.graphics.drawable.LayerDrawable: int getOpacity()>
SOURCE|<org.apache.http.params.AbstractHttpParams: long getLongParameter(java.lang.String,long)>
SOURCE|<com.android.contacts.detail.StreamItemAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)>
SOURCE|<com.coremedia.iso.IsoFile: long getSize()>
SOURCE|<android.app.LoadedApk: java.lang.String getResDir()>
SOURCE|<com.android.contacts.util.LocalizedNameResolver: java.lang.String getAllContactsName(android.content.Context,java.lang.String)>
SOURCE|<android.test.suitebuilder.TestSuiteBuilder: java.lang.String getSuiteName()>
SOURCE|<android.view.accessibility.AccessibilityNodeInfo: long getParentNodeId()>
SOURCE|<org.apache.http.util.VersionInfo: java.lang.String getTimestamp()>
SOURCE|<android.bluetooth.BluetoothAdapter: android.os.ParcelUuid[] getUuids()>
SOURCE|<android.webkit.WebSettings: java.lang.String getStandardFontFamily()>
SOURCE|<java.text.AttributedString$AttributedIterator: int getRunStart()>
SOURCE|<java.lang.reflect.Executable: java.lang.reflect.AnnotatedType getAnnotatedReceiverType()>
SOURCE|<android.hardware.display.IDisplayManager$Stub$Proxy: int[] getDisplayIds()>
SOURCE|<com.android.gallery3d.picasasource.PicasaImage: long getAlbumId()>
SOURCE|<gov.nist.javax.sip.header.Via: java.lang.String getTransport()>
SOURCE|<android.app.IThumbnailRetriever$Stub$Proxy: android.graphics.Bitmap getThumbnail(int)>
SOURCE|<com.android.calendar.CalendarController: long getTime()>
SOURCE|<org.xml.sax.helpers.ParserAdapter$AttributeListAdapter: java.lang.String getValue(java.lang.String,java.lang.String)>
SOURCE|<com.android.internal.app.ActionBarImpl$TabImpl: java.lang.CharSequence getText()>
SOURCE|<com.android.internal.telephony.gsm.GsmCall: java.util.List getConnections()>
SOURCE|<android.content.SyncManager: android.content.SyncStorageEngine getSyncStorageEngine()>
SOURCE|<android.content.ContextWrapper: android.content.Context createPackageContextAsUser(java.lang.String,int,android.os.UserHandle)>
SOURCE|<java.net.JarURLConnection: java.security.cert.Certificate[] getCertificates()>
SOURCE|<android.telephony.CellSignalStrengthCdma: int getAsuLevel()>
SOURCE|<android.net.wifi.p2p.nsd.WifiP2pServiceRequest: java.lang.String getSupplicantQuery()>
SOURCE|<android.content.Intent: android.content.ComponentName getComponent()>
SOURCE|<android.view.ScaleGestureDetector: float getPreviousSpanY()>
SOURCE|<com.android.nfc.NfcService: com.android.nfc.DeviceHost$LlcpConnectionlessSocket createLlcpConnectionLessSocket(int,java.lang.String)>
SOURCE|<java.util.logging.Formatter: java.lang.String getHead(java.util.logging.Handler)>
SOURCE|<com.android.server.AppWidgetService: int[] getAppWidgetIds(android.content.ComponentName)>
SOURCE|<java.security.cert.X509CRLSelector: java.util.Collection getIssuerNames()>
SOURCE|<com.android.emailcommon.service.AccountServiceProxy: int getAccountColor(long)>
SOURCE|<com.android.internal.widget.ActionBarView: java.lang.CharSequence getSubtitle()>
SOURCE|<android.view.ViewConfiguration: int getHoverTapTimeout()>
SOURCE|<android.util.TimeUtils: java.util.ArrayList getTimeZones(java.lang.String)>
SOURCE|<com.android.contacts.list.CustomContactListFilterActivity$DisplayAdapter: long getGroupId(int)>
SOURCE|<android.renderscript.RSSurfaceView: android.renderscript.RenderScriptGL getRenderScriptGL()>
SOURCE|<android.provider.Settings$Global: java.lang.String getBluetoothA2dpSinkPriorityKey(java.lang.String)>
SOURCE|<com.android.systemui.statusbar.NotificationData: com.android.systemui.statusbar.NotificationData$Entry get(int)>
SOURCE|<java.security.cert.X509Certificate: java.util.Collection getSubjectAlternativeNames()>
SOURCE|<android.test.InstrumentationTestRunner: junit.framework.TestSuite getTestSuite()>
SOURCE|<com.android.browser.Controller: com.android.browser.Tab getCurrentTab()>
SOURCE|<android.net.IConnectivityManager$Stub$Proxy: android.net.NetworkInfo getActiveNetworkInfoForUid(int)>
SOURCE|<com.android.mms.model.RegionModel: java.lang.String getRegionId()>
SOURCE|<libcore.net.http.HttpsURLConnectionImpl: java.lang.String getContentType()>
SOURCE|<com.android.email.activity.MailboxListFragment: long getSelectedMailboxId()>
SOURCE|<org.apache.http.impl.io.HttpRequestParser: org.apache.http.HttpMessage parseHead(org.apache.http.io.SessionInputBuffer)>
SOURCE|<android.media.ExifInterface: long getDateTime()>
SOURCE|<org.apache.http.message.BasicLineParser: org.apache.http.ProtocolVersion parseProtocolVersion(java.lang.String,org.apache.http.message.LineParser)>
SOURCE|<com.android.gallery3d.common.EntrySchema: com.android.gallery3d.common.Entry valuesToObject(android.content.ContentValues,com.android.gallery3d.common.Entry)>
SOURCE|<com.android.org.bouncycastle.asn1.ASN1TaggedObject: com.android.org.bouncycastle.asn1.ASN1Encodable getObjectParser(int,boolean)>
SOURCE|<com.android.gallery3d.data.Face: java.lang.String getName()>
SOURCE|<com.android.mms.MmsConfig: int getMaxSizeScaleForPendingMmsAllowed()>
SOURCE|<com.android.browser.TitleBar: com.android.browser.UiController getUiController()>
SOURCE|<java.security.UnresolvedPermission: java.lang.String getUnresolvedType()>
SOURCE|<java.time.LocalTime: int getHour()>
SOURCE|<android.net.wifi.WifiManager: android.net.wifi.WifiManager$MulticastLock createMulticastLock(java.lang.String)>
SOURCE|<android.net.LinkProperties: java.util.Collection getDnses()>
SOURCE|<android.emoji.EmojiFactory: java.lang.String getVendorSpecificPuaFromAndroidPua(java.lang.String)>
SOURCE|<android.net.wifi.p2p.nsd.WifiP2pServiceResponse: int getStatus()>
SOURCE|<com.google.common.collect.ImmutableEntry: java.lang.Object setValue(java.lang.Object)>
SOURCE|<android.media.SoundPool: int load(java.io.FileDescriptor,long,long,int)>
SOURCE|<android.net.Uri$OpaqueUri: java.lang.String getHost()>
SOURCE|<android.widget.ListView: boolean getItemsCanFocus()>
SOURCE|<com.android.gallery3d.filtershow.presets.ImagePreset: com.android.gallery3d.filtershow.cache.ImageLoader getImageLoader()>
SOURCE|<android.preference.Preference: java.lang.String getDependency()>
SOURCE|<org.kxml2.io.KXmlParser: java.lang.String getPublicId()>
SOURCE|<com.android.inputmethod.keyboard.internal.PointerTrackerQueue: com.android.inputmethod.keyboard.internal.PointerTrackerQueue$Element getOldestElement()>
SOURCE|<java.text.BreakIterator: java.text.BreakIterator getCharacterInstance()>
SOURCE|<android.view.inputmethod.InputMethodSubtype: java.lang.String getExtraValueOf(java.lang.String)>
SOURCE|<android.view.PointerIcon: android.view.PointerIcon getSystemIcon(android.content.Context,int)>
SOURCE|<org.apache.harmony.xnet.provider.jsse.SSLServerSocketImpl: java.lang.String[] getSupportedCipherSuites()>
SOURCE|<com.android.internal.telephony.cdma.CdmaServiceStateTracker: int getCurrentDataConnectionState()>
SOURCE|<gov.nist.javax.sip.header.RequestLine: java.lang.String getVersionMajor()>
SOURCE|<com.android.videoeditor.OverlayType: int getType()>
SOURCE|<com.android.common.widget.CompositeCursorAdapter: int getCount()>
SOURCE|<com.android.server.pm.UserManagerService: int[] getUserIds()>
SOURCE|<gov.nist.javax.sip.stack.SIPDialog: java.lang.String getEarlyDialogId()>
SOURCE|<android.test.IsolatedContext$MockAccountManager: android.accounts.AccountManagerFuture getAccountsByTypeAndFeatures(java.lang.String,java.lang.String[],android.accounts.AccountManagerCallback,android.os.Handler)>
SOURCE|<com.android.contacts.model.account.AccountType: java.lang.String getViewContactNotifyServicePackageName()>
SOURCE|<com.android.emailcommon.service.AccountServiceProxy: java.lang.String getDeviceId()>
SOURCE|<android.webkit.WebViewClassic: int getHeight()>
SOURCE|<com.android.email.activity.UIControllerTwoPane: long getUIAccountId()>
SOURCE|<java.time.chrono.HijrahChronology: int getDayOfYear(int,int)>
SOURCE|<android.net.wifi.WifiInfo: boolean getMeteredHint()>
SOURCE|<android.text.method.MultiTapKeyListener: android.text.method.MultiTapKeyListener getInstance(boolean,android.text.method.TextKeyListener$Capitalize)>
SOURCE|<gov.nist.javax.sip.header.ims.PMediaAuthorization: java.lang.String getToken()>
SOURCE|<android.app.admin.DevicePolicyManager: long getPasswordExpirationTimeout(android.content.ComponentName)>
SOURCE|<com.android.internal.telephony.SmsResponse: java.lang.String toString()>
SOURCE|<android.inputmethodservice.InputMethodService: android.view.inputmethod.EditorInfo getCurrentInputEditorInfo()>
SOURCE|<com.android.browser.provider.BrowserProvider2: int getUrlCount(android.database.sqlite.SQLiteDatabase,java.lang.String,java.lang.String)>
SOURCE|<com.android.nfc.NfcService: byte[] doTransceive(int,byte[])>
SOURCE|<java.util.TimeZone: java.util.TimeZone getDefault()>
SOURCE|<java.net.InetSocketAddress: java.lang.String getHostName()>
SOURCE|<java.util.concurrent.Semaphore: int getQueueLength()>
SOURCE|<android.media.videoeditor.EffectKenBurns: android.graphics.Rect getStartRect()>
SOURCE|<android.widget.FrameLayout: android.graphics.drawable.Drawable getForeground()>
SOURCE|<com.google.android.picasasync.PicasaJsonReaderParser$BooleanObjectField: int getValue(boolean)>
SOURCE|<android.os.UserManager: int getUserCount()>
SOURCE|<android.net.Proxy: int getDefaultPort()>
SOURCE|<java.io.LineNumberInputStream: int getLineNumber()>
SOURCE|<java.util.concurrent.ConcurrentLinkedDeque: java.lang.Object getFirst()>
SOURCE|<android.renderscript.Element: android.renderscript.Element$DataKind getDataKind()>
SOURCE|<com.android.internal.telephony.gsm.SpnOverride: java.lang.String getSpn(java.lang.String)>
SOURCE|<android.widget.SimpleExpandableListAdapter: long getChildId(int,int)>
SOURCE|<java.text.ChoiceFormat: double[] getLimits()>
SOURCE|<java.net.HttpCookie: java.lang.String getPath()>
SOURCE|<com.android.internal.view.menu.MenuItemImpl: java.lang.CharSequence getTitleCondensed()>
SOURCE|<android.net.IThrottleManager$Stub$Proxy: long getCliffThreshold(java.lang.String,int)>
SOURCE|<com.google.common.collect.AbstractMultimap: java.util.Collection createCollection(java.lang.Object)>
SOURCE|<java.util.ResourceBundle: java.util.ResourceBundle getBundle(java.lang.String,java.util.ResourceBundle$Control)>
SOURCE|<android.nfc.Tag: int getServiceHandle()>
SOURCE|<android.accounts.AccountManagerService: android.accounts.Account[] getAccounts(int)>
SOURCE|<android.content.CursorLoader: android.database.Cursor loadInBackground()>
SOURCE|<com.android.launcher2.PagedView: float getScrollProgress(int,android.view.View,int)>
SOURCE|<com.android.deskclock.widget.multiwaveview.Ease$Quart$3: float getInterpolation(float)>
SOURCE|<java.nio.ReadOnlyDirectByteBuffer: byte[] protectedArray()>
SOURCE|<android.telephony.SmsMessage: android.telephony.SmsMessage$MessageClass getMessageClass()>
SOURCE|<com.android.contacts.editor.LabeledEditorView: com.android.contacts.model.RawContactDelta$ValuesDelta getEntry()>
SOURCE|<com.android.gallery3d.filtershow.filters.ImageFilterRS: android.renderscript.RenderScript getRenderScriptContext()>
SOURCE|<com.android.vcard.VCardParserImpl_V30: java.lang.String getBase64(java.lang.String)>
SOURCE|<android.view.DisplayInfo: int getNaturalWidth()>
SOURCE|<java.lang.reflect.Executable: java.lang.reflect.Type[] getGenericParameterTypes()>
SOURCE|<android.net.Proxy: org.apache.http.conn.routing.HttpRoutePlanner getAndroidProxySelectorRoutePlanner(android.content.Context)>
SOURCE|<org.apache.harmony.security.asn1.BerInputStream: byte[] getEncoded()>
SOURCE|<com.android.email.mail.store.Pop3Store$Pop3Folder: com.android.emailcommon.mail.Message[] getMessages(int,int,com.android.emailcommon.mail.Folder$MessageRetrievalListener)>
SOURCE|<android.telephony.PhoneNumberUtils: byte[] numberToCalledPartyBCD(java.lang.String)>
SOURCE|<java.time.format.DateTimeFormatter: java.time.format.DateTimeFormatterBuilder$CompositePrinterParser toPrinterParser(boolean)>
SOURCE|<com.android.internal.backup.IBackupTransport$Stub$Proxy: android.content.Intent configurationIntent()>
SOURCE|<android.telephony.TelephonyManager: int getLteOnCdmaMode()>
SOURCE|<android.webkit.Plugin: java.lang.String getDescription()>
SOURCE|<com.android.browser.SnapshotTab$LoadData: android.database.Cursor doInBackground(java.lang.Void[])>
SOURCE|<java.lang.reflect.Field: short getShort(java.lang.Object)>
SOURCE|<java.time.OffsetDateTime: int getDayOfMonth()>
SOURCE|<com.android.server.sip.SipSessionGroup: java.lang.String getLocalProfileUri()>
SOURCE|<org.apache.harmony.security.provider.cert.X509CertImpl: java.util.Collection getIssuerAlternativeNames()>
SOURCE|<android.view.ViewRootImpl: android.view.accessibility.AccessibilityNodeInfo getAccessibilityFocusedVirtualView()>
SOURCE|<com.android.internal.telephony.gsm.SmsMessage: int getStatus()>
SOURCE|<java.io.EmulatedFields$ObjectSlot: java.io.ObjectStreamField getField()>
SOURCE|<android.graphics.drawable.PictureDrawable: int getIntrinsicHeight()>
SOURCE|<android.os.Bundle: java.lang.Byte getByte(java.lang.String,byte)>
SOURCE|<com.android.internal.telephony.AdnRecord: java.lang.String toString()>
SOURCE|<android.telephony.NeighboringCellInfo: java.lang.String toString()>
SOURCE|<android.webkit.WebView: java.lang.String getOriginalUrl()>
SOURCE|<gov.nist.javax.sip.address.Authority: java.lang.String getUser()>
SOURCE|<org.apache.http.conn.routing.HttpRoute: org.apache.http.HttpHost getProxyHost()>
SOURCE|<android.location.Address: java.lang.String getCountryCode()>
SOURCE|<com.android.calendar.Utils: java.lang.String getDisplayedDatetime(long,long,long,java.lang.String,boolean,android.content.Context)>
SOURCE|<android.view.VelocityTracker$Estimator: float getYCoeff(int)>
SOURCE|<com.android.internal.telephony.ITelephony$Stub$Proxy: android.os.Bundle getCellLocation()>
SOURCE|<com.android.internal.policy.impl.keyguard.KeyguardSecurityModel: com.android.internal.policy.impl.keyguard.KeyguardSecurityModel$SecurityMode getSecurityMode()>
SOURCE|<java.time.Duration: int getNano()>
SOURCE|<java.nio.HeapByteBuffer: long getLong()>
SOURCE|<android.widget.TextView: java.lang.CharSequence getTransformedText(int,int)>
SOURCE|<com.android.inputmethod.keyboard.internal.KeySpecParser: java.lang.String getOutputText(java.lang.String)>
SOURCE|<android.nfc.NfcAdapter: android.nfc.NfcAdapter getNfcAdapter(android.content.Context)>
SOURCE|<org.apache.harmony.security.x501.AttributeValue: int getTag()>
SOURCE|<com.android.server.DevicePolicyManagerService: long getPasswordExpiration(android.content.ComponentName,int)>
SOURCE|<com.android.server.AppWidgetService: android.appwidget.AppWidgetProviderInfo getAppWidgetInfo(int)>
SOURCE|<java.util.AbstractSequentialList: java.lang.Object get(int)>
SOURCE|<java.security.Signature: byte[] sign()>
SOURCE|<com.android.gallery3d.app.TimeBar: int getBarHeight()>
SOURCE|<com.android.launcher2.AppsCustomizePagedView: int getAssociatedUpperPageBound(int)>
SOURCE|<com.android.server.AppWidgetServiceImpl: java.io.File getSettingsFile(int)>
SOURCE|<com.android.bluetooth.a2dp.A2dpStateMachine: int getConnectionState(android.bluetooth.BluetoothDevice)>
SOURCE|<java.lang.invoke.MethodHandle: java.lang.invoke.MethodType asSpreaderChecks(java.lang.Class,int)>
SOURCE|<com.android.internal.appwidget.IAppWidgetService$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
SOURCE|<com.android.calendar.CalendarController: long getDateFlags()>
SOURCE|<android.os.SystemProperties: long getLong(java.lang.String,long)>
SOURCE|<com.android.camera.ui.PieItem: android.graphics.Path getPath()>
SOURCE|<com.android.internal.widget.LockPatternUtils: byte[] passwordToHash(java.lang.String)>
SOURCE|<org.json.JSONObject: double getDouble(java.lang.String)>
SOURCE|<com.android.browser.BookmarkItem: java.lang.String getUrl()>
SOURCE|<java.util.LinkedList: java.lang.Object getFirst()>
SOURCE|<java.net.URL: java.lang.String getAuthority()>
SOURCE|<org.apache.harmony.crypto.internal.NullCipherSpi: byte[] engineGetIV()>
SOURCE|<java.nio.DirectByteBuffer: double getDouble()>
SOURCE|<com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata: com.android.i18n.phonenumbers.Phonemetadata$PhoneNumberDesc getGeneralDesc()>
SOURCE|<com.android.providers.downloads.DrmConvertSession: byte[] convert(byte[],int)>
SOURCE|<com.android.internal.policy.impl.keyguard.KeyguardWidgetPager$ZInterpolator: float getInterpolation(float)>
SOURCE|<android.media.SoundPool: void setOnLoadCompleteListener(android.media.SoundPool$OnLoadCompleteListener)>
SOURCE|<android.widget.ListView: android.graphics.drawable.Drawable getOverscrollFooter()>
SOURCE|<android.widget.Editor$SelectionStartHandleView: android.widget.Editor$ActionPopupWindow getActionPopupWindow()>
SOURCE|<com.android.server.NativeDaemonConnector: java.lang.String[] doListCommand(java.lang.String,int)>
SOURCE|<com.android.contacts.list.PhoneFavoriteFragment$ContactTileAdapterListener: int getApproximateTileWidth()>
SOURCE|<java.util.ResourceBundle: java.util.ResourceBundle getBundle(java.lang.String,java.util.Locale,java.lang.ClassLoader)>
SOURCE|<gov.nist.javax.sip.stack.SIPTransactionStack: int getActiveClientTransactionCount()>
SOURCE|<android.net.wifi.p2p.IWifiP2pManager$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
SOURCE|<org.apache.harmony.xnet.provider.jsse.CertificateRequest: java.lang.String[] getTypesAsString()>
SOURCE|<com.android.vcard.VCardConfig: int getNameOrderType(int)>
SOURCE|<android.net.ConnectivityManager: java.lang.String[] getTetherableBluetoothRegexs()>
SOURCE|<android.content.BroadcastReceiver$PendingResult: java.lang.String getResultData()>
SOURCE|<android.net.InterfaceConfiguration: java.lang.Iterable getFlags()>
SOURCE|<android.widget.NumberPicker: java.lang.String[] getDisplayedValues()>
SOURCE|<gov.nist.javax.sip.header.MimeVersion: int getMinorVersion()>
SOURCE|<com.android.internal.telephony.sip.SipPhone: java.lang.String getVoiceMailNumber()>
SOURCE|<com.android.internal.policy.impl.keyguard.PagedView: int getChildWidth(int)>
SOURCE|<com.android.server.accessibility.AccessibilityManagerService: int getActiveWindowId()>
SOURCE|<com.android.launcher2.Utilities: android.graphics.Bitmap createIconBitmap(android.graphics.Bitmap,android.content.Context)>
SOURCE|<com.android.browser.SuggestionsAdapter: java.lang.String getSuggestionTitle(com.android.browser.SuggestionsAdapter$SuggestItem)>
SOURCE|<com.android.browser.SuggestionsAdapter$CursorSource: int getCount()>
SOURCE|<android.graphics.Paint: void getTextBounds(char[],int,int,android.graphics.Rect)>
SOURCE|<android.media.MediaRouter: android.media.MediaRouter$RouteInfo getSystemAudioRoute()>
SOURCE|<com.android.inputmethod.latin.LocaleUtils$RunInLocale: java.lang.Object runInLocale(android.content.res.Resources,java.util.Locale)>
SOURCE|<android.telephony.TelephonyManager: java.lang.String getIsimImpi()>
SOURCE|<android.renderscript.Allocation: android.graphics.SurfaceTexture getSurfaceTexture()>
SOURCE|<org.xmlpull.v1.sax2.Driver: java.lang.String getPublicId()>
SOURCE|<android.text.Spannable$Factory: android.text.Spannable$Factory getInstance()>
SOURCE|<android.widget.HeaderViewListAdapter: long getItemId(int)>
SOURCE|<gov.nist.javax.sip.header.StatusLine: java.lang.String getSipVersion()>
SOURCE|<org.apache.harmony.xml.dom.DocumentTypeImpl: java.lang.String getInternalSubset()>
SOURCE|<javax.sip.ResponseEvent: javax.sip.message.Response getResponse()>
SOURCE|<com.android.server.accessibility.TouchExplorer$InjectedPointerTracker: int getInjectedPointersDown()>
SOURCE|<com.android.email.activity.ContactStatusLoader: com.android.email.activity.ContactStatusLoader$Result getContactInfo(android.content.Context,java.lang.String)>
SOURCE|<org.apache.harmony.xml.dom.ElementImpl: java.lang.String getAttributeNS(java.lang.String,java.lang.String)>
SOURCE|<com.android.server.net.NetworkStatsService$DefaultNetworkStatsSettings: com.android.server.net.NetworkStatsService$NetworkStatsSettings$Config getDevConfig()>
SOURCE|<android.renderscript.Sampler: android.renderscript.Sampler$Value getMagnification()>
SOURCE|<android.widget.RemoteViewsService$RemoteViewsFactoryAdapter: android.widget.RemoteViews getLoadingView()>
SOURCE|<java.lang.reflect.Constructor: java.lang.reflect.Type[] getGenericExceptionTypes()>
SOURCE|<com.android.gallery3d.data.Face: android.graphics.Rect getPosition()>
SOURCE|<android.telephony.SmsCbMessage: int getSerialNumber()>
SOURCE|<com.android.browser.provider.BrowserProvider$MySuggestionCursor: int getCount()>
SOURCE|<android.test.mock.MockContext: android.content.SharedPreferences getSharedPreferences(java.lang.String,int)>
SOURCE|<com.android.contacts.model.Contact: long getId()>
SOURCE|<gov.nist.javax.sip.header.CSeq: java.lang.String getMethod()>
SOURCE|<com.android.gallery3d.ui.EdgeAnimation: float getValue()>
SOURCE|<android.content.Intent: android.os.Parcelable getParcelableExtra(java.lang.String)>
SOURCE|<gov.nist.javax.sip.DialogTimeoutEvent: gov.nist.javax.sip.DialogTimeoutEvent$Reason getReason()>
SOURCE|<com.android.gallery3d.app.ActivityState: float[] getBackgroundColor()>
SOURCE|<org.apache.http.entity.ByteArrayEntity: java.io.InputStream getContent()>
SOURCE|<com.android.internal.view.menu.ActionMenuView: int getWindowAnimations()>
SOURCE|<java.io.ObjectStreamClass: java.io.ObjectStreamField[] getFields()>
SOURCE|<com.android.internal.telephony.PhoneBase: java.lang.String getCdmaEriText()>
SOURCE|<android.net.Uri$HierarchicalUri: java.lang.String getPath()>
SOURCE|<gov.nist.javax.sip.header.Contact: javax.sip.address.Address getAddress()>
SOURCE|<java.net.Socket: boolean getOOBInline()>
SOURCE|<android.webkit.WebSettingsClassic: java.lang.String getFantasyFontFamily()>
SOURCE|<gov.nist.javax.sip.ListeningPointImpl: int getPort()>
SOURCE|<com.android.gallery3d.filtershow.imageshow.ImageGeometry: float getLocalStraighten()>
SOURCE|<android.test.mock.MockPackageManager: android.graphics.drawable.Drawable getApplicationLogo(android.content.pm.ApplicationInfo)>
SOURCE|<com.android.server.connectivity.Tethering$TetherInterfaceSM: int getLastError()>
SOURCE|<gov.nist.core.net.DefaultNetworkLayer: javax.net.ssl.SSLSocket createSSLSocket(java.net.InetAddress,int)>
SOURCE|<com.android.org.bouncycastle.asn1.ASN1Sequence: java.lang.String toString()>
SOURCE|<com.android.exchange.provider.ExchangeDirectoryProvider: java.lang.String getType(android.net.Uri)>
SOURCE|<com.android.mms.ui.Presenter: com.android.mms.model.Model getModel()>
SOURCE|<com.android.internal.telephony.ApnContext: com.android.internal.telephony.ApnSetting getNextWaitingApn()>
SOURCE|<android.view.View: void getWindowVisibleDisplayFrame(android.graphics.Rect)>
SOURCE|<com.adobe.xmp.impl.XMPDateTimeImpl: int getHour()>
SOURCE|<com.android.gallery3d.data.ClusterAlbum: int getTotalMediaItemCount()>
SOURCE|<com.google.common.collect.ImmutableList$ReverseImmutableList: java.lang.Object get(int)>
SOURCE|<com.android.inputmethod.keyboard.MainKeyboardView: com.android.inputmethod.keyboard.PointerTracker$TimerProxy getTimerProxy()>
SOURCE|<gov.nist.javax.sip.header.NameMap: java.lang.Class getClassFromName(java.lang.String)>
SOURCE|<com.android.i18n.phonenumbers.geocoding.PhoneNumberOfflineGeocoder: com.android.i18n.phonenumbers.geocoding.PhoneNumberOfflineGeocoder getInstance()>
SOURCE|<com.google.common.collect.ComputingConcurrentHashMap$ComputationExceptionReference: com.google.common.collect.MapMakerInternalMap$ReferenceEntry getEntry()>
SOURCE|<com.android.internal.os.AtomicFile: byte[] readFully()>
SOURCE|<com.android.org.bouncycastle.asn1.ASN1Primitive: com.android.org.bouncycastle.asn1.ASN1Primitive toDERObject()>
SOURCE|<android.widget.AbsListView$RecycleBin: android.view.View getScrapView(int)>
SOURCE|<android.content.pm.IPackageStatsObserver$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
SOURCE|<com.android.nfc.dhimpl.NativeLlcpConnectionlessSocket: int getSap()>
SOURCE|<org.apache.harmony.luni.lang.reflect.ImplForWildcard: java.lang.reflect.Type[] getLowerBounds()>
SOURCE|<org.apache.harmony.security.x509.GeneralName: byte[] access$202(org.apache.harmony.security.x509.GeneralName,byte[])>
SOURCE|<com.android.server.BackupManagerService$PerformFullRestoreTask: com.android.server.BackupManagerService$RestorePolicy readAppManifest(com.android.server.BackupManagerService$FileMetadata,java.io.InputStream)>
SOURCE|<android.webkit.HTML5VideoFullScreen: int getBufferPercentage()>
SOURCE|<java.util.DoubleSummaryStatistics: double getMin()>
SOURCE|<org.apache.http.cookie.CookieOrigin: int getPort()>
SOURCE|<android.app.ActivityThread: android.content.Intent getIntentBeingBroadcast()>
SOURCE|<com.android.systemui.statusbar.phone.NavigationBarView: android.view.View getBackButton()>
SOURCE|<android.accounts.IAccountAuthenticator$Stub: android.os.IBinder asBinder()>
SOURCE|<java.util.zip.ZipFile: java.util.zip.ZipEntry getEntry(java.lang.String)>
SOURCE|<android.view.View: int getSolidColor()>
SOURCE|<gov.nist.javax.sip.header.AuthenticationHeader: java.lang.String getAlgorithm()>
SOURCE|<android.hardware.Camera$Parameters: java.lang.String getWhiteBalance()>
SOURCE|<java.nio.FloatBuffer: java.nio.FloatBuffer get(float[])>
SOURCE|<android.webkit.PluginManager: android.webkit.PluginManager getInstance(android.content.Context)>
SOURCE|<java.util.concurrent.CountDownLatch$Sync: int getCount()>
SOURCE|<android.text.SpannableStringInternal: java.lang.Object[] getSpans(int,int,java.lang.Class)>
SOURCE|<com.google.common.collect.ImmutableSortedSet: com.google.common.collect.ImmutableSortedSet subSet(java.lang.Object,boolean,java.lang.Object,boolean)>
SOURCE|<com.android.camera.Util: int[] getRelativeLocation(android.view.View,android.view.View)>
SOURCE|<org.apache.harmony.xml.dom.InnerNodeImpl: java.lang.String getTextContent()>
SOURCE|<com.android.internal.telephony.sip.SipPhoneBase: com.android.internal.telephony.IccPhoneBookInterfaceManager getIccPhoneBookInterfaceManager()>
SOURCE|<gov.nist.javax.sip.header.ParametersHeader: int getParameterAsInt(java.lang.String)>
SOURCE|<com.android.videoeditor.OverlaysAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)>
SOURCE|<com.android.vcard.VCardParserImpl_V21: java.lang.String getLine()>
SOURCE|<gov.nist.javax.sip.message.SIPRequest: java.lang.String getCannonicalName(java.lang.String)>
SOURCE|<com.android.gallery3d.data.LocalMergeAlbum: int getTotalMediaItemCount()>
SOURCE|<java.lang.Class: java.lang.Class getEnclosingClass()>
SOURCE|<com.android.org.bouncycastle.asn1.x509.AlgorithmIdentifier: com.android.org.bouncycastle.asn1.ASN1Encodable getParameters()>
SOURCE|<android.content.BroadcastReceiver: android.content.BroadcastReceiver$PendingResult getPendingResult()>
SOURCE|<com.android.internal.telephony.sip.SipPhone: android.telephony.SignalStrength getSignalStrength()>
SOURCE|<android.provider.Settings$System: boolean getShowGTalkServiceStatusForUser(android.content.ContentResolver,int)>
SOURCE|<android.view.MotionEvent$PointerCoords: float getAxisValue(int)>
SOURCE|<org.apache.harmony.xnet.provider.jsse.SSLParametersImpl: org.apache.harmony.xnet.provider.jsse.CipherSuite[] getEnabledCipherSuitesMember()>
SOURCE|<com.android.mms.transaction.TransactionBundle: java.lang.String getMmscUrl()>
SOURCE|<com.android.email.activity.MoveMessageToDialog: android.app.Dialog onCreateDialog(android.os.Bundle)>
SOURCE|<java.lang.reflect.Method: java.lang.String getName()>
SOURCE|<android.telephony.SignalStrength: int getGsmAsuLevel()>
SOURCE|<android.database.sqlite.SQLiteGlobal: java.lang.String getDefaultJournalMode()>
SOURCE|<android.mtp.MtpObjectInfo: int getAssociationType()>
SOURCE|<android.content.res.TypedArray: int getIndexCount()>
SOURCE|<com.android.gallery3d.ui.GLView: float[] getBackgroundColor()>
SOURCE|<com.android.mms.model.RegionModel: int getWidth()>
SOURCE|<com.android.gallery3d.data.LocalVideo$LocalVideoRequest: android.graphics.Bitmap onDecodeOriginal(com.android.gallery3d.util.ThreadPool$JobContext,int)>
SOURCE|<org.xml.sax.InputSource: java.io.Reader getCharacterStream()>
SOURCE|<android.view.TextureView: android.view.TextureView$SurfaceTextureListener getSurfaceTextureListener()>
SOURCE|<android.app.Activity: java.lang.Object getSystemService(java.lang.String)>
SOURCE|<android.webkit.CallbackProxy: android.webkit.WebViewClient getWebViewClient()>
SOURCE|<java.util.concurrent.atomic.AtomicReferenceArray: java.lang.Object getAndSet(int,java.lang.Object)>
SOURCE|<java.io.EmulatedFieldsForLoading: short get(java.lang.String,short)>
SOURCE|<com.android.mms.ui.DeliveryReportAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)>
SOURCE|<android.app.IBackupAgent$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
SOURCE|<com.android.contacts.list.ContactsSectionIndexer: int getSectionForPosition(int)>
SOURCE|<android.net.http.SslCertificate: java.util.Date getValidNotBeforeDate()>
SOURCE|<com.android.internal.telephony.cat.ComprehensionTlv: int getLength()>
SOURCE|<com.android.mms.dom.smil.TimeImpl: boolean getResolved()>
SOURCE|<com.android.email.activity.AccountSelectorAdapter$CursorWithExtras: int getMailboxMessageCount()>
SOURCE|<android.app.ActionBar: android.content.Context getThemedContext()>
SOURCE|<org.apache.http.impl.entity.EntityDeserializer: org.apache.http.entity.BasicHttpEntity doDeserialize(org.apache.http.io.SessionInputBuffer,org.apache.http.HttpMessage)>
SOURCE|<android.app.LoadedApk$ServiceDispatcher: android.app.ServiceConnectionLeaked getLocation()>
SOURCE|<com.android.internal.telephony.IccCardApplicationStatus: com.android.internal.telephony.IccCardStatus$PinState PinStateFromRILInt(int)>
SOURCE|<android.webkit.ZoomManager: float getDefaultScale()>
SOURCE|<android.net.sip.SipProfile: int getPort()>
SOURCE|<android.filterfw.core.FieldPort: java.lang.Object getTarget()>
SOURCE|<com.android.phone.PhoneInterfaceManager: int getCdmaEriIconIndex()>
SOURCE|<android.os.RegistrantList: java.lang.Object get(int)>
SOURCE|<com.android.providers.media.RingtonePickerActivity: android.database.Cursor access$200(com.android.providers.media.RingtonePickerActivity)>
SOURCE|<android.provider.MediaStore$Files: android.net.Uri getMtpObjectsUri(java.lang.String)>
SOURCE|<android.view.MotionEvent: float getAxisValue(int)>
SOURCE|<java.util.concurrent.atomic.AtomicStampedReference: java.lang.Object get(int[])>
SOURCE|<com.android.contacts.model.account.BaseAccountType: com.android.contacts.model.dataitem.DataKind addDataKindStructuredPostal(android.content.Context)>
SOURCE|<android.widget.ListView$ArrowScrollFocusResult: int getAmountToScroll()>
SOURCE|<com.android.internal.policy.impl.keyguard.PagedView: android.view.View getScrollingIndicator()>
SOURCE|<com.android.contacts.editor.LabeledEditorView: com.android.contacts.model.dataitem.DataKind getKind()>
SOURCE|<android.database.CursorWrapper: int getInt(int)>
SOURCE|<com.android.contacts.list.ContactTileAdapter: int getFrequentHeaderPosition()>
SOURCE|<android.nfc.INdefPushCallback$Stub: android.os.IBinder asBinder()>
SOURCE|<java.util.concurrent.CountedCompleter: java.util.concurrent.CountedCompleter getCompleter()>
SOURCE|<com.android.videoeditor.service.MovieOverlay: int getType()>
SOURCE|<android.hardware.usb.UsbManager: android.hardware.usb.UsbDeviceConnection openDevice(android.hardware.usb.UsbDevice)>
SOURCE|<android.view.MotionEvent: float getHistoricalTouchMinor(int,int)>
SOURCE|<com.android.internal.view.menu.MenuItemImpl: int getItemId()>
SOURCE|<android.filterfw.core.FrameFormat: java.lang.Object getMetaValue(java.lang.String)>
SOURCE|<com.android.internal.telephony.CommandException: com.android.internal.telephony.CommandException$Error getCommandError()>
SOURCE|<android.view.animation.LayoutAnimationController: int getTransformedIndex(android.view.animation.LayoutAnimationController$AnimationParameters)>
SOURCE|<com.android.launcher2.FastBitmapDrawable: int getIntrinsicHeight()>
SOURCE|<android.os.storage.StorageVolume: java.io.File getPathFile()>
SOURCE|<com.android.internal.os.BatteryStatsImpl: int getDischargeAmountScreenOff()>
SOURCE|<android.view.View: int getAccessibilityWindowId()>
SOURCE|<android.renderscript.Program: int getConstantCount()>
SOURCE|<org.apache.http.impl.conn.DefaultClientConnection: org.apache.http.io.SessionOutputBuffer createSessionOutputBuffer(java.net.Socket,int,org.apache.http.params.HttpParams)>
SOURCE|<com.android.server.wm.WindowState: android.graphics.Rect getVisibleFrameLw()>
SOURCE|<java.security.SecureRandom: byte[] generateSeed(int)>
SOURCE|<java.time.ZoneOffset: java.lang.String getId()>
SOURCE|<java.util.concurrent.ForkJoinPool: long getQueuedTaskCount()>
SOURCE|<org.apache.harmony.security.x509.GeneralNames: java.util.Collection getPairsList()>
SOURCE|<android.net.http.Headers: java.lang.String getExpires()>
SOURCE|<java.text.DecimalFormat: int getGroupingSize()>
SOURCE|<com.android.gallery3d.ui.BitmapLoader: android.graphics.Bitmap getBitmap()>
SOURCE|<android.webkit.CallbackProxy$UploadFileMessageData: java.lang.String getCapture()>
SOURCE|<android.location.LocationRequest: int getQuality()>
SOURCE|<com.android.gallery3d.data.MtpImage: int getMediaType()>
SOURCE|<com.android.internal.telephony.cat.BerTlv: int getTag()>
SOURCE|<org.apache.http.conn.scheme.PlainSocketFactory: org.apache.http.conn.scheme.PlainSocketFactory getSocketFactory()>
SOURCE|<android.filterpacks.imageproc.BlendFilter: android.filterfw.core.Program getShaderProgram(android.filterfw.core.FilterContext)>
SOURCE|<android.renderscript.Allocation: android.renderscript.Allocation createTyped(android.renderscript.RenderScript,android.renderscript.Type)>
SOURCE|<android.widget.RemoteViews: int getLayoutId()>
SOURCE|<com.android.internal.telephony.PhoneProxy: android.net.LinkProperties getLinkProperties(java.lang.String)>
SOURCE|<android.content.pm.IPackageManager$Stub$Proxy: int[] getPackageGids(java.lang.String)>
SOURCE|<android.media.MediaPlayer: java.lang.String getStringParameter(int)>
SOURCE|<com.android.i18n.phonenumbers.Phonemetadata$NumberFormat: java.lang.String getNationalPrefixFormattingRule()>
SOURCE|<gov.nist.javax.sip.stack.TCPMessageChannel: int getViaPort()>
SOURCE|<org.apache.http.impl.conn.AbstractPoolEntry: java.lang.Object getState()>
SOURCE|<gov.nist.javax.sip.stack.TCPMessageChannel: int getPeerPacketSourcePort()>
SOURCE|<com.android.phone.PhoneGlobals: com.android.phone.PhoneGlobals getInstanceIfPrimary()>
SOURCE|<android.view.ViewConfiguration: int getMaximumFlingVelocity()>
SOURCE|<com.android.contacts.detail.StreamItemAdapter: long getItemId(int)>
SOURCE|<com.android.launcher2.SmoothPagedView$OvershootInterpolator: float getInterpolation(float)>
SOURCE|<android.widget.PopupWindow: int getWidth()>
SOURCE|<android.net.wifi.IWifiManager$Stub$Proxy: java.util.List getConfiguredNetworks()>
SOURCE|<gov.nist.javax.sip.stack.TLSMessageChannel: java.net.InetAddress getPeerPacketSourceAddress()>
SOURCE|<org.apache.http.impl.client.ClientParamsStack: org.apache.http.params.HttpParams getOverrideParams()>
SOURCE|<com.adobe.xmp.XMPMetaFactory$1: java.lang.String getMessage()>
SOURCE|<org.apache.harmony.security.x509.KeyUsage: byte[] getEncoded()>
SOURCE|<com.android.browser.view.PieItem: int getOuterRadius()>
SOURCE|<java.text.DecimalFormatSymbols: java.lang.String getNaN()>
SOURCE|<com.android.ex.chips.RecipientEditTextView: android.text.style.ImageSpan getMoreChip()>
SOURCE|<com.android.internal.app.IBatteryStats$Stub$Proxy: byte[] getStatistics()>
SOURCE|<android.test.mock.MockPackageManager: android.graphics.drawable.Drawable getActivityIcon(android.content.ComponentName)>
SOURCE|<android.view.View$MeasureSpec: int getSize(int)>
SOURCE|<android.widget.CursorTreeAdapter: int getChildrenCount(int)>
SOURCE|<android.net.NetworkStats: android.net.NetworkStats$Entry getTotal(android.net.NetworkStats$Entry,java.util.HashSet)>
SOURCE|<android.filterfw.core.FilterContext: android.filterfw.core.FrameManager getFrameManager()>
SOURCE|<android.app.admin.DevicePolicyManager: int getPasswordMinimumLetters(android.content.ComponentName,int)>
SOURCE|<java.util.Collections$EmptyMap: java.lang.Object get(java.lang.Object)>
SOURCE|<android.net.IConnectivityManager$Stub$Proxy: android.net.LinkProperties getActiveLinkProperties()>
SOURCE|<com.android.calendar.AsyncQueryService: int getNextToken()>
SOURCE|<android.media.IAudioService$Stub$Proxy: android.media.IRingtonePlayer getRingtonePlayer()>
SOURCE|<com.googlecode.mp4parser.AbstractContainerBox: java.lang.String toString()>
SOURCE|<com.android.internal.telephony.sip.SipPhoneBase: boolean getMessageWaitingIndicator()>
SOURCE|<java.util.ResourceBundle$Control: java.util.List getFormats(java.lang.String)>
SOURCE|<android.text.style.AlignmentSpan$Standard: int getSpanTypeId()>
SOURCE|<android.content.res.Resources: android.content.res.Configuration getConfiguration()>
SOURCE|<libcore.net.http.HttpEngine: java.lang.String getOriginAddress(java.net.URL)>
SOURCE|<com.coremedia.iso.boxes.MovieHeaderBox: long getDuration()>
SOURCE|<gov.nist.javax.sip.header.ims.SecurityAgree: java.lang.String getMode()>
SOURCE|<java.security.SignedObject: java.lang.String getAlgorithm()>
SOURCE|<com.android.mms.ui.LayoutSelectorAdapter: java.util.List getData(android.content.Context)>
SOURCE|<android.nfc.tech.Ndef: android.nfc.tech.Ndef get(android.nfc.Tag)>
SOURCE|<android.database.AbstractCursor: int getColumnIndex(java.lang.String)>
SOURCE|<android.content.pm.VerificationParams: int getInstallerUid()>
SOURCE|<android.webkit.WebView: android.graphics.Bitmap getFavicon()>
SOURCE|<com.android.email.RefreshManager: boolean isRefreshingAnyMailboxListForTest()>
SOURCE|<com.android.calendar.month.SimpleWeeksAdapter: int getCount()>
SOURCE|<android.app.backup.IBackupManager$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
SOURCE|<com.android.internal.telephony.cdma.CDMAPhone: void getCallWaiting(android.os.Message)>
SOURCE|<com.adobe.xmp.XMPMetaFactory: com.adobe.xmp.XMPVersionInfo getVersionInfo()>
SOURCE|<gov.nist.javax.sip.header.ims.SecurityAgree: java.lang.String getProtocol()>
SOURCE|<java.security.Timestamp: java.util.Date getTimestamp()>
SOURCE|<android.content.res.XmlBlock$Parser: int getStyleAttribute()>
SOURCE|<android.view.DragEvent: int getAction()>
SOURCE|<android.widget.GridLayout: int getMargin1(android.view.View,boolean,boolean)>
SOURCE|<java.util.concurrent.locks.AbstractQueuedSynchronizer: java.util.Collection getSharedQueuedThreads()>
SOURCE|<com.android.phone.SipCallOptionHandler: android.app.Dialog onCreateDialog(int)>
SOURCE|<android.test.mock.MockPackageManager: android.graphics.drawable.Drawable getActivityLogo(android.content.ComponentName)>
SOURCE|<java.net.NetworkInterface: java.util.List getInterfaceAddresses()>
SOURCE|<android.app.SearchableInfo: android.content.Context getProviderContext(android.content.Context,android.content.Context)>
SOURCE|<com.android.internal.policy.impl.keyguard.KeyguardSecurityModel: com.android.internal.policy.impl.keyguard.KeyguardSecurityModel$SecurityMode getAlternateFor(com.android.internal.policy.impl.keyguard.KeyguardSecurityModel$SecurityMode)>
SOURCE|<com.android.email.LegacyConversions: com.android.emailcommon.mail.Message makeMessage(android.content.Context,com.android.emailcommon.provider.EmailContent$Message)>
SOURCE|<android.renderscript.RenderScript: android.renderscript.RenderScript create(android.content.Context)>
SOURCE|<org.apache.harmony.xml.dom.DocumentImpl: java.lang.String getXmlVersion()>
SOURCE|<java.util.Currency: int getDefaultFractionDigits()>
SOURCE|<com.android.server.pm.PackageSettingBase: int getCurrentEnabledStateLPr(java.lang.String,int)>
SOURCE|<com.android.internal.telephony.cdma.CDMAPhone: java.lang.String getCdmaEriText()>
SOURCE|<android.accessibilityservice.AccessibilityServiceInfo: java.lang.String getSettingsActivityName()>
SOURCE|<com.android.gallery3d.data.MtpImage: int getSupportedOperations()>
SOURCE|<android.filterfw.core.FrameFormat: int getLength()>
SOURCE|<com.android.inputmethod.keyboard.internal.GestureStrokeWithPreviewPoints: int getGestureStrokeId()>
SOURCE|<com.google.common.collect.RegularImmutableMap$Values$1: java.lang.Object get(int)>
SOURCE|<com.android.contacts.calllog.ExtendedCursor: int getCount()>
SOURCE|<com.android.server.am.ActivityManagerService: android.content.res.Configuration getConfiguration()>
SOURCE|<com.android.videoeditor.TransitionType: com.android.videoeditor.TransitionType[] getTransitions(android.content.Context)>
SOURCE|<android.graphics.drawable.LayerDrawable: android.graphics.drawable.Drawable$ConstantState getConstantState()>
SOURCE|<com.android.mms.dom.NodeImpl: org.w3c.dom.NodeList getChildNodes()>
SOURCE|<android.provider.Settings$Global: int getInt(android.content.ContentResolver,java.lang.String,int)>
SOURCE|<android.content.ContentProvider$Transport: java.lang.String[] getStreamTypes(android.net.Uri,java.lang.String)>
SOURCE|<java.net.URLStreamHandler: void parseURL(java.net.URL,java.lang.String,int,int)>
SOURCE|<android.drm.DrmManagerClient: int getDrmObjectType(java.lang.String,java.lang.String)>
SOURCE|<java.util.jar.Manifest: int getMainAttributesEnd()>
SOURCE|<com.android.internal.telephony.sip.SipPhoneBase: boolean getDataRoamingEnabled()>
SOURCE|<android.content.ContentProviderClient: java.lang.String[] getStreamTypes(android.net.Uri,java.lang.String)>
SOURCE|<org.apache.http.client.methods.HttpPost: java.lang.String getMethod()>
SOURCE|<com.android.gallery3d.filtershow.FilterShowActivity$LoadBitmapTask: java.lang.Boolean doInBackground(android.net.Uri[])>
SOURCE|<gov.nist.core.LexerCore: java.lang.String getString(char)>
SOURCE|<com.android.bluetooth.hfp.HeadsetPhoneState: int getMicVolume()>
SOURCE|<android.widget.SimpleAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)>
SOURCE|<com.android.server.DevicePolicyManagerService: int getPasswordMinimumLength(android.content.ComponentName,int)>
SOURCE|<android.app.Instrumentation$ActivityResult: int getResultCode()>
SOURCE|<com.google.common.collect.AbstractSortedSetMultimap: java.util.Collection createCollection()>
SOURCE|<dalvik.system.BlockGuard: dalvik.system.BlockGuard$Policy getThreadPolicy()>
SOURCE|<android.graphics.drawable.DrawableContainer$DrawableContainerState: int getConstantHeight()>
SOURCE|<java.time.LocalTime: int get0(java.time.temporal.TemporalField)>
SOURCE|<android.telephony.ServiceState: int getSystemId()>
SOURCE|<android.hardware.usb.UsbDevice: int getVendorId()>
SOURCE|<java.time.zone.ZoneOffsetTransition: java.time.LocalDateTime getDateTimeBefore()>
SOURCE|<com.android.deskclock.stopwatch.Stopwatches: java.lang.String getShareTitle(android.content.Context)>
SOURCE|<android.os.storage.IMountShutdownObserver$Stub: android.os.IBinder asBinder()>
SOURCE|<com.android.contacts.voicemail.VoicemailStatusHelperImpl$Action: int getMessageId()>
SOURCE|<com.android.internal.telephony.sip.SipPhone$SipConnection: com.android.internal.telephony.Phone getPhone()>
SOURCE|<android.app.IThumbnailReceiver$Stub: android.os.IBinder asBinder()>
SOURCE|<android.os.Parcel: android.util.SparseBooleanArray readSparseBooleanArray()>
SOURCE|<gov.nist.javax.sip.message.SIPMessage: java.util.ListIterator getHeaderNames()>
SOURCE|<com.android.internal.os.IDropBoxManagerService$Stub$Proxy: android.os.DropBoxManager$Entry getNextEntry(java.lang.String,long)>
SOURCE|<android.net.NetworkIdentity: int getSubType()>
SOURCE|<com.android.videoeditor.service.MovieTheme: com.android.videoeditor.service.MovieTheme getTheme(android.content.Context,java.lang.String)>
SOURCE|<com.android.browser.provider.BrowserProvider2$SuggestionsCursor: java.lang.String getString(int)>
SOURCE|<android.widget.AbsListView: android.view.ViewGroup$LayoutParams generateDefaultLayoutParams()>
SOURCE|<android.telephony.NeighboringCellInfo: int getRssi()>
SOURCE|<com.android.contacts.model.Contact: java.lang.String getLookupKey()>
SOURCE|<libcore.net.http.RequestHeaders: libcore.net.http.RawHeaders getHeaders()>
SOURCE|<android.database.AbstractCursor: int getColumnIndexOrThrow(java.lang.String)>
SOURCE|<java.security.Signature: java.security.Provider getProvider()>
SOURCE|<java.net.HttpCookie: int getVersion()>
SOURCE|<com.android.contacts.util.ExpirableCache: java.lang.Object getPossiblyExpired(java.lang.Object)>
SOURCE|<javax.xml.transform.stream.StreamResult: java.io.OutputStream getOutputStream()>
SOURCE|<com.android.email.AttachmentInfo: android.net.Uri getUriForIntent(android.content.Context,long)>
SOURCE|<com.android.calendar.agenda.AgendaFragment: android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)>
SOURCE|<android.webkit.WebViewClassic: int getScrollY()>
SOURCE|<java.security.KeyStore$PrivateKeyEntry: java.security.cert.Certificate getCertificate()>
SOURCE|<android.media.AudioService: int getRemoteStreamVolume()>
SOURCE|<com.android.server.DevicePolicyManagerService: com.android.server.DevicePolicyManagerService$DevicePolicyData getUserData(int)>
SOURCE|<com.android.email.mail.store.ImapFolder: com.android.emailcommon.mail.Message[] getMessagesInternal(java.lang.String[],com.android.emailcommon.mail.Folder$MessageRetrievalListener)>
SOURCE|<android.net.NetworkIdentity: int getType()>
SOURCE|<org.apache.http.entity.HttpEntityWrapper: java.io.InputStream getContent()>
SOURCE|<android.widget.NumberPicker: int getSolidColor()>
SOURCE|<android.hardware.ISerialManager$Stub$Proxy: java.lang.String[] getSerialPorts()>
SOURCE|<java.time.chrono.IsoChronology: java.lang.String getCalendarType()>
SOURCE|<libcore.icu.CollationElementIteratorICU: int getOffset()>
SOURCE|<org.apache.http.impl.SocketHttpServerConnection: int getSocketTimeout()>
SOURCE|<android.net.wifi.p2p.WifiP2pGroupList: java.util.Collection getGroupList()>
SOURCE|<android.text.SpannableStringBuilder: float getTextRunAdvances(int,int,int,int,int,float[],int,android.graphics.Paint,int)>
SOURCE|<com.android.launcher2.SearchDropTargetBar: android.graphics.Rect getSearchBarBounds()>
SOURCE|<android.util.TimeUtils: java.lang.String getTimeZoneDatabaseVersion()>
SOURCE|<android.bluetooth.IBluetooth$Stub$Proxy: int getDiscoverableTimeout()>
SOURCE|<com.android.org.bouncycastle.asn1.DERApplicationSpecific: int getApplicationTag()>
SOURCE|<com.android.emailcommon.internet.MimeMultipart: java.io.InputStream getInputStream()>
SOURCE|<android.content.ContentProviderProxy: java.lang.String[] getStreamTypes(android.net.Uri,java.lang.String)>
SOURCE|<com.android.gallery3d.app.TransitionStore: java.lang.Object get(java.lang.Object)>
SOURCE|<android.net.IConnectivityManager$Stub$Proxy: android.net.NetworkInfo getActiveNetworkInfo()>
SOURCE|<com.android.mms.MmsApp: com.android.mms.util.PduLoaderManager getPduLoaderManager()>
SOURCE|<java.security.cert.CertificateFactory: java.security.cert.CertificateFactory getInstance(java.lang.String,java.lang.String)>
SOURCE|<android.content.ContentProviderProxy: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,android.os.ICancellationSignal)>
SOURCE|<android.media.videoeditor.Overlay: java.lang.String getId()>
SOURCE|<android.database.sqlite.SQLiteDatabase: android.database.Cursor rawQuery(java.lang.String,java.lang.String[])>
SOURCE|<android.widget.CalendarView: int getFocusedMonthDateColor()>
SOURCE|<com.android.internal.telephony.cdma.EriManager: int getEriNumberOfEntries()>
SOURCE|<com.android.gallery3d.filtershow.FilterShowActivity: float getPixelsFromDip(float)>
SOURCE|<android.webkit.HTML5VideoInline: int getTextureName()>
SOURCE|<android.database.MergeCursor: int getType(int)>
SOURCE|<android.view.View: float getScaleX()>
SOURCE|<android.telephony.cdma.CdmaSmsCbProgramData: int getAlertOption()>
SOURCE|<com.android.org.bouncycastle.asn1.DERIA5String: byte[] getOctets()>
SOURCE|<android.graphics.drawable.ScaleDrawable: android.graphics.drawable.Drawable getDrawable()>
SOURCE|<android.widget.TextView: int getMaxHeight()>
SOURCE|<android.bluetooth.IBluetooth$Stub$Proxy: java.lang.String getRemoteAlias(android.bluetooth.BluetoothDevice)>
SOURCE|<com.android.bluetooth.btservice.RemoteDevices$DeviceProperties: java.lang.String getName()>
SOURCE|<org.apache.harmony.xml.dom.NodeImpl: org.w3c.dom.NamedNodeMap getAttributes()>
SOURCE|<javax.security.auth.x500.X500Principal: java.lang.String getName()>
SOURCE|<javax.crypto.EncryptedPrivateKeyInfo: java.security.AlgorithmParameters getAlgParameters()>
SOURCE|<android.preference.PreferenceActivity$Header: java.lang.CharSequence getTitle(android.content.res.Resources)>
SOURCE|<com.android.emailcommon.internet.Rfc822Output: java.lang.String getNextBoundary()>
SOURCE|<gov.nist.javax.sip.address.SipUri: java.lang.String getMAddrParam()>
SOURCE|<com.android.gallery3d.ui.BitmapTileProvider: android.graphics.Bitmap getTile(int,int,int,int,int,com.android.gallery3d.data.BitmapPool)>
SOURCE|<android.location.ICountryListener$Stub: android.os.IBinder asBinder()>
SOURCE|<android.net.http.Headers: java.lang.String getXPermittedCrossDomainPolicies()>
SOURCE|<java.security.cert.PKIXParameters: java.lang.String getSigProvider()>
SOURCE|<org.apache.http.cookie.CookieSpecRegistry: java.util.List getSpecNames()>
SOURCE|<java.lang.reflect.Method: java.lang.reflect.Type[] getGenericParameterTypes()>
SOURCE|<org.apache.http.impl.io.AbstractSessionInputBuffer: org.apache.http.io.HttpTransportMetrics getMetrics()>
SOURCE|<android.content.res.TypedArray: java.lang.String getNonResourceString(int)>
SOURCE|<android.hardware.Camera$Parameters: java.util.List getSupportedFlashModes()>
SOURCE|<java.util.concurrent.ThreadPoolExecutor: int getCorePoolSize()>
SOURCE|<com.android.commands.monkey.MonkeySourceNetworkViews$QueryViewCommand: com.android.commands.monkey.MonkeySourceNetwork$MonkeyCommandReturn translateCommand(java.util.List,com.android.commands.monkey.MonkeySourceNetwork$CommandQueue)>
SOURCE|<com.android.org.bouncycastle.asn1.DERVisibleString: java.lang.String getString()>
SOURCE|<com.android.phone.PhoneGlobals: android.content.Intent createPhoneEndIntentUsingCallOrigin()>
SOURCE|<com.android.vcard.VCardProperty: java.util.Collection getParameters(java.lang.String)>
SOURCE|<android.hardware.Camera$Parameters: java.util.List getSupportedColorEffects()>
SOURCE|<android.filterfw.core.FilterPort: java.lang.String getName()>
SOURCE|<android.media.IMediaScannerListener$Stub: android.os.IBinder asBinder()>
SOURCE|<org.apache.harmony.xml.dom.NodeImpl: org.w3c.dom.Node getFirstChild()>
SOURCE|<android.net.wifi.WifiStateMachine: java.lang.String getConfigFile()>
SOURCE|<com.android.launcher2.CellLayout$LayoutParams: int getWidth()>
SOURCE|<org.xml.sax.SAXException: java.lang.Exception getException()>
SOURCE|<android.bluetooth.BluetoothInputDevice: java.util.List getDevicesMatchingConnectionStates(int[])>
SOURCE|<com.android.inputmethod.latin.ExpandableDictionary: java.util.ArrayList getSuggestions(com.android.inputmethod.latin.WordComposer,java.lang.CharSequence,com.android.inputmethod.keyboard.ProximityInfo)>
SOURCE|<com.android.mms.TempFileProvider: java.lang.String getScrapPath(android.content.Context)>
SOURCE|<android.os.Bundle: double[] getDoubleArray(java.lang.String)>
SOURCE|<gov.nist.javax.sip.stack.MessageChannel: gov.nist.core.HostPort getViaHostPort()>
SOURCE|<java.lang.Integer: java.lang.Integer decode(java.lang.String)>
SOURCE|<com.android.providers.contacts.LegacyApiSupport: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,java.lang.String)>
SOURCE|<android.opengl.GLSurfaceView: boolean getPreserveEGLContextOnPause()>
SOURCE|<libcore.io.ForwardingOs: int getgid()>
SOURCE|<org.apache.harmony.xnet.provider.jsse.ServerSessionContext: javax.net.ssl.SSLSession getSession(byte[])>
SOURCE|<com.android.internal.telephony.cdma.CdmaDataConnectionTracker: java.lang.String getActionIntentDataStallAlarm()>
SOURCE|<java.nio.DatagramChannelImpl: java.io.FileDescriptor getFD()>
SOURCE|<com.android.vcard.VCardEntryCounter: int getCount()>
SOURCE|<com.android.contacts.ContactsUtils: int getThumbnailSize(android.content.Context)>
SOURCE|<com.android.server.IntentResolver: java.util.Set filterSet()>
SOURCE|<org.apache.http.entity.ByteArrayEntity: long getContentLength()>
SOURCE|<android.net.Uri$PathPart: android.net.Uri$PathSegments getPathSegments()>
SOURCE|<com.android.internal.telephony.gsm.GSMPhone: com.android.internal.telephony.Call getBackgroundCall()>
SOURCE|<android.telephony.gsm.SmsMessage: int getStatusOnSim()>
SOURCE|<org.apache.http.impl.conn.AbstractPooledConnAdapter: org.apache.http.conn.routing.HttpRoute getRoute()>
SOURCE|<android.webkit.WebBackForwardListClassic: boolean getClearPending()>
SOURCE|<com.android.contacts.model.dataitem.DataItem: java.lang.String getKindString()>
SOURCE|<com.android.gallery3d.ui.SlotView$IntegerAnimation: int getTarget()>
SOURCE|<com.android.bluetooth.btservice.RemoteDevices$DeviceProperties: byte[] getAddress()>
SOURCE|<com.android.inputmethod.latin.DebugSettingsActivity: android.content.Intent getIntent()>
SOURCE|<libcore.net.http.ResponseHeaders: int getContentLength()>
SOURCE|<com.android.internal.textservice.ISpellCheckerSession$Stub: android.os.IBinder asBinder()>
SOURCE|<android.app.IUiModeManager$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
SOURCE|<android.text.method.TimeKeyListener: android.text.method.TimeKeyListener getInstance()>
SOURCE|<com.android.bluetooth.pbap.BluetoothPbapCallLogComposer: java.lang.String getErrorReason()>
SOURCE|<android.drm.DrmEvent: int getType()>
SOURCE|<android.location.LocationRequest: long getInterval()>
SOURCE|<com.android.email.FolderProperties: java.lang.String getDisplayName(int,long,java.lang.String)>
SOURCE|<com.android.videoeditor.service.VideoEditorProject: long getProjectDuration()>
SOURCE|<com.android.server.InputMethodManagerService: java.util.List getInputMethodList()>
SOURCE|<com.android.contacts.editor.ContactEditorUtils: com.android.contacts.editor.ContactEditorUtils getInstance(android.content.Context)>
SOURCE|<java.lang.Boolean: boolean getBoolean(java.lang.String)>
SOURCE|<android.location.Address: java.lang.String getThoroughfare()>
SOURCE|<android.media.audiofx.BassBoost: short getRoundedStrength()>
SOURCE|<android.util.XmlPullAttributes: int getAttributeCount()>
SOURCE|<gov.nist.javax.sip.SipStackImpl: javax.sip.SipProvider createSipProvider(javax.sip.ListeningPoint)>
SOURCE|<com.android.inputmethod.latin.SubtypeLocale: java.util.Locale getSubtypeLocale(android.view.inputmethod.InputMethodSubtype)>
SOURCE|<android.location.LocationManager: java.util.List getProviders(boolean)>
SOURCE|<org.apache.harmony.xnet.provider.jsse.SSLEngineImpl: boolean getNeedClientAuth()>
SOURCE|<java.lang.Enum: java.lang.String name()>
SOURCE|<com.android.email.Preferences: com.android.email.Preferences getPreferences(android.content.Context)>
SOURCE|<com.android.internal.telephony.PhoneProxy: boolean getMute()>
SOURCE|<org.apache.harmony.security.x509.AuthorityKeyIdentifier: org.apache.harmony.security.x509.GeneralNames getAuthorityCertIssuer()>
SOURCE|<gov.nist.javax.sip.header.Warning: java.lang.String getAgent()>
SOURCE|<com.android.inputmethod.latin.UserHistoryForgettingCurveUtils$ForgettingCurveParams: byte getFc()>
SOURCE|<android.net.SSLCertificateSocketFactory: java.net.Socket createSocket(java.lang.String,int,java.net.InetAddress,int)>
SOURCE|<java.nio.charset.CharsetEncoder: float maxBytesPerChar()>
SOURCE|<com.android.email.service.EasTestAuthenticatorService$EasAuthenticator: android.os.Bundle getAuthToken(android.accounts.AccountAuthenticatorResponse,android.accounts.Account,java.lang.String,android.os.Bundle)>
SOURCE|<com.android.contacts.test.InjectedServices: android.content.ContentResolver getContentResolver()>
SOURCE|<java.nio.DatagramChannelImpl: java.net.InetAddress getLocalAddress()>
SOURCE|<org.apache.harmony.xml.dom.DOMConfigurationImpl: java.lang.Object getParameter(java.lang.String)>
SOURCE|<com.android.browser.BrowserSettings: java.lang.String getDefaultPreloadSetting()>
SOURCE|<com.android.browser.view.BookmarkExpandableView$BookmarkAccountAdapter: int getChildrenCount(int)>
SOURCE|<com.android.internal.telephony.PhoneProxy: com.android.internal.telephony.gsm.UsimServiceTable getUsimServiceTable()>
SOURCE|<android.filterfw.format.ImageFormat: android.filterfw.core.MutableFrameFormat create(int,int)>
SOURCE|<com.android.contacts.group.GroupDetailDisplayUtils: android.view.View getNewGroupSourceView(android.content.Context)>
SOURCE|<com.android.contacts.list.ContactTileAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)>
SOURCE|<android.view.IApplicationToken$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
SOURCE|<android.location.GpsStatus: int getMaxSatellites()>
SOURCE|<org.apache.harmony.xnet.provider.jsse.OpenSSLDSAPrivateKey: java.lang.String getAlgorithm()>
SOURCE|<android.webkit.WebViewClassic: int getWidth()>
SOURCE|<com.android.server.ThrottleService$DataRecorder: long getPeriodEnd()>
SOURCE|<com.android.contacts.editor.ContactEditorUtils: com.android.contacts.model.account.AccountWithDataSet getDefaultAccount()>
SOURCE|<android.view.MotionEvent: float getX()>
SOURCE|<java.nio.SocketChannelImpl$SocketAdapter: java.nio.channels.SocketChannel getChannel()>
SOURCE|<android.provider.Settings$System: float getFloat(android.content.ContentResolver,java.lang.String)>
SOURCE|<org.apache.harmony.xnet.provider.jsse.SSLSocketImpl: java.io.InputStream getInputStream()>
SOURCE|<android.view.HardwareRenderer$GlRenderer: long getFrameCount()>
SOURCE|<com.android.providers.contacts.aggregation.ContactAggregator$NameLookupSelectionBuilder: java.lang.String[] getCommonNicknameClusters(java.lang.String)>
SOURCE|<android.view.inputmethod.InputBinding: android.os.IBinder getConnectionToken()>
SOURCE|<android.view.inputmethod.InputBinding: int getPid()>
SOURCE|<android.view.inputmethod.BaseInputConnection: java.lang.CharSequence getSelectedText(int)>
SOURCE|<org.apache.harmony.xnet.provider.jsse.SSLSessionImpl: javax.net.ssl.SSLSessionContext getSessionContext()>
SOURCE|<com.android.browser.Tab: android.graphics.Bitmap getScreenshot()>
SOURCE|<android.app.WallpaperInfo: java.lang.CharSequence loadAuthor(android.content.pm.PackageManager)>
SOURCE|<org.apache.harmony.xml.dom.DocumentTypeImpl: java.lang.String getSystemId()>
SOURCE|<com.android.launcher2.FastBitmapDrawable: int getIntrinsicWidth()>
SOURCE|<com.android.mms.dom.smil.SmilDocumentImpl$1: org.w3c.dom.NodeList getTimeChildren()>
SOURCE|<com.android.gallery3d.app.AbstractGalleryActivity: com.android.gallery3d.ui.GLRoot getGLRoot()>
SOURCE|<com.android.inputmethod.latin.SubtypeSwitcher: android.view.inputmethod.InputMethodSubtype getCurrentSubtype()>
SOURCE|<android.app.ActivityManager: java.util.List getRunningTasks(int)>
SOURCE|<android.app.ActivityManagerProxy: int getRequestedOrientation(android.os.IBinder)>
SOURCE|<android.graphics.YuvImage: int getHeight()>
SOURCE|<android.view.MotionEvent: float getTouchMinor()>
SOURCE|<gov.nist.javax.sip.header.ims.SecurityAgree: int getSPIServer()>
SOURCE|<org.xml.sax.helpers.XMLFilterImpl: java.lang.Object getProperty(java.lang.String)>
SOURCE|<java.util.concurrent.ForkJoinPool: int getSurplusQueuedTaskCount()>
SOURCE|<org.apache.harmony.security.fortress.Services: int getCacheVersion()>
SOURCE|<com.android.emailcommon.utility.SSLSocketFactory: java.net.Socket createSocket(java.net.Socket,java.lang.String,int,boolean)>
SOURCE|<android.net.wifi.IWifiManager$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
SOURCE|<android.app.Activity: android.database.Cursor managedQuery(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>
SOURCE|<android.filterfw.core.Filter: android.filterfw.core.FrameFormat getInputFormat(java.lang.String)>
SOURCE|<org.apache.harmony.security.asn1.ASN1Enumerated: org.apache.harmony.security.asn1.ASN1Enumerated getInstance()>
SOURCE|<java.time.format.SignStyle: boolean parse(boolean,boolean,boolean)>
SOURCE|<com.android.internal.telephony.IccFileHandler: void getEFLinearRecordSize(int,android.os.Message)>
SOURCE|<com.android.internal.telephony.IccCardApplicationStatus: com.android.internal.telephony.IccCardApplicationStatus$AppType AppTypeFromRILInt(int)>
SOURCE|<com.adobe.xmp.options.SerializeOptions: boolean getReadOnlyPacket()>
SOURCE|<com.android.gallery3d.data.LocationClustering: int getNumberOfClusters()>
SOURCE|<com.android.email.widget.WidgetManager: com.android.email.widget.EmailWidget getOrCreateWidget(android.content.Context,int)>
SOURCE|<android.webkit.JsPromptResult: java.lang.String getStringResult()>
SOURCE|<android.text.method.DigitsKeyListener: android.text.method.DigitsKeyListener getInstance(java.lang.String)>
SOURCE|<android.webkit.WebSettingsClassic: boolean getAllowFileAccessFromFileURLs()>
SOURCE|<com.android.providers.contacts.NameLookupBuilder: java.lang.String normalizeName(java.lang.String)>
SOURCE|<com.android.internal.telephony.cdma.EriManager: int getEriFileVersion()>
SOURCE|<com.android.calendar.widget.CalendarAppWidgetProvider: android.content.ComponentName getComponentName(android.content.Context)>
SOURCE|<java.util.prefs.NodeChangeEvent: java.util.prefs.Preferences getChild()>
SOURCE|<android.content.SyncContext: android.os.IBinder getSyncContextBinder()>
SOURCE|<android.service.wallpaper.IWallpaperEngine$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
SOURCE|<java.net.URLConnection: long getIfModifiedSince()>
SOURCE|<java.security.CodeSource: java.net.URL getLocation()>
SOURCE|<android.text.format.DateUtils: java.lang.CharSequence getRelativeTimeSpanString(long,long,long,int)>
SOURCE|<com.android.internal.telephony.IIccPhoneBook$Stub$Proxy: int[] getAdnRecordsSize(int)>
SOURCE|<gov.nist.javax.sip.message.SIPDuplicateHeaderException: gov.nist.javax.sip.message.SIPMessage getSIPMessage()>
SOURCE|<org.apache.harmony.xnet.provider.jsse.SSLEngineImpl: java.lang.String[] getEnabledProtocols()>
SOURCE|<com.android.contacts.model.Contact: java.lang.String getDirectoryAccountType()>
SOURCE|<android.net.SntpClient: long getNtpTime()>
SOURCE|<org.apache.harmony.luni.lang.reflect.ImplForType: java.lang.reflect.Type getOwnerType()>
SOURCE|<android.widget.Scroller: int getCurrX()>
SOURCE|<com.android.internal.appwidget.IAppWidgetService$Stub$Proxy: android.os.Bundle getAppWidgetOptions(int)>
SOURCE|<org.apache.harmony.xnet.provider.jsse.SSLParametersImpl: org.apache.harmony.xnet.provider.jsse.ClientSessionContext getClientSessionContext()>
SOURCE|<org.apache.harmony.security.x509.Certificate: byte[] access$300(org.apache.harmony.security.x509.Certificate)>
SOURCE|<android.renderscript.RenderScript: android.content.Context getApplicationContext()>
SOURCE|<java.security.SignedObject: byte[] getSignature()>
SOURCE|<android.view.KeyEvent: int getModifierMetaStateMask()>
SOURCE|<gov.nist.javax.sip.header.Indentation: java.lang.String getIndentation()>
SOURCE|<android.appwidget.AppWidgetHost: android.appwidget.AppWidgetHostView createView(android.content.Context,int,android.appwidget.AppWidgetProviderInfo)>
SOURCE|<java.lang.System: java.lang.String getenv(java.lang.String)>
SOURCE|<android.content.res.CompatibilityInfo$Translator: android.graphics.Rect getTranslatedContentInsets(android.graphics.Rect)>
SOURCE|<javax.security.cert.X509Certificate$1: java.lang.String getSigAlgName()>
SOURCE|<android.content.res.Resources: java.lang.String getString(int)>
SOURCE|<java.security.cert.X509CertSelector: javax.security.auth.x500.X500Principal getSubject()>
SOURCE|<com.android.contacts.ContactPhotoManagerImpl$Request: java.lang.Object getKey()>
SOURCE|<com.android.internal.database.SortCursor: java.lang.String[] getColumnNames()>
SOURCE|<android.drm.mobile1.DrmRawContent: java.lang.String getRightsAddress()>
SOURCE|<com.android.bluetooth.opp.BluetoothOppManager: java.lang.String getDeviceName(android.bluetooth.BluetoothDevice)>
SOURCE|<org.apache.harmony.security.provider.cert.X509CertImpl: boolean[] getSubjectUniqueID()>
SOURCE|<com.android.internal.app.IBatteryStats$Stub: android.os.IBinder asBinder()>
SOURCE|<java.net.URI: int getPort()>
SOURCE|<com.android.bluetooth.a2dp.A2dpService: com.android.bluetooth.a2dp.A2dpService getA2dpService()>
SOURCE|<com.android.internal.telephony.ApnContext: com.android.internal.telephony.DataConnectionAc getDataConnectionAc()>
SOURCE|<org.apache.harmony.xnet.provider.jsse.OpenSSLSessionImpl: java.lang.Object getValue(java.lang.String)>
SOURCE|<com.android.inputmethod.latin.ResourceUtils: float getFraction(android.content.res.TypedArray,int)>
SOURCE|<java.time.chrono.MinguoDate: long getProlepticMonth()>
SOURCE|<org.apache.harmony.security.asn1.ASN1StringType: java.lang.Object getDecodedObject(org.apache.harmony.security.asn1.BerInputStream)>
SOURCE|<org.apache.harmony.xnet.provider.jsse.SSLSocketImpl: java.lang.String[] getSupportedProtocols()>
SOURCE|<com.android.contacts.util.AccountSelectionUtil: android.app.Dialog getSelectAccountDialog(android.content.Context,int,android.content.DialogInterface$OnClickListener,android.content.DialogInterface$OnCancelListener)>
SOURCE|<android.media.videoeditor.MediaItem: java.lang.String getGeneratedImageClip()>
SOURCE|<android.speech.tts.SynthesisRequest: int getSpeechRate()>
SOURCE|<android.app.PendingIntent: android.app.PendingIntent getActivity(android.content.Context,int,android.content.Intent,int)>
SOURCE|<org.apache.http.impl.client.AbstractHttpClient: org.apache.http.cookie.CookieSpecRegistry getCookieSpecs()>
SOURCE|<com.android.contacts.model.account.AccountType: java.lang.String getCreateContactActivityClassName()>
SOURCE|<com.android.calendar.EventInfoFragment: android.database.Cursor access$600(com.android.calendar.EventInfoFragment)>
SOURCE|<com.android.gallery3d.filtershow.imageshow.ImageGeometry: android.graphics.RectF getLocalPhotoBounds()>
SOURCE|<com.coremedia.iso.boxes.FileTypeBox: java.lang.String getMajorBrand()>
SOURCE|<com.android.vcard.VCardEntry$NicknameData: com.android.vcard.VCardEntry$EntryLabel getEntryLabel()>
SOURCE|<java.util.HashMap$HashMapEntry: java.lang.Object getKey()>
SOURCE|<android.content.ContextWrapper: java.lang.String getPackageName()>
SOURCE|<com.android.browser.provider.BrowserProvider$MySuggestionCursor: double getDouble(int)>
SOURCE|<gov.nist.core.net.SslNetworkLayer: javax.net.ssl.SSLSocket createSSLSocket(java.net.InetAddress,int)>
SOURCE|<com.android.calendar.CalendarViewAdapter: int getCount()>
SOURCE|<com.android.gallery3d.exif.IfdData: int getTagCount()>
SOURCE|<java.lang.System: java.util.Map getenv()>
SOURCE|<android.support.v4.view.MotionEventCompat: int getPointerCount(android.view.MotionEvent)>
SOURCE|<java.security.PKCS12Attribute: byte[] getEncoded()>
SOURCE|<android.media.AudioTrack: float getMinVolume()>
SOURCE|<java.net.URLConnection: boolean getUseCaches()>
SOURCE|<android.text.format.Time: int getJulianMondayFromWeeksSinceEpoch(int)>
SOURCE|<android.widget.Scroller: int getFinalY()>
SOURCE|<java.nio.ShortArrayBuffer: short get(int)>
SOURCE|<android.app.ApplicationPackageManager: android.content.pm.ServiceInfo getServiceInfo(android.content.ComponentName,int)>
SOURCE|<com.android.internal.telephony.sip.SipConnectionBase: com.android.internal.telephony.UUSInfo getUUSInfo()>
SOURCE|<com.android.deskclock.Utils$ScreensaverMoveSaverRunnable$1: float getInterpolation(float)>
SOURCE|<org.apache.harmony.security.x509.TBSCertificate: boolean[] getSubjectUniqueID()>
SOURCE|<com.android.internal.util.TypedProperties: java.lang.String getString(java.lang.String)>
SOURCE|<android.test.mock.MockContext: android.content.ContentResolver getContentResolver()>
SOURCE|<com.android.server.am.ProviderMap: java.util.HashMap getProvidersByClass(int)>
SOURCE|<android.app.Instrumentation: android.content.Context getTargetContext()>
SOURCE|<javax.crypto.spec.GCMParameterSpec: byte[] getIV()>
SOURCE|<com.android.gallery3d.exif.ExifParser: com.android.gallery3d.exif.ExifTag getTag()>
SOURCE|<libcore.net.http.HttpConnection: libcore.net.http.HttpConnection$Address getAddress()>
SOURCE|<org.apache.harmony.security.pkcs7.SignerInfo: byte[] getEncryptedDigest()>
SOURCE|<javax.sip.IOExceptionEvent: java.lang.String getHost()>
SOURCE|<com.android.musicfx.ControlPanelEffect: java.lang.String getParameterString(android.content.Context,java.lang.String,int,com.android.musicfx.ControlPanelEffect$Key,int)>
SOURCE|<org.json.JSONObject: boolean getBoolean(java.lang.String)>
SOURCE|<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>
SOURCE|<com.android.launcher2.FastBitmapDrawable: int getMinimumWidth()>
SOURCE|<android.view.ContextThemeWrapper: android.content.res.Resources$Theme getTheme()>
SOURCE|<android.net.IConnectivityManager$Stub$Proxy: java.lang.String[] getTetherableBluetoothRegexs()>
SOURCE|<org.apache.harmony.security.x509.GeneralSubtrees: byte[] getEncoded()>
SOURCE|<com.android.server.AppWidgetServiceImpl: int[] getAppWidgetIdsForHost(int)>
SOURCE|<com.google.common.collect.ImmutableSortedAsList: java.lang.Object get(int)>
SOURCE|<android.filterfw.core.CachedFrameManager: android.filterfw.core.Frame retainFrame(android.filterfw.core.Frame)>
SOURCE|<java.util.concurrent.atomic.AtomicInteger: int getAndSet(int)>
SOURCE|<android.filterfw.geometry.Quad: float getBoundingHeight()>
SOURCE|<com.android.email.RefreshManager: long getLastMailboxListRefreshTime(long)>
SOURCE|<java.lang.Class: java.lang.reflect.Method getEnclosingMethod()>
SOURCE|<gov.nist.javax.sip.message.SIPMessage: javax.sip.header.ToHeader getTo()>
SOURCE|<android.inputmethodservice.ExtractEditLayout$ExtractActionMode: java.lang.CharSequence getSubtitle()>
SOURCE|<android.widget.Scroller: int getDuration()>
SOURCE|<java.net.ServerSocket: int getLocalPort()>
SOURCE|<java.nio.MappedByteBufferAdapter: float getFloat(int)>
SOURCE|<java.util.Formatter$FormatToken: int getWidth()>
SOURCE|<com.android.mms.transaction.Transaction: int getServiceId()>
SOURCE|<org.apache.harmony.xnet.provider.jsse.Finished: int getType()>
SOURCE|<android.widget.TextView: android.text.method.TransformationMethod getTransformationMethod()>
SOURCE|<com.android.server.am.UsageStatsService: byte[] readFully(java.io.FileInputStream)>
SOURCE|<android.app.Fragment: java.lang.String getString(int)>
SOURCE|<android.webkit.WebView: void loadDataWithBaseURL(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>
SOURCE|<android.app.ApplicationPackageManager: int getPreferredActivities(java.util.List,java.util.List,java.lang.String)>
SOURCE|<com.android.launcher2.FocusOnlyTabWidget: android.view.View getSelectedTab()>
SOURCE|<android.media.videoeditor.AudioTrack: int getVolume()>
SOURCE|<com.android.mms.data.Conversation: java.lang.String getRecipients(android.net.Uri)>
SOURCE|<com.android.server.WallpaperManagerService: android.app.WallpaperInfo getWallpaperInfo()>
SOURCE|<com.android.internal.policy.impl.keyguard.KeyguardWidgetPager: int getWidgetPageIndex(android.view.View)>
SOURCE|<org.apache.http.impl.cookie.BestMatchSpec: org.apache.http.impl.cookie.BrowserCompatSpec getCompat()>
SOURCE|<android.content.res.Resources: int getColor(int)>
SOURCE|<org.apache.harmony.security.provider.cert.X509CertImpl: java.security.PublicKey getPublicKey()>
SOURCE|<android.app.ActivityManager: java.util.List getRecentTasksForUser(int,int,int)>
SOURCE|<com.android.calendar.month.SimpleWeeksAdapter: android.text.format.Time getSelectedDay()>
SOURCE|<java.text.DecimalFormat: java.lang.String getPositivePrefix()>
SOURCE|<android.database.DatabaseUtils$InsertHelper: int getColumnIndex(java.lang.String)>
SOURCE|<android.content.ContentProvider: int bulkInsert(android.net.Uri,android.content.ContentValues[])>
SOURCE|<android.drm.DrmSupportInfo: java.lang.String getDescription()>
SOURCE|<com.android.internal.policy.impl.keyguard.KeyguardActivityLauncher: java.lang.String access$300()>
SOURCE|<android.drm.mobile1.DrmRawContent: java.lang.String getContentType()>
SOURCE|<org.apache.http.params.HttpConnectionParams: int getSoTimeout(org.apache.http.params.HttpParams)>
SOURCE|<com.android.contacts.model.account.AccountType: java.util.List getExtensionPackageNames()>
SOURCE|<javax.crypto.spec.RC5ParameterSpec: byte[] getIV()>
SOURCE|<org.apache.http.conn.routing.RouteTracker: int getHopCount()>
SOURCE|<com.android.contacts.list.PhoneFavoriteMergedAdapter: int getPositionForSection(int)>
SOURCE|<android.os.IUserManager$Stub$Proxy: android.graphics.Bitmap getUserIcon(int)>
SOURCE|<android.widget.ListPopupWindow: int getPromptPosition()>
SOURCE|<gov.nist.javax.sip.header.Protocol: java.lang.String getTransport()>
SOURCE|<android.filterfw.core.Filter: android.filterfw.core.OutputPort getOutputPort(java.lang.String)>
SOURCE|<android.location.Address: int getMaxAddressLineIndex()>
SOURCE|<org.apache.harmony.security.x509.AlgorithmIdentifier: java.lang.String getAlgorithm()>
SOURCE|<com.android.uiautomator.core.UiSelector: boolean getBoolean(int)>
SOURCE|<com.android.internal.telephony.IPhoneSubInfo$Stub$Proxy: java.lang.String[] getIsimImpu()>
SOURCE|<android.widget.Spinner$DropDownAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)>
SOURCE|<com.android.i18n.phonenumbers.PhoneNumberUtil: int getLengthOfNationalDestinationCode(com.android.i18n.phonenumbers.Phonenumber$PhoneNumber)>
SOURCE|<android.view.View: float getRotationX()>
SOURCE|<com.android.internal.content.PackageHelper: java.lang.String[] getSecureContainerList()>
SOURCE|<org.apache.harmony.security.x509.TBSCertList: org.apache.harmony.security.x509.Extensions getCrlExtensions()>
SOURCE|<com.android.org.bouncycastle.asn1.DERT61String: com.android.org.bouncycastle.asn1.DERT61String getInstance(java.lang.Object)>
SOURCE|<libcore.net.http.HttpEngine: javax.net.ssl.SSLSocketFactory getSslSocketFactory()>
SOURCE|<java.text.Bidi: int getBaseLevel()>
SOURCE|<com.android.internal.telephony.WspTypeDecoder: long getValue32()>
SOURCE|<com.android.mms.MmsApp: android.provider.SearchRecentSuggestions getRecentSuggestions()>
SOURCE|<java.util.PropertyResourceBundle: java.util.Enumeration getKeys()>
SOURCE|<android.webkit.WebSettings: boolean getUseWideViewPort()>
SOURCE|<android.telephony.gsm.SmsMessage: byte[] getUserData()>
SOURCE|<java.security.cert.CertPathValidatorException: int getIndex()>
SOURCE|<com.android.internal.os.BatteryStatsImpl$Uid$Proc: long getSystemTime(int)>
SOURCE|<com.google.common.collect.Ordering: com.google.common.collect.Ordering nullsLast()>
SOURCE|<com.android.inputmethod.keyboard.PointerTracker$BogusMoveEventDetector: int getDistanceFromDownEvent(int,int)>
SOURCE|<android.os.INetworkManagementService$Stub$Proxy: int getInterfaceTxThrottle(java.lang.String)>
SOURCE|<android.net.wifi.WifiStateTracker: android.net.NetworkInfo getNetworkInfo()>
SOURCE|<android.media.AudioManager: int getMasterMaxVolume()>
SOURCE|<android.media.JetPlayer: android.media.JetPlayer getJetPlayer()>
SOURCE|<android.accounts.IAccountManager$Stub: android.accounts.IAccountManager asInterface(android.os.IBinder)>
SOURCE|<com.android.internal.telephony.CallerInfo: com.android.internal.telephony.CallerInfo markAsVoiceMail()>
SOURCE|<gov.nist.javax.sip.header.RSeq: int getSequenceNumber()>
SOURCE|<android.os.Message: java.lang.Runnable getCallback()>
SOURCE|<android.telephony.gsm.SmsMessage: int getTPLayerLengthForPDU(java.lang.String)>
SOURCE|<com.android.internal.content.PackageMonitor: android.os.Handler getRegisteredHandler()>
SOURCE|<android.app.SearchableInfo: java.lang.String getSuggestIntentData()>
SOURCE|<org.apache.http.impl.conn.tsccm.BasicPoolEntry: long getExpiry()>
SOURCE|<com.android.calendar.EventInfoFragment: android.database.Cursor access$2002(com.android.calendar.EventInfoFragment,android.database.Cursor)>
SOURCE|<com.android.calendar.CalendarEventModel: java.lang.String getAttendeesString()>
SOURCE|<javax.crypto.spec.SecretKeySpec: byte[] getEncoded()>
SOURCE|<android.net.LocalSocketImpl: android.net.Credentials getPeerCredentials()>
SOURCE|<com.android.gallery3d.data.LocalAlbum: android.net.Uri getContentUri()>
SOURCE|<com.android.launcher2.LauncherModel: com.android.launcher2.ShortcutInfo getShortcutInfo(android.content.pm.PackageManager,android.content.Intent,android.content.Context,android.database.Cursor,int,int,java.util.HashMap)>
SOURCE|<android.media.IMediaScannerService$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
SOURCE|<android.media.IAudioService$Stub$Proxy: int getRemoteStreamVolume()>
SOURCE|<android.widget.TextView$CharWrapper: float getTextRunAdvances(int,int,int,int,int,float[],int,android.graphics.Paint,int)>
SOURCE|<org.apache.harmony.xnet.provider.jsse.OpenSSLRSAPrivateCrtKey: java.math.BigInteger getPublicExponent()>
SOURCE|<org.apache.http.impl.cookie.NetscapeDraftSpec: int getVersion()>
SOURCE|<java.security.cert.CertificateFactory: java.util.Iterator getCertPathEncodings()>
SOURCE|<android.widget.TextView: int getCompoundPaddingEnd()>
SOURCE|<com.android.internal.widget.ActionBarView: int getDisplayOptions()>
SOURCE|<android.widget.TextView: int getSelectionStart()>
SOURCE|<com.google.common.collect.AbstractSortedMultiset: com.google.common.collect.SortedMultiset descendingMultiset()>
SOURCE|<com.google.common.collect.TreeMultiset$Reference: java.lang.Object get()>
SOURCE|<libcore.net.http.HttpsURLConnectionImpl: int getContentLength()>
SOURCE|<android.text.util.Rfc822Token: java.lang.String getAddress()>
SOURCE|<java.lang.reflect.Parameter: java.lang.'annotation'.Annotation getDeclaredAnnotation(java.lang.Class)>
SOURCE|<org.apache.harmony.xnet.provider.jsse.SSLSocketImpl: int getWrappedPort()>
SOURCE|<org.apache.harmony.xml.dom.NodeImpl: org.w3c.dom.Node getLastChild()>
SOURCE|<android.text.MeasuredText: float addStyleRun(android.text.TextPaint,android.text.style.MetricAffectingSpan[],int,android.graphics.Paint$FontMetricsInt)>
SOURCE|<com.android.providers.telephony.MmsProvider: java.lang.String getType(android.net.Uri)>
SOURCE|<android.hardware.usb.UsbManager: java.lang.String getDefaultFunction()>
SOURCE|<org.apache.http.params.HttpProtocolParams: java.lang.String getHttpElementCharset(org.apache.http.params.HttpParams)>
SOURCE|<android.view.inputmethod.InputMethodManager: java.util.Map getShortcutInputMethodsAndSubtypes()>
SOURCE|<android.widget.AdapterViewAnimator: android.view.ViewGroup$LayoutParams createOrReuseLayoutParams(android.view.View)>
SOURCE|<com.android.server.WifiService: java.util.List getConfiguredNetworks()>
SOURCE|<com.android.browser.UrlInputView: int getState()>
SOURCE|<android.accounts.AccountManagerService: android.accounts.AccountManagerService$UserAccounts getUserAccounts(int)>
SOURCE|<android.webkit.WebSettingsClassic: boolean getAllowContentAccess()>
SOURCE|<org.apache.harmony.xnet.provider.jsse.SSLEngineImpl: java.lang.String[] getSupportedCipherSuites()>
SOURCE|<com.android.calendar.Utils: int getJulianMondayFromWeeksSinceEpoch(int)>
SOURCE|<java.lang.StringBuffer: void getChars(int,int,char[],int)>
SOURCE|<java.text.NumberFormat: java.lang.StringBuffer format(java.lang.Object,java.lang.StringBuffer,java.text.FieldPosition)>
SOURCE|<android.app.ActivityManager: java.util.List getRunningExternalApplications()>
SOURCE|<com.android.contacts.group.GroupBrowseListAdapter: com.android.contacts.group.GroupListItem getItem(int)>
SOURCE|<android.content.pm.RegisteredServicesCache: android.content.pm.RegisteredServicesCacheListener getListener()>
SOURCE|<java.io.EmulatedFields: int get(java.lang.String,int)>
SOURCE|<java.nio.DoubleBuffer: java.nio.DoubleBuffer get(double[])>
SOURCE|<org.json.JSONObject: java.lang.Object get(java.lang.String)>
SOURCE|<com.android.internal.widget.AbsActionBarView: int getContentHeight()>
SOURCE|<android.widget.RemoteViewsAdapter: int getItemViewType(int)>
SOURCE|<android.webkit.WebSettings: boolean getAllowContentAccess()>
SOURCE|<com.android.inputmethod.keyboard.internal.KeyboardRow: int getDefaultBackgroundType()>
SOURCE|<java.net.Inet6Address: byte[] getAddress()>
SOURCE|<android.media.AudioManager: int getMasterVolume()>
SOURCE|<android.widget.TextView: android.text.Layout getHintLayout()>
SOURCE|<libcore.icu.CollationKeyICU: byte[] toByteArray()>
SOURCE|<android.graphics.Paint: int getTextRunCursor(char[],int,int,int,int,int)>
SOURCE|<org.apache.harmony.luni.lang.reflect.GenericSignatureParser: java.lang.reflect.Type parseTypeArgument()>
SOURCE|<com.google.common.collect.TreeMultiset: java.util.Iterator entryIterator()>
SOURCE|<java.lang.Class: java.lang.reflect.TypeVariable[] getTypeParameters()>
SOURCE|<com.android.server.am.BatteryStatsService: byte[] getStatistics()>
SOURCE|<com.android.contacts.interactions.GroupCreationDialogFragment: int getTitleResourceId()>
SOURCE|<com.android.providers.contacts.VoicemailStatusTable: java.lang.String getType(com.android.providers.contacts.VoicemailContentProvider$UriData)>
SOURCE|<android.widget.TextView: int getBaseline()>
SOURCE|<java.nio.charset.CharsetEncoder: float averageBytesPerChar()>
SOURCE|<android.text.Layout$SpannedEllipsizer: int getSpanFlags(java.lang.Object)>
SOURCE|<com.android.server.display.DisplayAdapter: java.lang.String getName()>
SOURCE|<com.adobe.xmp.XMPException: int getErrorCode()>
SOURCE|<com.android.inputmethod.keyboard.KeyDetector: com.android.inputmethod.keyboard.Keyboard getKeyboard()>
SOURCE|<org.apache.harmony.security.x509.Extension: byte[] access$300(org.apache.harmony.security.x509.Extension)>
SOURCE|<com.android.internal.widget.DrawableHolder: int getWidth()>
SOURCE|<android.webkit.CallbackProxy$UploadFileMessageData: android.webkit.CallbackProxy$UploadFile getUploadFile()>
SOURCE|<com.google.common.collect.AbstractMultimap: java.util.Collection get(java.lang.Object)>
SOURCE|<java.security.AlgorithmParameters: java.lang.String getAlgorithm()>
SOURCE|<com.android.videoeditor.ProjectsActivity: android.app.Dialog onCreateDialog(int,android.os.Bundle)>
SOURCE|<com.android.internal.telephony.UiccCardApplication: java.lang.String getAid()>
SOURCE|<org.apache.harmony.xml.dom.DOMConfigurationImpl$3: java.lang.Object get(org.apache.harmony.xml.dom.DOMConfigurationImpl)>
SOURCE|<com.android.bluetooth.Utils: java.lang.String getAddressStringFromByte(byte[])>
SOURCE|<android.net.UrlQuerySanitizer: java.lang.String unescape(java.lang.String)>
SOURCE|<android.hardware.display.DisplayManagerGlobal: android.view.Display getRealDisplay(int)>
SOURCE|<android.widget.ImageView: int getMaxHeight()>
SOURCE|<android.media.videoeditor.OverlayFrame: int getResizedRGBSizeHeight()>
SOURCE|<gov.nist.javax.sip.stack.SIPClientTransaction: javax.sip.address.Hop getNextHop()>
SOURCE|<android.net.NetworkInfo: android.net.NetworkInfo$DetailedState getDetailedState()>
SOURCE|<com.android.internal.telephony.IPhoneSubInfo$Stub$Proxy: java.lang.String getIsimDomain()>
SOURCE|<android.media.videoeditor.VideoEditorImpl: android.media.videoeditor.MediaItem getMediaItem(java.lang.String)>
SOURCE|<android.hardware.Camera$Parameters: boolean getAutoWhiteBalanceLock()>
SOURCE|<android.webkit.ZoomManager: float getTextWrapScale()>
SOURCE|<java.lang.Thread: java.lang.Thread$UncaughtExceptionHandler getUncaughtExceptionHandler()>
SOURCE|<android.net.LocalSocket: android.net.Credentials getPeerCredentials()>
SOURCE|<android.graphics.Paint: boolean getFillPath(android.graphics.Path,android.graphics.Path)>
SOURCE|<android.media.AudioService: int getRingerMode()>
SOURCE|<android.text.Editable$Factory: android.text.Editable$Factory getInstance()>
SOURCE|<android.preference.Preference: boolean getShouldDisableView()>
SOURCE|<javax.net.ssl.SSLContextSpi: javax.net.ssl.SSLParameters engineGetDefaultSSLParameters()>
SOURCE|<com.android.mms.dom.DocumentImpl: java.lang.String getInputEncoding()>
SOURCE|<com.android.camera.FocusOverlayManager: java.lang.String getFocusMode()>
SOURCE|<com.android.videoeditor.service.MovieAudioTrack: long getDuration()>
SOURCE|<android.view.View: int getMeasuredWidth()>
SOURCE|<android.gesture.Gesture: long getID()>
SOURCE|<org.apache.harmony.xnet.provider.jsse.OpenSSLSocketImpl: java.lang.String getPeerHostName()>
SOURCE|<com.android.internal.view.menu.MenuBuilder: boolean getOptionalIconsVisible()>
SOURCE|<com.android.server.ConnectivityService: java.lang.String[] getTetheredIfacePairs()>
SOURCE|<com.android.email.mail.store.imap.ImapList: com.android.email.mail.store.imap.ImapElement getKeyedElementOrNull(java.lang.String,boolean)>
SOURCE|<com.android.mms.dom.ElementImpl: short getNodeType()>
SOURCE|<com.android.inputmethod.latin.LogEntries$DeviceInfoEntry: com.android.inputmethod.latin.LogEntries$DeviceInfoEntry getInstance(long,android.content.Context)>
SOURCE|<com.android.internal.location.GpsNetInitiatedHandler: byte[] stringToByteArray(java.lang.String,boolean)>
SOURCE|<com.android.internal.telephony.gsm.SmsCbHeader: int getPageIndex()>
SOURCE|<android.appwidget.AppWidgetHostView: android.view.View getDefaultView()>
SOURCE|<android.widget.LinearLayout: int getBaseline()>
SOURCE|<android.provider.Contacts$People: long tryGetMyContactsGroupId(android.content.ContentResolver)>
SOURCE|<android.widget.CompoundButton: int[] onCreateDrawableState(int)>
SOURCE|<libcore.util.ZoneInfo: int getDSTSavings()>
SOURCE|<com.android.inputmethod.accessibility.AccessibilityEntityProvider: android.view.accessibility.AccessibilityEvent createAccessibilityEvent(com.android.inputmethod.keyboard.Key,int)>
SOURCE|<com.android.mms.dom.smil.SmilDocumentImpl: org.w3c.dom.NodeList getActiveChildrenAt(float)>
SOURCE|<com.android.browser.BrowserBookmarksPage: java.lang.String getUrl(android.database.Cursor)>
SOURCE|<com.android.email.mail.store.imap.ImapList: com.android.email.mail.store.imap.ImapList getKeyedListOrEmpty(java.lang.String)>
SOURCE|<java.nio.FloatBuffer: java.lang.Object array()>
SOURCE|<org.apache.harmony.security.x501.Name$1: java.lang.Object getDecodedObject(org.apache.harmony.security.asn1.BerInputStream)>
SOURCE|<android.app.ListActivity: long getSelectedItemId()>
SOURCE|<gov.nist.javax.sip.stack.UDPMessageProcessor: int getMaximumMessageSize()>
SOURCE|<android.content.pm.PackageItemInfo: android.graphics.drawable.Drawable loadIcon(android.content.pm.PackageManager)>
SOURCE|<com.android.server.location.GpsXtraDownloader: byte[] downloadXtraData()>
SOURCE|<com.android.server.wm.WindowManagerService: com.android.server.wm.DisplayContent getDefaultDisplayContentLocked()>
SOURCE|<android.webkit.ZoomManager: float getZoomOverviewScale()>
SOURCE|<android.view.ScaleGestureDetector: float getCurrentSpan()>
SOURCE|<com.android.internal.widget.IRemoteViewsFactory$Stub$Proxy: android.widget.RemoteViews getViewAt(int)>
SOURCE|<gov.nist.javax.sip.header.SIPHeaderList: java.lang.StringBuffer encodeBody(java.lang.StringBuffer)>
SOURCE|<android.widget.ExpandableListView: long getPackedPositionForChild(int,int)>
SOURCE|<java.util.MissingFormatWidthException: java.lang.String getMessage()>
SOURCE|<com.android.server.am.ActivityManagerService: android.content.pm.ConfigurationInfo getDeviceConfigurationInfo()>
SOURCE|<org.apache.harmony.xml.dom.ProcessingInstructionImpl: short getNodeType()>
SOURCE|<android.content.ContextWrapper: java.io.File getFileStreamPath(java.lang.String)>
SOURCE|<gov.nist.core.Host: java.net.InetAddress getInetAddress()>
SOURCE|<android.view.Display: int getLayerStack()>
SOURCE|<com.android.internal.os.BatteryStatsImpl: long getProcessWakeTime(int,int,long)>
SOURCE|<android.widget.CursorTreeAdapter$MyCursorHelper: long getId(int)>
SOURCE|<libcore.icu.RuleBasedCollatorICU: libcore.icu.CollationElementIteratorICU getCollationElementIterator(java.lang.String)>
SOURCE|<android.app.Activity: android.app.LoaderManager getLoaderManager()>
SOURCE|<android.content.res.CompatibilityInfo: android.content.res.CompatibilityInfo$Translator getTranslator()>
SOURCE|<com.android.contacts.list.ContactEntryListAdapter: int getSortOrder()>
SOURCE|<java.io.ObjectStreamClass: java.lang.reflect.Method getMethodWriteReplace()>
SOURCE|<com.android.gallery3d.filtershow.imageshow.ImageCrop: android.graphics.Matrix getCropRotationMatrix(float,android.graphics.RectF)>
SOURCE|<android.view.accessibility.AccessibilityInteractionClient: android.accessibilityservice.IAccessibilityServiceConnection getConnection(int)>
SOURCE|<com.android.server.wm.WindowState: com.android.server.wm.WindowList getWindowList()>
SOURCE|<android.support.v4.os.ParcelableCompat$CompatCreator: java.lang.Object createFromParcel(android.os.Parcel)>
SOURCE|<android.util.Xml: org.xmlpull.v1.XmlPullParser newPullParser()>
SOURCE|<com.android.bluetooth.opp.BluetoothOppRfcommTransport: java.lang.String getRemoteAddress()>
SOURCE|<java.io.DataInputStream: int read(byte[],int,int)>
SOURCE|<java.math.BigInt: byte[] bigEndianMagnitude()>
SOURCE|<android.util.EventLog: int getTagCode(java.lang.String)>
SOURCE|<org.apache.harmony.xml.ExpatParser$ClonedAttributes: int getLength()>
SOURCE|<java.security.cert.CertPath: java.lang.Object writeReplace()>
SOURCE|<com.google.android.picasasync.PicasaApi: int getUploadedPhotos(com.google.android.picasasync.AlbumEntry,com.google.android.picasasync.PicasaApi$EntryHandler)>
SOURCE|<com.adobe.xmp.impl.XMPDateTimeImpl: int getNanoSecond()>
SOURCE|<com.android.ex.chips.RecipientEntry: java.lang.String getDisplayName()>
SOURCE|<com.google.android.mms.pdu.DeliveryInd: int getStatus()>
SOURCE|<org.apache.http.util.EncodingUtils: java.lang.String getString(byte[],java.lang.String)>
SOURCE|<java.security.KeyFactory: java.security.Provider getProvider()>
SOURCE|<com.android.gallery3d.data.MtpDevice: int getSupportedOperations()>
SOURCE|<gov.nist.javax.sip.message.SIPMessage: javax.sip.header.ToHeader getToHeader()>
SOURCE|<android.nfc.NdefRecord: byte[] getType()>
SOURCE|<com.android.camera.Thumbnail: android.graphics.Bitmap createVideoThumbnailBitmap(java.io.FileDescriptor,int)>
SOURCE|<java.nio.ByteBuffer: java.nio.ByteOrder order()>
SOURCE|<javax.security.cert.X509Certificate$1: java.util.Date getNotAfter()>
SOURCE|<android.widget.Spinner: android.graphics.drawable.Drawable getPopupBackground()>
SOURCE|<com.google.common.collect.MapMakerInternalMap$WeakExpirableEvictableEntry: com.google.common.collect.MapMakerInternalMap$ReferenceEntry getNextEvictable()>
SOURCE|<com.android.server.NativeDaemonConnectorException: int getCode()>
SOURCE|<android.location.IGeocodeProvider$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
SOURCE|<android.app.admin.DevicePolicyManager: int getPasswordMinimumSymbols(android.content.ComponentName,int)>
SOURCE|<android.content.SyncStorageEngine: int getSyncRandomOffset()>
SOURCE|<android.widget.CursorTreeAdapter: android.widget.CursorTreeAdapter$MyCursorHelper getChildrenCursorHelper(int,boolean)>
SOURCE|<android.text.Layout: int getLineEnd(int)>
SOURCE|<android.net.SSLCertificateSocketFactory: java.net.Socket createSocket(java.lang.String,int)>
SOURCE|<com.android.org.bouncycastle.asn1.DERInteger: com.android.org.bouncycastle.asn1.ASN1Integer getInstance(java.lang.Object)>
SOURCE|<android.content.AsyncTaskLoader: java.lang.Object onLoadInBackground()>
SOURCE|<com.android.internal.telephony.cdma.CDMAPhone: java.lang.String getLine1AlphaTag()>
SOURCE|<android.widget.TextView$CharWrapper: float getTextRunAdvances(int,int,int,int,int,float[],int,android.graphics.Paint)>
SOURCE|<com.android.gallery3d.filtershow.imageshow.ImageShow: com.android.gallery3d.filtershow.HistoryAdapter getHistory()>
SOURCE|<com.adobe.xmp.options.SerializeOptions: boolean getOmitPacketWrapper()>
SOURCE|<java.util.concurrent.atomic.AtomicIntegerArray: int getAndIncrement(int)>
SOURCE|<org.xml.sax.helpers.ParserAdapter: org.xml.sax.ContentHandler getContentHandler()>
SOURCE|<android.os.Environment: java.io.File getLegacyExternalStorageDirectory()>
SOURCE|<android.app.INotificationManager$Stub: android.os.IBinder asBinder()>
SOURCE|<android.renderscript.BaseObj: java.lang.String getName()>
SOURCE|<gov.nist.javax.sip.header.To: gov.nist.core.HostPort getHostPort()>
SOURCE|<android.net.Uri$HierarchicalUri: java.lang.String getEncodedPath()>
SOURCE|<android.graphics.drawable.BitmapDrawable: int getGravity()>
SOURCE|<android.nfc.INfcTag$Stub$Proxy: android.nfc.TransceiveResult transceive(int,byte[],boolean)>
SOURCE|<com.android.calendar.EventInfoFragment: android.database.Cursor access$1802(com.android.calendar.EventInfoFragment,android.database.Cursor)>
SOURCE|<java.util.concurrent.locks.AbstractQueuedLongSynchronizer: java.util.Collection getExclusiveQueuedThreads()>
SOURCE|<java.net.HttpURLConnection: int getResponseCode()>
SOURCE|<android.hardware.Camera$Parameters: int getMaxNumFocusAreas()>
SOURCE|<org.apache.harmony.xnet.provider.jsse.OpenSSLSocketImpl: boolean getEnableSessionCreation()>
SOURCE|<com.android.internal.os.BatteryStatsImpl: long getTotalTcpBytesSent(int)>
SOURCE|<android.media.videoeditor.VideoEditorImpl: long getDuration()>
SOURCE|<gov.nist.core.NameValue: java.lang.Object getKey()>
SOURCE|<android.widget.RatingBar: float getStepSize()>
SOURCE|<android.preference.Preference: int getPersistedInt(int)>
SOURCE|<javax.net.ssl.HandshakeCompletedEvent: java.security.Principal getLocalPrincipal()>
SOURCE|<android.widget.TextView: int getTopPaddingOffset()>
SOURCE|<android.location.Address: java.lang.String getPhone()>
SOURCE|<com.android.browser.BrowserSettings: com.android.browser.WebStorageSizeManager getWebStorageSizeManager()>
SOURCE|<java.lang.Character: int getNumericValue(int)>
SOURCE|<java.nio.NioUtils: java.io.FileDescriptor getFD(java.nio.channels.FileChannel)>
SOURCE|<com.android.systemui.statusbar.phone.NavigationBarView: android.view.View getSearchLight()>
SOURCE|<android.net.http.AndroidHttpClient: org.apache.http.conn.ClientConnectionManager getConnectionManager()>
SOURCE|<com.adobe.xmp.impl.XMPDateTimeImpl: int getSecond()>
SOURCE|<com.android.launcher2.Folder: android.view.View getEditTextRegion()>
SOURCE|<com.android.launcher2.AppsCustomizePagedView: int getPageContentWidth()>
SOURCE|<android.widget.Chronometer: long getBase()>
SOURCE|<com.android.internal.telephony.sip.SipPhone$SipConnection: boolean getMute()>
SOURCE|<com.android.internal.policy.impl.GlobalActions$ToggleAction: android.view.View create(android.content.Context,android.view.View,android.view.ViewGroup,android.view.LayoutInflater)>
SOURCE|<org.apache.harmony.xnet.provider.jsse.OpenSSLSessionImpl: java.security.Principal getPeerPrincipal()>
SOURCE|<android.text.TextLine: int getOffsetToLeftRightOf(int,boolean)>
SOURCE|<com.google.common.collect.AbstractSetMultimap: java.util.Collection get(java.lang.Object)>
SOURCE|<com.beetstra.jutf7.Base64Util: byte getChar(int)>
SOURCE|<libcore.icu.NativeDecimalFormat: int getMinimumIntegerDigits()>
SOURCE|<com.android.deskclock.Alarms: boolean get24HourMode(android.content.Context)>
SOURCE|<android.widget.ArrayAdapter: java.lang.Object getItem(int)>
SOURCE|<android.media.AudioService: int getMasterVolume()>
SOURCE|<com.android.camera.Util: int getJpegRotation(int,int)>
SOURCE|<com.googlecode.mp4parser.authoring.Mp4TrackImpl: java.util.List getCompositionTimeEntries()>
SOURCE|<com.android.internal.telephony.cat.ComprehensionTlv: int getTag()>
SOURCE|<com.android.mms.dom.NodeImpl: java.lang.Object getFeature(java.lang.String,java.lang.String)>
SOURCE|<android.widget.ExpandableListView: int getPackedPositionChild(long)>
SOURCE|<com.android.internal.os.BatteryStatsImpl: int getInputEventCount(int)>
SOURCE|<android.widget.RemoteViews$Action: java.lang.String getUniqueKey()>
SOURCE|<sun.misc.Unsafe: sun.misc.Unsafe getUnsafe()>
SOURCE|<java.time.ZonedDateTime: int get(java.time.temporal.TemporalField)>
SOURCE|<android.content.pm.IPackageManager$Stub$Proxy: java.lang.String getNameForUid(int)>
SOURCE|<com.android.phone.PhoneInterfaceManager: android.os.Bundle getCellLocation()>
SOURCE|<gov.nist.javax.sip.message.SIPMessage: gov.nist.javax.sip.header.ContactList getContactHeaders()>
SOURCE|<com.android.server.DevicePolicyManagerService: android.content.ComponentName getGlobalProxyAdmin(int)>
SOURCE|<com.android.contacts.model.RawContactDelta: com.android.contacts.model.account.AccountType getAccountType(com.android.contacts.model.AccountTypeManager)>
SOURCE|<android.preference.PreferenceManager: android.preference.PreferenceScreen inflateFromIntent(android.content.Intent,android.preference.PreferenceScreen)>
SOURCE|<com.google.common.collect.MapMakerInternalMap$EvictionQueue$1: com.google.common.collect.MapMakerInternalMap$ReferenceEntry getPreviousEvictable()>
SOURCE|<android.view.MotionEvent: float getOrientation(int)>
SOURCE|<android.view.ViewRootImpl: android.view.AccessibilityInteractionController getAccessibilityInteractionController()>
SOURCE|<com.android.nfc.handover.HandoverManager: com.android.nfc.handover.HandoverManager$BluetoothHandoverData parseNokia(java.nio.ByteBuffer)>
SOURCE|<org.apache.james.mime4j.field.datetime.parser.DateTimeParser$Date: int getMonth()>
SOURCE|<gov.nist.javax.sip.message.SIPMessage: javax.sip.header.CSeqHeader getCSeq()>
SOURCE|<com.android.browser.Controller: com.android.browser.UI getUi()>
SOURCE|<gov.nist.javax.sip.header.SIPHeaderList: int indexOf(gov.nist.core.GenericObject)>
SOURCE|<android.test.mock.MockPackageManager: java.lang.CharSequence getText(java.lang.String,int,android.content.pm.ApplicationInfo)>
SOURCE|<org.apache.harmony.security.pkcs7.AuthenticatedAttributes: java.util.List getAttributes()>
SOURCE|<gov.nist.javax.sip.header.Via: int getPort()>
SOURCE|<android.content.res.XmlBlock$Parser: int getDepth()>
SOURCE|<org.xml.sax.SAXParseException: int getLineNumber()>
SOURCE|<com.coremedia.iso.boxes.TrackBox: com.coremedia.iso.boxes.SampleTableBox getSampleTableBox()>
SOURCE|<com.android.common.widget.CompositeCursorAdapter: android.database.Cursor getCursor(int)>
SOURCE|<android.webkit.HTML5VideoView: int getVideoLayerId()>
SOURCE|<org.xml.sax.helpers.AttributesImpl: java.lang.String getLocalName(int)>
SOURCE|<com.android.gallery3d.app.SinglePhotoDataAdapter: com.android.gallery3d.ui.ScreenNail getScreenNail(int)>
SOURCE|<com.android.browser.TabControl: com.android.browser.Tab getTabFromView(android.webkit.WebView)>
SOURCE|<com.android.camera.Util: android.hardware.Camera$Size getOptimalVideoSnapshotPictureSize(java.util.List,double)>
SOURCE|<android.widget.Editor$EasyEditPopupWindow: int getVerticalLocalPosition(int)>
SOURCE|<com.android.email.activity.UIControllerBase: java.lang.String getSearchHint()>
SOURCE|<gov.nist.javax.sip.stack.UDPMessageChannel: java.lang.String getTransport()>
SOURCE|<com.android.internal.telephony.PhoneBase: java.util.List getAllCellInfo()>
SOURCE|<android.nfc.NfcActivityManager: android.nfc.NfcActivityManager$NfcActivityState getActivityState(android.app.Activity)>
SOURCE|<android.widget.ExpandableListConnector: android.widget.ExpandableListAdapter getAdapter()>
SOURCE|<android.webkit.BrowserFrame: android.webkit.CallbackProxy getCallbackProxy()>
SOURCE|<java.nio.channels.spi.AbstractSelector: java.nio.channels.spi.SelectorProvider provider()>
SOURCE|<android.content.ClipData$Item: java.lang.String getHtmlText()>
SOURCE|<android.view.View: int[] getDrawableState()>
SOURCE|<com.android.org.bouncycastle.asn1.DERNumericString: byte[] getOctets()>
SOURCE|<com.android.browser.BrowserBookmarksPage: android.content.Intent createShortcutIntent(android.content.Context,android.database.Cursor)>
SOURCE|<android.location.Location: long getTime()>
SOURCE|<com.android.launcher2.Hotseat: int getCellXFromOrder(int)>
SOURCE|<com.google.android.apps.lightcycle.camera.NullSurfaceCameraPreview: com.google.android.apps.lightcycle.camera.CameraApiProxy$CameraProxy getCamera()>
SOURCE|<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>
SOURCE|<android.net.sip.SipAudioCall: android.net.sip.SimpleSessionDescription access$1300(android.net.sip.SipAudioCall)>
SOURCE|<com.coremedia.iso.boxes.MediaBox: com.coremedia.iso.boxes.HandlerBox getHandlerBox()>
SOURCE|<com.android.internal.telephony.gsm.GsmSMSDispatcher: java.lang.String getFormat()>
SOURCE|<com.android.internal.os.BatteryStatsImpl$Uid: java.util.Map getProcessStats()>
SOURCE|<android.content.Intent: char getCharExtra(java.lang.String,char)>
SOURCE|<android.filterfw.format.PrimitiveFormat: android.filterfw.core.MutableFrameFormat createInt16Format(int)>
SOURCE|<libcore.net.http.HttpsURLConnectionImpl: java.io.InputStream getInputStream()>
SOURCE|<android.app.Fragment: android.app.LoaderManager getLoaderManager()>
SOURCE|<javax.obex.ServerOperation: java.lang.String getEncoding()>
SOURCE|<android.app.DownloadManager$Request: android.app.DownloadManager$Request addRequestHeader(java.lang.String,java.lang.String)>
SOURCE|<android.net.sip.ISipSession$Stub$Proxy: android.net.sip.SipProfile getPeerProfile()>
SOURCE|<android.view.View: float getScaleY()>
SOURCE|<android.text.format.Time: int getActualMaximum(int)>
SOURCE|<com.android.phone.OutgoingCallBroadcaster: android.app.Dialog onCreateDialog(int)>
SOURCE|<com.android.internal.telephony.IccRecords: boolean getVoiceCallForwardingFlag()>
SOURCE|<java.security.cert.CertPathValidator: java.security.Provider getProvider()>
SOURCE|<com.android.email.activity.UIControllerTwoPane$ActionBarControllerCallback: java.lang.String getSearchHint()>
SOURCE|<android.hardware.display.WifiDisplayStatus: int getScanState()>
SOURCE|<com.android.internal.widget.EditableInputConnection: android.text.Editable getEditable()>
SOURCE|<com.google.common.collect.ArrayListMultimap: java.util.List get(java.lang.Object)>
SOURCE|<org.apache.http.message.BasicHttpResponse: java.lang.String getReason(int)>
SOURCE|<com.android.launcher2.CellLayout$ViewCluster: int[] getBottomEdge()>
SOURCE|<android.accounts.IAccountManager$Stub$Proxy: java.lang.String getPassword(android.accounts.Account)>
SOURCE|<com.android.contacts.model.RawContact: java.lang.String getDataSet()>
SOURCE|<com.android.internal.telephony.SmsUsageMonitor: int getPremiumSmsPermission(java.lang.String)>
SOURCE|<android.telephony.TelephonyManager: int getNetworkType()>
SOURCE|<android.net.nsd.INsdManager$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
SOURCE|<android.emoji.EmojiFactory: android.graphics.Bitmap getBitmapFromAndroidPua(int)>
SOURCE|<java.util.AbstractMap$SimpleEntry: java.lang.Object getKey()>
SOURCE|<com.android.common.widget.CompositeCursorAdapter: com.android.common.widget.CompositeCursorAdapter$Partition getPartition(int)>
SOURCE|<com.android.emailcommon.utility.Utility: java.lang.String[] getRowColumns(android.content.Context,android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[])>
SOURCE|<java.lang.Class: java.lang.reflect.Field[] getFields()>
SOURCE|<gov.nist.core.ThreadAuditor$ThreadHandle: java.lang.String toString()>
SOURCE|<gov.nist.javax.sip.stack.TCPMessageChannel: gov.nist.javax.sip.stack.SIPTransactionStack getSIPStack()>
SOURCE|<java.util.zip.ZipEntry: long getCompressedSize()>
SOURCE|<java.io.FileOutputStream: java.io.FileDescriptor getFD()>
SOURCE|<libcore.net.http.ResponseHeaders: java.util.Date getServedDate()>
SOURCE|<com.android.inputmethod.compat.InputMethodManagerCompatWrapper: android.view.inputmethod.InputMethodSubtype getCurrentInputMethodSubtype()>
SOURCE|<javax.crypto.spec.RC5ParameterSpec: int getRounds()>
SOURCE|<com.android.internal.telephony.ims.IsimUiccRecords: int getDisplayRule(java.lang.String)>
SOURCE|<com.android.internal.widget.LockPatternUtils: int getRequestedPasswordHistoryLength()>
SOURCE|<com.android.bluetooth.pbap.BluetoothPbapVcardManager: int getContactsSize()>
SOURCE|<com.android.internal.view.IInputContext$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
SOURCE|<com.android.calendar.agenda.AgendaByDayAdapter: long getStartTime(int)>
SOURCE|<com.android.vcard.VCardParserImpl_V30: java.util.Set getKnownPropertyNameSet()>
SOURCE|<java.lang.reflect.Constructor: java.lang.'annotation'.Annotation getAnnotation(java.lang.Class)>
SOURCE|<android.drm.DrmRights: java.lang.String getMimeType()>
SOURCE|<com.android.providers.contacts.ContactsDatabaseHelper: long getMimeTypeIdForOrganization()>
SOURCE|<com.google.common.collect.ImmutableEntry: java.lang.Object getKey()>
SOURCE|<android.webkit.ZoomControlExternal: android.webkit.ZoomControlExternal$ExtendedZoomControls getControls()>
SOURCE|<org.apache.http.impl.client.AbstractHttpClient: org.apache.http.client.AuthenticationHandler getTargetAuthenticationHandler()>
SOURCE|<java.security.Provider: java.lang.Object get(java.lang.Object)>
SOURCE|<org.apache.harmony.xnet.provider.jsse.SSLParametersImpl: java.lang.String[] getEnabledProtocols()>
SOURCE|<gov.nist.javax.sip.header.ParametersHeader: int getParameterAsHexInt(java.lang.String)>
SOURCE|<com.android.email.mail.store.ImapFolder: com.android.emailcommon.mail.Flag[] getPermanentFlags()>
SOURCE|<android.service.textservice.SpellCheckerService$InternalISpellCheckerSession: java.lang.String getLocale()>
SOURCE|<com.android.inputmethod.keyboard.MoreKeysKeyboard$MoreKeysKeyboardParams: int getColumnPos(int)>
SOURCE|<android.bluetooth.IBluetoothPan$Stub$Proxy: java.util.List getDevicesMatchingConnectionStates(int[])>
SOURCE|<org.apache.james.mime4j.field.address.Mailbox: java.lang.String getLocalPart()>
SOURCE|<com.android.contacts.list.ContactEntryListAdapter: android.view.View newHeaderView(android.content.Context,int,android.database.Cursor,android.view.ViewGroup)>
SOURCE|<java.util.AbstractMap$SimpleImmutableEntry: java.lang.Object getValue()>
SOURCE|<com.android.internal.util.TypedProperties: double getDouble(java.lang.String)>
SOURCE|<android.webkit.WebViewClassic: android.webkit.WebViewProvider$ScrollDelegate getScrollDelegate()>
SOURCE|<android.view.accessibility.AccessibilityRecord: int getRemovedCount()>
SOURCE|<android.net.sip.SipSession: android.net.sip.SipProfile getLocalProfile()>
SOURCE|<com.android.videoeditor.service.VideoEditorProject: java.lang.String getTheme()>
SOURCE|<com.android.internal.telephony.PhoneSubInfoProxy: java.lang.String getSubscriberId()>
SOURCE|<com.android.internal.telephony.gsm.GSMPhone: java.lang.String getEsn()>
SOURCE|<android.graphics.drawable.DrawableContainer: int getMinimumWidth()>
SOURCE|<android.bluetooth.BluetoothClass: int getDeviceClass()>
SOURCE|<android.os.Bundle: java.lang.CharSequence[] getCharSequenceArray(java.lang.String)>
SOURCE|<com.android.videoeditor.widgets.ImageViewTouchBase: float getScale()>
SOURCE|<javax.net.ssl.SSLEngine: javax.net.ssl.SSLEngineResult unwrap(java.nio.ByteBuffer,java.nio.ByteBuffer)>
SOURCE|<android.test.mock.MockContentResolver: boolean getSyncAutomatically(android.accounts.Account,java.lang.String)>
SOURCE|<com.android.calendar.widget.CalendarAppWidgetProvider: android.content.Intent getLaunchFillInIntent(android.content.Context,long,long,long,boolean)>
SOURCE|<android.graphics.drawable.ColorDrawable: int getAlpha()>
SOURCE|<android.media.IRingtonePlayer$Stub: android.os.IBinder asBinder()>
SOURCE|<com.android.browser.BaseUi: com.android.browser.TitleBar getTitleBar()>
SOURCE|<com.android.browser.SuggestionsAdapter$SuggestionResults: int getLineCount()>
SOURCE|<com.android.mms.util.SmileyParser: com.android.mms.util.SmileyParser getInstance()>
SOURCE|<gov.nist.javax.sip.message.MessageFactoryImpl: javax.sip.header.UserAgentHeader getDefaultUserAgentHeader()>
SOURCE|<com.android.launcher2.CellLayout: int getDesiredHeight()>
SOURCE|<android.media.videoeditor.AudioTrack: int getDuckedTrackVolume()>
SOURCE|<com.android.contacts.activities.ShowOrCreateActivity: android.app.Dialog onCreateDialog(int)>
SOURCE|<gov.nist.javax.sip.header.ims.PChargingVector: java.lang.String getICID()>
SOURCE|<com.android.internal.view.menu.SubMenuBuilder: android.view.Menu getParentMenu()>
SOURCE|<com.android.contacts.ContactsUtils: android.content.Intent getInvitableIntent(com.android.contacts.model.account.AccountType,android.net.Uri)>
SOURCE|<com.android.email.RefreshManager: java.util.Collection getListenersForTest()>
SOURCE|<com.android.camera.SoundClips: com.android.camera.SoundClips$Player getPlayer(android.content.Context)>
SOURCE|<android.app.admin.DevicePolicyManager: int getPasswordQuality(android.content.ComponentName)>
SOURCE|<android.app.admin.DeviceAdminInfo: java.lang.String getTagForPolicy(int)>
SOURCE|<org.apache.harmony.xnet.provider.jsse.SSLSocketFactoryImpl: java.lang.String[] getSupportedCipherSuites()>
SOURCE|<java.util.concurrent.CopyOnWriteArrayList: java.lang.Object[] getArray()>
SOURCE|<com.android.gallery3d.ui.ExtTexture: int getId()>
SOURCE|<com.google.common.collect.ImmutableSortedMap: com.google.common.collect.ImmutableSortedMap headMap(java.lang.Object,boolean)>
SOURCE|<com.android.internal.os.BatteryStatsImpl$Uid$Pkg$Serv: long getStartTimeToNowLocked(long)>
SOURCE|<android.webkit.AccessibilityInjectorFallback$AccessibilityWebContentKeyBinding: int getActionCode(int)>
SOURCE|<android.widget.TextView: java.lang.String getPrivateImeOptions()>
SOURCE|<android.location.Country: int getSource()>
SOURCE|<android.test.mock.MockCursor: java.lang.String getString(int)>
SOURCE|<java.lang.StackTraceElement: java.lang.String getMethodName()>
SOURCE|<com.android.server.am.ActivityManagerService: android.content.pm.ApplicationInfo getAppInfoForUser(android.content.pm.ApplicationInfo,int)>
SOURCE|<android.text.Layout: int getOffsetToRightOf(int)>
SOURCE|<java.security.Permission: java.lang.String getName()>
SOURCE|<com.android.ex.chips.RecipientEntry: android.net.Uri getPhotoThumbnailUri()>
SOURCE|<libcore.net.url.FileURLConnection: java.security.Permission getPermission()>
SOURCE|<libcore.net.http.HttpConnection: java.net.Socket getSocket()>
SOURCE|<android.test.ActivityInstrumentationTestCase2: android.app.Activity getActivity()>
SOURCE|<com.android.launcher2.WallpaperChooserDialogFragment$WallpaperDrawable: int getOpacity()>
SOURCE|<android.nfc.NdefRecord: int getByteLength()>
SOURCE|<com.android.email.AttachmentInfo: android.content.Intent getAttachmentIntent(android.content.Context,long)>
SOURCE|<android.media.videoeditor.TransitionAlpha: java.lang.String getPNGMaskFilename()>
SOURCE|<org.apache.harmony.xml.dom.NodeImpl: org.w3c.dom.Node getParentNode()>
SOURCE|<com.android.commands.monkey.MonkeyMotionEvent: long getEventTime()>
SOURCE|<android.support.v4.view.MotionEventCompat$BaseMotionEventVersionImpl: float getX(android.view.MotionEvent,int)>
SOURCE|<com.android.gallery3d.data.MediaItem: java.lang.String getFilePath()>
SOURCE|<com.android.server.wm.WindowState: android.graphics.Rect getFrameLw()>
SOURCE|<com.google.common.collect.MapMakerInternalMap$AbstractReferenceEntry: com.google.common.collect.MapMakerInternalMap$ReferenceEntry getPreviousExpirable()>
SOURCE|<android.net.sip.SimpleSessionDescription$Media: java.lang.String getEncryptionKey()>
SOURCE|<android.webkit.WebViewClassic: int getPageBackgroundColor()>
SOURCE|<java.net.DatagramPacket: java.net.SocketAddress getSocketAddress()>
SOURCE|<com.android.videoeditor.widgets.ProgressBar: int getHeight()>
SOURCE|<com.android.bluetooth.hfp.HeadsetService: int getBatteryUsageHint(android.bluetooth.BluetoothDevice)>
SOURCE|<com.android.internal.telephony.gsm.GsmDataConnectionTracker: android.net.LinkCapabilities getLinkCapabilities(java.lang.String)>
SOURCE|<com.android.internal.telephony.cdma.CDMAPhone: java.lang.String getSubscriberId()>
SOURCE|<com.android.internal.telephony.IccIoResult: java.lang.String toString()>
SOURCE|<com.android.browser.BookmarkUtils: android.content.Intent createAddToHomeIntent(android.content.Context,java.lang.String,java.lang.String,android.graphics.Bitmap,android.graphics.Bitmap)>
SOURCE|<android.telephony.TelephonyManager: java.lang.String getCdmaEriText()>
SOURCE|<android.widget.Spinner: int getBaseline()>
SOURCE|<android.view.InputEvent: android.view.InputDevice getDevice()>
SOURCE|<com.android.contacts.detail.ContactDetailPhotoSetter: android.view.View$OnClickListener setupContactPhotoForClick(android.content.Context,com.android.contacts.model.Contact,android.widget.ImageView,boolean)>
SOURCE|<android.view.GLES20RecordingCanvas: android.view.GLES20RecordingCanvas getNextPoolable()>
SOURCE|<gov.nist.javax.sip.header.extensions.MinSE: int getExpires()>
SOURCE|<android.os.IUserManager$Stub$Proxy: java.util.List getUsers(boolean)>
SOURCE|<com.android.org.bouncycastle.asn1.DERBitString: com.android.org.bouncycastle.asn1.DERBitString getInstance(com.android.org.bouncycastle.asn1.ASN1TaggedObject,boolean)>
SOURCE|<android.media.IRemoteControlDisplay$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
SOURCE|<com.android.inputmethod.latin.ExpandableBinaryDictionary: java.util.ArrayList getSuggestions(com.android.inputmethod.latin.WordComposer,java.lang.CharSequence,com.android.inputmethod.keyboard.ProximityInfo)>
SOURCE|<org.apache.harmony.xml.dom.InnerNodeImpl: org.w3c.dom.Node getFirstChild()>
SOURCE|<com.google.common.collect.MapMakerInternalMap$SoftEntry: com.google.common.collect.MapMakerInternalMap$ReferenceEntry getPreviousExpirable()>
SOURCE|<com.android.email.RefreshManager: com.android.email.RefreshManager getInstance(android.content.Context)>
SOURCE|<com.android.providers.contacts.ContactsProvider2: int getMaxDisplayPhotoDim()>
SOURCE|<com.google.common.collect.AbstractMultimap$AsMap: java.lang.Object get(java.lang.Object)>
SOURCE|<com.android.internal.telephony.cdma.CDMAPhone: com.android.internal.telephony.IccSmsInterfaceManager getIccSmsInterfaceManager()>
SOURCE|<java.lang.System: java.lang.String getProperty(java.lang.String)>
SOURCE|<com.android.mms.util.Recycler: int getMessageMinLimit()>
SOURCE|<android.content.pm.IPackageManager$Stub$Proxy: android.content.pm.ParceledListSlice getInstalledApplications(int,java.lang.String,int)>
SOURCE|<android.filterfw.core.SerializedFrame$DirectByteOutputStream: byte[] getByteArray()>
SOURCE|<com.android.bluetooth.btservice.AdapterService$AdapterServiceBinder: java.lang.String getRemoteAlias(android.bluetooth.BluetoothDevice)>
SOURCE|<android.app.Activity: int getVolumeControlStream()>
SOURCE|<java.nio.charset.CharsetEncoder: java.nio.charset.CoderResult encode(java.nio.CharBuffer,java.nio.ByteBuffer,boolean)>
SOURCE|<com.android.bluetooth.pan.PanService$BluetoothPanBinder: java.util.List getConnectedDevices()>
SOURCE|<android.filterfw.format.PrimitiveFormat: android.filterfw.core.MutableFrameFormat createInt32Format(int)>
SOURCE|<com.coremedia.iso.boxes.MovieHeaderBox: long getContentSize()>
SOURCE|<android.filterfw.format.PrimitiveFormat: android.filterfw.core.MutableFrameFormat createFloatFormat(int,int)>
SOURCE|<com.android.browser.TabControl: int getTabPosition(com.android.browser.Tab)>
SOURCE|<com.coremedia.iso.boxes.mdat.MediaDataBox: long getSize()>
SOURCE|<org.apache.harmony.xnet.provider.jsse.NativeCrypto: java.lang.String[] getDefaultCipherSuites()>
SOURCE|<java.time.LocalDateTime: int getNano()>
SOURCE|<android.content.ContentResolver: int getIsSyncable(android.accounts.Account,java.lang.String)>
SOURCE|<android.os.storage.IObbActionListener$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
SOURCE|<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$Uid$Proc getProcessStatsLocked(int,java.lang.String)>
SOURCE|<gov.nist.javax.sip.stack.SIPTransaction: gov.nist.javax.sip.message.SIPRequest getOriginalRequest()>
SOURCE|<android.telephony.CellSignalStrengthCdma: int getEvdoEcio()>
SOURCE|<android.view.animation.Animation: boolean getTransformation(long,android.view.animation.Transformation)>
SOURCE|<com.android.internal.telephony.SmsMessageBase: int getIndexOnIcc()>
SOURCE|<org.apache.http.impl.cookie.CookieSpecBase: java.util.List parse(org.apache.http.HeaderElement[],org.apache.http.cookie.CookieOrigin)>
SOURCE|<java.net.Authenticator: java.net.URL getRequestingURL()>
SOURCE|<com.android.calendar.widget.CalendarAppWidgetService$CalendarFactory: int getCount()>
SOURCE|<com.coremedia.iso.boxes.mdat.MediaDataBox: java.nio.ByteBuffer getHeader()>
SOURCE|<android.app.SharedPreferencesImpl: java.lang.String getString(java.lang.String,java.lang.String)>
SOURCE|<android.preference.PreferenceManager: int getSharedPreferencesMode()>
SOURCE|<android.view.KeyEvent: char getDisplayLabel()>
SOURCE|<java.util.HashMap$HashMapEntry: java.lang.Object getValue()>
SOURCE|<com.android.phone.PhoneInterfaceManager: int getCdmaEriIconMode()>
SOURCE|<com.android.gallery3d.filtershow.filters.ImageFilter: int getMinParameter()>
SOURCE|<java.net.URI: int getEffectivePort()>
SOURCE|<android.app.admin.IDevicePolicyManager$Stub$Proxy: long getPasswordExpirationTimeout(android.content.ComponentName,int)>
SOURCE|<com.android.server.InputMethodManagerService$InputMethodSettings: java.util.List getEnabledInputMethodListLocked()>
SOURCE|<com.android.gallery3d.common.LruCache: java.lang.Object get(java.lang.Object)>
SOURCE|<com.android.mms.dom.smil.SmilDocumentImpl: org.w3c.dom.smil.TimeList getEnd()>
SOURCE|<com.android.contacts.model.account.GoogleAccountType: java.lang.String getViewContactNotifyServiceClassName()>
SOURCE|<com.android.internal.policy.impl.keyguard.KeyguardActivityLauncher: com.android.internal.policy.impl.keyguard.KeyguardActivityLauncher$CameraWidgetInfo getCameraWidgetInfo()>
SOURCE|<android.filterfw.core.FilterPort: java.lang.String toString()>
SOURCE|<android.preference.PreferenceManager: android.preference.PreferenceScreen createPreferenceScreen(android.content.Context)>
SOURCE|<com.android.gallery3d.data.DataManager: long getTotalUsedCacheSize()>
SOURCE|<com.android.gallery3d.data.UriImage: java.lang.String getMimeType()>
SOURCE|<gov.nist.javax.sip.header.ims.PPreferredService: java.lang.String getApplicationIdentifiers()>
SOURCE|<com.android.contacts.list.AccountFilterActivity: java.util.List access$100(android.content.Context)>
SOURCE|<android.widget.Spinner$DropDownAdapter: int getCount()>
SOURCE|<com.android.internal.os.BatteryStatsImpl$Uid: java.util.Map getSensorStats()>
SOURCE|<com.android.gallery3d.filtershow.imageshow.GeometryMetadata: float getRotation()>
SOURCE|<com.coremedia.iso.boxes.TrackHeaderBox: long getModificationTime()>
SOURCE|<android.view.accessibility.AccessibilityRecord: int getFromIndex()>
SOURCE|<com.android.internal.widget.ActionBarContextView: java.lang.CharSequence getSubtitle()>
SOURCE|<com.android.launcher2.PagedView: int getChildWidth(int)>
SOURCE|<com.android.contacts.model.RawContactDelta$ValuesDelta: int getPhoneType()>
SOURCE|<android.view.accessibility.AccessibilityRecord: java.util.List getText()>
SOURCE|<java.util.concurrent.ForkJoinPool: int getActiveThreadCount()>
SOURCE|<java.io.FileInputStream: java.io.FileDescriptor getFD()>
SOURCE|<com.google.android.picasasync.UploadTaskEntry: com.android.gallery3d.common.Fingerprint getFingerprint()>
SOURCE|<com.google.common.collect.MapMakerInternalMap$SoftExpirableEvictableEntry: com.google.common.collect.MapMakerInternalMap$ReferenceEntry getNextEvictable()>
SOURCE|<android.telephony.SmsCbEtwsInfo: long getPrimaryNotificationTimestamp()>
SOURCE|<com.android.exchange.adapter.ContactsSyncAdapter: java.lang.String getSyncKey()>
SOURCE|<java.net.Socket: java.nio.channels.SocketChannel getChannel()>
SOURCE|<android.widget.AbsListView$RecycleBin: android.view.View getTransientStateView(int)>
SOURCE|<com.android.bluetooth.btservice.AdapterService$AdapterServiceBinder: int getScanMode()>
SOURCE|<android.nfc.tech.NfcF: byte[] transceive(byte[],boolean)>
SOURCE|<org.apache.harmony.xnet.provider.jsse.SSLSocketImpl: boolean getWantClientAuth()>
SOURCE|<android.app.SearchManager: android.database.Cursor getSuggestions(android.app.SearchableInfo,java.lang.String)>
SOURCE|<com.google.android.mms.pdu.RetrieveConf: byte[] getMessageId()>
SOURCE|<android.sax.Element: android.sax.Element getChild(java.lang.String,java.lang.String)>
SOURCE|<android.text.style.RasterizerSpan: android.graphics.Rasterizer getRasterizer()>
SOURCE|<org.apache.harmony.xnet.provider.jsse.OpenSSLSocketImplWrapper: int getTrafficClass()>
SOURCE|<gov.nist.core.net.SslNetworkLayer: java.net.Socket createSocket(java.net.InetAddress,int,java.net.InetAddress,int)>
SOURCE|<com.android.contacts.list.CustomContactListFilterActivity$DisplayAdapter: android.view.View getGroupView(int,boolean,android.view.View,android.view.ViewGroup)>
SOURCE|<com.android.server.net.NetworkStatsCollection: android.net.NetworkStatsHistory getHistory(android.net.NetworkTemplate,int,int,int,int)>
SOURCE|<android.support.v4.app.NotificationCompat$Builder: android.app.Notification getNotification()>
SOURCE|<android.test.IsolatedContext$MockAccountManager: android.accounts.Account[] getAccounts()>
SOURCE|<android.graphics.YuvImage: int getYuvFormat()>
SOURCE|<android.webkit.ZoomManager: float getReadingLevelScale()>
SOURCE|<android.view.MotionEvent: float getHistoricalTouchMinor(int)>
SOURCE|<java.security.Provider: java.util.Collection values()>
SOURCE|<com.android.internal.telephony.CallManager: java.util.List getAllPhones()>
SOURCE|<com.android.contacts.editor.ContactEditorFragment$PhotoHandler: long getWritableEntityId()>
SOURCE|<android.filterfw.core.AsyncRunner: java.lang.Exception getError()>
SOURCE|<org.xml.sax.InputSource: java.lang.String getSystemId()>
SOURCE|<android.media.MediaMetadataRetriever: android.graphics.Bitmap getFrameAtTime(long,int)>
SOURCE|<com.android.deskclock.stopwatch.StopwatchFragment$ImageLabelAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)>
SOURCE|<gov.nist.javax.sip.header.Reason: java.lang.String getProtocol()>
SOURCE|<android.app.Activity: int getTaskId()>
SOURCE|<gov.nist.javax.sip.address.SipUri: java.lang.Object getParm(java.lang.String)>
SOURCE|<com.google.common.collect.ForwardingSet: java.lang.Object delegate()>
SOURCE|<android.bluetooth.IBluetooth$Stub$Proxy: android.os.ParcelFileDescriptor createSocketChannel(int,java.lang.String,android.os.ParcelUuid,int,int)>
SOURCE|<android.text.format.DateUtils: java.lang.CharSequence getRelativeTimeSpanString(android.content.Context,long)>
SOURCE|<android.net.NetworkStatsHistory: long getEnd()>
SOURCE|<com.android.browser.view.ScrollerView: int getMaxScrollAmount()>
SOURCE|<android.hardware.input.IInputManager$Stub$Proxy: java.lang.String[] getKeyboardLayoutsForInputDevice(java.lang.String)>
SOURCE|<java.nio.CharToByteBufferAdapter: char get(int)>
SOURCE|<android.preference.PreferenceManager: java.lang.String getSharedPreferencesName()>
SOURCE|<java.net.URL: int getPort()>
SOURCE|<android.app.ApplicationPackageManager: java.lang.String[] canonicalToCurrentPackageNames(java.lang.String[])>
SOURCE|<android.content.ContentUris: long parseId(android.net.Uri)>
SOURCE|<android.nfc.tech.Ndef: java.lang.String getType()>
SOURCE|<com.android.gallery3d.data.ClusterAlbumSet: com.android.gallery3d.data.MediaSet getSubMediaSet(int)>
SOURCE|<android.accounts.IAccountAuthenticator$Stub: android.accounts.IAccountAuthenticator asInterface(android.os.IBinder)>
SOURCE|<org.apache.http.auth.AuthScope: java.lang.String getScheme()>
SOURCE|<gov.nist.javax.sip.message.SIPMessage: int getSize()>
SOURCE|<com.android.deskclock.widget.swipeablelistview.LogTag: java.lang.String getLogTag()>
SOURCE|<com.android.mms.model.SlideModel: com.android.mms.model.VideoModel getVideo()>
SOURCE|<java.util.concurrent.ThreadPoolExecutor: int getMaximumPoolSize()>
SOURCE|<com.android.internal.policy.impl.keyguard.KeyguardViewStateManager: int getTransportState()>
SOURCE|<com.android.server.DevicePolicyManagerService: int getPasswordHistoryLength(android.content.ComponentName,int)>
SOURCE|<android.view.animation.AnimationSet: long getStartTime()>
SOURCE|<java.util.Vector: java.lang.Object get(int)>
SOURCE|<dalvik.system.profiler.HprofData: java.util.List getThreadHistory()>
SOURCE|<java.net.HttpRetryException: java.lang.String getReason()>
SOURCE|<com.android.internal.app.ActionBarImpl$ActionModeImpl: java.lang.CharSequence getSubtitle()>
SOURCE|<android.drm.mobile1.DrmRawContent: int getContentLength(android.drm.mobile1.DrmRights)>
SOURCE|<com.android.launcher2.FocusOnlyTabWidget: int getChildTabIndex(android.view.View)>
SOURCE|<android.widget.Switch: java.lang.CharSequence getTextOn()>
SOURCE|<android.widget.RelativeLayout: int getGravity()>
SOURCE|<java.sql.Timestamp: long getTime()>
SOURCE|<com.android.i18n.phonenumbers.PhoneNumberUtil: int getLengthOfGeographicalAreaCode(com.android.i18n.phonenumbers.Phonenumber$PhoneNumber)>
SOURCE|<com.android.gallery3d.filtershow.PanelController$Panel: int getPosition()>
SOURCE|<android.content.SyncAdapterType: java.lang.String getSettingsActivity()>
SOURCE|<android.widget.SimpleExpandableListAdapter: int getGroupCount()>
SOURCE|<android.net.IConnectivityManager$Stub: android.os.IBinder asBinder()>
SOURCE|<com.android.bluetooth.btservice.AdapterProperties: int getBluetoothClass()>
SOURCE|<org.apache.http.impl.cookie.BrowserCompatSpec: org.apache.http.Header getVersionHeader()>
SOURCE|<android.location.ICountryDetector$Stub$Proxy: android.location.Country detectCountry()>
SOURCE|<com.android.mms.dom.smil.SmilParElementImpl: float getDur()>
SOURCE|<com.android.contacts.NfcHandler: android.nfc.NdefMessage createNdefMessage(android.nfc.NfcEvent)>
SOURCE|<com.android.internal.widget.multiwaveview.Ease$Quint$1: float getInterpolation(float)>
SOURCE|<java.security.cert.X509CertSelector: java.util.Set getExtendedKeyUsage()>
SOURCE|<android.app.admin.DevicePolicyManager: int getPasswordMinimumLowerCase(android.content.ComponentName,int)>
SOURCE|<com.google.android.mms.pdu.SendReq: int getDeliveryReport()>
SOURCE|<com.googlecode.mp4parser.authoring.tracks.CroppedTrack: com.coremedia.iso.boxes.SampleDescriptionBox getSampleDescriptionBox()>
SOURCE|<com.android.internal.os.BinderInternal: long getLastGcTime()>
SOURCE|<com.google.android.apps.lightcycle.sensor.SensorReader: float getAngularVelocitySquaredRad()>
SOURCE|<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.message.SIPRequest getLastAckSent()>
SOURCE|<android.view.inputmethod.BaseInputConnection: int getComposingSpanStart(android.text.Spannable)>
SOURCE|<android.widget.LinearLayout: int getOrientation()>
SOURCE|<com.android.bluetooth.a2dp.A2dpService$BluetoothA2dpBinder: java.util.List getDevicesMatchingConnectionStates(int[])>
SOURCE|<android.app.WallpaperManager: android.app.WallpaperManager getInstance(android.content.Context)>
SOURCE|<android.telephony.SmsMessage: int getTPLayerLengthForPDU(java.lang.String)>
SOURCE|<android.view.ViewPropertyAnimator: long getDuration()>
SOURCE|<android.hardware.usb.IUsbManager$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
SOURCE|<android.os.IPermissionController$Stub: android.os.IBinder asBinder()>
SOURCE|<com.android.mms.transaction.HttpUtils: byte[] httpConnection(android.content.Context,long,java.lang.String,byte[],int,boolean,java.lang.String,int)>
SOURCE|<com.android.internal.telephony.DataConnectionTracker: android.net.LinkCapabilities getLinkCapabilities(java.lang.String)>
SOURCE|<android.content.pm.ConfigurationInfo: java.lang.String getGlEsVersion()>
SOURCE|<android.graphics.drawable.BitmapDrawable: android.graphics.Shader$TileMode getTileModeX()>
SOURCE|<com.android.nfc.dhimpl.NativeNfcTag: int getHandle()>
SOURCE|<com.android.email.activity.UiUtilities: android.view.View getView(android.app.Activity,int)>
SOURCE|<com.android.email.provider.ContentCache$CachedCursor: int getPosition()>
SOURCE|<java.nio.DirectByteBuffer: float getFloat(int)>
SOURCE|<java.util.concurrent.ForkJoinTask: java.lang.Throwable getException()>
SOURCE|<gov.nist.javax.sip.header.Challenge: java.lang.String getDomain()>
SOURCE|<com.android.exchange.AbstractSyncService: android.os.Bundle validate(java.lang.Class,com.android.emailcommon.provider.HostAuth,android.content.Context)>
SOURCE|<gov.nist.javax.sip.stack.TCPMessageProcessor: int getMaximumMessageSize()>
SOURCE|<com.android.internal.telephony.IPhoneSubInfo$Stub: com.android.internal.telephony.IPhoneSubInfo asInterface(android.os.IBinder)>
SOURCE|<android.nfc.INfcAdapterExtras$Stub$Proxy: java.lang.String getDriverName(java.lang.String)>
SOURCE|<com.android.contacts.model.RawContactDelta$ValuesDelta: java.lang.Integer getAsInteger(java.lang.String,java.lang.Integer)>
SOURCE|<com.android.email.mail.store.imap.ImapUtility: java.lang.String[] getImapRangeValues(java.lang.String)>
SOURCE|<com.android.launcher2.CellLayout$ViewCluster: int[] getLeftEdge()>
SOURCE|<com.android.launcher2.CellLayout$ViewCluster: int[] getRightEdge()>
SOURCE|<android.filterfw.core.NativeFrame: int[] getInts()>
SOURCE|<com.android.browser.provider.BrowserProvider2$SuggestionsCursor: java.lang.String[] getColumnNames()>
SOURCE|<android.net.Uri$StringUri: java.lang.String getEncodedPath()>
SOURCE|<com.android.bluetooth.pbap.BluetoothPbapAuthenticator: byte[] onAuthenticationResponse(byte[])>
SOURCE|<com.android.internal.telephony.cdma.SmsMessage: java.util.ArrayList getSmsCbProgramData()>
SOURCE|<android.view.MotionEvent: long getEventTimeNano()>
SOURCE|<com.android.org.bouncycastle.asn1.DERUniversalString: com.android.org.bouncycastle.asn1.DERUniversalString getInstance(com.android.org.bouncycastle.asn1.ASN1TaggedObject,boolean)>
SOURCE|<com.android.internal.telephony.IccCardProxy: boolean getIccLockEnabled()>
SOURCE|<android.nfc.NfcAdapter: int getAdapterState()>
SOURCE|<android.filterfw.core.Filter: int getStatus()>
SOURCE|<java.net.URL: int getEffectivePort()>
SOURCE|<org.apache.commons.logging.impl.Jdk14Logger: java.util.logging.Logger getLogger()>
SOURCE|<android.filterfw.core.FilterGraph: android.filterfw.core.Filter getFilter(java.lang.String)>
SOURCE|<android.widget.AbsListView: int getLeftPaddingOffset()>
SOURCE|<android.drm.DrmUtils: byte[] readBytes(java.io.File)>
SOURCE|<org.apache.harmony.xnet.provider.jsse.DHParameters: byte[] getPrime()>
SOURCE|<android.widget.GridLayout$Axis: android.widget.GridLayout$PackedMap getGroupBounds()>
SOURCE|<android.content.res.StringBlock: java.lang.CharSequence get(int)>
SOURCE|<com.android.gallery3d.picasasource.PicasaAlbum: com.google.android.picasasync.PhotoEntry getPhotoEntry(com.android.gallery3d.picasasource.PicasaSource,long)>
SOURCE|<java.text.BreakIterator: java.text.BreakIterator getWordInstance(java.util.Locale)>
SOURCE|<com.android.internal.telephony.ITelephony$Stub$Proxy: int getCallState()>
SOURCE|<java.time.LocalDateTime: int getMonthValue()>
SOURCE|<java.net.DatagramSocket: int getReceiveBufferSize()>
SOURCE|<com.android.internal.view.IInputContext$Stub$Proxy: void getSelectedText(int,int,com.android.internal.view.IInputContextCallback)>
SOURCE|<gov.nist.javax.sip.stack.UDPMessageChannel: java.lang.String getHost()>
SOURCE|<com.android.nfc.handover.HandoverManager: com.android.nfc.handover.PendingHandoverTransfer registerOutTransferLocked(com.android.nfc.handover.HandoverManager$BluetoothHandoverData,android.net.Uri[])>
SOURCE|<android.app.WallpaperInfo: java.lang.CharSequence loadDescription(android.content.pm.PackageManager)>
SOURCE|<gov.nist.javax.sip.stack.SIPDialog: int getLocalSequenceNumber()>
SOURCE|<com.android.gallery3d.ui.SlotView$Layout: int getSlotIndexByPosition(float,float)>
SOURCE|<java.text.BreakIterator: long getLong(byte[],int)>
SOURCE|<com.android.deskclock.widget.multiwaveview.TargetDrawable: float getScaleX()>
SOURCE|<com.google.android.mms.pdu.RetrieveConf: com.google.android.mms.pdu.EncodedStringValue getRetrieveText()>
SOURCE|<com.android.camera.FocusOverlayManager: java.util.List getFocusAreas()>
SOURCE|<com.android.internal.view.menu.MenuItemImpl: java.lang.Runnable getCallback()>
SOURCE|<android.view.textservice.SpellCheckerInfo: android.view.textservice.SpellCheckerSubtype getSubtypeAt(int)>
SOURCE|<java.text.NumberFormat: java.text.NumberFormat getPercentInstance(java.util.Locale)>
SOURCE|<org.apache.harmony.xnet.provider.jsse.CertificateMessage: java.lang.String getAuthType()>
SOURCE|<gov.nist.javax.sip.header.Via: java.lang.String getComment()>
SOURCE|<com.android.server.MountService$ObbState: android.os.IBinder getBinder()>
SOURCE|<java.util.ArrayDeque: java.lang.Object getLast()>
SOURCE|<com.android.server.MountService: android.os.storage.StorageVolume[] getVolumeList()>
SOURCE|<android.widget.ExpandableListView: long getPackedPositionForGroup(int)>
SOURCE|<com.android.gallery3d.picasasource.PicasaSource: com.android.gallery3d.common.BlobCache getFaceCache(android.content.Context)>
SOURCE|<com.android.contacts.list.ContactTileAdapter: int getViewTypeCount()>
SOURCE|<com.android.inputmethod.keyboard.MoreKeysKeyboard$MoreKeysKeyboardParams: int getDefaultKeyCoordX()>
SOURCE|<com.android.internal.os.BatteryStatsImpl$Timer: long getTotalTimeLocked(long,int)>
SOURCE|<com.android.providers.contacts.ProfileProvider: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,android.os.CancellationSignal)>
SOURCE|<android.text.method.Touch: int getInitialScrollY(android.widget.TextView,android.text.Spannable)>
SOURCE|<android.os.Build: java.lang.String getRadioVersion()>
SOURCE|<android.app.DownloadManager$CursorTranslator: long getLong(int)>
SOURCE|<gov.nist.javax.sip.header.CSeq: long getSeqNumber()>
SOURCE|<android.view.InputDevice: int getId()>
SOURCE|<gov.nist.javax.sip.address.SipUri: java.lang.String getUserType()>
SOURCE|<android.webkit.HTML5VideoView: int getCurrentState()>
SOURCE|<com.android.internal.telephony.SmsMessageBase: java.lang.String getOriginatingAddress()>
SOURCE|<gov.nist.javax.sip.message.SIPMessage: java.util.ListIterator getUnrecognizedHeaders()>
SOURCE|<android.net.wifi.WifiStateMachine: java.util.List syncGetScanResultsList()>
SOURCE|<com.android.contacts.GroupMetaData: long getGroupId()>
SOURCE|<com.android.internal.widget.ActionBarView: int getNavigationMode()>
SOURCE|<com.android.providers.contacts.DataRowHandler: android.content.ContentValues getAugmentedValues(android.database.sqlite.SQLiteDatabase,long,android.content.ContentValues)>
SOURCE|<android.widget.AutoCompleteTextView: int getThreshold()>
SOURCE|<com.android.internal.view.menu.ActionMenuItem: android.view.View getActionView()>
SOURCE|<android.media.IRingtonePlayer$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
SOURCE|<android.util.NtpTrustedTime: long getCachedNtpTime()>
SOURCE|<com.android.mms.util.PduLoaderManager: com.android.mms.util.ItemLoadedFuture getPdu(android.net.Uri,boolean,com.android.mms.util.ItemLoadedCallback)>
SOURCE|<com.android.server.am.BatteryStatsService: long getAwakeTimeBattery()>
SOURCE|<com.android.internal.view.IInputMethodManager$Stub$Proxy: android.view.inputmethod.InputMethodSubtype getCurrentInputMethodSubtype()>
SOURCE|<com.android.inputmethod.keyboard.internal.KeyboardRow: int getKeyY()>
SOURCE|<com.android.browser.SuggestionsAdapter: com.android.browser.SuggestionsAdapter$SuggestItem getItem(int)>
SOURCE|<java.time.chrono.JapaneseEra: sun.util.calendar.Era getPrivateEra()>
SOURCE|<java.time.OffsetDateTime: int getMinute()>
SOURCE|<android.graphics.drawable.NinePatchDrawable: int getChangingConfigurations()>
SOURCE|<com.android.exchange.adapter.Parser: byte[] getValueBytes()>
SOURCE|<com.android.internal.view.WindowManagerPolicyThread: java.lang.Thread getThread()>
SOURCE|<java.security.cert.CertStore: java.security.cert.CertStore getInstance(java.lang.String,java.security.cert.CertStoreParameters)>
SOURCE|<gov.nist.javax.sip.stack.MessageProcessor: java.lang.String getTransport()>
SOURCE|<com.android.internal.telephony.UUSInfo: int getDcs()>
SOURCE|<android.content.SyncManager: android.content.SyncAdapterType[] getSyncAdapterTypes(int)>
SOURCE|<com.android.providers.media.MediaProvider: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>
SOURCE|<javax.net.ServerSocketFactory: javax.net.ServerSocketFactory getDefault()>
SOURCE|<android.net.rtp.AudioCodec: android.net.rtp.AudioCodec[] getCodecs()>
SOURCE|<com.google.android.mms.pdu.MultimediaMessagePdu: com.google.android.mms.pdu.PduBody getBody()>
SOURCE|<com.android.internal.policy.impl.GlobalActions$GlobalActionsDialog: android.widget.ListView getListView()>
SOURCE|<com.android.calendar.EventInfoFragment: android.database.Cursor access$900(com.android.calendar.EventInfoFragment)>
SOURCE|<com.android.gallery3d.app.StateManager: com.android.gallery3d.app.ActivityState getTopState()>
SOURCE|<android.telephony.CellSignalStrengthCdma: int getDbm()>
SOURCE|<android.content.OperationApplicationException: int getNumSuccessfulYieldPoints()>
SOURCE|<android.graphics.drawable.DrawableContainer: boolean getPadding(android.graphics.Rect)>
SOURCE|<com.android.server.power.DisplayPowerState: int getScreenBrightness()>
SOURCE|<java.util.prefs.PreferenceChangeEvent: java.util.prefs.Preferences getNode()>
SOURCE|<android.view.View: java.lang.Object getTag(int)>
SOURCE|<android.net.Uri$OpaqueUri: java.lang.String getEncodedAuthority()>
SOURCE|<android.graphics.drawable.PictureDrawable: int getIntrinsicWidth()>
SOURCE|<java.net.Authenticator: java.lang.String getRequestingPrompt()>
SOURCE|<com.google.android.apps.lightcycle.math.Matrix3x3d: double get(int,int)>
SOURCE|<libcore.util.ZoneInfoDB: java.lang.String[] getAvailableIDs(int)>
SOURCE|<android.app.ActivityManager: int getLargeMemoryClass()>
SOURCE|<android.app.Dialog: android.app.ActionBar getActionBar()>
SOURCE|<android.util.SparseIntArray: int get(int)>
SOURCE|<java.nio.DoubleToByteBufferAdapter: java.nio.DoubleBuffer get(double[],int,int)>
SOURCE|<com.android.contacts.model.account.BaseAccountType: com.android.contacts.model.dataitem.DataKind addDataKindGroupMembership(android.content.Context)>
SOURCE|<com.android.gallery3d.data.FilterTypeSet: java.util.ArrayList getMediaItem(int,int)>
SOURCE|<com.android.gallery3d.picasasource.PicasaAlbum$CoverItem: int getHeight()>
SOURCE|<java.nio.ShortToByteBufferAdapter: short get(int)>
SOURCE|<android.renderscript.Element: int getSubElementOffsetBytes(int)>
SOURCE|<org.apache.http.auth.NTCredentials: java.lang.String getWorkstation()>
SOURCE|<android.view.WindowOrientationListener: int getProposedRotation()>
SOURCE|<com.android.server.pm.Settings: java.lang.String getInstallerPackageNameLPr(java.lang.String)>
SOURCE|<android.view.MotionEvent: int getPointerCount()>
SOURCE|<android.view.IWindow$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
SOURCE|<android.net.LocalServerSocket: java.io.FileDescriptor getFileDescriptor()>
SOURCE|<android.preference.EditTextPreference: android.widget.EditText getEditText()>
SOURCE|<com.android.org.bouncycastle.asn1.ASN1OctetString: com.android.org.bouncycastle.asn1.ASN1Primitive getLoadedObject()>
SOURCE|<android.accounts.AbstractAccountAuthenticator: android.os.Bundle getAccountRemovalAllowed(android.accounts.AccountAuthenticatorResponse,android.accounts.Account)>
SOURCE|<android.bluetooth.BluetoothHealth: java.util.List getConnectedDevices()>
SOURCE|<android.filterpacks.imageproc.FillLightFilter: android.filterfw.core.FrameFormat getOutputFormat(java.lang.String,android.filterfw.core.FrameFormat)>
SOURCE|<android.telephony.cdma.CdmaSmsCbProgramData: int getOperation()>
SOURCE|<org.apache.harmony.xnet.provider.jsse.SSLSocketImpl: boolean getNeedClientAuth()>
SOURCE|<android.content.ContentProviderProxy: android.net.Uri insert(android.net.Uri,android.content.ContentValues)>
SOURCE|<com.android.org.bouncycastle.asn1.DERNumericString: com.android.org.bouncycastle.asn1.DERNumericString getInstance(java.lang.Object)>
SOURCE|<com.coremedia.iso.boxes.MediaHeaderBox: long getTimescale()>
SOURCE|<com.android.providers.contacts.SearchIndexManager$IndexBuilder: java.lang.String getName()>
SOURCE|<com.android.gallery3d.ui.SelectionManager: java.util.ArrayList getSelected(boolean)>
SOURCE|<com.google.android.mms.pdu.GenericPdu: int getMmsVersion()>
SOURCE|<org.apache.harmony.xml.ExpatParser$CurrentAttributes: int getLength()>
SOURCE|<com.android.internal.util.TypedProperties: float getFloat(java.lang.String,float)>
SOURCE|<com.android.contacts.group.GroupListItem: java.lang.String getDataSet()>
SOURCE|<gov.nist.javax.sip.header.SIPHeader: java.lang.String getName()>
SOURCE|<android.location.Criteria: int getVerticalAccuracy()>
SOURCE|<android.animation.KeyframeSet: java.lang.Object getValue(float)>
SOURCE|<java.sql.DriverManager: int getLoginTimeout()>
SOURCE|<org.apache.harmony.xml.dom.LeafNodeImpl: org.w3c.dom.Node getPreviousSibling()>
SOURCE|<android.preference.DialogPreference: java.lang.CharSequence getDialogTitle()>
SOURCE|<com.android.bluetooth.a2dp.A2dpService$BluetoothA2dpBinder: java.util.List getConnectedDevices()>
SOURCE|<android.net.http.Headers: java.lang.String getRefresh()>
SOURCE|<com.google.common.collect.Ordering: com.google.common.collect.Ordering reverse()>
SOURCE|<java.io.File: void <init>(java.io.File,java.lang.String)>
SOURCE|<java.lang.reflect.Executable: java.lang.reflect.Parameter[] getParameters()>
SOURCE|<javax.obex.ServerOperation: int getMaxPacketSize()>
SOURCE|<org.apache.harmony.xnet.provider.jsse.OpenSSLSocketImpl: javax.net.ssl.SSLSession getSession()>
SOURCE|<android.content.pm.VerificationParams: int getOriginatingUid()>
SOURCE|<com.android.gallery3d.data.MediaSet: int getIndexOf(com.android.gallery3d.data.Path,java.util.ArrayList)>
SOURCE|<com.android.providers.contacts.ContactDirectoryManager: java.lang.String providerDescription(android.content.pm.ProviderInfo)>
SOURCE|<java.time.YearMonth: int getMonthValue()>
SOURCE|<com.android.uiautomator.core.UiDevice: android.graphics.Point getDisplaySizeDp()>
SOURCE|<com.android.calendar.CalendarEventModel$ReminderEntry: int getMethod()>
SOURCE|<com.android.internal.os.BatteryStatsImpl: long getTotalTcpBytesReceived(int)>
SOURCE|<java.security.ProtectionDomain: java.security.CodeSource getCodeSource()>
SOURCE|<java.net.Socket: boolean getReuseAddress()>
SOURCE|<com.android.vcard.VCardEntry$PostalData: com.android.vcard.VCardEntry$EntryLabel getEntryLabel()>
SOURCE|<libcore.net.http.HttpsURLConnectionImpl: java.lang.String getRequestProperty(java.lang.String)>
SOURCE|<android.view.Surface: android.os.IBinder getBuiltInDisplay(int)>
SOURCE|<com.android.calendar.Utils: int getDeclinedColorFromColor(int)>
SOURCE|<org.apache.harmony.xnet.provider.jsse.CipherSuite: int getBlockSize()>
SOURCE|<android.widget.TextView: android.text.method.WordIterator getWordIterator()>
SOURCE|<android.app.ExpandableListActivity: long getSelectedId()>
SOURCE|<android.accessibilityservice.IAccessibilityServiceConnection$Stub: android.os.IBinder asBinder()>
SOURCE|<java.util.Base64: java.util.Base64$Encoder getEncoder()>
SOURCE|<com.google.common.collect.Multimaps$MapMultimap$AsMapEntries$1$1: java.lang.Object getValue()>
SOURCE|<com.android.internal.util.StateMachine: java.lang.String getName()>
SOURCE|<android.widget.AutoCompleteTextView: android.widget.AdapterView$OnItemClickListener getItemClickListener()>
SOURCE|<java.security.Provider: java.lang.String getInfo()>
SOURCE|<android.webkit.WebSettingsClassic: java.lang.String getCursiveFontFamily()>
SOURCE|<android.mtp.MtpObjectInfo: int getProtectionStatus()>
SOURCE|<android.nfc.tech.NdefFormatable: byte[] transceive(byte[],boolean)>
SOURCE|<com.android.server.pm.PackageSettingBase: int getInstallStatus()>
SOURCE|<org.apache.harmony.xnet.provider.jsse.SSLSocketWrapper: int getSendBufferSize()>
SOURCE|<com.android.internal.os.PowerProfile: int getNumSpeedSteps()>
SOURCE|<android.view.InputDevice: android.view.KeyCharacterMap getKeyCharacterMap()>
SOURCE|<java.net.URI: java.lang.String getQuery()>
SOURCE|<gov.nist.javax.sip.header.RAck: int getRSeqNumber()>
SOURCE|<org.xml.sax.SAXParseException: java.lang.String getPublicId()>
SOURCE|<com.android.contacts.group.GroupEditorFragment$MemberListAdapter: long getItemId(int)>
SOURCE|<android.filterpacks.base.FrameBranch: android.filterfw.core.FrameFormat getOutputFormat(java.lang.String,android.filterfw.core.FrameFormat)>
SOURCE|<android.app.admin.DevicePolicyManager: int getKeyguardDisabledFeatures(android.content.ComponentName,int)>
SOURCE|<android.widget.RemoteViews: boolean onLoadClass(java.lang.Class)>
SOURCE|<com.android.internal.telephony.PhoneSubInfoProxy: java.lang.String getIsimDomain()>
SOURCE|<android.bluetooth.BluetoothInputDevice: java.util.List getConnectedDevices()>
SOURCE|<org.xml.sax.helpers.NamespaceSupport$Context: java.lang.String[] processName(java.lang.String,boolean)>
SOURCE|<android.view.View: android.os.Handler getHandler()>
SOURCE|<java.util.concurrent.locks.StampedLock: long tryConvertToOptimisticRead(long)>
SOURCE|<javax.net.ssl.SSLContext: javax.net.ssl.SSLSessionContext getServerSessionContext()>
SOURCE|<org.apache.harmony.security.x509.Extension: org.apache.harmony.security.x509.KeyUsage getKeyUsageValue()>
SOURCE|<libcore.net.url.JarURLConnectionImpl: boolean getDefaultUseCaches()>
SOURCE|<com.coremedia.iso.boxes.SampleDependencyTypeBox$Entry: int getReserved()>
SOURCE|<android.content.pm.IPackageManager$Stub$Proxy: int getApplicationEnabledSetting(java.lang.String,int)>
SOURCE|<org.apache.http.impl.client.AbstractHttpClient: org.apache.http.protocol.HttpRequestExecutor getRequestExecutor()>
SOURCE|<android.filterfw.core.Filter: java.lang.String getFilterClassName()>
SOURCE|<android.net.sip.SipAudioCall: android.net.sip.SipProfile getPeerProfile()>
SOURCE|<org.apache.harmony.xnet.provider.jsse.OpenSSLServerSocketImpl: boolean getNeedClientAuth()>
SOURCE|<android.view.inputmethod.InputBinding: android.view.inputmethod.InputConnection getConnection()>
SOURCE|<android.content.IContentService$Stub$Proxy: android.content.SyncStatusInfo getSyncStatus(android.accounts.Account,java.lang.String)>
SOURCE|<android.graphics.drawable.InsetDrawable$InsetState: int getChangingConfigurations()>
SOURCE|<android.media.videoeditor.MediaArtistNativeHelper: android.graphics.Bitmap getPixels(java.lang.String,int,int,long,int)>
SOURCE|<com.android.commands.monkey.MonkeySourceRandomScript: com.android.commands.monkey.MonkeyEvent getNextEvent()>
SOURCE|<com.android.email.FolderProperties: java.lang.String getCombinedMailboxName(long)>
SOURCE|<android.text.TextUtils: int getTrimmedLength(java.lang.CharSequence)>
SOURCE|<android.gesture.GestureOverlayView: android.graphics.Path getGesturePath(android.graphics.Path)>
SOURCE|<org.kxml2.io.KXmlParser: java.lang.Object getProperty(java.lang.String)>
SOURCE|<android.net.NetworkQuotaInfo: long getEstimatedBytes()>
SOURCE|<com.android.contacts.detail.ContactDetailLayoutController: com.android.contacts.activities.ContactDetailActivity$FragmentKeyListener getCurrentPage()>
SOURCE|<com.android.org.bouncycastle.asn1.DERBoolean: com.android.org.bouncycastle.asn1.ASN1Boolean getInstance(java.lang.Object)>
SOURCE|<java.util.concurrent.CompletableFuture: java.lang.Object get()>
SOURCE|<com.android.providers.contacts.ContactLocaleUtils$ChineseContactUtils: java.lang.String getSortKey(java.lang.String)>
SOURCE|<android.bluetooth.BluetoothAdapter: android.bluetooth.IBluetoothManager getBluetoothManager()>
SOURCE|<org.apache.harmony.security.asn1.BerInputStream: int getEndOffset()>
SOURCE|<com.android.contacts.list.ContactListAdapter: long getSelectedContactDirectoryId()>
SOURCE|<org.apache.harmony.xnet.provider.jsse.OpenSSLSocketImplWrapper: java.net.SocketAddress getRemoteSocketAddress()>
SOURCE|<com.android.calendar.DayView$ScrollInterpolator: float getInterpolation(float)>
SOURCE|<gov.nist.javax.sip.stack.SIPTransaction: gov.nist.javax.sip.SipProviderImpl getSipProvider()>
SOURCE|<android.text.StaticLayout: int getLineDescent(int)>
SOURCE|<gov.nist.javax.sip.header.Accept: gov.nist.javax.sip.header.MediaRange getMediaRange()>
SOURCE|<android.text.SpannableString: int getSpanEnd(java.lang.Object)>
SOURCE|<android.preference.PreferenceManager: android.content.SharedPreferences getSharedPreferences()>
SOURCE|<android.test.AndroidTestCase: android.content.Context getContext()>
SOURCE|<com.android.internal.telephony.RestrictedState: java.lang.String toString()>
SOURCE|<com.google.android.apps.lightcycle.LightCycleApp: java.lang.String getAppVersion()>
SOURCE|<com.android.launcher2.Workspace$InverseZInterpolator: float getInterpolation(float)>
SOURCE|<com.google.common.collect.MapMakerInternalMap$Segment: com.google.common.collect.MapMakerInternalMap$ReferenceEntry getEntry(java.lang.Object,int)>
SOURCE|<android.webkit.WebStorage: android.webkit.WebStorage getInstance()>
SOURCE|<org.apache.harmony.xnet.provider.jsse.OpenSSLEngine: java.security.PrivateKey getPrivateKeyById(java.lang.String)>
SOURCE|<com.android.server.IntentResolverOld: java.util.Set filterSet()>
SOURCE|<android.renderscript.Allocation: android.renderscript.Type typeFromBitmap(android.renderscript.RenderScript,android.graphics.Bitmap,android.renderscript.Allocation$MipmapControl)>
SOURCE|<android.widget.ListView: int getChoiceMode()>
SOURCE|<android.graphics.drawable.DrawableContainer$DrawableContainerState: int getOpacity()>
SOURCE|<android.widget.CalendarView: int getUnfocusedMonthDateColor()>
SOURCE|<com.android.internal.os.PowerProfile: double getAveragePower(java.lang.String,int)>
SOURCE|<android.webkit.WebViewClassic$SelectionHandleAlpha: int getTargetAlpha()>
SOURCE|<android.graphics.drawable.NinePatchDrawable: int getIntrinsicHeight()>
SOURCE|<org.apache.harmony.xnet.provider.jsse.OpenSSLServerSocketImpl: boolean getUseClientMode()>
SOURCE|<com.android.contacts.ContactsApplication: java.lang.Object getSystemService(java.lang.String)>
SOURCE|<gov.nist.javax.sip.message.SIPRequest: gov.nist.javax.sip.message.SIPRequest createSIPRequest(gov.nist.javax.sip.header.RequestLine,boolean)>
SOURCE|<android.widget.Spinner: int getGravity()>
SOURCE|<org.apache.harmony.xml.dom.DOMErrorImpl: org.w3c.dom.DOMLocator getLocation()>
SOURCE|<com.android.internal.app.ActionBarImpl: android.content.Context getThemedContext()>
SOURCE|<android.provider.MediaStore$Video$Media: android.net.Uri getContentUri(java.lang.String)>
SOURCE|<java.security.Provider: java.security.Provider$Service getService(java.lang.String)>
SOURCE|<android.media.AudioService: int getStreamMaxVolume(int)>
SOURCE|<com.adobe.xmp.impl.XMPMetaImpl: java.lang.String getPropertyString(java.lang.String,java.lang.String)>
SOURCE|<org.apache.harmony.xnet.provider.jsse.OpenSSLSocketImplWrapper: boolean getKeepAlive()>
SOURCE|<android.mtp.MtpObjectInfo: int getStorageId()>
SOURCE|<org.apache.harmony.xnet.provider.jsse.OpenSSLSocketImplWrapper: int getSendBufferSize()>
SOURCE|<android.telephony.SmsMessage: int getStatusOnSim()>
SOURCE|<com.google.android.apps.lightcycle.panorama.PanoramaFrameOverlay: boolean getDrawOutlineOnly()>
SOURCE|<android.view.View$DragShadowBuilder: android.view.View getView()>
SOURCE|<android.content.SyncStorageEngine: java.util.ArrayList getSyncHistory()>
SOURCE|<java.time.chrono.ThaiBuddhistDate: long getProlepticMonth()>
SOURCE|<android.net.Credentials: int getGid()>
SOURCE|<org.apache.harmony.xnet.provider.jsse.SSLSocketWrapper: java.net.SocketAddress getRemoteSocketAddress()>
SOURCE|<android.os.storage.StorageVolume: int getMtpReserveSpace()>
SOURCE|<android.media.videoeditor.MediaVideoItem: long getBoundaryEndTime()>
SOURCE|<android.telephony.SignalStrength: int getEvdoSnr()>
SOURCE|<com.android.gallery3d.picasasource.PicasaSource: java.lang.String getImageTitle(com.android.gallery3d.data.MediaObject)>
SOURCE|<android.view.inputmethod.InputMethodManager: java.util.List getInputMethodList()>
SOURCE|<com.android.contacts.dialpad.DialpadFragment$DialpadChooserAdapter: java.lang.Object getItem(int)>
SOURCE|<android.hardware.display.DisplayManagerGlobal: android.view.Display getCompatibleDisplay(int,android.view.CompatibilityInfoHolder)>
SOURCE|<com.android.camera.ui.OverlayRenderer: int getHeight()>
SOURCE|<org.apache.http.conn.ssl.AbstractVerifier: java.lang.String[] getDNSSubjectAlts(java.security.cert.X509Certificate)>
SOURCE|<android.filterfw.core.GLFrame: android.filterfw.core.GLEnvironment getGLEnvironment()>
SOURCE|<android.widget.Switch: int getCompoundPaddingLeft()>
SOURCE|<com.android.server.wm.WindowManagerService: float getAnimationScale(int)>
SOURCE|<java.security.spec.ECFieldFp: int getFieldSize()>
SOURCE|<android.media.Metadata: java.util.Date getDate(int)>
SOURCE|<com.android.deskclock.Utils: long getTimeNow()>
SOURCE|<javax.net.ssl.DefaultSSLServerSocketFactory: java.lang.String[] getDefaultCipherSuites()>
SOURCE|<com.android.internal.telephony.cdma.CdmaServiceStateTracker: java.lang.String getCdmaMin()>
SOURCE|<java.beans.PropertyChangeEvent: java.lang.Object getOldValue()>
SOURCE|<org.apache.harmony.xml.ExpatParser$ClonedAttributes: int getParserPointer()>
SOURCE|<android.provider.Settings$Secure: int getIntForUser(android.content.ContentResolver,java.lang.String,int,int)>
SOURCE|<com.android.server.input.InputManagerService: int getSwitchState(int,int,int)>
SOURCE|<com.android.email.VendorPolicyLoader: android.os.Bundle getPolicy(java.lang.String,android.os.Bundle)>
SOURCE|<android.net.DummyDataStateTracker: java.lang.String getTcpBufferSizesPropName()>
SOURCE|<com.android.contacts.calllog.IntentProvider$3: android.content.Intent getIntent(android.content.Context)>
SOURCE|<com.google.android.mms.pdu.NotificationInd: int getContentClass()>
SOURCE|<com.android.systemui.statusbar.policy.NotificationRowLayout: android.view.View getChildAtPosition(android.view.MotionEvent)>
SOURCE|<android.hardware.Camera$Parameters: int getExposureCompensation()>
SOURCE|<com.android.providers.contacts.ContactsDatabaseHelper: java.lang.Long getAccountIdOrNull(com.android.providers.contacts.AccountWithDataSet)>
SOURCE|<com.android.server.pm.PackageSettingBase: java.lang.String getInstallerPackageName()>
SOURCE|<com.android.calendar.selectcalendars.SelectCalendarsSyncAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)>
SOURCE|<java.text.NumberFormat: java.lang.String format(double)>
SOURCE|<com.android.contacts.calllog.IntentProvider: com.android.contacts.calllog.IntentProvider getReturnCallIntentProvider(java.lang.String)>
SOURCE|<android.filterfw.format.PrimitiveFormat: android.filterfw.core.MutableFrameFormat createByteFormat(int)>
SOURCE|<android.widget.GridView: int getRequestedHorizontalSpacing()>
SOURCE|<org.apache.harmony.xml.dom.ElementImpl: java.lang.String getPrefix()>
SOURCE|<android.graphics.drawable.Drawable: int getMinimumHeight()>
SOURCE|<com.android.internal.telephony.uicc.UiccController: com.android.internal.telephony.UiccCard getUiccCard()>
SOURCE|<android.bluetooth.IBluetoothPan$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
SOURCE|<android.view.accessibility.AccessibilityInteractionClient: android.view.accessibility.AccessibilityInteractionClient getInstanceForThread(long)>
SOURCE|<android.app.LocalActivityManager: java.lang.String getCurrentId()>
SOURCE|<com.android.browser.Tab: long getId()>
SOURCE|<com.android.mms.dom.ElementImpl: org.w3c.dom.NamedNodeMap getAttributes()>
SOURCE|<android.location.Criteria: int getSpeedAccuracy()>
SOURCE|<android.media.audiofx.AudioEffect: int getParameter(int[],short[])>
SOURCE|<android.hardware.display.IDisplayManager$Stub$Proxy: android.view.DisplayInfo getDisplayInfo(int)>
SOURCE|<org.apache.harmony.security.x509.CertificatePolicies: byte[] getEncoded()>
SOURCE|<java.security.spec.DSAParameterSpec: java.math.BigInteger getP()>
SOURCE|<android.telephony.CellInfoCdma$1: android.telephony.CellInfoCdma createFromParcel(android.os.Parcel)>
SOURCE|<com.android.browser.addbookmark.FolderSpinnerAdapter: long getItemId(int)>
SOURCE|<android.media.audiofx.AudioEffect: byte[] concatArrays(byte[][])>
SOURCE|<android.test.mock.MockPackageManager: java.util.List getInstalledPackages(int)>
SOURCE|<com.android.launcher2.CellLayout$ViewCluster: int[] getTopEdge()>
SOURCE|<android.renderscript.ProgramVertexFixedFunction$Constants: android.renderscript.Allocation getAllocation()>
SOURCE|<java.net.DatagramSocket: java.net.InetAddress getInetAddress()>
SOURCE|<com.coremedia.iso.boxes.mdat.SampleList: java.lang.Object get(int)>
SOURCE|<com.android.gallery3d.app.GalleryActionBar$ClusterAdapter: java.lang.Object getItem(int)>
SOURCE|<com.android.providers.downloads.DownloadInfo: java.util.Collection getHeaders()>
SOURCE|<gov.nist.javax.sip.message.SIPMessage: javax.sip.header.ContentEncodingHeader getContentEncoding()>
SOURCE|<android.os.Handler: android.os.IMessenger getIMessenger()>
SOURCE|<org.xml.sax.helpers.XMLFilterImpl: org.xml.sax.XMLReader getParent()>
SOURCE|<com.android.contacts.model.Contact: java.lang.String getPhoneticName()>
SOURCE|<com.android.internal.view.menu.ActionMenuItemView: com.android.internal.view.menu.MenuItemImpl getItemData()>
SOURCE|<com.android.internal.telephony.sip.SipPhoneBase: com.android.internal.telephony.Phone$DataActivityState getDataActivityState()>
SOURCE|<java.util.prefs.AbstractPreferences: double getDouble(java.lang.String,double)>
SOURCE|<com.android.browser.Controller: android.os.Bundle createSaveState()>
SOURCE|<java.security.spec.RSAPrivateCrtKeySpec: java.math.BigInteger getPrimeQ()>
SOURCE|<org.apache.http.impl.client.AbstractHttpClient: org.apache.http.client.CookieStore getCookieStore()>
SOURCE|<android.media.videoeditor.MediaVideoItem: long getDuration()>
SOURCE|<com.android.contacts.preference.ContactsPreferences: int getSortOrder()>
SOURCE|<org.apache.http.impl.cookie.RFC2965Spec: java.util.List parse(org.apache.http.Header,org.apache.http.cookie.CookieOrigin)>
SOURCE|<com.android.providers.downloads.DownloadHandler: com.android.providers.downloads.DownloadHandler getInstance()>
SOURCE|<java.util.logging.Logger: java.lang.String getResourceBundleName()>
SOURCE|<java.util.Locale: java.lang.String getCountry()>
SOURCE|<com.android.mms.ui.MessageUtils: java.lang.String getLocalNumber()>
SOURCE|<com.android.contacts.model.account.ExternalAccountType: int getInviteContactActionResId()>
SOURCE|<com.android.exchange.adapter.CalendarSyncAdapter: java.lang.String getSyncKey()>
SOURCE|<org.apache.http.impl.cookie.BasicClientCookie: java.lang.String getPath()>
SOURCE|<com.android.calendar.Utils: java.lang.String getWidgetScheduledUpdateAction(android.content.Context)>
SOURCE|<java.io.RandomAccessFile: java.nio.channels.FileChannel getChannel()>
SOURCE|<com.android.contacts.detail.ContactDetailFragment$ViewEntryDimensions: int getWidePaddingLeft()>
SOURCE|<org.apache.harmony.xml.dom.ProcessingInstructionImpl: java.lang.String getTarget()>
SOURCE|<java.util.concurrent.ThreadPoolExecutor: int getPoolSize()>
SOURCE|<java.util.concurrent.Semaphore: java.util.Collection getQueuedThreads()>
SOURCE|<android.renderscript.Allocation: android.renderscript.Allocation createCubemapFromBitmap(android.renderscript.RenderScript,android.graphics.Bitmap)>
SOURCE|<com.android.internal.policy.impl.PhoneWindowManager: long[] getLongIntArray(android.content.res.Resources,int)>
SOURCE|<android.content.Intent: android.graphics.Rect getSourceBounds()>
SOURCE|<java.util.TimeZone: java.lang.String getDisplayName(java.util.Locale)>
SOURCE|<com.android.contacts.model.account.BaseAccountType$ImActionInflater: java.lang.String getTypeColumn()>
SOURCE|<android.telephony.SmsMessage: android.telephony.SmsMessage$SubmitPdu getSubmitPdu(java.lang.String,java.lang.String,java.lang.String,boolean)>
SOURCE|<com.android.server.am.ActivityManagerService: android.content.IIntentSender getIntentSender(int,java.lang.String,android.os.IBinder,java.lang.String,int,android.content.Intent[],java.lang.String[],int,android.os.Bundle,int)>
SOURCE|<gov.nist.javax.sip.header.HeaderFactoryImpl: javax.sip.header.RAckHeader createRAckHeader(int,int,java.lang.String)>
SOURCE|<android.content.res.TypedArray: android.graphics.drawable.Drawable getDrawable(int)>
SOURCE|<gov.nist.javax.sip.header.SIPDate: int getHour()>
SOURCE|<java.net.Socks4Message: int getPort()>
SOURCE|<android.media.MediaRouter$RouteInfo: int getPlaybackType()>
SOURCE|<com.android.mms.dom.NodeImpl: org.w3c.dom.Node getPreviousSibling()>
SOURCE|<com.android.launcher2.ShortcutAndWidgetContainer: android.view.View getChildAt(int,int)>
SOURCE|<com.android.calendar.widget.CalendarAppWidgetService$CalendarFactory: long getItemId(int)>
SOURCE|<com.android.internal.view.IInputContextCallback$Stub: android.os.IBinder asBinder()>
SOURCE|<com.android.browser.BrowserSettings: long getLastRecovered()>
SOURCE|<android.widget.SearchView: int getMaxWidth()>
SOURCE|<android.widget.GridLayout: int getColumnCount()>
SOURCE|<com.android.internal.view.ActionBarPolicy: com.android.internal.view.ActionBarPolicy get(android.content.Context)>
SOURCE|<com.adobe.xmp.impl.XMPNode: int getChildrenLength()>
SOURCE|<com.android.contacts.model.RawContactDelta$ValuesDelta: java.lang.String getEmailLabel()>
SOURCE|<android.os.ParcelUuid: java.util.UUID getUuid()>
SOURCE|<com.android.launcher2.FastBitmapDrawable: android.graphics.Bitmap getBitmap()>
SOURCE|<com.google.android.picasastore.FIFEUtil: java.lang.String getImageUrlOptions(java.lang.String)>
SOURCE|<java.lang.reflect.Array: byte getByte(java.lang.Object,int)>
SOURCE|<org.ccil.cowan.tagsoup.AttributesImpl: java.lang.String getURI(int)>
SOURCE|<android.app.DatePickerDialog: android.widget.DatePicker getDatePicker()>
SOURCE|<android.test.mock.MockResources: java.lang.CharSequence getQuantityText(int,int)>
SOURCE|<android.net.wifi.p2p.IWifiP2pManager$Stub$Proxy: android.os.Messenger getMessenger()>
SOURCE|<com.android.gallery3d.ui.TileImageViewAdapter: int getImageHeight()>
SOURCE|<com.android.browser.Tab: com.android.browser.GeolocationPermissionsPrompt getGeolocationPermissionsPrompt()>
SOURCE|<java.text.Bidi: int getRunStart(int)>
SOURCE|<android.media.videoeditor.MediaVideoItem: int getVideoProfile()>
SOURCE|<gov.nist.javax.sip.address.SipUri: java.lang.String getUserParam()>
SOURCE|<android.content.IContentService$Stub$Proxy: java.util.List getPeriodicSyncs(android.accounts.Account,java.lang.String)>
SOURCE|<com.coremedia.iso.boxes.TrackHeaderBox: long[] getMatrix()>
SOURCE|<android.app.ProgressDialog: int getMax()>
SOURCE|<com.android.launcher2.DragView: float getInitialScale()>
SOURCE|<org.apache.harmony.security.x509.Extension: byte[] getExtnValue()>
SOURCE|<android.app.WallpaperInfo: java.lang.String getServiceName()>
SOURCE|<com.android.org.bouncycastle.asn1.ASN1TaggedObject: int getTagNo()>
SOURCE|<org.apache.http.impl.conn.AbstractClientConnAdapter: org.apache.http.HttpConnectionMetrics getMetrics()>
SOURCE|<android.os.IUserManager$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
SOURCE|<java.security.spec.EllipticCurve: java.security.spec.ECField getField()>
SOURCE|<gov.nist.core.ThreadAuditor$ThreadHandle: long getPingIntervalInMillisecs()>
SOURCE|<android.test.mock.MockPackageManager: java.lang.CharSequence getApplicationLabel(android.content.pm.ApplicationInfo)>
SOURCE|<com.android.providers.telephony.MmsProvider: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>
SOURCE|<com.android.providers.contacts.ContactsDatabaseHelper$StructuredNameLookupBuilder: java.lang.String[] getCommonNicknameClusters(java.lang.String)>
SOURCE|<android.view.MotionEvent: int getSource()>
SOURCE|<com.android.gallery3d.picasasource.PicasaImage: android.net.Uri getPlayUri()>
SOURCE|<java.util.concurrent.locks.ReentrantReadWriteLock$Sync: java.lang.Thread getOwner()>
SOURCE|<android.media.videoeditor.MediaImageItem: int getGeneratedClipWidth()>
SOURCE|<com.android.calendarcommon2.Duration: long getMillis()>
SOURCE|<android.provider.ContactsContract$Contacts: android.net.Uri getLookupUri(long,java.lang.String)>
SOURCE|<com.android.mms.ui.RecipientListActivity$RecipientListAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)>
SOURCE|<com.android.nfc.dhimpl.NativeLlcpSocket: int getLocalMiu()>
SOURCE|<android.filterfw.core.FilterFactory: android.filterfw.core.Filter createFilterByClassName(java.lang.String,java.lang.String)>
SOURCE|<com.android.internal.telephony.cdma.CDMAPhone: com.android.internal.telephony.Phone$DataActivityState getDataActivityState()>
SOURCE|<com.android.musicfx.seekbar.ProgressBar: android.graphics.drawable.Drawable getCurrentDrawable()>
SOURCE|<android.hardware.display.DisplayManager: android.view.Display getDisplay(int)>
SOURCE|<com.android.i18n.phonenumbers.PhoneNumberUtil: java.lang.String getRegionCodeForNumber(com.android.i18n.phonenumbers.Phonenumber$PhoneNumber)>
SOURCE|<com.adobe.xmp.impl.XMPNode: com.adobe.xmp.options.PropertyOptions getOptions()>
SOURCE|<gov.nist.javax.sip.SipStackImpl: java.util.Iterator getSipProviders()>
SOURCE|<java.net.NetworkInterface: int getIndex()>
SOURCE|<java.text.BreakIterator: java.lang.Object clone()>
SOURCE|<com.android.gallery3d.data.PathMatcher: java.lang.String getVar(int)>
SOURCE|<android.app.ListFragment: int getSelectedItemPosition()>
SOURCE|<android.util.MonthDisplayHelper: int getRowOf(int)>
SOURCE|<com.android.contacts.group.GroupEditorFragment$CancelEditDialogFragment: android.app.Dialog onCreateDialog(android.os.Bundle)>
SOURCE|<com.android.contacts.list.ContactListItemView: int getDefaultPhotoViewSize()>
SOURCE|<android.telephony.cdma.CdmaCellLocation: int getBaseStationLatitude()>
SOURCE|<java.nio.file.attribute.UserPrincipalNotFoundException: java.lang.String getName()>
SOURCE|<android.net.NetworkStats: long getTotalBytes()>
SOURCE|<android.bluetooth.IBluetoothA2dp$Stub$Proxy: int getPriority(android.bluetooth.BluetoothDevice)>
SOURCE|<com.android.bluetooth.btservice.AdapterService$AdapterServiceBinder: java.lang.String getAddress()>
SOURCE|<com.android.inputmethod.latin.suggestions.MoreSuggestionsView$2: com.android.inputmethod.keyboard.PointerTracker$DrawingProxy getDrawingProxy()>
SOURCE|<android.app.admin.DevicePolicyManager: long getMaximumTimeToLock(android.content.ComponentName)>
SOURCE|<android.app.backup.BackupAgent: android.os.IBinder onBind()>
SOURCE|<com.android.internal.telephony.DataConnection$FailCause: int getErrorCode()>
SOURCE|<android.view.InputEvent: int getDeviceId()>
SOURCE|<java.util.concurrent.locks.StampedLock: long tryIncReaderOverflow(long)>
SOURCE|<java.util.Date: long getTime()>
SOURCE|<gov.nist.core.NameValue: java.lang.Object getValueAsObject()>
SOURCE|<android.view.View: int getRawTextDirection()>
SOURCE|<org.apache.harmony.security.provider.cert.X509CertImpl: java.util.Date getNotBefore()>
SOURCE|<android.filterfw.core.FrameManager: android.filterfw.core.GLEnvironment getGLEnvironment()>
SOURCE|<com.android.videoeditor.widgets.HorizontalScrollView: float getLeftFadingEdgeStrength()>
SOURCE|<dalvik.system.VMRuntime: dalvik.system.VMRuntime getRuntime()>
SOURCE|<android.content.IntentFilter: android.os.PatternMatcher getDataPath(int)>
SOURCE|<java.security.cert.PKIXRevocationChecker: java.security.cert.X509Certificate getOcspResponderCert()>
SOURCE|<gov.nist.javax.sip.header.Contact: gov.nist.core.NameValueList getContactParms()>
SOURCE|<com.android.server.pm.PackageSettingBase: int getEnabled(int)>
SOURCE|<com.android.internal.os.BatteryStatsImpl: byte[] readFully(java.io.FileInputStream)>
SOURCE|<java.time.OffsetDateTime: int getMonthValue()>
SOURCE|<java.util.UnknownFormatFlagsException: java.lang.String getFlags()>
SOURCE|<android.filterpacks.imageproc.LomoishFilter: android.filterfw.core.FrameFormat getOutputFormat(java.lang.String,android.filterfw.core.FrameFormat)>
SOURCE|<android.net.wifi.p2p.WifiP2pGroup: java.util.Collection getClientList()>
SOURCE|<java.beans.PropertyChangeListenerProxy: java.lang.String getPropertyName()>
SOURCE|<android.widget.ProgressBar: int getMax()>
SOURCE|<com.android.gallery3d.provider.GalleryProvider: android.net.Uri getUriFor(android.content.Context,com.android.gallery3d.data.Path)>
SOURCE|<com.android.browser.view.BookmarkExpandableView$BookmarkAccountAdapter: com.android.browser.BreadCrumbView getBreadCrumbView(int)>
SOURCE|<android.os.Debug$MemoryInfo: int getTotalSharedDirty()>
SOURCE|<android.renderscript.Allocation: android.renderscript.Type getType()>
SOURCE|<com.android.contacts.model.RawContactDeltaList: java.lang.Long getRawContactId(int)>
SOURCE|<com.google.android.mms.ContentType: java.util.ArrayList getVideoTypes()>
SOURCE|<android.filterfw.core.InputPort: android.filterfw.core.OutputPort getSourcePort()>
SOURCE|<android.widget.TwoLineListItem: android.widget.TextView getText2()>
SOURCE|<com.android.gallery3d.data.LocalMediaItem: com.android.gallery3d.data.MediaDetails getDetails()>
SOURCE|<android.webkit.WebSettingsClassic: java.lang.String getStandardFontFamily()>
SOURCE|<java.text.AttributedString$AttributedIterator: int getEndIndex()>
SOURCE|<android.bluetooth.BluetoothAdapter: java.lang.String getAddress()>
SOURCE|<java.text.AttributedString$AttributedIterator: java.util.Map getAttributes()>
SOURCE|<gov.nist.javax.sip.header.extensions.Join: java.lang.String getFromTag()>
SOURCE|<android.media.AudioManager: int getStreamVolume(int)>
SOURCE|<android.net.NetworkIdentity: java.lang.String getNetworkId()>
SOURCE|<com.android.gallery3d.app.SlideshowPage$SequentialSource: com.android.gallery3d.data.MediaItem getMediaItem(int)>
SOURCE|<android.app.ApplicationPackageManager: android.content.pm.VerifierDeviceIdentity getVerifierDeviceIdentity()>
SOURCE|<org.apache.james.mime4j.field.contenttype.parser.SimpleCharStream: int getBeginLine()>
SOURCE|<com.android.musicfx.ControlPanelEffect: int[] getParameterIntArray(android.content.Context,java.lang.String,int,com.android.musicfx.ControlPanelEffect$Key)>
SOURCE|<android.security.IKeyChainService$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
SOURCE|<android.app.ActivityManagerProxy: android.app.PendingIntent getRunningServiceControlPanel(android.content.ComponentName)>
SOURCE|<gov.nist.javax.sip.message.SIPMessage: gov.nist.javax.sip.header.RouteList getRouteHeaders()>
SOURCE|<android.graphics.Paint: int getTextWidths(java.lang.String,int,int,float[])>
SOURCE|<android.net.sip.ISipSession$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
SOURCE|<android.app.ActivityManagerProxy: int getLaunchedFromUid(android.os.IBinder)>
SOURCE|<com.android.emailcommon.service.EmailServiceProxy: android.os.Bundle validate(com.android.emailcommon.provider.HostAuth)>
SOURCE|<com.android.mms.model.SlideshowModel: com.google.android.mms.pdu.PduBody getPduBody(android.content.Context,android.net.Uri)>
SOURCE|<com.android.internal.telephony.SmsMessageBase: java.lang.String getEmailFrom()>
SOURCE|<com.android.org.bouncycastle.asn1.x500.AttributeTypeAndValue: com.android.org.bouncycastle.asn1.x500.AttributeTypeAndValue getInstance(java.lang.Object)>
SOURCE|<java.security.spec.RSAMultiPrimePrivateCrtKeySpec: java.math.BigInteger getPrimeQ()>
SOURCE|<android.view.Display: float getRefreshRate()>
SOURCE|<org.apache.http.impl.conn.tsccm.ThreadSafeClientConnManager$1: org.apache.http.conn.ManagedClientConnection getConnection(long,java.util.concurrent.TimeUnit)>
SOURCE|<android.widget.ImageView: android.graphics.Matrix getImageMatrix()>
SOURCE|<android.support.v4.view.accessibility.AccessibilityNodeInfoCompat: java.lang.Object getInfo()>
SOURCE|<java.lang.reflect.Method: java.lang.Class[] getParameterTypes()>
SOURCE|<org.apache.http.message.HeaderGroup: org.apache.http.Header[] getHeaders(java.lang.String)>
SOURCE|<java.lang.ClassLoader: java.util.Enumeration findResources(java.lang.String)>
SOURCE|<android.media.AudioService: int getMode()>
SOURCE|<android.view.MotionEvent: float getYPrecision()>
SOURCE|<android.util.EventLog: java.lang.String getTagName(int)>
SOURCE|<com.android.gallery3d.data.MediaObject: java.lang.String getTypeString(int)>
SOURCE|<com.google.common.collect.MapMakerInternalMap$ExpirationQueue$1: com.google.common.collect.MapMakerInternalMap$ReferenceEntry getNextExpirable()>
SOURCE|<com.android.nfc.dhimpl.NativeNfcTag: byte[] transceive(byte[],boolean,int[])>
SOURCE|<android.telephony.SmsCbMessage: android.telephony.SmsCbEtwsInfo getEtwsWarningInfo()>
SOURCE|<org.ccil.cowan.tagsoup.AttributesImpl: int getLength()>
SOURCE|<com.google.common.collect.AbstractMultimap$3: java.util.Iterator iterator()>
SOURCE|<com.android.videoeditor.service.MovieOverlay: java.lang.String getTitle()>
SOURCE|<android.provider.Settings$System: java.lang.String getString(android.content.ContentResolver,java.lang.String)>
SOURCE|<org.apache.harmony.xml.dom.DocumentTypeImpl: java.lang.String getName()>
SOURCE|<android.filterfw.core.KeyValueMap: float getFloat(java.lang.String)>
SOURCE|<com.android.mms.model.MediaModel: int getMediaSize()>
SOURCE|<android.text.format.Time: int getJulianDay(long,long)>
SOURCE|<com.android.contacts.editor.SelectAccountDialogFragment: android.app.Dialog onCreateDialog(android.os.Bundle)>
SOURCE|<com.android.launcher2.InterruptibleInOutAnimator: java.lang.Object getTag()>
SOURCE|<com.android.server.pm.PackageManagerService: java.lang.String getInstallerPackageName(java.lang.String)>
SOURCE|<android.database.sqlite.SQLiteDebug: android.database.sqlite.SQLiteDebug$PagerStats getDatabaseInfo()>
SOURCE|<org.apache.harmony.security.asn1.ASN1TypeCollection: void getValues(java.lang.Object,java.lang.Object[])>
SOURCE|<com.android.org.bouncycastle.asn1.x500.RDN: com.android.org.bouncycastle.asn1.x500.AttributeTypeAndValue getFirst()>
SOURCE|<android.media.videoeditor.TransitionSliding: int getDirection()>
SOURCE|<java.net.ServerSocket: int getReceiveBufferSize()>
SOURCE|<com.google.common.collect.ForwardingObject: java.lang.String toString()>
SOURCE|<org.apache.http.impl.cookie.BestMatchSpec: java.util.List parse(org.apache.http.Header,org.apache.http.cookie.CookieOrigin)>
SOURCE|<gov.nist.javax.sip.header.RAck: java.lang.String getMethod()>
SOURCE|<com.android.gallery3d.filtershow.filters.ColorSpaceMatrix: float[] getMatrix()>
SOURCE|<java.net.MulticastSocket: java.net.NetworkInterface getNetworkInterface()>
SOURCE|<com.android.deskclock.timer.CountingTimerView$UnsignedTime: float getWidth()>
SOURCE|<com.android.inputmethod.latin.RichInputConnection: com.android.inputmethod.latin.RichInputConnection$Range getWordRangeAtCursor(java.lang.String,int)>
SOURCE|<java.util.zip.ZipEntry: java.lang.String getName()>
SOURCE|<com.android.emailcommon.utility.Utility$4: java.lang.Integer get(android.database.Cursor,int)>
SOURCE|<java.time.ZoneOffset: int parseNumber(java.lang.CharSequence,int,boolean)>
SOURCE|<libcore.net.http.HttpsURLConnectionImpl$HttpsEngine: java.net.HttpURLConnection getHttpConnectionToCache()>
SOURCE|<android.text.method.DateTimeKeyListener: char[] getAcceptedChars()>
SOURCE|<java.text.NumberFormat: java.math.RoundingMode getRoundingMode()>
SOURCE|<java.nio.channels.spi.AbstractSelectableChannel: java.nio.channels.SelectableChannel configureBlocking(boolean)>
SOURCE|<android.os.DropBoxManager: boolean isTagEnabled(java.lang.String)>
SOURCE|<com.android.internal.telephony.IccCardProxy: boolean getIccRecordsLoaded()>
SOURCE|<com.android.inputmethod.accessibility.AccessibleKeyboardViewProxy: com.android.inputmethod.accessibility.AccessibleKeyboardViewProxy getInstance()>
SOURCE|<gov.nist.core.Token: int getTokenType()>
SOURCE|<android.widget.GridLayout$6: android.widget.GridLayout$Bounds getBounds()>
SOURCE|<com.android.contacts.model.RawContactDelta$ValuesDelta: byte[] getAsByteArray(java.lang.String)>
SOURCE|<org.apache.harmony.xml.ExpatReader: java.lang.Object getProperty(java.lang.String)>
SOURCE|<java.security.KeyStoreSpi: char[] getPasswordFromCallBack(java.security.KeyStore$ProtectionParameter)>
SOURCE|<com.android.bluetooth.btservice.AdapterService: android.bluetooth.BluetoothDevice[] getBondedDevices()>
SOURCE|<com.android.contacts.model.AccountTypeManagerImpl: java.util.List getGroupWritableAccounts()>
SOURCE|<org.apache.harmony.xnet.provider.jsse.SSLSessionImpl: java.lang.Object getValue(java.lang.String)>
SOURCE|<android.media.AudioService$ScoClient: int getCount()>
SOURCE|<android.location.Location: java.lang.String getProvider()>
SOURCE|<android.widget.AlphabetIndexer: int getPositionForSection(int)>
SOURCE|<libcore.net.url.JarURLConnectionImpl: java.util.jar.JarEntry getJarEntry()>
SOURCE|<android.app.LoadedApk: android.content.pm.ApplicationInfo getApplicationInfo()>
SOURCE|<com.android.mms.dom.smil.SmilMediaElementImpl$1: org.w3c.dom.smil.ElementTime getParentElementTime()>
SOURCE|<android.preference.DialogPreference: java.lang.CharSequence getPositiveButtonText()>
SOURCE|<com.adobe.xmp.XMPMetaFactory: com.adobe.xmp.XMPSchemaRegistry getSchemaRegistry()>
SOURCE|<android.hardware.Sensor: java.lang.String getName()>
SOURCE|<org.xmlpull.v1.sax2.Driver: org.xml.sax.ErrorHandler getErrorHandler()>
SOURCE|<java.security.cert.CertPathValidator: java.security.cert.CertPathValidator getInstance(java.lang.String,java.security.Provider)>
SOURCE|<android.app.LoadedApk: java.lang.String getLibDir()>
SOURCE|<android.os.storage.IMountService$Stub$Proxy: int[] getStorageUsers(java.lang.String)>
SOURCE|<java.nio.LongArrayBuffer: long get(int)>
SOURCE|<java.util.Currency: java.util.Set getAvailableCurrencies()>
SOURCE|<android.nfc.tech.NfcV: byte[] transceive(byte[])>
SOURCE|<com.android.musicfx.seekbar.ProgressBar: int getProgress()>
SOURCE|<android.telephony.SmsCbCmasInfo: java.lang.String toString()>
SOURCE|<org.apache.http.impl.auth.DigestScheme: java.lang.String createCnonce()>
SOURCE|<com.android.calendar.agenda.AgendaListView: long getFirstVisibleTime(com.android.calendar.agenda.AgendaWindowAdapter$EventInfo)>
SOURCE|<com.android.contacts.model.Contact: java.util.ArrayList getContentValues()>
SOURCE|<gov.nist.javax.sip.header.HeaderFactoryImpl: javax.sip.header.DateHeader createDateHeader(java.util.Calendar)>
SOURCE|<android.view.View: boolean getGlobalVisibleRect(android.graphics.Rect,android.graphics.Point)>
SOURCE|<org.apache.http.util.ExceptionUtils: java.lang.reflect.Method getInitCauseMethod()>
SOURCE|<com.android.internal.telephony.IccSmsInterfaceManager: byte[] makeSmsRecordData(int,byte[])>
SOURCE|<android.database.BulkCursorNative: android.os.IBinder asBinder()>
SOURCE|<android.widget.SimpleExpandableListAdapter: android.view.View getGroupView(int,boolean,android.view.View,android.view.ViewGroup)>
SOURCE|<com.android.deskclock.widget.multiwaveview.Ease$Quart$1: float getInterpolation(float)>
SOURCE|<com.android.internal.telephony.IPhoneSubInfo$Stub$Proxy: java.lang.String getLine1Number()>
SOURCE|<com.android.contacts.model.account.GoogleAccountType: com.android.contacts.model.dataitem.DataKind addDataKindEmail(android.content.Context)>
SOURCE|<android.app.admin.DevicePolicyManager: android.content.ComponentName setGlobalProxy(android.content.ComponentName,java.net.Proxy,java.util.List)>
SOURCE|<org.ccil.cowan.tagsoup.AttributesImpl: int getIndex(java.lang.String)>
SOURCE|<java.time.ZonedDateTime: int getNano()>
SOURCE|<android.accounts.AccountManager: android.os.Handler access$600(android.accounts.AccountManager)>
SOURCE|<android.filterfw.core.OutputPort: android.filterfw.core.InputPort getTargetPort()>
SOURCE|<com.android.inputmethod.latin.suggestions.MoreSuggestionsView$2: com.android.inputmethod.keyboard.KeyboardActionListener getKeyboardActionListener()>
SOURCE|<android.telephony.gsm.SmsMessage: android.telephony.gsm.SmsMessage$MessageClass getMessageClass()>
SOURCE|<android.nfc.tech.BasicTagTechnology: int getMaxTransceiveLengthInternal()>
SOURCE|<org.apache.http.impl.SocketHttpClientConnection: java.net.InetAddress getLocalAddress()>
SOURCE|<com.android.server.PackageManagerBackupAgent: java.util.Set getRestoredPackages()>
SOURCE|<android.telephony.SmsCbMessage: int getMessagePriority()>
SOURCE|<android.nfc.tech.IsoDep: byte[] getHistoricalBytes()>
SOURCE|<android.app.ActivityOptions: int getAnimationType()>
SOURCE|<android.widget.GridView: android.widget.Adapter getAdapter()>
SOURCE|<com.android.server.accessibility.ScreenMagnifier$MagnificationController: com.android.server.accessibility.ScreenMagnifier$MagnificationController$MagnificationSpec getAccessibilityTransformation()>
SOURCE|<gov.nist.javax.sip.message.SIPMessage: gov.nist.javax.sip.header.Via getTopmostVia()>
SOURCE|<com.adobe.xmp.options.SerializeOptions: boolean getIncludeThumbnailPad()>
SOURCE|<libcore.net.http.HttpConnection: java.io.InputStream getInputStream()>
SOURCE|<libcore.net.http.HttpsURLConnectionImpl: java.security.cert.Certificate[] getLocalCertificates()>
SOURCE|<com.google.android.gms.panorama.internal.PanoramaClientImpl: java.lang.String getStartServiceAction()>
SOURCE|<java.io.ObjectStreamField: java.lang.Class getTypeInternal()>
SOURCE|<android.net.wifi.WifiStateMachine: android.os.Messenger getMessenger()>
SOURCE|<com.android.gallery3d.ui.PhotoView$ScreenNailPicture: com.android.gallery3d.ui.PhotoView$Size getSize()>
SOURCE|<android.util.Property: java.lang.Class getType()>
SOURCE|<com.googlecode.mp4parser.authoring.builder.DefaultMp4Builder: com.coremedia.iso.IsoFile build(com.googlecode.mp4parser.authoring.Movie)>
SOURCE|<gov.nist.javax.sip.header.AuthenticationHeader: java.lang.String getOpaque()>
SOURCE|<com.google.android.picasastore.PicasaStoreFacade: android.net.Uri getAlbumCoverUri(long,java.lang.String)>
SOURCE|<android.gesture.Learner: java.util.ArrayList getInstances()>
SOURCE|<android.view.inputmethod.InputConnectionWrapper: java.lang.CharSequence getSelectedText(int)>
SOURCE|<com.android.gallery3d.ui.SlotView$Layout: int getVisibleStart()>
SOURCE|<com.android.contacts.list.ContactListItemView: android.widget.QuickContactBadge getQuickContact()>
SOURCE|<com.android.email.widget.WidgetManager: long loadAccountIdPref(android.content.Context,int)>
SOURCE|<com.android.mms.dom.smil.SmilMediaElementImpl: float getDur()>
SOURCE|<android.nfc.tech.MifareClassic: int getSize()>
SOURCE|<android.app.IStopUserCallback$Stub: android.os.IBinder asBinder()>
SOURCE|<com.android.contacts.editor.ContactEditorFragment$AggregationSuggestionAdapter: long getItemId(int)>
SOURCE|<android.os.storage.StorageVolume: long getMaxFileSize()>
SOURCE|<com.android.launcher2.Folder: java.util.ArrayList getItemsInReadingOrder(boolean)>
SOURCE|<com.android.internal.telephony.gsm.GsmMmiCode: int getCLIRMode()>
SOURCE|<android.bluetooth.BluetoothUuid: int getServiceIdentifierFromParcelUuid(android.os.ParcelUuid)>
SOURCE|<com.android.server.wm.DragState: int getDragLayerLw()>
SOURCE|<com.android.mms.model.MediaModel: int getBegin()>
SOURCE|<gov.nist.javax.sip.address.SipUri: gov.nist.core.HostPort getHostPort()>
SOURCE|<com.android.email.activity.DeleteMessageConfirmationDialog: android.app.Dialog onCreateDialog(android.os.Bundle)>
SOURCE|<org.apache.http.impl.conn.DefaultClientConnection: java.net.Socket getSocket()>
SOURCE|<android.content.ContentProviderOperation: android.net.Uri getUri()>
SOURCE|<android.view.KeyEvent: long getEventTime()>
SOURCE|<com.android.systemui.statusbar.phone.QuickSettingsTileView: int getColumnSpan()>
SOURCE|<android.view.LayoutInflater: android.view.View onCreateView(android.view.View,java.lang.String,android.util.AttributeSet)>
SOURCE|<com.google.android.gms.common.internal.GmsClient: java.util.ArrayList access$100(com.google.android.gms.common.internal.GmsClient)>
SOURCE|<com.android.contacts.vcard.ExportProcessor: int getType()>
SOURCE|<android.app.UiModeManager: int getCurrentModeType()>
SOURCE|<android.graphics.drawable.ShapeDrawable: int getChangingConfigurations()>
SOURCE|<com.android.contacts.util.StructuredPostalUtils: android.content.Intent getViewPostalAddressIntent(java.lang.String)>
SOURCE|<com.android.videoeditor.OverlaysAdapter: int getCount()>
SOURCE|<android.hardware.SensorManager: float getAltitude(float,float)>
SOURCE|<com.android.exchange.adapter.Serializer: byte[] toByteArray()>
SOURCE|<android.webkit.WebViewClassic$Factory: java.lang.String getDefaultUserAgent(android.content.Context)>
SOURCE|<android.speech.IRecognitionListener$Stub: android.os.IBinder asBinder()>
SOURCE|<junit.runner.BaseTestRunner: java.util.Properties getPreferences()>
SOURCE|<android.content.pm.ResolveInfo: int getIconResource()>
SOURCE|<org.apache.harmony.xml.dom.CDATASectionImpl: short getNodeType()>
SOURCE|<com.android.server.location.GpsLocationProvider: android.location.INetInitiatedListener getNetInitiatedListener()>
SOURCE|<android.content.Intent: android.os.Parcelable[] getParcelableArrayExtra(java.lang.String)>
SOURCE|<android.animation.Keyframe$FloatKeyframe: java.lang.Object getValue()>
SOURCE|<com.android.server.pm.PackageManagerService: java.lang.String getAsecPackageName(java.lang.String)>
SOURCE|<android.app.admin.IDevicePolicyManager$Stub$Proxy: android.content.ComponentName getGlobalProxyAdmin(int)>
SOURCE|<android.view.IWindowSession$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
SOURCE|<com.coremedia.iso.boxes.SampleTableBox: com.coremedia.iso.boxes.SampleDependencyTypeBox getSampleDependencyTypeBox()>
SOURCE|<com.android.mms.dom.smil.ElementTimeImpl: org.w3c.dom.smil.TimeList getBegin()>
SOURCE|<com.android.gallery3d.app.AlbumSetPage$MyDetailsSource: com.android.gallery3d.data.MediaDetails getDetails()>
SOURCE|<android.database.CursorWrapper: int getColumnIndex(java.lang.String)>
SOURCE|<android.widget.HeaderViewListAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)>
SOURCE|<com.android.org.bouncycastle.asn1.DERObjectIdentifier: com.android.org.bouncycastle.asn1.ASN1ObjectIdentifier getInstance(com.android.org.bouncycastle.asn1.ASN1TaggedObject,boolean)>
SOURCE|<com.android.internal.os.BatteryStatsImpl: int getDischargeStartLevel()>
SOURCE|<org.apache.harmony.security.x509.InvalidityDate: java.util.Date getDate()>
SOURCE|<android.location.IGpsStatusProvider$Stub: android.os.IBinder asBinder()>
SOURCE|<com.android.internal.widget.LockPatternUtils: int getRequestedPasswordMinimumSymbols()>
SOURCE|<com.android.internal.util.FastXmlSerializer: int getDepth()>
SOURCE|<java.security.cert.CertPathValidator: java.security.cert.CertPathValidator getInstance(java.lang.String,java.lang.String)>
SOURCE|<android.os.CommonTimeUtils: java.lang.String transactGetString(int,java.lang.String)>
SOURCE|<com.android.contacts.model.Contact: com.google.common.collect.ImmutableList getStreamItems()>
SOURCE|<com.android.bluetooth.opp.BluetoothOppUtility: com.android.bluetooth.opp.BluetoothOppSendFileInfo getSendFileInfo(android.net.Uri)>
SOURCE|<gov.nist.javax.sip.header.SIPDate: java.lang.String getMonth()>
SOURCE|<com.android.server.am.ActivityManagerService: java.lang.String getProviderMimeType(android.net.Uri,int)>
SOURCE|<android.widget.GridLayout: android.widget.GridLayout$Alignment getAlignment(int,boolean)>
SOURCE|<org.apache.http.client.methods.HttpGet: java.lang.String getMethod()>
SOURCE|<org.apache.harmony.security.x509.GeneralSubtrees$1: java.util.Collection getValues(java.lang.Object)>
SOURCE|<android.filterpacks.imageproc.BrightnessFilter: android.filterfw.core.Program getShaderProgram(android.filterfw.core.FilterContext)>
SOURCE|<org.apache.http.conn.routing.HttpRoute: org.apache.http.conn.routing.RouteInfo$TunnelType getTunnelType()>
SOURCE|<gov.nist.javax.sip.stack.TLSMessageChannel: gov.nist.javax.sip.stack.HandshakeCompletedListenerImpl getHandshakeCompletedListener()>
SOURCE|<android.media.audiofx.Equalizer: java.lang.String getPresetName(short)>
SOURCE|<android.app.PendingIntent: android.app.PendingIntent getActivity(android.content.Context,int,android.content.Intent,int,android.os.Bundle)>
SOURCE|<android.webkit.WebSettings: boolean getSavePassword()>
SOURCE|<android.app.ApplicationPackageManager: android.graphics.drawable.Drawable getActivityLogo(android.content.ComponentName)>
SOURCE|<com.android.gallery3d.ui.AnimationTime: long get()>
SOURCE|<com.android.launcher2.IconCache: android.graphics.Bitmap getIcon(android.content.Intent)>
SOURCE|<javax.xml.parsers.SAXParser: void parse(java.io.File,org.xml.sax.helpers.DefaultHandler)>
SOURCE|<android.content.res.XmlBlock$Parser: float getAttributeFloatValue(java.lang.String,java.lang.String,float)>
SOURCE|<android.security.KeyChain$KeyChainConnection: android.security.IKeyChainService getService()>
SOURCE|<android.widget.ProgressBar: android.graphics.drawable.Drawable getCurrentDrawable()>
SOURCE|<android.view.View: int getImportantForAccessibility()>
SOURCE|<java.lang.ClassLoader: java.lang.ClassLoader getSystemClassLoader()>
SOURCE|<java.security.KeyStore$PrivateKeyEntry: java.security.PrivateKey getPrivateKey()>
SOURCE|<java.util.concurrent.CountedCompleter: java.util.concurrent.CountedCompleter getRoot()>
SOURCE|<java.util.concurrent.atomic.DoubleAccumulator: double getThenReset()>
SOURCE|<android.app.SearchableInfo: android.app.SearchableInfo getActivityMetaData(android.content.Context,android.content.pm.ActivityInfo,int)>
SOURCE|<com.android.launcher2.Launcher: int[] getMinSpanForWidget(android.content.Context,android.appwidget.AppWidgetProviderInfo)>
SOURCE|<org.apache.harmony.xml.dom.NodeImpl: java.lang.String getTextContent()>
SOURCE|<com.android.server.wm.WindowManagerService: com.android.server.wm.MagnificationSpec getDisplayMagnificationSpecLocked(int)>
SOURCE|<com.google.common.collect.Multimaps$1: java.lang.Object getValue()>
SOURCE|<gov.nist.javax.sip.header.Contact: boolean getWildCardFlag()>
SOURCE|<android.app.ActivityManagerProxy: android.content.IIntentSender getIntentSender(int,java.lang.String,android.os.IBinder,java.lang.String,int,android.content.Intent[],java.lang.String[],int,android.os.Bundle,int)>
SOURCE|<org.apache.http.impl.io.AbstractMessageParser: org.apache.http.Header[] parseHeaders(org.apache.http.io.SessionInputBuffer,int,int,org.apache.http.message.LineParser,java.util.List)>
SOURCE|<com.android.gallery3d.app.PhotoPage: android.content.Intent access$2600(android.net.Uri)>
SOURCE|<android.accounts.AccountManager$Future2Task: java.lang.Object getResult(long,java.util.concurrent.TimeUnit)>
SOURCE|<android.nfc.tech.Ndef: byte[] transceive(byte[],boolean)>
SOURCE|<com.android.inputmethod.keyboard.MainKeyboardView: java.lang.String getShortDisplayName(android.view.inputmethod.InputMethodSubtype)>
SOURCE|<java.text.Collator: int compare(java.lang.Object,java.lang.Object)>
SOURCE|<android.webkit.ZoomManager: float getMinZoomScale()>
SOURCE|<android.content.pm.ContainerEncryptionParams: javax.crypto.SecretKey getMacKey()>
SOURCE|<org.apache.harmony.security.x509.OtherName: byte[] access$200(org.apache.harmony.security.x509.OtherName)>
SOURCE|<com.android.server.AppWidgetService: android.widget.RemoteViews getAppWidgetViews(int)>
SOURCE|<gov.nist.javax.sip.parser.Parser: gov.nist.javax.sip.parser.Lexer getLexer()>
SOURCE|<android.filterpacks.imageproc.FlipFilter: android.filterfw.core.FrameFormat getOutputFormat(java.lang.String,android.filterfw.core.FrameFormat)>
SOURCE|<android.view.ViewConfiguration: int getJumpTapTimeout()>
SOURCE|<javax.crypto.spec.DHPublicKeySpec: java.math.BigInteger getP()>
SOURCE|<android.app.ActivityOptions: java.lang.String getPackageName()>
SOURCE|<org.apache.harmony.xnet.provider.jsse.CipherSuite: java.lang.String getHashName()>
SOURCE|<com.android.commands.monkey.MonkeySourceNetwork$CommandQueueImpl: com.android.commands.monkey.MonkeyEvent getNextQueuedEvent()>
SOURCE|<android.gesture.GestureOverlayView: float getGestureStrokeLengthThreshold()>
SOURCE|<com.android.internal.widget.SlidingTab$Slider: int getTabWidth()>
SOURCE|<java.security.SecureRandom: byte[] getSeed(int)>
SOURCE|<android.provider.Telephony$Threads: long getOrCreateThreadId(android.content.Context,java.lang.String)>
SOURCE|<com.android.server.pm.UserManagerService: android.graphics.Bitmap getUserIcon(int)>
SOURCE|<android.nfc.NfcActivityManager: android.net.Uri[] getUris()>
SOURCE|<com.android.server.pm.PackageManagerService: java.lang.String[] getSystemSharedLibraryNames()>
SOURCE|<android.media.audiofx.Visualizer: int getFft(byte[])>
SOURCE|<android.widget.CalendarView$WeeksAdapter: java.lang.Object getItem(int)>
SOURCE|<com.android.org.bouncycastle.asn1.DERVisibleString: com.android.org.bouncycastle.asn1.DERVisibleString getInstance(com.android.org.bouncycastle.asn1.ASN1TaggedObject,boolean)>
SOURCE|<org.kxml2.io.KXmlParser: java.lang.String getInputEncoding()>
SOURCE|<com.android.gallery3d.data.FilterDeleteSet: int getNumberOfDeletions()>
SOURCE|<org.apache.harmony.security.provider.cert.X509CertImpl: byte[] getExtensionValue(java.lang.String)>
SOURCE|<com.google.common.collect.ImmutableList: com.google.common.collect.UnmodifiableListIterator listIterator()>
SOURCE|<java.lang.Package: java.lang.'annotation'.Annotation[] getAnnotations()>
SOURCE|<com.google.common.collect.MapMakerInternalMap$SoftExpirableEntry: com.google.common.collect.MapMakerInternalMap$ReferenceEntry getNextExpirable()>
SOURCE|<android.database.AbstractCursor: android.database.CursorWindow getWindow()>
SOURCE|<com.android.contacts.list.ContactEntryListAdapter: boolean getDisplayPhotos()>
SOURCE|<com.android.server.sip.SipSessionGroup$SipSessionImpl$2$1: java.lang.String getPassword()>
SOURCE|<android.webkit.CertTool: java.lang.String getCertType(java.lang.String)>
SOURCE|<com.android.mms.MmsConfig: int getMaxMessageCountPerThread()>
SOURCE|<java.time.Month: int getValue()>
SOURCE|<com.android.contacts.list.PhoneFavoriteMergedAdapter: int getCount()>
SOURCE|<android.view.View: int getOverScrollMode()>
SOURCE|<android.net.sip.ISipSession$Stub$Proxy: java.lang.String getCallId()>
SOURCE|<junit.runner.BaseTestRunner: java.lang.String getFilteredTrace(java.lang.String)>
SOURCE|<com.android.contacts.list.DirectoryPartition: java.lang.String getDisplayName()>
SOURCE|<com.android.email.FolderProperties: java.lang.String getDisplayName(com.android.emailcommon.provider.Mailbox)>
SOURCE|<android.location.GeocoderParams: java.lang.String getClientPackage()>
SOURCE|<com.android.gallery3d.ui.ColorTexture: int getWidth()>
SOURCE|<com.android.internal.policy.PolicyManager: android.view.FallbackEventHandler makeNewFallbackEventHandler(android.content.Context)>
SOURCE|<java.util.concurrent.ForkJoinTask: java.lang.Object get()>
SOURCE|<android.widget.ExpandableListView: int getPackedPositionType(long)>
SOURCE|<javax.xml.transform.dom.DOMResult: java.lang.String getSystemId()>
SOURCE|<com.android.server.wm.WindowManagerService: android.graphics.Bitmap screenshotApplications(android.os.IBinder,int,int,int)>
SOURCE|<com.android.contacts.model.account.BaseAccountType$ImKindBuilder: java.lang.String getTagName()>
SOURCE|<android.view.MotionEvent: int getActionIndex()>
SOURCE|<com.android.gallery3d.picasasource.PicasaSource: long getTotalUsedCacheSize()>
SOURCE|<com.android.email.provider.EmailProvider: java.lang.String getType(android.net.Uri)>
SOURCE|<android.net.rtp.RtpStream: int getLocalPort()>
SOURCE|<org.apache.http.conn.ssl.SSLSocketFactory: java.net.Socket createSocket(java.net.Socket,java.lang.String,int,boolean)>
SOURCE|<android.view.VelocityTracker: float getYVelocity()>
SOURCE|<android.content.ContentProviderOperation: android.content.ContentProviderResult apply(android.content.ContentProvider,android.content.ContentProviderResult[],int)>
SOURCE|<android.database.AbstractCursor: int getType(int)>
SOURCE|<android.telephony.TelephonyManager: java.lang.String getDeviceId()>
SOURCE|<com.android.contacts.model.account.ExchangeAccountType: com.android.contacts.model.dataitem.DataKind addDataKindPhone(android.content.Context)>
SOURCE|<java.lang.reflect.Method: java.lang.annotation.Annotation getAnnotation(java.lang.Class)>
SOURCE|<gov.nist.javax.sip.header.extensions.Replaces: java.lang.String getCallId()>
SOURCE|<java.util.HashMap$HashIterator: java.util.HashMap$HashMapEntry nextEntry()>
SOURCE|<com.google.common.collect.ImmutableList: com.google.common.collect.ImmutableList asList()>
SOURCE|<org.apache.harmony.xnet.provider.jsse.SSLEngineImpl: javax.net.ssl.SSLSession getSession()>
SOURCE|<com.android.internal.telephony.sip.SipPhoneBase: android.telephony.SignalStrength getSignalStrength()>
SOURCE|<org.apache.harmony.luni.lang.reflect.GenericSignatureParser: java.lang.reflect.Type parseFieldTypeSignature()>
SOURCE|<java.nio.PipeImpl$PipeSourceChannel: java.io.FileDescriptor getFD()>
SOURCE|<com.android.browser.BrowserSettings: java.lang.String getJsEngineFlags()>
SOURCE|<android.nfc.tech.NfcA: byte[] getAtqa()>
SOURCE|<android.hardware.display.IDisplayManager$Stub$Proxy: android.hardware.display.WifiDisplayStatus getWifiDisplayStatus()>
SOURCE|<com.android.email.activity.MessageOrderManager$LoadMessageListTask: android.database.Cursor doInBackground(java.lang.Void[])>
SOURCE|<com.android.videoeditor.service.MovieOverlay: java.lang.String getTitle(android.os.Bundle)>
SOURCE|<java.util.zip.ZipEntry: long getTime()>
SOURCE|<android.net.IThrottleManager$Stub$Proxy: long getByteCount(java.lang.String,int,int,int)>
SOURCE|<com.android.internal.telephony.gsm.GSMPhone: int getPhoneType()>
SOURCE|<android.net.MailTo: android.net.MailTo parse(java.lang.String)>
SOURCE|<android.os.Debug: java.lang.String[] getVmFeatureList()>
SOURCE|<android.widget.GridLayout$Axis: int[] getTrailingMargins()>
SOURCE|<com.android.gallery3d.filtershow.cache.ZoomCache: android.graphics.Bitmap getImage(com.android.gallery3d.filtershow.presets.ImagePreset,android.graphics.Rect)>
SOURCE|<android.widget.AutoCompleteTextView: java.lang.CharSequence getCompletionHint()>
SOURCE|<android.provider.CalendarContract$EventDays: android.database.Cursor query(android.content.ContentResolver,int,int,java.lang.String[])>
SOURCE|<android.nfc.NfcAdapter: android.nfc.INfcTag getTagService()>
SOURCE|<java.text.BreakIterator: short getShort(byte[],int)>
SOURCE|<com.android.videoeditor.service.VideoEditorProject: long getMediaItemBeginTime(java.lang.String)>
SOURCE|<com.google.common.collect.MapMaker: int getConcurrencyLevel()>
SOURCE|<com.android.contacts.group.GroupDetailFragment: android.net.Uri getGroupUri()>
SOURCE|<android.media.MediaRouter$RouteInfo: int getPlaybackStream()>
SOURCE|<com.android.email.SecurityPolicy: android.content.ComponentName getAdminComponent()>
SOURCE|<com.android.deskclock.timer.CountingTimerView$UnsignedTime: float getLabelWidth()>
SOURCE|<android.hardware.GeomagneticField: float getY()>
SOURCE|<android.accounts.IAccountManagerResponse$Stub: android.os.IBinder asBinder()>
SOURCE|<android.telephony.cdma.CdmaSmsCbProgramResults: int getLanguage()>
SOURCE|<com.google.common.collect.ImmutableMap$SerializedForm: java.lang.Object readResolve()>
SOURCE|<com.android.mms.dom.smil.SmilParElementImpl: org.w3c.dom.NodeList getTimeChildren()>
SOURCE|<org.apache.http.entity.SerializableEntity: long getContentLength()>
SOURCE|<android.net.MobileDataStateTracker: android.net.NetworkInfo getNetworkInfo()>
SOURCE|<com.android.videoeditor.ProjectPickerAdapter: java.lang.Object getItem(int)>
SOURCE|<com.android.internal.telephony.gsm.SimSmsInterfaceManager: java.util.ArrayList access$300(com.android.internal.telephony.gsm.SimSmsInterfaceManager,java.util.ArrayList)>
SOURCE|<com.android.contacts.interactions.PhoneNumberInteraction$PhoneItemAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)>
SOURCE|<android.bluetooth.IBluetoothHeadset$Stub$Proxy: java.util.List getDevicesMatchingConnectionStates(int[])>
SOURCE|<android.provider.Settings$System: long getLongForUser(android.content.ContentResolver,java.lang.String,long,int)>
SOURCE|<com.android.internal.policy.impl.keyguard.KeyguardHostView$7: android.content.Context getContext()>
SOURCE|<android.os.Debug: int getLoadedClassCount()>
SOURCE|<android.telephony.CellInfoGsm$1: android.telephony.CellInfoGsm createFromParcel(android.os.Parcel)>
SOURCE|<libcore.util.ZoneInfo: int getOffset(long)>
SOURCE|<com.android.gallery3d.data.LocalAlbum: java.util.ArrayList getMediaItem(int,int)>
SOURCE|<com.android.email.mail.store.imap.ImapSimpleString: java.io.InputStream getAsStream()>
SOURCE|<android.view.animation.LayoutAnimationController: int getOrder()>
SOURCE|<android.support.v4.view.VelocityTrackerCompat$BaseVelocityTrackerVersionImpl: float getYVelocity(android.view.VelocityTracker,int)>
SOURCE|<com.android.contacts.detail.ContactDetailDisplayUtils$StreamPhotoTag: android.net.Uri getStreamItemPhotoUri()>
SOURCE|<android.view.CompatibilityInfoHolder: android.content.res.CompatibilityInfo get()>
SOURCE|<com.android.server.wm.WindowState: android.graphics.Rect getContentFrameLw()>
SOURCE|<android.os.WorkSource: android.os.WorkSource addReturningNewbs(android.os.WorkSource)>
SOURCE|<java.nio.channels.FileLock: java.lang.String toString()>
SOURCE|<android.view.IApplicationToken$Stub: android.os.IBinder asBinder()>
SOURCE|<com.android.mms.dom.smil.SmilParElementImpl: org.w3c.dom.smil.TimeList getBegin()>
SOURCE|<android.net.ConnectivityManager: java.lang.String[] getTetherableIfaces()>
SOURCE|<android.graphics.drawable.AnimationDrawable: int getNumberOfFrames()>
SOURCE|<java.util.HashMap: java.util.Iterator newKeyIterator()>
SOURCE|<org.apache.harmony.xnet.provider.jsse.Logger: org.apache.harmony.xnet.provider.jsse.Logger$Stream getStream(java.lang.String)>
SOURCE|<org.apache.harmony.xnet.provider.jsse.OpenSSLSocketImpl: java.io.InputStream getInputStream()>
SOURCE|<android.webkit.ViewManager: android.webkit.ViewManager$ChildView createView()>
SOURCE|<android.app.IUiModeManager$Stub$Proxy: int getCurrentModeType()>
SOURCE|<android.graphics.drawable.DrawableContainer$DrawableContainerState: int getConstantWidth()>
SOURCE|<com.android.calendar.agenda.AgendaWindowAdapter: int getStickyHeaderHeight()>
SOURCE|<android.hardware.Camera$Parameters: int getMaxZoom()>
SOURCE|<org.apache.harmony.xml.dom.TextImpl: short getNodeType()>
SOURCE|<com.android.gallery3d.filtershow.imageshow.ImageTinyPlanet: float getCurrentTouchAngle()>
SOURCE|<com.android.contacts.list.ContactEntryListFragment: android.widget.ListView getListView()>
SOURCE|<javax.crypto.CipherSpi: byte[] engineWrap(java.security.Key)>
SOURCE|<android.app.INotificationManager$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
SOURCE|<com.android.internal.telephony.PhoneProxy: com.android.internal.telephony.IccCard getIccCard()>
SOURCE|<com.android.inputmethod.keyboard.Key: java.lang.String getOutputText()>
SOURCE|<android.widget.CursorTreeAdapter$MyCursorHelper: int getCount()>
SOURCE|<gov.nist.javax.sip.stack.SIPTransactionStack: gov.nist.core.net.NetworkLayer getNetworkLayer()>
SOURCE|<com.android.org.bouncycastle.asn1.ASN1Sequence: com.android.org.bouncycastle.asn1.ASN1Sequence getInstance(java.lang.Object)>
SOURCE|<java.security.KeyStoreSpi: void engineLoad(java.security.KeyStore$LoadStoreParameter)>
SOURCE|<com.android.internal.telephony.gsm.SmsMessage$PduParser: int getByte()>
SOURCE|<com.android.internal.telephony.sip.SipPhone: android.net.LinkProperties getLinkProperties(java.lang.String)>
SOURCE|<com.android.inputmethod.latin.InputPointers: int[] getYCoordinates()>
SOURCE|<org.apache.commons.logging.LogFactory: java.lang.ClassLoader getClassLoader(java.lang.Class)>
SOURCE|<org.apache.harmony.xml.dom.AttrImpl: java.lang.String getNodeValue()>
SOURCE|<android.database.DatabaseUtils: java.lang.String getCollationKey(java.lang.String)>
SOURCE|<android.os.IPowerManager$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
SOURCE|<android.widget.PopupWindow: int getMaxAvailableHeight(android.view.View,int,boolean)>
SOURCE|<com.android.inputmethod.latin.ImfUtils: android.view.inputmethod.InputMethodInfo getInputMethodInfoOfThisIme(android.content.Context)>
SOURCE|<android.content.CursorLoader: java.lang.String getSelection()>
SOURCE|<com.android.mms.dom.DocumentImpl: java.lang.String getXmlEncoding()>
SOURCE|<com.android.mms.transaction.TransactionSettings: int getProxyPort()>
SOURCE|<com.android.gallery3d.ui.FlingScroller: int getFinalX()>
SOURCE|<java.lang.ClassLoader: java.io.InputStream getResourceAsStream(java.lang.String)>
SOURCE|<android.sax.Children: android.sax.Element getOrCreate(android.sax.Element,java.lang.String,java.lang.String)>
SOURCE|<gov.nist.javax.sip.SipStackImpl: java.lang.String getIPAddress()>
SOURCE|<android.telephony.TelephonyManager: java.lang.String getIsimDomain()>
SOURCE|<android.media.videoeditor.MediaProperties: int[] getAllSupportedAspectRatios()>
SOURCE|<libcore.net.url.FtpURLConnection: java.io.OutputStream getOutputStream()>
SOURCE|<com.android.internal.telephony.gsm.SmsBroadcastConfigInfo: int getToServiceId()>
SOURCE|<android.webkit.UrlInterceptRegistry: android.webkit.PluginData getPluginData(java.lang.String,java.util.Map)>
SOURCE|<android.telephony.ServiceState: int getNetworkType()>
SOURCE|<android.net.Uri$OpaqueUri: java.lang.String getFragment()>
SOURCE|<gov.nist.javax.sip.header.SIPETag: java.lang.String getETag()>
SOURCE|<com.android.server.ThrottleService: long getPeriodStartTime(java.lang.String)>
SOURCE|<org.apache.harmony.xnet.provider.jsse.OpenSSLSessionImpl: int getApplicationBufferSize()>
SOURCE|<com.android.inputmethod.compat.CompatUtils: android.content.Intent getInputLanguageSelectionIntent(java.lang.String,int)>
SOURCE|<com.android.internal.telephony.PhoneBase: com.android.internal.telephony.IccCardApplicationStatus$AppType getCurrentUiccAppType()>
SOURCE|<com.android.internal.policy.impl.IconUtilities: android.graphics.drawable.Drawable createIconDrawable(android.graphics.drawable.Drawable)>
SOURCE|<com.android.server.net.NetworkStatsService$DefaultNetworkStatsSettings: long getDevPersistBytes(long)>
SOURCE|<android.media.AudioRecord: int getChannelCount()>
SOURCE|<javax.xml.datatype.Duration: int getMonths()>
SOURCE|<android.content.CursorLoader: java.lang.String[] getProjection()>
SOURCE|<com.android.gallery3d.data.MtpDeviceSet: com.android.gallery3d.data.MediaSet getSubMediaSet(int)>
SOURCE|<com.android.internal.telephony.sip.SipPhoneBase: java.lang.String getVoiceMailAlphaTag()>
SOURCE|<android.content.ClipData$Item: java.lang.CharSequence getText()>
SOURCE|<android.text.SpannableStringBuilder: int getTextWidths(int,int,float[],android.graphics.Paint)>
SOURCE|<com.android.internal.os.BatteryStatsImpl: long getAwakeTimePlugged()>
SOURCE|<com.google.common.collect.BstCountBasedBalancePolicies$1: com.google.common.collect.BstNode combine(com.google.common.collect.BstNodeFactory,com.google.common.collect.BstNode,com.google.common.collect.BstNode)>
SOURCE|<android.telephony.SmsMessage: byte[] getPdu()>
SOURCE|<android.renderscript.Mesh: android.renderscript.Allocation getIndexSetAllocation(int)>
SOURCE|<android.graphics.Shader: boolean getLocalMatrix(android.graphics.Matrix)>
SOURCE|<android.content.BroadcastReceiver$PendingResult: int getSendingUserId()>
SOURCE|<android.widget.GridView: int getRequestedColumnWidth()>
SOURCE|<java.security.PKCS12Attribute: void parse(byte[])>
SOURCE|<com.android.contacts.activities.PeopleActivity$TabPagerAdapter: int getCount()>
SOURCE|<java.nio.charset.CharsetDecoder: java.nio.charset.CoderResult decode(java.nio.ByteBuffer,java.nio.CharBuffer,boolean)>
SOURCE|<android.filterfw.core.InputPort: android.filterfw.core.Filter getSourceFilter()>
SOURCE|<com.android.internal.telephony.IccRecords: boolean getVoiceMessageWaiting()>
SOURCE|<org.apache.harmony.xnet.provider.jsse.TrustedCertificateStore: java.lang.String getCertificateAlias(java.security.cert.Certificate)>
SOURCE|<android.content.SyncStorageEngine: android.content.SyncStatusInfo getStatusByAccountAndAuthority(android.accounts.Account,int,java.lang.String)>
SOURCE|<com.android.internal.widget.LockPatternUtils: int getRequestedPasswordMinimumNumeric()>
SOURCE|<android.view.ViewRootImpl: android.view.ViewRootImpl$RunQueue getRunQueue()>
SOURCE|<com.android.gallery3d.app.PhotoDataAdapter: com.android.gallery3d.ui.ScreenNail getScreenNail()>
SOURCE|<android.net.Uri$StringUri: java.lang.String getAuthority()>
SOURCE|<gov.nist.javax.sip.message.SIPResponse: java.lang.String getReasonPhrase(int)>
SOURCE|<com.android.contacts.list.DirectoryPartition: long getDirectoryId()>
SOURCE|<java.util.concurrent.ScheduledThreadPoolExecutor: java.util.List shutdownNow()>
SOURCE|<android.widget.Editor$EasyEditPopupWindow: int getTextOffset()>
SOURCE|<android.text.Layout: android.text.TextPaint getPaint()>
SOURCE|<com.android.launcher2.LauncherModel: com.android.launcher2.ShortcutInfo getShortcutInfo(android.content.pm.PackageManager,android.content.Intent,android.content.Context)>
SOURCE|<com.android.launcher2.IconCache: android.graphics.drawable.Drawable getFullResIcon(android.content.pm.ResolveInfo)>
SOURCE|<com.android.mms.dom.AttrImpl: boolean getSpecified()>
SOURCE|<android.content.pm.IPackageManager$Stub$Proxy: java.util.List getPersistentApplications(int)>
SOURCE|<com.android.server.am.ActivityManagerService: int getPackageScreenCompatMode(java.lang.String)>
SOURCE|<com.android.gallery3d.ui.ScrollerHelper: int getPosition()>
SOURCE|<org.apache.http.params.AbstractHttpParams: int getIntParameter(java.lang.String,int)>
SOURCE|<java.util.zip.ZipFile: java.io.InputStream getInputStream(java.util.zip.ZipEntry)>
SOURCE|<java.util.zip.Deflater: long getBytesWritten()>
SOURCE|<org.apache.harmony.security.x509.CertificateList: org.apache.harmony.security.x509.TBSCertList getTbsCertList()>
SOURCE|<android.app.ApplicationLoaders: android.app.ApplicationLoaders getDefault()>
SOURCE|<android.media.MiniThumbFile: long getMagic(long)>
SOURCE|<libcore.net.http.HttpEngine: java.net.CacheResponse getCacheResponse()>
SOURCE|<android.webkit.WebSettingsClassic: boolean getSaveFormData()>
SOURCE|<javax.xml.transform.stream.StreamSource: java.io.Reader getReader()>
SOURCE|<java.sql.Time: int getMonth()>
SOURCE|<com.android.contacts.util.StreamItemEntry: java.lang.String getLabelRes()>
SOURCE|<android.widget.GridView: int getColumnWidth()>
SOURCE|<com.android.internal.os.storage.ExternalStorageFormatter: android.os.storage.IMountService getMountService()>
SOURCE|<android.os.Bundle: java.lang.String getString(java.lang.String,java.lang.String)>
SOURCE|<org.apache.harmony.xnet.provider.jsse.OpenSSLSocketImplWrapper: int getSoTimeout()>
SOURCE|<org.apache.http.impl.cookie.RFC2109Spec: int getVersion()>
SOURCE|<javax.net.ssl.SNIServerName: byte[] getEncoded()>
SOURCE|<android.app.ApplicationPackageManager: android.graphics.drawable.Drawable getActivityIcon(android.content.Intent)>
SOURCE|<java.security.spec.ECPublicKeySpec: java.security.spec.ECPoint getW()>
SOURCE|<com.google.android.picasasync.UploadTaskEntry: int getUid()>
SOURCE|<com.android.internal.telephony.sip.SipPhone: com.android.internal.telephony.PhoneConstants$DataState getDataConnectionState(java.lang.String)>
SOURCE|<org.apache.harmony.security.asn1.ASN1StringType$7: java.lang.Object getDecodedObject(org.apache.harmony.security.asn1.BerInputStream)>
SOURCE|<android.view.accessibility.AccessibilityManager: java.util.List getInstalledAccessibilityServiceList()>
SOURCE|<android.hardware.input.IInputManager$Stub$Proxy: android.view.InputDevice getInputDevice(int)>
SOURCE|<com.android.internal.telephony.cdma.CDMAPhone: int getVoiceMessageCount()>
SOURCE|<com.android.launcher2.Workspace: android.graphics.Bitmap createWidgetBitmap(com.android.launcher2.ItemInfo,android.view.View)>
SOURCE|<com.google.common.collect.AbstractMultimap: java.util.Collection createEntries()>
SOURCE|<com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata: com.android.i18n.phonenumbers.Phonemetadata$NumberFormat getIntlNumberFormat(int)>
SOURCE|<com.android.internal.telephony.ApnContext: com.android.internal.telephony.DataConnection getDataConnection()>
SOURCE|<javax.crypto.spec.PSource: java.lang.String getAlgorithm()>
SOURCE|<android.widget.Spinner: int getDropDownWidth()>
SOURCE|<com.android.server.TwilightService: com.android.server.TwilightService$TwilightState getCurrentState()>
SOURCE|<com.android.org.bouncycastle.asn1.DEROctetStringParser: com.android.org.bouncycastle.asn1.ASN1Primitive getLoadedObject()>
SOURCE|<org.xml.sax.helpers.AttributeListImpl: java.lang.String getName(int)>
SOURCE|<java.net.InetSocketAddress: java.lang.String getHostString()>
SOURCE|<com.android.exchange.adapter.AbstractSyncAdapter: java.lang.String getSyncKey()>
SOURCE|<android.bluetooth.IBluetoothHealth$Stub$Proxy: java.util.List getConnectedHealthDevices()>
SOURCE|<android.widget.AbsListView: int getSolidColor()>
SOURCE|<android.test.InstrumentationTestRunner: android.test.AndroidTestRunner getAndroidTestRunner()>
SOURCE|<android.location.LocationRequest: java.lang.String getProvider()>
SOURCE|<com.android.internal.telephony.cdma.RuimRecords: java.lang.String getNid()>
SOURCE|<com.android.gallery3d.exif.ExifParser: java.nio.ByteOrder getByteOrder()>
SOURCE|<com.android.inputmethod.latin.SubtypeSwitcher: android.view.inputmethod.InputMethodSubtype getNoLanguageSubtype()>
SOURCE|<java.time.OffsetTime: java.time.ZoneOffset getOffset()>
SOURCE|<android.os.Debug: int getThreadExternalAllocCount()>
SOURCE|<com.google.common.collect.MapMakerInternalMap$WeakExpirableEntry: long getExpirationTime()>
SOURCE|<com.android.nfc.snep.SnepMessage: com.android.nfc.snep.SnepMessage getSuccessResponse(android.nfc.NdefMessage)>
SOURCE|<android.content.res.XmlBlock$Parser: java.lang.String getPositionDescription()>
SOURCE|<com.android.internal.os.BatteryStatsImpl: int getPhoneDataConnectionCount(int,int)>
SOURCE|<com.android.contacts.editor.ContactEditorUtils: java.util.List getSavedAccounts()>
SOURCE|<android.drm.DrmInfo: int getInfoType()>
SOURCE|<com.android.internal.telephony.gsm.GsmConnection: com.android.internal.telephony.UUSInfo getUUSInfo()>
SOURCE|<com.android.server.am.ActivityManagerService: int getLaunchedFromUid(android.os.IBinder)>
SOURCE|<org.apache.harmony.xnet.provider.jsse.SSLSessionImpl: java.lang.String getProtocol()>
SOURCE|<com.android.server.BatteryService: int getBatteryLevel()>
SOURCE|<com.android.nfc.dhimpl.NativeP2pDevice: int getMode()>
SOURCE|<org.apache.harmony.security.provider.crypto.RandomBitsSupplier: byte[] getRandomBits(int)>
SOURCE|<android.graphics.Paint: float getTextRunAdvances(char[],int,int,int,int,int,float[],int)>
SOURCE|<android.hardware.LegacySensorManager: int getSensors()>
SOURCE|<javax.crypto.KeyAgreement: javax.crypto.KeyAgreement getInstance(java.lang.String)>
SOURCE|<com.android.org.bouncycastle.asn1.DERVisibleString: com.android.org.bouncycastle.asn1.DERVisibleString getInstance(java.lang.Object)>
SOURCE|<javax.xml.transform.sax.SAXSource: org.xml.sax.InputSource getInputSource()>
SOURCE|<com.android.gallery3d.app.ActivityState: android.os.Bundle getData()>
SOURCE|<android.graphics.BitmapRegionDecoder: int getHeight()>
SOURCE|<com.android.providers.contacts.aggregation.ContactAggregator$NameLookupSelectionBuilder: java.lang.String getSelection()>
SOURCE|<com.google.common.collect.MapMakerInternalMap$StrongEntry: com.google.common.collect.MapMakerInternalMap$ReferenceEntry getPreviousExpirable()>
SOURCE|<android.widget.GridLayout$3: int getGravityOffset(android.view.View,int)>
SOURCE|<java.util.Locale: java.lang.String getUnicodeLocaleType(java.lang.String)>
SOURCE|<gov.nist.javax.sip.stack.SIPTransaction: javax.sip.message.Response getResponse()>
SOURCE|<android.text.method.AllCapsTransformationMethod: java.lang.CharSequence getTransformation(java.lang.CharSequence,android.view.View)>
SOURCE|<com.android.gallery3d.picasasource.PicasaSource: long getDateTaken(com.android.gallery3d.data.MediaObject)>
SOURCE|<android.app.LoadedApk$ReceiverDispatcher: android.app.IntentReceiverLeaked getLocation()>
SOURCE|<org.apache.http.message.HeaderGroup: org.apache.http.Header getCondensedHeader(java.lang.String)>
SOURCE|<org.apache.harmony.xml.dom.DocumentImpl: java.lang.String getNodeName()>
SOURCE|<com.android.server.pm.PackageManagerService$InstallArgs: android.os.UserHandle getUser()>
SOURCE|<com.android.email.activity.UIControllerBase: com.android.email.activity.MessageListFragment getMessageListFragment()>
SOURCE|<com.android.server.DevicePolicyManagerService: com.android.server.DevicePolicyManagerService$ActiveAdmin getActiveAdminUncheckedLocked(android.content.ComponentName,int)>
SOURCE|<com.android.gallery3d.picasasource.PicasaAlbum: int getCacheFlag()>
SOURCE|<com.android.org.bouncycastle.asn1.DERT61String: byte[] getOctets()>
SOURCE|<android.test.mock.MockResources: java.lang.CharSequence getText(int)>
SOURCE|<com.android.bluetooth.hdp.HealthService: int getHealthDeviceConnectionState(android.bluetooth.BluetoothDevice)>
SOURCE|<android.os.UserManager: int getUserSerialNumber(int)>
SOURCE|<android.net.wifi.p2p.WifiP2pManager: android.os.Messenger getMessenger()>
SOURCE|<java.time.OffsetTime: int get(java.time.temporal.TemporalField)>
SOURCE|<android.net.wifi.IWifiManager$Stub$Proxy: java.lang.String getConfigFile()>
SOURCE|<android.bluetooth.IBluetoothHeadset$Stub$Proxy: java.util.List getConnectedDevices()>
SOURCE|<android.net.http.Connection: byte[] getBuf()>
SOURCE|<com.android.launcher2.CellLayout: com.android.launcher2.ShortcutAndWidgetContainer getShortcutsAndWidgets()>
SOURCE|<android.os.UserManager: android.content.pm.UserInfo getUserInfo(int)>
SOURCE|<android.widget.CursorTreeAdapter: android.database.Cursor runQueryOnBackgroundThread(java.lang.CharSequence)>
SOURCE|<com.android.internal.telephony.ITelephony$Stub$Proxy: int getDataActivity()>
SOURCE|<android.graphics.drawable.ClipDrawable: android.graphics.drawable.Drawable$ConstantState getConstantState()>
SOURCE|<android.graphics.PathMeasure: boolean getSegment(float,float,android.graphics.Path,boolean)>
SOURCE|<android.util.NtpTrustedTime: long getCacheCertainty()>
SOURCE|<com.coremedia.iso.boxes.fragment.TrackFragmentHeaderBox: long getTrackId()>
SOURCE|<com.android.internal.widget.LockSettingsService: long getLong(java.lang.String,long,int)>
SOURCE|<java.lang.reflect.Array: long getLong(java.lang.Object,int)>
SOURCE|<android.widget.FrameLayout: boolean getConsiderGoneChildrenWhenMeasuring()>
SOURCE|<gov.nist.javax.sip.header.RetryAfter: int getDuration()>
SOURCE|<com.android.browser.preferences.WebsiteSettingsFragment$Site: android.graphics.Bitmap getIcon()>
SOURCE|<com.android.contacts.util.StreamItemEntry: java.lang.CharSequence getDecodedText()>
SOURCE|<com.android.gallery3d.picasasource.PicasaAlbumSet: java.lang.String getName()>
SOURCE|<android.bluetooth.IBluetoothHeadset$Stub$Proxy: int getAudioState(android.bluetooth.BluetoothDevice)>
SOURCE|<android.app.ActivityManager: android.app.PendingIntent getRunningServiceControlPanel(android.content.ComponentName)>
SOURCE|<gov.nist.javax.sip.address.SipUri: java.lang.String getParameter(java.lang.String)>
SOURCE|<android.drm.mobile1.DrmConstraintInfo: int getCount()>
SOURCE|<java.time.LocalDate: int get(java.time.temporal.TemporalField)>
SOURCE|<com.android.internal.telephony.cdma.RuimRecords$EfCsimEprlLoaded: java.lang.String getEfName()>
SOURCE|<android.os.Parcel: java.io.Serializable readSerializable()>
SOURCE|<com.android.internal.textservice.ISpellCheckerService$Stub: android.os.IBinder asBinder()>
SOURCE|<android.text.method.DigitsKeyListener: android.text.method.DigitsKeyListener getInstance(boolean,boolean)>
SOURCE|<com.android.launcher2.Cling: java.lang.String getDrawIdentifier()>
SOURCE|<android.hardware.Camera: android.hardware.Camera$Parameters getParameters()>
SOURCE|<android.widget.TextView: java.lang.CharSequence getImeActionLabel()>
SOURCE|<com.android.browser.WebStorageSizeManager$WebKitAppCacheInfo: long getAppCacheSizeBytes()>
SOURCE|<org.apache.harmony.xnet.provider.jsse.OpenSSLSocketImpl: int getSoWriteTimeout()>
SOURCE|<com.android.calendar.DayView: int getEventsAlpha()>
SOURCE|<android.telephony.cdma.CdmaCellLocation: int getBaseStationId()>
SOURCE|<android.net.Uri: android.net.Uri normalizeScheme()>
SOURCE|<android.preference.GenericInflater: java.lang.String getDefaultPackage()>
SOURCE|<android.filterfw.core.OutputPort: android.filterfw.core.InputPort getBasePort()>
SOURCE|<gov.nist.javax.sip.header.HeaderFactoryImpl: gov.nist.javax.sip.header.extensions.ReferencesHeader createReferencesHeader(java.lang.String,java.lang.String)>
SOURCE|<com.android.contacts.activities.DialtactsActivity: android.content.Intent getCallSettingsIntent()>
SOURCE|<com.android.gallery3d.app.GalleryActionBar$ClusterAdapter: int getCount()>
SOURCE|<android.webkit.CacheManager$CacheResult: java.lang.String getETag()>
SOURCE|<org.apache.harmony.xnet.provider.jsse.OpenSSLRSAPrivateKey: org.apache.harmony.xnet.provider.jsse.OpenSSLKey getOpenSSLKey()>
SOURCE|<android.net.SSLCertificateSocketFactory: java.net.Socket createSocket(java.net.InetAddress,int,java.net.InetAddress,int)>
SOURCE|<java.time.chrono.HijrahChronology: int getMonthLength(int,int)>
SOURCE|<android.media.RingtoneManager: android.media.Ringtone getRingtone(int)>
SOURCE|<com.android.contacts.model.RawContactDelta$ValuesDelta: java.lang.String getEmailData()>
SOURCE|<com.android.internal.telephony.PhoneSubInfoProxy: java.lang.String getDeviceId()>
SOURCE|<android.app.WallpaperManager: android.graphics.Bitmap getBitmap()>
SOURCE|<com.android.gallery3d.data.ComboAlbum: int getMediaItemCount()>
SOURCE|<com.android.internal.app.ActionBarImpl: android.app.ActionBar$Tab getTabAt(int)>
SOURCE|<javax.crypto.Mac: int getMacLength()>
SOURCE|<com.android.providers.contacts.ContactsProvider2: java.lang.String getQueryParameter(android.net.Uri,java.lang.String)>
SOURCE|<com.android.email.activity.UIControllerOnePane: int getLayoutId()>
SOURCE|<gov.nist.javax.sip.stack.SIPDialog: long getLocalSeqNumber()>
SOURCE|<android.widget.GridLayout: int getAlignmentMode()>
SOURCE|<com.android.gallery3d.app.Config$AlbumSetPage: com.android.gallery3d.app.Config$AlbumSetPage get(android.content.Context)>
SOURCE|<android.provider.Settings$Secure: android.net.Uri getUriFor(java.lang.String)>
SOURCE|<android.media.videoeditor.MediaVideoItem: int getFps()>
SOURCE|<com.google.android.apps.lightcycle.util.AnalyticsHelper: com.google.android.apps.lightcycle.util.AnalyticsHelper getInstance(android.content.Context)>
SOURCE|<android.test.mock.MockPackageManager: android.content.pm.PackageInfo getPackageInfo(java.lang.String,int)>
SOURCE|<android.net.http.SslError: int getPrimaryError()>
SOURCE|<com.android.browser.TabControl: com.android.browser.TabControl$OnThumbnailUpdatedListener getOnThumbnailUpdatedListener()>
SOURCE|<gov.nist.javax.sip.address.AddressImpl: java.lang.String getDisplayName()>
SOURCE|<com.android.ex.chips.BaseRecipientAdapter: android.widget.Filter getFilter()>
SOURCE|<org.xml.sax.helpers.ParserAdapter: org.xml.sax.DTDHandler getDTDHandler()>
SOURCE|<com.android.internal.policy.impl.keyguard.KeyguardSelectorView$3: android.content.Context getContext()>
SOURCE|<java.util.UnknownFormatFlagsException: java.lang.String getMessage()>
SOURCE|<com.google.common.collect.MapMakerInternalMap$AbstractReferenceEntry: com.google.common.collect.MapMakerInternalMap$ReferenceEntry getNextExpirable()>
SOURCE|<java.util.zip.ZipEntry: byte[] getExtra()>
SOURCE|<com.android.internal.content.PackageMonitor: java.lang.String getPackageName(android.content.Intent)>
SOURCE|<android.app.ActivityManagerProxy: java.util.List getProcessesInErrorState()>
SOURCE|<com.android.contacts.model.ContactLoader: com.android.contacts.model.Contact loadInBackground()>
SOURCE|<gov.nist.core.NameValue: java.lang.String getName()>
SOURCE|<android.media.AudioManager: int getMasterStreamType()>
SOURCE|<com.android.email.service.EasAuthenticatorService$EasAuthenticator: java.lang.String getAuthTokenLabel(java.lang.String)>
SOURCE|<android.graphics.drawable.BitmapDrawable: android.graphics.Paint getPaint()>
SOURCE|<android.app.ActivityManager: int getFrontActivityScreenCompatMode()>
SOURCE|<com.android.internal.telephony.PhoneBase: int getCdmaEriIconIndex()>
SOURCE|<android.telephony.SignalStrength: int getLevel()>
SOURCE|<java.util.concurrent.CompletableFuture: int getNumberOfDependents()>
SOURCE|<com.android.gallery3d.app.PhotoDataAdapter: int getCurrentIndex()>
SOURCE|<android.telephony.CellInfoGsm: android.telephony.CellSignalStrengthGsm getCellSignalStrength()>
SOURCE|<android.media.AudioManager: java.lang.String getProperty(java.lang.String)>
SOURCE|<com.android.providers.contacts.VoicemailContentTable: android.database.Cursor query(com.android.providers.contacts.VoicemailContentProvider$UriData,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>
SOURCE|<com.android.internal.telephony.GsmAlphabet: int[] getEnabledSingleShiftTables()>
SOURCE|<org.apache.harmony.luni.lang.reflect.Types: java.lang.reflect.Type[] getClonedTypeArray(org.apache.harmony.luni.lang.reflect.ListOfTypes)>
SOURCE|<android.content.res.TypedArray: int getLayoutDimension(int,java.lang.String)>
SOURCE|<libcore.io.ForwardingOs: java.net.InetAddress[] getaddrinfo(java.lang.String,libcore.io.StructAddrinfo)>
SOURCE|<com.android.i18n.phonenumbers.Phonenumber$PhoneNumber: java.lang.String getExtension()>
SOURCE|<android.net.EthernetDataTracker: android.net.LinkProperties getLinkProperties()>
SOURCE|<gov.nist.javax.sip.stack.SIPDialogErrorEvent: int getErrorID()>
SOURCE|<org.apache.harmony.security.provider.cert.X509CertImpl: byte[] getSignature()>
SOURCE|<android.location.ILocationListener$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
SOURCE|<com.android.internal.telephony.sip.SipPhone: int getPhoneType()>
SOURCE|<com.android.internal.widget.IRemoteViewsFactory$Stub$Proxy: long getItemId(int)>
SOURCE|<libcore.net.url.JarURLConnectionImpl: int getContentLength()>
SOURCE|<android.location.Address: java.lang.String getSubThoroughfare()>
SOURCE|<org.apache.http.util.VersionInfo: java.lang.String getPackage()>
SOURCE|<com.android.server.NativeDaemonEvent: java.lang.String getField(int)>
SOURCE|<com.android.internal.widget.LockPatternUtils: int getActivePasswordQuality()>
SOURCE|<android.preference.Preference: android.preference.Preference$OnPreferenceChangeListener getOnPreferenceChangeListener()>
SOURCE|<gov.nist.javax.sip.stack.SIPClientTransaction: javax.sip.Dialog getDialog()>
SOURCE|<android.webkit.WebView: java.lang.String[] getHttpAuthUsernamePassword(java.lang.String,java.lang.String)>
SOURCE|<org.apache.harmony.xml.dom.AttrImpl: org.w3c.dom.TypeInfo getSchemaTypeInfo()>
SOURCE|<android.content.ContentValues: byte[] getAsByteArray(java.lang.String)>
SOURCE|<java.net.DatagramPacket: byte[] getData()>
SOURCE|<android.content.res.AssetManager: java.lang.CharSequence getResourceText(int)>
SOURCE|<android.filterfw.core.Filter: java.lang.String getName()>
SOURCE|<com.adobe.xmp.options.SerializeOptions: int getPadding()>
SOURCE|<org.apache.http.impl.SocketHttpClientConnection: java.net.InetAddress getRemoteAddress()>
SOURCE|<android.graphics.drawable.RotateDrawable$RotateState: int getChangingConfigurations()>
SOURCE|<java.nio.MappedByteBufferAdapter: long getLong(int)>
SOURCE|<android.telephony.SmsCbCmasInfo: int getMessageClass()>
SOURCE|<android.view.accessibility.AccessibilityEvent: int getAction()>
SOURCE|<android.net.Uri$PathPart: java.lang.String getEncoded()>
SOURCE|<com.google.android.picasastore.PicasaStoreFacade: android.net.Uri getPhotoUri(long,java.lang.String,java.lang.String)>
SOURCE|<com.google.common.collect.Multimaps$UnmodifiableSortedSetMultimap: java.util.Collection get(java.lang.Object)>
SOURCE|<android.net.ProxyProperties: java.net.InetSocketAddress getSocketAddress()>
SOURCE|<com.android.internal.telephony.CallManager: com.android.internal.telephony.Phone getRingingPhone()>
SOURCE|<com.android.server.pm.PackageManagerService: java.util.List getPreferredPackages(int)>
SOURCE|<com.android.contacts.list.ContactsRequest: java.lang.String getQueryString()>
SOURCE|<com.android.exchange.AbstractSyncService: void <init>
SOURCE|<javax.obex.ClientOperation: int getMaxPacketSize()>
SOURCE|<org.apache.harmony.security.asn1.ASN1Type: java.lang.String toString()>
SOURCE|<android.net.wifi.IWifiManager$Stub: android.os.IBinder asBinder()>
SOURCE|<com.android.server.NetworkManagementService: int getInterfaceTxThrottle(java.lang.String)>
SOURCE|<android.database.sqlite.SQLiteDatabase: java.util.Map getSyncedTables()>
SOURCE|<android.animation.Keyframe$IntKeyframe: java.lang.Object getValue()>
SOURCE|<android.view.ViewRootImpl$2: android.view.Surface getSurface()>
SOURCE|<com.android.browser.BrowserBookmarksAdapter: java.lang.Object getRowObject(android.database.Cursor,java.lang.Object)>
SOURCE|<com.android.i18n.phonenumbers.geocoding.AreaCodeMapStorageStrategy: int getNumOfEntries()>
SOURCE|<android.hardware.SensorManager: float[] getOrientation(float[],float[])>
SOURCE|<java.security.spec.EncodedKeySpec: byte[] getEncoded()>
SOURCE|<android.app.ContextImpl: java.io.File getExternalCacheDir()>
SOURCE|<java.lang.Enum: java.lang.String toString()>
SOURCE|<javax.net.ssl.SSLSessionBindingEvent: javax.net.ssl.SSLSession getSession()>
SOURCE|<com.android.internal.telephony.sip.SipPhone: java.lang.String getDeviceSvn()>
SOURCE|<com.google.common.collect.SingletonImmutableList: java.lang.Object get(int)>
SOURCE|<android.text.method.TimeKeyListener: int getInputType()>
SOURCE|<com.android.gallery3d.data.UriImage: int getHeight()>
SOURCE|<java.io.EmulatedFields: double get(java.lang.String,double)>
SOURCE|<android.text.DynamicLayout: int[] getBlockEndLines()>
SOURCE|<android.test.mock.MockResources: int[] getIntArray(int)>
SOURCE|<android.os.storage.StorageManager: android.os.storage.StorageVolume getPrimaryVolume()>
SOURCE|<android.content.res.Resources: android.content.res.XmlResourceParser loadXmlResourceParser(java.lang.String,int,int,java.lang.String)>
SOURCE|<java.security.SignatureSpi: java.lang.Object clone()>
SOURCE|<com.android.org.bouncycastle.asn1.DERUniversalString: com.android.org.bouncycastle.asn1.DERUniversalString getInstance(java.lang.Object)>
SOURCE|<android.app.Activity: int getWallpaperDesiredMinimumHeight()>
SOURCE|<com.android.internal.util.TypedProperties: int getInt(java.lang.String,int)>
SOURCE|<android.graphics.drawable.AnimationDrawable: android.graphics.drawable.Drawable getFrame(int)>
SOURCE|<com.android.internal.telephony.sip.SipPhoneBase: android.net.LinkProperties getLinkProperties(java.lang.String)>
SOURCE|<com.google.android.mms.pdu.ReadOrigInd: com.google.android.mms.pdu.EncodedStringValue[] getTo()>
SOURCE|<android.net.WebAddress: java.lang.String getPath()>
SOURCE|<android.view.Display: int getMaximumSizeDimension()>
SOURCE|<com.coremedia.iso.boxes.HandlerBox: java.lang.String getHandlerType()>
SOURCE|<gov.nist.javax.sip.header.extensions.References: java.lang.String getParameter(java.lang.String)>
SOURCE|<com.android.internal.telephony.IccRecords: java.lang.String getMsisdnAlphaTag()>
SOURCE|<org.apache.harmony.xnet.provider.jsse.OpenSSLRSAPrivateKey: java.lang.String getAlgorithm()>
SOURCE|<com.android.videoeditor.service.MovieAudioTrack: android.media.videoeditor.WaveformData getWaveformData()>
SOURCE|<android.bluetooth.BluetoothAdapter: int getState()>
SOURCE|<android.text.AlteredCharSequence: void getChars(int,int,char[],int)>
SOURCE|<java.nio.ReadWriteHeapByteBuffer: byte[] protectedArray()>
SOURCE|<com.coremedia.iso.boxes.fragment.TrackFragmentHeaderBox: long getDefaultSampleDuration()>
SOURCE|<java.util.Currency: java.lang.String getSymbol()>
SOURCE|<com.android.contacts.activities.DialtactsActivity$ViewPagerAdapter: int getCount()>
SOURCE|<android.support.v4.view.MotionEventCompat: int getPointerId(android.view.MotionEvent,int)>
SOURCE|<java.nio.MemoryBlock: long getSize()>
SOURCE|<android.os.Bundle: float[] getFloatArray(java.lang.String)>
SOURCE|<android.test.mock.MockContext: android.os.Looper getMainLooper()>
SOURCE|<java.util.concurrent.AbstractExecutorService: java.util.List invokeAll(java.util.Collection)>
SOURCE|<com.android.nfc.snep.SnepMessage: int getLength()>
SOURCE|<java.security.KeyStore: java.lang.String getDefaultType()>
SOURCE|<android.hardware.GeomagneticField: float getInclination()>
SOURCE|<java.net.Inet4Address: java.lang.String getHostAddress()>
SOURCE|<com.android.bluetooth.hfp.HeadsetService: java.lang.String getName()>
SOURCE|<android.webkit.WebView: void reload()>
SOURCE|<android.database.BulkCursorToCursorAdaptor: android.os.Bundle getExtras()>
SOURCE|<android.webkit.WebSettingsClassic: int getMinimumLogicalFontSize()>
SOURCE|<android.test.SingleLaunchActivityTestCase: android.app.Activity getActivity()>
SOURCE|<com.android.calendar.month.SimpleWeekView: int getFirstMonth()>
SOURCE|<java.lang.ExceptionInInitializerError: java.lang.Throwable getCause()>
SOURCE|<java.nio.SocketChannelImpl$SocketAdapter: java.io.OutputStream getOutputStream()>
SOURCE|<java.security.cert.X509CertSelector: java.security.cert.X509Certificate getCertificate()>
SOURCE|<com.android.contacts.calllog.ExtendedCursor: java.lang.String getString(int)>
SOURCE|<org.xml.sax.helpers.AttributeListImpl: java.lang.String getValue(java.lang.String)>
SOURCE|<com.adobe.xmp.impl.XMPSchemaRegistryImpl$1: com.adobe.xmp.options.AliasOptions getAliasForm()>
SOURCE|<org.xml.sax.helpers.NamespaceSupport: java.util.Enumeration getDeclaredPrefixes()>
SOURCE|<com.android.gallery3d.picasasource.PicasaAlbumSet: com.android.gallery3d.data.MediaSet getSubMediaSet(int)>
SOURCE|<com.android.internal.policy.impl.keyguard.PagedView: int getPageForView(android.view.View)>
SOURCE|<com.google.android.mms.pdu.RetrieveConf: int getRetrieveStatus()>
SOURCE|<com.android.providers.contacts.ContactsDatabaseHelper: long getPackageId(java.lang.String)>
SOURCE|<com.android.gallery3d.picasasource.PicasaImage: java.lang.String getName()>
SOURCE|<com.android.commands.monkey.MonkeySourceNetwork$MonkeyCommandReturn: java.lang.String getMessage()>
SOURCE|<android.animation.AnimatorInflater: android.animation.Animator loadAnimator(android.content.Context,int)>
SOURCE|<com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata: com.android.i18n.phonenumbers.Phonemetadata$PhoneNumberDesc getMobile()>
SOURCE|<com.android.providers.contacts.PhotoProcessor: byte[] getThumbnailPhotoBytes()>
SOURCE|<com.android.browser.view.ScrollerView: float getTopFadingEdgeStrength()>
SOURCE|<android.widget.AbsListView: android.util.SparseBooleanArray getCheckedItemPositions()>
SOURCE|<com.android.calendar.agenda.AgendaListView: com.android.calendar.agenda.AgendaWindowAdapter$EventInfo getFirstVisibleEvent()>
SOURCE|<com.android.gallery3d.filtershow.imageshow.ImageSlave: android.graphics.Bitmap getFilteredImage()>
SOURCE|<com.android.email.activity.MessageViewFragmentBase$MessageViewAttachmentInfo: android.net.Uri getUriForIntent(android.content.Context,long)>
SOURCE|<com.android.contacts.model.dataitem.PhoneDataItem: java.lang.String getFormattedPhoneNumber()>
SOURCE|<android.app.admin.IDevicePolicyManager$Stub$Proxy: int getStorageEncryptionStatus(int)>
SOURCE|<android.app.Dialog: android.app.Activity getOwnerActivity()>
SOURCE|<com.android.i18n.phonenumbers.PhoneNumberUtil: com.android.i18n.phonenumbers.AsYouTypeFormatter getAsYouTypeFormatter(java.lang.String)>
SOURCE|<android.preference.TwoStatePreference: android.os.Parcelable onSaveInstanceState()>
SOURCE|<com.android.gallery3d.filtershow.filters.ImageFilterGeometry: android.graphics.Bitmap apply(android.graphics.Bitmap,float,boolean)>
SOURCE|<java.nio.file.Files: java.nio.file.attribute.FileAttributeView getFileAttributeView(java.nio.file.Path,java.lang.Class,java.nio.file.LinkOption[])>
SOURCE|<java.net.HttpCookie: boolean getDiscard()>
SOURCE|<com.android.server.DevicePolicyManagerService: android.app.admin.DeviceAdminInfo findAdmin(android.content.ComponentName,int)>
SOURCE|<android.content.IIntentSender$Stub: android.os.IBinder asBinder()>
SOURCE|<android.content.pm.PackageItemInfo: android.content.res.XmlResourceParser loadXmlMetaData(android.content.pm.PackageManager,java.lang.String)>
SOURCE|<android.media.IAudioService$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
SOURCE|<gov.nist.javax.sip.stack.SIPTransaction: int getPort()>
SOURCE|<android.test.mock.MockContext: int getWallpaperDesiredMinimumWidth()>
SOURCE|<android.app.WallpaperManager: android.graphics.Bitmap generateBitmap(android.content.Context,android.graphics.Bitmap,int,int)>
SOURCE|<java.util.concurrent.locks.AbstractQueuedSynchronizer: int getState()>
SOURCE|<android.app.IWallpaperManager$Stub$Proxy: android.app.WallpaperInfo getWallpaperInfo()>
SOURCE|<java.text.DateFormat: java.lang.StringBuffer format(java.lang.Object,java.lang.StringBuffer,java.text.FieldPosition)>
SOURCE|<com.google.common.collect.ForwardingMultiset: int add(java.lang.Object,int)>
SOURCE|<com.google.common.collect.BstNode: com.google.common.collect.BstNode getChild(com.google.common.collect.BstSide)>
SOURCE|<com.android.internal.telephony.SmsHeader: java.lang.String toString()>
SOURCE|<android.app.ApplicationPackageManager: java.lang.String[] getPackagesForUid(int)>
SOURCE|<com.android.mms.TempFileProvider: java.lang.String getScrapPath(android.content.Context,java.lang.String)>
SOURCE|<com.android.internal.telephony.DataConnection: int getRetryCount()>
SOURCE|<java.util.logging.Logger: java.util.logging.Logger getParent()>
SOURCE|<com.android.contacts.model.Contact: java.lang.String getAltDisplayName()>
SOURCE|<android.view.View: android.view.HardwareRenderer getHardwareRenderer()>
SOURCE|<com.android.internal.telephony.PhoneProxy: void getCellBroadcastSmsConfig(android.os.Message)>
SOURCE|<com.android.email.service.EmailServiceUtils: com.android.emailcommon.service.IEmailService getExchangeService(android.content.Context,com.android.emailcommon.service.IEmailServiceCallback)>
SOURCE|<android.net.http.SslCertificate$DName: java.lang.String getUName()>
SOURCE|<android.location.LocationProvider: java.lang.String getName()>
SOURCE|<com.googlecode.mp4parser.FullContainerBox: java.util.List getBoxes(java.lang.Class)>
SOURCE|<com.android.vcard.VCardEntry$ImData: com.android.vcard.VCardEntry$EntryLabel getEntryLabel()>
SOURCE|<com.android.contacts.list.PhoneFavoriteMergedAdapter: long getItemId(int)>
SOURCE|<com.android.exchange.EasSyncService: android.os.Bundle validateAccount(com.android.emailcommon.provider.HostAuth,android.content.Context)>
SOURCE|<com.android.gallery3d.ui.EdgeEffect$Drawable: int getIntrinsicHeight()>
SOURCE|<gov.nist.javax.sip.header.SIPHeaderList: java.lang.Class getMyClass()>
SOURCE|<java.time.LocalTime: int getMinute()>
SOURCE|<com.android.server.AppWidgetServiceImpl: int getUidForPackage(java.lang.String)>
SOURCE|<com.android.server.location.LocationFudger: android.location.Location getOrCreate(android.location.Location)>
SOURCE|<com.android.internal.telephony.DataConnection: int getRetryTimer()>
SOURCE|<com.android.internal.telephony.cdma.CDMALTEPhone: com.android.internal.telephony.ims.IsimRecords getIsimRecords()>
SOURCE|<android.net.UrlQuerySanitizer: android.net.UrlQuerySanitizer$ValueSanitizer getAllButNulLegal()>
SOURCE|<com.android.internal.telephony.cdma.SmsMessage: com.android.internal.telephony.cdma.SmsMessage$SubmitPdu getSubmitPdu(java.lang.String,java.lang.String,java.lang.String,boolean,com.android.internal.telephony.SmsHeader)>
SOURCE|<com.android.providers.contacts.ContactsProvider2: com.android.providers.contacts.PhotoPriorityResolver createPhotoPriorityResolver(android.content.Context)>
SOURCE|<java.util.logging.LogManager: java.util.logging.LogManager getLogManager()>
SOURCE|<android.net.sip.SimpleSessionDescription$Fields: java.lang.String[] getAttributeNames()>
SOURCE|<com.android.emailcommon.internet.MimeMessage: com.android.emailcommon.mail.Body getBody()>
SOURCE|<android.app.admin.DevicePolicyManager: int getPasswordHistoryLength(android.content.ComponentName)>
SOURCE|<com.android.mms.util.ThumbnailManager: com.android.mms.util.ItemLoadedFuture getVideoThumbnail(android.net.Uri,com.android.mms.util.ItemLoadedCallback)>
SOURCE|<android.widget.AutoCompleteTextView: int getDropDownAnchor()>
SOURCE|<com.android.mms.MmsApp: com.android.mms.util.ThumbnailManager getThumbnailManager()>
SOURCE|<android.webkit.WebViewCore$AutoFillData: int getQueryId()>
SOURCE|<android.location.GpsSatellite: float getAzimuth()>
SOURCE|<org.apache.harmony.security.x509.X509PublicKey: byte[] getEncoded()>
SOURCE|<android.database.sqlite.SQLiteDatabase: android.database.Cursor query(boolean,java.lang.String,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,java.lang.String,java.lang.String,java.lang.String,android.os.CancellationSignal)>
SOURCE|<com.android.providers.contacts.VoicemailContentProvider$UriData: java.lang.String getSourcePackage()>
SOURCE|<android.provider.ContactsContract$ProfileSyncState: byte[] get(android.content.ContentProviderClient,android.accounts.Account)>
SOURCE|<android.nfc.NdefRecord: byte[] getId()>
SOURCE|<android.speech.tts.PlaybackQueueItem: java.lang.Object getCallerIdentity()>
SOURCE|<org.apache.harmony.xml.ExpatAttributes: java.lang.String getValue(java.lang.String)>
SOURCE|<android.os.INetworkManagementService$Stub$Proxy: java.lang.String[] listTtys()>
SOURCE|<com.android.gallery3d.data.PathMatcher$Node: com.android.gallery3d.data.PathMatcher$Node getChild(java.lang.String)>
SOURCE|<android.app.ListFragment: long getSelectedItemId()>
SOURCE|<android.view.View: int getAccessibilityViewId()>
SOURCE|<android.test.InstrumentationTestRunner: java.lang.ClassLoader getLoader()>
SOURCE|<com.google.common.collect.Lists$AbstractListWrapper: java.lang.Object get(int)>
SOURCE|<java.nio.file.Files: java.lang.Object getAttribute(java.nio.file.Path,java.lang.String,java.nio.file.LinkOption[])>
SOURCE|<com.android.internal.telephony.cdma.RuimRecords: byte[] access$000(com.android.internal.telephony.cdma.RuimRecords)>
SOURCE|<java.net.SocketImpl: java.io.FileDescriptor getFileDescriptor()>
SOURCE|<org.apache.harmony.xnet.provider.jsse.OpenSSLEngine: org.apache.harmony.xnet.provider.jsse.OpenSSLEngine getInstance(java.lang.String)>
SOURCE|<com.android.internal.telephony.sip.SipPhone: com.android.internal.telephony.Call getBackgroundCall()>
SOURCE|<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.stack.SIPServerTransaction getInviteTransaction()>
SOURCE|<com.android.server.wm.WindowManagerService: int getOrientationFromWindowsLocked()>
SOURCE|<java.security.DigestOutputStream: java.security.MessageDigest getMessageDigest()>
SOURCE|<android.net.Uri: java.lang.String toSafeString()>
SOURCE|<org.apache.http.impl.conn.AbstractClientConnAdapter: java.net.InetAddress getLocalAddress()>
SOURCE|<com.android.emailcommon.internet.BinaryTempFileBody: java.io.OutputStream getOutputStream()>
SOURCE|<android.app.FragmentManagerImpl: java.util.ArrayList retainNonConfig()>
SOURCE|<android.webkit.WebSettings: int getMinimumFontSize()>
SOURCE|<android.view.ViewRootImpl: android.view.ViewParent getParent()>
SOURCE|<com.android.internal.policy.impl.keyguard.KeyguardPasswordView: int getPasswordTextViewId()>
SOURCE|<android.renderscript.Allocation: android.renderscript.Allocation createSized(android.renderscript.RenderScript,android.renderscript.Element,int,int)>
SOURCE|<com.android.internal.telephony.PhoneProxy: boolean getIccRecordsLoaded()>
SOURCE|<com.android.internal.telephony.OperatorInfo: java.lang.String getOperatorAlphaLong()>
SOURCE|<android.hardware.usb.UsbEndpoint: int getMaxPacketSize()>
SOURCE|<android.view.IWindowManager$Stub$Proxy: int getPendingAppTransition()>
SOURCE|<android.net.SSLCertificateSocketFactory: java.net.Socket createSocket(java.net.Socket,java.lang.String,int,boolean)>
SOURCE|<com.android.providers.calendar.SQLiteContentProvider: android.database.sqlite.SQLiteOpenHelper getDatabaseHelper()>
SOURCE|<com.android.gallery3d.filtershow.imageshow.ImageShow: com.android.gallery3d.filtershow.imageshow.GeometryMetadata getGeometry()>
SOURCE|<android.view.View: float getY()>
SOURCE|<com.android.browser.search.OpenSearchSearchEngine$SuggestionsCursor: int getCount()>
SOURCE|<gov.nist.javax.sip.address.SipUri: gov.nist.core.NameValueList getParameters()>
SOURCE|<com.adobe.xmp.impl.XMPSchemaRegistryImpl$1: java.lang.String getPropName()>
SOURCE|<android.graphics.Bitmap: int getScaledWidth(android.util.DisplayMetrics)>
SOURCE|<com.android.email.mail.store.Pop3Store$Pop3Folder: int getUnreadMessageCount()>
SOURCE|<com.android.browser.homepages.Template$CursorListEntityWrapper: android.database.Cursor getCursor()>
SOURCE|<android.test.mock.MockCursor: int getColumnIndex(java.lang.String)>
SOURCE|<com.android.server.am.ActivityManagerService: android.app.PendingIntent getRunningServiceControlPanel(android.content.ComponentName)>
SOURCE|<com.google.common.collect.ForwardingMap: java.util.Set entrySet()>
SOURCE|<org.apache.harmony.security.x509.GeneralNames: byte[] getEncoded()>
SOURCE|<com.android.contacts.model.account.AccountType: int getInviteContactActionResId()>
SOURCE|<gov.nist.javax.sip.header.CSeq: int getSequenceNumber()>
SOURCE|<com.android.server.LocationManagerService: java.util.List getProviders(android.location.Criteria,boolean)>
SOURCE|<com.android.gallery3d.app.StitchingProgressManager: java.lang.Integer getProgress(android.net.Uri)>
SOURCE|<com.android.internal.telephony.cdma.RuimRecords$EfCsimImsimLoaded: java.lang.String getEfName()>
SOURCE|<com.android.launcher2.PagedView: int getPageCount()>
SOURCE|<android.util.XmlPullAttributes: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>
SOURCE|<libcore.net.http.HttpEngine: java.net.HttpURLConnection getHttpConnectionToCache()>
SOURCE|<com.android.uiautomator.core.UiSelector: com.android.uiautomator.core.UiSelector getParentSelector()>
SOURCE|<org.apache.harmony.security.pkcs7.SignedData: int getVersion()>
SOURCE|<com.android.browser.IntentHandler$UrlData: java.lang.String getSearchBoxQueryToSubmit()>
SOURCE|<com.android.bluetooth.pbap.BluetoothPbapCallLogComposer: java.lang.String createOneEntry(boolean)>
SOURCE|<com.android.contacts.list.CustomContactListFilterActivity$DisplayAdapter: long getChildId(int,int)>
SOURCE|<javax.obex.ServerOperation: long getLength()>
SOURCE|<com.google.common.collect.AbstractMultimap$WrappedCollection: java.lang.Object getKey()>
SOURCE|<android.text.SpannableStringBuilder: int getSpanEnd(java.lang.Object)>
SOURCE|<com.android.internal.policy.impl.keyguard.KeyguardWidgetPager: com.android.internal.policy.impl.keyguard.KeyguardWidgetFrame getWidgetPageAt(int)>
SOURCE|<com.android.server.wm.WindowState: long getInputDispatchingTimeoutNanos()>
SOURCE|<com.android.camera.ComboPreferences: boolean getBoolean(java.lang.String,boolean)>
SOURCE|<java.util.TimeZone: java.lang.String[] getAvailableIDs()>
SOURCE|<gov.nist.javax.sip.header.CallIdentifier: java.lang.String getLocalId()>
SOURCE|<gov.nist.javax.sip.header.Challenge: java.lang.String getSignature()>
SOURCE|<java.text.DateFormat: java.util.Date parse(java.lang.String)>
SOURCE|<android.graphics.drawable.NinePatchDrawable: int getIntrinsicWidth()>
SOURCE|<gov.nist.javax.sip.header.ims.PAssociatedURI: javax.sip.address.URI getAssociatedURI()>
SOURCE|<android.media.audiofx.EnvironmentalReverb: int getReverbDelay()>
SOURCE|<android.view.View: float getRotation()>
SOURCE|<android.view.accessibility.AccessibilityRecord: int getMaxScrollY()>
SOURCE|<java.security.KeyRep: java.lang.Object readResolve()>
SOURCE|<java.nio.CharBuffer: java.nio.CharBuffer get(char[])>
SOURCE|<android.widget.Gallery: android.view.ContextMenu$ContextMenuInfo getContextMenuInfo()>
SOURCE|<com.coremedia.iso.boxes.MovieHeaderBox: long getNextTrackId()>
SOURCE|<java.time.Month: long getLong(java.time.temporal.TemporalField)>
SOURCE|<com.android.gallery3d.data.MediaSet: com.android.gallery3d.data.MediaDetails getDetails()>
SOURCE|<android.view.WindowManagerGlobal: android.view.IWindowSession getWindowSession(android.os.Looper)>
SOURCE|<android.provider.Settings$Secure: java.lang.String getStringForUser(android.content.ContentResolver,java.lang.String,int)>
SOURCE|<android.hardware.Camera$Parameters: java.util.List getSupportedWhiteBalance()>
SOURCE|<android.telephony.SmsMessage: int getIndexOnSim()>
SOURCE|<org.apache.harmony.xnet.provider.jsse.OpenSSLKey: int getPkeyContext()>
SOURCE|<gov.nist.javax.sip.message.SIPMessage: java.lang.String getCharset()>
SOURCE|<gov.nist.javax.sip.stack.SIPTransaction: java.lang.String getPeerAddress()>
SOURCE|<com.android.email.mail.store.ExchangeStore: java.lang.Class getSettingActivityClass()>
SOURCE|<android.view.textservice.SuggestionsInfo: int getSuggestionsAttributes()>
SOURCE|<com.android.internal.view.menu.ActionMenuItem: android.graphics.drawable.Drawable getIcon()>
SOURCE|<com.android.org.bouncycastle.asn1.ASN1OctetString: com.android.org.bouncycastle.asn1.ASN1Primitive toDERObject()>
SOURCE|<com.android.server.sip.SipSessionGroup$SipSessionImpl: java.lang.String getLocalIp()>
SOURCE|<android.view.accessibility.AccessibilityInteractionClient: android.view.accessibility.AccessibilityInteractionClient getInstance()>
SOURCE|<java.util.TimeZone: java.lang.String getDisplayName()>
SOURCE|<com.android.internal.telephony.sip.SipPhoneBase: java.lang.String getImei()>
SOURCE|<android.media.audiofx.AudioEffect: int getParameter(int,int[])>
SOURCE|<android.hardware.display.WifiDisplayStatus$1: android.hardware.display.WifiDisplayStatus createFromParcel(android.os.Parcel)>
SOURCE|<com.android.browser.search.OpenSearchSearchEngine$SuggestionsCursor: float getFloat(int)>
SOURCE|<android.preference.ListPreference: java.lang.CharSequence[] getEntries()>
SOURCE|<android.content.SyncStorageEngine: java.util.ArrayList getSyncStatus()>
SOURCE|<java.time.LocalDateTime: int getYear()>
SOURCE|<com.android.contacts.group.SuggestedMemberListAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)>
SOURCE|<gov.nist.javax.sip.stack.SIPClientTransaction: gov.nist.javax.sip.stack.MessageChannel getRequestChannel()>
SOURCE|<java.net.URLConnection: java.lang.String getDefaultRequestProperty(java.lang.String)>
SOURCE|<com.android.email.activity.ThreePaneLayout: int getRightPaneId()>
SOURCE|<com.android.internal.policy.impl.PhoneFallbackEventHandler: android.app.KeyguardManager getKeyguardManager()>
SOURCE|<android.telephony.SignalStrength: int getGsmBitErrorRate()>
SOURCE|<android.widget.AdapterView: android.widget.AdapterView$OnItemLongClickListener getOnItemLongClickListener()>
SOURCE|<java.lang.reflect.Constructor: int getModifiers()>
SOURCE|<java.net.URLConnection: java.io.OutputStream getOutputStream()>
SOURCE|<gov.nist.javax.sip.stack.SIPTransactionStack: int getClientTransactionTableSize()>
SOURCE|<com.android.internal.telephony.gsm.SmsMessage$PduParser: java.lang.String getSCAddress()>
SOURCE|<android.content.res.XmlBlock$Parser: java.lang.String getInputEncoding()>
SOURCE|<com.google.common.collect.ImmutableCollection: com.google.common.collect.ImmutableList asList()>
SOURCE|<android.view.View: android.graphics.Matrix getMatrix()>
SOURCE|<com.android.contacts.voicemail.VoicemailStatusHelperImpl: java.util.List getStatusMessages(android.database.Cursor)>
SOURCE|<java.lang.Runtime: java.lang.Process exec(java.lang.String[],java.lang.String[],java.io.File)>
SOURCE|<com.android.internal.policy.impl.keyguard.KeyguardWidgetPager: int getWidgetToResetOnPageFadeOut()>
SOURCE|<com.android.server.DevicePolicyManagerService$ActiveAdmin: android.os.UserHandle getUserHandle()>
SOURCE|<android.content.ContentProvider: java.lang.String getWritePermission()>
SOURCE|<org.apache.harmony.xml.parsers.DocumentBuilderImpl: org.w3c.dom.Document parse(org.xml.sax.InputSource)>
SOURCE|<java.util.concurrent.CyclicBarrier: int getParties()>
SOURCE|<com.android.internal.policy.impl.keyguard.KeyguardAbsKeyInputView: com.android.internal.policy.impl.keyguard.KeyguardSecurityCallback getCallback()>
SOURCE|<org.apache.james.mime4j.LogFactory: org.apache.james.mime4j.Log getLog(java.lang.Class)>
SOURCE|<android.net.wifi.WifiManager: int getFrequencyBand()>
SOURCE|<java.util.jar.JarEntry: java.util.jar.Attributes getAttributes()>
SOURCE|<android.widget.GridView: int getVerticalSpacing()>
SOURCE|<android.filterpacks.performance.Throughput: int getPeriodTime()>
SOURCE|<android.app.DialogFragment: boolean getShowsDialog()>
SOURCE|<com.google.android.gsf.Gservices: java.lang.String getString(android.content.ContentResolver,java.lang.String,java.lang.String)>
SOURCE|<com.google.common.collect.Multisets$ImmutableEntry: java.lang.Object getElement()>
SOURCE|<com.android.uiautomator.core.UiSelector: int getInstance()>
SOURCE|<java.text.RuleBasedCollator: java.lang.String getRules()>
SOURCE|<java.nio.NioUtils: int getDirectBufferAddress(java.nio.Buffer)>
SOURCE|<android.widget.EditText: android.text.method.MovementMethod getDefaultMovementMethod()>
SOURCE|<com.google.android.mms.pdu.CharacterSets: java.lang.String getMimeName(int)>
SOURCE|<gov.nist.javax.sip.stack.SIPTransactionStack: java.util.Collection getDialogs(javax.sip.DialogState)>
SOURCE|<org.apache.http.client.HttpResponseException: int getStatusCode()>
SOURCE|<com.android.phone.CallNotifier: boolean getIsCdmaRedialCall()>
SOURCE|<android.content.ComponentName: java.lang.String getClassName()>
SOURCE|<java.util.TimeZone: java.lang.String getID()>
SOURCE|<java.util.TimeZone: java.lang.String[] getAvailableIDs(int)>
SOURCE|<android.nfc.Tag: android.nfc.INfcTag getTagService()>
SOURCE|<android.telephony.SmsCbMessage: int getGeographicalScope()>
SOURCE|<com.android.internal.policy.impl.keyguard.KeyguardWidgetFrame: android.os.Handler getWorkerHandler()>
SOURCE|<com.android.internal.widget.DrawableHolder: float getX()>
SOURCE|<com.android.providers.contacts.ContactsDatabaseHelper: com.android.providers.contacts.ContactsDatabaseHelper getNewInstanceForTest(android.content.Context)>
SOURCE|<com.android.server.am.ActivityManagerService: java.util.List getRunningAppProcesses()>
SOURCE|<java.time.format.DecimalStyle: char getDecimalSeparator()>
SOURCE|<com.google.common.collect.MapMakerInternalMap$NullEntry: com.google.common.collect.MapMakerInternalMap$ReferenceEntry getNextEvictable()>
SOURCE|<com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata: java.lang.String getNationalPrefixForParsing()>
SOURCE|<java.io.ObjectStreamClass: long getConstructor()>
SOURCE|<com.googlecode.mp4parser.AbstractBox: long getSize()>
SOURCE|<android.text.StaticLayout: int getEllipsisCount(int)>
SOURCE|<java.security.spec.PSSParameterSpec: int getTrailerField()>
SOURCE|<java.time.OffsetTime: int getMinute()>
SOURCE|<libcore.net.http.RawHeaders: int getHttpMinorVersion()>
SOURCE|<com.android.contacts.editor.GroupMembershipView$GroupMembershipAdapter: int getItemViewType(int)>
SOURCE|<android.database.CursorWrapper: int getColumnCount()>
SOURCE|<android.webkit.WebSettingsClassic$AutoFillProfile: int getUniqueId()>
SOURCE|<com.android.browser.provider.SQLiteContentProvider: int update(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[])>
SOURCE|<android.mtp.MtpObjectInfo: int getThumbPixWidth()>
SOURCE|<java.util.jar.JarVerifier: java.util.Vector getSignerCertificates(java.lang.String,java.util.Map)>
SOURCE|<com.android.internal.widget.multiwaveview.PointCloud$WaveManager: float getAlpha()>
SOURCE|<android.content.ContentService: android.content.SyncAdapterType[] getSyncAdapterTypes()>
SOURCE|<com.android.org.bouncycastle.asn1.x509.X509Name: java.util.Vector getOIDs()>
SOURCE|<gov.nist.javax.sip.message.SIPResponse: java.lang.String getReasonPhrase()>
SOURCE|<android.view.View: android.view.animation.Animation getAnimation()>
SOURCE|<android.widget.ListPopupWindow: android.view.View getAnchorView()>
SOURCE|<android.opengl.ManagedEGLContext: javax.microedition.khronos.egl.EGLContext getContext()>
SOURCE|<android.net.sip.SimpleSessionDescription$Media: int getPortCount()>
SOURCE|<android.webkit.WebView$WebViewTransport: android.webkit.WebView getWebView()>
SOURCE|<com.android.internal.telephony.PhoneBase: com.android.internal.telephony.ServiceStateTracker getServiceStateTracker()>
SOURCE|<com.android.internal.view.menu.MenuBuilder: java.util.ArrayList getVisibleItems()>
SOURCE|<android.os.Parcel: byte[] marshall()>
SOURCE|<android.view.InputDevice: java.lang.String getDescriptor()>
SOURCE|<com.android.inputmethod.keyboard.KeyboardSwitcher: com.android.inputmethod.keyboard.Keyboard getKeyboard()>
SOURCE|<com.android.gallery3d.app.AbstractGalleryActivity: android.content.Context getAndroidContext()>
SOURCE|<android.telephony.PhoneNumberUtils: byte[] networkPortionToCalledPartyBCD(java.lang.String)>
SOURCE|<android.media.JetPlayer: boolean loadJetFile(java.lang.String)>
SOURCE|<android.view.accessibility.AccessibilityEvent: java.util.List getText()>
SOURCE|<org.xml.sax.helpers.AttributeListImpl: java.lang.String getType(int)>
SOURCE|<com.android.systemui.recent.TaskDescription: java.lang.CharSequence getLabel()>
SOURCE|<com.coremedia.iso.boxes.fragment.TrackRunBox: com.coremedia.iso.boxes.fragment.SampleFlags getFirstSampleFlags()>
SOURCE|<android.widget.TextView: java.util.Locale getTextLocale()>
SOURCE|<com.android.server.pm.PackageManagerService: java.util.List getAllPermissionGroups(int)>
SOURCE|<com.google.common.collect.ImmutableCollection: java.lang.String toString()>
SOURCE|<java.util.concurrent.ForkJoinPool: int getRunningThreadCount()>
SOURCE|<org.apache.harmony.security.x509.AuthorityKeyIdentifier: java.math.BigInteger getAuthorityCertSerialNumber()>
SOURCE|<org.apache.http.impl.conn.tsccm.BasicPooledConnAdapter: org.apache.http.impl.conn.AbstractPoolEntry getPoolEntry()>
SOURCE|<com.android.camera.ComboPreferences: android.content.SharedPreferences getLocal()>
SOURCE|<com.android.internal.telephony.gsm.SmsCbHeader: android.telephony.SmsCbCmasInfo getCmasInfo()>
SOURCE|<android.preference.PreferenceFragment: android.preference.PreferenceScreen getPreferenceScreen()>
SOURCE|<org.xml.sax.helpers.NewInstance: java.lang.ClassLoader getClassLoader()>
SOURCE|<com.android.internal.telephony.gsm.GSMPhone: com.android.internal.telephony.IccSmsInterfaceManager getIccSmsInterfaceManager()>
SOURCE|<com.android.mms.transaction.HttpUtils: java.lang.String getCurrentAcceptLanguage(java.util.Locale)>
SOURCE|<com.android.gallery3d.data.SnailSource: com.android.gallery3d.data.Path getItemPath(int)>
SOURCE|<android.app.Dialog: android.content.Context getContext()>
SOURCE|<gov.nist.javax.sip.stack.SIPTransactionStack: gov.nist.javax.sip.stack.SIPDialog getDialog(java.lang.String)>
SOURCE|<org.apache.harmony.xml.dom.ElementImpl: org.w3c.dom.Element getElementById(java.lang.String)>
SOURCE|<com.google.common.collect.Multimaps$CustomSetMultimap: java.util.Collection createCollection()>
SOURCE|<android.filterfw.core.FrameFormat: int getDepth()>
SOURCE|<java.security.cert.X509Certificate: java.util.List getExtendedKeyUsage()>
SOURCE|<android.server.search.SearchManagerService: android.content.ComponentName getAssistIntent(int)>
SOURCE|<com.android.inputmethod.keyboard.internal.KeyStylesSet$DeclaredKeyStyle: java.lang.String getString(android.content.res.TypedArray,int)>
SOURCE|<java.util.concurrent.locks.ReentrantReadWriteLock: int getReadHoldCount()>
SOURCE|<android.bluetooth.IBluetoothHealth$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
SOURCE|<java.lang.reflect.AccessibleObject: java.lang.annotation.Annotation getAnnotation(java.lang.Class)>
SOURCE|<android.widget.ExpandableListConnector: android.view.View getView(int,android.view.View,android.view.ViewGroup)>
SOURCE|<gov.nist.javax.sip.message.SIPMessage: byte[] encodeAsBytes(java.lang.String)>
SOURCE|<android.app.IThumbnailRetriever$Stub: android.os.IBinder asBinder()>
SOURCE|<android.os.Environment$UserEnvironment: java.io.File getExternalStorageDirectory()>
SOURCE|<libcore.io.ForwardingOs: libcore.io.StructTimeval getsockoptTimeval(java.io.FileDescriptor,int,int)>
SOURCE|<com.android.calendar.agenda.AgendaListView: com.android.calendar.agenda.AgendaAdapter$ViewHolder getSelectedViewHolder()>
SOURCE|<android.content.ContextWrapper: int getWallpaperDesiredMinimumHeight()>
SOURCE|<com.android.server.InputMethodManagerService$InputMethodAndSubtypeListManager: java.util.List getSortedInputMethodAndSubtypeList(boolean,boolean,boolean)>
SOURCE|<android.webkit.WebSettingsClassic: android.webkit.WebSettings$LayoutAlgorithm getLayoutAlgorithm()>
SOURCE|<com.google.common.io.CharStreams$4: java.io.Reader getInput()>
SOURCE|<android.text.style.SpellCheckSpan: int getSpanTypeId()>
SOURCE|<com.android.vcard.VCardParserImpl_V21: java.lang.String getBase64(java.lang.String)>
SOURCE|<com.android.gallery3d.filtershow.imageshow.GeometryMetadata: android.graphics.Matrix getHorizontalMatrix(float)>
SOURCE|<com.google.common.collect.MapMakerInternalMap$SoftExpirableEvictableEntry: com.google.common.collect.MapMakerInternalMap$ReferenceEntry getNextExpirable()>
SOURCE|<android.graphics.Canvas: void getMatrix(android.graphics.Matrix)>
SOURCE|<com.android.deskclock.stopwatch.StopwatchFragment$LapsListAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)>
SOURCE|<com.android.email.mail.store.imap.ImapString: java.util.Date getDateOrNull()>
SOURCE|<android.database.CursorWindow: java.lang.String getName()>
SOURCE|<com.android.nfc.NfcService$TagService: int getTimeout(int)>
SOURCE|<com.android.deskclock.widget.multiwaveview.PointCloud$WaveManager: float getAlpha()>
SOURCE|<android.accessibilityservice.IAccessibilityServiceConnection$Stub$Proxy: float focusSearch(int,long,int,int,android.view.accessibility.IAccessibilityInteractionConnectionCallback,long)>
SOURCE|<com.android.gallery3d.data.Clustering: com.android.gallery3d.data.MediaItem getClusterCover(int)>
SOURCE|<com.adobe.xmp.impl.XMPDateTimeImpl: int getMinute()>
SOURCE|<android.widget.AdapterViewAnimator: android.view.View getSelectedView()>
SOURCE|<java.security.AlgorithmParameters: byte[] getEncoded()>
SOURCE|<com.google.common.collect.MapMakerInternalMap$HashIterator: com.google.common.collect.MapMakerInternalMap$WriteThroughEntry nextEntry()>
SOURCE|<android.view.View: int getScrollBarDefaultDelayBeforeFade()>
SOURCE|<android.text.BoringLayout: int getEllipsizedWidth()>
SOURCE|<android.widget.CalendarView: int getWeekSeparatorLineColor()>
SOURCE|<com.android.mms.dom.AttrImpl: java.lang.String getNodeName()>
SOURCE|<org.apache.harmony.xml.dom.ElementImpl: org.w3c.dom.TypeInfo getSchemaTypeInfo()>
SOURCE|<android.widget.CalendarView: int getFirstDayOfWeek()>
SOURCE|<com.android.mms.model.SlideshowModel: com.android.mms.model.SlideshowModel createFromPduBody(android.content.Context,com.google.android.mms.pdu.PduBody)>
SOURCE|<com.google.android.gms.common.ConnectionResult: int getErrorCode()>
SOURCE|<com.android.internal.policy.impl.PhoneWindowManager: int getNonDecorDisplayHeight(int,int,int)>
SOURCE|<android.gesture.GestureStore: int getOrientationStyle()>
SOURCE|<com.android.internal.os.BatteryStatsImpl$Uid$Proc: int getStarts(int)>
SOURCE|<android.net.wifi.WifiManager: int getWifiState()>
SOURCE|<com.android.inputmethod.keyboard.MoreKeysKeyboardView: com.android.inputmethod.keyboard.PointerTracker$DrawingProxy getDrawingProxy()>
SOURCE|<android.text.style.SuggestionSpan: int getUnderlineColor()>
SOURCE|<android.nfc.tech.NfcB: android.nfc.Tag getTag()>
SOURCE|<com.android.internal.telephony.OperatorInfo: java.lang.String getOperatorNumeric()>
SOURCE|<org.apache.http.conn.ssl.SSLSocketFactory: java.net.Socket connectSocket(java.net.Socket,java.lang.String,int,java.net.InetAddress,int,org.apache.http.params.HttpParams)>
SOURCE|<javax.obex.ClientOperation: java.lang.String getEncoding()>
SOURCE|<android.widget.OverScroller: int getStartY()>
SOURCE|<javax.sip.DialogState: javax.sip.DialogState getObject(int)>
SOURCE|<org.apache.http.impl.client.AbstractHttpClient: org.apache.http.params.HttpParams getParams()>
SOURCE|<com.android.inputmethod.latin.UserHistoryDictionaryBigramList: java.util.HashMap getBigrams(java.lang.String)>
SOURCE|<com.android.wallpaper.RenderScriptScene: android.renderscript.ScriptC getScript()>
SOURCE|<com.google.android.apps.lightcycle.camera.NullSurfaceCameraPreview: com.google.android.apps.lightcycle.util.Size getPhotoSize()>
SOURCE|<android.net.UrlQuerySanitizer: int decodeHexDigit(char)>
SOURCE|<android.os.Debug$MemoryInfo: int getOtherSharedDirty(int)>
SOURCE|<com.android.mms.data.Contact$ContactsCache: java.util.List getContactInfoForPhoneUris(android.os.Parcelable[])>
SOURCE|<libcore.net.http.HttpsURLConnectionImpl: java.lang.Object getContent()>
SOURCE|<org.apache.http.impl.auth.DigestScheme: java.lang.String getSchemeName()>
SOURCE|<com.android.internal.telephony.gsm.GsmMmiCode: com.android.internal.telephony.MmiCode$State getState()>
SOURCE|<android.os.CountDownTimer: android.os.CountDownTimer start()>
SOURCE|<android.os.IMessenger$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
SOURCE|<com.android.contacts.list.ContactListAdapter: java.lang.String getSelectedContactLookupKey()>
SOURCE|<android.view.accessibility.AccessibilityNodeInfo: android.view.accessibility.AccessibilityNodeInfo getParent()>
SOURCE|<android.webkit.WebChromeClient: android.view.View getVideoLoadingProgressView()>
SOURCE|<gov.nist.javax.sip.stack.SIPTransaction: java.lang.String getHost()>
SOURCE|<com.android.internal.telephony.IccServiceTable: java.lang.String toString()>
SOURCE|<android.net.nsd.DnsSdTxtRecord: byte[] access$000(android.net.nsd.DnsSdTxtRecord)>
SOURCE|<android.filterfw.core.SimpleFrame: java.nio.ByteBuffer getData()>
SOURCE|<java.time.ZonedDateTime: int getDayOfYear()>
SOURCE|<android.preference.PreferenceActivity: android.preference.PreferenceActivity$Header onGetInitialHeader()>
SOURCE|<com.android.deskclock.widget.multiwaveview.Ease$Sine$3: float getInterpolation(float)>
SOURCE|<android.view.inputmethod.InputMethodSubtype: int getNameResId()>
SOURCE|<gov.nist.javax.sip.header.Via: gov.nist.core.HostPort getSentBy()>
SOURCE|<org.apache.http.impl.client.RoutedRequest: org.apache.http.conn.routing.HttpRoute getRoute()>
SOURCE|<java.nio.Buffer: java.lang.String toString()>
SOURCE|<android.net.Proxy: java.lang.String getDefaultHost()>
SOURCE|<android.view.View: android.view.ViewParent getParentForAccessibility()>
SOURCE|<java.util.Date: long parse(java.lang.String)>
SOURCE|<java.util.logging.LogRecord: int getThreadID()>
SOURCE|<android.view.MotionEvent: int getHistorySize()>
SOURCE|<java.time.chrono.MinguoDate: int getProlepticYear()>
SOURCE|<java.security.GuardedObject: java.lang.Object getObject()>
SOURCE|<com.android.internal.telephony.ITelephony$Stub$Proxy: int getActivePhoneType()>
SOURCE|<android.app.PendingIntent: android.content.IIntentSender getTarget()>
SOURCE|<com.android.contacts.detail.ContactDetailDisplayUtils: java.lang.CharSequence getDisplayName(android.content.Context,com.android.contacts.model.Contact)>
SOURCE|<java.util.logging.Logger: boolean getUseParentHandlers()>
SOURCE|<java.util.concurrent.locks.StampedLock: int getReadLockCount(long)>
SOURCE|<android.media.MediaRouter: android.media.MediaRouter$RouteInfo getRouteAt(int)>
SOURCE|<com.android.internal.telephony.AdnRecord: byte[] buildAdnString(int)>
SOURCE|<android.hardware.Camera$Parameters: int getJpegThumbnailQuality()>
SOURCE|<com.android.server.net.NetworkStatsService: android.net.NetworkStats getDataLayerSnapshotForUid(int)>
SOURCE|<android.app.WallpaperInfo: android.content.ComponentName getComponent()>
SOURCE|<com.android.inputmethod.latin.SettingsValues: java.lang.String getPrefAdditionalSubtypes(android.content.SharedPreferences,android.content.res.Resources)>
SOURCE|<android.bluetooth.IBluetoothHeadset$Stub$Proxy: int getConnectionState(android.bluetooth.BluetoothDevice)>
SOURCE|<android.os.CommonTimeConfig: int getPanicThreshold()>
SOURCE|<android.media.AudioManager: boolean isMicrophoneMute()>
SOURCE|<android.text.style.AbsoluteSizeSpan: boolean getDip()>
SOURCE|<android.view.TextureView: android.graphics.SurfaceTexture getSurfaceTexture()>
SOURCE|<android.net.RouteInfo: java.net.InetAddress getGateway()>
SOURCE|<com.android.calendar.alerts.AlertActivity: android.database.Cursor getItemForView(android.view.View)>
SOURCE|<com.android.internal.os.BatteryStatsImpl$Uid$Pkg: com.android.internal.os.BatteryStatsImpl getBatteryStats()>
SOURCE|<android.app.PendingIntent: android.os.UserHandle getCreatorUserHandle()>
SOURCE|<com.google.common.collect.MapMakerInternalMap$StrongExpirableEvictableEntry: long getExpirationTime()>
SOURCE|<com.google.common.io.ByteStreams$5: java.io.InputStream getInput()>
SOURCE|<java.math.BigInteger: int getLowestSetBit()>
SOURCE|<javax.crypto.EncryptedPrivateKeyInfo: byte[] getEncoded()>
SOURCE|<com.android.mms.ui.Presenter: com.android.mms.ui.ViewInterface getView()>
SOURCE|<java.io.ObjectInputStream: java.lang.Object readObjectOverride()>
SOURCE|<java.time.LocalDate: int get0(java.time.temporal.TemporalField)>
SOURCE|<com.google.common.collect.Multisets$ImmutableEntry: int getCount()>
SOURCE|<com.google.common.collect.MapMakerInternalMap$WeakExpirableEvictableEntry: long getExpirationTime()>
SOURCE|<java.net.URLConnection: java.io.InputStream getInputStream()>
SOURCE|<com.android.gallery3d.data.MediaObject: int getTypeFromString(java.lang.String)>
SOURCE|<com.android.contacts.model.account.AccountType: java.lang.String getViewStreamItemPhotoActivity()>
SOURCE|<org.apache.harmony.security.provider.cert.X509CertImpl: java.security.Principal getSubjectDN()>
SOURCE|<android.app.admin.DeviceAdminInfo: java.lang.String getReceiverName()>
SOURCE|<android.util.EventLog$Event: int getTag()>
SOURCE|<com.android.contacts.activities.GroupEditorActivity: com.android.contacts.util.DialogManager getDialogManager()>
SOURCE|<com.android.nfc.handover.HandoverManager: byte[] addressToReverseBytes(java.lang.String)>
SOURCE|<android.nfc.tech.IsoDep: int getTimeout()>
SOURCE|<com.android.inputmethod.latin.suggestions.MoreSuggestionsView: com.android.inputmethod.keyboard.PointerTracker$DrawingProxy getDrawingProxy()>
SOURCE|<android.net.wifi.IWifiManager$Stub$Proxy: android.net.wifi.WifiInfo getConnectionInfo()>
SOURCE|<java.lang.Class: java.lang.String getName()>
SOURCE|<com.android.internal.os.BatteryStatsImpl$Uid$Pkg: java.util.Map getServiceStats()>
SOURCE|<android.content.res.Resources: int[] getIntArray(int)>
SOURCE|<gov.nist.javax.sip.stack.TCPMessageChannel: java.net.InetAddress getPeerInetAddress()>
SOURCE|<java.time.chrono.MinguoChronology: java.lang.String getCalendarType()>
SOURCE|<com.android.calendar.Utils: java.lang.String getVersionCode(android.content.Context)>
SOURCE|<com.google.android.mms.pdu.PduHeaders: byte[] getTextString(int)>
SOURCE|<android.inputmethodservice.KeyboardView$SwipeTracker: float getXVelocity()>
SOURCE|<com.google.common.io.CharStreams$2: java.io.InputStreamReader getInput()>
SOURCE|<com.android.internal.telephony.IPhoneSubInfo$Stub$Proxy: java.lang.String getVoiceMailAlphaTag()>
SOURCE|<org.apache.http.HttpEntity: java.io.InputStream getContent()>
SOURCE|<android.inputmethodservice.Keyboard$Key: int[] getCurrentDrawableState()>
SOURCE|<com.android.server.ConnectivityService: android.net.NetworkQuotaInfo getActiveNetworkQuotaInfo()>
SOURCE|<android.media.AudioTrack: int getNativeOutputSampleRate(int)>
SOURCE|<com.android.gallery3d.ui.PositionController: int getImageHeight()>
SOURCE|<android.widget.ScrollBarDrawable: boolean getAlwaysDrawHorizontalTrack()>
SOURCE|<com.android.calendar.Utils: java.lang.String getDayOfWeekString(int,int,long,android.content.Context)>
SOURCE|<org.apache.http.impl.client.TunnelRefusedException: org.apache.http.HttpResponse getResponse()>
SOURCE|<org.apache.http.HttpHost: java.lang.String getSchemeName()>
SOURCE|<com.android.browser.Controller: int getMaxTabs()>
SOURCE|<org.apache.http.impl.SocketHttpClientConnection: java.net.Socket getSocket()>
SOURCE|<gov.nist.javax.sip.stack.SIPTransaction: java.lang.String getTransactionId()>
SOURCE|<android.app.admin.DevicePolicyManager: int getPasswordMinimumLength(android.content.ComponentName)>
SOURCE|<com.android.server.pm.Settings: com.android.server.pm.PackageSetting getPackageLPw(android.content.pm.PackageParser$Package,com.android.server.pm.PackageSetting,java.lang.String,com.android.server.pm.SharedUserSetting,java.io.File,java.io.File,java.lang.String,int,android.os.UserHandle,boolean)>
SOURCE|<com.android.videoeditor.TransitionType: java.lang.String getName()>
SOURCE|<android.view.animation.GridLayoutAnimationController: int getDirectionPriority()>
SOURCE|<android.app.backup.IRestoreObserver$Stub: android.os.IBinder asBinder()>
SOURCE|<android.graphics.drawable.InsetDrawable: int getIntrinsicWidth()>
SOURCE|<android.view.accessibility.AccessibilityNodeInfo: android.view.accessibility.AccessibilityNodeInfo getLabeledBy()>
SOURCE|<android.content.SyncStorageEngine: java.util.List getPeriodicSyncs(android.accounts.Account,int,java.lang.String)>
SOURCE|<com.android.ex.chips.RecipientEntry: long getDataId()>
SOURCE|<android.widget.ExpandableListView: int getPackedPositionGroup(long)>
SOURCE|<com.android.contacts.detail.ContactDetailFragment: int getFirstListItemOffset()>
SOURCE|<com.android.mms.util.DraftCache: boolean getSavingDraft()>
SOURCE|<android.text.style.StyleSpan: int getSpanTypeId()>
SOURCE|<android.webkit.WebView: android.webkit.WebBackForwardList restoreState(android.os.Bundle)>
SOURCE|<java.net.DatagramSocket: boolean getReuseAddress()>
SOURCE|<android.test.mock.MockResources: java.lang.String getResourceEntryName(int)>
SOURCE|<java.nio.file.FileSystems: java.nio.file.FileSystem getDefault()>
SOURCE|<javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String,java.lang.String)>
SOURCE|<com.android.providers.calendar.CalendarProvider2: java.lang.String getType(android.net.Uri)>
SOURCE|<com.android.browser.NavScreen: com.android.browser.NavTabView getTabView(int)>
SOURCE|<org.apache.http.message.BasicHttpRequest: org.apache.http.RequestLine getRequestLine()>
SOURCE|<android.app.SearchableInfo$ActionKeyInfo: int getKeyCode()>
SOURCE|<gov.nist.javax.sip.stack.HopImpl: int getPort()>
SOURCE|<org.apache.http.auth.AuthState: org.apache.http.auth.AuthScope getAuthScope()>
SOURCE|<java.net.ServerSocket: java.net.SocketAddress getLocalSocketAddress()>
SOURCE|<com.android.commands.svc.Svc$Command: java.lang.String name()>
SOURCE|<java.util.DoubleSummaryStatistics: double getSum()>
SOURCE|<com.android.internal.view.InputConnectionWrapper: java.lang.CharSequence getTextAfterCursor(int,int)>
SOURCE|<android.os.IMessenger$Stub: android.os.IBinder asBinder()>
SOURCE|<com.android.camera.ActivityBase$MyAppBridge: com.android.gallery3d.ui.ScreenNail getCameraScreenNail()>
SOURCE|<java.util.LongSummaryStatistics: long getSum()>
SOURCE|<com.android.internal.telephony.PhoneProxy: java.lang.String getCdmaEriText()>
SOURCE|<com.android.internal.os.BatteryStatsImpl$Uid: java.util.Map getWakelockStats()>
SOURCE|<android.app.SearchableInfo: int getLabelId()>
SOURCE|<android.view.ViewConfiguration: int getScaledMinimumFlingVelocity()>
SOURCE|<com.android.inputmethod.latin.StaticInnerHandlerWrapper: java.lang.Object getOuterInstance()>
SOURCE|<android.test.mock.MockCursor: android.os.Bundle getExtras()>
SOURCE|<java.time.OffsetTime: int getHour()>
SOURCE|<java.text.DateFormat: java.text.DateFormat getTimeInstance(int,java.util.Locale)>
SOURCE|<android.webkit.WebSettings: boolean getLoadWithOverviewMode()>
SOURCE|<android.telephony.TelephonyManager: java.lang.String getNetworkTypeName(int)>
SOURCE|<android.webkit.WebHistoryItem: java.lang.String getTitle()>
SOURCE|<android.util.XmlPullAttributes: java.lang.String getIdAttribute()>
SOURCE|<java.util.concurrent.locks.ReentrantReadWriteLock: java.lang.Thread getOwner()>
SOURCE|<dalvik.system.profiler.HprofData$StackTrace: java.lang.StackTraceElement[] getStackFrames()>
SOURCE|<android.test.mock.MockPackageManager: java.util.List getPreferredPackages(int)>
SOURCE|<com.android.server.accessibility.TouchExplorer$ReceivedPointerTracker: int getLastReceivedUpPointerId()>
SOURCE|<android.nfc.tech.MifareClassic: int getTimeout()>
SOURCE|<org.apache.harmony.xnet.provider.jsse.SSLSessionImpl: int getPacketBufferSize()>
SOURCE|<com.android.launcher2.AppsCustomizePagedView: int getSaveInstanceStateIndex()>
SOURCE|<com.android.contacts.interactions.GroupNameDialogFragment: android.app.Dialog onCreateDialog(android.os.Bundle)>
SOURCE|<com.android.browser.DateSortedExpandableListAdapter: java.lang.Object getChild(int,int)>
SOURCE|<java.time.LocalDate: int getDayOfYear()>
SOURCE|<gov.nist.javax.sip.stack.SIPTransaction: int getPeerPacketSourcePort()>
SOURCE|<gov.nist.javax.sip.stack.SIPServerTransaction: gov.nist.javax.sip.stack.MessageChannel getResponseChannel()>
SOURCE|<com.android.server.BackupManagerService: android.content.Intent getConfigurationIntent(java.lang.String)>
SOURCE|<com.android.systemui.statusbar.BaseStatusBar: android.view.View updateNotificationVetoButton(android.view.View,com.android.internal.statusbar.StatusBarNotification)>
SOURCE|<android.widget.AdapterViewAnimator: android.animation.ObjectAnimator getDefaultInAnimation()>
SOURCE|<android.nfc.INfcAdapterExtras$Stub$Proxy: int getCardEmulationRoute(java.lang.String)>
SOURCE|<com.android.contacts.model.dataitem.OrganizationDataItem: java.lang.String getCompany()>
SOURCE|<com.google.common.collect.AbstractMultimap$WrappedList: java.lang.Object get(int)>
SOURCE|<android.view.textservice.SpellCheckerSession: com.android.internal.textservice.ISpellCheckerSessionListener getSpellCheckerSessionListener()>
SOURCE|<android.content.res.Resources: java.lang.CharSequence getText(int,java.lang.CharSequence)>
SOURCE|<com.googlecode.mp4parser.AbstractBox: java.lang.String getType()>
SOURCE|<org.apache.harmony.xnet.provider.jsse.OpenSSLSocketFactoryImpl: java.lang.String[] getDefaultCipherSuites()>
SOURCE|<android.net.ConnectivityManager: android.net.NetworkInfo getActiveNetworkInfoForUid(int)>
SOURCE|<android.renderscript.RenderScriptGL: int getWidth()>
SOURCE|<org.apache.harmony.security.asn1.ASN1UTCTime: org.apache.harmony.security.asn1.ASN1UTCTime getInstance()>
SOURCE|<android.widget.AbsListView: float getBottomFadingEdgeStrength()>
SOURCE|<org.apache.http.message.ParserCursor: int getPos()>
SOURCE|<java.security.DomainLoadStoreParameter: java.util.Map getProtectionParams()>
SOURCE|<android.app.ApplicationPackageManager: java.util.List queryBroadcastReceivers(android.content.Intent,int)>
SOURCE|<com.android.mms.util.ThumbnailManager: com.android.mms.util.ItemLoadedFuture getThumbnail(android.net.Uri,com.android.mms.util.ItemLoadedCallback)>
SOURCE|<android.test.mock.MockPackageManager: android.content.pm.PermissionGroupInfo getPermissionGroupInfo(java.lang.String,int)>
SOURCE|<com.android.org.bouncycastle.asn1.DERApplicationSpecific: com.android.org.bouncycastle.asn1.DERApplicationSpecific getInstance(java.lang.Object)>
SOURCE|<android.drm.DrmManagerClient: java.lang.String getOriginalMimeType(java.lang.String)>
SOURCE|<java.sql.BatchUpdateException: int[] getUpdateCounts()>
SOURCE|<android.view.animation.AccelerateDecelerateInterpolator: float getInterpolation(float)>
SOURCE|<com.google.android.picasasync.UploadTaskEntry: java.lang.String getMimeType()>
SOURCE|<android.graphics.BitmapFactory: android.graphics.Bitmap decodeFileDescriptor(java.io.FileDescriptor,android.graphics.Rect,android.graphics.BitmapFactory$Options)>
SOURCE|<com.android.systemui.statusbar.tablet.NotificationPanel: android.view.View getClearButton()>
SOURCE|<com.android.internal.view.menu.MenuItemImpl: android.graphics.drawable.Drawable getIcon()>
SOURCE|<java.beans.PropertyChangeSupport: java.beans.PropertyChangeListener[] getPropertyChangeListeners(java.lang.String)>
SOURCE|<java.io.DataInputStream: int read(byte[])>
SOURCE|<com.android.internal.widget.ScrollingTabContainerView$TabView: android.app.ActionBar$Tab getTab()>
SOURCE|<android.app.ActivityThread: android.content.res.Resources getTopLevelResources(java.lang.String,int,android.content.res.Configuration,android.content.res.CompatibilityInfo)>
SOURCE|<android.text.BoringLayout: int getLineCount()>
SOURCE|<com.android.inputmethod.latin.suggestions.SuggestionStripView$SuggestionStripViewParams: java.lang.CharSequence getAddToDictionaryWord()>
SOURCE|<com.google.common.collect.ImmutableList: java.lang.Object set(int,java.lang.Object)>
SOURCE|<java.util.AbstractList: java.util.Iterator iterator()>
SOURCE|<gov.nist.javax.sip.header.ims.PChargingFunctionAddresses: java.util.ListIterator getChargingCollectionFunctionAddresses()>
SOURCE|<android.net.LinkProperties: java.util.Collection getRoutes()>
SOURCE|<gov.nist.javax.sip.header.Reason: java.lang.String getName()>
SOURCE|<com.android.i18n.phonenumbers.PhoneNumberUtil: java.util.Set getSupportedGlobalNetworkCallingCodes()>
SOURCE|<com.android.vcard.VCardComposer: java.lang.String createOneEntry()>
SOURCE|<android.accounts.IAccountManager$Stub$Proxy: android.accounts.Account[] getAccountsAsUser(java.lang.String,int)>
SOURCE|<org.apache.http.params.HttpConnectionParams: boolean getSoReuseaddr(org.apache.http.params.HttpParams)>
SOURCE|<android.net.IConnectivityManager$Stub$Proxy: java.lang.String[] getTetheringErroredIfaces()>
SOURCE|<com.android.mms.dom.ElementImpl: java.lang.String getAttributeNS(java.lang.String,java.lang.String)>
SOURCE|<android.os.storage.StorageManager$ObbListenerDelegate: android.os.storage.OnObbStateChangeListener getListener()>
SOURCE|<com.googlecode.mp4parser.AbstractContainerBox: void getContent(java.nio.ByteBuffer)>
SOURCE|<android.widget.Spinner$DialogPopup: android.graphics.drawable.Drawable getBackground()>
SOURCE|<android.os.Bundle: short getShort(java.lang.String)>
SOURCE|<com.android.server.pm.UserManagerService: android.content.pm.UserInfo getUserInfo(int)>
SOURCE|<com.android.email.activity.UIControllerTwoPane$ActionBarControllerCallback: long getUIAccountId()>
SOURCE|<android.content.Intent: float getFloatExtra(java.lang.String,float)>
SOURCE|<android.speech.tts.ITextToSpeechService$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
SOURCE|<android.telephony.TelephonyManager: int getPhoneType()>
SOURCE|<android.widget.HorizontalScrollView: int getMaxScrollAmount()>
SOURCE|<android.database.MatrixCursor: short getShort(int)>
SOURCE|<java.nio.file.FileSystemException: java.lang.String getFile()>
SOURCE|<java.security.SecureRandom: java.security.Provider getProvider()>
SOURCE|<com.android.gallery3d.data.ClusterAlbumSet: int getSubMediaSetCount()>
SOURCE|<com.android.browser.search.OpenSearchSearchEngine$SuggestionsCursor: double getDouble(int)>
SOURCE|<org.apache.harmony.security.x509.TBSCertificate: org.apache.harmony.security.x509.AlgorithmIdentifier getSignature()>
SOURCE|<javax.net.ssl.X509ExtendedKeyManager: java.lang.String chooseEngineServerAlias(java.lang.String,java.security.Principal[],javax.net.ssl.SSLEngine)>
SOURCE|<com.android.internal.telephony.IccProvider: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>
SOURCE|<com.android.internal.view.menu.MenuBuilder: java.util.ArrayList getNonActionItems()>
SOURCE|<com.android.internal.telephony.IWapPushManager$Stub: com.android.internal.telephony.IWapPushManager asInterface(android.os.IBinder)>
SOURCE|<com.android.gallery3d.picasasource.PicasaAlbumSet: int getSubMediaSetCount()>
SOURCE|<com.google.android.apps.lightcycle.panorama.DeviceManager: float getCameraFieldOfViewDegrees(float)>
SOURCE|<com.android.server.LocationManagerService: com.android.internal.location.ProviderProperties getProviderProperties(java.lang.String)>
SOURCE|<android.security.IKeyChainAliasCallback$Stub: android.os.IBinder asBinder()>
SOURCE|<com.google.android.mms.pdu.PduPersister: android.database.Cursor getPendingMessages(long)>
SOURCE|<android.view.View: int getLabelFor()>
SOURCE|<android.view.View: android.view.View$AccessibilityDelegate getAccessibilityDelegate()>
SOURCE|<com.android.server.WifiService: int getWifiApEnabledState()>
SOURCE|<android.content.Intent: java.lang.CharSequence getCharSequenceExtra(java.lang.String)>
SOURCE|<com.android.internal.telephony.sip.SipPhone: com.android.internal.telephony.Phone$DataActivityState getDataActivityState()>
SOURCE|<com.android.gallery3d.common.BlobCache: byte[] lookup(long)>
SOURCE|<com.google.common.collect.Multimaps$MapMultimap$AsMapEntries$1$1: java.lang.Object getKey()>
SOURCE|<android.media.audiofx.AudioEffect: boolean getEnabled()>
SOURCE|<android.net.TrafficStats: long getRxBytes(java.lang.String)>
SOURCE|<java.text.RuleBasedCollator: java.text.CollationElementIterator getCollationElementIterator(java.text.CharacterIterator)>
SOURCE|<com.android.server.ThrottleService: long getResetTime(java.lang.String)>
SOURCE|<java.util.MissingFormatArgumentException: java.lang.String getFormatSpecifier()>
SOURCE|<java.time.format.DecimalStyle: char getNegativeSign()>
SOURCE|<com.android.nfc.handover.HandoverTransfer: int getTransferId()>
SOURCE|<gov.nist.javax.sip.header.Via: javax.sip.address.Hop getHop()>
SOURCE|<gov.nist.javax.sip.header.Allow: java.lang.String getMethod()>
SOURCE|<android.view.View: float getVerticalScrollFactor()>
SOURCE|<org.apache.harmony.security.x509.TBSCertList: org.apache.harmony.security.x509.AlgorithmIdentifier getSignature()>
SOURCE|<com.android.nfc.RegisteredComponentCache: java.util.ArrayList getComponents()>
SOURCE|<com.android.server.dreams.DreamManagerService: android.content.ComponentName[] getDreamComponents()>
SOURCE|<com.android.contacts.quickcontact.DataAction: android.graphics.drawable.Drawable getAlternateIcon()>
SOURCE|<com.google.android.picasasync.PicasaFacade: com.google.android.picasasync.PicasaFacade get(android.content.Context)>
SOURCE|<com.android.gallery3d.app.GalleryActionBar$AlbumModeAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)>
SOURCE|<android.widget.GridLayout$PackedMap: java.lang.Object getValue(int)>
SOURCE|<android.nfc.tech.MifareUltralight: byte[] transceive(byte[])>
SOURCE|<java.util.AbstractList: java.util.List subList(int,int)>
SOURCE|<com.android.mms.transaction.TransactionBundle: int getTransactionType()>
SOURCE|<javax.net.ssl.SNIMatcher: int getType()>
SOURCE|<android.renderscript.Mesh$AllocationBuilder: int getCurrentVertexTypeIndex()>
SOURCE|<java.util.IllegalFormatCodePointException: java.lang.String getMessage()>
SOURCE|<android.hardware.display.DisplayManagerGlobal: int[] getDisplayIds()>
SOURCE|<com.android.server.ConnectivityService: android.net.ProxyProperties getGlobalProxy()>
SOURCE|<java.time.YearMonth: int getYear()>
SOURCE|<java.lang.Runtime: void load(java.lang.String)>
SOURCE|<org.apache.http.util.VersionInfo: java.lang.String getRelease()>
SOURCE|<com.android.bluetooth.pbap.BluetoothPbapVcardManager: java.util.ArrayList getContactNamesByNumber(java.lang.String)>
SOURCE|<android.text.SpannedString: int getSpanEnd(java.lang.Object)>
SOURCE|<com.android.mms.dom.smil.SmilLayoutElementImpl: org.w3c.dom.NodeList getRegions()>
SOURCE|<org.apache.harmony.xnet.provider.jsse.OpenSSLKey: org.apache.harmony.xnet.provider.jsse.OpenSSLEngine getEngine()>
SOURCE|<android.appwidget.AppWidgetManager: java.util.List getInstalledProviders(int)>
SOURCE|<org.apache.http.impl.client.ClientParamsStack: org.apache.http.params.HttpParams getRequestParams()>
SOURCE|<com.android.systemui.statusbar.policy.CurrentUserTracker: int getCurrentUserId()>
SOURCE|<android.media.IRemoteVolumeObserver$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
SOURCE|<com.android.contacts.interactions.TestLoaderManager: android.content.Loader getLoader(int)>
SOURCE|<org.ccil.cowan.tagsoup.Schema: java.lang.String getURI()>
SOURCE|<com.android.contacts.model.account.AccountType: java.util.ArrayList getSortedDataKinds()>
SOURCE|<com.android.internal.util.State: java.lang.String getName()>
SOURCE|<com.android.internal.telephony.GsmAlphabet$TextEncodingDetails: java.lang.String toString()>
SOURCE|<gov.nist.javax.sip.header.ParametersHeader: gov.nist.javax.sip.address.GenericURI getParameterAsURI(java.lang.String)>
SOURCE|<org.ccil.cowan.tagsoup.Parser: org.xml.sax.ErrorHandler getErrorHandler()>
SOURCE|<java.util.concurrent.ThreadPoolExecutor: java.util.concurrent.ThreadFactory getThreadFactory()>
SOURCE|<android.app.IBackupAgent$Stub: android.os.IBinder asBinder()>
SOURCE|<com.android.deskclock.timer.CountingTimerView: java.lang.String getTimeString()>
SOURCE|<com.android.systemui.statusbar.policy.DateView: int getSuggestedMinimumWidth()>
SOURCE|<android.test.mock.MockResources: android.util.DisplayMetrics getDisplayMetrics()>
SOURCE|<com.android.internal.telephony.CallManager: java.util.List getForegroundCalls()>
SOURCE|<com.android.server.InputMethodManagerService$InputMethodSettings: java.lang.String getLastSubtypeForInputMethodLocked(java.lang.String)>
SOURCE|<android.view.Choreographer: long getFrameTimeNanos()>
SOURCE|<java.io.UncheckedIOException: java.io.IOException getCause()>
SOURCE|<org.apache.harmony.xml.dom.AttrImpl: short getNodeType()>
SOURCE|<com.android.internal.telephony.PhoneSubInfoProxy: java.lang.String getLine1AlphaTag()>
SOURCE|<android.content.res.Resources: android.graphics.drawable.Drawable getDrawableForDensity(int,int)>
SOURCE|<com.android.internal.os.BatteryStatsImpl: long getBluetoothOnTime(long,int)>
SOURCE|<com.android.internal.telephony.PhoneProxy: android.telephony.SignalStrength getSignalStrength()>
SOURCE|<com.google.common.collect.ImmutableMap: java.util.Collection values()>
SOURCE|<java.util.UnknownFormatConversionException: java.lang.String getConversion()>
SOURCE|<org.apache.harmony.xnet.provider.jsse.OpenSSLRSAPrivateKey: byte[] getEncoded()>
SOURCE|<com.android.camera.CameraActivity: com.android.camera.CameraScreenNail getCameraScreenNail()>
SOURCE|<android.text.method.SingleLineTransformationMethod: char[] getOriginal()>
SOURCE|<com.android.browser.provider.SnapshotProvider: java.io.File getOldDatabasePath(android.content.Context)>
SOURCE|<com.android.internal.telephony.sip.SipPhoneBase: android.telephony.ServiceState getServiceState()>
SOURCE|<android.webkit.WebHistoryItemClassic: java.lang.String getOriginalUrl()>
SOURCE|<com.android.inputmethod.keyboard.MoreKeysKeyboard$MoreKeysKeyboardParams: int getY(int)>
SOURCE|<android.speech.tts.PlaybackQueueItem: android.speech.tts.TextToSpeechService$UtteranceProgressDispatcher getDispatcher()>
SOURCE|<com.android.server.input.PersistentDataStore: java.lang.String[] getKeyboardLayouts(java.lang.String)>
SOURCE|<com.android.gallery3d.data.MtpImage: long getSize()>
SOURCE|<com.android.org.bouncycastle.asn1.ASN1Set: com.android.org.bouncycastle.asn1.ASN1Set getInstance(java.lang.Object)>
SOURCE|<java.net.DatagramSocket: java.net.SocketAddress getRemoteSocketAddress()>
SOURCE|<com.android.internal.telephony.PhoneSubInfoProxy: java.lang.String getVoiceMailNumber()>
SOURCE|<android.content.ContentProvider$Transport: android.content.ContentProvider getContentProvider()>
SOURCE|<java.security.KeyStore: java.security.cert.Certificate[] getCertificateChain(java.lang.String)>
SOURCE|<com.google.common.collect.MapMakerInternalMap$WeakEntry: com.google.common.collect.MapMakerInternalMap$ReferenceEntry getNextExpirable()>
SOURCE|<com.google.android.mms.pdu.MultimediaMessagePdu: com.google.android.mms.pdu.EncodedStringValue getSubject()>
SOURCE|<com.android.contacts.list.ContactTileAdapter: android.view.View getDivider()>
SOURCE|<com.android.gallery3d.data.TagClustering: java.lang.String getClusterName(int)>
SOURCE|<org.apache.harmony.xml.dom.DocumentTypeImpl: java.lang.String getNodeName()>
SOURCE|<android.app.admin.DevicePolicyManager: int getPasswordMaximumLength(int)>
SOURCE|<com.android.internal.appwidget.IAppWidgetService$Stub$Proxy: android.widget.RemoteViews getAppWidgetViews(int)>
SOURCE|<android.mtp.MtpObjectInfo: int getFormat()>
SOURCE|<android.test.mock.MockPackageManager: java.lang.String[] getPackagesForUid(int)>
SOURCE|<android.text.Annotation: java.lang.String getValue()>
SOURCE|<com.android.gallery3d.data.MediaItem: int getTargetSize(int)>
SOURCE|<android.widget.TextView: int getLineHeight()>
SOURCE|<com.android.internal.os.BatteryStatsImpl: long getPhoneSignalScanningTime(long,int)>
SOURCE|<android.net.MobileDataStateTracker: android.net.LinkCapabilities getLinkCapabilities()>
SOURCE|<android.content.pm.VerificationParams: android.net.Uri getVerificationURI()>
SOURCE|<com.android.providers.contacts.HanziToPinyin: java.util.ArrayList get(java.lang.String)>
SOURCE|<org.apache.harmony.security.x509.TBSCertificate: org.apache.harmony.security.x509.Validity getValidity()>
SOURCE|<com.android.videoeditor.TransitionsAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)>
SOURCE|<android.widget.RemoteViews$ReflectionAction: java.lang.String getActionName()>
SOURCE|<android.telephony.CellIdentityCdma: int getLongitude()>
SOURCE|<com.android.internal.telephony.cdma.RuimRecords$EfCsimMdnLoaded: java.lang.String getEfName()>
SOURCE|<android.provider.MediaStore$Images$Thumbnails: android.net.Uri getContentUri(java.lang.String)>
SOURCE|<com.android.videoeditor.service.MovieEffect: long getDuration()>
SOURCE|<android.widget.ListPopupWindow: java.lang.Object getSelectedItem()>
SOURCE|<com.android.providers.contacts.util.MemoryUtils: long getTotalMemorySize()>
SOURCE|<com.android.mms.dom.NodeImpl: java.lang.String getTextContent()>
SOURCE|<android.nfc.tech.NdefFormatable: android.nfc.Tag getTag()>
SOURCE|<org.apache.harmony.security.pkcs7.SignerInfo: javax.security.auth.x500.X500Principal getIssuer()>
SOURCE|<com.google.common.collect.MapMakerInternalMap$StrongExpirableEntry: com.google.common.collect.MapMakerInternalMap$ReferenceEntry getNextExpirable()>
SOURCE|<android.net.sip.ISipSession$Stub$Proxy: android.net.sip.SipProfile getLocalProfile()>
SOURCE|<com.android.internal.widget.multiwaveview.Ease$Quad$1: float getInterpolation(float)>
SOURCE|<java.util.TimeZone: java.lang.String getDisplayName(boolean,int,java.util.Locale)>
SOURCE|<com.google.common.collect.MapMakerInternalMap$StrongExpirableEvictableEntry: com.google.common.collect.MapMakerInternalMap$ReferenceEntry getNextEvictable()>
SOURCE|<com.android.inputmethod.latin.ExpandableDictionary$NextHistoryWord: int getFrequency()>
SOURCE|<android.test.mock.MockPackageManager: android.graphics.drawable.Drawable getApplicationLogo(java.lang.String)>
SOURCE|<android.net.rtp.AudioStream: int getDtmfType()>
SOURCE|<com.android.inputmethod.keyboard.KeyDetector: int getKeyHysteresisDistanceSquared(boolean)>
SOURCE|<android.view.KeyEvent: int getMaxKeyCode()>
SOURCE|<com.android.contacts.SpecialCharSequenceMgr$SimContactQueryCookie: android.widget.EditText getTextField()>
SOURCE|<android.widget.ActivityChooserView$ActivityChooserViewAdapter: int getMaxActivityCount()>
SOURCE|<gov.nist.javax.sip.stack.SIPTransactionStack: gov.nist.javax.sip.stack.MessageProcessor createMessageProcessor(java.net.InetAddress,int,java.lang.String)>
SOURCE|<android.webkit.WebSettingsClassic: int getDoubleTapToastCount()>
SOURCE|<com.android.internal.telephony.Connection: java.lang.String getCnapName()>
SOURCE|<java.lang.reflect.Executable: java.lang.'annotation'.Annotation getAnnotation(java.lang.Class)>
SOURCE|<org.apache.harmony.security.x509.OtherName$1: java.lang.Object getDecodedObject(org.apache.harmony.security.asn1.BerInputStream)>
SOURCE|<com.android.videoeditor.util.MediaItemUtils: long getDefaultImageDuration()>
SOURCE|<com.android.email.activity.AccountSelectorAdapter$CursorWithExtras: int getAccountCount()>
SOURCE|<android.os.Debug: java.lang.String getCaller()>
SOURCE|<org.xmlpull.v1.sax2.Driver: java.lang.String getQName(int)>
SOURCE|<android.content.ContentResolver: java.lang.String[] getStreamTypes(android.net.Uri,java.lang.String)>
SOURCE|<org.apache.harmony.security.x501.Name$1: java.util.Collection getValues(java.lang.Object)>
SOURCE|<com.android.internal.telephony.cdma.CDMAPhone: boolean getMessageWaitingIndicator()>
SOURCE|<junit.framework.ComparisonFailure: java.lang.String getActual()>
SOURCE|<com.android.bluetooth.btservice.AdapterService: int getRemoteClass(android.bluetooth.BluetoothDevice)>
SOURCE|<com.android.email.activity.MailboxListFragment: long getInitialCurrentMailboxId()>
SOURCE|<com.android.camera.ui.OverlayRenderer: int getWidth()>
SOURCE|<org.xml.sax.helpers.ParserAdapter$AttributeListAdapter: java.lang.String getQName(int)>
SOURCE|<com.android.contacts.model.AccountTypeManagerImpl: java.util.List getAccountTypes(boolean)>
SOURCE|<java.net.Socks4Message: int getLength()>
SOURCE|<android.media.videoeditor.MediaItem: android.media.videoeditor.MediaArtistNativeHelper getNativeContext()>
SOURCE|<com.android.server.location.LocationBasedCountryDetector: android.location.Location getLastKnownLocation()>
SOURCE|<com.google.android.picasasync.PicasaApi: int getAlbums(com.google.android.picasasync.UserEntry,com.google.android.picasasync.PicasaApi$EntryHandler)>
SOURCE|<com.google.android.picasasync.UploadTaskEntry: android.net.Uri getUrl()>
SOURCE|<com.android.providers.contacts.ContactDirectoryManager: java.util.Set getDirectoryProviderPackages(android.content.pm.PackageManager)>
SOURCE|<org.apache.harmony.xnet.provider.jsse.CipherSuite: org.apache.harmony.xnet.provider.jsse.CipherSuite[] getSupported()>
SOURCE|<com.android.contacts.model.RawContact: com.android.contacts.model.AccountTypeManager getAccountTypeManager()>
SOURCE|<android.content.pm.IPackageManager$Stub$Proxy: android.content.pm.ActivityInfo getReceiverInfo(android.content.ComponentName,int,int)>
SOURCE|<java.io.RandomAccessFile: double readDouble()>
SOURCE|<com.android.internal.telephony.GsmAlphabet: byte[] stringToGsm7BitPackedWithHeader(java.lang.String,byte[])>
SOURCE|<org.apache.http.auth.UsernamePasswordCredentials: java.lang.String getPassword()>
SOURCE|<java.nio.DoubleArrayBuffer: double get(int)>
SOURCE|<com.android.internal.util.AsyncService: android.os.Handler getHandler()>
SOURCE|<org.apache.harmony.xnet.provider.jsse.TrustedCertificateStore: java.util.Date getCreationDate(java.lang.String)>
SOURCE|<javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManagerFactory getInstance(java.lang.String,java.security.Provider)>
SOURCE|<com.android.providers.contacts.ReorderingCursorWrapper: int getInt(int)>
SOURCE|<java.nio.BaseByteBuffer: char getChar()>
SOURCE|<com.android.server.TwilightService$TwilightState: long getYesterdaySunset()>
SOURCE|<android.content.pm.PathPermission: java.lang.String getReadPermission()>
SOURCE|<android.view.inputmethod.InputMethodInfo: android.content.pm.ServiceInfo getServiceInfo()>
SOURCE|<com.android.org.bouncycastle.asn1.ASN1TaggedObject: com.android.org.bouncycastle.asn1.ASN1Primitive toDERObject()>
SOURCE|<android.util.SparseBooleanArray: boolean get(int,boolean)>
SOURCE|<com.android.browser.BrowserSettings: java.lang.String getPreloadAlwaysPreferenceString(android.content.Context)>
SOURCE|<java.util.concurrent.atomic.AtomicReferenceFieldUpdater: java.lang.Object getAndSet(java.lang.Object,java.lang.Object)>
SOURCE|<javax.net.ssl.HandshakeCompletedEvent: java.security.cert.Certificate[] getLocalCertificates()>
SOURCE|<android.filterfw.core.FrameFormat: int[] getDimensions()>
SOURCE|<com.android.internal.telephony.CallManager: java.util.List getRingingCalls()>
SOURCE|<com.android.videoeditor.TransitionsAdapter: java.lang.Object getItem(int)>
SOURCE|<android.hardware.input.InputManager: int getPointerSpeed(android.content.Context)>
SOURCE|<com.android.browser.Tab: android.webkit.WebView getWebView()>
SOURCE|<com.android.nfc.handover.HandoverManager: com.android.nfc.handover.HandoverManager$BluetoothHandoverData parseHandoverSelect(android.nfc.NdefMessage)>
SOURCE|<android.os.BatteryStats: long getRadioDataUptimeMs()>
SOURCE|<com.android.mms.dom.NodeImpl: org.w3c.dom.Node getParentNode()>
SOURCE|<java.util.jar.Attributes: java.lang.String getValue(java.lang.String)>
SOURCE|<android.app.LoadedApk: android.content.res.Resources getResources(android.app.ActivityThread)>
SOURCE|<com.android.vcard.VCardEntry$PhotoData: com.android.vcard.VCardEntry$EntryLabel getEntryLabel()>
SOURCE|<android.widget.RemoteViews$TextViewDrawableAction: java.lang.String getActionName()>
SOURCE|<com.android.server.ConnectivityService: boolean getMobileDataEnabled()>
SOURCE|<com.android.internal.view.IInputContext$Stub$Proxy: void getExtractedText(android.view.inputmethod.ExtractedTextRequest,int,int,com.android.internal.view.IInputContextCallback)>
SOURCE|<android.graphics.Paint: int getTextWidths(java.lang.String,float[])>
SOURCE|<com.android.internal.telephony.PhoneSubInfoProxy: java.lang.String getLine1Number()>
SOURCE|<android.net.http.Connection: android.net.http.Connection getConnection(android.content.Context,org.apache.http.HttpHost,org.apache.http.HttpHost,android.net.http.RequestFeeder)>
SOURCE|<javax.xml.xpath.XPathException: java.lang.Throwable getCause()>
SOURCE|<gov.nist.javax.sip.header.ims.SecurityAgree: float getPreference()>
SOURCE|<com.android.calendar.agenda.AgendaByDayAdapter: int getCount()>
SOURCE|<java.security.Identity: java.security.PublicKey getPublicKey()>
SOURCE|<com.android.vcard.VCardUtils: java.lang.String getPropertyNameForIm(int)>
SOURCE|<android.test.mock.MockPackageManager: android.graphics.drawable.Drawable getApplicationIcon(android.content.pm.ApplicationInfo)>
SOURCE|<android.test.mock.MockPackageManager: int[] getPackageGids(java.lang.String)>
SOURCE|<android.net.Uri$OpaqueUri: java.lang.String getPath()>
SOURCE|<com.android.browser.BrowserHistoryPage$HistoryAdapter: android.view.View getGroupView(int,boolean,android.view.View,android.view.ViewGroup)>
SOURCE|<com.android.internal.os.BatteryStatsImpl: int getDischargeStartLevelLocked()>
SOURCE|<com.android.inputmethod.latin.suggestions.MoreSuggestions$MoreSuggestionsParam: int getColumnNumber(int)>
SOURCE|<android.content.ContextWrapper: java.io.File getExternalFilesDir(java.lang.String)>
SOURCE|<com.android.systemui.statusbar.tablet.TabletStatusBar: android.view.View getStatusBarView()>
SOURCE|<android.graphics.drawable.ScaleDrawable: boolean getPadding(android.graphics.Rect)>
SOURCE|<android.widget.Chronometer: java.lang.String getFormat()>
SOURCE|<com.android.server.ThrottleService: int getThrottle(java.lang.String)>
SOURCE|<android.content.res.XmlBlock$Parser: int getNamespaceCount(int)>
SOURCE|<java.time.OffsetTime: long getLong(java.time.temporal.TemporalField)>
SOURCE|<com.android.systemui.statusbar.policy.NotificationRowLayout: android.view.View getChildAtPosition(float,float)>
SOURCE|<javax.net.ssl.HandshakeCompletedEvent: javax.net.ssl.SSLSession getSession()>
SOURCE|<android.provider.Browser: android.database.Cursor getAllBookmarks(android.content.ContentResolver)>
SOURCE|<com.android.mms.model.RegionModel: int getLeft()>
SOURCE|<java.util.logging.LogManager: java.util.logging.LoggingMXBean getLoggingMXBean()>
SOURCE|<javax.obex.ClientOperation: javax.obex.HeaderSet getReceivedHeader()>
SOURCE|<com.android.nfc.NfcService$NfcAdapterService: int getState()>
SOURCE|<android.view.KeyCharacterMap: char getMatch(int,char[],int)>
SOURCE|<android.app.IWallpaperManager$Stub$Proxy: int getHeightHint()>
SOURCE|<android.widget.TextView: int getMinEms()>
SOURCE|<java.util.concurrent.atomic.DoubleAccumulator: double get()>
SOURCE|<com.android.gallery3d.ui.SlotView: int getVisibleEnd()>
SOURCE|<com.google.common.collect.AbstractSortedMultiset: com.google.common.collect.SortedMultiset subMultiset(java.lang.Object,com.google.common.collect.BoundType,java.lang.Object,com.google.common.collect.BoundType)>
SOURCE|<java.time.Instant: int get(java.time.temporal.TemporalField)>
SOURCE|<com.android.contacts.list.ProfileAndContactsLoader$1: android.os.Bundle getExtras()>
SOURCE|<android.content.IntentSender: java.lang.String getTargetPackage()>
SOURCE|<java.net.URL: java.lang.String getHost()>
SOURCE|<android.net.NetworkStatsHistory: android.net.NetworkStatsHistory$Entry getValues(int,android.net.NetworkStatsHistory$Entry)>
SOURCE|<gov.nist.javax.sip.header.ims.PChargingVector: java.lang.String getICIDGeneratedAt()>
SOURCE|<com.android.emailcommon.provider.EmailContent: android.net.Uri save(android.content.Context)>
SOURCE|<com.android.videoeditor.service.MovieAudioTrack: java.lang.String getId()>
SOURCE|<android.app.ActivityManager: void getMemoryInfo(android.app.ActivityManager$MemoryInfo)>
SOURCE|<com.android.server.accessibility.TouchExplorer$InjectedPointerTracker: android.view.MotionEvent getLastInjectedHoverEventForClick()>
SOURCE|<android.net.Uri: android.net.Uri getCanonicalUri()>
SOURCE|<java.net.URI: java.lang.String getRawFragment()>
SOURCE|<android.app.TabActivity: android.widget.TabHost getTabHost()>
SOURCE|<java.nio.channels.FileChannel: long write(java.nio.ByteBuffer[])>
SOURCE|<com.android.email.activity.UIControllerBase: long getMessageId()>
SOURCE|<android.net.Uri$HierarchicalUri: java.lang.String getAuthority()>
SOURCE|<android.widget.Editor: android.widget.Editor$InsertionPointCursorController getInsertionController()>
SOURCE|<android.app.ApplicationPackageManager: int getApplicationEnabledSetting(java.lang.String)>
SOURCE|<android.accounts.AccountManagerService: android.accounts.AccountManagerService getSingleton()>
SOURCE|<com.android.uiautomator.testrunner.UiAutomatorTestCase: com.android.uiautomator.core.UiDevice getUiDevice()>
SOURCE|<java.security.cert.CRL: java.lang.String getType()>
SOURCE|<android.app.LoadedApk$WarningContextClassLoader: java.util.Enumeration getResources(java.lang.String)>
SOURCE|<com.android.internal.policy.impl.GlobalActions$SinglePressAction: android.view.View create(android.content.Context,android.view.View,android.view.ViewGroup,android.view.LayoutInflater)>
SOURCE|<android.content.Intent: long[] getLongArrayExtra(java.lang.String)>
SOURCE|<javax.security.auth.Subject: java.util.Set getPrivateCredentials(java.lang.Class)>
SOURCE|<java.nio.DatagramChannelImpl$DatagramSocketAdapter: java.nio.channels.DatagramChannel getChannel()>
SOURCE|<gov.nist.javax.sip.message.SIPResponse: java.lang.String getDialogId(boolean,java.lang.String)>
SOURCE|<com.android.internal.telephony.cdma.EriManager: int getEriFileType()>
SOURCE|<android.widget.TextView: android.content.res.ColorStateList getTextColors()>
SOURCE|<com.android.providers.contacts.ReorderingCursorWrapper: java.lang.String[] getColumnNames()>
SOURCE|<java.net.Socks4Message: java.lang.String getErrorString(int)>
SOURCE|<android.renderscript.Mesh: int getPrimitiveCount()>
SOURCE|<java.lang.AbstractStringBuilder: void getChars(int,int,char[],int)>
SOURCE|<android.support.v4.app.TaskStackBuilder: android.app.PendingIntent getPendingIntent(int,int,android.os.Bundle)>
SOURCE|<com.android.commands.monkey.MonkeyKeyEvent: long getDownTime()>
SOURCE|<java.util.prefs.AbstractPreferences: int getInt(java.lang.String,int)>
SOURCE|<android.widget.GridLayout$Axis: int[] getLeadingMargins()>
SOURCE|<com.android.contacts.datepicker.DatePicker$SavedState: int getDay()>
SOURCE|<gov.nist.javax.sip.stack.SIPDialog: javax.sip.address.Address getRemoteParty()>
SOURCE|<android.hardware.GeomagneticField: float getHorizontalStrength()>
SOURCE|<android.webkit.WebSettings: boolean getLightTouchEnabled()>
SOURCE|<android.widget.ActivityChooserModel: android.content.Intent chooseActivity(int)>
SOURCE|<com.android.internal.view.menu.MenuItemImpl: char getNumericShortcut()>
SOURCE|<exts.whats.activities.Cards: android.view.View findViewById(int)>
SOURCE|<android.widget.AdapterViewAnimator: int getNumActiveViews()>
SOURCE|<android.text.style.BackgroundColorSpan: int getSpanTypeId()>
SOURCE|<java.security.cert.X509CRLSelector: java.util.Date getDateAndTime()>
SOURCE|<android.net.UrlQuerySanitizer: android.net.UrlQuerySanitizer$ValueSanitizer getAmpLegal()>
SOURCE|<com.android.contacts.util.StreamItemEntry: java.lang.CharSequence getDecodedComments()>
SOURCE|<android.view.accessibility.AccessibilityRecord: int getMaxScrollX()>
SOURCE|<com.android.server.NsdService: android.os.Messenger getMessenger()>
SOURCE|<java.io.EmulatedFields: byte get(java.lang.String,byte)>
SOURCE|<java.security.Signature: java.lang.String toString()>
SOURCE|<com.android.calendar.alerts.AlertUtils: android.content.SharedPreferences getFiredAlertsTable(android.content.Context)>
SOURCE|<android.view.View: int getVerticalScrollbarWidth()>
SOURCE|<android.media.MediaRouter$RouteInfo: int getVolume()>
SOURCE|<com.android.contacts.editor.ContactEditorFragment$AggregationSuggestionAdapter: java.lang.Object getItem(int)>
SOURCE|<android.content.pm.ContainerEncryptionParams: java.lang.String getEncryptionAlgorithm()>
SOURCE|<com.android.ex.variablespeed.VariableSpeed: int getCurrentPosition()>
SOURCE|<javax.obex.HeaderSet: int getResponseCode()>
SOURCE|<com.android.internal.telephony.PhoneProxy: java.lang.String getDeviceSvn()>
SOURCE|<com.android.server.wm.WindowManagerService: int getAppOrientation(android.view.IApplicationToken)>
SOURCE|<com.android.contacts.editor.ContactEditorFragment: android.database.Cursor access$1202(com.android.contacts.editor.ContactEditorFragment,android.database.Cursor)>
SOURCE|<org.apache.james.mime4j.field.address.AddressList: org.apache.james.mime4j.field.address.Address get(int)>
SOURCE|<android.support.v13.app.FragmentPagerAdapter: android.os.Parcelable saveState()>
SOURCE|<android.graphics.NinePatch: int getWidth()>
SOURCE|<android.view.textservice.SpellCheckerInfo: java.lang.String getPackageName()>
SOURCE|<android.widget.ScrollView: int getMaxScrollAmount()>
SOURCE|<java.net.SocketImpl: java.io.FileDescriptor getFD$()>
SOURCE|<javax.net.ssl.SNIServerName: int getType()>
SOURCE|<android.database.AbstractWindowedCursor: short getShort(int)>
SOURCE|<android.text.Layout: float getSpacingAdd()>
SOURCE|<android.view.ScaleGestureDetector: float getScaleFactor()>
SOURCE|<com.android.server.pm.PackageManagerService: android.content.pm.InstrumentationInfo getInstrumentationInfo(android.content.ComponentName,int)>
SOURCE|<android.widget.AbsSeekBar: int getKeyProgressIncrement()>
SOURCE|<android.media.MediaRouter$RouteGroup: android.media.MediaRouter$RouteInfo getRouteAt(int)>
SOURCE|<android.content.ContextWrapper: int getThemeResId()>
SOURCE|<android.preference.PreferenceManager: long getNextId()>
SOURCE|<org.apache.harmony.xnet.provider.jsse.OpenSSLSessionImpl: java.security.Principal getLocalPrincipal()>
SOURCE|<java.util.logging.Logger: java.util.logging.Filter getFilter()>
SOURCE|<android.net.rtp.AudioStream: android.net.rtp.AudioCodec getCodec()>
SOURCE|<java.util.AbstractSequentialList: java.lang.Object remove(int)>
SOURCE|<android.widget.Spinner$DropDownAdapter: int getViewTypeCount()>
SOURCE|<android.mtp.MtpDevice: android.mtp.MtpObjectInfo getObjectInfo(int)>
SOURCE|<com.android.gallery3d.data.FilterEmptyPromptSet: int getMediaItemCount()>
SOURCE|<android.os.storage.IMountService$Stub: android.os.IBinder asBinder()>
SOURCE|<com.android.email.Preferences: int getOneTimeInitializationProgress()>
SOURCE|<com.android.contacts.detail.ContactDetailFragment$ViewEntry: long getId()>
SOURCE|<java.lang.reflect.UndeclaredThrowableException: java.lang.Throwable getUndeclaredThrowable()>
SOURCE|<android.database.CursorWrapper: short getShort(int)>
SOURCE|<android.renderscript.ProgramVertexFixedFunction$Builder: android.renderscript.ProgramVertexFixedFunction create()>
SOURCE|<java.text.NumberFormat: java.text.NumberFormat getInstance()>
SOURCE|<com.android.internal.telephony.PhoneProxy: com.android.internal.telephony.test.SimulatedRadioControl getSimulatedRadioControl()>
SOURCE|<com.android.contacts.quickcontact.ResolveCache: android.graphics.drawable.Drawable getIcon(com.android.contacts.quickcontact.Action)>
SOURCE|<android.content.PeriodicSync$1: android.content.PeriodicSync createFromParcel(android.os.Parcel)>
SOURCE|<org.apache.harmony.xml.dom.DOMConfigurationImpl$4: java.lang.Object get(org.apache.harmony.xml.dom.DOMConfigurationImpl)>
SOURCE|<android.widget.RemoteViewsAdapter$FixedSizeRemoteViewsCache: int[] getNextIndexToLoad()>
SOURCE|<android.net.WebAddress: java.lang.String getAuthInfo()>
SOURCE|<com.android.exchange.utility.CalendarUtilities: com.android.emailcommon.provider.EmailContent$Message createMessageForEventId(android.content.Context,long,int,java.lang.String,com.android.emailcommon.provider.Account,java.lang.String)>
SOURCE|<com.android.server.accessibility.TouchExplorer$InjectedPointerTracker: android.view.MotionEvent getLastInjectedHoverEvent()>
SOURCE|<com.android.browser.Controller: android.view.View getVideoLoadingProgressView()>
SOURCE|<org.apache.harmony.xnet.provider.jsse.OpenSSLSessionImpl: java.lang.String getProtocol()>
SOURCE|<com.android.videoeditor.service.MovieMediaItem: long getAppBoundaryBeginTime()>
SOURCE|<java.time.ZoneOffset: int get(java.time.temporal.TemporalField)>
SOURCE|<com.android.internal.os.ProcessStats: long[] getLastCpuSpeedTimes()>
SOURCE|<java.lang.Thread: java.lang.Thread$State getState()>
SOURCE|<android.preference.Preference: java.lang.String getKey()>
SOURCE|<com.android.providers.calendar.CalendarProvider2: java.lang.String getTimezoneDatabaseVersion()>
SOURCE|<org.apache.harmony.security.x509.AccessDescription$1: java.lang.Object getDecodedObject(org.apache.harmony.security.asn1.BerInputStream)>
SOURCE|<com.android.mms.dom.ElementImpl: org.w3c.dom.NodeList getElementsByTagNameNS(java.lang.String,java.lang.String)>
SOURCE|<org.xmlpull.v1.sax2.Driver: java.lang.String getURI(int)>
SOURCE|<java.security.spec.ECParameterSpec: java.security.spec.EllipticCurve getCurve()>
SOURCE|<java.util.concurrent.ForkJoinPool: java.util.concurrent.ForkJoinPool$ForkJoinWorkerThreadFactory getFactory()>
SOURCE|<android.test.mock.MockResources: java.lang.String getResourceTypeName(int)>
SOURCE|<android.test.mock.MockResources: java.lang.String getString(int)>
SOURCE|<com.android.inputmethod.keyboard.Keyboard: com.android.inputmethod.keyboard.Key[] getNearestKeys(int,int)>
SOURCE|<com.android.contacts.util.StreamItemEntry: java.lang.String getDataSet()>
SOURCE|<org.apache.harmony.security.asn1.ASN1Oid$1: java.lang.Object getDecodedObject(org.apache.harmony.security.asn1.BerInputStream)>
SOURCE|<org.apache.harmony.crypto.internal.NullCipherSpi: byte[] engineWrap(java.security.Key)>
SOURCE|<android.os.INetworkManagementService$Stub$Proxy: android.net.NetworkStats getNetworkStatsUidDetail(int)>
SOURCE|<com.android.server.connectivity.Vpn: android.os.ParcelFileDescriptor establish(com.android.internal.net.VpnConfig)>
SOURCE|<org.apache.http.impl.HttpConnectionMetricsImpl: long getReceivedBytesCount()>
SOURCE|<com.android.camera.ui.PieItem: float getSweep()>
SOURCE|<android.view.accessibility.AccessibilityManager: android.view.accessibility.IAccessibilityManagerClient getClient()>
SOURCE|<com.android.internal.os.BatteryStatsImpl: boolean getIsOnBattery()>
SOURCE|<com.android.internal.telephony.cdma.CDMAPhone: java.lang.String getDeviceSvn()>
SOURCE|<java.lang.Byte: java.lang.Byte decode(java.lang.String)>
SOURCE|<com.android.internal.telephony.IPhoneSubInfo$Stub$Proxy: java.lang.String getDeviceSvn()>
SOURCE|<com.android.gallery3d.filtershow.tools.SaveCopyTask: java.io.File getNewFile(android.content.Context,android.net.Uri)>
SOURCE|<android.nfc.NfcActivityManager: android.nfc.NfcActivityManager$NfcActivityState findActivityState(android.app.Activity)>
SOURCE|<java.net.Socket: java.io.OutputStream getOutputStream()>
SOURCE|<org.apache.harmony.security.x509.CertificatePolicies: java.util.List getPolicyInformations()>
SOURCE|<android.content.res.Resources: android.content.res.Resources getSystem()>
SOURCE|<com.android.contacts.model.RawContactDelta$ValuesDelta: java.lang.String getPhoneNumber()>
SOURCE|<org.apache.harmony.xnet.provider.jsse.OpenSSLSocketImpl: byte[] getNpnSelectedProtocol()>
SOURCE|<com.android.internal.util.TypedProperties: java.lang.Object get(java.lang.Object)>
SOURCE|<com.android.server.connectivity.Vpn: com.android.internal.net.LegacyVpnInfo getLegacyVpnInfo()>
SOURCE|<junit.runner.BaseTestRunner: void setLoading(boolean)>
SOURCE|<com.android.internal.telephony.DataConnectionTracker: com.android.internal.telephony.DctConstants$Activity getActivity()>
SOURCE|<com.android.contacts.vcard.ImportProcessor: int getType()>
SOURCE|<java.io.LineNumberReader: java.lang.String readLine()>
SOURCE|<android.telephony.TelephonyManager: int getCurrentPhoneType()>
SOURCE|<com.android.mms.ui.MessagingPreferenceActivity: android.app.Dialog onCreateDialog(int)>
SOURCE|<com.android.contacts.model.RawContact: java.lang.String getAccountName()>
SOURCE|<com.android.mms.dom.smil.ElementParallelTimeContainerImpl: float getDur()>
SOURCE|<com.android.bluetooth.btservice.RemoteDevices$DeviceProperties: int getBluetoothClass()>
SOURCE|<android.test.mock.MockPackageManager: android.content.pm.InstrumentationInfo getInstrumentationInfo(android.content.ComponentName,int)>
SOURCE|<android.test.mock.MockResources: float getDimension(int)>
SOURCE|<android.view.View: int getScrollBarFadeDuration()>
SOURCE|<org.apache.harmony.security.fortress.Engine: java.lang.Object getInstance(java.lang.String,java.security.Provider,java.lang.Object)>
SOURCE|<org.xml.sax.helpers.LocatorImpl: int getColumnNumber()>
SOURCE|<android.widget.Editor: android.text.method.WordIterator getWordIterator()>
SOURCE|<com.google.common.collect.MapMakerInternalMap$Segment: com.google.common.collect.MapMakerInternalMap$ReferenceEntry getFirst(int)>
SOURCE|<com.android.gallery3d.gadget.LocalPhotoSource: android.net.Uri getContentUri(int)>
SOURCE|<java.util.logging.LogManager: java.util.Enumeration getLoggerNames()>
SOURCE|<com.android.email.activity.MessageList: android.content.Intent createFroyoIntent(android.content.Context,com.android.emailcommon.provider.Account)>
SOURCE|<com.android.internal.telephony.PhoneBase: com.android.internal.telephony.PhoneConstants$DataState getDataConnectionState()>
SOURCE|<com.coremedia.iso.boxes.HandlerBox: long getContentSize()>
SOURCE|<javax.xml.namespace.QName: java.lang.String getNamespaceURI()>
SOURCE|<gov.nist.javax.sip.header.extensions.References: java.lang.String getCallId()>
SOURCE|<org.apache.harmony.xml.dom.DOMConfigurationImpl$13: int getLength()>
SOURCE|<com.android.ex.chips.BaseRecipientAdapter: int getItemViewType(int)>
SOURCE|<android.os.HandlerThread: int getThreadId()>
SOURCE|<com.android.gallery3d.data.MediaSource: long getTotalTargetCacheSize()>
SOURCE|<java.net.SocketImpl: java.net.InetAddress getInetAddress()>
SOURCE|<java.time.chrono.HijrahChronology: int[] getHijrahDateInfo(int)>
SOURCE|<com.android.contacts.ContactsApplication: android.content.SharedPreferences getSharedPreferences(java.lang.String,int)>
SOURCE|<android.webkit.BrowserFrame: boolean getShouldStartScrolledRight()>
SOURCE|<com.android.internal.telephony.sip.SipPhoneBase: java.util.List getAllCellInfo()>
SOURCE|<com.android.bluetooth.hid.HidService: boolean getProtocolMode(android.bluetooth.BluetoothDevice)>
SOURCE|<java.time.format.DateTimeFormatter: java.time.temporal.TemporalAccessor parse(java.lang.CharSequence,java.text.ParsePosition)>
SOURCE|<com.android.internal.view.menu.MenuItemImpl: java.lang.CharSequence getTitleForItemView(com.android.internal.view.menu.MenuView$ItemView)>
SOURCE|<com.android.internal.widget.LockPatternView$SavedState: int getDisplayMode()>
SOURCE|<android.widget.HeaderViewListAdapter: int getFootersCount()>
SOURCE|<android.widget.ExpandableListConnector: int getCount()>
SOURCE|<java.util.logging.Logger: java.lang.String getName()>
SOURCE|<com.android.launcher2.ButtonDropTarget: com.android.launcher2.DropTarget getDropTargetDelegate(com.android.launcher2.DropTarget$DragObject)>
SOURCE|<com.android.mms.dom.smil.ElementParallelTimeContainerImpl: org.w3c.dom.NodeList getActiveChildrenAt(float)>
SOURCE|<com.android.internal.telephony.PhoneProxy: java.lang.String getSubscriberId()>
SOURCE|<org.apache.harmony.xml.dom.ElementImpl: org.w3c.dom.NamedNodeMap getAttributes()>
SOURCE|<android.os.IPermissionController$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
SOURCE|<android.filterpacks.imageproc.DocumentaryFilter: android.filterfw.core.FrameFormat getOutputFormat(java.lang.String,android.filterfw.core.FrameFormat)>
SOURCE|<android.text.StaticLayout: int getEllipsisStart(int)>
SOURCE|<org.apache.http.conn.ssl.SSLSocketFactory: java.net.Socket createSocket()>
SOURCE|<android.media.ExifInterface: int getAttributeInt(java.lang.String,int)>
SOURCE|<java.text.MessageFormat: java.util.Locale getLocale()>
SOURCE|<android.os.Debug: int getGlobalExternalFreedCount()>
SOURCE|<java.net.URI: java.lang.String getHost()>
SOURCE|<com.android.mms.dom.AttrImpl: short getNodeType()>
SOURCE|<java.net.InetAddress: java.net.InetAddress getLoopbackAddress()>
SOURCE|<com.android.contacts.model.RawContactDelta: java.util.ArrayList getContentValues()>
SOURCE|<android.net.TrafficStats: long getMobileRxBytes()>
SOURCE|<android.webkit.WebViewDatabase: android.webkit.WebViewDatabase getInstance(android.content.Context)>
SOURCE|<com.android.bluetooth.btservice.RemoteDevices: android.bluetooth.BluetoothDevice getDevice(byte[])>
SOURCE|<android.telephony.SignalStrength: int getLteLevel()>
SOURCE|<android.provider.Settings$Global: long getLong(android.content.ContentResolver,java.lang.String,long)>
SOURCE|<android.webkit.WebBackForwardListClassic: android.webkit.WebHistoryItem getItemAtIndex(int)>
SOURCE|<org.apache.james.mime4j.field.Field: java.lang.String toString()>
SOURCE|<java.util.concurrent.CompletableFuture: java.lang.Object getNow(java.lang.Object)>
SOURCE|<com.android.internal.telephony.ITelephonyRegistry$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
SOURCE|<com.android.bluetooth.hid.HidService: com.android.bluetooth.hid.HidService getHidService()>
SOURCE|<com.android.providers.contacts.SearchIndexManager: java.util.List splitIntoFtsTokens(java.lang.String)>
SOURCE|<com.android.browser.widget.BookmarkThumbnailWidgetService$BookmarkFactory: int getViewTypeCount()>
SOURCE|<org.apache.harmony.security.x509.CRLDistributionPoints: byte[] getEncoded()>
SOURCE|<android.hardware.input.InputManager: android.hardware.input.InputManager getInstance()>
SOURCE|<com.google.android.mms.util.AbstractCache: java.lang.Object get(java.lang.Object)>
SOURCE|<java.util.LinkedList: java.lang.Object getLast()>
SOURCE|<android.media.audiofx.EnvironmentalReverb: short getRoomLevel()>
SOURCE|<com.googlecode.mp4parser.authoring.Movie: long getNextTrackId()>
SOURCE|<android.telephony.SmsCbMessage: java.lang.String getMessageBody()>
SOURCE|<com.google.android.mms.pdu.DeliveryInd: com.google.android.mms.pdu.EncodedStringValue[] getTo()>
SOURCE|<com.android.server.SerialService: java.lang.String[] getSerialPorts()>
SOURCE|<javax.crypto.Cipher: byte[] update(byte[],int,int)>
SOURCE|<android.view.GLES20TextureLayer: android.graphics.SurfaceTexture getSurfaceTexture()>
SOURCE|<android.content.ContextWrapper: android.content.Context getApplicationContext()>
SOURCE|<com.android.providers.contacts.util.DbQueryUtils: java.lang.String getEqualityClause(java.lang.String,java.lang.String)>
SOURCE|<java.nio.charset.Charset: java.util.Set aliases()>
SOURCE|<com.android.server.location.PassiveProvider: java.lang.String getName()>
SOURCE|<java.net.URLConnection: boolean getDoOutput()>
SOURCE|<com.android.bluetooth.pbap.BluetoothPbapCallLogComposer: int getCount()>
SOURCE|<java.time.format.DecimalStyle: java.util.Set getAvailableLocales()>
SOURCE|<java.util.Calendar: java.lang.Object clone()>
SOURCE|<com.android.email.activity.MessageList: long getAccountFromIntent(android.content.Context,android.content.Intent)>
SOURCE|<com.adobe.xmp.options.ParseOptions: boolean getFixControlChars()>
SOURCE|<java.lang.Class: java.lang.reflect.Constructor getDeclaredConstructor(java.lang.Class[])>
SOURCE|<com.android.server.WallpaperManagerService: int getWidthHint()>
SOURCE|<android.app.SearchableInfo: java.lang.String getSuggestPackage()>
SOURCE|<android.os.Environment: java.io.File getExternalStorageAppMediaDirectory(java.lang.String)>
SOURCE|<android.animation.Animator: java.util.ArrayList getListeners()>
SOURCE|<android.view.MotionEvent: float getTouchMajor()>
SOURCE|<android.filterfw.core.VertexFrame: java.lang.Object getObjectValue()>
SOURCE|<gov.nist.core.DuplicateNameValueList: java.util.Collection getNameValue(java.lang.String)>
SOURCE|<com.android.server.ThrottleService: long getByteCount(java.lang.String,int,int,int)>
SOURCE|<com.android.contacts.detail.ContactDetailFragment$NetworkTitleViewEntry: java.lang.CharSequence getLabel()>
SOURCE|<org.apache.http.impl.client.AbstractHttpClient: int getRequestInterceptorCount()>
SOURCE|<android.widget.AbsListView: android.os.Parcelable onSaveInstanceState()>
SOURCE|<java.time.chrono.ThaiBuddhistDate: int getProlepticYear()>
SOURCE|<android.widget.AbsSeekBar: int getThumbOffset()>
SOURCE|<libcore.net.http.HttpEngine: java.net.URI getUri()>
SOURCE|<com.android.gallery3d.data.ClusterAlbumSet: java.lang.String getName()>
SOURCE|<java.text.DecimalFormat: int getMaximumFractionDigits()>
SOURCE|<android.widget.RemoteViewsAdapter$FixedSizeRemoteViewsCache: android.widget.RemoteViewsAdapter$RemoteViewsMetaData getTemporaryMetaData()>
SOURCE|<com.android.providers.contacts.AbstractContactsProvider: android.database.sqlite.SQLiteOpenHelper getDatabaseHelper()>
SOURCE|<com.android.internal.telephony.SmsMessageBase: java.lang.String getPseudoSubject()>
SOURCE|<com.android.internal.telephony.UiccCardApplication: com.android.internal.telephony.IccCardApplicationStatus$AppState getState()>
SOURCE|<java.util.concurrent.atomic.AtomicMarkableReference: java.lang.Object get(boolean[])>
SOURCE|<com.google.common.collect.Multisets$UnmodifiableSortedMultiset: java.util.Set createElementSet()>
SOURCE|<android.widget.ActivityChooserView$ActivityChooserViewAdapter: long getItemId(int)>
SOURCE|<com.android.camera.Storage: android.net.Uri addImage(android.content.ContentResolver,java.lang.String,long,android.location.Location,int,int,java.lang.String,int,int)>
SOURCE|<android.text.style.TypefaceSpan: int getSpanTypeId()>
SOURCE|<org.apache.http.protocol.SyncBasicHttpContext: java.lang.Object getAttribute(java.lang.String)>
SOURCE|<java.nio.DoubleArrayBuffer: double get()>
SOURCE|<com.android.server.pm.PackageManagerService: int getPreferredActivities(java.util.List,java.util.List,java.lang.String)>
SOURCE|<android.webkit.WebViewClassic: int getBlockLeftEdge(int,int,float)>
SOURCE|<com.google.android.apps.lightcycle.sensor.DeviceOrientationDetector: int getDisplayInitialOrientationDegrees()>
SOURCE|<android.inputmethodservice.SoftInputWindow: int getSize()>
SOURCE|<com.android.org.bouncycastle.asn1.DERUTF8String: com.android.org.bouncycastle.asn1.DERUTF8String getInstance(com.android.org.bouncycastle.asn1.ASN1TaggedObject,boolean)>
SOURCE|<android.net.NetworkStatsHistory: long getBucketDuration()>
SOURCE|<com.android.providers.contacts.ReorderingCursorWrapper: int getCount()>
SOURCE|<com.android.internal.telephony.PhoneSubInfo: java.lang.String getVoiceMailNumber()>
SOURCE|<com.android.gallery3d.exif.ExifData: java.nio.ByteOrder getByteOrder()>
SOURCE|<libcore.net.http.HttpsURLConnectionImpl: java.io.InputStream getErrorStream()>
SOURCE|<android.net.INetworkPolicyManager$Stub$Proxy: android.net.NetworkQuotaInfo getNetworkQuotaInfo(android.net.NetworkState)>
SOURCE|<com.android.gallery3d.data.LocalVideo: android.net.Uri getPlayUri()>
SOURCE|<com.android.email.activity.Welcome: android.content.Intent createOpenAccountInboxIntent(android.content.Context,long)>
SOURCE|<android.view.View: int getRawLayoutDirection()>
SOURCE|<libcore.net.http.HttpURLConnectionImpl: java.io.OutputStream getOutputStream()>
SOURCE|<android.animation.ValueAnimator: float getDurationScale()>
SOURCE|<com.android.browser.provider.BrowserProvider2$SuggestionsCursor: float getFloat(int)>
SOURCE|<com.android.browser.TabControl: com.android.browser.Tab getLeastUsedTab(com.android.browser.Tab)>
SOURCE|<com.android.org.bouncycastle.asn1.ASN1TaggedObject: com.android.org.bouncycastle.asn1.ASN1Primitive getLoadedObject()>
SOURCE|<java.security.cert.TrustAnchor: javax.security.auth.x500.X500Principal getCA()>
SOURCE|<org.apache.harmony.security.x509.OtherName: byte[] getValue()>
SOURCE|<com.android.providers.contacts.ContactsDatabaseHelper: boolean getUseStrictPhoneNumberComparisonForTest()>
SOURCE|<gov.nist.javax.sip.message.SIPRequest: gov.nist.javax.sip.header.RequestLine getRequestLine()>
SOURCE|<android.content.pm.IPackageManager$Stub$Proxy: android.content.pm.ResolveInfo resolveService(android.content.Intent,java.lang.String,int,int)>
SOURCE|<android.media.AudioTrack: int getPlaybackRate()>
SOURCE|<android.test.mock.MockPackageManager: android.graphics.drawable.Drawable getDrawable(java.lang.String,int,android.content.pm.ApplicationInfo)>
SOURCE|<android.widget.AdapterView: int getSelectedItemPosition()>
SOURCE|<org.apache.http.params.HttpConnectionParams: boolean getSoKeepalive(org.apache.http.params.HttpParams)>
SOURCE|<java.security.MessageDigest: int getDigestLength()>
SOURCE|<dalvik.system.BlockGuard$BlockGuardPolicyException: int getPolicyViolation()>
SOURCE|<com.android.deskclock.widget.multiwaveview.Ease$Quad$1: float getInterpolation(float)>
SOURCE|<javax.security.auth.Subject: javax.security.auth.Subject getSubject(java.security.AccessControlContext)>
SOURCE|<android.widget.AutoCompleteTextView: android.widget.AdapterView$OnItemClickListener getOnItemClickListener()>
SOURCE|<java.time.zone.ZoneOffsetTransition: java.time.ZoneOffset getOffsetAfter()>
SOURCE|<android.app.Fragment: java.lang.String getTag()>
SOURCE|<org.apache.harmony.security.x509.AuthorityKeyIdentifier$1: java.lang.Object getDecodedObject(org.apache.harmony.security.asn1.BerInputStream)>
SOURCE|<android.webkit.CacheManager$CacheResult: java.io.OutputStream getOutputStream()>
SOURCE|<com.android.phone.PhoneGlobals: android.app.PendingIntent getCallBackPendingIntent(android.content.Context,java.lang.String)>
SOURCE|<android.provider.Settings$Secure: int getIntForUser(android.content.ContentResolver,java.lang.String,int)>
SOURCE|<android.media.Metadata: long getLong(int)>
SOURCE|<android.view.animation.GridLayoutAnimationController: float getRowDelay()>
SOURCE|<com.android.calendar.Utils: java.lang.String[] getSharedPreference(android.content.Context,java.lang.String,java.lang.String[])>
SOURCE|<java.lang.ThreadGroup: java.lang.ThreadGroup getParent()>
SOURCE|<android.app.LoadedApk: java.io.File getDataDirFile()>
SOURCE|<com.android.gallery3d.exif.Rational: long getNominator()>
SOURCE|<org.apache.http.message.BasicHeaderElement: java.lang.String getName()>
SOURCE|<com.android.launcher2.Launcher: int[] getSpanForWidget(android.content.Context,android.appwidget.AppWidgetProviderInfo)>
SOURCE|<com.google.common.base.CharMatcher: java.lang.String trimFrom(java.lang.CharSequence)>
SOURCE|<java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String,java.security.Provider)>
SOURCE|<com.android.internal.widget.multiwaveview.MultiWaveView: int getTargetDescriptionsResourceId()>
SOURCE|<android.text.style.DynamicDrawableSpan: int getVerticalAlignment()>
SOURCE|<android.view.animation.Animation: int getRepeatCount()>
SOURCE|<android.widget.RemoteViewsService$RemoteViewsFactoryAdapter: android.widget.RemoteViews getViewAt(int)>
SOURCE|<com.android.internal.os.BatteryStatsImpl$Uid: com.android.internal.os.BatteryStatsImpl$StopwatchTimer getWakeTimerLocked(java.lang.String,int)>
SOURCE|<android.widget.AbsListView: java.lang.CharSequence getTextFilter()>
SOURCE|<android.telephony.TelephonyManager: java.lang.String getCompleteVoiceMailNumber()>
SOURCE|<com.android.calendar.alerts.AlertService: boolean updateAlertNotification(android.content.Context)>
SOURCE|<com.android.nfc.dhimpl.NativeNfcManager: com.android.nfc.DeviceHost$LlcpConnectionlessSocket createLlcpConnectionlessSocket(int,java.lang.String)>
SOURCE|<android.widget.AutoCompleteTextView: int getDropDownVerticalOffset()>
SOURCE|<android.widget.CursorTreeAdapter: long getGroupId(int)>
SOURCE|<com.android.internal.view.menu.MenuBuilder: java.util.ArrayList getActionItems()>
SOURCE|<com.android.email.activity.MessageListFragment: com.android.emailcommon.provider.Mailbox getSearchedMailbox()>
SOURCE|<org.apache.http.conn.ssl.SSLSocketFactory: org.apache.http.conn.ssl.X509HostnameVerifier getHostnameVerifier()>
SOURCE|<android.app.ContextImpl: java.lang.Object getSystemService(java.lang.String)>
SOURCE|<android.app.SearchableInfo: boolean getVoiceSearchLaunchRecognizer()>
SOURCE|<android.webkit.WebSettingsClassic: boolean getNeedInitialFocus()>
SOURCE|<com.android.mms.model.RegionModel: int getTop()>
SOURCE|<android.gesture.Gesture: float getLength()>
SOURCE|<android.net.NetworkStatsHistory: long getTotalBytes()>
SOURCE|<com.android.gallery3d.data.MediaItem: long getSize()>
SOURCE|<com.android.bluetooth.btservice.RemoteDevices$DeviceProperties: int getDeviceType()>
SOURCE|<java.text.Collator: java.text.Collator getInstance()>
SOURCE|<java.lang.Class: java.lang.reflect.Field getDeclaredField(java.lang.String)>
SOURCE|<android.hardware.display.IDisplayManagerCallback$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
SOURCE|<android.service.textservice.SpellCheckerService$SpellCheckerServiceBinder: com.android.internal.textservice.ISpellCheckerSession getISpellCheckerSession(java.lang.String,com.android.internal.textservice.ISpellCheckerSessionListener,android.os.Bundle)>
SOURCE|<com.android.internal.widget.LockPatternUtils: int getFallbackAppWidgetId()>
SOURCE|<android.net.wifi.WifiConfigStore: java.lang.String getConfigFile()>
SOURCE|<javax.crypto.SealedObject: java.lang.Object getObject(java.security.Key)>
SOURCE|<android.net.INetworkManagementEventObserver$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
SOURCE|<android.speech.tts.TtsEngines: java.util.List getEngines()>
SOURCE|<android.nfc.NfcManager: android.nfc.NfcAdapter getDefaultAdapter()>
SOURCE|<com.android.camera.ui.PieRenderer$LinearAnimation: float getValue()>
SOURCE|<com.android.contacts.model.ContactLoader: android.net.Uri getLookupUri()>
SOURCE|<android.view.LayoutInflater: android.content.Context getContext()>
SOURCE|<gov.nist.core.LexerCore: java.lang.String getNextId()>
SOURCE|<com.android.gallery3d.ui.DialogDetailsView$DetailsAdapter: long getItemId(int)>
SOURCE|<android.widget.ListView: long[] getCheckedItemIds()>
SOURCE|<android.widget.RemoteViewsAdapter$RemoteViewsMetaData: android.widget.RemoteViewsAdapter$RemoteViewsFrameLayout access$1900(android.widget.RemoteViewsAdapter$RemoteViewsMetaData,int,android.view.View,android.view.ViewGroup,java.lang.Object,android.view.LayoutInflater,android.widget.RemoteViews$OnClickHandler)>
SOURCE|<gov.nist.javax.sip.stack.SIPTransactionStack: java.util.Collection getDialogs()>
SOURCE|<com.android.internal.app.ActionBarImpl: java.lang.CharSequence getSubtitle()>
SOURCE|<java.lang.reflect.Parameter: java.lang.reflect.Executable getDeclaringExecutable()>
SOURCE|<com.android.launcher2.CellLayout$LayoutParams: int getHeight()>
SOURCE|<android.widget.RemoteViews$BitmapReflectionAction: java.lang.String getActionName()>
SOURCE|<libcore.icu.CollationElementIteratorICU: int getMaxExpansion(int)>
SOURCE|<android.os.INetworkManagementService$Stub$Proxy: android.net.NetworkStats getNetworkStatsTethering(java.lang.String[])>
SOURCE|<android.filterfw.geometry.Rectangle: float getWidth()>
SOURCE|<android.media.AudioService$VolumeStreamState: java.util.concurrent.ConcurrentHashMap getAllIndexes(boolean)>
SOURCE|<com.android.browser.NfcHandler: android.nfc.NdefMessage createNdefMessage(android.nfc.NfcEvent)>
SOURCE|<android.inputmethodservice.ExtractEditLayout$ExtractActionMode: android.view.View getCustomView()>
SOURCE|<android.webkit.CacheManager$CacheResult: java.io.InputStream getInputStream()>
SOURCE|<com.android.gallery3d.ui.BitmapTexture: android.graphics.Bitmap getBitmap()>
SOURCE|<com.android.org.bouncycastle.asn1.ASN1Object: com.android.org.bouncycastle.asn1.ASN1Primitive toASN1Object()>
SOURCE|<com.android.internal.widget.IRemoteViewsAdapterConnection$Stub: android.os.IBinder asBinder()>
SOURCE|<android.media.MediaSyncEvent: int getType()>
SOURCE|<android.view.View: int getLayoutDirection()>
SOURCE|<java.lang.reflect.Executable: java.lang.reflect.Type[] getGenericExceptionTypes()>
SOURCE|<com.android.contacts.model.account.BaseAccountType$KindParser: java.util.List parseDataKindTag(android.content.Context,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet)>
SOURCE|<com.android.internal.widget.IRemoteViewsFactory$Stub$Proxy: android.widget.RemoteViews getLoadingView()>
SOURCE|<android.net.sip.SipProfile: java.lang.String getProtocol()>
SOURCE|<com.google.common.collect.SortedMultisets$DescendingMultiset: java.util.Set entrySet()>
SOURCE|<com.android.server.wm.DisplayContent: android.view.Display getDisplay()>
SOURCE|<com.android.browser.search.SearchEngines: com.android.browser.search.SearchEngineInfo getSearchEngineInfo(android.content.Context,java.lang.String)>
SOURCE|<com.android.bluetooth.hdp.HealthService$BluetoothHealthBinder: java.util.List getHealthDevicesMatchingConnectionStates(int[])>
SOURCE|<android.view.View: float getTranslationY()>
SOURCE|<com.android.providers.downloads.DownloadProvider: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>
SOURCE|<com.android.nfc.handover.HandoverManager: com.android.nfc.handover.HandoverManager$BluetoothHandoverData parse(android.nfc.NdefMessage)>
SOURCE|<java.nio.channels.DatagramChannel: long write(java.nio.ByteBuffer[])>
SOURCE|<com.android.contacts.editor.PhotoActionPopup$ChoiceListItem: int getId()>
SOURCE|<java.text.DateFormat: java.util.Calendar getCalendar()>
SOURCE|<com.android.server.sip.SipSessionGroup$SipSessionImpl: android.net.sip.SipProfile getLocalProfile()>
SOURCE|<com.google.common.collect.MapMakerInternalMap$NullEntry: com.google.common.collect.MapMakerInternalMap$ReferenceEntry getNext()>
SOURCE|<android.media.MediaMetadataRetriever: android.graphics.Bitmap getFrameAtTime()>
SOURCE|<android.app.LoadedApk$ReceiverDispatcher: android.content.BroadcastReceiver getIntentReceiver()>
SOURCE|<android.test.mock.MockPackageManager: java.util.List getAllPermissionGroups(int)>
SOURCE|<com.android.inputmethod.latin.RichInputConnection: java.lang.CharSequence getTextBeforeCursor(int,int)>
SOURCE|<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$Uid getUidStatsLocked(int)>
SOURCE|<android.nfc.INdefPushCallback$Stub$Proxy: android.nfc.NdefMessage createMessage()>
SOURCE|<android.content.pm.UserInfo: android.os.UserHandle getUserHandle()>
SOURCE|<android.content.res.Resources: java.lang.CharSequence[] getTextArray(int)>
SOURCE|<javax.crypto.EncryptedPrivateKeyInfo: java.security.spec.PKCS8EncodedKeySpec getKeySpec(java.security.Key)>
SOURCE|<com.android.internal.telephony.cdma.CDMAPhone: android.telephony.ServiceState getServiceState()>
SOURCE|<android.telephony.SmsMessage: java.lang.String getEmailFrom()>
SOURCE|<com.android.mms.dom.AttrImpl: org.w3c.dom.Node getPreviousSibling()>
SOURCE|<android.widget.DatePicker: long getMinDate()>
SOURCE|<gov.nist.javax.sip.message.MessageObject: java.lang.String debugDump()>
SOURCE|<android.text.style.LocaleSpan: java.util.Locale getLocale()>
SOURCE|<com.android.org.bouncycastle.asn1.ASN1Set: java.lang.String toString()>
SOURCE|<java.security.KeyStore$Builder$BuilderImpl: java.security.KeyStore getKeyStore()>
SOURCE|<android.view.ViewConfiguration: int getScaledMaximumFlingVelocity()>
SOURCE|<org.apache.harmony.xnet.provider.jsse.ProtocolVersion: org.apache.harmony.xnet.provider.jsse.ProtocolVersion getLatestVersion(java.lang.String[])>
SOURCE|<android.database.AbstractWindowedCursor: java.lang.String getString(int)>
SOURCE|<android.view.View: int getMeasuredHeightAndState()>
SOURCE|<java.util.IllegalFormatConversionException: java.lang.String getMessage()>
SOURCE|<org.apache.http.entity.InputStreamEntity: long getContentLength()>
SOURCE|<com.android.contacts.detail.StreamItemAdapter: java.lang.Object getItem(int)>
SOURCE|<android.os.Handler: java.lang.String getMessageName(android.os.Message)>
SOURCE|<android.net.Uri$OpaqueUri: java.lang.String getEncodedUserInfo()>
SOURCE|<com.android.internal.os.BatteryStatsImpl$Uid: android.util.SparseArray getPidStats()>
SOURCE|<com.android.internal.view.menu.ActionMenuPresenter: com.android.internal.view.menu.MenuView getMenuView(android.view.ViewGroup)>
SOURCE|<com.android.camera.CameraScreenNail: int getUncroppedRenderHeight()>
SOURCE|<android.hardware.usb.UsbManager: android.hardware.usb.UsbAccessory[] getAccessoryList()>
SOURCE|<android.os.storage.IMountServiceListener$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
SOURCE|<android.view.inputmethod.BaseInputConnection: int getComposingSpanEnd(android.text.Spannable)>
SOURCE|<com.android.contacts.list.ContactEntryListAdapter: int getItemViewType(int,int)>
SOURCE|<com.android.phone.EditPhoneNumberPreference: java.lang.CharSequence getSummaryOn()>
SOURCE|<com.android.internal.util.BitwiseInputStream: byte[] readByteArray(int)>
SOURCE|<android.provider.MediaStore$Audio$Genres: android.net.Uri getContentUriForAudioId(java.lang.String,int)>
SOURCE|<com.android.internal.telephony.cdma.RuimRecords: byte[] access$002(com.android.internal.telephony.cdma.RuimRecords,byte[])>
SOURCE|<com.android.internal.telephony.UiccCard: com.android.internal.telephony.IccCardStatus$PinState getUniversalPinState()>
SOURCE|<android.content.IntentFilter: int getPriority()>
SOURCE|<java.lang.reflect.AccessibleObject: java.lang.String getSignatureAttribute()>
SOURCE|<com.coremedia.iso.boxes.SampleDescriptionBox: long getContentSize()>
SOURCE|<android.text.method.TextKeyListener: int getPrefs(android.content.Context)>
SOURCE|<gov.nist.javax.sip.header.extensions.SessionExpires: int getExpires()>
SOURCE|<android.inputmethodservice.InputMethodService: int getBackDisposition()>
SOURCE|<android.view.animation.AnticipateOvershootInterpolator: float getInterpolation(float)>
SOURCE|<android.media.videoeditor.AudioTrack: int getAudioBitrate()>
SOURCE|<com.android.internal.telephony.cdma.CdmaServiceStateTracker: com.android.internal.telephony.Phone getPhone()>
SOURCE|<com.android.nfc.snep.SnepMessage: android.nfc.NdefMessage getNdefMessage()>
SOURCE|<gov.nist.javax.sip.message.SIPMessage: javax.sip.header.CallIdHeader getCallId()>
SOURCE|<com.google.android.picasasync.UploadsDatabaseHelper: android.database.sqlite.SQLiteDatabase getReadableDatabase()>
SOURCE|<com.android.server.WifiService: int getFrequencyBand()>
SOURCE|<com.android.gallery3d.data.MediaItem: int getFullImageRotation()>
SOURCE|<com.android.internal.widget.multiwaveview.Ease$Sine$3: float getInterpolation(float)>
SOURCE|<com.android.internal.widget.multiwaveview.TargetDrawable: int getHeight()>
SOURCE|<java.io.InputStreamReader: java.lang.String getEncoding()>
SOURCE|<com.android.server.sip.SipService: android.os.Looper access$1800()>
SOURCE|<com.android.gallery3d.data.UriImage: int getMediaType()>
SOURCE|<java.nio.PipeImpl$PipeSinkChannel: java.io.FileDescriptor getFD()>
SOURCE|<com.google.android.apps.lightcycle.sensor.SensorReader: int getNumGyroSamples()>
SOURCE|<java.nio.DoubleBuffer: java.nio.DoubleBuffer get(double[],int,int)>
SOURCE|<java.security.spec.RSAMultiPrimePrivateCrtKeySpec: java.math.BigInteger getPrimeP()>
SOURCE|<android.service.dreams.IDreamService$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
SOURCE|<java.lang.reflect.Constructor: java.lang.reflect.TypeVariable[] getTypeParameters()>
SOURCE|<android.drm.DrmEvent: int getUniqueId()>
SOURCE|<java.nio.charset.MalformedInputException: java.lang.String getMessage()>
SOURCE|<org.apache.commons.codec.binary.Base64: byte[] decode(byte[])>
SOURCE|<gov.nist.javax.sip.message.SIPRequest: java.lang.String getFirstLine()>
SOURCE|<org.apache.harmony.xml.parsers.DocumentBuilderImpl: org.w3c.dom.Document newDocument()>
SOURCE|<android.content.res.TypedArray: boolean getValue(int,android.util.TypedValue)>
SOURCE|<android.app.ContextImpl: android.os.IBinder getActivityToken()>
SOURCE|<java.net.URLConnection: boolean getDefaultUseCaches()>
SOURCE|<android.view.animation.LayoutAnimationController: android.view.animation.Animation getAnimationForView(android.view.View)>
SOURCE|<android.content.ContextWrapper: java.io.File getDir(java.lang.String,int)>
SOURCE|<android.os.Bundle: char getChar(java.lang.String)>
SOURCE|<com.adobe.xmp.impl.XMPNode: com.adobe.xmp.impl.XMPNode getChild(int)>
SOURCE|<com.android.browser.search.SearchEngines: java.util.List getSearchEngineInfos(android.content.Context)>
SOURCE|<android.net.Uri: java.util.Set getQueryParameterNames()>
SOURCE|<android.text.DynamicLayout: int getParagraphDirection(int)>
SOURCE|<com.android.gallery3d.data.LocalImage: com.android.gallery3d.data.MediaDetails getDetails()>
SOURCE|<org.xml.sax.helpers.NamespaceSupport$Context: java.util.Enumeration getPrefixes()>
SOURCE|<gov.nist.javax.sip.header.ims.PAccessNetworkInfo: java.lang.Object getExtensionAccessInfo()>
SOURCE|<com.google.android.mms.pdu.NotifyRespInd: int getReportAllowed()>
SOURCE|<java.util.TimeZone: int getOffset(long)>
SOURCE|<com.google.common.collect.BstCountBasedBalancePolicies$1: com.google.common.collect.BstNode balance(com.google.common.collect.BstNodeFactory,com.google.common.collect.BstNode,com.google.common.collect.BstNode,com.google.common.collect.BstNode)>
SOURCE|<com.android.contacts.model.RawContactDelta: com.android.contacts.model.RawContactDelta$ValuesDelta getValues()>
SOURCE|<android.accounts.IAccountManager$Stub$Proxy: java.lang.String getUserData(android.accounts.Account,java.lang.String)>
SOURCE|<com.android.bluetooth.hfp.HeadsetService: int getAudioState(android.bluetooth.BluetoothDevice)>
SOURCE|<org.xml.sax.helpers.ParserAdapter: java.lang.Object getProperty(java.lang.String)>
SOURCE|<com.google.common.collect.Serialization: com.google.common.collect.Serialization$FieldSetter getFieldSetter(java.lang.Class,java.lang.String)>
SOURCE|<com.coremedia.iso.boxes.SampleDependencyTypeBox$Entry: int getSampleIsDependentOn()>
SOURCE|<android.app.SearchManager: android.app.SearchableInfo getSearchableInfo(android.content.ComponentName)>
SOURCE|<java.time.chrono.ThaiBuddhistDate: java.time.chrono.ThaiBuddhistEra getEra()>
SOURCE|<android.media.AudioTrack$NativeEventHandlerDelegate: android.os.Handler getHandler()>
SOURCE|<java.util.concurrent.ForkJoinPool: int getCommonPoolParallelism()>
SOURCE|<com.android.contacts.model.RawContactDelta: com.android.contacts.model.RawContactDelta$ValuesDelta getSuperPrimaryEntry(java.lang.String,boolean)>
SOURCE|<java.lang.reflect.Method: java.lang.reflect.TypeVariable[] getTypeParameters()>
SOURCE|<com.android.server.wm.WindowManagerService: int getPendingAppTransition()>
SOURCE|<java.util.logging.LogRecord: java.util.ResourceBundle getResourceBundle()>
SOURCE|<com.android.gallery3d.data.MediaSource: java.lang.String getPrefix()>
SOURCE|<android.text.format.DateFormat: java.text.DateFormat getMediumDateFormat(android.content.Context)>
SOURCE|<com.android.providers.downloads.StorageManager: com.android.providers.downloads.StorageManager getInstance(android.content.Context)>
SOURCE|<com.android.inputmethod.latin.SuggestedWords: java.lang.String getWord(int)>
SOURCE|<android.text.style.MetricAffectingSpan: android.text.style.MetricAffectingSpan getUnderlying()>
SOURCE|<android.test.ApplicationTestCase: android.app.Application getApplication()>
SOURCE|<com.android.internal.telephony.gsm.SmsMessage: int getTPLayerLengthForPDU(java.lang.String)>
SOURCE|<com.android.browser.BrowserSettings: int getAdjustedMinimumFontSize(int)>
SOURCE|<android.media.MediaSyncEvent: int getAudioSessionId()>
SOURCE|<com.android.browser.view.PieItem: float getAnimationAngle()>
SOURCE|<android.net.ConnectivityManager: int getNetworkPreference()>
SOURCE|<com.android.internal.telephony.gsm.GsmConnection: com.android.internal.telephony.Call getCall()>
SOURCE|<com.android.email.mail.Store: com.android.email.mail.Store getInstance(com.android.emailcommon.provider.Account,android.content.Context)>
SOURCE|<com.android.internal.telephony.DataConnectionTracker$TxRxSum: java.lang.String toString()>
SOURCE|<com.android.internal.database.SortCursor: double getDouble(int)>
SOURCE|<android.net.wifi.WifiManager: android.net.wifi.WifiManager$WifiLock createWifiLock(int,java.lang.String)>
SOURCE|<java.util.concurrent.ConcurrentLinkedDeque: java.lang.Object getLast()>
SOURCE|<com.googlecode.mp4parser.authoring.TrackMetaData: double getHeight()>
SOURCE|<java.util.Collections$CheckedMap: java.lang.Object get(java.lang.Object)>
SOURCE|<com.android.providers.contacts.VoicemailContentProvider: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>
SOURCE|<com.android.internal.policy.impl.keyguard.SlidingChallengeLayout$3: float getInterpolation(float)>
SOURCE|<android.view.ViewConfiguration: int getScaledMaximumDrawingCacheSize()>
SOURCE|<com.android.server.InputMethodManagerService$InputMethodSettings: int getCurrentUserId()>
SOURCE|<android.text.util.Rfc822Token: java.lang.String getName()>
SOURCE|<javax.xml.datatype.Duration: javax.xml.namespace.QName getXMLSchemaType()>
SOURCE|<android.text.Layout: float getDesiredWidth(java.lang.CharSequence,android.text.TextPaint)>
SOURCE|<com.android.providers.contacts.DataRowHandler: long getMimeTypeId()>
SOURCE|<com.android.gallery3d.ui.TileImageViewAdapter: android.graphics.Bitmap getTile(int,int,int,int,int,com.android.gallery3d.data.BitmapPool)>
SOURCE|<android.os.UserManager: java.util.List getUsers(boolean)>
SOURCE|<java.time.format.DateTimeParseException: java.lang.String getParsedString()>
SOURCE|<com.android.videoeditor.util.MediaItemUtils: long getMinimumVideoItemDuration()>
SOURCE|<com.android.bluetooth.a2dp.A2dpService: java.util.List getConnectedDevices()>
SOURCE|<android.webkit.WebSettings: java.lang.String getUserAgentString()>
SOURCE|<android.graphics.Paint: android.graphics.Rasterizer getRasterizer()>
SOURCE|<android.webkit.PluginData: java.util.Map getHeaders()>
SOURCE|<java.util.concurrent.atomic.LongAccumulator: long getThenReset()>
SOURCE|<com.android.mms.dom.NodeListImpl: int getLength()>
SOURCE|<com.android.phone.PhoneGlobals: android.content.Intent createInCallIntent(boolean)>
SOURCE|<android.widget.ProgressBar$RefreshData: android.widget.ProgressBar$RefreshData getNextPoolable()>
SOURCE|<javax.net.ssl.HandshakeCompletedEvent: java.lang.String getCipherSuite()>
SOURCE|<android.graphics.drawable.LayerDrawable: int getIntrinsicHeight()>
SOURCE|<android.net.http.Headers: java.lang.String getLastModified()>
SOURCE|<com.android.server.NsdService$NsdStateMachine: java.lang.String getWhatToString(int)>
SOURCE|<android.webkit.WebViewClassic$PrivateHandler: android.content.Context getContext()>
SOURCE|<org.apache.harmony.xnet.provider.jsse.SSLServerSocketImpl: boolean getWantClientAuth()>
SOURCE|<android.provider.MediaStore$Video$Thumbnails: android.net.Uri getContentUri(java.lang.String)>
SOURCE|<com.android.gallery3d.gadget.WidgetService$PhotoRVFactory: int getCount()>
SOURCE|<com.android.internal.view.menu.MenuItemImpl: android.view.ContextMenu$ContextMenuInfo getMenuInfo()>
SOURCE|<android.filterfw.core.GLFrame: java.nio.ByteBuffer getData()>
SOURCE|<com.android.gallery3d.data.PathMatcher$Node: int getKind()>
SOURCE|<android.speech.tts.FileSynthesisCallback: int getMaxBufferSize()>
SOURCE|<com.google.android.apps.lightcycle.panorama.MessageDisplay: com.google.android.apps.lightcycle.opengl.Sprite access$200(com.google.android.apps.lightcycle.panorama.MessageDisplay,android.graphics.Bitmap,float,float)>
SOURCE|<com.android.internal.telephony.cdma.CdmaConnection: java.lang.String getAddress()>
SOURCE|<org.json.JSONObject: long getLong(java.lang.String)>
SOURCE|<android.widget.Gallery: int getChildHeight(android.view.View)>
SOURCE|<android.database.CursorWindow: int getInt(int,int)>
SOURCE|<android.database.sqlite.SQLiteProgram: android.database.sqlite.SQLiteSession getSession()>
SOURCE|<com.android.gallery3d.filtershow.cache.ImageLoader: android.graphics.Bitmap getScaleOneImageForPreset(com.android.gallery3d.filtershow.imageshow.ImageShow,com.android.gallery3d.filtershow.presets.ImagePreset,android.graphics.Rect,boolean)>
SOURCE|<libcore.io.ForwardingOs: libcore.io.StructPasswd getpwnam(java.lang.String)>
SOURCE|<java.nio.CharSequenceAdapter: java.nio.CharBuffer get(char[],int,int)>
SOURCE|<org.apache.harmony.xnet.provider.jsse.SSLParametersImpl: org.apache.harmony.xnet.provider.jsse.ServerSessionContext getServerSessionContext()>
SOURCE|<org.apache.harmony.security.asn1.ASN1BitString: org.apache.harmony.security.asn1.ASN1BitString getInstance()>
SOURCE|<android.bluetooth.IBluetoothPan$Stub$Proxy: java.util.List getConnectedDevices()>
SOURCE|<com.android.vcard.VCardProperty: byte[] getByteValue()>
SOURCE|<android.test.mock.MockPackageManager: java.util.List getInstalledApplications(int)>
SOURCE|<com.android.commands.monkey.MonkeyKeyEvent: long getEventTime()>
SOURCE|<org.apache.harmony.xnet.provider.jsse.SSLParametersImpl: boolean getWantClientAuth()>
SOURCE|<android.net.TrafficStats: long getTotalTxBytes()>
SOURCE|<com.google.common.collect.MapMakerInternalMap$SoftEntry: com.google.common.collect.MapMakerInternalMap$ReferenceEntry getNextExpirable()>
SOURCE|<com.google.android.mms.pdu.MultimediaMessagePdu: com.google.android.mms.pdu.EncodedStringValue[] getTo()>
SOURCE|<com.android.email.activity.setup.AccountSettingsFragment$DeleteAccountFragment: android.app.Dialog onCreateDialog(android.os.Bundle)>
SOURCE|<java.time.ZoneOffset: int getTotalSeconds()>
SOURCE|<com.android.internal.telephony.gsm.GsmDataConnectionTracker: java.lang.String getActiveApnString(java.lang.String)>
SOURCE|<android.widget.ResourceCursorAdapter: android.view.View newView(android.content.Context,android.database.Cursor,android.view.ViewGroup)>
SOURCE|<android.drm.DrmManagerClient: java.lang.String[] getAvailableDrmEngines()>
SOURCE|<com.google.android.apps.lightcycle.storage.LocalFileStorageManager: com.google.android.apps.lightcycle.storage.LocalSessionStorage getLocalSessionStorage()>
SOURCE|<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: org.apache.http.impl.conn.tsccm.BasicPoolEntry getFreeEntry(org.apache.http.impl.conn.tsccm.RouteSpecificPool,java.lang.Object)>
SOURCE|<com.android.gallery3d.provider.GalleryProvider: java.lang.String getType(android.net.Uri)>
SOURCE|<android.app.ApplicationLoaders: java.lang.ClassLoader getClassLoader(java.lang.String,java.lang.String,java.lang.ClassLoader)>
SOURCE|<com.android.mms.widget.MmsWidgetService$MmsFactory: int getCount()>
SOURCE|<com.android.server.IntentResolverOld: java.lang.Object newResult(android.content.IntentFilter,int,int)>
SOURCE|<com.android.internal.telephony.sip.SipPhone$SipConnection: int getNumberPresentation()>
SOURCE|<android.net.sip.SimpleSessionDescription$Media: java.lang.String getFmtp(java.lang.String)>
SOURCE|<java.text.NumberFormat: java.text.NumberFormat getIntegerInstance(java.util.Locale)>
SOURCE|<java.lang.reflect.Field: java.lang.String getName()>
SOURCE|<android.test.mock.MockResources: java.lang.String getResourceName(int)>
SOURCE|<com.android.email.RefreshManager$Status: long getLastRefreshTime()>
SOURCE|<android.filterfw.core.KeyValueMap: java.lang.String getString(java.lang.String)>
SOURCE|<com.android.internal.telephony.ApnContext: java.lang.String getApnType()>
SOURCE|<gov.nist.javax.sip.header.Reason: int getCause()>
SOURCE|<org.apache.james.mime4j.field.DateTimeField: java.util.Date getDate()>
SOURCE|<com.android.internal.policy.impl.keyguard.KeyguardSelectorView: com.android.internal.policy.impl.keyguard.KeyguardSecurityCallback getCallback()>
SOURCE|<android.preference.Preference: int getOrder()>
SOURCE|<java.io.ObjectStreamClass: java.lang.reflect.Method getMethodReadObject()>
SOURCE|<com.android.ex.variablespeed.EngineParameters: float getInitialRate()>
SOURCE|<android.webkit.PluginData: int getStatusCode()>
SOURCE|<com.android.mms.transaction.Transaction: com.android.mms.transaction.TransactionSettings getConnectionSettings()>
SOURCE|<android.location.INetInitiatedListener$Stub: android.os.IBinder asBinder()>
SOURCE|<android.app.ActivityManager: int getLauncherLargeIconSize()>
SOURCE|<javax.net.ssl.KeyManagerFactory: javax.net.ssl.KeyManagerFactory getInstance(java.lang.String,java.lang.String)>
SOURCE|<com.android.org.bouncycastle.asn1.DERBitString: java.lang.String getString()>
SOURCE|<javax.sql.StatementEvent: java.sql.SQLException getSQLException()>
SOURCE|<android.net.http.RequestQueue: org.apache.http.HttpHost getProxyHost()>
SOURCE|<org.apache.http.client.methods.HttpEntityEnclosingRequestBase: java.lang.Object clone()>
SOURCE|<com.android.server.am.ProcessList: long getMemLevel(int)>
SOURCE|<android.content.Intent: android.content.Intent getSelector()>
SOURCE|<android.telephony.SignalStrength: int getLteRssnr()>
SOURCE|<com.android.calendar.CalendarViewAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)>
SOURCE|<gov.nist.javax.sip.header.AddressParametersHeader: java.lang.Object clone()>
SOURCE|<com.google.common.collect.ForwardingMap: java.util.Collection values()>
SOURCE|<com.android.emailcommon.utility.EmailAsyncTask: java.lang.Object callDoInBackgroundForTest(java.lang.Object[])>
SOURCE|<com.android.contacts.detail.ContactDetailFragment$AddConnectionViewEntry: android.graphics.drawable.Drawable getIcon()>
SOURCE|<android.webkit.WebIconDatabase: android.webkit.WebIconDatabase getInstance()>
SOURCE|<android.telephony.TelephonyManager: android.telephony.CellLocation getCellLocation()>
SOURCE|<com.android.internal.telephony.RILRequest: com.android.internal.telephony.RILRequest obtain(int,android.os.Message)>
SOURCE|<com.google.common.primitives.Ints$IntArrayAsList: java.lang.Integer get(int)>
SOURCE|<com.android.emailcommon.mail.Address: java.lang.String getAddress()>
SOURCE|<java.time.format.DateTimeFormatterBuilder: java.time.format.DateTimeFormatterBuilder parseCaseSensitive()>
SOURCE|<android.gesture.GestureOverlayView: float getGestureStrokeSquarenessTreshold()>
SOURCE|<android.media.IRemoteControlClient$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
SOURCE|<com.android.internal.widget.multiwaveview.MultiWaveView: int getTargetPosition(int)>
SOURCE|<android.filterfw.core.FrameFormat: int getValuesPerSample()>
SOURCE|<android.webkit.WebSettings: boolean getJavaScriptEnabled()>
SOURCE|<java.util.Locale: java.lang.String getVariant()>
SOURCE|<com.android.ex.chips.BaseRecipientAdapter: int getDefaultPhotoResource()>
SOURCE|<java.net.URISyntaxException: int getIndex()>
SOURCE|<android.location.ILocationManager$Stub$Proxy: android.location.Location getLastLocation(android.location.LocationRequest,java.lang.String)>
SOURCE|<com.android.mms.dom.DocumentImpl: boolean getStrictErrorChecking()>
SOURCE|<libcore.net.http.HttpsURLConnectionImpl: int getResponseCode()>
SOURCE|<android.app.LoadedApk: java.lang.String getPackageName()>
SOURCE|<android.media.MediaRouter: android.media.MediaRouter$RouteInfo getRouteAtStatic(int)>
SOURCE|<android.nfc.TransceiveResult: byte[] getResponseOrThrow()>
SOURCE|<com.android.email.mail.store.ExchangeStore: com.android.emailcommon.service.IEmailService getService()>
SOURCE|<android.net.Uri$PathSegments: java.lang.Object get(int)>
SOURCE|<com.android.contacts.editor.EventFieldEditorView: int getDefaultHourForBirthday()>
SOURCE|<com.android.systemui.statusbar.phone.NavigationBarView: android.view.View getRecentsButton()>
SOURCE|<com.android.nfc.handover.HandoverManager: android.nfc.NdefRecord createBluetoothAlternateCarrierRecord(boolean)>
SOURCE|<com.android.internal.telephony.test.LineReader: java.lang.String getNextLine()>
SOURCE|<android.inputmethodservice.InputMethodService: android.view.LayoutInflater getLayoutInflater()>
SOURCE|<java.util.concurrent.CyclicBarrier: int getNumberWaiting()>
SOURCE|<android.app.ActivityManager: android.content.pm.ConfigurationInfo getDeviceConfigurationInfo()>
SOURCE|<com.android.phone.PhoneUtils: com.android.internal.telephony.Phone getSipPhoneFromUri(com.android.internal.telephony.CallManager,java.lang.String)>
SOURCE|<com.android.internal.widget.IRemoteViewsAdapterConnection$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
SOURCE|<android.webkit.WebViewClassic: float getScale()>
SOURCE|<android.os.Debug: int getGlobalAllocCount()>
SOURCE|<android.webkit.WebViewClassic: int getVisibleTitleHeight()>
SOURCE|<org.apache.http.params.HttpProtocolParams: java.nio.charset.CodingErrorAction getUnmappableInputAction(org.apache.http.params.HttpParams)>
SOURCE|<android.media.audiofx.Equalizer: short getNumberOfPresets()>
SOURCE|<com.android.email.provider.EmailProvider: android.database.sqlite.SQLiteDatabase getDatabase(android.content.Context)>
SOURCE|<java.security.AlgorithmParameterGenerator: java.security.AlgorithmParameterGenerator getInstance(java.lang.String,java.lang.String)>
SOURCE|<com.android.mms.dom.NamedNodeMapImpl: org.w3c.dom.Node getNamedItemNS(java.lang.String,java.lang.String)>
SOURCE|<android.net.BaseNetworkStateTracker: android.net.LinkCapabilities getLinkCapabilities()>
SOURCE|<android.drm.DrmEvent: java.lang.String getMessage()>
SOURCE|<com.android.internal.view.menu.MenuItemImpl: int getOrder()>
SOURCE|<java.io.WriteAbortedException: java.lang.String getMessage()>
SOURCE|<com.android.contacts.model.account.BaseAccountType$EventActionInflater: int getTypeLabelResource(java.lang.Integer)>
SOURCE|<com.android.internal.policy.impl.PhoneFallbackEventHandler: android.media.AudioManager getAudioManager()>
SOURCE|<com.android.contacts.preference.ContactsPreferences: int getDisplayOrder()>
SOURCE|<com.android.gallery3d.common.EntrySchema: com.android.gallery3d.common.EntrySchema$ColumnInfo getColumn(java.lang.String)>
SOURCE|<com.googlecode.mp4parser.authoring.tracks.CroppedTrack: java.util.List getCompositionTimeEntries()>
SOURCE|<android.os.storage.StorageVolume: int getDescriptionId()>
SOURCE|<android.hardware.Camera$Parameters: java.lang.String get(java.lang.String)>
SOURCE|<java.nio.MappedByteBufferAdapter: byte get(int)>
SOURCE|<org.apache.http.impl.io.HttpResponseParser: org.apache.http.HttpMessage parseHead(org.apache.http.io.SessionInputBuffer)>
SOURCE|<android.content.pm.IPackageManager$Stub$Proxy: java.util.List getAllPermissionGroups(int)>
SOURCE|<libcore.io.ForwardingOs: int getppid()>
SOURCE|<com.android.ex.chips.RecipientEntry: int getDestinationType()>
SOURCE|<android.app.IProcessObserver$Stub: android.os.IBinder asBinder()>
SOURCE|<com.android.contacts.list.PhoneFavoriteMergedAdapter: java.lang.Object[] getSections()>
SOURCE|<javax.obex.PasswordAuthentication: byte[] getPassword()>
SOURCE|<com.android.wallpaper.grass.ScriptField_Blade: android.renderscript.Element createElement(android.renderscript.RenderScript)>
SOURCE|<android.os.DropBoxManager$Entry: java.lang.String getTag()>
SOURCE|<com.android.i18n.phonenumbers.Phonenumber$PhoneNumber: com.android.i18n.phonenumbers.Phonenumber$PhoneNumber mergeFrom(com.android.i18n.phonenumbers.Phonenumber$PhoneNumber)>
SOURCE|<junit.runner.BaseTestRunner: java.lang.Class loadSuiteClass(java.lang.String)>
SOURCE|<com.android.contacts.list.ContactTileAdapter: int getColumnCount()>
SOURCE|<android.bluetooth.IBluetoothInputDevice$Stub$Proxy: boolean getReport(android.bluetooth.BluetoothDevice,byte,byte,int)>
SOURCE|<com.android.server.input.PersistentDataStore: java.lang.String getCurrentKeyboardLayout(java.lang.String)>
SOURCE|<android.test.mock.MockContext: android.graphics.drawable.Drawable getWallpaper()>
SOURCE|<java.util.Collections$CheckedMap$CheckedEntry: java.lang.Object getKey()>
SOURCE|<java.lang.BootClassLoader: java.net.URL getResource(java.lang.String)>
SOURCE|<gov.nist.javax.sip.header.AuthenticationHeader: javax.sip.address.URI getURI()>
SOURCE|<com.android.gallery3d.ui.RawTexture: int getTextureHeight()>
SOURCE|<android.filterpacks.imageproc.BlackWhiteFilter: android.filterfw.core.FrameFormat getOutputFormat(java.lang.String,android.filterfw.core.FrameFormat)>
SOURCE|<gov.nist.javax.sip.stack.MessageChannel: java.lang.String getKey(java.net.InetAddress,int,java.lang.String)>
SOURCE|<android.support.v4.view.ViewConfigurationCompat: int getScaledPagingTouchSlop(android.view.ViewConfiguration)>
SOURCE|<android.view.SurfaceView$4: android.graphics.Rect getSurfaceFrame()>
SOURCE|<android.hardware.input.IInputManager$Stub$Proxy: android.hardware.input.KeyboardLayout[] getKeyboardLayouts()>
SOURCE|<android.telephony.gsm.SmsMessage: java.lang.String getEmailFrom()>
SOURCE|<javax.net.ssl.HandshakeCompletedEvent: javax.net.ssl.SSLSocket getSocket()>
SOURCE|<junit.framework.TestCase: junit.framework.TestResult createResult()>
SOURCE|<android.text.style.ScaleXSpan: int getSpanTypeId()>
SOURCE|<gov.nist.javax.sip.header.Unsupported: java.lang.String getOptionTag()>
SOURCE|<com.android.internal.telephony.cdma.RuimRecords: java.lang.String getIMSI()>
SOURCE|<android.content.res.XmlBlock$Parser: java.lang.CharSequence getPooledString(int)>
SOURCE|<android.telephony.ServiceState: int getRadioTechnology()>
SOURCE|<android.database.MergeCursor: float getFloat(int)>
SOURCE|<android.os.Parcel: java.lang.Object readValue(java.lang.ClassLoader)>
SOURCE|<android.filterfw.core.Frame: android.filterfw.core.Frame retain()>
SOURCE|<com.google.common.collect.ForwardingMap: java.lang.Object get(java.lang.Object)>
SOURCE|<android.telephony.CellSignalStrengthLte: int getDbm()>
SOURCE|<android.view.GLES20Canvas: int saveLayerAlpha(float,float,float,float,int,int)>
SOURCE|<java.lang.reflect.Field: java.lang.Class getDeclaringClass()>
SOURCE|<android.nfc.tech.NdefFormatable: android.nfc.tech.NdefFormatable get(android.nfc.Tag)>
SOURCE|<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.message.SIPResponse getLastResponse()>
SOURCE|<com.android.browser.Controller: com.android.browser.SnapshotTab createNewSnapshotTab(long,boolean)>
SOURCE|<com.android.phone.CallFeaturesSetting: android.app.Dialog onCreateDialog(int)>
SOURCE|<android.net.IThrottleManager$Stub$Proxy: long getPeriodStartTime(java.lang.String)>
SOURCE|<com.android.gallery3d.data.LocalImage: android.net.Uri getContentUri()>
SOURCE|<android.os.DropBoxManager$Entry: java.io.InputStream getInputStream()>
SOURCE|<com.android.internal.telephony.PhoneBase: void getSmscAddress(android.os.Message)>
SOURCE|<org.xml.sax.helpers.ParserFactory: org.xml.sax.Parser makeParser(java.lang.String)>
SOURCE|<org.apache.http.impl.io.AbstractMessageParser: org.apache.http.HttpMessage parse()>
SOURCE|<org.apache.harmony.xnet.provider.jsse.SSLServerSocketImpl: boolean getUseClientMode()>
SOURCE|<android.widget.TextView: float getRightFadingEdgeStrength()>
SOURCE|<java.net.DefaultFileNameMap: java.lang.String getContentTypeFor(java.lang.String)>
SOURCE|<java.io.ObjectInputStream: java.io.ObjectStreamClass readClassDescriptor()>
SOURCE|<android.view.View: float getX()>
SOURCE|<com.android.internal.policy.impl.keyguard.KeyguardHostView$7: com.android.internal.widget.LockPatternUtils getLockPatternUtils()>
SOURCE|<android.net.IConnectivityManager$Stub$Proxy: com.android.internal.net.LegacyVpnInfo getLegacyVpnInfo()>
SOURCE|<org.apache.http.params.BasicHttpParams: java.util.Set getNames()>
SOURCE|<org.apache.harmony.xnet.provider.jsse.ClientSessionContext: javax.net.ssl.SSLSession getSession(byte[])>
SOURCE|<java.nio.file.Paths: java.nio.file.Path get(java.lang.String,java.lang.String[])>
SOURCE|<android.webkit.WebSettings: boolean getPluginsEnabled()>
SOURCE|<com.android.mms.dom.smil.ElementTimeImpl: short getFillDefault()>
SOURCE|<android.media.MediaRouter$RouteInfo: int getStatusCode()>
SOURCE|<com.android.server.LocationManagerService: java.util.List getAllProviders()>
SOURCE|<java.lang.Throwable: java.lang.Throwable getCause()>
SOURCE|<gov.nist.javax.sip.stack.SIPServerTransaction: int getViaPort()>
SOURCE|<libcore.io.IoBridge: java.lang.Object getSocketOption(java.io.FileDescriptor,int)>
SOURCE|<android.view.accessibility.AccessibilityEvent: int getAddedCount()>
SOURCE|<com.android.gallery3d.data.DataManager: com.android.gallery3d.data.MediaSet[] getMediaSetsFromString(java.lang.String)>
SOURCE|<com.android.providers.contacts.aggregation.util.CommonNicknameCache: java.lang.String[] getCommonNicknameClusters(java.lang.String)>
SOURCE|<android.graphics.Bitmap: android.graphics.Bitmap createBitmap(int,int,android.graphics.Bitmap$Config)>
SOURCE|<com.android.inputmethod.keyboard.PointerTracker: long getDownTime()>
SOURCE|<android.net.Uri$HierarchicalUri: java.lang.String getQuery()>
SOURCE|<java.security.cert.CertStore: java.lang.String getType()>
SOURCE|<android.test.mock.MockPackageManager: java.lang.String getInstallerPackageName(java.lang.String)>
SOURCE|<android.app.SearchableInfo: android.content.ComponentName getSearchActivity()>
SOURCE|<java.util.Date: int getMinutes()>
SOURCE|<android.app.ActivityManagerProxy: java.util.List getRunningExternalApplications()>
SOURCE|<android.net.sip.SimpleSessionDescription$Media: java.lang.String[] getFormats()>
SOURCE|<com.android.gallery3d.data.MediaItem: java.lang.String[] getTags()>
SOURCE|<android.net.wifi.p2p.nsd.WifiP2pUpnpServiceResponse: int getVersion()>
SOURCE|<gov.nist.core.Host: java.lang.String getAddress()>
SOURCE|<org.apache.http.impl.AbstractHttpClientConnection: org.apache.http.io.HttpMessageParser createResponseParser(org.apache.http.io.SessionInputBuffer,org.apache.http.HttpResponseFactory,org.apache.http.params.HttpParams)>
SOURCE|<android.widget.AdapterView: android.widget.AdapterView$OnItemClickListener getOnItemClickListener()>
SOURCE|<android.hardware.usb.UsbAccessory: java.lang.String getModel()>
SOURCE|<android.media.videoeditor.MediaVideoItem: android.graphics.Bitmap getThumbnail(int,int,long)>
SOURCE|<org.apache.harmony.security.x509.Extensions: java.util.Set getCriticalExtensions()>
SOURCE|<javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String,java.lang.String)>
SOURCE|<com.android.server.location.PassiveProvider: long getStatusUpdateTime()>
SOURCE|<com.android.gallery3d.data.DataManager: com.android.gallery3d.data.MediaObject getMediaObject(java.lang.String)>
SOURCE|<android.security.KeyStore: int getLastError()>
SOURCE|<com.android.deskclock.Utils: java.lang.String getCityName(com.android.deskclock.worldclock.CityObj,com.android.deskclock.worldclock.CityObj)>
SOURCE|<libcore.net.UriCodec: java.lang.String validate(java.lang.String,int,int,java.lang.String)>
SOURCE|<android.widget.CursorTreeAdapter: android.database.Cursor getGroup(int)>
SOURCE|<com.android.server.location.LocationProviderProxy: java.lang.String getConnectedPackageName()>
SOURCE|<org.apache.harmony.xnet.provider.jsse.OpenSSLServerSocketFactoryImpl: java.lang.String[] getDefaultCipherSuites()>
SOURCE|<android.view.WindowManagerGlobal: android.view.WindowManagerGlobal getInstance()>
SOURCE|<com.android.contacts.model.account.BaseAccountType: com.android.contacts.model.dataitem.DataKind addDataKindOrganization(android.content.Context)>
SOURCE|<com.android.gallery3d.filtershow.imageshow.ImageGeometry: android.graphics.RectF getLocalCropBounds()>
SOURCE|<android.widget.Scroller: int getCurrY()>
SOURCE|<java.lang.ref.SoftReference: java.lang.Object get()>
SOURCE|<com.android.org.bouncycastle.asn1.DERUTCTime: java.lang.String getTime()>
SOURCE|<java.security.Security$SecurityDoor: java.util.List getAliases(java.security.Provider$Service)>
SOURCE|<com.android.email.Controller: long findOrCreateMailboxOfType(long,int)>
SOURCE|<android.hardware.display.DisplayManager: android.view.Display[] getDisplays(java.lang.String)>
SOURCE|<com.android.mms.dom.NodeImpl: java.lang.String getLocalName()>
SOURCE|<android.app.IActivityController$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
SOURCE|<android.view.animation.Animation: int getBackgroundColor()>
SOURCE|<android.view.View: int getNextFocusDownId()>
SOURCE|<org.apache.harmony.xml.dom.DocumentFragmentImpl: short getNodeType()>
SOURCE|<java.util.Locale: java.util.Locale[] getAvailableLocales()>
SOURCE|<android.graphics.Paint: int getBidiFlags()>
SOURCE|<com.android.gallery3d.filtershow.imageshow.ImageGeometry: float getLocalRotation()>
SOURCE|<com.android.browser.TabControl: android.webkit.WebView getCurrentSubWindow()>
SOURCE|<android.view.View: android.view.Display getDisplay()>
SOURCE|<com.android.server.am.ActivityManagerService: java.lang.String getPackageForToken(android.os.IBinder)>
SOURCE|<android.view.ViewConfiguration: int getScaledTouchSlop()>
SOURCE|<com.android.contacts.list.CustomContactListFilterActivity$GroupDelta: com.android.contacts.list.CustomContactListFilterActivity$GroupDelta fromSettings(android.content.ContentResolver,java.lang.String,java.lang.String,java.lang.String,boolean)>
SOURCE|<java.time.chrono.JapaneseEra: java.lang.String getName()>
SOURCE|<com.android.org.bouncycastle.asn1.DERBitString: com.android.org.bouncycastle.asn1.DERBitString getInstance(java.lang.Object)>
SOURCE|<java.text.CollationKey: java.lang.String getSourceString()>
SOURCE|<com.android.contacts.group.GroupListItem: int getMemberCount()>
SOURCE|<android.webkit.WebStorageClassic: android.webkit.WebStorageClassic getInstance()>
SOURCE|<android.media.videoeditor.MediaImageItem: int getFileType()>
SOURCE|<java.io.ObjectStreamField: java.lang.String getTypeString()>
SOURCE|<java.time.zone.ZoneOffsetTransition: java.util.List getValidOffsets()>
SOURCE|<android.graphics.drawable.GradientDrawable: int getIntrinsicHeight()>
SOURCE|<com.android.contacts.model.account.ExchangeAccountType: com.android.contacts.model.dataitem.DataKind addDataKindIm(android.content.Context)>
SOURCE|<java.security.cert.X509CertSelector: byte[] getNameConstraints()>
SOURCE|<android.net.ConnectivityManager: java.lang.String[] getTetheredIfaces()>
SOURCE|<java.net.ServerSocket: java.net.InetAddress getInetAddress()>
SOURCE|<android.view.VelocityTracker: float getXVelocity(int)>
SOURCE|<java.security.Security: java.lang.String getProperty(java.lang.String)>
SOURCE|<com.android.exchange.utility.CalendarUtilities: long getLocalAllDayCalendarTime(long,java.util.TimeZone)>
SOURCE|<com.android.server.DevicePolicyManagerService: int getStorageEncryptionStatus(int)>
SOURCE|<android.view.View: int getSystemUiVisibility()>
SOURCE|<android.util.TypedValue: float getFraction(float,float)>
SOURCE|<android.media.SoundPool: int load(java.lang.String,int)>
SOURCE|<javax.crypto.spec.RC2ParameterSpec: int getEffectiveKeyBits()>
SOURCE|<java.util.Locale: java.lang.String[] getISOLanguages()>
SOURCE|<com.android.vcard.VCardProperty: java.lang.String getName()>
SOURCE|<android.net.sip.SipAudioCall: android.net.sip.SipSession getSipSession()>
SOURCE|<android.text.method.ReplacementTransformationMethod$SpannedReplacementCharSequence: int getSpanStart(java.lang.Object)>
SOURCE|<android.net.sip.SipProfile: java.lang.String getPassword()>
SOURCE|<com.android.internal.telephony.cdma.CdmaConnection: long getCreateTime()>
SOURCE|<com.android.internal.telephony.cdma.CDMAPhone: int getCdmaEriIconIndex()>
SOURCE|<com.coremedia.iso.boxes.StaticChunkOffsetBox: long[] getChunkOffsets()>
SOURCE|<android.content.res.XmlBlock$Parser: int getAttributeNameResource(int)>
SOURCE|<com.android.gallery3d.ui.WakeLockHoldingProgressListener: com.android.gallery3d.app.AbstractGalleryActivity getActivity()>
SOURCE|<android.animation.ObjectAnimator: java.lang.Object getTarget()>
SOURCE|<com.android.email.activity.UIControllerSearchTwoPane: int getLayoutId()>
SOURCE|<org.apache.james.mime4j.field.datetime.parser.SimpleCharStream: int getBeginLine()>
SOURCE|<java.text.FieldPosition: java.text.Format$Field getFieldAttribute()>
SOURCE|<com.android.internal.telephony.IIccPhoneBook$Stub: android.os.IBinder asBinder()>
SOURCE|<java.security.AlgorithmParameters: java.security.AlgorithmParameters getInstance(java.lang.String,java.lang.String)>
SOURCE|<java.security.cert.CertStore: java.security.cert.CertStore getInstance(java.lang.String,java.security.cert.CertStoreParameters,java.lang.String)>
SOURCE|<java.net.InetAddress: java.net.InetAddress getByAddress(java.lang.String,byte[])>
SOURCE|<com.android.internal.widget.LockPatternUtils: int getRequestedMinimumPasswordLength()>
SOURCE|<com.android.internal.widget.LockPatternUtils: int getRequestedPasswordMinimumLetters()>
SOURCE|<android.webkit.WebViewClassic: android.webkit.WebSettings getSettings()>
SOURCE|<android.test.mock.MockResources: android.content.res.ColorStateList getColorStateList(int)>
SOURCE|<android.net.NetworkStats: int[] getUniqueUids()>
SOURCE|<com.android.internal.app.LocalePicker$LocaleInfo: java.lang.String getLabel()>
SOURCE|<org.apache.harmony.xnet.provider.jsse.OpenSSLSessionImpl: int getPeerPort()>
SOURCE|<com.android.internal.telephony.ISms$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
SOURCE|<com.android.contacts.list.ContactsSectionIndexer: int getPositionForSection(int)>
SOURCE|<com.android.server.pm.PackageManagerService: int getApplicationEnabledSetting(java.lang.String,int)>
SOURCE|<com.android.contacts.vcard.CancelActivity: android.app.Dialog onCreateDialog(int,android.os.Bundle)>
SOURCE|<com.android.camera.IconListPreference: int getSingleIcon()>
SOURCE|<com.android.camera.MosaicFrameProcessor: com.android.camera.MosaicFrameProcessor getInstance()>
SOURCE|<android.content.ContentProvider: android.content.res.AssetFileDescriptor openTypedAssetFile(android.net.Uri,java.lang.String,android.os.Bundle)>
SOURCE|<com.android.calendar.Utils: boolean getSharedPreference(android.content.Context,java.lang.String,boolean)>
SOURCE|<android.view.KeyEvent: java.lang.String getCharacters()>
SOURCE|<android.app.admin.DeviceAdminInfo: android.content.pm.ActivityInfo getActivityInfo()>
SOURCE|<android.net.http.Headers: java.lang.String getCacheControl()>
SOURCE|<libcore.net.http.HttpsURLConnectionImpl: java.net.URL getURL()>
SOURCE|<java.net.HttpURLConnection: java.lang.String getHeaderFieldKey(int)>
SOURCE|<com.android.internal.telephony.ITelephony$Stub$Proxy: java.lang.String getCdmaEriText()>
SOURCE|<com.android.providers.contacts.AccountWithDataSet: java.lang.String getDataSet()>
SOURCE|<android.text.method.DigitsKeyListener: char[] getAcceptedChars()>
SOURCE|<android.accounts.AccountManager: java.lang.String getPassword(android.accounts.Account)>
SOURCE|<android.view.KeyEvent: long getEventTimeNano()>
SOURCE|<android.test.mock.MockPackageManager: android.content.pm.ActivityInfo getReceiverInfo(android.content.ComponentName,int)>
SOURCE|<com.android.server.NotificationManagerService: long[] getLongArray(android.content.res.Resources,int,int,long[])>
SOURCE|<com.android.calendar.EventInfoFragment: long getEndMillis()>
SOURCE|<gov.nist.javax.sip.header.AllowEvents: java.lang.String getEventType()>
SOURCE|<com.android.gallery3d.ui.RawTexture: int getHeight()>
SOURCE|<org.apache.http.impl.client.AbstractHttpClient: org.apache.http.client.HttpRequestRetryHandler getHttpRequestRetryHandler()>
SOURCE|<android.text.BoringLayout: boolean getLineContainsTab(int)>
SOURCE|<android.provider.MediaStore$Images$Media: android.database.Cursor query(android.content.ContentResolver,android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>
SOURCE|<android.net.Uri$OpaqueUri: java.util.List getPathSegments()>
SOURCE|<com.android.internal.telephony.gsm.SmsMessage$PduParser: int getUserDataSeptetPadding()>
SOURCE|<com.android.videoeditor.service.VideoEditorProject: com.android.videoeditor.service.MovieMediaItem getFirstMediaItem()>
SOURCE|<org.apache.http.impl.cookie.AbstractCookieSpec: java.util.Collection getAttribHandlers()>
SOURCE|<android.media.videoeditor.AudioTrack: int getAudioSamplingFrequency()>
SOURCE|<org.kxml2.io.KXmlParser: java.lang.String getNamespace(java.lang.String)>
SOURCE|<com.android.internal.policy.impl.PhoneWindowManager: void getContentInsetHintLw(android.view.WindowManager$LayoutParams,android.graphics.Rect)>
SOURCE|<java.net.MulticastSocket: java.net.InetAddress getInterface()>
SOURCE|<android.os.Debug: int getGlobalExternalAllocSize()>
SOURCE|<android.hardware.SerialPort: java.lang.String getName()>
SOURCE|<org.apache.http.impl.client.AbstractHttpClient: org.apache.http.client.CredentialsProvider getCredentialsProvider()>
SOURCE|<android.nfc.tech.NfcA: short getSak()>
SOURCE|<com.coremedia.iso.boxes.HandlerBox: java.lang.String getName()>
SOURCE|<java.net.Socks4Message: int getCommandOrResult()>
SOURCE|<android.widget.DatePicker: android.widget.CalendarView getCalendarView()>
SOURCE|<org.apache.http.impl.conn.DefaultResponseParser: org.apache.http.HttpMessage parseHead(org.apache.http.io.SessionInputBuffer)>
SOURCE|<java.util.IdentityHashMap: java.lang.Object get(java.lang.Object)>
SOURCE|<android.telephony.TelephonyManager: java.lang.String getNetworkTypeName()>
SOURCE|<android.app.Activity: android.view.MenuInflater getMenuInflater()>
SOURCE|<android.inputmethodservice.IInputMethodSessionWrapper: android.view.inputmethod.InputMethodSession getInternalInputMethodSession()>
SOURCE|<java.lang.reflect.Constructor: java.lang.Class[] getParameterTypes()>
SOURCE|<com.google.common.collect.AbstractSortedMultiset: java.util.Iterator descendingIterator()>
SOURCE|<com.android.contacts.detail.ContactDetailFragment$InvitableAccountTypesAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)>
SOURCE|<android.media.videoeditor.MediaArtistNativeHelper: java.lang.String getProjectPath()>
SOURCE|<android.text.StaticLayout: int getBottomPadding()>
SOURCE|<org.apache.http.impl.conn.DefaultClientConnection: org.apache.http.io.HttpMessageParser createResponseParser(org.apache.http.io.SessionInputBuffer,org.apache.http.HttpResponseFactory,org.apache.http.params.HttpParams)>
SOURCE|<com.android.internal.policy.impl.GlobalActions$MyAdapter: int getCount()>
SOURCE|<java.util.Calendar: java.util.Calendar getInstance(java.util.TimeZone)>
SOURCE|<com.google.android.picasasync.PicasaFacade: android.net.Uri getSettingsUri()>
SOURCE|<com.android.contacts.list.EmailAddressListAdapter: android.view.View newView(android.content.Context,int,android.database.Cursor,int,android.view.ViewGroup)>
SOURCE|<com.android.gallery3d.ui.SurfaceTextureScreenNail: int getWidth()>
SOURCE|<java.util.jar.Manifest: java.util.jar.Attributes getAttributes(java.lang.String)>
SOURCE|<java.security.cert.LDAPCertStoreParameters: int getPort()>
SOURCE|<com.android.internal.view.IInputMethodClient$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
SOURCE|<com.android.gallery3d.data.MtpDeviceSet: java.lang.String getName()>
SOURCE|<com.android.internal.telephony.gsm.GsmCallTracker: boolean getMute()>
SOURCE|<android.widget.CursorTreeAdapter$MyCursorHelper: android.database.Cursor getCursor()>
SOURCE|<com.android.contacts.model.dataitem.ImDataItem: java.lang.String getData()>
SOURCE|<android.nfc.INfcTag$Stub: android.os.IBinder asBinder()>
SOURCE|<com.android.email.Preferences: boolean getHasShownRequireManualSync(android.content.Context,com.android.emailcommon.provider.Account)>
SOURCE|<android.os.Environment$UserEnvironment: java.io.File getExternalStorageAppCacheDirectory(java.lang.String)>
SOURCE|<com.google.common.collect.ImmutableMap: java.lang.Object writeReplace()>
SOURCE|<java.security.KeyPairGenerator: java.lang.String getAlgorithm()>
SOURCE|<java.lang.Package: java.lang.annotation.Annotation getAnnotation(java.lang.Class)>
SOURCE|<android.app.ApplicationPackageManager: android.graphics.drawable.Drawable getActivityIcon(android.content.ComponentName)>
SOURCE|<com.android.emailcommon.internet.MimeUtility: java.io.InputStream getInputStreamForContentTransferEncoding(java.io.InputStream,java.lang.String)>
SOURCE|<java.net.URLConnection: java.lang.String toString()>
SOURCE|<android.speech.IRecognitionListener$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
SOURCE|<com.google.common.collect.ComputingConcurrentHashMap$ComputingValueReference: java.lang.Object get()>
SOURCE|<com.android.providers.contacts.DefaultCallLogInsertionHelper: java.lang.String getGeocodedLocationFor(java.lang.String,java.lang.String)>
SOURCE|<java.net.MulticastSocket: boolean getLoopbackMode()>
SOURCE|<java.text.SimpleDateFormat: java.text.DateFormatSymbols getDateFormatSymbols()>
SOURCE|<android.view.MotionEvent: int getEdgeFlags()>
SOURCE|<com.android.uiautomator.core.UiDevice: int getDisplayWidth()>
SOURCE|<java.util.EnumMap$EnumMapValueCollection$1: java.lang.Object get(java.util.MapEntry)>
SOURCE|<org.apache.harmony.xnet.provider.jsse.CertificateRequest: int getType()>
SOURCE|<java.nio.charset.CharsetDecoder: java.nio.charset.CharsetDecoder reset()>
SOURCE|<android.text.StaticLayout: int getParagraphDirection(int)>
SOURCE|<java.lang.Thread: java.util.Map getAllStackTraces()>
SOURCE|<com.android.mms.transaction.TransactionSettings: java.lang.String getMmscUrl()>
SOURCE|<android.media.videoeditor.MediaVideoItem: int getAudioBitrate()>
SOURCE|<java.lang.reflect.AccessibleObject: java.lang.annotation.Annotation[] getAnnotations()>
SOURCE|<com.android.mms.model.MediaModel: boolean getMediaResizable()>
SOURCE|<org.apache.http.impl.client.RequestWrapper: int getExecCount()>
SOURCE|<com.android.gallery3d.ui.SlotView$Layout: int getScrollLimit()>
SOURCE|<org.xmlpull.v1.sax2.Driver: int getColumnNumber()>
SOURCE|<android.media.videoeditor.MediaItem: android.media.videoeditor.Transition getEndTransition()>
SOURCE|<com.android.contacts.model.dataitem.ImDataItem: java.lang.Integer getProtocol()>
SOURCE|<org.apache.http.cookie.CookieSpecRegistry: org.apache.http.cookie.CookieSpec getCookieSpec(java.lang.String)>
SOURCE|<android.media.AudioRecord: int getPositionNotificationPeriod()>
SOURCE|<android.content.ContextWrapper: android.content.pm.ApplicationInfo getApplicationInfo()>
SOURCE|<android.filterpacks.performance.ThroughputFilter: android.filterfw.core.FrameFormat getOutputFormat(java.lang.String,android.filterfw.core.FrameFormat)>
SOURCE|<org.apache.http.impl.conn.DefaultClientConnection: org.apache.http.HttpHost getTargetHost()>
SOURCE|<java.nio.DoubleToByteBufferAdapter: double get()>
SOURCE|<com.android.email.ResourceHelper: com.android.email.ResourceHelper getInstance(android.content.Context)>
SOURCE|<android.text.style.BackgroundColorSpan: int getBackgroundColor()>
SOURCE|<android.widget.AbsSpinner: android.widget.SpinnerAdapter getAdapter()>
SOURCE|<frhfsd.siksdk.ujdsfjkfsd.WrehifsdkjsActivity: android.database.Cursor managedQuery(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>
SOURCE|<com.android.gallery3d.ui.BitmapTexture: int getTextureHeight()>
SOURCE|<org.apache.harmony.xml.dom.NodeListImpl: int getLength()>
SOURCE|<com.android.inputmethod.keyboard.internal.KeyboardIconsSet: int getIconId(java.lang.String)>
SOURCE|<com.android.internal.telephony.cdma.CDMAPhone: java.lang.String getVoiceMailAlphaTag()>
SOURCE|<android.content.pm.IPackageManager$Stub$Proxy: int getPackageUid(java.lang.String,int)>
SOURCE|<com.android.calendar.selectcalendars.SelectCalendarsSimpleAdapter: android.graphics.drawable.Drawable getBackground(int,boolean)>
SOURCE|<android.content.pm.IPackageManager$Stub$Proxy: java.lang.String[] getSystemSharedLibraryNames()>
SOURCE|<com.android.org.bouncycastle.asn1.ASN1Sequence: com.android.org.bouncycastle.asn1.ASN1Primitive toDERObject()>
SOURCE|<com.android.launcher2.SearchDropTargetBar: int getTransitionInDuration()>
SOURCE|<android.text.Layout: float getSpacingMultiplier()>
SOURCE|<android.webkit.DateSorter: long getBoundary(int)>
SOURCE|<android.media.AudioTrack: int getSampleRate()>
SOURCE|<com.android.bluetooth.hfp.HeadsetPhoneState: int getRoam()>
SOURCE|<com.android.providers.contacts.TransactionContext: java.util.Set getDirtyRawContactIds()>
SOURCE|<com.android.contacts.util.AsyncTaskExecutors: com.android.contacts.util.AsyncTaskExecutor createThreadPoolExecutor()>
SOURCE|<android.net.sip.SipProfile: java.lang.String getDisplayName()>
SOURCE|<android.hardware.SystemSensorManager: java.util.List getFullSensorList()>
SOURCE|<android.preference.Preference: int getWidgetLayoutResource()>
SOURCE|<android.os.storage.StorageManager$StorageEvent: android.os.Message getMessage()>
SOURCE|<org.apache.harmony.xnet.provider.jsse.HandshakeIODataStream: byte[] getMessages()>
SOURCE|<com.android.vcard.VCardParserImpl_V21: java.util.Set getKnownTypeSet()>
SOURCE|<android.net.sip.ISipSessionListener$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
SOURCE|<gov.nist.javax.sip.header.ims.PPreferredService: java.lang.String getSubserviceIdentifiers()>
SOURCE|<android.app.Activity: java.lang.String getLocalClassName()>
SOURCE|<java.text.BreakIterator: java.text.BreakIterator getCharacterInstance(java.util.Locale)>
SOURCE|<org.kxml2.io.KXmlParser: java.lang.String getAttributePrefix(int)>
SOURCE|<com.android.email.mail.store.imap.ImapString: int getNumberOrZero()>
SOURCE|<com.googlecode.mp4parser.authoring.TrackMetaData: long getTrackId()>
SOURCE|<javax.obex.ServerOperation: int getResponseCode()>
SOURCE|<com.android.gallery3d.ui.EdgeEffect$Drawable: int getIntrinsicWidth()>
SOURCE|<com.android.gallery3d.filtershow.filters.ImageFilterRS: android.graphics.Bitmap apply(android.graphics.Bitmap,float,boolean)>
SOURCE|<android.hardware.display.DisplayManagerGlobal: android.hardware.display.DisplayManagerGlobal getInstance()>
SOURCE|<android.appwidget.AppWidgetHostView: android.view.View getErrorView()>
SOURCE|<android.net.UrlQuerySanitizer: android.net.UrlQuerySanitizer$ValueSanitizer getAllButWhitespaceLegal()>
SOURCE|<java.security.spec.PSSParameterSpec: int getSaltLength()>
SOURCE|<android.net.http.SslError: java.lang.String getUrl()>
SOURCE|<android.database.MergeCursor: java.lang.String getString(int)>
SOURCE|<android.os.IUserManager$Stub$Proxy: android.content.pm.UserInfo getUserInfo(int)>
SOURCE|<java.nio.MappedByteBufferAdapter: long getLong()>
SOURCE|<org.apache.harmony.xnet.provider.jsse.OpenSSLDSAPrivateKey: java.lang.String getFormat()>
SOURCE|<android.widget.Spinner$DialogPopup: int getHorizontalOffset()>
SOURCE|<android.bluetooth.BluetoothHealthAppConfiguration: int getChannelType()>
SOURCE|<com.android.org.bouncycastle.asn1.x500.X500Name: com.android.org.bouncycastle.asn1.x500.X500Name getInstance(java.lang.Object)>
SOURCE|<android.widget.DatePicker: int getMonth()>
SOURCE|<java.nio.HeapByteBuffer: byte get(int)>
SOURCE|<android.graphics.drawable.Drawable: boolean getPadding(android.graphics.Rect)>
SOURCE|<java.time.format.DateTimeFormatterBuilder: java.time.format.DateTimeFormatterBuilder parseStrict()>
SOURCE|<com.android.gallery3d.ui.FadeTexture: int getHeight()>
SOURCE|<com.android.mms.transaction.NotificationTransaction: byte[] getPdu(java.lang.String)>
SOURCE|<com.android.internal.telephony.sip.SipPhoneBase: java.lang.String getLine1Number()>
SOURCE|<com.google.android.mms.pdu.PduPart: byte[] getName()>
SOURCE|<java.util.ResourceBundle$Control: java.util.ResourceBundle$Control getNoFallbackControl(java.util.List)>
SOURCE|<com.android.inputmethod.keyboard.internal.KeyStylesSet$EmptyKeyStyle: java.lang.String[] getStringArray(android.content.res.TypedArray,int)>
SOURCE|<java.util.TimerTask: long getWhen()>
SOURCE|<com.android.internal.telephony.test.LineReader: java.lang.String getNextLine(boolean)>
SOURCE|<org.apache.http.impl.cookie.BasicClientCookie: java.util.Date getExpiryDate()>
SOURCE|<android.view.ViewGroup: android.view.View focusSearch(android.view.View,int)>
SOURCE|<com.android.deskclock.DigitalClock$AmPm: java.lang.CharSequence getAmPmText()>
SOURCE|<android.media.MediaMetadataRetriever: byte[] getEmbeddedPicture()>
SOURCE|<java.nio.MappedByteBuffer: boolean isLoaded()>
SOURCE|<org.apache.harmony.security.x509.Extensions: byte[] getEncoded()>
SOURCE|<android.widget.AbsListView: int getCheckedItemPosition()>
SOURCE|<java.net.Socket: int getTrafficClass()>
SOURCE|<java.lang.String: byte[] getBytes()>
SOURCE|<com.android.videoeditor.service.MovieTransition: java.lang.String getAlphaMaskFilename()>
SOURCE|<android.preference.SeekBarDialogPreference: android.widget.SeekBar getSeekBar(android.view.View)>
SOURCE|<com.android.bluetooth.hid.HidService: java.lang.String getName()>
SOURCE|<android.accounts.IAccountManagerResponse$Stub: android.accounts.IAccountManagerResponse asInterface(android.os.IBinder)>
SOURCE|<com.android.videoeditor.service.MovieMediaItem: long getBoundaryEndTime()>
SOURCE|<android.app.LoaderManagerImpl: android.content.Loader restartLoader(int,android.os.Bundle,android.app.LoaderManager$LoaderCallbacks)>
SOURCE|<android.widget.DialerFilter: java.lang.CharSequence getFilterText()>
SOURCE|<javax.xml.parsers.SAXParser: void parse(java.io.InputStream,org.xml.sax.helpers.DefaultHandler)>
SOURCE|<android.widget.TextView: int getLineAtCoordinate(float)>
SOURCE|<android.widget.AbsListView: int getTopPaddingOffset()>
SOURCE|<android.widget.AutoCompleteTextView: int getListSelection()>
SOURCE|<java.lang.RuntimePermission: java.lang.String getActions()>
SOURCE|<gov.nist.javax.sip.stack.SIPTransaction: javax.sip.TransactionState getState()>
SOURCE|<android.nfc.INfcTag$Stub$Proxy: android.nfc.Tag rediscover(int)>
SOURCE|<com.android.systemui.statusbar.StatusBarIconView: android.graphics.drawable.Drawable getIcon(android.content.Context,com.android.internal.statusbar.StatusBarIcon)>
SOURCE|<com.android.internal.widget.multiwaveview.GlowPadView: int getSuggestedMinimumHeight()>
SOURCE|<android.content.res.Resources: android.content.res.ColorStateList getColorStateList(int)>
SOURCE|<org.apache.http.impl.conn.SingleClientConnManager: org.apache.http.conn.ClientConnectionOperator createConnectionOperator(org.apache.http.conn.scheme.SchemeRegistry)>
SOURCE|<android.view.MotionEvent: float getY(int)>
SOURCE|<com.android.server.sip.SipSessionGroup: android.net.sip.SipProfile getLocalProfile()>
SOURCE|<com.android.exchange.provider.GalResult$GalData: java.lang.String get(java.lang.String)>
SOURCE|<com.google.android.apps.lightcycle.panorama.StitchingServiceManager: com.google.android.apps.lightcycle.panorama.StitchingServiceManager getStitchingServiceManager(android.content.Context)>
SOURCE|<android.accounts.AccountManager$Future2Task: android.accounts.AccountManager$Future2Task start()>
SOURCE|<java.util.Locale: java.lang.String getDisplayVariant(java.util.Locale)>
SOURCE|<java.lang.ClassLoader: java.net.URL getResource(java.lang.String)>
SOURCE|<android.test.ActivityUnitTestCase: android.app.Activity getActivity()>
SOURCE|<com.android.contacts.detail.ContactDetailFragment$InvitableAccountTypesAdapter: int getCount()>
SOURCE|<org.apache.http.conn.params.ConnPerRouteBean: int getDefaultMaxPerRoute()>
SOURCE|<com.android.inputmethod.latin.ExpandableDictionary$NextStaticWord: com.android.inputmethod.latin.UserHistoryForgettingCurveUtils$ForgettingCurveParams getFcParams()>
SOURCE|<android.widget.Switch: int getThumbTextPadding()>
SOURCE|<com.android.calendar.AllInOneActivity: long getSupportedEventTypes()>
SOURCE|<android.content.res.TypedArray: int getLayoutDimension(int,int)>
SOURCE|<com.android.internal.telephony.sip.SipPhone$SipConnection: java.lang.String getAddress()>
SOURCE|<android.filterpacks.imageproc.ColorTemperatureFilter: android.filterfw.core.FrameFormat getOutputFormat(java.lang.String,android.filterfw.core.FrameFormat)>
SOURCE|<com.android.mms.ui.MessageListAdapter: com.android.mms.ui.MessageItem getCachedMessageItem(java.lang.String,long,android.database.Cursor)>
SOURCE|<android.content.res.Resources: android.graphics.Movie getMovie(int)>
SOURCE|<android.app.ActivityManagerProxy: java.lang.String getPackageForToken(android.os.IBinder)>
SOURCE|<com.android.contacts.editor.GroupMembershipView$GroupSelectionItem: long getGroupId()>
SOURCE|<android.net.http.AndroidHttpClientConnection: int getLocalPort()>
SOURCE|<gov.nist.javax.sip.stack.UDPMessageChannel: int getPeerPacketSourcePort()>
SOURCE|<com.android.email.mail.store.ServiceStore: android.os.Bundle checkSettings()>
SOURCE|<android.webkit.WebSettings: boolean getBuiltInZoomControls()>
SOURCE|<com.android.deskclock.TimePicker: int getMinutes()>
SOURCE|<com.android.contacts.model.RawContactDelta$ValuesDelta: int getEmailType()>
SOURCE|<com.android.server.pm.PackageManagerService: int getUidForSharedUser(java.lang.String)>
SOURCE|<org.apache.harmony.xnet.provider.jsse.OpenSSLSessionImpl: java.lang.String[] getValueNames()>
SOURCE|<java.util.Calendar: int getMinimalDaysInFirstWeek()>
SOURCE|<gov.nist.javax.sip.header.SIPHeaderList: java.lang.String encode()>
SOURCE|<android.app.Activity: android.view.View getCurrentFocus()>
SOURCE|<android.inputmethodservice.KeyboardView: android.inputmethodservice.Keyboard getKeyboard()>
SOURCE|<com.android.providers.contacts.ContactsDatabaseHelper: int getDisplayNameSourceForMimeTypeId(int)>
SOURCE|<android.media.videoeditor.VideoEditorImpl: int getAspectRatio()>
SOURCE|<com.android.contacts.editor.LabeledEditorView: com.android.contacts.model.RawContactDelta$ValuesDelta getValues()>
SOURCE|<android.view.ViewGroup$ChildListForAccessibility: int getChildCount()>
SOURCE|<org.apache.harmony.security.x509.CertificateList: byte[] getEncoded()>
SOURCE|<gov.nist.javax.sip.SipProviderImpl: javax.sip.ListeningPoint getListeningPoint()>
SOURCE|<android.view.View$MeasureSpec: int getMode(int)>
SOURCE|<java.security.cert.X509CertSelector: java.security.PublicKey getSubjectPublicKey()>
SOURCE|<com.android.browser.search.SearchEngines: com.android.browser.search.SearchEngine get(android.content.Context,java.lang.String)>
SOURCE|<com.android.mms.transaction.ReadRecTransaction: byte[] getPdu(java.lang.String)>
SOURCE|<com.android.server.CountryDetectorService$Receiver: android.location.ICountryListener getListener()>
SOURCE|<android.media.videoeditor.MediaArtistNativeHelper: int getAspectRatio(int,int)>
SOURCE|<com.android.gallery3d.picasasource.PicasaImage: com.google.android.picasasync.PhotoEntry getPhotoEntry()>
SOURCE|<android.database.sqlite.SQLiteGlobal: int getDefaultPageSize()>
SOURCE|<android.graphics.drawable.PictureDrawable: int getOpacity()>
SOURCE|<org.apache.harmony.xnet.provider.jsse.SSLRecordProtocol: int getMinRecordSize()>
SOURCE|<com.android.deskclock.timer.TimerObj: long getTimesupTime()>
SOURCE|<android.content.pm.ContainerEncryptionParams: java.lang.String getMacAlgorithm()>
SOURCE|<gov.nist.javax.sip.stack.SIPClientTransaction: gov.nist.javax.sip.stack.SIPDialog getDialog(java.lang.String)>
SOURCE|<android.net.SSLCertificateSocketFactory: java.lang.String[] getSupportedCipherSuites()>
SOURCE|<com.android.emailcommon.internet.MimeHeader: java.lang.String[] getHeader(java.lang.String)>
SOURCE|<com.android.gallery3d.ui.GLView: int getComponentCount()>
SOURCE|<java.net.CookieManager: java.util.Map get(java.net.URI,java.util.Map)>
SOURCE|<android.nfc.tech.NfcF: byte[] getManufacturer()>
SOURCE|<com.android.internal.telephony.SmsUsageMonitor$ShortCodePatternMatcher: int getNumberCategory(java.lang.String)>
SOURCE|<com.android.inputmethod.latin.WordComposer: com.android.inputmethod.latin.InputPointers getInputPointers()>
SOURCE|<com.android.org.bouncycastle.asn1.x509.SubjectPublicKeyInfo: com.android.org.bouncycastle.asn1.ASN1Primitive getPublicKey()>
SOURCE|<com.android.internal.telephony.sip.SipPhoneBase: void getSmscAddress(android.os.Message)>
SOURCE|<android.nfc.NfcAdapter: android.nfc.INfcAdapter getService()>
SOURCE|<com.google.common.collect.MapMakerInternalMap$Segment: java.lang.Object get(java.lang.Object,int)>
SOURCE|<com.android.contacts.group.SuggestedMemberListAdapter$SuggestedMember: byte[] getPhotoByteArray()>
SOURCE|<org.apache.commons.codec.binary.Hex: byte[] encode(byte[])>
SOURCE|<android.text.SpannedString: int getSpanFlags(java.lang.Object)>
SOURCE|<java.nio.MappedByteBufferAdapter: java.nio.ByteBuffer get(byte[],int,int)>
SOURCE|<com.android.systemui.statusbar.phone.Ticker$Segment: android.text.StaticLayout getLayout(java.lang.CharSequence)>
SOURCE|<android.widget.TextView: int getHighlightColor()>
SOURCE|<android.text.style.AbsoluteSizeSpan: int getSpanTypeId()>
SOURCE|<com.android.providers.downloads.DownloadInfo: java.lang.String getLogMessageForNetworkError(int)>
SOURCE|<com.android.launcher2.PagedView: android.view.View getPageAt(int)>
SOURCE|<android.gesture.GestureLibrary: android.gesture.Learner getLearner()>
SOURCE|<com.android.server.ConnectivityService: com.android.internal.net.LegacyVpnInfo getLegacyVpnInfo()>
SOURCE|<com.android.providers.contacts.util.DbQueryUtils: java.lang.String getEqualityClause(java.lang.String,long)>
SOURCE|<java.net.InterfaceAddress: short getNetworkPrefixLength()>
SOURCE|<android.database.sqlite.SQLiteProgram: java.lang.Object[] getBindArgs()>
SOURCE|<com.android.contacts.list.ContactTilePhoneFrequentView: int getApproximateImageSize()>
SOURCE|<java.security.cert.X509CRLSelector: java.math.BigInteger getMinCRL()>
SOURCE|<android.os.UserManager: android.content.pm.UserInfo createUser(java.lang.String,int)>
SOURCE|<com.android.phone.PhoneInterfaceManager: int getDataState()>
SOURCE|<android.support.v4.view.VelocityTrackerCompat: float getYVelocity(android.view.VelocityTracker,int)>
SOURCE|<android.graphics.drawable.Drawable: android.graphics.Rect getBounds()>
SOURCE|<com.android.internal.telephony.OperatorInfo: java.lang.String toString()>
SOURCE|<com.android.internal.widget.multiwaveview.Ease$Cubic$2: float getInterpolation(float)>
SOURCE|<com.android.launcher2.PagedViewCellLayout: android.view.View getChildOnPageAt(int)>
SOURCE|<android.media.audiofx.EnvironmentalReverb: short getReverbLevel()>
SOURCE|<com.android.internal.telephony.IccSmsInterfaceManager: int getPremiumSmsPermission(java.lang.String)>
SOURCE|<android.app.LoadedApk: java.lang.String getAppDir()>
SOURCE|<com.coremedia.iso.boxes.SampleToChunkBox$Entry: long getFirstChunk()>
SOURCE|<com.android.internal.backup.LocalTransport: long getCurrentRestoreSet()>
SOURCE|<org.apache.http.message.BasicHeaderElementIterator: void parseNextElement()>
SOURCE|<android.text.SpannableStringBuilder: int getSpanStart(java.lang.Object)>
SOURCE|<dalvik.system.BlockGuard$BlockGuardPolicyException: int getPolicy()>
SOURCE|<java.nio.MemoryBlock: byte[] array()>
SOURCE|<com.android.internal.telephony.ApnContext: com.android.internal.telephony.ApnSetting getApnSetting()>
SOURCE|<org.apache.http.util.EncodingUtils: java.lang.String getAsciiString(byte[],int,int)>
SOURCE|<com.google.android.apps.lightcycle.sensor.OrientationEKF: double[] getGLMatrix()>
SOURCE|<android.view.inputmethod.InputMethodInfo: android.content.ComponentName getComponent()>
SOURCE|<android.app.SharedPreferencesImpl: long getLong(java.lang.String,long)>
SOURCE|<com.android.launcher2.Launcher: int getCurrentWorkspaceScreen()>
SOURCE|<android.net.NetworkStatsHistory: android.net.NetworkStatsHistory$Entry getValues(long,long,android.net.NetworkStatsHistory$Entry)>
SOURCE|<com.adobe.xmp.impl.xpath.XMPPathSegment: int getAliasForm()>
SOURCE|<org.ccil.cowan.tagsoup.Parser: org.xml.sax.ContentHandler getContentHandler()>
SOURCE|<android.media.AudioRecord: int getRecordingState()>
SOURCE|<android.location.LocationProvider: int getAccuracy()>
SOURCE|<com.android.gallery3d.filtershow.imageshow.GeometryMetadata: float getStraightenRotation()>
SOURCE|<java.nio.FloatBuffer: java.nio.FloatBuffer get(float[],int,int)>
SOURCE|<java.lang.ProcessManager: java.lang.ProcessManager getInstance()>
SOURCE|<com.android.internal.widget.DrawableHolder: float getY()>
SOURCE|<com.android.bluetooth.hfp.HeadsetPhoneState: int getService()>
SOURCE|<com.google.common.collect.ForwardingMultiset: java.lang.Object delegate()>
SOURCE|<android.net.sip.SimpleSessionDescription$Media: java.lang.String getRtpmap(int)>
SOURCE|<android.widget.PopupWindow: android.graphics.drawable.Drawable getBackground()>
SOURCE|<com.android.browser.preferences.WebsiteSettingsFragment$Site: java.lang.String getOrigin()>
SOURCE|<android.net.http.Headers: long getContentLength()>
SOURCE|<com.android.phone.PhoneUtils: java.lang.String getCompactNameFromCallerInfo(com.android.internal.telephony.CallerInfo,android.content.Context)>
SOURCE|<java.util.concurrent.atomic.AtomicIntegerFieldUpdater: int getAndIncrement(java.lang.Object)>
SOURCE|<android.gesture.GestureStroke: android.graphics.Path getPath()>
SOURCE|<android.widget.SimpleExpandableListAdapter: java.lang.Object getChild(int,int)>
SOURCE|<java.lang.reflect.Field: java.lang.String getSignatureAttribute()>
SOURCE|<com.android.gallery3d.picasasource.FaceImage: java.lang.String getMimeType()>
SOURCE|<android.widget.ArrayAdapter: android.content.Context getContext()>
SOURCE|<android.app.backup.BackupManager: android.app.backup.RestoreSession beginRestoreSession()>
SOURCE|<com.android.gallery3d.data.MediaSource: com.android.gallery3d.data.Path getDefaultSetOf(com.android.gallery3d.data.Path)>
SOURCE|<java.lang.reflect.Parameter: java.lang.reflect.AnnotatedType getAnnotatedType()>
SOURCE|<org.apache.harmony.xml.dom.DocumentImpl: java.util.Map getUserDataMapForRead(org.apache.harmony.xml.dom.NodeImpl)>
SOURCE|<com.android.internal.view.InputConnectionWrapper: int getCursorCapsMode(int)>
SOURCE|<android.content.ClipData: android.graphics.Bitmap getIcon()>
SOURCE|<java.io.RandomAccessFile: int readInt()>
SOURCE|<java.util.concurrent.atomic.Striped64: int getProbe()>
SOURCE|<com.android.mms.data.Conversation: int getMessageCount()>
SOURCE|<com.android.server.sip.SipService: android.net.sip.ISipSession createSession(android.net.sip.SipProfile,android.net.sip.ISipSessionListener)>
SOURCE|<org.apache.harmony.xnet.provider.jsse.OpenSSLSocketImplWrapper: java.net.SocketAddress getLocalSocketAddress()>
SOURCE|<com.android.mms.util.Recycler: int getMessageMaxLimit()>
SOURCE|<android.media.RingtoneManager: android.net.Uri getActualDefaultRingtoneUri(android.content.Context,int)>
SOURCE|<android.view.animation.Animation: android.view.animation.Animation clone()>
SOURCE|<com.android.server.am.ActiveServices$ServiceMap: com.android.server.am.ServiceRecord getServiceByName(android.content.ComponentName,int)>
SOURCE|<java.time.Duration: long parseNumber(java.lang.CharSequence,java.lang.String,int,java.lang.String)>
SOURCE|<com.android.browser.ErrorConsoleView: int getShowState()>
SOURCE|<org.apache.harmony.xnet.provider.jsse.HandshakeProtocol: java.lang.Runnable getTask()>
SOURCE|<android.view.Window: android.view.WindowManager$LayoutParams getAttributes()>
SOURCE|<android.os.Debug: int getGlobalFreedSize()>
SOURCE|<org.apache.harmony.xnet.provider.jsse.ConnectionState: int getContentSize(int)>
SOURCE|<android.database.MergeCursor: double getDouble(int)>
SOURCE|<android.hardware.Camera$Parameters: int getMinExposureCompensation()>
SOURCE|<android.test.mock.MockResources: int getInteger(int)>
SOURCE|<com.google.common.collect.ImmutableList: java.util.ListIterator listIterator(int)>
SOURCE|<com.android.org.bouncycastle.asn1.DERObjectIdentifier: java.lang.String getId()>
SOURCE|<java.security.cert.X509CertSelector: javax.security.auth.x500.X500Principal getIssuer()>
SOURCE|<com.android.deskclock.Alarms: java.util.Calendar calculateAlarm(int,int,com.android.deskclock.Alarm$DaysOfWeek)>
SOURCE|<android.view.View: int getScrollBarStyle()>
SOURCE|<com.android.org.bouncycastle.asn1.DERBoolean: com.android.org.bouncycastle.asn1.ASN1Boolean getInstance(boolean)>
SOURCE|<com.android.internal.os.BatteryStatsImpl: long getHistoryBaseTime()>
SOURCE|<java.net.PlainDatagramSocketImpl: java.lang.Object getOption(int)>
SOURCE|<com.android.exchange.ExchangeService: java.lang.String getDeviceId(android.content.Context)>
SOURCE|<com.googlecode.mp4parser.authoring.builder.DefaultMp4Builder$InterleaveChunkMdat: long getDataOffset()>
SOURCE|<android.location.Address: java.lang.String getSubLocality()>
SOURCE|<java.net.NetworkInterface: java.lang.String getDisplayName()>
SOURCE|<android.filterfw.format.PrimitiveFormat: android.filterfw.core.MutableFrameFormat createInt32Format(int,int)>
SOURCE|<com.android.contacts.quickcontact.QuickContactListFragment$1: java.lang.Object getItem(int)>
SOURCE|<com.android.internal.telephony.cdma.CDMAPhone: com.android.internal.telephony.PhoneConstants$State getState()>
SOURCE|<com.android.mms.dom.smil.SmilRootLayoutElementImpl: int getHeight()>
SOURCE|<android.bluetooth.IBluetooth$Stub$Proxy: android.os.ParcelUuid[] getUuids()>
SOURCE|<android.bluetooth.IBluetoothManager$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
SOURCE|<com.android.gallery3d.data.SnailSource: com.android.gallery3d.data.Path getSetPath(int)>
SOURCE|<com.android.phone.CallLogAsync: android.os.AsyncTask getLastOutgoingCall(com.android.phone.CallLogAsync$GetLastOutgoingCallArgs)>
SOURCE|<com.android.emailcommon.TrafficFlags: int getAttachmentFlags(android.content.Context,com.android.emailcommon.provider.Account)>
SOURCE|<javax.crypto.spec.RC2ParameterSpec: byte[] getIV()>
SOURCE|<java.util.concurrent.atomic.AtomicBoolean: boolean get()>
SOURCE|<android.view.ViewConfiguration: int getScaledDoubleTapTouchSlop()>
SOURCE|<android.server.search.Searchables: android.content.ComponentName getGlobalSearchActivity()>
SOURCE|<com.android.internal.view.menu.MenuPopupHelper$MenuAdapter: com.android.internal.view.menu.MenuItemImpl getItem(int)>
SOURCE|<com.android.gallery3d.exif.ExifData: com.android.gallery3d.exif.ExifTag addTag(short)>
SOURCE|<com.android.systemui.recent.RecentTasksLoader: com.android.systemui.recent.RecentTasksLoader getInstance(android.content.Context)>
SOURCE|<android.filterpacks.imageproc.ContrastFilter: android.filterfw.core.Program getShaderProgram(android.filterfw.core.FilterContext)>
SOURCE|<com.android.internal.database.SortCursor: byte[] getBlob(int)>
SOURCE|<com.android.internal.telephony.CallManager: com.android.internal.telephony.Phone getFgPhone()>
SOURCE|<com.android.email.mail.store.Pop3Store$Pop3Folder: com.android.emailcommon.mail.Flag[] getPermanentFlags()>
SOURCE|<com.android.internal.os.BatteryStatsImpl: int getStartCount()>
SOURCE|<com.android.server.location.GpsLocationProvider: int getStatus(android.os.Bundle)>
SOURCE|<com.android.server.connectivity.Tethering: java.lang.String[] getErroredIfaces()>
SOURCE|<java.security.spec.RSAPublicKeySpec: java.math.BigInteger getModulus()>
SOURCE|<java.lang.reflect.Executable: java.lang.'annotation'.Annotation[] getAnnotationsByType(java.lang.Class)>
SOURCE|<org.xml.sax.SAXParseException: java.lang.String getSystemId()>
SOURCE|<com.android.browser.DateSortedExpandableListAdapter: long getLong(int)>
SOURCE|<android.opengl.ETC1Util: void loadTexture(int,int,int,int,int,java.io.InputStream)>
SOURCE|<android.security.KeyStore: byte[] sign(java.lang.String,byte[])>
SOURCE|<com.android.server.wm.WindowState: android.view.WindowManager$LayoutParams getAttrs()>
SOURCE|<java.time.chrono.HijrahChronology: int getMinimumMonthLength()>
SOURCE|<android.widget.RemoteViewsAdapter: int getCount()>
SOURCE|<android.text.style.StyleSpan: int getStyle()>
SOURCE|<com.android.internal.telephony.sip.SipPhoneBase: com.android.internal.telephony.IccCard getIccCard()>
SOURCE|<com.android.server.pm.PackageManagerService: java.util.List getPersistentApplications(int)>
SOURCE|<org.apache.harmony.xml.dom.ProcessingInstructionImpl: java.lang.String getData()>
SOURCE|<com.android.inputmethod.latin.LogEntries$AutoCorrectionCancelledEntry: java.lang.String[] getLogStrings()>
SOURCE|<java.util.concurrent.ForkJoinTask: java.util.concurrent.ForkJoinPool getPool()>
SOURCE|<com.android.email.activity.MessageOrderManager: com.android.email.MessageListContext getListContext()>
SOURCE|<com.android.email.activity.setup.AccountSettingsFragment$LoadAccountTask: java.lang.Object[] doInBackground(java.lang.Long[])>
SOURCE|<com.android.i18n.phonenumbers.PhoneNumberUtil: java.util.Set getSupportedRegions()>
SOURCE|<com.android.contacts.model.account.ExchangeAccountType: com.android.contacts.model.dataitem.DataKind addDataKindNote(android.content.Context)>
SOURCE|<java.net.PlainDatagramSocketImpl: int getTimeToLive()>
SOURCE|<android.app.ActivityThread: int getIntCoreSetting(java.lang.String,int)>
SOURCE|<com.android.videoeditor.service.MovieAudioTrack: long getStartTime()>
SOURCE|<com.android.providers.contacts.NameSplitter$Name: java.lang.String getFamilyName()>
SOURCE|<gov.nist.javax.sip.stack.SIPDialog: javax.sip.header.EventHeader getEventHeader()>
SOURCE|<com.android.internal.view.menu.ActionMenuItem: android.view.ContextMenu$ContextMenuInfo getMenuInfo()>
SOURCE|<android.hardware.Camera$Parameters: android.hardware.Camera$Size getPreviewSize()>
SOURCE|<android.text.SpannableString: int getSpanStart(java.lang.Object)>
SOURCE|<android.inputmethodservice.InputMethodService: android.view.inputmethod.InputBinding getCurrentInputBinding()>
SOURCE|<com.android.gallery3d.app.AlbumSetPage: int getBackgroundColorId()>
SOURCE|<com.android.internal.policy.impl.PhoneWindowManager: android.media.IAudioService getAudioService()>
SOURCE|<com.android.contacts.model.RawContactDelta$ValuesDelta: byte[] getPhoto()>
SOURCE|<javax.net.ssl.SSLParameters: boolean getWantClientAuth()>
SOURCE|<android.security.IKeyChainService$Stub$Proxy: byte[] getCertificate(java.lang.String)>
SOURCE|<junit.runner.BaseTestRunner: java.lang.String getFilteredTrace(java.lang.Throwable)>
SOURCE|<android.telephony.gsm.SmsMessage: byte[] getPdu()>
SOURCE|<com.android.mms.dom.DocumentImpl: short getNodeType()>
SOURCE|<java.text.AttributedString$AttributedIterator: int getRunLimit()>
SOURCE|<android.webkit.WebHistoryItem: android.webkit.WebHistoryItem clone()>
SOURCE|<android.graphics.drawable.LayerDrawable$LayerState: int getChangingConfigurations()>
SOURCE|<com.android.server.pm.Settings: java.lang.Object getUserIdLPr(int)>
SOURCE|<android.telephony.CellInfo: long getTimeStamp()>
SOURCE|<android.bluetooth.BluetoothTetheringDataTracker: java.lang.String getTcpBufferSizesPropName()>
SOURCE|<android.database.sqlite.SQLiteDatabase: android.database.Cursor query(java.lang.String,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,java.lang.String,java.lang.String)>
SOURCE|<com.android.browser.search.OpenSearchSearchEngine$SuggestionsCursor: java.lang.String[] getColumnNames()>
SOURCE|<android.webkit.HTML5VideoView: int getTextureName()>
SOURCE|<com.android.server.UiModeManagerService: int getNightMode()>
SOURCE|<java.util.TimeZone: java.util.TimeZone getTimeZone(java.lang.String)>
SOURCE|<com.android.launcher2.Launcher: com.android.launcher2.CellLayout getCellLayout(long,int)>
SOURCE|<android.webkit.WebSettings: android.webkit.WebSettings$PluginState getPluginState()>
SOURCE|<java.util.AbstractMap: java.lang.Object get(java.lang.Object)>
SOURCE|<android.database.sqlite.SQLiteConnection: int getConnectionId()>
SOURCE|<com.android.vcard.VCardEntry$PostalData: java.lang.String getFormattedAddress(int)>
SOURCE|<android.net.wifi.WifiInfo: java.lang.String getBSSID()>
SOURCE|<android.os.Bundle: byte[] getByteArray(java.lang.String)>
SOURCE|<com.android.internal.widget.multiwaveview.GlowPadView: int getTargetResourceId()>
SOURCE|<com.coremedia.iso.boxes.mdat.MediaDataBox: com.coremedia.iso.boxes.ContainerBox getParent()>
SOURCE|<java.io.RandomAccessFile: long getFilePointer()>
SOURCE|<com.android.nfc.handover.HandoverManager: android.nfc.NdefRecord createHandoverSelectRecord(boolean)>
SOURCE|<com.android.internal.telephony.sip.SipConnectionBase: long getHoldDurationMillis()>
SOURCE|<com.android.gallery3d.picasasource.PicasaImage: int getSupportedOperations()>
SOURCE|<com.android.internal.telephony.cdma.SmsMessage: com.android.internal.telephony.SmsConstants$MessageClass getMessageClass()>
SOURCE|<android.media.audiofx.Equalizer: short getBandLevel(short)>
SOURCE|<org.apache.harmony.xml.dom.DOMConfigurationImpl$10: java.lang.Object get(org.apache.harmony.xml.dom.DOMConfigurationImpl)>
SOURCE|<android.view.ViewGroup: android.view.animation.LayoutAnimationController getLayoutAnimation()>
SOURCE|<com.android.server.wm.ScreenRotationAnimation: android.view.animation.Transformation getEnterTransformation()>
SOURCE|<java.text.DecimalFormat: java.lang.String getPositiveSuffix()>
SOURCE|<org.apache.harmony.security.x501.AttributeTypeAndValue: org.apache.harmony.security.utils.ObjectIdentifier getType()>
SOURCE|<java.security.Security: java.lang.String getAlgorithmProperty(java.lang.String,java.lang.String)>
SOURCE|<com.android.internal.widget.multiwaveview.Ease$Quint$3: float getInterpolation(float)>
SOURCE|<com.android.contacts.model.RawContactDelta: com.android.contacts.model.RawContactDelta$ValuesDelta getEntry(java.lang.Long)>
SOURCE|<com.google.common.collect.Lists$CharSequenceAsList: java.lang.Character get(int)>
SOURCE|<com.android.server.dreams.DreamManagerService: android.content.ComponentName getDefaultDreamComponent()>
SOURCE|<android.app.BackStackRecord: int getTransitionStyle()>
SOURCE|<android.media.MediaRouter$RouteInfo: int getVolumeHandling()>
SOURCE|<com.android.internal.telephony.gsm.GSMPhone: java.lang.String getPhoneName()>
SOURCE|<android.filterfw.core.VertexFrame: int[] getInts()>
SOURCE|<org.apache.http.params.HttpConnectionParams: int getConnectionTimeout(org.apache.http.params.HttpParams)>
SOURCE|<android.media.AudioSystem: int getNumStreamTypes()>
SOURCE|<android.webkit.WebSettingsClassic$AutoFillProfile: java.lang.String getAddressLine1()>
SOURCE|<android.database.CursorWindow: long getLong(int,int)>
SOURCE|<com.google.common.collect.MapMakerInternalMap$SoftEvictableEntry: com.google.common.collect.MapMakerInternalMap$ReferenceEntry getNextEvictable()>
SOURCE|<android.provider.Settings$Global: java.lang.String getString(android.content.ContentResolver,java.lang.String)>
SOURCE|<gov.nist.javax.sip.message.SIPRequest: java.lang.String getViaHost()>
SOURCE|<android.widget.ArrayAdapter: long getItemId(int)>
SOURCE|<javax.crypto.EncryptedPrivateKeyInfo: java.security.spec.PKCS8EncodedKeySpec getKeySpec(java.security.Key,java.lang.String)>
SOURCE|<com.google.android.picasasync.PicasaFacade: android.net.Uri getSyncRequestUri()>
SOURCE|<android.os.ParcelFileDescriptor: int getFd()>
SOURCE|<org.apache.harmony.security.x509.KeyUsage: boolean[] getKeyUsage()>
SOURCE|<com.android.nfc.handover.BluetoothHeadsetHandover: boolean getProfileProxys()>
SOURCE|<android.view.InputDevice$MotionRange: int getAxis()>
SOURCE|<android.content.SyncStorageEngine: android.content.SyncStorageEngine getSingleton()>
SOURCE|<android.preference.PreferenceFragment: android.preference.PreferenceManager getPreferenceManager()>
SOURCE|<android.text.style.ForegroundColorSpan: int getForegroundColor()>
SOURCE|<android.nfc.NdefRecord: byte[] getPayload()>
SOURCE|<com.android.internal.os.BatteryStatsImpl$Uid: long getWifiScanTime(long,int)>
SOURCE|<android.location.ILocationManager$Stub$Proxy: java.lang.String getBestProvider(android.location.Criteria,boolean)>
SOURCE|<android.os.AsyncTask: java.lang.Object get()>
SOURCE|<android.webkit.CookieManagerClassic: java.lang.String getCookie(java.lang.String)>
SOURCE|<com.android.internal.telephony.DataConnectionAc: int getRefCountSync()>
SOURCE|<android.text.style.MetricAffectingSpan$Passthrough: android.text.style.CharacterStyle getUnderlying()>
SOURCE|<com.google.android.mms.util.PduCache: com.google.android.mms.util.PduCache getInstance()>
SOURCE|<android.view.animation.Animation: int getRepeatMode()>
SOURCE|<com.google.common.collect.ImmutableList: java.lang.Object writeReplace()>
SOURCE|<gov.nist.javax.sip.stack.SIPClientTransaction: javax.sip.message.Request createCancel()>
SOURCE|<com.android.internal.app.AlertController: android.widget.ListView getListView()>
SOURCE|<javax.crypto.Cipher: java.security.AlgorithmParameters getParameters()>
SOURCE|<com.android.calendar.EventRecurrenceFormatter: java.lang.String getRepeatString(android.content.res.Resources,com.android.calendarcommon2.EventRecurrence)>
SOURCE|<com.adobe.xmp.options.SerializeOptions: boolean getEncodeUTF16BE()>
SOURCE|<com.google.common.collect.ForwardingMultimap: java.lang.Object delegate()>
SOURCE|<android.nfc.INfcTag$Stub$Proxy: int[] getTechList(int)>
SOURCE|<com.android.browser.XLargeUi: int getContentWidth()>
SOURCE|<com.android.gallery3d.data.MediaObject: int getSupportedOperations()>
SOURCE|<gov.nist.javax.sip.header.SIPDate: int getYear()>
SOURCE|<com.android.gallery3d.ui.ResourceTexture: int getWidth()>
SOURCE|<android.webkit.WebViewClassic$SelectionHandleAlpha: int getAlpha()>
SOURCE|<com.google.android.mms.pdu.NotifyRespInd: byte[] getTransactionId()>
SOURCE|<android.telephony.SmsCbLocation: java.lang.String toString()>
SOURCE|<com.android.calendar.Utils: int getWeekNumberFromTime(long,android.content.Context)>
SOURCE|<android.webkit.WebBackForwardListClassic: android.webkit.WebHistoryItem getCurrentItem()>
SOURCE|<org.apache.http.conn.scheme.Scheme: org.apache.http.conn.scheme.SchemeSocketFactory getSchemeSocketFactory()>
SOURCE|<android.sax.RootElement: org.xml.sax.ContentHandler getContentHandler()>
SOURCE|<java.util.OptionalInt: int getAsInt()>
SOURCE|<android.animation.LayoutTransition: android.animation.Animator getAnimator(int)>
SOURCE|<java.util.concurrent.locks.ReentrantLock: java.util.Collection getWaitingThreads(java.util.concurrent.locks.Condition)>
SOURCE|<com.android.internal.telephony.PhoneProxy: java.lang.String getMeid()>
SOURCE|<com.android.gallery3d.data.MtpClient: java.util.List getStorageList(java.lang.String)>
SOURCE|<com.android.exchange.adapter.ProvisionParser: com.android.emailcommon.provider.Policy getPolicy()>
SOURCE|<com.android.contacts.calllog.CallDetailHistoryAdapter: int getCount()>
SOURCE|<android.widget.PopupWindow: int getMaxAvailableHeight(android.view.View,int)>
SOURCE|<android.app.Activity: android.content.Intent getParentActivityIntent()>
SOURCE|<com.google.android.apps.lightcycle.panorama.LightCycleView: com.google.android.apps.lightcycle.camera.CameraPreview getCameraPreview()>
SOURCE|<android.app.ContextImpl: android.content.pm.ApplicationInfo getApplicationInfo()>
SOURCE|<org.apache.harmony.luni.lang.reflect.GenericSignatureParser: java.lang.reflect.Type parseTypeSignature()>
SOURCE|<android.test.mock.MockPackageManager: android.content.pm.FeatureInfo[] getSystemAvailableFeatures()>
SOURCE|<com.android.browser.preferences.WebsiteSettingsFragment$Site: java.lang.String getPrettyTitle()>
SOURCE|<android.media.videoeditor.AudioTrack: long getBoundaryBeginTime()>
SOURCE|<android.os.MemoryFile: java.io.OutputStream getOutputStream()>
SOURCE|<android.net.LinkProperties: java.util.Collection getLinkAddresses()>
SOURCE|<com.google.android.mms.pdu.SendReq: byte[] getMessageClass()>
SOURCE|<android.content.pm.IPackageDeleteObserver$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
SOURCE|<com.android.deskclock.worldclock.WorldClockAdapter: long getItemId(int)>
SOURCE|<com.android.server.pm.PackageManagerService$HandlerParams: android.os.UserHandle getUser()>
SOURCE|<org.apache.http.protocol.DefaultedHttpContext: java.lang.Object getAttribute(java.lang.String)>
SOURCE|<java.util.concurrent.FutureTask: java.lang.Object get(long,java.util.concurrent.TimeUnit)>
SOURCE|<android.widget.NumberPicker: int getMaxValue()>
SOURCE|<com.android.internal.telephony.IccFileHandler: java.lang.String getCommonIccEFPath(int)>
SOURCE|<android.app.SearchableInfo: int getSettingsDescriptionId()>
SOURCE|<android.content.res.XmlBlock$Parser: java.lang.String getAttributeType(int)>
SOURCE|<com.android.server.UiModeManagerService: int getCurrentModeType()>
SOURCE|<com.android.internal.content.PackageHelper: java.lang.String getSdFilesystem(java.lang.String)>
SOURCE|<com.android.gallery3d.data.UriImage: int getSupportedOperations()>
SOURCE|<java.time.LocalDate: java.time.chrono.IsoChronology getChronology()>
SOURCE|<android.media.videoeditor.AudioTrack: long getStartTime()>
SOURCE|<com.android.email.activity.setup.AccountSettingsEditQuickResponsesFragment$ArrayAdapterWithButtons: android.view.View getView(int,android.view.View,android.view.ViewGroup)>
SOURCE|<com.android.internal.view.menu.SubMenuBuilder: java.lang.String getActionViewStatesKey()>
SOURCE|<com.android.phone.InCallScreen: com.android.phone.InCallControlState getUpdatedInCallControlState()>
SOURCE|<libcore.net.url.JarURLConnectionImpl: java.util.jar.JarFile openJarFile()>
SOURCE|<android.view.accessibility.AccessibilityNodeInfo: java.lang.CharSequence getClassName()>
SOURCE|<android.net.rtp.RtpStream: int getSocket()>
SOURCE|<com.android.phone.BluetoothPhoneService$3: java.lang.String getNetworkOperator()>
SOURCE|<android.test.ActivityUnitTestCase: int getFinishedActivityRequest()>
SOURCE|<com.android.camera.ActivityBase: long getStorageSpace()>
SOURCE|<com.android.videoeditor.service.MovieAudioTrack: long getBoundaryEndTime()>
SOURCE|<com.android.gallery3d.filtershow.cache.ImageLoader: android.net.Uri getUri()>
SOURCE|<com.android.browser.BrowserWebView: int getTitleHeight()>
SOURCE|<com.android.gallery3d.filtershow.cache.ImageLoader: com.adobe.xmp.XMPMeta getXmpObject()>
SOURCE|<org.apache.harmony.security.provider.cert.X509CertImpl: java.util.Collection getSubjectAlternativeNames()>
SOURCE|<android.view.View: boolean draw(android.graphics.Canvas,android.view.ViewGroup,long)>
SOURCE|<com.android.vcard.VCardUtils: java.lang.String getPhoneTypeString(java.lang.Integer)>
SOURCE|<com.android.bluetooth.btservice.AdapterService: java.lang.String getRemoteName(android.bluetooth.BluetoothDevice)>
SOURCE|<com.android.internal.telephony.gsm.GSMPhone: void getDataCallList(android.os.Message)>
SOURCE|<android.net.wifi.p2p.WifiP2pWfdInfo: int getControlPort()>
SOURCE|<android.net.ConnectivityManager: android.net.ProxyProperties getGlobalProxy()>
SOURCE|<gov.nist.javax.sip.address.GenericURI: java.lang.String getScheme()>
SOURCE|<com.android.contacts.quickcontact.ResolveCache: android.content.pm.ResolveInfo getBestResolve(android.content.Intent,java.util.List)>
SOURCE|<com.android.gallery3d.picasasource.PicasaPostAlbum: android.database.Cursor internalQuery(int,int)>
SOURCE|<java.security.cert.X509CRLSelector: java.security.cert.X509Certificate getCertificateChecking()>
SOURCE|<android.animation.Keyframe: java.lang.Object clone()>
SOURCE|<com.android.mms.data.Contact: com.android.mms.data.Contact getMe(boolean)>
SOURCE|<android.widget.AccessibilityIterators$PageTextSegmentIterator: android.widget.AccessibilityIterators$PageTextSegmentIterator getInstance()>
SOURCE|<com.android.providers.contacts.ContactsDatabaseHelper: int getAggregationMode(long)>
SOURCE|<android.test.mock.MockResources: int getDimensionPixelSize(int)>
SOURCE|<com.android.contacts.list.ContactListAdapter: android.net.Uri getContactUri(int)>
SOURCE|<android.security.KeyStore: long getmtime(java.lang.String)>
SOURCE|<com.android.contacts.model.account.BaseAccountType$SipAddressKindBuilder: java.lang.String getTagName()>
SOURCE|<com.android.inputmethod.keyboard.internal.KeyboardIconsSet: android.graphics.drawable.Drawable getIconDrawable(int)>
SOURCE|<java.lang.reflect.Array: int getInt(java.lang.Object,int)>
SOURCE|<org.apache.http.conn.params.ConnManagerParams: int getMaxTotalConnections(org.apache.http.params.HttpParams)>
SOURCE|<com.android.browser.BrowserSettings: com.android.browser.BrowserSettings getInstance()>
SOURCE|<android.hardware.Camera$Parameters: android.hardware.Camera$Size getPreferredPreviewSizeForVideo()>
SOURCE|<org.apache.harmony.xnet.provider.jsse.OpenSSLSocketImplWrapper: java.net.InetAddress getInetAddress()>
SOURCE|<com.android.email.activity.MessageListFragment: com.android.emailcommon.provider.Mailbox getMailbox()>
SOURCE|<com.android.mms.ui.SlideshowActivity$SmilPlayerController: int getCurrentPosition()>
SOURCE|<android.widget.CalendarView$WeeksAdapter: java.util.Calendar getSelectedDay()>
SOURCE|<com.android.gallery3d.ui.GLView: com.android.gallery3d.ui.GLRoot getGLRoot()>
SOURCE|<android.database.AbstractWindowedCursor: float getFloat(int)>
SOURCE|<android.speech.tts.ITextToSpeechCallback$Stub: android.os.IBinder asBinder()>
SOURCE|<com.android.deskclock.timer.TimerFragment$TimersListAdapter: java.lang.Object getItem(int)>
SOURCE|<android.content.ContextWrapper: android.content.Context getBaseContext()>
SOURCE|<java.net.NetworkInterface: java.net.NetworkInterface getByIndex(int)>
SOURCE|<com.android.gallery3d.exif.IfdData: int getId()>
SOURCE|<android.webkit.WebView: java.lang.String getUrl()>
SOURCE|<com.android.providers.calendar.CalendarAlarmManager: android.os.PowerManager$WakeLock getScheduleNextAlarmWakeLock()>
SOURCE|<com.android.internal.policy.impl.keyguard.KeyguardSelectorView$3: com.android.internal.widget.LockPatternUtils getLockPatternUtils()>
SOURCE|<android.net.NetworkStatsHistory: android.net.NetworkStatsHistory$Entry getValues(long,long,long,android.net.NetworkStatsHistory$Entry)>
SOURCE|<android.app.DownloadManager: java.lang.String getMimeTypeForDownloadedFile(long)>
SOURCE|<java.util.concurrent.ConcurrentHashMap: java.lang.Object get(java.lang.Object)>
SOURCE|<android.graphics.Bitmap: int getWidth()>
SOURCE|<gov.nist.javax.sip.stack.UDPMessageChannel: gov.nist.javax.sip.stack.SIPTransactionStack getSIPStack()>
SOURCE|<android.service.dreams.IDreamManager$Stub$Proxy: android.content.ComponentName getDefaultDreamComponent()>
SOURCE|<android.media.AudioTrack: int getStreamType()>
SOURCE|<android.filterfw.core.NativeFrame: android.graphics.Bitmap getBitmap()>
SOURCE|<android.support.v4.view.MotionEventCompat$EclairMotionEventVersionImpl: float getY(android.view.MotionEvent,int)>
SOURCE|<java.time.LocalTime: int getNano()>
SOURCE|<com.android.mms.dom.smil.SmilDocumentImpl: org.w3c.dom.NodeList getTimeChildren()>
SOURCE|<com.android.email.provider.ContentCache: android.database.Cursor get(java.lang.String)>
SOURCE|<java.util.BitSet: byte[] toByteArray()>
SOURCE|<com.android.internal.telephony.cat.CatService: com.android.internal.telephony.cat.CatService getInstance(com.android.internal.telephony.CommandsInterface,android.content.Context,com.android.internal.telephony.UiccCard)>
SOURCE|<android.widget.CompoundButton: int getHorizontalOffsetForDrawables()>
SOURCE|<android.media.Metadata: double getDouble(int)>
SOURCE|<android.media.AudioTrack: int getState()>
SOURCE|<android.view.LayoutInflater: android.view.View inflate(org.xmlpull.v1.XmlPullParser,android.view.ViewGroup,boolean)>
SOURCE|<android.gesture.GestureLibrary: java.util.Set getGestureEntries()>
SOURCE|<gov.nist.javax.sip.stack.SIPTransaction: java.lang.Object getApplicationData()>
SOURCE|<com.android.gallery3d.filtershow.imageshow.ImageSlave: android.graphics.Rect getDisplayedImageBounds()>
SOURCE|<android.telephony.NeighboringCellInfo: int getNetworkType()>
SOURCE|<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessRecord getProcessRecordLocked(java.lang.String,int)>
SOURCE|<android.accessibilityservice.AccessibilityServiceInfo: android.content.pm.ResolveInfo getResolveInfo()>
SOURCE|<com.android.commands.uiautomator.Launcher$Command: java.lang.String name()>
SOURCE|<android.view.WindowManagerGlobal: android.view.IWindowManager getWindowManagerService()>
SOURCE|<com.android.contacts.list.LegacyContactListAdapter: android.net.Uri getPersonUri(int)>
SOURCE|<gov.nist.javax.sip.header.AuthenticationHeader: java.lang.String getResponse()>
SOURCE|<com.coremedia.iso.boxes.TrackHeaderBox: long getTrackId()>
SOURCE|<java.time.ZonedDateTime: int getMinute()>
SOURCE|<android.telephony.SmsMessage: long getTimestampMillis()>
SOURCE|<android.telephony.TelephonyManager: int getCallState()>
SOURCE|<android.content.ContextWrapper: android.os.Looper getMainLooper()>
SOURCE|<android.webkit.MimeTypeMap: java.lang.String getFileExtensionFromUrl(java.lang.String)>
SOURCE|<org.apache.http.impl.HttpConnectionMetricsImpl: java.lang.Object getMetric(java.lang.String)>
SOURCE|<com.android.org.bouncycastle.asn1.ASN1OutputStream: com.android.org.bouncycastle.asn1.ASN1OutputStream getDLSubStream()>
SOURCE|<com.android.internal.telephony.sip.SipPhone: com.android.internal.telephony.PhoneSubInfo getPhoneSubInfo()>
SOURCE|<android.support.v4.app.TaskStackBuilder: android.app.PendingIntent getPendingIntent(int,int)>
SOURCE|<com.android.gallery3d.app.AlbumDataLoader: com.android.gallery3d.data.MediaItem get(int)>
SOURCE|<android.content.IntentSender: java.lang.String getCreatorPackage()>
SOURCE|<com.android.internal.telephony.PhoneSubInfo: java.lang.String getIsimImpi()>
SOURCE|<android.renderscript.Mesh: int getVertexAllocationCount()>
SOURCE|<android.net.sip.SipManager: android.net.sip.SipAudioCall makeAudioCall(android.net.sip.SipProfile,android.net.sip.SipProfile,android.net.sip.SipAudioCall$Listener,int)>
SOURCE|<com.adobe.xmp.impl.xpath.XMPPathSegment: java.lang.String getName()>
SOURCE|<com.android.internal.view.menu.MenuItemImpl: android.view.ActionProvider getActionProvider()>
SOURCE|<android.os.StrictMode$AndroidBlockGuardPolicy: int getPolicyMask()>
SOURCE|<gov.nist.javax.sip.stack.SIPDialog: javax.sip.message.Request createRequest(java.lang.String)>
SOURCE|<android.media.videoeditor.WaveformData: int getFrameDuration()>
SOURCE|<com.android.gallery3d.app.GalleryActionBar$AlbumModeAdapter: java.lang.Object getItem(int)>
SOURCE|<com.google.android.picasasync.PicasaSyncHelper: com.google.android.picasasync.PicasaSyncHelper getInstance(android.content.Context)>
SOURCE|<android.media.videoeditor.MediaItem: java.lang.String getFilename()>
SOURCE|<org.apache.harmony.xnet.provider.jsse.SSLSessionImpl: java.security.cert.Certificate[] getLocalCertificates()>
SOURCE|<android.webkit.DateSorter: int getIndex(long)>
SOURCE|<java.util.logging.LogManager: java.util.logging.Logger getOrCreate(java.lang.String,java.lang.String)>
SOURCE|<android.view.ViewTreeObserver$CopyOnWriteArray$Access: java.lang.Object get(int)>
SOURCE|<android.widget.CalendarView$WeeksAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)>
SOURCE|<android.filterfw.format.PrimitiveFormat: android.filterfw.core.MutableFrameFormat createInt16Format(int,int)>
SOURCE|<com.android.providers.contacts.DataRowHandlerForPhoneNumber: int getTypeRank(int)>
SOURCE|<com.android.videoeditor.service.VideoEditorProject: com.android.videoeditor.service.MovieTransition getTransition(java.lang.String)>
SOURCE|<com.android.server.am.BroadcastQueue: com.android.server.am.BroadcastRecord getMatchingOrderedReceiver(android.os.IBinder)>
SOURCE|<java.util.concurrent.Phaser: int getArrivedParties()>
SOURCE|<com.android.calendar.alerts.AlertUtils: java.lang.String formatTimeLocation(android.content.Context,long,boolean,java.lang.String)>
SOURCE|<com.android.bluetooth.btservice.ProfileService: android.bluetooth.BluetoothDevice getDevice(byte[])>
SOURCE|<android.widget.LinearLayout: android.view.View getVirtualChildAt(int)>
SOURCE|<android.test.mock.MockCursor: short getShort(int)>
SOURCE|<android.view.View: int getHeight()>
SOURCE|<android.widget.ZoomButtonsController: android.view.ViewGroup getContainer()>
SOURCE|<android.media.MediaRouter: int getRouteCountStatic()>
SOURCE|<java.util.logging.LoggingPermission: java.lang.String getActions()>
SOURCE|<android.webkit.PluginManager: java.lang.String[] getPluginDirectories()>
SOURCE|<android.app.Fragment: int getTargetRequestCode()>
SOURCE|<android.view.View: android.content.Context getContext()>
SOURCE|<android.view.View: int getPaddingLeft()>
SOURCE|<com.android.inputmethod.latin.ResizableIntArray: int get(int)>
SOURCE|<com.android.launcher2.Launcher: com.android.launcher2.LauncherModel getModel()>
SOURCE|<java.text.DateFormat$Field: int getCalendarField()>
SOURCE|<gov.nist.javax.sip.message.SIPMessage: gov.nist.javax.sip.header.RecordRouteList getRecordRouteHeaders()>
SOURCE|<com.googlecode.mp4parser.authoring.TrackMetaData: java.util.Date getCreationTime()>
SOURCE|<android.view.KeyEvent: char getMatch(char[])>
SOURCE|<com.android.internal.telephony.PhoneSubInfoProxy: java.lang.String getCompleteVoiceMailNumber()>
SOURCE|<org.kxml2.io.KXmlParser: java.lang.String getNamespaceUri(int)>
SOURCE|<gov.nist.javax.sip.stack.MessageProcessor: int getPort()>
SOURCE|<android.provider.Settings$System: long getLong(android.content.ContentResolver,java.lang.String,long)>
SOURCE|<com.android.email.ResourceHelper: android.graphics.Paint getAccountColorPaint(long)>
SOURCE|<java.lang.StackTraceElement: int getLineNumber()>
SOURCE|<android.graphics.drawable.ClipDrawable: boolean getPadding(android.graphics.Rect)>
SOURCE|<gov.nist.javax.sip.header.Via: java.lang.String getProtocol()>
SOURCE|<android.net.sip.SimpleSessionDescription: java.lang.String getAttribute(java.lang.String)>
SOURCE|<com.android.email.service.AttachmentDownloadService: int getQueueSize()>
SOURCE|<org.apache.harmony.security.x509.TBSCertificate$1: java.lang.Object getDecodedObject(org.apache.harmony.security.asn1.BerInputStream)>
SOURCE|<java.security.Security: java.security.Provider[] getProviders(java.lang.String)>
SOURCE|<android.net.Uri$AbstractHierarchicalUri: int getPort()>
SOURCE|<android.net.IConnectivityManager$Stub$Proxy: android.net.LinkProperties getLinkProperties(int)>
SOURCE|<com.android.server.net.NetworkStatsService$DefaultNetworkStatsSettings: com.android.server.net.NetworkStatsService$NetworkStatsSettings$Config getUidTagConfig()>
SOURCE|<android.database.CursorWrapper: float getFloat(int)>
SOURCE|<android.database.MatrixCursor: float getFloat(int)>
SOURCE|<java.io.EmulatedFieldsForLoading: float get(java.lang.String,float)>
SOURCE|<android.database.sqlite.SQLiteGlobal: java.lang.String getWALSyncMode()>
SOURCE|<android.content.pm.IPackageManager$Stub$Proxy: android.content.pm.VerifierDeviceIdentity getVerifierDeviceIdentity()>
SOURCE|<android.provider.ContactsContract$RawContacts$EntityIteratorImpl: android.content.Entity getEntityAndIncrementCursor(android.database.Cursor)>
SOURCE|<android.widget.CursorAdapter: android.widget.Filter getFilter()>
SOURCE|<com.android.contacts.editor.LabeledEditorView$EditTypeAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)>
SOURCE|<com.android.gallery3d.data.ActionImage: int getWidth()>
SOURCE|<com.android.inputmethod.latin.InputPointers: int[] getTimes()>
SOURCE|<android.gesture.GestureStore: void load(java.io.InputStream)>
SOURCE|<com.android.gallery3d.common.EntrySchema: int getColumnIndex(java.lang.String)>
SOURCE|<gov.nist.javax.sip.SipProviderImpl: javax.sip.ListeningPoint[] getListeningPoints()>
SOURCE|<com.google.android.picasasync.PicasaFacade: android.net.Uri getUploadUri(long)>
SOURCE|<android.webkit.WebViewClassic: android.webkit.WebView$HitTestResult getHitTestResult()>
SOURCE|<com.android.deskclock.AlarmClock$AlarmItemAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)>
SOURCE|<android.graphics.Canvas: android.graphics.DrawFilter getDrawFilter()>
SOURCE|<javax.sip.RequestEvent: javax.sip.message.Request getRequest()>
SOURCE|<android.database.CrossProcessCursorWrapper: android.database.CursorWindow getWindow()>
SOURCE|<com.android.contacts.detail.ContactDetailViewPagerAdapter: int getItemPosition(java.lang.Object)>
SOURCE|<com.android.phone.sip.SipProfileDb: java.util.List retrieveSipProfileList()>
SOURCE|<android.os.ICancellationSignal$Stub: android.os.IBinder asBinder()>
SOURCE|<com.android.contacts.list.ContactListAdapter: int getSelectedContactPosition()>
SOURCE|<android.widget.RemoteViews: android.view.View apply(android.content.Context,android.view.ViewGroup,android.widget.RemoteViews$OnClickHandler)>
SOURCE|<com.android.internal.view.InputConnectionWrapper: java.lang.CharSequence getSelectedText(int)>
SOURCE|<com.google.android.apps.lightcycle.sensor.SensorReader: float getAccelInPlaneRotationRadians()>
SOURCE|<android.widget.CursorAdapter: java.lang.Object getItem(int)>
SOURCE|<java.lang.reflect.Method: java.lang.annotation.Annotation[] getDeclaredAnnotations()>
SOURCE|<android.service.dreams.IDreamManager$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
SOURCE|<com.android.server.accessibility.TouchExplorer$ReceivedPointerTracker: int getActivePointerCount()>
SOURCE|<android.content.res.Resources: java.lang.String getString(int,java.lang.Object[])>
SOURCE|<com.android.browser.TabScrollView: android.view.View getSelectedTab()>
SOURCE|<android.view.ScaleGestureDetector: float getCurrentSpanX()>
SOURCE|<com.android.videoeditor.service.VideoEditorProject: com.android.videoeditor.service.MovieMediaItem getPreviousMediaItem(java.lang.String)>
SOURCE|<javax.net.ssl.TrustManagerFactory: java.lang.String getDefaultAlgorithm()>
SOURCE|<android.app.Activity: int getTitleColor()>
SOURCE|<java.time.chrono.HijrahChronology: void loadCalendarData()>
SOURCE|<com.android.internal.telephony.gsm.SimTlv: byte[] getData()>
SOURCE|<android.view.View: void getLocationOnScreen(int[])>
SOURCE|<android.widget.TextView: int getImeActionId()>
SOURCE|<android.graphics.drawable.NinePatchDrawable: int getMinimumWidth()>
SOURCE|<com.android.internal.telephony.DataConnection: int getRilRadioTechnology(int)>
SOURCE|<gov.nist.javax.sip.stack.SIPClientTransaction: gov.nist.javax.sip.stack.SIPDialog getDefaultDialog()>
SOURCE|<android.database.sqlite.SqliteWrapper: android.database.Cursor query(android.content.Context,android.content.ContentResolver,android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>
SOURCE|<org.json.JSONArray: org.json.JSONArray put(int,java.lang.Object)>
SOURCE|<android.database.sqlite.SQLiteDatabase: java.util.List getAttachedDbs()>
SOURCE|<android.app.SearchManager: android.content.ComponentName getWebSearchActivity()>
SOURCE|<android.view.GLES20Canvas: int getHeight()>
SOURCE|<com.google.android.mms.util.SqliteWrapper: android.net.Uri insert(android.content.Context,android.content.ContentResolver,android.net.Uri,android.content.ContentValues)>
SOURCE|<android.webkit.WebHistoryItem: int getId()>
SOURCE|<java.util.concurrent.atomic.AtomicLong: long get()>
SOURCE|<com.android.mms.model.AudioModel: java.util.Map getExtras()>
SOURCE|<java.text.NumberFormat: int getMinimumIntegerDigits()>
SOURCE|<com.android.gallery3d.data.CameraShortcutImage: int getSupportedOperations()>
SOURCE|<com.android.bluetooth.pan.PanService: java.util.List getDevicesMatchingConnectionStates(int[])>
SOURCE|<gov.nist.javax.sip.message.SIPRequest: java.lang.String getDialogId(boolean,java.lang.String)>
SOURCE|<android.view.accessibility.IAccessibilityManager$Stub$Proxy: java.util.List getInstalledAccessibilityServiceList(int)>
SOURCE|<com.android.internal.widget.multiwaveview.PointCloud: float getScale()>
SOURCE|<android.view.View: android.view.TouchDelegate getTouchDelegate()>
SOURCE|<java.net.URI: java.lang.String getRawUserInfo()>
SOURCE|<android.graphics.drawable.Drawable: android.graphics.Insets getLayoutInsets()>
SOURCE|<com.android.gallery3d.ui.PhotoView: boolean getFilmMode()>
SOURCE|<android.graphics.drawable.ClipDrawable$ClipState: int getChangingConfigurations()>
SOURCE|<java.net.ServerSocket: java.nio.channels.ServerSocketChannel getChannel()>
SOURCE|<com.android.camera.LocationManager: android.location.Location getCurrentLocation()>
SOURCE|<com.coremedia.iso.boxes.mdat.MediaDataBox: java.nio.ByteBuffer getContent(long,int)>
SOURCE|<java.security.cert.X509Certificate: javax.security.auth.x500.X500Principal getSubjectX500Principal()>
SOURCE|<android.preference.PreferenceFragment: android.widget.ListView getListView()>
SOURCE|<junit.runner.BaseTestRunner: boolean useReloadingTestSuiteLoader()>
SOURCE|<javax.xml.parsers.FactoryConfigurationError: java.lang.Exception getException()>
SOURCE|<java.time.zone.ZoneOffsetTransition: java.time.Instant getInstant()>
SOURCE|<android.webkit.ZoomManager: float getDefaultMaxZoomScale()>
SOURCE|<java.util.Hashtable: java.lang.Object get(java.lang.Object)>
SOURCE|<com.android.internal.telephony.sip.SipPhoneBase: java.lang.String getLine1AlphaTag()>
SOURCE|<android.accessibilityservice.IAccessibilityServiceConnection$Stub$Proxy: float findFocus(int,long,int,int,android.view.accessibility.IAccessibilityInteractionConnectionCallback,long)>
SOURCE|<android.animation.ValueAnimator: android.animation.PropertyValuesHolder[] getValues()>
SOURCE|<android.support.v4.view.MotionEventCompat$BaseMotionEventVersionImpl: int getPointerCount(android.view.MotionEvent)>
SOURCE|<com.android.internal.telephony.gsm.GsmSmsAddress: java.lang.String getAddressString()>
SOURCE|<android.media.AudioService$SetModeDeathHandler: int getMode()>
SOURCE|<com.android.internal.os.ProcessStats: int getLastUserTime()>
SOURCE|<com.android.internal.telephony.PhoneFactory: com.android.internal.telephony.Phone getDefaultPhone()>
SOURCE|<java.text.DateFormat: java.text.DateFormat getDateInstance(int,java.util.Locale)>
SOURCE|<com.android.emailcommon.provider.Mailbox: com.android.emailcommon.provider.Mailbox restoreMailboxOfType(android.content.Context,long,int)>
SOURCE|<com.android.contacts.group.SuggestedMemberListAdapter$SuggestedMember: long getContactId()>
SOURCE|<android.preference.ListPreference: java.lang.String getValue()>
SOURCE|<com.android.org.bouncycastle.asn1.x509.AlgorithmIdentifier: com.android.org.bouncycastle.asn1.x509.AlgorithmIdentifier getInstance(java.lang.Object)>
SOURCE|<gov.nist.core.GenericObject: java.lang.Object clone()>
SOURCE|<com.android.camera.PhotoModule: byte[] access$4802(com.android.camera.PhotoModule,byte[])>
SOURCE|<java.time.chrono.IsoChronology: java.lang.String getId()>
SOURCE|<com.android.internal.view.IInputContext$Stub: android.os.IBinder asBinder()>
SOURCE|<android.telephony.gsm.SmsManager: java.util.ArrayList divideMessage(java.lang.String)>
SOURCE|<com.android.launcher2.ShortcutInfo: java.lang.String getPackageName()>
SOURCE|<android.telephony.CellInfoCdma: android.telephony.CellIdentityCdma getCellIdentity()>
SOURCE|<com.android.emailcommon.provider.EmailContent: android.net.Uri getUri()>
SOURCE|<com.adobe.xmp.options.PropertyOptions: int getValidOptions()>
SOURCE|<android.text.Selection: int getSelectionEnd(java.lang.CharSequence)>
SOURCE|<com.android.server.accessibility.AccessibilityManagerService: java.util.List getInstalledAccessibilityServiceList(int)>
SOURCE|<com.android.launcher2.IconCache: android.graphics.drawable.Drawable getFullResIcon(android.content.res.Resources,int)>
SOURCE|<com.google.common.collect.MapMakerInternalMap$NullEntry: com.google.common.collect.MapMakerInternalMap$ReferenceEntry getPreviousEvictable()>
SOURCE|<android.view.View: int getTop()>
SOURCE|<java.security.Signature: java.security.Signature getInstance(java.lang.String,java.lang.String)>
SOURCE|<android.net.wifi.p2p.WifiP2pGroup: java.lang.String getInterface()>
SOURCE|<android.support.v4.view.ViewPager: android.support.v4.view.PagerAdapter getAdapter()>
SOURCE|<org.apache.http.conn.ssl.SSLSocketFactory: org.apache.http.conn.ssl.SSLSocketFactory getSocketFactory()>
SOURCE|<android.content.CursorEntityIterator: android.content.Entity next()>
SOURCE|<android.widget.OverScroller: int getStartX()>
SOURCE|<com.android.server.net.NetworkStatsService$DefaultNetworkStatsSettings: long getUidPersistBytes(long)>
SOURCE|<android.text.style.TextAppearanceSpan: android.content.res.ColorStateList getTextColor()>
SOURCE|<com.android.org.bouncycastle.asn1.x509.X509DefaultEntryConverter: com.android.org.bouncycastle.asn1.ASN1Primitive getConvertedValue(com.android.org.bouncycastle.asn1.ASN1ObjectIdentifier,java.lang.String)>
SOURCE|<android.drm.DrmInfo: byte[] getData()>
SOURCE|<com.android.browser.PreloadController: android.content.Context getContext()>
SOURCE|<com.android.contacts.util.BitmapUtil: int getSmallerExtentFromBytes(byte[])>
SOURCE|<com.android.internal.policy.impl.keyguard.KeyguardCircleFramedDrawable: int getOpacity()>
SOURCE|<java.security.AccessController: java.security.AccessControlContext getContext()>
SOURCE|<android.test.RenamingDelegatingContext: java.io.File getCacheDir()>
SOURCE|<java.util.Currency: java.lang.String getCurrencyCode()>
SOURCE|<com.android.uiautomator.core.UiSelector: java.lang.String getString(int)>
SOURCE|<com.android.internal.widget.ScrollingTabContainerView: com.android.internal.widget.ScrollingTabContainerView$TabView access$300(com.android.internal.widget.ScrollingTabContainerView,android.app.ActionBar$Tab,boolean)>
SOURCE|<java.util.concurrent.locks.ReentrantReadWriteLock: java.util.Collection getQueuedThreads()>
SOURCE|<android.nfc.tech.Ndef: android.nfc.NdefMessage getCachedNdefMessage()>
SOURCE|<com.android.internal.telephony.sip.SipPhone: java.lang.String getIccSerialNumber()>
SOURCE|<com.android.gallery3d.filtershow.filters.ImageFilterCurves: com.android.gallery3d.filtershow.ui.Spline getSpline(int)>
SOURCE|<android.widget.AbsSpinner: android.view.View getSelectedView()>
SOURCE|<android.media.Ringtone: java.lang.String getTitle(android.content.Context)>
SOURCE|<javax.crypto.spec.GCMParameterSpec: int getTLen()>
SOURCE|<com.android.launcher2.Folder: float getPivotXForIconAnimation()>
SOURCE|<java.nio.DirectByteBuffer: short getShort(int)>
SOURCE|<com.android.email.Preferences: java.lang.String getDeviceUID()>
SOURCE|<com.android.contacts.list.PhoneFavoriteMergedAdapter: int getItemViewType(int)>
SOURCE|<com.android.gallery3d.app.GalleryActionBar: android.view.Menu getMenu()>
SOURCE|<com.android.internal.telephony.PhoneSubInfoProxy: java.lang.String getIsimImpi()>
SOURCE|<javax.net.ssl.KeyStoreBuilderParameters: java.util.List getParameters()>
SOURCE|<com.android.vcard.VCardEntry$OrganizationData: com.android.vcard.VCardEntry$EntryLabel getEntryLabel()>
SOURCE|<com.android.calendar.agenda.AgendaByDayAdapter: long getItemId(int)>
SOURCE|<com.google.android.mms.pdu.PduBody: com.google.android.mms.pdu.PduPart getPartByContentLocation(java.lang.String)>
SOURCE|<com.android.providers.contacts.TransactionContext: java.util.Set getStaleSearchIndexContactIds()>
SOURCE|<android.filterpacks.imageproc.GrainFilter: android.filterfw.core.FrameFormat getOutputFormat(java.lang.String,android.filterfw.core.FrameFormat)>
SOURCE|<java.lang.reflect.Method: java.lang.annotation.Annotation[][] getParameterAnnotations()>
SOURCE|<com.android.contacts.ContactsUtils: android.content.Intent getCallIntent(android.net.Uri)>
SOURCE|<com.android.gallery3d.common.Fingerprint: byte[] getBytes()>
SOURCE|<com.android.server.accessibility.ScreenMagnifier$MagnificationController: float getScaledOffsetX()>
SOURCE|<com.android.internal.telephony.ISms$Stub$Proxy: int getPremiumSmsPermission(java.lang.String)>
SOURCE|<java.util.Formatter$FormatToken: char getDateSuffix()>
SOURCE|<android.view.View: boolean getGlobalVisibleRect(android.graphics.Rect)>
SOURCE|<com.android.server.display.PersistentDataStore: android.hardware.display.WifiDisplay getRememberedWifiDisplay(java.lang.String)>
SOURCE|<android.view.Gravity: int getAbsoluteGravity(int,int)>
SOURCE|<java.util.concurrent.atomic.AtomicLongFieldUpdater: long getAndDecrement(java.lang.Object)>
SOURCE|<android.widget.ImageView: boolean getBaselineAlignBottom()>
SOURCE|<com.android.calendar.CalendarController$EventInfo: int getResponse()>
SOURCE|<com.android.gallery3d.ui.TileImageView$Tile: int getTextureWidth()>
SOURCE|<com.android.mms.dom.smil.SmilPlayer$TimelineEntry: double getOffsetTime()>
SOURCE|<com.android.gallery3d.data.LocalMergeAlbum: java.util.ArrayList getMediaItem(int,int)>
SOURCE|<android.hardware.display.DisplayManagerGlobal: android.view.DisplayInfo getDisplayInfo(int)>
SOURCE|<com.android.server.location.MockProvider: int getStatus(android.os.Bundle)>
SOURCE|<org.apache.harmony.xml.dom.DocumentFragmentImpl: java.lang.String getNodeName()>
SOURCE|<android.app.SearchableInfo: int getSuggestThreshold()>
SOURCE|<java.net.SocketImpl: int getPort()>
SOURCE|<java.security.spec.RSAPrivateCrtKeySpec: java.math.BigInteger getPublicExponent()>
SOURCE|<gov.nist.javax.sip.stack.UDPMessageChannel: java.lang.String getPeerName()>
SOURCE|<com.android.internal.telephony.sip.SipPhone: void getSmscAddress(android.os.Message)>
SOURCE|<libcore.net.http.HttpsURLConnectionImpl: java.lang.String getContentEncoding()>
SOURCE|<com.android.internal.telephony.cdma.SmsMessage: int getNextMessageId()>
SOURCE|<org.xmlpull.v1.sax2.Driver: org.xml.sax.EntityResolver getEntityResolver()>
SOURCE|<com.android.bluetooth.btservice.RemoteDevices$DeviceProperties: android.os.ParcelUuid[] getUuids()>
SOURCE|<android.view.textservice.TextInfo: int getCookie()>
SOURCE|<android.webkit.AccessibilityInjectorFallback$AccessibilityWebContentKeyBinding: int getActionCount()>
SOURCE|<com.android.systemui.screenshot.GlobalScreenshot$10: float getInterpolation(float)>
SOURCE|<android.webkit.WebViewFragment: android.webkit.WebView getWebView()>
SOURCE|<java.security.SecureClassLoader: java.security.PermissionCollection getPermissions(java.security.CodeSource)>
SOURCE|<com.android.browser.BrowserSettings: android.content.SharedPreferences getPreferences()>
SOURCE|<android.widget.RemoteViews$SetOnClickPendingIntent: java.lang.String getActionName()>
SOURCE|<com.android.internal.widget.ScrollingTabContainerView$TabAdapter: int getCount()>
SOURCE|<android.net.wifi.WifiStateTracker: android.net.LinkCapabilities getLinkCapabilities()>
SOURCE|<com.android.gallery3d.ui.SelectionManager: int getSelectedCount()>
SOURCE|<android.location.GpsSatellite: int getPrn()>
SOURCE|<com.android.calendar.CalendarViewAdapter: java.lang.Object getItem(int)>
SOURCE|<com.android.email.activity.ShortcutPickerFragment$AccountShortcutPickerFragment: java.lang.String[] getFromColumns()>
SOURCE|<org.xmlpull.v1.sax2.Driver: java.lang.String getValue(java.lang.String,java.lang.String)>
SOURCE|<android.view.View: int getScrollBarSize()>
SOURCE|<com.android.systemui.ExpandHelper$ViewScaler: float getHeight()>
SOURCE|<com.android.internal.telephony.UiccCardApplication: com.android.internal.telephony.IccCardStatus$PinState getPin1State()>
SOURCE|<android.widget.AbsListView: int getRightPaddingOffset()>
SOURCE|<org.apache.harmony.xnet.provider.jsse.DigitalSignature: byte[] sign()>
SOURCE|<com.android.internal.telephony.cdma.CdmaConnection: long getDisconnectTime()>
SOURCE|<javax.xml.datatype.Duration: int getDays()>
SOURCE|<java.security.Provider: java.lang.String toString()>
SOURCE|<android.util.TimeUtils: java.util.TimeZone getTimeZone(int,boolean,long,java.lang.String)>
SOURCE|<com.android.internal.telephony.IWapPushManager$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
SOURCE|<android.webkit.WebView: android.net.http.SslCertificate getCertificate()>
SOURCE|<java.lang.Class: java.lang.String getCanonicalName()>
SOURCE|<libcore.net.url.JarURLConnectionImpl: java.lang.String getContentType()>
SOURCE|<android.telephony.cdma.CdmaSmsCbProgramResults: int getCategoryResult()>
SOURCE|<gov.nist.javax.sip.address.AddressImpl: java.lang.String getUserAtHostPort()>
SOURCE|<com.google.android.mms.pdu.PduParser: byte[] getWapString(java.io.ByteArrayInputStream,int)>
SOURCE|<android.widget.TableRow: int getChildrenSkipCount(android.view.View,int)>
SOURCE|<gov.nist.javax.sip.ListeningPointImpl: java.lang.String getSentBy()>
SOURCE|<android.text.DynamicLayout: int getEllipsizedWidth()>
SOURCE|<android.text.DynamicLayout: int getLineCount()>
SOURCE|<com.android.internal.policy.impl.keyguard.KeyguardUpdateMonitor: int getPhoneState()>
SOURCE|<org.apache.http.impl.client.DefaultRequestDirector: org.apache.http.conn.routing.HttpRoute determineRoute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext)>
SOURCE|<android.view.accessibility.AccessibilityEvent: int getRemovedCount()>
SOURCE|<com.android.deskclock.widget.multiwaveview.TargetDrawable: int getHeight()>
SOURCE|<android.database.BulkCursorToCursorAdaptor: int getCount()>
SOURCE|<android.media.videoeditor.MediaItem: android.graphics.Bitmap[] getThumbnailList(int,int,long,long,int)>
SOURCE|<android.app.Dialog: android.view.Window getWindow()>
SOURCE|<org.apache.http.impl.conn.AbstractClientConnAdapter: org.apache.http.conn.ClientConnectionManager getManager()>
SOURCE|<android.graphics.drawable.RotateDrawable: boolean getPadding(android.graphics.Rect)>
SOURCE|<com.google.common.base.Optional$Present: java.lang.Object get()>
SOURCE|<com.android.contacts.list.ContactTileView: android.widget.QuickContactBadge getQuickContact()>
SOURCE|<com.android.contacts.editor.EditorAnimator: com.android.contacts.editor.EditorAnimator getInstance()>
SOURCE|<com.android.gallery3d.filtershow.ui.Spline: float[] getAppliedCurve()>
SOURCE|<com.android.camera.ActivityBase: int getResultCode()>
SOURCE|<gov.nist.javax.sip.header.Expires: int getExpires()>
SOURCE|<com.google.common.collect.Multimaps$UnmodifiableSetMultimap: java.util.Collection get(java.lang.Object)>
SOURCE|<android.os.PowerManager: int getMaximumScreenBrightnessSetting()>
SOURCE|<java.security.Security: java.security.Provider[] getProviders(java.util.Map)>
SOURCE|<com.android.inputmethod.keyboard.MoreKeysKeyboardView: com.android.inputmethod.keyboard.KeyboardActionListener getKeyboardActionListener()>
SOURCE|<java.lang.reflect.Parameter: java.lang.String getName()>
SOURCE|<com.android.contacts.activities.ActionBarAdapter$CustomArrayAdapter: android.view.View getDropDownView(int,android.view.View,android.view.ViewGroup)>
SOURCE|<android.content.res.XmlBlock$Parser: char[] getTextCharacters(int[])>
SOURCE|<java.security.SecureRandom: java.security.SecureRandom getInstance(java.lang.String,java.security.Provider)>
SOURCE|<com.android.inputmethod.keyboard.MainKeyboardView: java.lang.String getMiddleDisplayName(android.view.inputmethod.InputMethodSubtype)>
SOURCE|<com.android.inputmethod.latin.spellcheck.AndroidSpellCheckerSession: android.view.textservice.SuggestionsInfo[] onGetSuggestionsMultiple(android.view.textservice.TextInfo[],int,boolean)>
SOURCE|<android.widget.ExpandableListConnector: java.lang.Object getItem(int)>
SOURCE|<com.android.gallery3d.app.AlbumSetDataLoader: int getTotalCount(int)>
SOURCE|<java.security.cert.X509Certificate: javax.security.auth.x500.X500Principal getIssuerX500Principal()>
SOURCE|<com.android.musicfx.ControlPanelEffect: java.lang.Boolean getParameterBoolean(android.content.Context,java.lang.String,int,com.android.musicfx.ControlPanelEffect$Key)>
SOURCE|<android.emoji.EmojiFactory: java.lang.String getAndroidPuaFromVendorSpecificPua(java.lang.String)>
SOURCE|<android.inputmethodservice.KeyboardView: android.inputmethodservice.KeyboardView$OnKeyboardActionListener getOnKeyboardActionListener()>
SOURCE|<android.media.IRemoteControlClient$Stub: android.os.IBinder asBinder()>
SOURCE|<android.location.ILocationManager$Stub$Proxy: java.util.List getAllProviders()>
SOURCE|<android.os.DropBoxManager$Entry: java.lang.String getText(int)>
SOURCE|<android.app.ActivityManagerNative: android.os.IBinder asBinder()>
SOURCE|<javax.crypto.EncryptedPrivateKeyInfo: byte[] getEncryptedData()>
SOURCE|<android.media.videoeditor.VideoEditorImpl: java.util.List getAllAudioTracks()>
SOURCE|<com.android.internal.telephony.gsm.GSMPhone: com.android.internal.telephony.Call getForegroundCall()>
SOURCE|<com.android.internal.telephony.ITelephony$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
SOURCE|<android.net.wifi.IWifiManager$Stub$Proxy: int getWifiApEnabledState()>
SOURCE|<com.android.inputmethod.keyboard.MainKeyboardView: com.android.inputmethod.keyboard.PointerTracker$DrawingProxy getDrawingProxy()>
SOURCE|<java.net.Socks4Message: java.lang.String getUserId()>
SOURCE|<android.text.Layout: int getParagraphLeft(int)>
SOURCE|<android.view.MotionEvent: float getHistoricalY(int,int)>
SOURCE|<android.content.res.XmlBlock$Parser: float getAttributeFloatValue(int,float)>
SOURCE|<android.drm.DrmUtils: android.drm.DrmUtils$ExtendedMetadataParser getExtendedMetadataParser(byte[])>
SOURCE|<com.android.server.input.PersistentDataStore$InputDeviceState: java.lang.String getCurrentKeyboardLayout()>
SOURCE|<android.bluetooth.BluetoothAdapter: int getDiscoverableTimeout()>
SOURCE|<com.android.videoeditor.OverlayType: com.android.videoeditor.OverlayType[] getOverlays(android.content.Context)>
SOURCE|<android.inputmethodservice.ExtractEditLayout$ExtractActionMode: java.lang.CharSequence getTitle()>
SOURCE|<libcore.io.ForwardingOs: java.net.InetAddress getsockoptInAddr(java.io.FileDescriptor,int,int)>
SOURCE|<android.preference.Preference: android.content.SharedPreferences$Editor getEditor()>
SOURCE|<com.android.internal.telephony.sip.SipPhone$SipCall: com.android.internal.telephony.Connection dial(java.lang.String)>
SOURCE|<org.apache.http.util.EncodingUtils: byte[] getAsciiBytes(java.lang.String)>
SOURCE|<com.android.gallery3d.ui.TileImageView$Tile: int getTextureHeight()>
SOURCE|<android.speech.tts.TextToSpeechService$1: java.lang.String[] getLanguage()>
SOURCE|<com.android.emailcommon.utility.SSLUtils$TrackingKeyManager: java.security.PrivateKey getPrivateKey(java.lang.String)>
SOURCE|<java.nio.charset.UnmappableCharacterException: int getInputLength()>
SOURCE|<android.view.accessibility.IAccessibilityInteractionConnectionCallback$Stub: android.os.IBinder asBinder()>
SOURCE|<com.android.internal.os.BatteryStatsImpl$Uid: long getWifiRunningTime(long,int)>
SOURCE|<com.android.gallery3d.data.LocalAlbum: java.lang.String getLocalizedName(android.content.res.Resources,int,java.lang.String)>
SOURCE|<com.android.internal.os.BatteryStatsImpl$Uid$Proc: long getUserTime(int)>
SOURCE|<org.apache.http.impl.cookie.RFC2965PortAttributeHandler: int[] parsePortAttribute(java.lang.String)>
SOURCE|<java.util.OptionalDouble: double getAsDouble()>
SOURCE|<com.google.android.mms.util.PduCacheEntry: long getThreadId()>
SOURCE|<com.android.mms.MmsConfig: int getMaxImageWidth()>
SOURCE|<com.android.commands.monkey.MonkeyKeyEvent: int getKeyCode()>
SOURCE|<com.android.exchange.EasOutboxService$SendMailEntity: long getContentLength()>
SOURCE|<android.accounts.AccountManagerService: android.accounts.AuthenticatorDescription[] getAuthenticatorTypes()>
SOURCE|<android.nfc.tech.NfcB: byte[] getProtocolInfo()>
SOURCE|<com.android.bluetooth.btservice.Config: java.lang.Class[] getSupportedProfiles()>
SOURCE|<com.google.common.collect.MapMakerInternalMap$SoftExpirableEntry: long getExpirationTime()>
SOURCE|<android.preference.PreferenceScreen: android.app.Dialog getDialog()>
SOURCE|<android.media.IAudioService$Stub$Proxy: int getMasterStreamType()>
SOURCE|<android.net.ProxyProperties: int getPort()>
SOURCE|<com.android.server.BackupManagerService: android.app.IBackupAgent bindToAgentSynchronous(android.content.pm.ApplicationInfo,int)>
SOURCE|<org.apache.http.conn.MultihomePlainSocketFactory: org.apache.http.conn.MultihomePlainSocketFactory getSocketFactory()>
SOURCE|<android.view.View: int getTopPaddingOffset()>
SOURCE|<libcore.net.http.HttpURLConnectionImpl: java.util.Map getRequestProperties()>
SOURCE|<android.net.http.Headers: java.lang.String getContentType()>
SOURCE|<com.google.android.apps.lightcycle.storage.LocalFileStorageManager: java.io.File getPanoDirectory()>
SOURCE|<android.location.IGpsStatusListener$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
SOURCE|<com.android.gallery3d.ui.PopupList$ItemDataAdapter: java.lang.Object getItem(int)>
SOURCE|<com.google.android.picasasync.UploadTaskEntry: java.lang.String getAuthTokenType()>
SOURCE|<com.android.gallery3d.data.LocalVideo: int getWidth()>
SOURCE|<com.coremedia.iso.boxes.SampleDependencyTypeBox: java.util.List getEntries()>
SOURCE|<android.graphics.Paint: android.graphics.Paint$Style getStyle()>
SOURCE|<android.nfc.INfcAdapterExtras$Stub$Proxy: android.os.Bundle close(java.lang.String,android.os.IBinder)>
SOURCE|<com.android.server.sip.SipService$SipSessionGroupExt: android.net.sip.SipProfile getLocalProfile()>
SOURCE|<com.google.android.mms.pdu.RetrieveConf: com.google.android.mms.pdu.EncodedStringValue getFrom()>
SOURCE|<com.android.browser.BrowserHistoryPage: android.view.View getTargetView(android.view.ContextMenu$ContextMenuInfo)>
SOURCE|<com.android.bluetooth.hdp.HealthService$BluetoothHealthBinder: java.util.List getConnectedHealthDevices()>
SOURCE|<com.android.server.am.UriPermissionOwner$ExternalToken: com.android.server.am.UriPermissionOwner getOwner()>
SOURCE|<android.view.MotionEvent: float getHistoricalPressure(int,int)>
SOURCE|<com.android.deskclock.widget.multiwaveview.Ease$Linear$1: float getInterpolation(float)>
SOURCE|<java.util.zip.Inflater: int getAdler()>
SOURCE|<com.android.mms.dom.smil.SmilParElementImpl$1: org.w3c.dom.smil.TimeList getBegin()>
SOURCE|<android.content.ContextWrapper: java.io.File getExternalCacheDir()>
SOURCE|<android.filterfw.core.KeyValueMap: int getInt(java.lang.String)>
SOURCE|<javax.crypto.EncryptedPrivateKeyInfo: java.security.spec.PKCS8EncodedKeySpec getKeySpec(java.security.Key,java.security.Provider)>
SOURCE|<android.net.sip.SipProfile: boolean getAutoRegistration()>
SOURCE|<com.android.gallery3d.app.ActivityState: android.view.MenuInflater getSupportMenuInflater()>
SOURCE|<android.view.animation.LinearInterpolator: float getInterpolation(float)>
SOURCE|<com.android.server.wm.WindowManagerService: int getPreferredOptionsPanelGravity()>
SOURCE|<gov.nist.javax.sip.address.TelURLImpl: java.lang.String getPhoneNumber()>
SOURCE|<java.nio.MappedByteBufferAdapter: byte get()>
SOURCE|<android.view.View: android.graphics.Matrix getInverseMatrix()>
SOURCE|<android.net.InterfaceConfiguration: java.lang.String getHardwareAddress()>
SOURCE|<com.google.android.mms.pdu.AcknowledgeInd: byte[] getTransactionId()>
SOURCE|<android.view.View: void getLocationInWindow(int[])>
SOURCE|<android.app.ActivityManager: java.util.List getRecentTasks(int,int)>
SOURCE|<java.time.OffsetDateTime: java.time.Month getMonth()>
SOURCE|<gov.nist.javax.sip.SipProviderImpl: javax.sip.ClientTransaction getNewClientTransaction(javax.sip.message.Request)>
SOURCE|<android.location.Geocoder: java.util.List getFromLocationName(java.lang.String,int,double,double,double,double)>
SOURCE|<android.net.INetworkPolicyManager$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
SOURCE|<android.net.Uri$StringUri: java.lang.String getScheme()>
SOURCE|<com.android.org.bouncycastle.asn1.DERPrintableString: byte[] getOctets()>
SOURCE|<android.net.IConnectivityManager$Stub$Proxy: java.lang.String[] getTetheredIfacePairs()>
SOURCE|<com.android.browser.view.BookmarkExpandableView$BookmarkAccountAdapter: java.lang.Object getGroup(int)>
SOURCE|<android.view.View: int getDefaultSize(int,int)>
SOURCE|<android.speech.tts.SynthesisRequest: int getPitch()>
SOURCE|<com.android.internal.telephony.gsm.GsmConnection: long getCreateTime()>
SOURCE|<com.android.providers.contacts.ContactsProvider2: java.lang.String getType(android.net.Uri)>
SOURCE|<android.view.animation.AnimationUtils: android.view.animation.Animation loadAnimation(android.content.Context,int)>
SOURCE|<com.android.emailcommon.internet.MimeMessage: java.lang.String getContentType()>
SOURCE|<com.google.common.collect.MapMakerInternalMap$StrongEntry: com.google.common.collect.MapMakerInternalMap$ReferenceEntry getNextExpirable()>
SOURCE|<android.view.FocusFinder: android.view.FocusFinder getInstance()>
SOURCE|<android.media.audiofx.EnvironmentalReverb: int getDecayTime()>
SOURCE|<com.android.contacts.model.Contact: java.lang.String getCustomRingtone()>
SOURCE|<android.widget.AdapterView: java.lang.Object getSelectedItem()>
SOURCE|<com.android.internal.policy.impl.PhoneFallbackEventHandler: android.app.SearchManager getSearchManager()>
SOURCE|<android.test.ServiceTestCase: android.content.Context getSystemContext()>
SOURCE|<com.android.inputmethod.latin.SettingsActivity: android.content.Intent getIntent()>
SOURCE|<android.view.Window: android.view.WindowManager getWindowManager()>
SOURCE|<com.android.contacts.list.PhoneNumberPickerFragment: com.android.contacts.list.ContactListFilter getFilter()>
SOURCE|<android.widget.RemoteViewsAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)>
SOURCE|<java.net.URL: int getDefaultPort()>
SOURCE|<com.android.mms.transaction.RetrieveTransaction: int getType()>
SOURCE|<android.telephony.gsm.SmsMessage: int getStatus()>
SOURCE|<android.hardware.Camera$Parameters: java.util.List getSupportedPictureSizes()>
SOURCE|<com.android.camera.CameraHolder: android.hardware.Camera$CameraInfo[] getCameraInfo()>
SOURCE|<java.util.concurrent.locks.ReentrantReadWriteLock: int getWriteHoldCount()>
SOURCE|<com.android.server.am.ActivityManagerService: android.content.pm.ActivityInfo getActivityInfoForUser(android.content.pm.ActivityInfo,int)>
SOURCE|<java.security.cert.PKIXCertPathChecker: java.lang.Object clone()>
SOURCE|<android.app.PendingIntent: android.app.PendingIntent getActivityAsUser(android.content.Context,int,android.content.Intent,int,android.os.Bundle,android.os.UserHandle)>
SOURCE|<java.lang.Class: java.lang.reflect.Constructor[] getConstructors()>
SOURCE|<android.content.Context: java.io.FileInputStream openFileInput(java.lang.String)>
SOURCE|<org.apache.http.conn.routing.HttpRoute: org.apache.http.HttpHost getHopTarget(int)>
SOURCE|<com.android.server.accessibility.TouchExplorer$ReceivedPointerTracker: float getLastReceivedUpPointerDownX()>
SOURCE|<android.webkit.HTML5VideoViewProxy: android.webkit.WebViewClassic getWebView()>
SOURCE|<java.security.cert.PKIXRevocationChecker: java.net.URI getOcspResponder()>
SOURCE|<com.android.gallery3d.filtershow.imageshow.ImageGeometry: com.android.gallery3d.filtershow.imageshow.GeometryMetadata$FLIP getLocalFlip()>
SOURCE|<com.android.gallery3d.data.LocalMediaItem: long getDateInMs()>
SOURCE|<android.app.TaskStackBuilder: android.app.TaskStackBuilder addParentStack(android.content.ComponentName)>
SOURCE|<com.android.browser.SuggestionsAdapter: long getItemId(int)>
SOURCE|<com.android.server.am.UsageStatsService: com.android.internal.os.PkgUsageStats[] getAllPkgUsageStats()>
SOURCE|<android.widget.LinearLayout: float getWeightSum()>
SOURCE|<com.android.contacts.list.DirectoryPartition: java.lang.String getDirectoryType()>
SOURCE|<android.content.res.AssetManager: java.lang.String[] getResourceStringArray(int)>
SOURCE|<android.view.HardwareLayer: int getHeight()>
SOURCE|<java.net.Authenticator: java.lang.String getRequestingProtocol()>
SOURCE|<android.nfc.tech.NfcA: android.nfc.tech.NfcA get(android.nfc.Tag)>
SOURCE|<com.android.launcher2.AppWidgetResizeFrame: android.graphics.Rect getWidgetSizeRanges(com.android.launcher2.Launcher,int,int,android.graphics.Rect)>
SOURCE|<android.net.rtp.AudioStream: android.net.rtp.AudioGroup getGroup()>
SOURCE|<android.hardware.LegacySensorManager: int getRotation()>
SOURCE|<java.lang.Long: java.lang.Long getLong(java.lang.String)>
SOURCE|<com.android.email.provider.EmailProvider: android.database.Cursor notificationQuery(android.net.Uri)>
SOURCE|<android.view.ViewGroup: boolean getChildVisibleRect(android.view.View,android.graphics.Rect,android.graphics.Point)>
SOURCE|<com.google.android.apps.lightcycle.panorama.PanoramaFrameOverlay: int getTextureId()>
SOURCE|<android.net.http.Headers: java.util.ArrayList getSetCookie()>
SOURCE|<java.time.zone.ZoneOffsetTransitionRule: java.time.ZoneOffset getOffsetAfter()>
SOURCE|<java.awt.font.NumericShaper: java.awt.font.NumericShaper getContextualShaper(int,int)>
SOURCE|<org.apache.harmony.security.x509.AuthorityKeyIdentifier: byte[] access$000(org.apache.harmony.security.x509.AuthorityKeyIdentifier)>
SOURCE|<android.content.Context: java.lang.String getString(int)>
SOURCE|<gov.nist.javax.sip.stack.SIPTransaction: gov.nist.javax.sip.stack.MessageChannel getMessageChannel()>
SOURCE|<android.webkit.MimeTypeMap: java.lang.String getExtensionFromMimeType(java.lang.String)>
SOURCE|<java.net.DatagramPacket: int getPort()>
SOURCE|<android.widget.ActivityChooserView$ActivityChooserViewAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)>
SOURCE|<android.webkit.WebSettingsClassic: boolean getNavDump()>
SOURCE|<android.telephony.gsm.SmsMessage: java.lang.String getDisplayMessageBody()>
SOURCE|<com.android.videoeditor.service.MovieMediaItem: com.android.videoeditor.service.MovieTransition getEndTransition()>
SOURCE|<com.coremedia.iso.boxes.CompositionTimeToSample$Entry: int getOffset()>
SOURCE|<java.lang.Class: java.lang.String getSimpleName()>
SOURCE|<com.android.internal.telephony.gsm.GSMPhone: void getPreferredNetworkType(android.os.Message)>
SOURCE|<org.apache.http.auth.NTCredentials: java.lang.String getPassword()>
SOURCE|<com.android.internal.preference.YesNoPreference: boolean getValue()>
SOURCE|<android.media.AudioManager$FocusEventHandlerDelegate: android.os.Handler getHandler()>
SOURCE|<android.app.AlertDialog$Builder: android.app.AlertDialog show()>
SOURCE|<android.view.KeyEvent: int getScanCode()>
SOURCE|<android.graphics.drawable.DrawableContainer$DrawableContainerState: int getConstantMinimumWidth()>
SOURCE|<com.android.providers.contacts.VoicemailContentProvider$UriData: com.android.providers.contacts.VoicemailUriType getUriType()>
SOURCE|<android.content.res.TypedArray: java.lang.CharSequence[] getTextArray(int)>
SOURCE|<android.provider.Settings$Global: java.lang.String getStringForUser(android.content.ContentResolver,java.lang.String,int)>
SOURCE|<com.adobe.xmp.options.Options: java.lang.String toString()>
SOURCE|<org.apache.http.params.HttpProtocolParams: java.lang.String getUserAgent(org.apache.http.params.HttpParams)>
SOURCE|<com.android.calendar.widget.CalendarAppWidgetService$CalendarFactory: int getViewTypeCount()>
SOURCE|<com.android.gallery3d.data.LocalImage: int getRotation()>
SOURCE|<android.media.AudioService$SetModeDeathHandler: int getPid()>
SOURCE|<com.android.internal.telephony.ISms$Stub: android.os.IBinder asBinder()>
SOURCE|<com.android.gallery3d.filtershow.imageshow.ImageSlave: com.android.gallery3d.filtershow.presets.ImagePreset getImagePreset()>
SOURCE|<org.apache.harmony.security.pkcs7.SignerInfo: java.math.BigInteger getSerialNumber()>
SOURCE|<com.google.common.collect.Multimaps$Keys: java.util.Iterator entryIterator()>
SOURCE|<android.webkit.HTML5VideoView: int getDuration()>
SOURCE|<com.android.server.IntentResolver: java.util.Iterator filterIterator()>
SOURCE|<android.text.method.DialerKeyListener: int getInputType()>
SOURCE|<gov.nist.javax.sip.SipStackImpl: java.lang.String[] getEnabledCipherSuites()>
SOURCE|<com.android.providers.contacts.DataRowHandler: long insert(android.database.sqlite.SQLiteDatabase,com.android.providers.contacts.TransactionContext,long,android.content.ContentValues)>
SOURCE|<android.bluetooth.BluetoothInputDevice: int getConnectionState(android.bluetooth.BluetoothDevice)>
SOURCE|<com.android.contacts.quickcontact.DataAction: java.lang.CharSequence getSubtitle()>
SOURCE|<com.android.internal.telephony.gsm.GSMPhone: void getCallWaiting(android.os.Message)>
SOURCE|<org.apache.james.mime4j.field.address.parser.SimpleCharStream: int getBeginLine()>
SOURCE|<com.google.android.mms.pdu.PduBody: com.google.android.mms.pdu.PduPart getPartByName(java.lang.String)>
SOURCE|<android.preference.CheckBoxPreference: java.lang.CharSequence getSummaryOff()>
SOURCE|<org.apache.harmony.xnet.provider.jsse.AbstractSessionContext: java.util.Enumeration getIds()>
SOURCE|<java.text.DateFormatSymbols: java.lang.String[] getMonths()>
SOURCE|<android.bluetooth.IBluetoothCallback$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
SOURCE|<android.view.accessibility.AccessibilityNodeInfo: int getActions()>
SOURCE|<android.net.Uri: java.util.List getQueryParameters(java.lang.String)>
SOURCE|<org.apache.harmony.xnet.provider.jsse.SSLEngineImpl: java.lang.String[] getSupportedProtocols()>
SOURCE|<java.lang.reflect.Array: java.lang.Object newInstance(java.lang.Class,int[])>
SOURCE|<android.widget.TableRow: android.view.View getVirtualChildAt(int)>
SOURCE|<com.android.server.NativeDaemonEvent: int getCode()>
SOURCE|<java.util.Calendar: java.util.Calendar getInstance(java.util.Locale)>
SOURCE|<com.android.server.DevicePolicyManagerService: int getPasswordMinimumNumeric(android.content.ComponentName,int)>
SOURCE|<android.net.ConnectivityManager: java.lang.String[] getTetherableUsbRegexs()>
SOURCE|<gov.nist.javax.sip.header.ims.PAssertedService: java.lang.String getSubserviceIdentifiers()>
SOURCE|<com.android.email.RefreshManager$RefreshStatusMap: com.android.email.RefreshManager$Status get(long)>
SOURCE|<java.util.concurrent.ScheduledThreadPoolExecutor: boolean getContinueExistingPeriodicTasksAfterShutdownPolicy()>
SOURCE|<android.net.DummyDataStateTracker: android.net.LinkCapabilities getLinkCapabilities()>
SOURCE|<com.android.gallery3d.ui.PositionController: float getFilmRatio()>
SOURCE|<com.android.contacts.datepicker.DatePicker$SavedState: int getYear()>
SOURCE|<com.android.org.bouncycastle.asn1.DERVisibleString: byte[] getOctets()>
SOURCE|<android.test.ActivityUnitTestCase: int getStartedActivityRequest()>
SOURCE|<com.android.contacts.detail.ContactDetailFragment$KindTitleViewEntry: java.lang.String getTitle()>
SOURCE|<com.android.exchange.adapter.Parser: java.io.InputStream getInput()>
SOURCE|<java.time.temporal.ChronoUnit: java.time.Duration getDuration()>
SOURCE|<android.webkit.CacheManager$CacheResult: int getHttpStatusCode()>
SOURCE|<java.time.temporal.ValueRange: long getMaximum()>
SOURCE|<com.android.nfc.dhimpl.NativeNfcManager: java.lang.String dump()>
SOURCE|<android.filterfw.format.PrimitiveFormat: android.filterfw.core.MutableFrameFormat createDoubleFormat(int,int)>
SOURCE|<android.database.CursorWindow: float getFloat(int,int)>
SOURCE|<android.widget.CursorTreeAdapter: int getGroupCount()>
SOURCE|<org.apache.harmony.xml.dom.DocumentImpl: org.w3c.dom.DOMImplementation getImplementation()>
SOURCE|<com.android.internal.view.IInputMethodManager$Stub: android.os.IBinder asBinder()>
SOURCE|<java.util.AbstractList$SubAbstractList: java.lang.Object get(int)>
SOURCE|<org.apache.harmony.xnet.provider.jsse.CipherSuite: org.apache.harmony.xnet.provider.jsse.CipherSuite getByName(java.lang.String)>
SOURCE|<java.util.zip.Deflater: int getTotalOut()>
SOURCE|<com.android.ex.variablespeed.EngineParameters: int getDecodeBufferInitialSize()>
SOURCE|<android.graphics.drawable.NinePatchDrawable: boolean getPadding(android.graphics.Rect)>
SOURCE|<android.location.Address: java.lang.String getPostalCode()>
SOURCE|<com.android.internal.telephony.cdma.CDMALTEPhone: java.lang.String getDeviceSvn()>
SOURCE|<android.support.v4.view.accessibility.AccessibilityNodeProviderCompat: java.lang.Object getProvider()>
SOURCE|<com.google.common.collect.AbstractMultimap$WrappedList: java.util.List getListDelegate()>
SOURCE|<com.google.common.collect.MapMakerInternalMap$Segment: com.google.common.collect.MapMakerInternalMap$ReferenceEntry getLiveEntry(java.lang.Object,int)>
SOURCE|<com.android.nfc.LlcpPacket: int getRemoteSap()>
SOURCE|<android.view.ViewConfiguration: int getKeyRepeatDelay()>
SOURCE|<com.android.videoeditor.service.MovieAudioTrack: java.lang.String getFilename()>
SOURCE|<com.android.exchange.Eas: java.lang.Double getProtocolVersionDouble(java.lang.String)>
SOURCE|<org.apache.harmony.xml.dom.CharacterDataImpl: java.lang.String getData()>
SOURCE|<com.android.emailcommon.internet.TextBody: java.io.InputStream getInputStream()>
SOURCE|<gov.nist.javax.sip.header.ims.PAccessNetworkInfo: java.lang.String getCGI3GPP()>
SOURCE|<com.android.internal.view.menu.MenuBuilder: android.graphics.drawable.Drawable getHeaderIcon()>
SOURCE|<android.view.animation.LayoutAnimationController: android.view.animation.Interpolator getInterpolator()>
SOURCE|<android.view.MotionEvent: float getTouchMajor(int)>
SOURCE|<com.android.contacts.list.ContactListAdapter: android.net.Uri getContactUri(int,android.database.Cursor)>
SOURCE|<android.app.admin.DevicePolicyManager: int getPasswordMinimumSymbols(android.content.ComponentName)>
SOURCE|<java.lang.ClassLoader: java.lang.Package[] getPackages()>
SOURCE|<android.renderscript.Program$BaseProgramBuilder: int getCurrentTextureIndex()>
SOURCE|<com.android.internal.view.menu.MenuBuilder: com.android.internal.view.menu.MenuBuilder getRootMenu()>
SOURCE|<android.widget.Editor$SelectionModifierCursorController: int getMaxTouchOffset()>
SOURCE|<android.media.IAudioService$Stub$Proxy: int getRingerMode()>
SOURCE|<gov.nist.javax.sip.header.ParametersHeader: gov.nist.core.NameValue getNameValue(java.lang.String)>
SOURCE|<android.webkit.WebViewClassic$Factory: android.webkit.WebStorage getWebStorage()>
SOURCE|<android.content.res.XmlBlock$Parser: int getLineNumber()>
SOURCE|<com.android.mms.util.ImageCacheService: com.android.mms.util.ImageCacheService$ImageData getImageData(java.lang.String,int)>
SOURCE|<java.sql.SQLException: java.lang.String getSQLState()>
SOURCE|<com.android.exchange.provider.ExchangeDirectoryProvider$GalContactRow: java.lang.Object[] getRow()>
SOURCE|<java.math.MathContext: java.math.RoundingMode getRoundingMode()>
SOURCE|<android.inputmethodservice.Keyboard: int[] getNearestKeys(int,int)>
SOURCE|<org.xml.sax.helpers.ParserAdapter$AttributeListAdapter: java.lang.String getType(java.lang.String,java.lang.String)>
SOURCE|<com.adobe.xmp.options.PropertyOptions: boolean getHasLanguage()>
SOURCE|<java.util.jar.JarInputStream: java.util.jar.JarEntry getNextJarEntry()>
SOURCE|<java.net.Socket: java.io.FileDescriptor getFileDescriptor$()>
SOURCE|<com.android.gallery3d.ui.GLView: com.android.gallery3d.ui.GLView getComponent(int)>
SOURCE|<com.android.inputmethod.compat.SuggestionsInfoCompatUtils: int getValueOf_RESULT_ATTR_HAS_RECOMMENDED_SUGGESTIONS()>
SOURCE|<com.android.contacts.util.DialogManager: android.app.Dialog onCreateDialog(int,android.os.Bundle)>
SOURCE|<android.hardware.Camera$Parameters: java.util.List getMeteringAreas()>
SOURCE|<com.android.i18n.phonenumbers.Phonemetadata$PhoneNumberDesc: java.lang.String getPossibleNumberPattern()>
SOURCE|<java.security.cert.TrustAnchor: java.security.PublicKey getCAPublicKey()>
SOURCE|<com.android.exchange.provider.ExchangeDirectoryProvider: long getAccountIdByName(android.content.Context,java.lang.String)>
SOURCE|<com.adobe.xmp.options.SerializeOptions: boolean getUseCompactFormat()>
SOURCE|<java.io.DataInputStream: float readFloat()>
SOURCE|<com.android.internal.policy.impl.keyguard.PagedView: int getChildIndexForRelativeOffset(int)>
SOURCE|<com.android.internal.telephony.PhoneProxy: com.android.internal.telephony.PhoneConstants$State getState()>
SOURCE|<com.android.gallery3d.data.ActionImage: java.lang.String getMimeType()>
SOURCE|<android.os.storage.StorageVolume: java.lang.String getPath()>
SOURCE|<android.accounts.AccountManager: android.accounts.AccountManagerFuture getAuthToken(android.accounts.Account,java.lang.String,android.os.Bundle,boolean,android.accounts.AccountManagerCallback,android.os.Handler)>
SOURCE|<android.app.ApplicationPackageManager: int getComponentEnabledSetting(android.content.ComponentName)>
SOURCE|<android.os.Bundle: java.util.ArrayList getParcelableArrayList(java.lang.String)>
SOURCE|<com.android.videoeditor.VideoEditorActivity: com.android.videoeditor.widgets.AudioTrackLinearLayout getAudioTrackLayout()>
SOURCE|<android.view.accessibility.AccessibilityRecord: int getToIndex()>
SOURCE|<gov.nist.javax.sip.header.AcceptEncoding: float getQValue()>
SOURCE|<android.app.IThumbnailRetriever$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
SOURCE|<org.xml.sax.helpers.ParserAdapter: boolean getFeature(java.lang.String)>
SOURCE|<java.util.logging.LogRecord: java.lang.Object[] getParameters()>
SOURCE|<android.media.videoeditor.MediaArtistNativeHelper: boolean getAudioflag()>
SOURCE|<libcore.util.ZoneInfoDB: java.util.TimeZone getSystemDefault()>
SOURCE|<android.widget.CursorTreeAdapter: android.view.View getChildView(int,int,boolean,android.view.View,android.view.ViewGroup)>
SOURCE|<android.mtp.MtpStorageInfo: int getStorageId()>
SOURCE|<android.app.ContextImpl: int getWallpaperDesiredMinimumHeight()>
SOURCE|<com.android.ex.chips.BaseRecipientAdapter: int getDestinationId()>
SOURCE|<com.android.gallery3d.exif.ExifTag: short getTagId()>
SOURCE|<com.android.videoeditor.service.MovieEffect: int getType()>
SOURCE|<com.android.contacts.model.AccountTypeManagerImpl: java.util.List getAccounts(boolean)>
SOURCE|<com.android.internal.telephony.SmsMessageBase: byte[] getPdu()>
SOURCE|<com.android.browser.homepages.Template$HashMapEntityData: com.android.browser.homepages.Template$ListEntityIterator getListIterator(java.lang.String)>
SOURCE|<com.android.deskclock.timer.TimerFragment$TimersListAdapter: long getItemId(int)>
SOURCE|<android.view.textservice.SpellCheckerSubtype: java.lang.CharSequence getDisplayName(android.content.Context,java.lang.String,android.content.pm.ApplicationInfo)>
SOURCE|<android.test.mock.MockContentResolver: android.content.IContentProvider acquireExistingProvider(android.content.Context,java.lang.String)>
SOURCE|<com.android.camera.ActivityBase: com.android.gallery3d.ui.ScreenNail reuseCameraScreenNail(boolean)>
SOURCE|<java.util.GregorianCalendar: int getMaximum(int)>
SOURCE|<com.android.mms.model.LayoutModel: com.android.mms.model.RegionModel getTextRegion()>
SOURCE|<java.security.spec.DSAPrivateKeySpec: java.math.BigInteger getX()>
SOURCE|<com.android.email.Preferences: boolean getForceOneMinuteRefresh()>
SOURCE|<com.android.server.NetworkManagementService: java.lang.String[] getDnsForwarders()>
SOURCE|<com.android.mms.transaction.TransactionState: android.net.Uri getContentUri()>
SOURCE|<com.android.server.NetworkManagementService: android.net.RouteInfo[] getRoutes(java.lang.String)>
SOURCE|<org.apache.http.impl.SocketHttpServerConnection: int getRemotePort()>
SOURCE|<org.apache.harmony.security.fortress.Services: java.util.List getProvidersList()>
SOURCE|<java.security.Permission: java.security.PermissionCollection newPermissionCollection()>
SOURCE|<java.util.Calendar: java.util.Calendar getInstance(java.util.TimeZone,java.util.Locale)>
SOURCE|<java.security.spec.PSSParameterSpec: java.security.spec.AlgorithmParameterSpec getMGFParameters()>
SOURCE|<com.android.internal.telephony.sip.SipPhone: java.util.List getPendingMmiCodes()>
SOURCE|<gov.nist.javax.sip.header.SubscriptionState: int getExpires()>
SOURCE|<android.os.Message: long getWhen()>
SOURCE|<android.nfc.tech.NfcB: byte[] transceive(byte[],boolean)>
SOURCE|<org.apache.http.conn.routing.HttpRoute: int getHopCount()>
SOURCE|<com.android.contacts.group.SuggestedMemberListAdapter$SuggestedMember: java.lang.String getExtraInfo()>
SOURCE|<android.app.SearchableInfo$ActionKeyInfo: java.lang.String getSuggestActionMsgColumn()>
SOURCE|<android.widget.RemoteViewsService: java.util.HashMap access$100()>
SOURCE|<com.android.contacts.util.MemoryUtils: long getTotalMemorySize()>
SOURCE|<android.opengl.GLSurfaceView$GLThread: int getRenderMode()>
SOURCE|<com.android.videoeditor.service.MovieMediaItem: long getAppBoundaryEndTime()>
SOURCE|<org.apache.http.auth.AuthState: org.apache.http.auth.AuthScheme getAuthScheme()>
SOURCE|<org.apache.harmony.xnet.provider.jsse.FileClientSessionCache$Impl: byte[] getSessionData(java.lang.String,int)>
SOURCE|<com.android.internal.telephony.Connection: com.android.internal.telephony.Call$State getState()>
SOURCE|<com.android.browser.util.ThreadedCursorAdapter: int getCount()>
SOURCE|<android.app.backup.IFullBackupRestoreObserver$Stub: android.os.IBinder asBinder()>
SOURCE|<com.android.contacts.activities.ActionBarAdapter$CustomArrayAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)>
SOURCE|<android.provider.Settings$System: java.lang.String getStringForUser(android.content.ContentResolver,java.lang.String,int)>
SOURCE|<com.android.internal.view.menu.MenuItemImpl: int getOrdering()>
SOURCE|<com.android.server.TextServicesManagerService: android.view.textservice.SpellCheckerInfo getCurrentSpellChecker(java.lang.String)>
SOURCE|<javax.net.ssl.SSLServerSocketFactory: javax.net.ServerSocketFactory getDefault()>
SOURCE|<android.database.sqlite.SQLiteDatabase: java.lang.String getPath()>
SOURCE|<com.android.internal.view.IInputMethodManager$Stub$Proxy: java.util.List getShortcutInputMethodsAndSubtypes()>
SOURCE|<com.android.commands.monkey.MonkeySourceNetworkVars$5: java.lang.String get()>
SOURCE|<android.view.View: android.view.View getRootView()>
SOURCE|<android.accessibilityservice.IAccessibilityServiceConnection$Stub$Proxy: float findAccessibilityNodeInfoByAccessibilityId(int,long,int,android.view.accessibility.IAccessibilityInteractionConnectionCallback,int,long)>
SOURCE|<java.text.DateFormat: java.lang.Object clone()>
SOURCE|<org.apache.james.mime4j.field.datetime.parser.SimpleCharStream: int getBeginColumn()>
SOURCE|<com.android.internal.telephony.UUSInfo: byte[] getUserData()>
SOURCE|<android.view.animation.BounceInterpolator: float getInterpolation(float)>
SOURCE|<java.text.Bidi: int getRunLimit(int)>
SOURCE|<java.util.concurrent.ScheduledThreadPoolExecutor: java.util.concurrent.BlockingQueue getQueue()>
SOURCE|<android.webkit.CookieManager: android.webkit.CookieManager getInstance()>
SOURCE|<com.android.browser.SnapshotTab: android.content.ContentValues createSnapshotValues()>
SOURCE|<org.apache.http.impl.io.HttpTransportMetricsImpl: long getBytesTransferred()>
SOURCE|<android.accounts.AccountManager: java.lang.Exception access$400(android.accounts.AccountManager,int,java.lang.String)>
SOURCE|<com.android.contacts.group.GroupDetailFragment: long getGroupId()>
SOURCE|<javax.xml.parsers.DocumentBuilder: javax.xml.validation.Schema getSchema()>
SOURCE|<android.telephony.TelephonyManager: int getSimState()>
SOURCE|<android.app.SharedPreferencesImpl: float getFloat(java.lang.String,float)>
SOURCE|<com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata: com.android.i18n.phonenumbers.Phonemetadata$NumberFormat getNumberFormat(int)>
SOURCE|<com.android.emailcommon.internet.MimeMultipart: java.lang.String getSubTypeForTest()>
SOURCE|<java.util.Calendar: int get(int)>
SOURCE|<com.android.phone.DTMFTwelveKeyDialer$DTMFKeyListener: char[] getAcceptedChars()>
SOURCE|<java.lang.Package: java.lang.Package getPackage(java.lang.String)>
SOURCE|<android.view.View: int getNextFocusLeftId()>
SOURCE|<android.view.InputDevice$MotionRange: float getMax()>
SOURCE|<com.android.gallery3d.ui.BitmapTexture: int getTextureWidth()>
SOURCE|<android.view.ActionMode: boolean getTitleOptionalHint()>
SOURCE|<com.android.ex.chips.RecipientChip: long getContactId()>
SOURCE|<com.android.deskclock.worldclock.CitiesActivity$CityAdapter: java.lang.Object getItem(int)>
SOURCE|<com.android.email.activity.UIControllerTwoPane: long getMailboxSettingsMailboxId()>
SOURCE|<com.android.contacts.model.account.AccountType: java.lang.String getViewStreamItemActivity()>
SOURCE|<com.android.exchange.utility.CalendarUtilities: com.android.emailcommon.provider.EmailContent$Message createMessageForEventId(android.content.Context,long,int,java.lang.String,com.android.emailcommon.provider.Account)>
SOURCE|<android.nfc.INfcTag$Stub$Proxy: int getMaxTransceiveLength(int)>
SOURCE|<android.widget.TextView: float getLineSpacingMultiplier()>
SOURCE|<android.app.TaskStackBuilder: android.content.Intent[] getIntents()>
SOURCE|<com.android.internal.telephony.WspTypeDecoder: java.util.HashMap getContentParameters()>
SOURCE|<android.graphics.drawable.Drawable: int getLayoutDirection()>
SOURCE|<java.nio.ShortBuffer: java.nio.ShortBuffer get(short[])>
SOURCE|<org.apache.harmony.xml.dom.NodeImpl: org.w3c.dom.Node getPreviousSibling()>
SOURCE|<com.android.org.bouncycastle.asn1.DERBitString: int getPadBits(int)>
SOURCE|<android.speech.tts.SynthesisRequest: java.lang.String getVariant()>
SOURCE|<android.widget.LinearLayout: int getDividerWidth()>
SOURCE|<com.android.emailcommon.utility.SSLUtils: com.android.emailcommon.utility.SSLSocketFactory getHttpSocketFactory(boolean,javax.net.ssl.KeyManager)>
SOURCE|<com.android.contacts.model.account.ExternalAccountType: java.util.List getExtensionPackageNames()>
SOURCE|<com.android.org.bouncycastle.asn1.DERGeneralizedTime: com.android.org.bouncycastle.asn1.ASN1GeneralizedTime getInstance(com.android.org.bouncycastle.asn1.ASN1TaggedObject,boolean)>
SOURCE|<android.database.CursorWrapper: long getLong(int)>
SOURCE|<android.app.ApplicationPackageManager: java.util.List queryIntentActivities(android.content.Intent,int)>
SOURCE|<android.provider.MediaStore$Images$Thumbnails: android.database.Cursor queryMiniThumbnail(android.content.ContentResolver,long,int,java.lang.String[])>
SOURCE|<java.io.File: java.io.File getAbsoluteFile()>
SOURCE|<java.net.DatagramSocket: int getLocalPort()>
SOURCE|<com.google.common.collect.ForwardingMultiset: java.lang.String standardToString()>
SOURCE|<android.widget.AutoCompleteTextView: int getDropDownHorizontalOffset()>
SOURCE|<java.time.chrono.JapaneseDate: long getLong(java.time.temporal.TemporalField)>
SOURCE|<android.location.ILocationManager$Stub$Proxy: java.lang.String getFromLocation(double,double,int,android.location.GeocoderParams,java.util.List)>
SOURCE|<com.android.emailcommon.internet.MimeBodyPart: java.lang.String getContentType()>
SOURCE|<java.net.URL: java.lang.String getRef()>
SOURCE|<com.google.common.collect.ImmutableEntry: java.lang.Object getValue()>
SOURCE|<android.content.res.Resources: java.lang.String getResourceTypeName(int)>
SOURCE|<android.webkit.WebSettings: java.lang.String getSerifFontFamily()>
SOURCE|<org.apache.harmony.xml.ExpatAttributes: java.lang.String getValue(int)>
SOURCE|<android.content.ContentProvider: android.content.IContentProvider getIContentProvider()>
SOURCE|<org.apache.http.message.BasicHeader: java.lang.String getValue()>
SOURCE|<android.widget.RemoteViewsAdapter: android.content.Intent getRemoteViewsServiceIntent()>
SOURCE|<com.android.email.activity.AccountSelectorAdapter$CursorWithExtras: long getAccountId()>
SOURCE|<android.filterpacks.imageproc.AlphaBlendFilter: android.filterfw.core.Program getShaderProgram(android.filterfw.core.FilterContext)>
SOURCE|<android.content.Intent: android.os.Bundle getBundleExtra(java.lang.String)>
SOURCE|<android.telephony.TelephonyManager: java.lang.String getLine1Number()>
SOURCE|<android.text.style.CharacterStyle: android.text.style.CharacterStyle getUnderlying()>
SOURCE|<android.content.pm.PackageManager: void getPackageSizeInfo(java.lang.String,android.content.pm.IPackageStatsObserver)>
SOURCE|<com.android.email.mail.store.imap.ImapMemoryLiteral: java.io.InputStream getAsStream()>
SOURCE|<android.webkit.WebSettings: int getUserAgent()>
SOURCE|<com.android.calendar.widget.CalendarAppWidgetService$CalendarFactory: android.widget.RemoteViews getViewAt(int)>
SOURCE|<org.apache.http.message.AbstractHttpMessage: org.apache.http.Header[] getAllHeaders()>
SOURCE|<android.webkit.ZoomManager: android.view.ScaleGestureDetector getScaleGestureDetector()>
SOURCE|<android.os.Bundle: java.lang.CharSequence getCharSequence(java.lang.String,java.lang.CharSequence)>
SOURCE|<android.webkit.HTML5VideoView: boolean getStartWhenPrepared()>
SOURCE|<com.google.android.apps.lightcycle.opengl.GLTexture: int getIndex()>
SOURCE|<com.android.i18n.phonenumbers.geocoding.DefaultMapStorage: int getPrefix(int)>
SOURCE|<com.android.contacts.list.ProfileAndContactsLoader: android.database.Cursor loadInBackground()>
SOURCE|<com.android.org.bouncycastle.asn1.ASN1Set$1: com.android.org.bouncycastle.asn1.ASN1Primitive getLoadedObject()>
SOURCE|<android.view.LayoutInflater: android.view.View createViewFromTag(android.view.View,java.lang.String,android.util.AttributeSet)>
SOURCE|<libcore.util.ZoneInfoDB: java.lang.String[] getAvailableIDs()>
SOURCE|<com.android.emailcommon.provider.Account: java.lang.String getProtocol(android.content.Context)>
SOURCE|<android.location.ICountryListener$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
SOURCE|<android.widget.DatePicker: boolean getCalendarViewShown()>
SOURCE|<com.android.providers.userdictionary.UserDictionaryProvider: java.lang.String getType(android.net.Uri)>
SOURCE|<android.webkit.WebResourceResponse: java.lang.String getMimeType()>
SOURCE|<android.widget.TextView$Marquee: float getMaxFadeScroll()>
SOURCE|<com.android.internal.telephony.cdma.CDMAPhone: java.lang.String getLine1Number()>
SOURCE|<org.apache.james.mime4j.field.contenttype.parser.ContentTypeParser: java.lang.String getSubType()>
SOURCE|<com.android.internal.telephony.sip.SipPhoneBase: com.android.internal.telephony.IccFileHandler getIccFileHandler()>
SOURCE|<org.apache.harmony.xnet.provider.jsse.SSLEngineImpl: boolean getEnableSessionCreation()>
SOURCE|<android.webkit.WebBackForwardList: int getCurrentIndex()>
SOURCE|<android.net.http.Connection: org.apache.http.protocol.HttpContext getHttpContext()>
SOURCE|<com.android.server.am.CompatModePackages: int getPackageScreenCompatModeLocked(java.lang.String)>
SOURCE|<com.android.server.NativeDaemonEvent: java.lang.String getMessage()>
SOURCE|<com.android.contacts.widget.IndexerListAdapter: com.android.contacts.widget.IndexerListAdapter$Placement getItemPlacementInSection(int)>
SOURCE|<org.kxml2.io.KXmlParser: int getAttributeCount()>
SOURCE|<android.app.admin.DeviceAdminReceiver: android.content.ComponentName getWho(android.content.Context)>
SOURCE|<org.apache.http.message.BasicStatusLine: org.apache.http.ProtocolVersion getProtocolVersion()>
SOURCE|<javax.xml.parsers.SAXParser: void parse(java.io.InputStream,org.xml.sax.HandlerBase)>
SOURCE|<android.net.IConnectivityManager$Stub$Proxy: java.lang.String[] getTetherableWifiRegexs()>
SOURCE|<java.lang.String: void getBytes(int,int,byte[],int)>
SOURCE|<java.time.MonthDay: int getDayOfMonth()>
SOURCE|<java.nio.DirectByteBuffer: long getLong()>
SOURCE|<com.android.internal.telephony.cdma.SmsMessage: int getNumOfVoicemails()>
SOURCE|<android.test.mock.MockContentProvider: java.lang.String getType(android.net.Uri)>
SOURCE|<com.android.internal.telephony.PhoneProxy: void getCallWaiting(android.os.Message)>
SOURCE|<javax.crypto.spec.OAEPParameterSpec: java.lang.String getDigestAlgorithm()>
SOURCE|<android.net.wifi.p2p.WifiP2pGroup: android.net.wifi.p2p.WifiP2pDevice getOwner()>
SOURCE|<com.android.server.connectivity.Tethering: java.lang.String[] getTetherableBluetoothRegexs()>
SOURCE|<com.adobe.xmp.options.SerializeOptions: java.lang.String getIndent()>
SOURCE|<com.android.contacts.model.account.BaseAccountType$WebsiteKindBuilder: java.lang.String getTagName()>
SOURCE|<com.google.common.collect.BstModificationResult: com.google.common.collect.BstNode getChangedTarget()>
SOURCE|<android.view.ViewConfiguration: int getEdgeSlop()>
SOURCE|<java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet$UnmodifiableMapEntry: java.lang.Object getKey()>
SOURCE|<com.android.nfc.dhimpl.NativeNfcTag: byte[] getUid()>
SOURCE|<javax.crypto.Mac: javax.crypto.Mac getInstance(java.lang.String,java.lang.String)>
SOURCE|<android.telephony.SignalStrength: int getCdmaDbm()>
SOURCE|<com.android.contacts.model.account.AccountType: java.lang.CharSequence getDisplayLabel(android.content.Context)>
SOURCE|<android.test.mock.MockResources: void getValue(java.lang.String,android.util.TypedValue,boolean)>
SOURCE|<com.android.server.am.ServiceRecord: int getLastStartId()>
SOURCE|<gov.nist.javax.sip.address.SipUri: java.lang.String getMethod()>
SOURCE|<com.android.server.InputMethodManagerService: java.util.List getShortcutInputMethodsAndSubtypes()>
SOURCE|<android.widget.TextView: boolean getIncludeFontPadding()>
SOURCE|<android.widget.Spinner: int getDropDownHorizontalOffset()>
SOURCE|<com.android.videoeditor.OverlayType: java.lang.String getName()>
SOURCE|<org.apache.http.message.HeaderGroup: org.apache.http.Header[] getAllHeaders()>
SOURCE|<com.android.calendar.selectcalendars.SelectSyncedCalendarsMultiAccountAdapter: java.lang.CharSequence getLabelForType(java.lang.String)>
SOURCE|<android.view.HardwareRenderer: boolean initializeIfNeeded(int,int,android.view.Surface)>
SOURCE|<android.widget.ImageView: int getMaxWidth()>
SOURCE|<gov.nist.javax.sip.header.RetryAfter: int getRetryAfter()>
SOURCE|<com.android.systemui.recent.RecentTasksLoader: android.graphics.Bitmap getDefaultThumbnail()>
SOURCE|<android.hardware.display.WifiDisplayStatus: android.hardware.display.WifiDisplay getActiveDisplay()>
SOURCE|<android.nfc.tech.NfcV: android.nfc.tech.NfcV get(android.nfc.Tag)>
SOURCE|<android.app.ContextImpl: android.content.ContentResolver getContentResolver()>
SOURCE|<com.android.server.pm.PackageManagerService: java.lang.String getNameForUid(int)>
SOURCE|<com.android.gallery3d.picasasource.PicasaAlbum$CoverItem: int getWidth()>
SOURCE|<java.security.KeyFactory: java.security.KeyFactory getInstance(java.lang.String)>
SOURCE|<java.util.concurrent.atomic.AtomicLongArray: long get(int)>
SOURCE|<android.provider.MediaStore$Files: android.net.Uri getContentUri(java.lang.String)>
SOURCE|<gov.nist.javax.sip.header.AddressParametersHeader: javax.sip.address.Address getAddress()>
SOURCE|<com.android.exchange.adapter.EmailSyncAdapter: java.lang.String getSyncKey()>
SOURCE|<com.android.contacts.model.dataitem.DataItem: int getKindTypeColumn()>
SOURCE|<javax.net.ssl.SSLContext: javax.net.ssl.SSLServerSocketFactory getServerSocketFactory()>
SOURCE|<org.apache.harmony.xml.dom.DocumentTypeImpl: short getNodeType()>
SOURCE|<com.android.contacts.activities.ConfirmAddDetailActivity: com.android.contacts.util.DialogManager getDialogManager()>
SOURCE|<com.android.internal.telephony.sip.SipPhoneBase: java.lang.String getIccSerialNumber()>
SOURCE|<com.android.internal.telephony.cdma.CDMAPhone: java.util.List getPendingMmiCodes()>
SOURCE|<android.webkit.HTML5Audio$IsPrivateBrowsingEnabledGetter: boolean get()>
SOURCE|<android.content.Loader: android.content.Context getContext()>
SOURCE|<com.android.ex.chips.BaseRecipientAdapter$DirectoryFilter: int getLimit()>
SOURCE|<java.sql.SQLException: java.sql.SQLException getNextException()>
SOURCE|<com.android.systemui.statusbar.phone.PanelHolder: int getChildDrawingOrder(int,int)>
SOURCE|<com.android.camera.FocusOverlayManager: java.util.List getMeteringAreas()>
SOURCE|<com.android.internal.view.menu.MenuBuilder: android.view.View getHeaderView()>
SOURCE|<android.test.ProviderTestCase2: android.content.ContentProvider getProvider()>
SOURCE|<com.android.mms.model.ImageModel: android.graphics.Bitmap getBitmap(int,int)>
SOURCE|<com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata: java.lang.String getNationalPrefix()>
SOURCE|<com.android.internal.policy.impl.keyguard.KeyguardSecurityViewFlipper: com.android.internal.policy.impl.keyguard.KeyguardSecurityCallback getCallback()>
SOURCE|<android.nfc.tech.IsoDep: android.nfc.tech.IsoDep get(android.nfc.Tag)>
SOURCE|<org.apache.http.impl.client.DefaultRedirectHandler: java.net.URI getLocationURI(org.apache.http.HttpResponse,org.apache.http.protocol.HttpContext)>
SOURCE|<com.android.gallery3d.picasasource.PicasaSource: long getTotalTargetCacheSize()>
SOURCE|<com.android.org.bouncycastle.asn1.DERObjectIdentifier: byte[] getBody()>
SOURCE|<gov.nist.javax.sip.stack.TLSMessageChannel: java.lang.String getPeerAddress()>
SOURCE|<com.android.server.pm.PackageManagerService: java.util.List queryIntentServices(android.content.Intent,java.lang.String,int,int)>
SOURCE|<org.apache.harmony.xnet.provider.jsse.OpenSSLRSAPrivateKey: java.lang.String getFormat()>
SOURCE|<com.android.bluetooth.hdp.HealthService: java.util.List getConnectedHealthDevices()>
SOURCE|<com.android.gallery3d.data.Cluster: com.android.gallery3d.data.SmallItem getLastItem()>
SOURCE|<org.apache.harmony.security.x509.IssuingDistributionPoint$1: java.lang.Object getDecodedObject(org.apache.harmony.security.asn1.BerInputStream)>
SOURCE|<com.android.internal.policy.impl.keyguard.KeyguardUpdateMonitor: java.lang.CharSequence getTelephonySpn()>
SOURCE|<com.android.gallery3d.ui.GLPaint: int getColor()>
SOURCE|<org.apache.harmony.xnet.provider.jsse.OpenSSLSocketImplWrapper: boolean getOOBInline()>
SOURCE|<javax.crypto.ExemptionMechanism: byte[] genExemptionBlob()>
SOURCE|<com.android.deskclock.widget.multiwaveview.Ease$Quad$3: float getInterpolation(float)>
SOURCE|<org.apache.harmony.security.x509.SubjectPublicKeyInfo$1: java.lang.Object getDecodedObject(org.apache.harmony.security.asn1.BerInputStream)>
SOURCE|<java.util.Calendar: java.lang.String getDisplayName(int,int,java.util.Locale)>
SOURCE|<java.util.concurrent.ThreadPoolExecutor: long getTaskCount()>
SOURCE|<com.android.email.NotificationController: com.android.email.NotificationController getInstance(android.content.Context)>
SOURCE|<com.android.gallery3d.ui.FlingScroller: int getFinalY()>
SOURCE|<com.android.server.accessibility.ScreenMagnifier$MagnificationController: float getScale()>
SOURCE|<android.bluetooth.IBluetoothManagerCallback$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
SOURCE|<android.text.style.ForegroundColorSpan: int getSpanTypeId()>
SOURCE|<com.android.internal.telephony.PhoneProxy: java.lang.String getVoiceMailNumber()>
SOURCE|<com.android.org.bouncycastle.asn1.DERUniversalString: java.lang.String getString()>
SOURCE|<android.webkit.WebViewClassic: android.webkit.WebViewClient getWebViewClient()>
SOURCE|<com.android.gallery3d.ui.ScrollerHelper: float getCurrVelocity()>
SOURCE|<android.hardware.usb.UsbDevice: int getDeviceId()>
SOURCE|<com.android.inputmethod.latin.ExpandableDictionary: android.content.Context getContext()>
SOURCE|<com.android.server.ClipboardService: android.content.ClipData getPrimaryClip(java.lang.String)>
SOURCE|<android.speech.tts.TextToSpeechService$SynthesisSpeechItem: java.lang.String getLanguage()>
SOURCE|<com.android.calendar.agenda.AgendaByDayAdapter: int getViewTypeCount()>
SOURCE|<gov.nist.javax.sip.stack.UDPMessageProcessor: gov.nist.javax.sip.stack.SIPTransactionStack getSIPStack()>
SOURCE|<android.graphics.Paint: android.graphics.ColorFilter getColorFilter()>
SOURCE|<android.content.SyncStorageEngine: java.util.List getCurrentSyncs(int)>
SOURCE|<com.android.contacts.model.account.BaseAccountType$EmailKindBuilder: java.lang.String getTagName()>
SOURCE|<com.android.browser.BrowserHistoryPage$HistoryGroupWrapper: android.view.View getView(int,android.view.View,android.view.ViewGroup)>
SOURCE|<android.net.NetworkIdentity: java.lang.String getSubscriberId()>
SOURCE|<android.net.sip.ISipService$Stub$Proxy: android.net.sip.SipProfile[] getListOfProfiles()>
SOURCE|<org.apache.harmony.xnet.provider.jsse.OpenSSLDSAPrivateKey: org.apache.harmony.xnet.provider.jsse.OpenSSLKey getInstance(java.security.interfaces.DSAPrivateKey)>
SOURCE|<com.android.launcher2.Utilities: android.graphics.Bitmap resampleIconBitmap(android.graphics.Bitmap,android.content.Context)>
SOURCE|<com.android.mms.dom.smil.TimeImpl: double getResolvedOffset()>
SOURCE|<com.android.bluetooth.btservice.RemoteDevices: com.android.bluetooth.btservice.RemoteDevices$DeviceProperties getDeviceProperties(android.bluetooth.BluetoothDevice)>
SOURCE|<com.android.internal.util.MemInfoReader: long getCachedSize()>
SOURCE|<com.android.inputmethod.latin.LatinIME$BatchInputUpdater: com.android.inputmethod.latin.LatinIME$BatchInputUpdater getInstance()>
SOURCE|<org.xml.sax.helpers.AttributesImpl: java.lang.String getURI(int)>
SOURCE|<android.test.mock.MockPackageManager: android.content.pm.PermissionInfo getPermissionInfo(java.lang.String,int)>
SOURCE|<java.lang.ProcessManager$ProcessImpl: java.io.InputStream getErrorStream()>
SOURCE|<java.nio.file.Paths: java.nio.file.Path get(java.net.URI)>
SOURCE|<android.hardware.input.KeyboardLayout: java.lang.String getCollection()>
SOURCE|<android.widget.ExpandableListConnector: android.widget.ExpandableListConnector$PositionMetadata getUnflattenedPos(int)>
SOURCE|<org.apache.http.message.BasicLineParser: org.apache.http.StatusLine parseStatusLine(java.lang.String,org.apache.http.message.LineParser)>
SOURCE|<javax.net.ssl.SSLContext: javax.net.ssl.SSLSessionContext getClientSessionContext()>
SOURCE|<android.text.format.DateUtils: java.lang.String getAMPMString(int)>
SOURCE|<com.android.server.NativeDaemonEvent: int getCmdNumber()>
SOURCE|<com.android.inputmethod.keyboard.Key: int getMoreKeysColumn()>
SOURCE|<android.filterpacks.imageproc.ToPackedGrayFilter: android.filterfw.core.FrameFormat getOutputFormat(java.lang.String,android.filterfw.core.FrameFormat)>
SOURCE|<android.nfc.tech.MifareClassic: int getType()>
SOURCE|<com.android.internal.appwidget.IAppWidgetHost$Stub: android.os.IBinder asBinder()>
SOURCE|<android.os.Bundle: short getShort(java.lang.String,short)>
SOURCE|<com.android.deskclock.stopwatch.Stopwatches: java.lang.String getTimeText(long)>
SOURCE|<java.nio.HeapByteBuffer: char getChar()>
SOURCE|<com.android.internal.telephony.PhoneProxy: java.lang.String getImei()>
SOURCE|<org.apache.http.impl.auth.RFC2617Scheme: java.util.Map getParameters()>
SOURCE|<com.android.internal.telephony.PhoneProxy: void getCallForwardingOption(int,android.os.Message)>
SOURCE|<com.android.gallery3d.data.LocalAlbumSet: int getSubMediaSetCount()>
SOURCE|<com.android.internal.widget.DrawableHolder: float getScaleX()>
SOURCE|<com.android.contacts.model.account.ExternalAccountType: java.lang.String getViewContactNotifyServiceClassName()>
SOURCE|<android.net.http.SslCertificate: java.util.Date getValidNotAfterDate()>
SOURCE|<com.android.videoeditor.service.MovieTheme: com.android.videoeditor.service.MovieTransition getEndTransition()>
SOURCE|<com.android.mms.model.SlideModel: com.android.mms.model.AudioModel getAudio()>
SOURCE|<com.android.videoeditor.service.MovieAudioTrack: long getAppStartTime()>
SOURCE|<android.animation.PropertyValuesHolder$IntPropertyValuesHolder: java.lang.Object getAnimatedValue()>
SOURCE|<com.android.internal.view.menu.ActionMenuItem: char getAlphabeticShortcut()>
SOURCE|<android.net.http.Headers: java.lang.String getAcceptRanges()>
SOURCE|<com.android.contacts.list.ContactEntryListFragment: android.view.View getView()>
SOURCE|<java.net.NetworkInterface: java.util.Enumeration getSubInterfaces()>
SOURCE|<android.hardware.input.IInputManager$Stub: android.os.IBinder asBinder()>
SOURCE|<com.coremedia.iso.boxes.SampleTableBox: com.coremedia.iso.boxes.SyncSampleBox getSyncSampleBox()>
SOURCE|<com.android.internal.telephony.sip.SipPhoneBase: com.android.internal.telephony.IccSmsInterfaceManager getIccSmsInterfaceManager()>
SOURCE|<com.android.videoeditor.service.VideoEditorProject: int getMediaItemCount()>
SOURCE|<java.time.ZoneOffset: java.time.zone.ZoneRules getRules()>
SOURCE|<java.time.LocalDateTime: int getHour()>
SOURCE|<android.os.Bundle: boolean[] getBooleanArray(java.lang.String)>
SOURCE|<com.android.internal.telephony.gsm.GSMPhone: java.lang.String getDeviceId()>
SOURCE|<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: int getConnectionsInPool(org.apache.http.conn.routing.HttpRoute)>
SOURCE|<java.net.Socks4Message: int getIP()>
SOURCE|<android.view.ViewConfiguration: int getFadingEdgeLength()>
SOURCE|<com.android.email.FolderProperties: int getMessageCount(android.database.Cursor)>
SOURCE|<com.android.contacts.list.CustomContactListFilterActivity$GroupDelta: boolean getShouldSync()>
SOURCE|<com.android.internal.telephony.UsimFileHandler: java.lang.String getEFPath(int)>
SOURCE|<com.google.android.mms.pdu.GenericPdu: com.google.android.mms.pdu.EncodedStringValue getFrom()>
SOURCE|<android.app.ApplicationPackageManager: java.util.List queryIntentServicesAsUser(android.content.Intent,int,int)>
SOURCE|<com.android.gallery3d.ui.PositionController: int getImageWidth()>
SOURCE|<com.android.email.activity.MessageViewFragmentBase: long getAccountId()>
SOURCE|<com.android.gallery3d.data.SizeClustering: int getNumberOfClusters()>
SOURCE|<org.apache.http.impl.cookie.RFC2965Spec: org.apache.http.Header getVersionHeader()>
SOURCE|<com.android.server.MountService: java.lang.String getSecureContainerPath(java.lang.String)>
SOURCE|<android.net.nsd.NsdServiceInfo: java.lang.String getServiceName()>
SOURCE|<com.android.internal.policy.impl.keyguard.KeyguardWidgetFrame: float getContentAlpha()>
SOURCE|<java.util.concurrent.Phaser: int getUnarrivedParties()>
SOURCE|<android.net.http.Request: java.lang.String getHostPort()>
SOURCE|<com.android.exchange.adapter.Search: int searchMessages(android.content.Context,long,com.android.emailcommon.service.SearchParams,long)>
SOURCE|<android.view.MotionEvent: void getHistoricalPointerCoords(int,int,android.view.MotionEvent$PointerCoords)>
SOURCE|<java.security.KeyPairGenerator: java.security.Provider getProvider()>
SOURCE|<java.nio.charset.IllegalCharsetNameException: java.lang.String getCharsetName()>
SOURCE|<com.android.internal.telephony.SmsMessageBase: java.lang.String getServiceCenterAddress()>
SOURCE|<org.apache.harmony.security.asn1.ASN1Integer: java.lang.Object getDecodedObject(org.apache.harmony.security.asn1.BerInputStream)>
SOURCE|<com.android.contacts.group.GroupListItem: java.lang.String getAccountName()>
SOURCE|<com.android.calendar.EditResponseHelper: int getWhichEvents()>
SOURCE|<com.android.contacts.list.JoinContactListAdapter: int getItemViewType(int,int)>
SOURCE|<com.android.internal.backup.IBackupTransport$Stub$Proxy: int getRestoreData(android.os.ParcelFileDescriptor)>
SOURCE|<android.app.ApplicationPackageManager: android.graphics.drawable.Drawable getDrawable(java.lang.String,int,android.content.pm.ApplicationInfo)>
SOURCE|<android.hardware.Camera$Parameters: java.lang.String getSceneMode()>
SOURCE|<org.apache.harmony.xml.dom.DocumentTypeImpl: org.w3c.dom.NamedNodeMap getEntities()>
SOURCE|<com.android.phone.EmergencyCallbackModeService: long getEmergencyCallbackModeTimeout()>
SOURCE|<java.time.format.DateTimeFormatter: java.time.temporal.TemporalQuery parsedLeapSecond()>
SOURCE|<com.android.internal.telephony.cdma.CDMAPhone: com.android.internal.telephony.PhoneSubInfo getPhoneSubInfo()>
SOURCE|<org.apache.http.impl.io.ChunkedInputStream: int read(byte[],int,int)>
SOURCE|<android.renderscript.Mesh$Builder: android.renderscript.Type newType(android.renderscript.Element,int)>
SOURCE|<com.android.gallery3d.picasasource.PicasaImage: int getMediaType()>
SOURCE|<java.time.LocalTime: long getLong(java.time.temporal.TemporalField)>
SOURCE|<android.app.admin.IDevicePolicyManager$Stub$Proxy: int getPasswordQuality(android.content.ComponentName,int)>
SOURCE|<android.support.v4.view.AccessibilityDelegateCompat: java.lang.Object getBridge()>
SOURCE|<android.net.NetworkStats: java.lang.String[] getUniqueIfaces()>
SOURCE|<com.android.contacts.util.AsyncTaskExecutors: com.android.contacts.util.AsyncTaskExecutor createAsyncTaskExecutor()>
SOURCE|<java.util.concurrent.ThreadPoolExecutor: long getCompletedTaskCount()>
SOURCE|<gov.nist.javax.sip.header.ims.PServedUser: java.lang.String getSessionCase()>
SOURCE|<javax.crypto.Cipher: byte[] doFinal(byte[],int,int)>
SOURCE|<android.media.videoeditor.MediaImageItem: java.lang.String getScaledImageFileName()>
SOURCE|<android.view.accessibility.AccessibilityEvent: int getCurrentItemIndex()>
SOURCE|<com.android.ex.chips.RecipientEditTextView: android.graphics.drawable.Drawable getChipBackground(com.android.ex.chips.RecipientEntry)>
SOURCE|<android.graphics.Camera: void getMatrix(android.graphics.Matrix)>
SOURCE|<android.inputmethodservice.InputMethodService: boolean getCurrentInputStarted()>
SOURCE|<android.hardware.usb.UsbAccessory: java.lang.String getUri()>
SOURCE|<gov.nist.javax.sip.stack.SIPTransactionStack: java.util.Timer getTimer()>
SOURCE|<android.app.ContextImpl: java.io.File getDir(java.lang.String,int)>
SOURCE|<com.android.emailcommon.utility.SSLSocketFactory: java.net.Socket createSocket()>
SOURCE|<org.apache.harmony.xml.ExpatReader: org.xml.sax.ContentHandler getContentHandler()>
SOURCE|<android.database.CursorWindow: java.lang.String getString(int,int)>
SOURCE|<android.net.wifi.WifiNative: int getGroupCapability(java.lang.String)>
SOURCE|<com.android.gallery3d.data.MediaSet: int getTotalMediaItemCount()>
SOURCE|<com.android.gallery3d.filtershow.ui.ImageButtonTitle: java.lang.String getText()>
SOURCE|<android.widget.RemoteViews$SetEmptyView: java.lang.String getActionName()>
SOURCE|<android.bluetooth.IBluetoothA2dp$Stub$Proxy: java.util.List getDevicesMatchingConnectionStates(int[])>
SOURCE|<android.net.wifi.p2p.nsd.WifiP2pServiceResponse: int getTransactionId()>
SOURCE|<android.hardware.Camera$Parameters: java.lang.String getFocusMode()>
SOURCE|<android.view.textservice.SentenceSuggestionsInfo: int getSuggestionsCount()>
SOURCE|<com.android.internal.widget.multiwaveview.Ease$Sine$1: float getInterpolation(float)>
SOURCE|<com.android.org.bouncycastle.asn1.DERExternal: com.android.org.bouncycastle.asn1.ASN1ObjectIdentifier getDirectReference()>
SOURCE|<android.accounts.Account: java.lang.String toString()>
SOURCE|<com.android.mms.model.LayoutModel: java.lang.String getBackgroundColor()>
SOURCE|<com.android.internal.telephony.gsm.GSMPhone: com.android.internal.telephony.ServiceStateTracker getServiceStateTracker()>
SOURCE|<com.android.server.pm.PackageManagerService: java.lang.String getTempContainerId()>
SOURCE|<com.android.phone.PhoneUtils: android.net.Uri getProviderGatewayUri(android.content.Intent)>
SOURCE|<android.telephony.CellIdentityLte: android.telephony.CellIdentityLte copy()>
SOURCE|<com.android.contacts.list.JoinContactListAdapter: android.net.Uri getContactUri(int,android.database.Cursor)>
SOURCE|<android.content.pm.IPackageManager$Stub$Proxy: int getPreferredActivities(java.util.List,java.util.List,java.lang.String)>
SOURCE|<android.speech.tts.TextToSpeechService$SpeechItem: int getStreamType()>
SOURCE|<android.accounts.AccountManagerService$Session: java.lang.String toDebugString()>
SOURCE|<org.apache.http.impl.conn.tsccm.BasicPoolEntry: long getUpdated()>
SOURCE|<java.security.cert.X509CertSelector: java.util.Date getCertificateValid()>
SOURCE|<gov.nist.javax.sip.message.SIPMessage: java.lang.Object clone()>
SOURCE|<org.apache.http.impl.client.ClientParamsStack: org.apache.http.params.HttpParams getClientParams()>
SOURCE|<com.android.providers.contacts.ReorderingCursorWrapper: long getLong(int)>
SOURCE|<java.io.ObjectStreamClass: java.lang.reflect.Method getMethodWriteObject()>
SOURCE|<org.apache.http.impl.cookie.BestMatchSpec: org.apache.http.Header getVersionHeader()>
SOURCE|<com.android.server.LightsService: com.android.server.LightsService$Light getLight(int)>
SOURCE|<android.net.ConnectivityManager: int getLastTetherError(java.lang.String)>
SOURCE|<java.io.File: java.lang.String getAbsolutePath()>
SOURCE|<android.app.ActivityManager: android.app.ActivityManager$TaskThumbnails getTaskThumbnails(int)>
SOURCE|<org.apache.harmony.security.asn1.ASN1Choice: java.lang.Object decode(org.apache.harmony.security.asn1.BerInputStream)>
SOURCE|<java.lang.UnsafeByteSequence: byte[] toByteArray()>
SOURCE|<com.android.bluetooth.btservice.AdapterProperties: android.os.ParcelUuid[] getUuids()>
SOURCE|<com.android.contacts.model.Contact: long getPhotoId()>
SOURCE|<com.android.server.am.ActiveServices$ServiceMap: java.util.Collection getAllServices(int)>
SOURCE|<com.android.ex.variablespeed.EngineParameters: int getDecodeBufferMaxSize()>
SOURCE|<com.android.camera.Util: android.hardware.Camera$Size getOptimalPreviewSize(android.app.Activity,java.util.List,double)>
SOURCE|<java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>
SOURCE|<org.apache.http.impl.cookie.BasicClientCookie: java.lang.String getCommentURL()>
SOURCE|<android.view.accessibility.AccessibilityEvent: java.lang.CharSequence getClassName()>
SOURCE|<java.security.Provider: java.util.Set getServices()>
SOURCE|<com.android.musicfx.seekbar.ProgressBar: android.graphics.drawable.Drawable getProgressDrawable()>
SOURCE|<android.content.Intent: java.lang.String getStringExtra(java.lang.String)>
SOURCE|<android.app.Activity: android.content.SharedPreferences getPreferences(int)>
SOURCE|<com.google.android.picasasync.UploadTaskEntry: java.lang.String getCaption()>
SOURCE|<com.android.gallery3d.data.LocalMergeAlbum$FetchCache: com.android.gallery3d.data.MediaItem getItem(int)>
SOURCE|<com.android.internal.policy.impl.keyguard.KeyguardHostView$7: com.android.internal.policy.impl.keyguard.KeyguardSecurityCallback getCallback()>
SOURCE|<java.lang.reflect.Array: java.lang.Object get(java.lang.Object,int)>
SOURCE|<com.google.common.collect.MapMaker: int getInitialCapacity()>
SOURCE|<com.google.android.picasastore.FIFEUtil: java.lang.String getImageUriOptions(android.net.Uri)>
SOURCE|<gov.nist.javax.sip.message.SIPRequest: gov.nist.javax.sip.message.SIPRequest createBYERequest(boolean)>
SOURCE|<com.android.contacts.util.StreamItemEntry: java.lang.String getAccountType()>
SOURCE|<android.graphics.Paint: android.graphics.Paint$FontMetricsInt getFontMetricsInt()>
SOURCE|<com.google.common.collect.AbstractSetMultimap: java.util.Collection createCollection()>
SOURCE|<com.android.internal.app.ActionBarImpl$TabImpl: android.app.ActionBar$TabListener getCallback()>
SOURCE|<android.nfc.tech.MifareUltralight: android.nfc.Tag getTag()>
SOURCE|<android.app.IServiceConnection$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
SOURCE|<com.android.internal.view.IInputMethodCallback$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
SOURCE|<com.android.internal.telephony.PhoneProxy: java.lang.String[] getActiveApnTypes()>
SOURCE|<java.net.Socket: int getPort()>
SOURCE|<com.android.phone.sip.SipSharedPreferences: java.lang.String getPrimaryAccount()>
SOURCE|<android.database.CursorWindow: int getStartPosition()>
SOURCE|<android.location.GpsStatus: int getTimeToFirstFix()>
SOURCE|<android.text.BoringLayout: int getLineStart(int)>
SOURCE|<android.widget.TextView: java.lang.CharSequence getTextForAccessibility()>
SOURCE|<android.os.Environment$UserEnvironment: java.io.File getExternalStorageObbDirectory()>
SOURCE|<com.android.email.MessageListContext: com.android.emailcommon.service.SearchParams getSearchParams()>
SOURCE|<java.time.LocalDateTime: java.time.Month getMonth()>
SOURCE|<java.nio.Buffer: java.nio.Buffer flip()>
SOURCE|<com.google.common.collect.ComputingConcurrentHashMap$ComputedReference: com.google.common.collect.MapMakerInternalMap$ReferenceEntry getEntry()>
SOURCE|<com.android.internal.policy.impl.PhoneWindowManager: int getConfigDisplayWidth(int,int,int)>
SOURCE|<com.android.calendar.agenda.AgendaWindowAdapter: int getViewTypeCount()>
SOURCE|<android.view.GLES20Canvas: int saveLayerAlpha(android.graphics.RectF,int,int)>
SOURCE|<com.android.server.am.ProcessRecord: java.lang.String[] getPackageList()>
SOURCE|<android.renderscript.Type: int getY()>
SOURCE|<com.android.internal.telephony.CallForwardInfo: java.lang.String toString()>
SOURCE|<java.nio.charset.CharsetDecoder: float maxCharsPerByte()>
SOURCE|<com.android.i18n.phonenumbers.Phonemetadata$NumberFormat: java.lang.String getPattern()>
SOURCE|<android.speech.tts.TextToSpeechService$SpeechItem: int getIntParam(java.lang.String,int)>
SOURCE|<gov.nist.javax.sip.stack.SIPDialog: java.lang.String getRemoteTag()>
SOURCE|<android.net.LinkProperties: java.util.Collection getAddresses()>
SOURCE|<com.android.internal.telephony.gsm.SmsMessage: com.android.internal.telephony.gsm.SmsMessage$SubmitPdu getSubmitPdu(java.lang.String,java.lang.String,java.lang.String,boolean,byte[],int,int,int)>
SOURCE|<com.android.gallery3d.data.MtpImage: int getWidth()>
SOURCE|<com.android.gallery3d.gadget.WidgetService$PhotoRVFactory: android.widget.RemoteViews getViewAt(int)>
SOURCE|<java.time.temporal.WeekFields: int getMinimalDaysInFirstWeek()>
SOURCE|<android.view.KeyEvent: boolean getKeyData(android.view.KeyCharacterMap$KeyData)>
SOURCE|<org.apache.harmony.xml.dom.DOMErrorImpl: short getSeverity()>
SOURCE|<android.provider.Settings$System: float getFloat(android.content.ContentResolver,java.lang.String,float)>
SOURCE|<com.android.contacts.activities.DialtactsActivity$ViewPagerAdapter: android.app.Fragment getItem(int)>
SOURCE|<org.apache.james.mime4j.field.datetime.parser.DateTimeParser$Date: int getDay()>
SOURCE|<android.net.http.Connection: org.apache.http.HttpHost getHost()>
SOURCE|<com.android.ex.chips.RecipientChip: java.lang.CharSequence getValue()>
SOURCE|<android.speech.tts.SynthesisRequest: java.lang.String getCountry()>
SOURCE|<android.text.method.TextKeyListener: android.text.method.TextKeyListener getInstance()>
SOURCE|<com.android.inputmethod.latin.Utils$RingCharBuffer: java.lang.String getLastWord(int)>
SOURCE|<com.android.providers.contacts.GlobalSearchSupport: android.database.Cursor handleSearchSuggestionsQuery(android.database.sqlite.SQLiteDatabase,android.net.Uri,java.lang.String[],java.lang.String)>
SOURCE|<android.hardware.SensorManager: android.hardware.Sensor getDefaultSensor(int)>
SOURCE|<com.android.gallery3d.ui.SlotView: int getScrollX()>
SOURCE|<android.content.pm.IPackageManager$Stub$Proxy: java.lang.String[] canonicalToCurrentPackageNames(java.lang.String[])>
SOURCE|<javax.net.ssl.SSLContext: javax.net.ssl.SSLSocketFactory getSocketFactory()>
SOURCE|<com.android.contacts.activities.PhotoSelectionActivity$PhotoHandler$PhotoListener: java.lang.String getCurrentPhotoFile()>
SOURCE|<com.android.internal.telephony.PhoneProxy: com.android.internal.telephony.IccPhoneBookInterfaceManager getIccPhoneBookInterfaceManager()>
SOURCE|<android.provider.ContactsContract$SyncState: byte[] get(android.content.ContentProviderClient,android.accounts.Account)>
SOURCE|<com.android.internal.telephony.PhoneProxy: android.telephony.ServiceState getServiceState()>
SOURCE|<org.apache.http.cookie.CookieOrigin: java.lang.String getPath()>
SOURCE|<com.android.browser.SnapshotTab: byte[] compressBitmap(android.graphics.Bitmap)>
SOURCE|<android.app.DownloadManager$CursorTranslator: java.lang.String getString(int)>
SOURCE|<com.android.contacts.editor.GroupMembershipView$GroupMembershipAdapter: int getViewTypeCount()>
SOURCE|<com.android.calendar.month.MonthByWeekFragment: long getSupportedEventTypes()>
SOURCE|<android.bluetooth.BluetoothHeadset: java.util.List getDevicesMatchingConnectionStates(int[])>
SOURCE|<android.webkit.WebViewInputDispatcher$TouchStream: android.view.MotionEvent getLastEvent()>
SOURCE|<com.android.providers.contacts.ContactsProvider2: java.util.Locale getLocale()>
SOURCE|<java.security.KeyFactory: java.security.KeyFactory getInstance(java.lang.String,java.security.Provider)>
SOURCE|<com.android.contacts.detail.ContactDetailTabCarousel: int getAllowedHorizontalScrollLength()>
SOURCE|<android.graphics.Matrix: void getValues(float[])>
SOURCE|<com.android.contacts.model.RawContactDelta$ValuesDelta: java.lang.String getMimetype()>
SOURCE|<mod.ndk.ActMain: boolean cFuncDoTheMagic(android.content.Context)>
SOURCE|<com.android.gallery3d.filtershow.ui.Spline: com.android.gallery3d.filtershow.ui.ControlPoint getPoint(int)>
SOURCE|<com.android.mms.dom.smil.SmilParElementImpl: short getFill()>
SOURCE|<javax.sql.ConnectionEvent: java.sql.SQLException getSQLException()>
SOURCE|<com.android.internal.appwidget.IAppWidgetService$Stub: android.os.IBinder asBinder()>
SOURCE|<android.net.ProxyProperties: java.lang.String getExclusionList()>
SOURCE|<java.net.URISyntaxException: java.lang.String getReason()>
SOURCE|<com.adobe.xmp.impl.XMPNode: java.util.List getUnmodifiableChildren()>
SOURCE|<android.preference.PreferenceManager: int getNextRequestCode()>
SOURCE|<org.apache.http.message.BasicLineParser: org.apache.http.ProtocolVersion parseProtocolVersion(org.apache.http.util.CharArrayBuffer,org.apache.http.message.ParserCursor)>
SOURCE|<android.hardware.display.DisplayManager: android.view.Display[] getDisplays()>
SOURCE|<com.android.systemui.statusbar.phone.PanelView$FlingTracker: float getXVelocity()>
SOURCE|<android.content.res.XmlBlock$Parser: java.lang.String getAttributeName(int)>
SOURCE|<com.android.launcher2.FolderIcon: com.android.launcher2.Folder getFolder()>
SOURCE|<org.apache.harmony.xnet.provider.jsse.OpenSSLRSAPrivateCrtKey: org.apache.harmony.xnet.provider.jsse.OpenSSLKey getInstance(java.security.interfaces.RSAPrivateCrtKey)>
SOURCE|<com.android.internal.telephony.ServiceStateTracker: java.util.List getAllCellInfo()>
SOURCE|<com.coremedia.iso.boxes.TimeToSampleBox$Entry: long getCount()>
SOURCE|<java.util.concurrent.locks.ReentrantReadWriteLock$Sync: int getReadHoldCount()>
SOURCE|<com.android.internal.telephony.DataConnectionTracker: com.android.internal.telephony.ApnSetting fetchDunApn()>
SOURCE|<gov.nist.javax.sip.message.SIPMessage: gov.nist.javax.sip.message.MultipartMimeContent getMultipartMimeContent()>
SOURCE|<android.content.res.XmlBlock$Parser: int getAttributeResourceValue(int,int)>
SOURCE|<org.apache.commons.logging.LogConfigurationException: java.lang.Throwable getCause()>
SOURCE|<java.util.concurrent.Phaser: int getPhase()>
SOURCE|<android.content.res.TypedArray: float getFloat(int,float)>
SOURCE|<android.widget.TextView: int getInputType()>
SOURCE|<android.app.admin.DevicePolicyManager: boolean getCameraDisabled(android.content.ComponentName)>
SOURCE|<android.webkit.WebViewClassic$FocusTransitionDrawable: float getProgress()>
SOURCE|<android.telephony.CellInfo$1: android.telephony.CellInfo createFromParcel(android.os.Parcel)>
SOURCE|<android.net.wifi.IWifiManager$Stub$Proxy: java.util.List getScanResults()>
SOURCE|<com.google.common.collect.BstMutationRule: com.google.common.collect.BstNodeFactory getNodeFactory()>
SOURCE|<android.webkit.HTML5VideoView: int getCurrentPosition()>
SOURCE|<com.android.bluetooth.hfp.HeadsetPhoneState: int getSpeakerVolume()>
SOURCE|<libcore.io.ForwardingOs: int getuid()>
SOURCE|<com.android.email.widget.EmailWidget: int getViewTypeCount()>
SOURCE|<com.android.internal.telephony.cdma.CDMAPhone: boolean getDataRoamingEnabled()>
SOURCE|<android.view.Window: int getForcedWindowFlags()>
SOURCE|<android.app.admin.DevicePolicyManager: boolean getCameraDisabled(android.content.ComponentName,int)>
SOURCE|<com.android.phone.PhoneInterfaceManager: int disableApnType(java.lang.String)>
SOURCE|<gov.nist.javax.sip.stack.SIPDialog: javax.sip.message.Response createReliableProvisionalResponse(int)>
SOURCE|<org.apache.harmony.xml.dom.DocumentImpl: org.w3c.dom.DOMConfiguration getDomConfig()>
SOURCE|<com.android.gallery3d.data.MediaItem: void getLatLong(double[])>
SOURCE|<org.apache.harmony.xnet.provider.jsse.OpenSSLDSAParams: java.math.BigInteger getG()>
SOURCE|<android.text.format.DateFormat: char[] getDateFormatOrder(android.content.Context)>
SOURCE|<java.text.Bidi: int getLength()>
SOURCE|<org.apache.harmony.security.x509.CRLDistributionPoints$1: java.util.Collection getValues(java.lang.Object)>
SOURCE|<com.android.inputmethod.latin.spellcheck.AndroidSpellCheckerService$SuggestionsGatherer: com.android.inputmethod.latin.spellcheck.AndroidSpellCheckerService$SuggestionsGatherer$Result getResults(int,java.util.Locale)>
SOURCE|<org.apache.james.mime4j.field.address.parser.SimpleCharStream: int getBeginColumn()>
SOURCE|<com.coremedia.iso.boxes.SampleDependencyTypeBox$Entry: int getSampleHasRedundancy()>
SOURCE|<android.hardware.ISerialManager$Stub: android.os.IBinder asBinder()>
SOURCE|<com.android.internal.telephony.cdma.CdmaDataConnectionTracker: com.android.internal.telephony.DctConstants$State getOverallState()>
SOURCE|<android.os.Environment: java.io.File getUserSystemDirectory(int)>
SOURCE|<java.util.Locale: java.lang.String getDisplayName()>
SOURCE|<android.widget.TextView: int getMinLines()>
SOURCE|<android.text.format.DateUtils: java.lang.CharSequence getRelativeTimeSpanString(long,long,long)>
SOURCE|<java.security.cert.X509CertSelector: java.util.Collection getPathToNames()>
SOURCE|<com.android.providers.contacts.NameNormalizer: java.text.RuleBasedCollator getComplexityCollator()>
SOURCE|<java.nio.channels.DatagramChannel: long read(java.nio.ByteBuffer[])>
SOURCE|<com.android.internal.telephony.gsm.SIMRecords: boolean getVoiceCallForwardingFlag()>
SOURCE|<android.database.CursorWindow: android.database.CursorWindow newFromParcel(android.os.Parcel)>
SOURCE|<org.apache.http.conn.BasicManagedEntity: java.io.InputStream getContent()>
SOURCE|<com.android.email.activity.ThreePaneLayout: int getVisiblePanes()>
SOURCE|<gov.nist.javax.sip.SipStackImpl: gov.nist.javax.sip.clientauthutils.AuthenticationHelper getAuthenticationHelper(gov.nist.javax.sip.clientauthutils.AccountManager,javax.sip.header.HeaderFactory)>
SOURCE|<com.google.android.picasasync.UploadTaskEntry: java.lang.String getUploadUrl()>
SOURCE|<com.android.server.PreferredComponent: java.lang.String getParseError()>
SOURCE|<com.android.contacts.detail.ContactDetailDisplayUtils$DefaultImageGetter: android.graphics.drawable.Drawable getDrawable(java.lang.String)>
SOURCE|<android.drm.ProcessedData: byte[] getData()>
SOURCE|<java.time.Duration: long getSeconds()>
SOURCE|<com.android.internal.telephony.test.SimulatedGsmCallState: java.util.List getDriverCalls()>
SOURCE|<com.android.server.DevicePolicyManagerService: int getCurrentFailedPasswordAttempts(int)>
SOURCE|<android.net.RouteInfo: android.net.LinkAddress getDestination()>
SOURCE|<android.app.NotificationManager: android.app.INotificationManager getService()>
SOURCE|<org.apache.harmony.xnet.provider.jsse.OpenSSLServerSocketImpl: java.lang.String[] getEnabledProtocols()>
SOURCE|<android.location.Criteria: int getAccuracy()>
SOURCE|<gov.nist.javax.sip.message.MultipartMimeContentImpl: int getContentCount()>
SOURCE|<com.google.common.collect.MapMakerInternalMap$WeakExpirableEntry: com.google.common.collect.MapMakerInternalMap$ReferenceEntry getPreviousExpirable()>
SOURCE|<com.android.inputmethod.latin.FileTransforms: java.io.InputStream getUncompressedStream(java.io.InputStream)>
SOURCE|<android.app.admin.IDevicePolicyManager$Stub$Proxy: boolean getCameraDisabled(android.content.ComponentName,int)>
SOURCE|<libcore.icu.RuleBasedCollatorICU: java.text.CollationKey getCollationKey(java.lang.String)>
SOURCE|<java.time.LocalDateTime: int get(java.time.temporal.TemporalField)>
SOURCE|<javax.net.ssl.SSLEngine: javax.net.ssl.SSLParameters getSSLParameters()>
SOURCE|<android.provider.Settings$Global: long getLong(android.content.ContentResolver,java.lang.String)>
SOURCE|<com.coremedia.iso.boxes.fragment.TrackRunBox$Entry: int getSampleCompositionTimeOffset()>
SOURCE|<org.xmlpull.v1.sax2.Driver: int getIndex(java.lang.String)>
SOURCE|<android.media.MediaPlayer$TrackInfo: java.lang.String getLanguage()>
SOURCE|<com.android.email.provider.EmailProvider: android.database.sqlite.SQLiteDatabase getReadableDatabase(android.content.Context)>
SOURCE|<android.telephony.SmsCbCmasInfo: int getCertainty()>
SOURCE|<com.android.gallery3d.filtershow.imageshow.GeometryMetadata: android.graphics.Matrix getMatrixOriginalOrientation(int,float,float)>
SOURCE|<javax.xml.parsers.SAXParser: void parse(java.io.InputStream,org.xml.sax.helpers.DefaultHandler,java.lang.String)>
SOURCE|<com.android.launcher2.BubbleTextView: int getPressedOrFocusedBackgroundPadding()>
SOURCE|<com.android.email.activity.UIControllerBase: com.android.email.activity.MessageOrderManager getMessageOrderManager()>
SOURCE|<com.android.internal.os.RuntimeInit: android.os.IBinder getApplicationObject()>
SOURCE|<android.os.UserManager: java.util.List getUsers()>
SOURCE|<android.animation.IntKeyframeSet: int getIntValue(float)>
SOURCE|<android.net.wifi.WifiManager: java.lang.String getConfigFile()>
SOURCE|<com.android.internal.telephony.PhoneSubInfo: java.lang.String getDeviceSvn()>
SOURCE|<com.android.deskclock.TimerSetupView: int getTime()>
SOURCE|<android.preference.DialogPreference: int getDialogLayoutResource()>
SOURCE|<libcore.net.url.JarURLConnectionImpl: java.io.InputStream getInputStream()>
SOURCE|<java.util.logging.LogRecord: long getSequenceNumber()>
SOURCE|<android.widget.AlphabetIndexer: java.lang.Object[] getSections()>
SOURCE|<com.android.email.activity.ThreePaneLayout: int getPaneState()>
SOURCE|<org.apache.harmony.security.x509.Extensions: org.apache.harmony.security.x509.Extension getExtensionByOID(java.lang.String)>
SOURCE|<com.android.internal.widget.ActionBarView: android.view.View getCustomNavigationView()>
SOURCE|<android.net.wifi.p2p.nsd.WifiP2pServiceRequest: int getTransactionId()>
SOURCE|<com.android.server.wm.WindowState: android.graphics.Rect getGivenContentInsetsLw()>
SOURCE|<com.android.contacts.model.AccountTypeManagerImpl$InvitableAccountTypeCache: java.util.Map getCachedValue()>
SOURCE|<com.googlecode.mp4parser.authoring.Mp4TrackImpl: java.util.List getSamples()>
SOURCE|<android.view.View: android.graphics.Bitmap getDrawingCache(boolean)>
SOURCE|<com.android.internal.telephony.gsm.SimSmsInterfaceManager: java.util.List access$202(com.android.internal.telephony.gsm.SimSmsInterfaceManager,java.util.List)>
SOURCE|<android.net.http.Headers: java.lang.String getWwwAuthenticate()>
SOURCE|<android.inputmethodservice.Keyboard: int getShiftKeyIndex()>
SOURCE|<com.android.server.am.ActivityStack: android.content.pm.ActivityInfo resolveActivity(android.content.Intent,java.lang.String,int,java.lang.String,android.os.ParcelFileDescriptor,int)>
SOURCE|<com.android.email.activity.MailboxFragmentAdapter: int getViewTypeCount()>
SOURCE|<com.android.internal.telephony.cdma.CDMAPhone: com.android.internal.telephony.Call getBackgroundCall()>
SOURCE|<java.net.URLStreamHandler: java.lang.String toExternalForm(java.net.URL)>
SOURCE|<com.android.org.bouncycastle.asn1.ASN1Exception: java.lang.Throwable getCause()>
SOURCE|<com.android.videoeditor.service.MovieOverlay: java.lang.String getSubtitle()>
SOURCE|<android.inputmethodservice.InputMethodService: android.app.Dialog getWindow()>
SOURCE|<android.app.Activity: android.view.WindowManager getWindowManager()>
SOURCE|<android.preference.PreferenceManager: android.content.SharedPreferences$Editor getEditor()>
SOURCE|<android.content.ISyncStatusObserver$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
SOURCE|<android.widget.BaseAdapter: int getItemViewType(int)>
SOURCE|<android.view.textservice.SpellCheckerSession: android.view.textservice.SpellCheckerInfo getSpellChecker()>
SOURCE|<android.webkit.WebSettingsClassic: int getCacheMode()>
SOURCE|<com.google.android.mms.pdu.DeliveryInd: long getDate()>
SOURCE|<java.security.cert.CertificateFactory: java.lang.String getType()>
SOURCE|<com.android.mms.dom.ElementImpl: java.lang.String getTagName()>
SOURCE|<com.android.mms.MmsConfig: int getAliasMinChars()>
SOURCE|<com.android.email.service.AccountService$1: java.lang.String getDeviceId()>
SOURCE|<android.app.ActivityManagerProxy: int getUidForIntentSender(android.content.IIntentSender)>
SOURCE|<android.os.Environment$UserEnvironment: java.io.File getExternalStorageAppDataDirectory(java.lang.String)>
SOURCE|<com.android.nfc.dhimpl.NativeNfcManager: int getDefaultLlcpMiu()>
SOURCE|<java.util.EnumMap$Entry: java.lang.Object getValue()>
SOURCE|<com.android.gallery3d.filtershow.imageshow.ImageShow: android.graphics.Bitmap getFilteredImage()>
SOURCE|<android.content.Intent: java.lang.String getAction()>
SOURCE|<com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadataCollection: java.util.List getMetadataList()>
SOURCE|<org.apache.http.conn.scheme.Scheme: org.apache.http.conn.scheme.SocketFactory getSocketFactory()>
SOURCE|<com.android.gallery3d.ui.BitmapScreenNail: int getWidth()>
SOURCE|<android.preference.Preference: java.lang.StringBuilder getFilterableStringBuilder()>
SOURCE|<com.android.vcard.VCardProperty: java.util.Map getParameterMap()>
SOURCE|<com.android.providers.contacts.HanziToPinyin: com.android.providers.contacts.HanziToPinyin getInstance()>
SOURCE|<com.android.browser.BrowserBookmarksAdapter: com.android.browser.BrowserBookmarksAdapterItem getLoadingObject()>
SOURCE|<android.webkit.WebViewClassic: android.webkit.WebViewProvider$ViewDelegate getViewDelegate()>
SOURCE|<com.android.internal.app.ActionBarImpl$ActionModeImpl: java.lang.CharSequence getTitle()>
SOURCE|<com.android.calendar.Utils: int getDaysPerWeek(android.content.Context)>
SOURCE|<com.android.launcher2.DragLayer$LayoutParams: int getWidth()>
SOURCE|<android.telephony.CellIdentityCdma: int getBasestationId()>
SOURCE|<android.nfc.tech.IsoDep: byte[] transceive(byte[],boolean)>
SOURCE|<org.apache.http.client.utils.URLEncodedUtils: java.util.List parse(java.net.URI,java.lang.String)>
SOURCE|<com.android.email.mail.store.imap.ImapList: com.android.email.mail.store.imap.ImapString getKeyedStringOrEmpty(java.lang.String,boolean)>
SOURCE|<android.telephony.PhoneNumberUtils: int getFormatTypeForLocale(java.util.Locale)>
SOURCE|<java.lang.Package: java.lang.String getSpecificationTitle()>
SOURCE|<android.graphics.drawable.Drawable: android.graphics.drawable.Drawable getCurrent()>
SOURCE|<com.android.org.bouncycastle.asn1.LazyEncodedSequence: java.util.Enumeration getObjects()>
SOURCE|<android.filterfw.core.FrameFormat: int getDimensionCount()>
SOURCE|<com.android.providers.media.MediaProvider$DatabaseHelper: android.database.sqlite.SQLiteDatabase getWritableDatabase()>
SOURCE|<android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateJellyBeanImpl: android.support.v4.view.accessibility.AccessibilityNodeProviderCompat getAccessibilityNodeProvider(java.lang.Object,android.view.View)>
SOURCE|<com.google.common.collect.SortedMultisets$ElementSet: java.util.SortedSet subSet(java.lang.Object,java.lang.Object)>
SOURCE|<android.graphics.drawable.GradientDrawable: int getChangingConfigurations()>
SOURCE|<com.android.internal.content.PackageHelper: java.lang.String getSdDir(java.lang.String)>
SOURCE|<android.preference.PreferenceGroupAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)>
SOURCE|<com.android.mms.ui.MessageListAdapter: int getViewTypeCount()>
SOURCE|<android.widget.CursorAdapter: int getCount()>
SOURCE|<com.android.email.mail.store.imap.ImapUtility: java.lang.String[] getImapSequenceValues(java.lang.String)>
SOURCE|<com.android.systemui.recent.RecentTasksLoader: com.android.systemui.recent.TaskDescription createTaskDescription(int,int,android.content.Intent,android.content.ComponentName,java.lang.CharSequence)>
SOURCE|<com.android.camera.MosaicPreviewRenderer: android.graphics.SurfaceTexture getInputSurfaceTexture()>
SOURCE|<java.text.FieldPosition: int getBeginIndex()>
SOURCE|<android.webkit.WebViewClassic: int getContentHeight()>
SOURCE|<com.android.email.mail.store.imap.ImapMemoryLiteral: java.lang.String getString()>
SOURCE|<java.lang.Enum: java.lang.Enum[] getSharedConstants(java.lang.Class)>
SOURCE|<com.android.server.wm.WindowManagerService: android.os.IBinder getFocusedWindowToken()>
SOURCE|<libcore.net.url.FtpURLConnection: java.io.InputStream getInputStream()>
SOURCE|<com.coremedia.iso.boxes.TimeToSampleBox$Entry: long getDelta()>
SOURCE|<com.google.android.mms.pdu.PduBody: com.google.android.mms.pdu.PduPart getPartByContentId(java.lang.String)>
SOURCE|<com.android.contacts.model.account.ExternalAccountType: java.lang.String getViewStreamItemActivity()>
SOURCE|<com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata: java.lang.String getNationalPrefixTransformRule()>
SOURCE|<com.android.internal.os.BatteryStatsImpl$Uid$Pkg$Serv: int getStarts(int)>
SOURCE|<junit.runner.BaseTestRunner: junit.framework.Test getTest(java.lang.String)>
SOURCE|<libcore.net.http.RequestHeaders: java.lang.String getConnection()>
SOURCE|<com.android.email.VendorPolicyLoader: com.android.email.VendorPolicyLoader getInstance(android.content.Context)>
SOURCE|<android.view.accessibility.AccessibilityRecord: int getWindowId()>
SOURCE|<com.android.server.display.OverlayDisplayAdapter$OverlayDisplayDevice: com.android.server.display.DisplayDeviceInfo getDisplayDeviceInfoLocked()>
SOURCE|<com.android.contacts.calllog.IntentProvider$2: android.content.Intent getIntent(android.content.Context)>
SOURCE|<android.content.ContentProvider$Transport: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,android.os.ICancellationSignal)>
SOURCE|<android.security.SystemKeyStore: android.security.SystemKeyStore getInstance()>
SOURCE|<android.security.KeyStore: android.security.KeyStore getInstance()>
SOURCE|<android.content.ContentProvider$Transport: android.os.ICancellationSignal createCancellationSignal()>
SOURCE|<com.google.common.collect.Maps$AbstractFilteredMap: java.lang.Object get(java.lang.Object)>
SOURCE|<com.android.gallery3d.exif.ExifTag: int getComponentCount()>
SOURCE|<com.android.gallery3d.data.MediaSet$1: java.lang.Integer get()>
SOURCE|<java.lang.reflect.Parameter: java.lang.'annotation'.Annotation getAnnotation(java.lang.Class)>
SOURCE|<android.content.pm.IPackageManager$Stub$Proxy: java.lang.String[] getPackagesForUid(int)>
SOURCE|<java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask: long getDelay(java.util.concurrent.TimeUnit)>
SOURCE|<com.android.server.NetworkManagementService: int getInterfaceRxThrottle(java.lang.String)>
SOURCE|<com.android.launcher2.FastBitmapDrawable: int getOpacity()>
SOURCE|<android.view.View: java.lang.CharSequence getIterableTextForAccessibility()>
SOURCE|<android.graphics.drawable.Drawable: int getChangingConfigurations()>
SOURCE|<com.android.contacts.model.account.BaseAccountType: com.android.contacts.model.dataitem.DataKind addDataKindPhone(android.content.Context)>
SOURCE|<org.apache.http.impl.conn.tsccm.BasicPoolEntry: long getCreated()>
SOURCE|<android.net.sip.SimpleSessionDescription$Fields: java.lang.String[] getBandwidthTypes()>
SOURCE|<android.provider.MediaStore$Images$Thumbnails: android.graphics.Bitmap getThumbnail(android.content.ContentResolver,long,long,int,android.graphics.BitmapFactory$Options)>
SOURCE|<com.android.internal.telephony.cdma.CDMAPhone: int getCdmaEriIconMode()>
SOURCE|<android.view.CompatibilityInfoHolder: android.content.res.CompatibilityInfo getIfNeeded()>
SOURCE|<java.text.DecimalFormat: java.util.Currency getCurrency()>
SOURCE|<com.android.launcher2.IconCache: android.graphics.drawable.Drawable getFullResIcon(android.content.pm.ActivityInfo)>
SOURCE|<com.android.server.InputMethodManagerService$InputMethodSettings: java.lang.String getDisabledSystemInputMethods()>
SOURCE|<org.apache.harmony.xml.dom.DOMConfigurationImpl$1: java.lang.Object get(org.apache.harmony.xml.dom.DOMConfigurationImpl)>
SOURCE|<com.android.providers.contacts.VoicemailContentProvider: java.lang.String getType(android.net.Uri)>
SOURCE|<com.android.mms.dom.events.EventImpl: int getSeekTo()>
SOURCE|<java.io.ObjectInputStream: java.lang.Object readObject()>
SOURCE|<org.apache.harmony.xnet.provider.jsse.OpenSSLSocketImpl: boolean getWantClientAuth()>
SOURCE|<javax.crypto.spec.SecretKeySpec: java.lang.String getFormat()>
SOURCE|<com.adobe.xmp.impl.xpath.XMPPath: com.adobe.xmp.impl.xpath.XMPPathSegment getSegment(int)>
SOURCE|<java.nio.Buffer: java.nio.Buffer reset()>
SOURCE|<org.apache.harmony.security.asn1.BerInputStream: byte[] getBuffer()>
SOURCE|<com.android.server.DevicePolicyManagerService: int getPasswordQuality(android.content.ComponentName,int)>
SOURCE|<android.graphics.drawable.BitmapDrawable: android.graphics.drawable.Drawable$ConstantState getConstantState()>
SOURCE|<java.nio.DirectByteBuffer: long getLong(int)>
SOURCE|<android.telephony.cdma.CdmaCellLocation: int getBaseStationLongitude()>
SOURCE|<gov.nist.javax.sip.stack.MessageProcessor: java.lang.String getSavedIpAddress()>
SOURCE|<android.speech.tts.SynthesisRequest: java.lang.String getText()>
SOURCE|<com.android.gallery3d.app.AbstractGalleryActivity: com.android.gallery3d.app.StateManager getStateManager()>
SOURCE|<android.view.GLES20Canvas: int getMaximumBitmapWidth()>
SOURCE|<com.android.internal.telephony.gsm.GsmDataConnectionTracker: boolean getAnyDataEnabled()>
SOURCE|<android.appwidget.AppWidgetHostView: android.appwidget.AppWidgetProviderInfo getAppWidgetInfo()>
SOURCE|<com.android.providers.downloads.DownloadProvider$SqlSelection: java.lang.String[] getParameters()>
SOURCE|<java.util.Base64: java.util.Base64$Encoder getMimeEncoder()>
SOURCE|<android.os.Bundle: void setClassLoader(java.lang.ClassLoader)>
SOURCE|<android.net.EthernetDataTracker: android.net.NetworkInfo getNetworkInfo()>
SOURCE|<android.bluetooth.IBluetooth$Stub$Proxy: android.bluetooth.BluetoothDevice[] getBondedDevices()>
SOURCE|<android.drm.DrmUtils: byte[] readBytes(java.lang.String)>
SOURCE|<android.net.http.SslCertificate$DName: java.lang.String getCName()>
SOURCE|<org.apache.harmony.security.x509.PolicyConstraints$1: java.lang.Object getDecodedObject(org.apache.harmony.security.asn1.BerInputStream)>
SOURCE|<com.android.gallery3d.ui.SlotView: int getScrollY()>
SOURCE|<android.widget.SearchView: android.widget.CursorAdapter getSuggestionsAdapter()>
SOURCE|<org.apache.harmony.security.x509.TBSCertList: org.apache.harmony.security.x501.Name getIssuer()>
SOURCE|<com.android.internal.telephony.PhoneBase: com.android.internal.telephony.CallTracker getCallTracker()>
SOURCE|<java.nio.LongArrayBuffer: java.nio.LongBuffer get(long[],int,int)>
SOURCE|<com.android.browser.ErrorConsoleView$ErrorConsoleListView$ErrorConsoleMessageList: android.view.View getView(int,android.view.View,android.view.ViewGroup)>
SOURCE|<gov.nist.javax.sip.header.Contact: int getExpires()>
SOURCE|<com.android.inputmethod.latin.Dictionary: java.util.ArrayList getSuggestionsWithSessionId(com.android.inputmethod.latin.WordComposer,java.lang.CharSequence,com.android.inputmethod.keyboard.ProximityInfo,int)>
SOURCE|<android.content.res.TypedArray: boolean getBoolean(int,boolean)>
SOURCE|<android.graphics.drawable.DrawableContainer: int getIntrinsicWidth()>
SOURCE|<com.android.internal.telephony.PhoneSubInfoProxy: java.lang.String getDeviceSvn()>
SOURCE|<libcore.net.http.HttpURLConnectionImpl: java.lang.String getResponseMessage()>
SOURCE|<java.time.OffsetDateTime: java.time.ZoneOffset getOffset()>
SOURCE|<android.view.KeyEvent: int getUnicodeChar(int)>
SOURCE|<java.lang.reflect.Field: int getModifiers()>
SOURCE|<android.renderscript.Allocation: android.renderscript.Allocation createFromBitmapResource(android.renderscript.RenderScript,android.content.res.Resources,int,android.renderscript.Allocation$MipmapControl,int)>
SOURCE|<java.nio.ByteBuffer: java.lang.Object array()>
SOURCE|<android.telephony.CellIdentityGsm: int getLac()>
SOURCE|<com.android.browser.BaseUi: boolean isTitleBarShowing()>
SOURCE|<android.net.Uri$HierarchicalUri: java.lang.String getEncodedSchemeSpecificPart()>
SOURCE|<java.nio.FloatToByteBufferAdapter: float get(int)>
SOURCE|<android.app.Activity: int getRequestedOrientation()>
SOURCE|<android.location.GpsSatellite: float getSnr()>
SOURCE|<android.telephony.SmsManager: java.util.ArrayList divideMessage(java.lang.String)>
SOURCE|<com.adobe.xmp.options.ParseOptions: boolean getOmitNormalization()>
SOURCE|<android.content.IContentService$Stub$Proxy: android.content.SyncAdapterType[] getSyncAdapterTypes()>
SOURCE|<org.apache.http.entity.EntityTemplate: long getContentLength()>
SOURCE|<java.nio.CharBuffer: java.lang.String toString()>
SOURCE|<android.opengl.GLSurfaceView: int getRenderMode()>
SOURCE|<android.view.View: android.view.DisplayList getDisplayList()>
SOURCE|<android.os.IUserManager$Stub$Proxy: int getUserHandle(int)>
SOURCE|<android.bluetooth.BluetoothPbap: int getState()>
SOURCE|<org.apache.http.impl.AbstractHttpClientConnection: org.apache.http.impl.entity.EntityDeserializer createEntityDeserializer()>
SOURCE|<org.apache.harmony.xml.dom.ElementImpl: org.w3c.dom.NodeList getElementsByTagNameNS(java.lang.String,java.lang.String)>
SOURCE|<android.test.IsolatedContext$MockAccountManager: android.accounts.AccountManagerFuture getAuthToken(android.accounts.Account,java.lang.String,android.os.Bundle,android.app.Activity,android.accounts.AccountManagerCallback,android.os.Handler)>
SOURCE|<libcore.icu.ICU: java.util.Locale[] getAvailableLocales()>
SOURCE|<android.accounts.AccountManager: android.accounts.AccountManager get(android.content.Context)>
SOURCE|<com.android.gallery3d.exif.ExifParser: int getStripIndex()>
SOURCE|<android.os.storage.IMountService$Stub$Proxy: int getEncryptionState()>
SOURCE|<com.android.server.net.NetworkStatsCollection: android.net.NetworkStats getSummary(android.net.NetworkTemplate,long,long)>
SOURCE|<android.nfc.INfcAdapterExtras$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
SOURCE|<com.android.contacts.calllog.ExtendedCursor: double getDouble(int)>
SOURCE|<android.view.MotionEvent: float getToolMinor(int)>
SOURCE|<com.android.videoeditor.service.VideoEditorProject: android.net.Uri getExportedMovieUri()>
SOURCE|<org.apache.http.conn.params.ConnManagerParams: org.apache.http.conn.params.ConnPerRoute getMaxConnectionsPerRoute(org.apache.http.params.HttpParams)>
SOURCE|<android.media.AudioService: int getRemoteStreamMaxVolume()>
SOURCE|<com.android.inputmethod.latin.SubtypeLocale: java.lang.String getKeyboardLayoutSetDisplayName(android.view.inputmethod.InputMethodSubtype)>
SOURCE|<android.text.TextUtils: java.lang.CharSequence getReverse(java.lang.CharSequence,int,int)>
SOURCE|<android.widget.ScrollBarDrawable: boolean getAlwaysDrawVerticalTrack()>
SOURCE|<java.util.concurrent.locks.ReentrantReadWriteLock$Sync: int getWriteHoldCount()>
SOURCE|<com.android.server.ConnectivityService: int getNetworkPreference()>
SOURCE|<android.view.animation.LayoutAnimationController: float getDelay()>
SOURCE|<android.opengl.EGLObjectHandle: int getHandle()>
SOURCE|<org.apache.harmony.security.x509.CertificateList$1: java.lang.Object getDecodedObject(org.apache.harmony.security.asn1.BerInputStream)>
SOURCE|<org.apache.http.cookie.CookieSpecRegistry: org.apache.http.cookie.CookieSpec getCookieSpec(java.lang.String,org.apache.http.params.HttpParams)>
SOURCE|<com.android.gallery3d.filtershow.imageshow.GeometryMetadata: android.graphics.RectF getCropBounds(android.graphics.Bitmap)>
SOURCE|<gov.nist.javax.sip.message.SIPResponse: int getStatusCode()>
SOURCE|<android.widget.Switch: int getSwitchMinWidth()>
SOURCE|<libcore.icu.NativeDecimalFormat: java.lang.String getPositivePrefix()>
SOURCE|<com.google.common.collect.MapMakerInternalMap$AbstractReferenceEntry: java.lang.Object getKey()>
SOURCE|<java.security.spec.ECPrivateKeySpec: java.math.BigInteger getS()>
SOURCE|<com.android.internal.telephony.cdma.CDMAPhone: java.lang.String getVoiceMailNumber()>
SOURCE|<gov.nist.javax.sip.message.SIPRequest: java.lang.Object getMessageChannel()>
SOURCE|<com.android.camera.CameraManager$CameraProxy: android.hardware.Camera$Parameters getParameters()>
SOURCE|<java.net.Authenticator: java.net.InetAddress getRequestingSite()>
SOURCE|<android.text.Layout: void getCursorPath(int,android.graphics.Path,java.lang.CharSequence)>
SOURCE|<org.apache.http.impl.cookie.NetscapeDraftHeaderParser: org.apache.http.HeaderElement parseHeader(org.apache.http.util.CharArrayBuffer,org.apache.http.message.ParserCursor)>
SOURCE|<com.android.commands.monkey.MonkeySourceNetworkVars$2: java.lang.String get()>
SOURCE|<com.google.android.apps.lightcycle.util.LocationProvider: android.location.Location getCurrentLocation()>
SOURCE|<android.webkit.WebViewClassic: java.lang.String getTitle()>
SOURCE|<android.view.MotionEvent: int getAction()>
SOURCE|<com.android.internal.telephony.cdma.CDMALTEPhone: com.android.internal.telephony.PhoneConstants$DataState getDataConnectionState(java.lang.String)>
SOURCE|<com.android.contacts.calllog.ContactInfoHelper: com.android.contacts.calllog.ContactInfo lookupNumber(java.lang.String,java.lang.String)>
SOURCE|<java.security.KeyStore$Builder$TmpLSParameter: java.security.KeyStore$ProtectionParameter getProtectionParameter()>
SOURCE|<com.android.phone.sip.SipSharedPreferences: int getProfilesCount()>
SOURCE|<android.content.pm.IPackageManager$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
SOURCE|<com.android.internal.statusbar.StatusBarIconList: com.android.internal.statusbar.StatusBarIcon getIcon(int)>
SOURCE|<android.telephony.SmsCbLocation: int getLac()>
SOURCE|<android.database.sqlite.SQLiteDatabase: android.database.Cursor query(boolean,java.lang.String,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,java.lang.String,java.lang.String,java.lang.String)>
SOURCE|<com.android.mms.dom.smil.SmilDocumentImpl: org.w3c.dom.smil.SMILElement getBody()>
SOURCE|<java.util.concurrent.atomic.AtomicIntegerArray: int get(int)>
SOURCE|<android.view.accessibility.AccessibilityManager: java.util.List getAccessibilityServiceList()>
SOURCE|<android.provider.Contacts$People: android.database.Cursor queryGroups(android.content.ContentResolver,long)>
SOURCE|<com.android.contacts.list.ContactsSectionIndexer: java.lang.Object[] getSections()>
SOURCE|<java.security.CodeSource: java.security.CodeSigner[] getCodeSigners()>
SOURCE|<com.android.contacts.model.account.ExternalAccountType: int getViewGroupLabelResId()>
SOURCE|<android.media.CameraProfile: int getJpegEncodingQualityParameter(int,int)>
SOURCE|<org.apache.http.impl.cookie.NetscapeDraftSpec: org.apache.http.Header getVersionHeader()>
SOURCE|<java.time.chrono.JapaneseDate: java.time.chrono.JapaneseEra getEra()>
SOURCE|<com.android.internal.telephony.PhoneFactory: com.android.internal.telephony.Phone getGsmPhone()>
SOURCE|<com.android.phone.PhoneGlobals: android.app.PendingIntent getSendSmsFromNotificationPendingIntent(android.content.Context,java.lang.String)>
SOURCE|<android.telephony.SignalStrength: int getCdmaLevel()>
SOURCE|<android.telephony.SmsCbLocation: int getCid()>
SOURCE|<android.hardware.usb.UsbDevice: int getDeviceId(java.lang.String)>
SOURCE|<android.widget.TextView: int getTotalPaddingStart()>
SOURCE|<android.preference.PreferenceActivity$HeaderAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)>
SOURCE|<java.security.cert.X509CertSelector: java.util.Date getPrivateKeyValid()>
SOURCE|<android.filterfw.core.FrameManager: android.filterfw.core.Frame duplicateFrame(android.filterfw.core.Frame)>
SOURCE|<android.bluetooth.BluetoothHeadset: int getPriority(android.bluetooth.BluetoothDevice)>
SOURCE|<com.android.uiautomator.core.UiDevice: int getDisplayRotation()>
SOURCE|<com.android.i18n.phonenumbers.Phonemetadata$PhoneNumberDesc: java.lang.String getNationalNumberPattern()>
SOURCE|<android.app.ActivityThread: android.os.Looper getLooper()>
SOURCE|<com.android.internal.telephony.cdma.CDMAPhone: com.android.internal.telephony.Call getRingingCall()>
SOURCE|<android.net.http.SslCertificate: java.lang.String getValidNotBefore()>
SOURCE|<java.net.JarURLConnection: java.util.jar.JarEntry getJarEntry()>
SOURCE|<com.android.camera.drawable.TextDrawable: int getIntrinsicWidth()>
SOURCE|<com.android.gallery3d.util.CacheManager: com.android.gallery3d.common.BlobCache getCache(android.content.Context,java.lang.String,int,int,int)>
SOURCE|<android.content.pm.ResolveInfo: android.graphics.drawable.Drawable loadIcon(android.content.pm.PackageManager)>
SOURCE|<com.android.gallery3d.data.SizeClustering: long getMinSize(int)>
SOURCE|<com.android.wallpaper.grass.ScriptField_Vertex: android.renderscript.Element createElement(android.renderscript.RenderScript)>
SOURCE|<com.android.calendar.agenda.AgendaByDayAdapter: int getHeaderItemsCount(int)>
SOURCE|<com.android.gallery3d.data.SizeClustering: java.lang.String getClusterName(int)>
SOURCE|<android.view.KeyEvent: int getDeviceId()>
SOURCE|<org.apache.harmony.xnet.provider.jsse.NativeCrypto: java.lang.String[] getSupportedCipherSuites()>
SOURCE|<gov.nist.javax.sip.stack.SIPTransactionStack: gov.nist.javax.sip.stack.ServerResponseInterface newSIPServerResponse(gov.nist.javax.sip.message.SIPResponse,gov.nist.javax.sip.stack.MessageChannel)>
SOURCE|<com.android.server.display.DisplayAdapter: com.android.server.display.DisplayManagerService$SyncRoot getSyncRoot()>
SOURCE|<java.util.logging.Level: java.lang.String getLocalizedName()>
SOURCE|<java.lang.reflect.Method: java.lang.String getSignatureAttribute()>
SOURCE|<com.android.browser.BrowserHistoryPage$HistoryGroupWrapper: java.lang.Object getItem(int)>
SOURCE|<com.android.internal.os.BatteryStatsImpl$SamplingTimer: int getUpdateVersion()>
SOURCE|<android.net.MobileDataStateTracker: android.net.LinkProperties getLinkProperties()>
SOURCE|<com.android.gallery3d.app.AlbumSetDataLoader: com.android.gallery3d.data.MediaSet getMediaSet(int)>
SOURCE|<com.android.mms.MmsConfig: int getRecipientLimit()>
SOURCE|<com.android.email.Clock: long getTime()>
SOURCE|<com.google.common.collect.BstOperations: com.google.common.collect.BstNode insertMax(com.google.common.collect.BstNode,com.google.common.collect.BstNode,com.google.common.collect.BstNodeFactory,com.google.common.collect.BstBalancePolicy)>
SOURCE|<android.view.InputDevice: android.os.Vibrator getVibrator()>
SOURCE|<java.security.spec.X509EncodedKeySpec: byte[] getEncoded()>
SOURCE|<gov.nist.core.DuplicateNameValueList: java.lang.Object getValue(java.lang.String)>
SOURCE|<android.renderscript.RenderScript: android.renderscript.RenderScript$RSMessageHandler getMessageHandler()>
SOURCE|<com.android.browser.ErrorConsoleView$ErrorConsoleListView$ErrorConsoleMessageList: long getItemId(int)>
SOURCE|<android.telephony.SignalStrength: int getLteRsrp()>
SOURCE|<android.util.NtpTrustedTime: android.util.NtpTrustedTime getInstance(android.content.Context)>
SOURCE|<android.provider.BrowserContract$SyncState: byte[] get(android.content.ContentProviderClient,android.accounts.Account)>
SOURCE|<com.android.gallery3d.exif.Rational: long getDenominator()>
SOURCE|<android.net.NetworkInfo: int getSubtype()>
SOURCE|<android.telephony.CellIdentityGsm: int getCid()>
SOURCE|<android.app.Activity: android.app.FragmentManager getFragmentManager()>
SOURCE|<android.net.IConnectivityManager$Stub$Proxy: android.os.ParcelFileDescriptor establishVpn(com.android.internal.net.VpnConfig)>
SOURCE|<java.net.Socks4Message: byte[] getBytes()>
SOURCE|<android.app.backup.IRestoreSession$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
SOURCE|<android.view.MotionEvent: float getSize(int)>
SOURCE|<android.test.mock.MockPackageManager: android.graphics.drawable.Drawable getApplicationIcon(java.lang.String)>
SOURCE|<android.database.CursorWindow: double getDouble(int,int)>
SOURCE|<com.android.ex.chips.BaseRecipientAdapter: int getDestinationTypeId()>
SOURCE|<android.app.ActivityThread: java.lang.String getProfileFilePath()>
SOURCE|<java.text.NumberFormat: java.lang.Number parse(java.lang.String)>
SOURCE|<android.net.http.ErrorStrings: java.lang.String getString(int,android.content.Context)>
SOURCE|<com.android.mms.dom.AttrImpl: org.w3c.dom.TypeInfo getSchemaTypeInfo()>
SOURCE|<android.telephony.TelephonyManager: java.lang.String getSimSerialNumber()>
SOURCE|<com.android.mms.dom.NodeImpl: java.lang.String getNodeValue()>
SOURCE|<com.android.inputmethod.latin.Utils$UsabilityStudyLogUtils: com.android.inputmethod.latin.Utils$UsabilityStudyLogUtils getInstance()>
SOURCE|<java.io.DataInputStream: java.lang.String readLine()>
SOURCE|<com.android.inputmethod.compat.CompatUtils: java.lang.reflect.Constructor getConstructor(java.lang.Class,java.lang.Class[])>
SOURCE|<android.widget.TimePicker$SavedState: int getHour()>
SOURCE|<gov.nist.javax.sip.header.AllowList: java.util.ListIterator getMethods()>
SOURCE|<android.filterfw.core.NativeProgram: java.lang.Object getHostValue(java.lang.String)>
SOURCE|<android.nfc.tech.IsoDep: byte[] transceive(byte[])>
SOURCE|<com.google.common.collect.Lists$Partition: java.lang.Object get(int)>
SOURCE|<org.apache.http.message.BasicHeaderValueParser: org.apache.http.HeaderElement parseHeaderElement(java.lang.String,org.apache.http.message.HeaderValueParser)>
SOURCE|<com.google.common.collect.ForwardingMap$StandardKeySet: java.util.Map map()>
SOURCE|<com.android.server.AppWidgetServiceImpl: java.util.List getInstalledProviders(int)>
SOURCE|<com.android.bluetooth.hid.HidService$BluetoothInputDeviceBinder: java.util.List getDevicesMatchingConnectionStates(int[])>
SOURCE|<com.android.server.ConnectivityService: android.net.NetworkInfo getActiveNetworkInfo()>
SOURCE|<gov.nist.javax.sip.header.ExtensionHeaderImpl: java.lang.String getHeaderValue()>
SOURCE|<com.google.common.collect.AbstractListMultimap: java.util.Collection createCollection()>
SOURCE|<android.hardware.SensorManager$SensorEventPool: android.hardware.SensorEvent getFromPool()>
SOURCE|<com.android.internal.util.TypedProperties: long getLong(java.lang.String)>
SOURCE|<java.text.NumberFormat: int getMaximumIntegerDigits()>
SOURCE|<com.android.contacts.list.AccountFilterActivity$FilterListAdapter: com.android.contacts.list.ContactListFilter getItem(int)>
SOURCE|<android.net.http.AndroidHttpClient: org.apache.http.params.HttpParams getParams()>
SOURCE|<android.nfc.tech.NfcF: byte[] transceive(byte[])>
SOURCE|<android.mtp.MtpObjectInfo: int getThumbFormat()>
SOURCE|<com.android.emailcommon.provider.EmailContent: com.android.emailcommon.provider.EmailContent getContent(android.database.Cursor,java.lang.Class)>
SOURCE|<javax.net.ssl.SSLEngineResult: javax.net.ssl.SSLEngineResult$HandshakeStatus getHandshakeStatus()>
SOURCE|<android.net.http.AndroidHttpClientConnection: org.apache.http.HttpEntity receiveResponseEntity(android.net.http.Headers)>
SOURCE|<com.android.mms.util.DownloadManager: com.android.mms.util.DownloadManager access$000()>
SOURCE|<android.database.sqlite.SQLiteProgram: java.lang.String[] getColumnNames()>
SOURCE|<gov.nist.core.ThreadAuditor: long getPingIntervalInMillisecs()>
SOURCE|<java.util.logging.LogRecord: java.lang.Throwable getThrown()>
SOURCE|<com.android.launcher2.Launcher: android.view.View createShortcut(com.android.launcher2.ShortcutInfo)>
SOURCE|<android.view.InputChannel: java.lang.String getName()>
SOURCE|<com.android.inputmethod.latin.FileTransforms: java.io.InputStream getDecryptedStream(java.io.InputStream)>
SOURCE|<com.android.bluetooth.pbap.BluetoothPbapVcardManager: java.lang.String getOwnerPhoneNumberVcard(boolean,byte[])>
SOURCE|<android.app.ActivityThread: android.content.res.Configuration applyConfigCompatMainThread(int,android.content.res.Configuration,android.content.res.CompatibilityInfo)>
SOURCE|<com.android.videoeditor.service.VideoEditorProject: com.android.videoeditor.service.MovieMediaItem getPreviousMediaItem(com.android.videoeditor.service.MovieTransition)>
SOURCE|<android.widget.TextView: int getGravity()>
SOURCE|<org.apache.harmony.security.x501.Name: byte[] getEncoded()>
SOURCE|<android.webkit.WebSettingsClassic: java.lang.String getDefaultUserAgentForLocale(android.content.Context,java.util.Locale)>
SOURCE|<com.android.mms.transaction.TransactionBundle: java.lang.String getProxyAddress()>
SOURCE|<android.text.Layout: float getSecondaryHorizontal(int)>
SOURCE|<dalvik.system.profiler.HprofData: int getDepth()>
SOURCE|<android.content.res.XmlBlock$Parser: java.lang.String getNamespace()>
SOURCE|<com.android.server.pm.Settings: com.android.server.pm.SharedUserSetting getSharedUserLPw(java.lang.String,int,boolean)>
SOURCE|<com.google.android.mms.pdu.PduPart: byte[] getContentLocation()>
SOURCE|<android.database.sqlite.SQLiteGlobal: java.lang.String getDefaultSyncMode()>
SOURCE|<javax.net.ssl.SSLEngineResult: javax.net.ssl.SSLEngineResult$Status getStatus()>
SOURCE|<android.nfc.tech.NfcA: android.nfc.Tag getTag()>
SOURCE|<com.android.internal.telephony.IccRecords: java.lang.String getIMSI()>
SOURCE|<java.security.AllPermission: java.lang.String getActions()>
SOURCE|<com.android.internal.telephony.GsmAlphabet: byte[] stringToGsm7BitPacked(java.lang.String,int,int)>
SOURCE|<com.android.email.provider.ContentCache$CachedCursor: android.database.CursorWindow getWindow()>
SOURCE|<org.apache.harmony.security.pkcs7.SignedData: java.util.List getCRLs()>
SOURCE|<android.media.MediaRouter$RouteInfo: java.lang.CharSequence getName(android.content.Context)>
SOURCE|<android.graphics.Paint: void getTextPath(char[],int,int,float,float,android.graphics.Path)>
SOURCE|<android.net.wifi.p2p.WifiP2pWfdInfo: int getMaxThroughput()>
SOURCE|<android.content.res.TypedArray: java.lang.String getPositionDescription()>
SOURCE|<android.media.audiofx.Visualizer: int getCaptureSize()>
SOURCE|<java.util.Locale: java.lang.String getDisplayVariant()>
SOURCE|<com.android.internal.telephony.PhoneBase: android.telephony.SignalStrength getSignalStrength()>
SOURCE|<com.android.launcher2.AppsCustomizePagedView: java.lang.String getCurrentPageDescription()>
SOURCE|<android.database.CursorWindow: byte[] getBlob(int,int)>
SOURCE|<com.android.contacts.model.RawContactDelta$ValuesDelta: java.lang.String getDisplayName()>
SOURCE|<java.net.PlainSocketImpl: java.lang.Object getOption(int)>
SOURCE|<javax.sip.TransactionTerminatedEvent: javax.sip.ServerTransaction getServerTransaction()>
SOURCE|<com.android.gallery3d.ui.FlingScroller: int getCurrY()>
SOURCE|<com.google.android.picasasync.PrefetchHelper$PrefetchContext: int getDownloadFailCount()>
SOURCE|<com.android.contacts.model.Contact: com.google.common.collect.ImmutableList getGroupMetaData()>
SOURCE|<org.apache.http.impl.client.RequestWrapper: java.lang.String getMethod()>
SOURCE|<java.lang.Throwable: java.lang.String getMessage()>
SOURCE|<java.util.concurrent.Phaser: java.util.concurrent.Phaser getRoot()>
SOURCE|<javax.sip.ResponseEvent: javax.sip.Dialog getDialog()>
SOURCE|<com.android.inputmethod.latin.SuggestedWords: java.util.ArrayList getTypedWordAndPreviousSuggestions(java.lang.CharSequence,com.android.inputmethod.latin.SuggestedWords)>
SOURCE|<com.android.org.bouncycastle.asn1.ASN1StreamParser: com.android.org.bouncycastle.asn1.ASN1Encodable readObject()>
SOURCE|<com.android.contacts.editor.AggregationSuggestionEngine: java.util.List getSuggestions()>
SOURCE|<java.time.LocalDate: java.time.Month getMonth()>
SOURCE|<com.android.launcher2.WeakReferenceThreadLocal: java.lang.Object get()>
SOURCE|<java.util.zip.Inflater: long getBytesRead()>
SOURCE|<com.android.bluetooth.hfp.HeadsetStateMachine: java.util.List getDevicesMatchingConnectionStates(int[])>
SOURCE|<com.android.internal.os.BatteryStatsImpl$Uid: long getFullWifiLockTime(long,int)>
SOURCE|<android.net.sip.SimpleSessionDescription$Media: java.lang.String getAddress()>
SOURCE|<com.android.org.bouncycastle.asn1.x500.X500Name: com.android.org.bouncycastle.asn1.x500.RDN[] getRDNs(com.android.org.bouncycastle.asn1.ASN1ObjectIdentifier)>
SOURCE|<java.io.File: void <init>(java.lang.String)>
SOURCE|<com.android.server.pm.PackageManagerService$DumpState: com.android.server.pm.SharedUserSetting getSharedUser()>
SOURCE|<com.android.browser.widget.BookmarkThumbnailWidgetService: android.content.SharedPreferences getWidgetState(android.content.Context,int)>
SOURCE|<com.android.browser.SuggestionsAdapter: int getCount()>
SOURCE|<com.google.common.collect.MapMakerInternalMap$StrongExpirableEntry: com.google.common.collect.MapMakerInternalMap$ReferenceEntry getPreviousExpirable()>
SOURCE|<com.android.bluetooth.btservice.AdapterProperties: byte[] getAddress()>
SOURCE|<com.android.server.accessibility.AccessibilityManagerService: boolean getActiveWindowBounds(android.graphics.Rect)>
SOURCE|<com.adobe.xmp.options.Options: int getOptions()>
SOURCE|<android.telephony.SmsMessage: android.telephony.SmsMessage createFromEfRecord(int,byte[])>
SOURCE|<android.net.IThrottleManager$Stub$Proxy: java.lang.String getHelpUri()>
SOURCE|<com.android.gallery3d.ui.GLView: int getMeasuredWidth()>
SOURCE|<java.security.cert.X509Certificate: java.util.Collection getIssuerAlternativeNames()>
SOURCE|<com.android.inputmethod.keyboard.internal.KeyboardIconsSet: java.lang.String getIconName(int)>
SOURCE|<com.android.gallery3d.filtershow.imageshow.GeometryMetadata: android.graphics.Matrix getOriginalToScreen(boolean,float,float,float,float)>
SOURCE|<com.android.contacts.detail.ContactDetailFragment$ViewEntryDimensions: int getPaddingRight()>
SOURCE|<android.graphics.drawable.DrawableContainer$DrawableContainerState: android.graphics.Rect getConstantPadding()>
SOURCE|<org.xmlpull.v1.sax2.Driver: int getIndex(java.lang.String,java.lang.String)>
SOURCE|<com.android.launcher2.CellLayout: boolean getIsDragOverlapping()>
SOURCE|<com.android.internal.telephony.SmsMessageBase: java.lang.String getEmailBody()>
SOURCE|<android.net.Uri$OpaqueUri: java.lang.String getUserInfo()>
SOURCE|<gov.nist.javax.sip.header.extensions.Join: java.lang.String getCallId()>
SOURCE|<android.nfc.NfcActivityManager: android.nfc.NfcActivityManager$NfcActivityState findResumedActivityState()>
SOURCE|<android.speech.tts.TtsEngines: java.lang.String getHighestRankedEngineName()>
SOURCE|<java.lang.Class: java.lang.ClassLoader getClassLoader()>
SOURCE|<com.android.internal.widget.DrawableHolder: float getScaleY()>
SOURCE|<org.apache.http.message.BasicHeaderElement: org.apache.http.NameValuePair[] getParameters()>
SOURCE|<com.android.internal.telephony.cdma.CDMAPhone: void getSmscAddress(android.os.Message)>
SOURCE|<android.content.pm.IPackageManager$Stub$Proxy: android.content.pm.ProviderInfo getProviderInfo(android.content.ComponentName,int,int)>
SOURCE|<android.bluetooth.IBluetooth$Stub: android.os.IBinder asBinder()>
SOURCE|<java.lang.Number: byte byteValue()>
SOURCE|<android.media.MediaFile: android.media.MediaFile$MediaFileType getFileType(java.lang.String)>
SOURCE|<android.text.Selection: int getSelectionStart(java.lang.CharSequence)>
SOURCE|<android.provider.Settings$Secure: long getLongForUser(android.content.ContentResolver,java.lang.String,long,int)>
SOURCE|<com.android.uiautomator.core.QueryController: int getPatternCount(com.android.uiautomator.core.UiSelector)>
SOURCE|<com.android.gallery3d.app.SlideshowPage$ShuffleSource: com.android.gallery3d.data.MediaItem getMediaItem(int)>
SOURCE|<gov.nist.javax.sip.header.extensions.SessionExpires: java.lang.String getRefresher()>
SOURCE|<libcore.net.http.HttpEngine: int getResponseCode()>
SOURCE|<java.text.Format: java.lang.String format(java.lang.Object)>
SOURCE|<android.test.mock.MockResources: java.lang.String getResourcePackageName(int)>
SOURCE|<com.android.email.EmailConnectivityManager: int getActiveNetworkType(android.content.Context)>
SOURCE|<android.graphics.drawable.DrawableContainer$DrawableContainerState: int getConstantMinimumHeight()>
SOURCE|<org.apache.harmony.xnet.provider.jsse.SSLSocketImpl: java.lang.String getWrappedHostName()>
SOURCE|<com.google.android.apps.lightcycle.panorama.LightCycleView: int getTotalPhotos()>
SOURCE|<android.app.admin.IDevicePolicyManager$Stub$Proxy: int getPasswordMinimumUpperCase(android.content.ComponentName,int)>
SOURCE|<com.android.contacts.detail.ContactDetailFragment$ViewAdapter: int getCount()>
SOURCE|<com.android.internal.telephony.DataConnectionTracker: java.lang.String getReryConfig(boolean)>
SOURCE|<com.android.nfc.handover.HandoverManager: android.nfc.NdefMessage tryHandoverRequest(android.nfc.NdefMessage)>
SOURCE|<com.android.emailcommon.utility.Utility: java.lang.Integer getFirstRowInt(android.content.Context,android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,int,java.lang.Integer)>
SOURCE|<java.util.WeakHashMap: java.util.WeakHashMap$Entry getEntry(java.lang.Object)>
SOURCE|<com.google.android.picasasync.PicasaFacade: android.net.Uri getUsersUri()>
SOURCE|<android.appwidget.AppWidgetManager: android.appwidget.AppWidgetProviderInfo getAppWidgetInfo(int)>
SOURCE|<org.apache.http.impl.conn.AbstractClientConnAdapter: org.apache.http.conn.OperatedClientConnection getWrappedConnection()>
SOURCE|<android.content.ContentResolver: java.io.InputStream openInputStream(android.net.Uri)>
SOURCE|<android.webkit.WebSettingsClassic: int getMinimumFontSize()>
SOURCE|<android.view.Surface: int getGenerationId()>
SOURCE|<android.content.res.Resources: android.graphics.drawable.Drawable getDrawable(int)>
SOURCE|<org.apache.harmony.xnet.provider.jsse.OpenSSLKey: java.lang.String getAlias()>
SOURCE|<gov.nist.javax.sip.header.AcceptLanguageList: gov.nist.javax.sip.header.AcceptLanguage getLast()>
SOURCE|<java.security.Signature: java.lang.String getAlgorithm()>
SOURCE|<java.lang.Enum: java.lang.Class getDeclaringClass()>
SOURCE|<java.util.EventListenerProxy: java.util.EventListener getListener()>
SOURCE|<com.android.internal.telephony.RetryManager: int getRetryTimer()>
SOURCE|<android.app.ApplicationPackageManager: android.graphics.drawable.Drawable getDefaultActivityIcon()>
SOURCE|<android.test.IsolatedContext$MockAccountManager: android.accounts.AccountManagerFuture getAuthToken(android.accounts.Account,java.lang.String,boolean,android.accounts.AccountManagerCallback,android.os.Handler)>
SOURCE|<gov.nist.javax.sip.header.ProxyAuthenticate: javax.sip.address.URI getURI()>
SOURCE|<com.android.contacts.model.dataitem.ImDataItem: java.lang.String getCustomProtocol()>
SOURCE|<com.google.common.collect.ImmutableSortedMap: java.lang.Object writeReplace()>
SOURCE|<android.net.sip.SimpleSessionDescription$Media: java.lang.String getAttribute(java.lang.String)>
SOURCE|<com.android.gallery3d.ui.ExtTexture: int getHeight()>
SOURCE|<android.filterfw.core.GLFrame: float[] getFloats()>
SOURCE|<com.android.mms.data.Conversation: long getDate()>
SOURCE|<org.apache.http.impl.cookie.CookieSpecBase: java.lang.String getDefaultDomain(org.apache.http.cookie.CookieOrigin)>
SOURCE|<android.media.videoeditor.MediaImageItem: android.graphics.Bitmap getThumbnail(int,int,long)>
SOURCE|<gov.nist.javax.sip.header.ParametersHeader: java.util.Iterator getMultiParameterNames()>
SOURCE|<javax.crypto.ExemptionMechanism: javax.crypto.ExemptionMechanism getInstance(java.lang.String)>
SOURCE|<android.nfc.tech.MifareClassic: int getBlockCount()>
SOURCE|<gov.nist.javax.sip.header.Via: java.lang.String getReceived()>
SOURCE|<com.android.gallery3d.data.MediaObject: android.net.Uri getContentUri()>
SOURCE|<com.android.calendar.agenda.AgendaWindowAdapter: com.android.calendar.agenda.AgendaWindowAdapter$EventInfo getEventByPosition(int,boolean)>
SOURCE|<com.android.server.accessibility.ScreenMagnifier$MagnificationController: android.graphics.Rect getMagnifiedRegionBounds()>
SOURCE|<org.apache.harmony.security.provider.cert.X509CertImpl: int getVersion()>
SOURCE|<android.media.MediaFile: java.lang.String getMimeTypeForFile(java.lang.String)>
SOURCE|<com.android.internal.policy.impl.keyguard.PagedView: int getPageNearestToCenterOfScreen()>
SOURCE|<com.android.gallery3d.util.IdentityCache: java.lang.Object get(java.lang.Object)>
SOURCE|<com.android.internal.app.IUsageStats$Stub$Proxy: com.android.internal.os.PkgUsageStats getPkgUsageStats(android.content.ComponentName)>
SOURCE|<com.android.gallery3d.filtershow.imageshow.ImageStraighten: int getLocalValue()>
SOURCE|<android.text.method.DateKeyListener: int getInputType()>
SOURCE|<android.database.sqlite.SQLiteDatabase: java.util.ArrayList getDbStats()>
SOURCE|<com.android.internal.database.SortCursor: long getLong(int)>
SOURCE|<com.android.inputmethod.keyboard.MoreKeysKeyboard$MoreKeyDivider: android.graphics.drawable.Drawable getIcon(com.android.inputmethod.keyboard.internal.KeyboardIconsSet,int)>
SOURCE|<com.android.nfc.handover.HandoverManager: android.nfc.NdefRecord createHandoverRequestRecord()>
SOURCE|<android.net.http.AndroidHttpClientConnection: int getSocketTimeout()>
SOURCE|<gov.nist.javax.sip.stack.SIPDialog: javax.sip.Transaction getFirstTransaction()>
SOURCE|<org.apache.http.HttpHost: java.lang.String getHostName()>
SOURCE|<android.graphics.Canvas: android.graphics.Rect getClipBounds()>
SOURCE|<org.apache.james.mime4j.field.datetime.parser.DateTimeParser$Time: int getMinute()>
SOURCE|<java.security.CodeSigner: java.security.Timestamp getTimestamp()>
SOURCE|<com.android.nfc.dhimpl.NativeLlcpSocket: int getLocalSap()>
SOURCE|<gov.nist.javax.sip.header.RequestLine: java.lang.String getMethod()>
SOURCE|<android.view.accessibility.AccessibilityEvent: java.lang.CharSequence getContentDescription()>
SOURCE|<com.android.browser.view.PieItem: float getStart()>
SOURCE|<org.apache.http.protocol.DefaultedHttpContext: org.apache.http.protocol.HttpContext getDefaults()>
SOURCE|<org.apache.http.impl.io.ChunkedInputStream: void parseTrailerHeaders()>
SOURCE|<com.android.internal.telephony.sip.SipPhone: boolean getIccRecordsLoaded()>
SOURCE|<android.widget.Switch: android.graphics.drawable.Drawable getThumbDrawable()>
SOURCE|<com.android.org.bouncycastle.asn1.DERGeneralizedTime: java.lang.String getTimeString()>
SOURCE|<com.android.server.am.ActivityManagerService: android.app.ActivityManager$TaskThumbnails getTaskThumbnails(int)>
SOURCE|<com.android.bluetooth.hfp.HeadsetService$BluetoothHeadsetBinder: java.util.List getConnectedDevices()>
SOURCE|<android.telephony.SmsCbEtwsInfo: java.lang.String toString()>
SOURCE|<com.android.server.pm.PackageSettingBase: java.util.HashSet getEnabledComponents(int)>
SOURCE|<com.android.internal.util.StateMachine: com.android.internal.util.StateMachine$LogRec getLogRec(int)>
SOURCE|<android.content.pm.ActivityInfo: int getRealConfigChanged()>
SOURCE|<com.android.server.display.LocalDisplayAdapter$LocalDisplayDevice: com.android.server.display.DisplayDeviceInfo getDisplayDeviceInfoLocked()>
SOURCE|<android.widget.NumberPicker: int getMinValue()>
SOURCE|<android.media.videoeditor.Effect: long getDuration()>
SOURCE|<com.android.launcher2.CellLayout: com.android.launcher2.CellLayout$CellInfo getTag()>
SOURCE|<com.android.gallery3d.ui.ExtTexture: int getTarget()>
SOURCE|<com.android.contacts.quickcontact.DataAction: java.lang.String getAlternateIconDescription()>
SOURCE|<android.text.style.TextAppearanceSpan: int getSpanTypeId()>
SOURCE|<android.accessibilityservice.UiTestAutomationBridge: android.view.accessibility.AccessibilityEvent getLastAccessibilityEvent()>
SOURCE|<android.database.sqlite.SQLiteOpenHelper: android.database.sqlite.SQLiteDatabase getReadableDatabase()>
SOURCE|<java.util.PropertyPermission: java.lang.String getActions()>
SOURCE|<com.android.server.input.InputManagerService: android.hardware.input.KeyboardLayout getKeyboardLayout(java.lang.String)>
SOURCE|<com.android.contacts.calllog.CallLogListItemViews: com.android.contacts.calllog.CallLogListItemViews createForTest(android.content.Context)>
SOURCE|<android.app.ApplicationPackageManager: android.content.res.XmlResourceParser getXml(java.lang.String,int,android.content.pm.ApplicationInfo)>
SOURCE|<android.graphics.drawable.ClipDrawable: int getIntrinsicWidth()>
SOURCE|<android.renderscript.ProgramStore: android.renderscript.ProgramStore$BlendSrcFunc getBlendSrcFunc()>
SOURCE|<org.apache.harmony.xnet.provider.jsse.SSLSocketImpl: boolean getUseClientMode()>
SOURCE|<android.widget.SimpleCursorAdapter: android.widget.SimpleCursorAdapter$ViewBinder getViewBinder()>
SOURCE|<android.widget.ListView: int getHeaderViewsCount()>
SOURCE|<android.os.storage.IMountService$Stub$Proxy: java.lang.String getMountedObbPath(java.lang.String)>
SOURCE|<android.renderscript.Script$FieldBase: android.renderscript.Type getType()>
SOURCE|<android.content.IClipboard$Stub$Proxy: android.content.ClipDescription getPrimaryClipDescription()>
SOURCE|<com.android.internal.appwidget.IAppWidgetHost$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
SOURCE|<android.test.mock.MockCursor: java.lang.String[] getColumnNames()>
SOURCE|<gov.nist.javax.sip.address.TelephoneNumber: java.lang.String getPostDial()>
SOURCE|<android.content.res.Resources: int getDimensionPixelOffset(int)>
SOURCE|<com.android.internal.telephony.gsm.SmsMessage: com.android.internal.telephony.gsm.SmsMessage$SubmitPdu getSubmitPdu(java.lang.String,java.lang.String,int,byte[],boolean)>
SOURCE|<com.google.android.picasasync.UploadTaskEntry: java.lang.String getAlbumId()>
SOURCE|<com.android.internal.telephony.ApnContext: boolean getDependencyMet()>
SOURCE|<android.widget.Spinner: int getDropDownVerticalOffset()>
SOURCE|<java.nio.ShortArrayBuffer: short get()>
SOURCE|<com.android.contacts.model.dataitem.OrganizationDataItem: java.lang.String getTitle()>
SOURCE|<com.adobe.xmp.impl.XMPDateTimeImpl: java.util.Calendar getCalendar()>
SOURCE|<android.net.rtp.AudioGroup: int getMode()>
SOURCE|<android.text.SpannableStringBuilder: float getTextRunAdvances(int,int,int,int,int,float[],int,android.graphics.Paint)>
SOURCE|<android.preference.CheckBoxPreference: java.lang.CharSequence getSummaryOn()>
SOURCE|<android.hardware.Camera$Parameters: java.lang.String getFlashMode()>
SOURCE|<android.net.http.Connection: android.net.http.SslCertificate getCertificate()>
SOURCE|<android.preference.RingtonePreference: boolean getShowDefault()>
SOURCE|<com.android.uiautomator.testrunner.TestCaseCollector: java.util.List getTestCases()>
SOURCE|<android.view.animation.Animation: void getInvalidateRegion(int,int,int,int,android.graphics.RectF,android.view.animation.Transformation)>
SOURCE|<com.android.email.activity.AccountSelectorAdapter: java.lang.String getDisplayName(android.database.Cursor)>
SOURCE|<com.android.browser.Tab$3: android.view.View getVideoLoadingProgressView()>
SOURCE|<com.android.gallery3d.ui.GLCanvasImpl: javax.microedition.khronos.opengles.GL11 getGLInstance()>
SOURCE|<java.text.DateFormat: java.text.DateFormat getTimeInstance(int)>
SOURCE|<java.security.cert.PKIXParameters: java.util.List getCertPathCheckers()>
SOURCE|<com.android.i18n.phonenumbers.PhoneNumberUtil: com.android.i18n.phonenumbers.Phonenumber$PhoneNumber getExampleNumber(java.lang.String)>
SOURCE|<com.android.internal.telephony.DataConnectionAc: java.util.Collection getApnListSync()>
SOURCE|<com.android.calendar.widget.CalendarAppWidgetService$CalendarFactory: android.net.Uri access$200(com.android.calendar.widget.CalendarAppWidgetService$CalendarFactory)>
SOURCE|<org.apache.http.impl.conn.DefaultClientConnection: org.apache.http.io.SessionInputBuffer createSessionInputBuffer(java.net.Socket,int,org.apache.http.params.HttpParams)>
SOURCE|<android.view.View: float getCameraDistance()>
SOURCE|<com.android.mms.ui.IconListAdapter$IconListItem: int getResource()>
SOURCE|<android.webkit.CookieSyncManager: android.webkit.CookieSyncManager getInstance()>
SOURCE|<com.android.internal.location.ILocationProvider$Stub$Proxy: int getStatus(android.os.Bundle)>
SOURCE|<gov.nist.javax.sip.header.ims.PAccessNetworkInfo: java.lang.String getUtranCellID3GPP()>
SOURCE|<gov.nist.javax.sip.header.Via: gov.nist.core.NameValueList getViaParms()>
SOURCE|<com.android.internal.telephony.IccCardApplicationStatus: com.android.internal.telephony.IccCardApplicationStatus$AppState AppStateFromRILInt(int)>
SOURCE|<com.google.android.apps.lightcycle.camera.TextureCameraPreview: com.google.android.apps.lightcycle.util.Size getPhotoSize()>
SOURCE|<org.apache.harmony.xnet.provider.jsse.SSLParametersImpl: javax.net.ssl.X509KeyManager getKeyManager()>
SOURCE|<com.googlecode.mp4parser.authoring.builder.DefaultMp4Builder$InterleaveChunkMdat: com.coremedia.iso.boxes.ContainerBox getParent()>
SOURCE|<java.lang.ClassLoader: java.lang.Class defineClass(java.lang.String,java.nio.ByteBuffer,java.security.ProtectionDomain)>
SOURCE|<com.android.internal.telephony.sip.SipPhone: android.telephony.ServiceState getServiceState()>
SOURCE|<com.android.server.sip.SipSessionListenerProxy: android.net.sip.ISipSessionListener getListener()>
SOURCE|<android.text.format.DateFormat: java.text.DateFormat getDateFormat(android.content.Context)>
SOURCE|<com.android.internal.telephony.PhoneProxy: com.android.internal.telephony.Call getRingingCall()>
SOURCE|<android.hardware.usb.UsbInterface: int getId()>
SOURCE|<android.app.SearchManager: android.content.Intent getAssistIntent(android.content.Context)>
SOURCE|<com.android.videoeditor.service.VideoEditorProject: com.android.videoeditor.service.MovieMediaItem getInsertAfterMediaItem(long)>
SOURCE|<com.android.internal.os.BatteryStatsImpl: long getBatteryUptimeLocked()>
SOURCE|<android.text.BoringLayout: int getLineDescent(int)>
SOURCE|<org.apache.harmony.xml.dom.NodeImpl: void getTextContent(java.lang.StringBuilder)>
SOURCE|<com.android.providers.contacts.ContactsProvider2: android.accounts.Account getDefaultAccount()>
SOURCE|<com.android.browser.BrowserSnapshotPage: android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)>
SOURCE|<com.android.camera.ComboPreferences: java.util.Map getAll()>
SOURCE|<org.apache.harmony.security.x509.InhibitAnyPolicy: byte[] getEncoded()>
SOURCE|<android.hardware.input.InputManager: java.lang.String[] getKeyboardLayoutsForInputDevice(java.lang.String)>
SOURCE|<android.widget.CompoundButton: int getCompoundPaddingRight()>
SOURCE|<java.nio.FloatToByteBufferAdapter: java.nio.FloatBuffer get(float[],int,int)>
SOURCE|<com.android.server.sip.SipSessionGroup$SipSessionImpl$2$1: java.lang.String getUserName()>
SOURCE|<com.android.server.am.ActivityManagerService: java.util.List getServices(int,int)>
SOURCE|<android.widget.TextView: float getLineSpacingExtra()>
SOURCE|<com.android.gallery3d.data.MtpContext: com.android.gallery3d.data.MtpClient getMtpClient()>
SOURCE|<com.google.common.collect.Multimaps$TransformedEntriesMultimap: java.util.Collection get(java.lang.Object)>
SOURCE|<com.android.inputmethod.latin.WordComposer: java.lang.CharSequence getAutoCorrectionOrNull()>
SOURCE|<com.android.browser.provider.SnapshotProvider: android.database.sqlite.SQLiteDatabase getWritableDatabase()>
SOURCE|<org.apache.http.impl.conn.tsccm.ThreadSafeClientConnManager: org.apache.http.conn.scheme.SchemeRegistry getSchemeRegistry()>
SOURCE|<com.android.i18n.phonenumbers.geocoding.AreaCodeMapStorageStrategy: java.util.TreeSet getPossibleLengths()>
SOURCE|<java.util.concurrent.ForkJoinTask: int getQueuedTaskCount()>
SOURCE|<org.apache.http.message.AbstractHttpMessage: org.apache.http.Header[] getHeaders(java.lang.String)>
SOURCE|<gov.nist.javax.sip.header.Accept: java.lang.String getContentType()>
SOURCE|<android.content.res.Resources: java.lang.CharSequence getText(int)>
SOURCE|<android.widget.TextView: int getHorizontalOffsetForDrawables()>
SOURCE|<com.android.server.connectivity.Tethering: java.lang.String[] getTetheredIfaces()>
SOURCE|<android.renderscript.Type: int getZ()>
SOURCE|<org.apache.http.entity.HttpEntityWrapper: long getContentLength()>
SOURCE|<org.apache.http.message.BufferedHeader: int getValuePos()>
SOURCE|<com.android.uiautomator.core.UiDevice: java.lang.String getLastTraversedText()>
SOURCE|<org.apache.harmony.xml.ExpatAttributes: java.lang.String getType(int)>
SOURCE|<org.apache.http.impl.conn.LoggingSessionInputBuffer: org.apache.http.io.HttpTransportMetrics getMetrics()>
SOURCE|<com.android.server.am.ActivityManagerService: java.util.List getTasks(int,int,android.app.IThumbnailReceiver)>
SOURCE|<org.apache.http.message.BasicHeaderElement: org.apache.http.NameValuePair getParameter(int)>
SOURCE|<com.android.deskclock.widget.multiwaveview.PointCloud$GlowManager: float getY()>
SOURCE|<android.app.ActivityThread: android.content.res.Configuration getConfiguration()>
SOURCE|<android.net.wifi.WifiManager: java.util.List getConfiguredNetworks()>
SOURCE|<android.view.textservice.SuggestionsInfo: int getSequence()>
SOURCE|<android.app.ActivityThread: android.app.LoadedApk getPackageInfo(java.lang.String,android.content.res.CompatibilityInfo,int)>
SOURCE|<android.widget.TextView: android.content.res.ColorStateList getHintTextColors()>
SOURCE|<com.android.gallery3d.data.DataManager: long getTotalTargetCacheSize()>
SOURCE|<android.content.res.XmlBlock$Parser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>
SOURCE|<android.app.SearchManager: android.content.ComponentName getGlobalSearchActivity()>
SOURCE|<android.test.ActivityTestCase: android.app.Activity getActivity()>
SOURCE|<org.xml.sax.SAXParseException: int getColumnNumber()>
SOURCE|<com.google.common.collect.ForwardingIterator: java.lang.Object next()>
SOURCE|<android.appwidget.AppWidgetManager: android.appwidget.AppWidgetManager getInstance(android.content.Context)>
SOURCE|<org.apache.harmony.xnet.provider.jsse.ProtocolVersion: org.apache.harmony.xnet.provider.jsse.ProtocolVersion getByName(java.lang.String)>
SOURCE|<android.view.InputDevice: android.view.InputDevice$MotionRange getMotionRange(int,int)>
SOURCE|<com.android.calendar.EventInfoFragment: long getStartMillis()>
SOURCE|<android.preference.Preference: android.os.Bundle getExtras()>
SOURCE|<java.security.DomainLoadStoreParameter: java.security.KeyStore$ProtectionParameter getProtectionParameter()>
SOURCE|<android.location.GpsSatellite: float getElevation()>
SOURCE|<org.apache.harmony.xnet.provider.jsse.SSLRecordProtocol: int getDataSize(int)>
SOURCE|<android.media.IAudioService$Stub$Proxy: int getStreamVolume(int)>
SOURCE|<com.android.deskclock.Alarms: android.content.CursorLoader getAlarmsCursorLoader(android.content.Context)>
SOURCE|<com.android.internal.telephony.DataConnectionTracker: boolean getDataOnRoamingEnabled()>
SOURCE|<com.android.internal.widget.ILockSettings$Stub$Proxy: boolean getBoolean(java.lang.String,boolean,int)>
SOURCE|<com.google.common.io.Files$1: java.io.FileInputStream getInput()>
SOURCE|<android.view.KeyEvent: int getAction()>
SOURCE|<org.apache.harmony.xnet.provider.jsse.OpenSSLSessionImpl: long getCreationTime()>
SOURCE|<java.lang.Package: java.lang.String getImplementationTitle()>
SOURCE|<java.time.zone.ZoneOffsetTransitionRule: java.time.ZoneOffset getOffsetBefore()>
SOURCE|<org.apache.harmony.xnet.provider.jsse.OpenSSLSocketImpl: int getSoTimeout()>
SOURCE|<android.database.BulkCursorProxy: android.os.Bundle getExtras()>
SOURCE|<android.webkit.WebResourceResponse: java.lang.String getEncoding()>
SOURCE|<javax.net.ssl.SSLParameters: java.lang.String[] getProtocols()>
SOURCE|<com.android.email.Preferences: boolean getEnableExchangeFileLogging()>
SOURCE|<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>
SOURCE|<java.text.NumberFormat: java.lang.Object parseObject(java.lang.String,java.text.ParsePosition)>
SOURCE|<com.android.ex.chips.RecipientAlternatesAdapter: java.util.HashMap getMatchingRecipients(android.content.Context,java.util.ArrayList,int)>
SOURCE|<com.android.contacts.model.account.BaseAccountType$SimpleInflater: java.lang.String getColumnNameForTest()>
SOURCE|<com.android.internal.policy.impl.keyguard.SlidingChallengeLayout: int getMaxChallengeTop()>
SOURCE|<android.view.MotionEvent: float getToolMinor()>
SOURCE|<java.net.DatagramPacket: int getLength()>
SOURCE|<com.android.internal.telephony.PhoneProxy: java.lang.String getDeviceId()>
SOURCE|<android.mtp.MtpDevice: android.mtp.MtpStorageInfo getStorageInfo(int)>
SOURCE|<com.google.android.apps.lightcycle.sensor.SensorReader: float getImuOrientationDegrees()>
SOURCE|<com.android.gallery3d.data.LocalAlbum: com.android.gallery3d.data.MediaItem[] getMediaItemById(com.android.gallery3d.app.GalleryApp,boolean,java.util.ArrayList)>
SOURCE|<android.telephony.cdma.CdmaSmsCbProgramData: int getMaxMessages()>
SOURCE|<com.android.vcard.VCardEntry$NameData: com.android.vcard.VCardEntry$EntryLabel getEntryLabel()>
SOURCE|<com.android.browser.PreloadedTabControl: com.android.browser.Tab getTab()>
SOURCE|<com.android.internal.telephony.sip.SipPhoneBase: java.lang.String getEsn()>
SOURCE|<android.app.Activity: android.app.ActionBar getActionBar()>
SOURCE|<com.android.browser.search.OpenSearchSearchEngine: java.lang.String getName()>
SOURCE|<java.io.OutputStreamWriter: java.lang.String getEncoding()>
SOURCE|<android.view.View: int getNextFocusUpId()>
SOURCE|<com.android.phone.PhoneUtils: java.lang.String getInitialNumber(android.content.Intent)>
SOURCE|<java.lang.SecurityManager: java.lang.ClassLoader currentClassLoader()>
SOURCE|<com.android.gallery3d.ui.RawTexture: int getTextureWidth()>
SOURCE|<com.android.gallery3d.data.Path: com.android.gallery3d.data.MediaObject getObject()>
SOURCE|<android.drm.mobile1.DrmRightsManager: java.util.List getRightsList()>
SOURCE|<android.opengl.GLUtils: int getType(android.graphics.Bitmap)>
SOURCE|<com.android.internal.telephony.UiccCardApplication: boolean getIccFdnEnabled()>
SOURCE|<org.apache.http.message.ParserCursor: int getLowerBound()>
SOURCE|<android.view.IDisplayContentChangeListener$Stub: android.os.IBinder asBinder()>
SOURCE|<android.app.admin.DevicePolicyManager: java.util.List getActiveAdmins()>
SOURCE|<com.google.common.collect.ArrayListMultimap: java.util.Collection createCollection()>
SOURCE|<com.android.mms.MmsConfig: java.lang.String getHttpParams()>
SOURCE|<android.net.LocalSocket: java.io.FileDescriptor[] getAncillaryFileDescriptors()>
SOURCE|<android.test.mock.MockContext: java.io.File getDir(java.lang.String,int)>
SOURCE|<com.android.internal.telephony.ITelephonyRegistry$Stub: android.os.IBinder asBinder()>
SOURCE|<android.app.ContextImpl$ApplicationContentResolver: int getIsSyncable(android.accounts.Account,java.lang.String)>
SOURCE|<com.android.contacts.voicemail.VoicemailPlaybackFragment$ActivityReference: android.app.Activity get()>
SOURCE|<com.android.email.RefreshManager: com.android.email.RefreshManager$Status getMailboxListStatusForTest(long)>
SOURCE|<com.android.contacts.model.Contact: java.lang.String getPhotoUri()>
SOURCE|<com.google.common.collect.MapMakerInternalMap$NullEntry: long getExpirationTime()>
SOURCE|<android.view.GLES20RenderLayer: android.view.HardwareCanvas getCanvas()>
SOURCE|<com.android.videoeditor.widgets.MediaLinearLayout: int getSelectedViewPos()>
SOURCE|<android.widget.AbsListView: int getHeaderViewsCount()>
SOURCE|<com.android.ex.variablespeed.VariableSpeed: int getDuration()>
SOURCE|<android.net.Uri$OpaqueUri: java.lang.String getLastPathSegment()>
SOURCE|<android.util.Xml: void parse(java.io.Reader,org.xml.sax.ContentHandler)>
SOURCE|<org.apache.harmony.xnet.provider.jsse.AbstractSessionContext: int getSessionCacheSize()>
SOURCE|<android.media.audiofx.AudioEffect: int getParameter(int,byte[])>
SOURCE|<android.net.LocalSocket: java.io.OutputStream getOutputStream()>
SOURCE|<android.accessibilityservice.IAccessibilityServiceClient$Stub: android.os.IBinder asBinder()>
SOURCE|<android.content.pm.ContainerEncryptionParams: long getEncryptedDataStart()>
SOURCE|<gov.nist.javax.sip.header.AuthenticationHeader: java.lang.String getDomain()>
SOURCE|<android.widget.RemoteViewsAdapter$FixedSizeRemoteViewsCache: android.widget.RemoteViews getRemoteViewsAt(int)>
SOURCE|<android.widget.TextView: int getMaxLines()>
SOURCE|<com.android.internal.telephony.Connection: java.lang.Object getUserData()>
SOURCE|<android.provider.Settings: java.lang.String getGTalkDeviceId(long)>
SOURCE|<android.content.CursorLoader: java.lang.String getSortOrder()>
SOURCE|<com.google.android.apps.lightcycle.panorama.PhotoCollection: int getNumFrames()>
SOURCE|<android.graphics.Region: boolean getBoundaryPath(android.graphics.Path)>
SOURCE|<com.android.internal.telephony.gsm.SIMRecords: com.android.internal.telephony.gsm.UsimServiceTable getUsimServiceTable()>
SOURCE|<android.app.PendingIntent: android.app.PendingIntent getActivitiesAsUser(android.content.Context,int,android.content.Intent[],int,android.os.Bundle,android.os.UserHandle)>
SOURCE|<com.android.contacts.activities.PeopleActivity$TabPagerAdapter: int getItemPosition(java.lang.Object)>
SOURCE|<android.content.res.AssetManager: int createTheme()>
SOURCE|<android.app.SharedPreferencesImpl: java.util.Map getAll()>
SOURCE|<com.android.gallery3d.common.LongSparseArray: java.lang.Object get(long,java.lang.Object)>
SOURCE|<libcore.net.http.RequestHeaders: int getMaxAgeSeconds()>
SOURCE|<android.location.Address: java.lang.String getSubAdminArea()>
SOURCE|<android.telephony.SignalStrength: int getLteAsuLevel()>
SOURCE|<com.android.contacts.model.RawContactDeltaList: com.android.contacts.model.RawContactDeltaList fromIterator(java.util.Iterator)>
SOURCE|<android.app.ApplicationPackageManager: android.content.pm.ResolveInfo resolveActivityAsUser(android.content.Intent,int,int)>
SOURCE|<android.preference.DialogPreference: java.lang.CharSequence getNegativeButtonText()>
SOURCE|<android.net.NetworkInfo: int getType()>
SOURCE|<java.net.NetworkInterface: java.net.NetworkInterface getParent()>
SOURCE|<android.media.videoeditor.MediaItem: java.lang.String getId()>
SOURCE|<android.os.Environment$UserEnvironment: java.io.File getExternalStorageAppFilesDirectory(java.lang.String)>
SOURCE|<java.util.LongSummaryStatistics: long getCount()>
SOURCE|<java.lang.Math: int getExponent(float)>
SOURCE|<gov.nist.javax.sip.message.SIPRequest: java.lang.Object getInviteTransaction()>
SOURCE|<com.android.browser.IntentHandler$UrlData: com.android.browser.PreloadedTabControl getPreloadedTab()>
SOURCE|<com.android.internal.policy.impl.keyguard.KeyguardWidgetFrame: int getContentAppWidgetId()>
SOURCE|<com.android.launcher2.Workspace$WallpaperOffsetInterpolator: float getCurrX()>
SOURCE|<javax.crypto.CipherSpi: int engineDoFinal(java.nio.ByteBuffer,java.nio.ByteBuffer)>
SOURCE|<com.android.internal.telephony.cdma.EriManager: java.lang.String getCdmaEriText(int,int)>
SOURCE|<android.view.View: int getNextFocusRightId()>
SOURCE|<android.app.IUiModeManager$Stub$Proxy: int getNightMode()>
SOURCE|<com.android.server.wm.InputMonitor: int getPointerLayer()>
SOURCE|<android.widget.AdapterViewAnimator: android.widget.Adapter getAdapter()>
SOURCE|<com.android.org.bouncycastle.asn1.DERUTCTime: com.android.org.bouncycastle.asn1.ASN1UTCTime getInstance(java.lang.Object)>
SOURCE|<com.android.emailcommon.mail.Multipart: com.android.emailcommon.mail.BodyPart getBodyPart(int)>
SOURCE|<org.apache.http.impl.HttpConnectionMetricsImpl: long getSentBytesCount()>
SOURCE|<android.graphics.drawable.ShapeDrawable: android.graphics.Paint getPaint()>
SOURCE|<android.provider.MediaStore: java.lang.String getVersion(android.content.Context)>
SOURCE|<android.database.AbstractWindowedCursor: long getLong(int)>
SOURCE|<com.android.internal.telephony.cdma.EriManager: int getCdmaEriIconMode(int,int)>
SOURCE|<com.android.internal.telephony.sip.SipPhone: boolean getMessageWaitingIndicator()>
SOURCE|<android.view.View: android.view.ViewParent getParent()>
SOURCE|<android.net.sip.SipSession: java.lang.String getCallId()>
SOURCE|<com.android.contacts.model.account.ExternalAccountType: java.lang.String getEditContactActivityClassName()>
SOURCE|<android.content.res.XmlBlock$Parser: java.lang.String getAttributePrefix(int)>
SOURCE|<android.filterfw.core.SimpleFrame: java.lang.Object getObjectValue()>
SOURCE|<mod.ndk.ActMain: java.lang.String cFuncGetIMEI(android.content.Context)>
SOURCE|<android.support.v4.os.ParcelableCompatCreatorHoneycombMR2: java.lang.Object createFromParcel(android.os.Parcel)>
SOURCE|<com.android.inputmethod.keyboard.MainKeyboardView: int getPointerCount()>
SOURCE|<org.apache.harmony.xnet.provider.jsse.SSLSocketImpl: java.lang.String[] getSupportedCipherSuites()>
SOURCE|<com.google.common.collect.ImmutableCollection: java.lang.Object writeReplace()>
SOURCE|<java.io.File: long getUsableSpace()>
SOURCE|<com.android.org.bouncycastle.asn1.DERBitString: byte[] getBytes()>
SOURCE|<com.android.browser.Tab: java.lang.String getOriginalUrl()>
SOURCE|<java.awt.font.NumericShaper: java.awt.font.NumericShaper getShaper(int)>
SOURCE|<android.util.EventLog$Event: long getTimeNanos()>
SOURCE|<android.webkit.WebSettings: boolean getAllowFileAccess()>
SOURCE|<gov.nist.javax.sip.header.HeaderFactoryImpl: javax.sip.header.MimeVersionHeader createMimeVersionHeader(int,int)>
SOURCE|<com.android.contacts.socialwidget.SocialWidgetSettings: android.net.Uri getContactUri(android.content.Context,int)>
SOURCE|<java.security.cert.CertPath: java.lang.String toString()>
SOURCE|<gov.nist.javax.sip.stack.DefaultRouter: javax.sip.address.Hop getOutboundProxy()>
SOURCE|<android.provider.Settings$Global: java.lang.String getBluetoothHeadsetPriorityKey(java.lang.String)>
SOURCE|<com.android.internal.app.ResolverActivity: android.graphics.drawable.Drawable loadIconForResolveInfo(android.content.pm.ResolveInfo)>
SOURCE|<com.google.android.picasasync.PicasaApi: int getAlbumPhotos(com.google.android.picasasync.AlbumEntry,com.google.android.picasasync.PicasaApi$EntryHandler)>
SOURCE|<org.apache.harmony.xml.dom.DOMErrorImpl: java.lang.String getMessage()>
SOURCE|<org.apache.http.params.BasicHttpParams: java.lang.Object getParameter(java.lang.String)>
SOURCE|<com.android.internal.util.FastXmlSerializer: java.lang.Object getProperty(java.lang.String)>
SOURCE|<android.webkit.WebSettingsClassic: boolean getJavaScriptEnabled()>
SOURCE|<com.android.browser.Controller: android.content.Context getContext()>
SOURCE|<com.android.nfc.NfcService: byte[] doTransceiveNoLock(int,byte[])>
SOURCE|<com.android.internal.telephony.cdma.CdmaConnection: java.lang.String getRemainingPostDialString()>
SOURCE|<com.android.internal.telephony.sip.SipConnectionBase: long getDisconnectTime()>
SOURCE|<android.hardware.GeomagneticField: float getZ()>
SOURCE|<android.database.MergeCursor: short getShort(int)>
SOURCE|<android.gesture.GestureOverlayView: int getGestureColor()>
SOURCE|<android.text.style.SuperscriptSpan: int getSpanTypeId()>
SOURCE|<javax.security.cert.X509Certificate: javax.security.cert.X509Certificate getInstance(java.io.InputStream)>
SOURCE|<android.widget.Gallery: boolean getChildStaticTransformation(android.view.View,android.view.animation.Transformation)>
SOURCE|<android.accounts.IAccountAuthenticator$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
SOURCE|<android.text.style.LeadingMarginSpan$Standard: int getLeadingMargin(boolean)>
SOURCE|<android.view.Display: int getHeight()>
SOURCE|<android.view.InputDevice$MotionRange: float getFuzz()>
SOURCE|<android.widget.ArrayAdapter: int getPosition(java.lang.Object)>
SOURCE|<com.android.videoeditor.widgets.MediaItemView: android.view.View$DragShadowBuilder getShadowBuilder()>
SOURCE|<com.android.providers.contacts.ContactsDatabaseHelper: java.util.Set getAllAccountsWithDataSets()>
SOURCE|<com.android.contacts.util.AccountsListAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)>
SOURCE|<com.android.internal.telephony.IccCardStatus: java.lang.String toString()>
SOURCE|<com.android.internal.widget.multiwaveview.PointCloud$WaveManager: float getRadius()>
SOURCE|<com.android.mms.data.Contact: java.lang.String getNumber()>
SOURCE|<java.util.AbstractMap: java.lang.String toString()>
SOURCE|<android.graphics.Canvas: android.graphics.Matrix getMatrix()>
SOURCE|<gov.nist.javax.sip.message.MessageFactoryImpl: javax.sip.message.Response createResponse(int,javax.sip.header.CallIdHeader,javax.sip.header.CSeqHeader,javax.sip.header.FromHeader,javax.sip.header.ToHeader,java.util.List,javax.sip.header.MaxForwardsHeader,javax.sip.header.ContentTypeHeader,byte[])>
SOURCE|<com.android.email.MessagingController: com.android.email.MessagingController getInstance(android.content.Context,com.android.email.Controller)>
SOURCE|<android.widget.AdapterView: android.widget.AdapterView$OnItemSelectedListener getOnItemSelectedListener()>
SOURCE|<java.net.DatagramSocket: int getSoTimeout()>
SOURCE|<android.widget.TabHost: android.view.View getCurrentTabView()>
SOURCE|<java.security.spec.RSAOtherPrimeInfo: java.math.BigInteger getPrime()>
SOURCE|<android.view.ViewStub: android.view.LayoutInflater getLayoutInflater()>
SOURCE|<javax.net.ssl.X509ExtendedKeyManager: java.lang.String chooseEngineClientAlias(java.lang.String[],java.security.Principal[],javax.net.ssl.SSLEngine)>
SOURCE|<com.android.email.mail.Sender: java.lang.Class getSettingActivityClass()>
SOURCE|<com.android.email.EmailConnectivityManager: int getActiveNetworkType(android.net.ConnectivityManager)>
SOURCE|<android.view.ScaleGestureDetector: float getCurrentSpanY()>
SOURCE|<com.android.internal.telephony.IccRefreshResponse: java.lang.String toString()>
SOURCE|<com.android.calendar.GeneralPreferences: android.content.SharedPreferences getSharedPreferences(android.content.Context)>
SOURCE|<android.app.UiModeManager: int getNightMode()>
SOURCE|<com.android.internal.view.BaseSurfaceHolder: int getRequestedWidth()>
SOURCE|<android.accounts.IAccountManager$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
SOURCE|<com.android.deskclock.DeskClock$TabsAdapter: int getCount()>
SOURCE|<org.apache.http.impl.conn.tsccm.RouteSpecificPool: int getEntryCount()>
SOURCE|<android.content.Intent: java.io.Serializable getSerializableExtra(java.lang.String)>
SOURCE|<gov.nist.javax.sip.header.ims.PAccessNetworkInfo: java.lang.String getCI3GPP2()>
SOURCE|<android.speech.tts.TextToSpeech$Connection: android.os.IBinder getCallerIdentity()>
SOURCE|<com.android.internal.telephony.PhoneProxy: int getCdmaEriIconIndex()>
SOURCE|<android.text.BoringLayout: int getBottomPadding()>
SOURCE|<gov.nist.javax.sip.clientauthutils.AuthenticationHelperImpl: javax.sip.ClientTransaction handleChallenge(javax.sip.message.Response,javax.sip.ClientTransaction,javax.sip.SipProvider,int)>
SOURCE|<com.google.android.mms.pdu.PduPart: byte[] getData()>
SOURCE|<org.apache.harmony.luni.lang.reflect.ImplForType: java.lang.Class getRawType()>
SOURCE|<org.kxml2.io.KXmlParser: java.lang.String getAttributeNamespace(int)>
SOURCE|<com.android.contacts.model.account.BaseAccountType$PhoneActionAltInflater: int getTypeLabelResource(java.lang.Integer)>
SOURCE|<com.android.internal.telephony.gsm.SimPhoneBookInterfaceManager: int[] getAdnRecordsSize(int)>
SOURCE|<java.net.NetworkInterface: java.util.Enumeration getInetAddresses()>
SOURCE|<android.drm.mobile1.DrmRawContent: java.io.InputStream getContentInputStream(android.drm.mobile1.DrmRights)>
SOURCE|<android.telephony.SmsMessage: int getStatusOnIcc()>
SOURCE|<com.android.systemui.recent.TaskDescription: android.graphics.Bitmap getThumbnail()>
SOURCE|<android.text.style.SuggestionRangeSpan: int getSpanTypeId()>
SOURCE|<android.nfc.INfcTag$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
SOURCE|<android.accounts.AbstractAccountAuthenticator: android.os.IBinder getIBinder()>
SOURCE|<org.apache.harmony.security.provider.cert.X509CertImpl: int getBasicConstraints()>
SOURCE|<com.android.bluetooth.opp.BluetoothOppManager: int getBatchSize()>
SOURCE|<android.media.AudioTrack: int getAudioFormat()>
SOURCE|<com.android.browser.widget.BookmarkThumbnailWidgetService$BookmarkFactory: android.widget.RemoteViews getViewAt(int)>
SOURCE|<android.graphics.Paint: float getTextRunAdvances(java.lang.CharSequence,int,int,int,int,int,float[],int)>
SOURCE|<com.android.internal.widget.multiwaveview.TargetDrawable$DrawableWithAlpha: float getAlpha()>
SOURCE|<android.telephony.SmsMessage: java.lang.String getMessageBody()>
SOURCE|<android.content.ContentResolver: android.os.Bundle call(android.net.Uri,java.lang.String,java.lang.String,android.os.Bundle)>
SOURCE|<java.lang.SecurityManager: boolean getInCheck()>
SOURCE|<com.android.server.input.InputManagerService: int getScanCodeState(int,int,int)>
SOURCE|<android.media.IAudioRoutesObserver$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
SOURCE|<com.android.inputmethod.latin.spellcheck.AndroidWordLevelSpellCheckerSession$SuggestionsCache: com.android.inputmethod.latin.spellcheck.AndroidWordLevelSpellCheckerSession$SuggestionsParams getSuggestionsFromCache(java.lang.String,java.lang.String)>
SOURCE|<com.android.internal.app.ActionBarImpl$TabImpl: java.lang.Object getTag()>
SOURCE|<android.text.StaticLayout: int getEllipsizedWidth()>
SOURCE|<android.view.accessibility.AccessibilityRecord: android.os.Parcelable getParcelableData()>
SOURCE|<android.widget.DatePicker: int getYear()>
SOURCE|<android.view.ViewGroup: int getChildMeasureSpec(int,int,int)>
SOURCE|<android.webkit.MimeTypeMap: android.webkit.MimeTypeMap getSingleton()>
SOURCE|<android.bluetooth.IBluetoothA2dp$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
SOURCE|<com.android.launcher2.LauncherModel: android.graphics.Bitmap getIconFromCursor(android.database.Cursor,int,android.content.Context)>
SOURCE|<java.io.ObjectStreamClass: java.lang.reflect.Method getMethodReadResolve()>
SOURCE|<com.google.android.mms.pdu.SendReq: int getReadReport()>
SOURCE|<com.android.gallery3d.ui.SlideshowView$SlideshowAnimation: int getCanvasSaveFlags()>
SOURCE|<com.android.browser.provider.BrowserProvider2$SuggestionsCursor: int getCount()>
SOURCE|<android.view.inputmethod.InputMethodInfo: java.lang.String getPackageName()>
SOURCE|<com.android.internal.telephony.IccCardApplicationStatus: java.lang.String toString()>
SOURCE|<gov.nist.javax.sip.header.CallInfo: javax.sip.address.URI getInfo()>
SOURCE|<com.android.mms.data.Contact: int getContactMethodType()>
SOURCE|<java.net.NetworkInterface: java.lang.String getName()>
SOURCE|<com.android.contacts.list.ContactListItemView: android.widget.TextView getLabelView()>
SOURCE|<com.android.contacts.model.Contact: java.lang.String getDirectoryDisplayName()>
SOURCE|<android.content.pm.IPackageManager$Stub$Proxy: int getInstallLocation()>
SOURCE|<org.apache.harmony.xnet.provider.jsse.SSLSocketWrapper: java.net.InetAddress getInetAddress()>
SOURCE|<javax.crypto.EncryptedPrivateKeyInfo: java.lang.String getAlgName()>
SOURCE|<com.android.launcher2.Folder: java.util.ArrayList getItemsInReadingOrder()>
SOURCE|<com.android.org.bouncycastle.asn1.DERExternal: com.android.org.bouncycastle.asn1.ASN1Primitive getExternalContent()>
SOURCE|<org.apache.harmony.xnet.provider.jsse.AlertException: javax.net.ssl.SSLException getReason()>
SOURCE|<gov.nist.javax.sip.message.SIPRequest: gov.nist.javax.sip.message.SIPResponse createResponse(int)>
SOURCE|<com.android.mms.util.ImageCacheService: byte[] getBytes(java.lang.String)>
SOURCE|<android.mtp.MtpDeviceInfo: java.lang.String getVersion()>
SOURCE|<gov.nist.javax.sip.address.AddressImpl: java.lang.String getHost()>
SOURCE|<com.android.gallery3d.exif.ExifData: int getStripCount()>
SOURCE|<com.android.bluetooth.btservice.AdapterProperties: int getState()>
SOURCE|<com.android.deskclock.TimePicker: int getLayoutId()>
SOURCE|<org.apache.harmony.xnet.provider.jsse.OpenSSLSocketImplWrapper: int getLocalPort()>
SOURCE|<android.speech.SpeechRecognizer: android.speech.SpeechRecognizer createSpeechRecognizer(android.content.Context)>
SOURCE|<android.os.Bundle: java.lang.String getPairValue()>
SOURCE|<android.content.ContentValues: java.lang.Boolean getAsBoolean(java.lang.String)>
SOURCE|<java.util.Currency: java.lang.String getDisplayName()>
SOURCE|<gov.nist.javax.sip.address.Authority: gov.nist.core.HostPort getHostPort()>
SOURCE|<java.util.IllegalFormatWidthException: int getWidth()>
SOURCE|<android.view.MotionEvent: float getHistoricalOrientation(int)>
SOURCE|<android.os.Bundle: android.os.Parcelable[] getParcelableArray(java.lang.String)>
SOURCE|<java.net.URLConnection: long getLastModified()>
SOURCE|<java.util.prefs.AbstractPreferences: boolean getBoolean(java.lang.String,boolean)>
SOURCE|<android.app.ContextImpl: android.os.Looper getMainLooper()>
SOURCE|<android.test.InstrumentationTestRunner: junit.framework.TestSuite getAllTests()>
SOURCE|<com.android.server.wm.WindowManagerService: com.android.server.wm.InputMonitor getInputMonitor()>
SOURCE|<com.google.android.mms.pdu.MultimediaMessagePdu: long getDate()>
SOURCE|<com.android.mms.layout.HVGALayoutParameters: int getHeight()>
SOURCE|<android.provider.Settings$System: long getLongForUser(android.content.ContentResolver,java.lang.String,int)>
SOURCE|<android.widget.ListPopupWindow: int getHeight()>
SOURCE|<com.android.org.bouncycastle.asn1.ASN1OutputStream: com.android.org.bouncycastle.asn1.ASN1OutputStream getDERSubStream()>
SOURCE|<java.time.YearMonth: int get(java.time.temporal.TemporalField)>
SOURCE|<com.android.org.bouncycastle.asn1.DERApplicationSpecific: com.android.org.bouncycastle.asn1.ASN1Primitive getObject(int)>
SOURCE|<gov.nist.javax.sip.header.Contact: gov.nist.javax.sip.header.ContactList getContactList()>
SOURCE|<android.app.ActivityManagerProxy: android.content.pm.ConfigurationInfo getDeviceConfigurationInfo()>
SOURCE|<com.android.email.service.EasAuthenticatorService$EasAuthenticator: android.os.Bundle getAuthToken(android.accounts.AccountAuthenticatorResponse,android.accounts.Account,java.lang.String,android.os.Bundle)>
SOURCE|<dalvik.system.VMRuntime: long getExternalBytesAllocated()>
SOURCE|<com.android.internal.os.BatteryStatsImpl$Uid$Sensor: int getHandle()>
SOURCE|<com.android.browser.TitleBar: com.android.browser.PageProgressView getProgressView()>
SOURCE|<android.widget.Spinner$DropdownPopup: java.lang.CharSequence getHintText()>
SOURCE|<android.test.mock.MockCursor: long getLong(int)>
SOURCE|<android.renderscript.ProgramStore: android.renderscript.ProgramStore$BlendDstFunc getBlendDstFunc()>
SOURCE|<gov.nist.javax.sip.header.RAck: int getCSeqNumber()>
SOURCE|<com.android.exchange.EasResponse: int getStatus()>
SOURCE|<com.android.browser.ComboViewActivity$TabsAdapter: int getCount()>
SOURCE|<android.text.style.AlignmentSpan$Standard: android.text.Layout$Alignment getAlignment()>
SOURCE|<com.android.email.SecurityPolicy: com.android.emailcommon.provider.Policy computeAggregatePolicy()>
SOURCE|<org.apache.http.params.HttpConnectionParams: int getLinger(org.apache.http.params.HttpParams)>
SOURCE|<java.lang.ClassLoader: java.net.URL getSystemResource(java.lang.String)>
SOURCE|<com.android.server.DevicePolicyManagerService: int getPasswordMinimumLowerCase(android.content.ComponentName,int)>
SOURCE|<gov.nist.javax.sip.header.Contact: java.lang.String getPubGruuParam()>
SOURCE|<com.android.gallery3d.app.GalleryActionBar$AlbumModeAdapter: long getItemId(int)>
SOURCE|<android.preference.PreferenceActivity$Header: java.lang.CharSequence getBreadCrumbShortTitle(android.content.res.Resources)>
SOURCE|<org.apache.http.conn.params.ConnRouteParams: org.apache.http.conn.routing.HttpRoute getForcedRoute(org.apache.http.params.HttpParams)>
SOURCE|<com.google.android.apps.lightcycle.panorama.DeviceManager: float getOpenGlDefaultFieldOfViewDegrees()>
SOURCE|<android.widget.FastScroller: int getWidth()>
SOURCE|<com.android.gallery3d.filtershow.imageshow.GeometryMetadata: android.graphics.Matrix getVerticalMatrix(float)>
SOURCE|<com.android.contacts.detail.ContactDetailFragment$MakeLocalCopyQuickFix: java.lang.String getTitle()>
SOURCE|<libcore.net.http.HttpsURLConnectionImpl$HttpsEngine: javax.net.ssl.SSLSocketFactory getSslSocketFactory()>
SOURCE|<android.hardware.usb.UsbManager: java.util.HashMap getDeviceList()>
SOURCE|<com.android.internal.policy.impl.keyguard.PagedView: int getRelativeChildOffset(int)>
SOURCE|<android.widget.ListPopupWindow: android.view.View getSelectedView()>
SOURCE|<java.time.format.DateTimeFormatter: java.time.format.DecimalStyle getDecimalStyle()>
SOURCE|<android.bluetooth.BluetoothAdapter: android.bluetooth.BluetoothServerSocket listenUsingEncryptedRfcommWithServiceRecord(java.lang.String,java.util.UUID)>
SOURCE|<android.net.Uri$StringUri: java.lang.String getFragment()>
SOURCE|<android.net.sip.SipManager: android.net.sip.SipProfile[] getListOfProfiles()>
SOURCE|<com.coremedia.iso.boxes.fragment.TrackFragmentHeaderBox: com.coremedia.iso.boxes.fragment.SampleFlags getDefaultSampleFlags()>
SOURCE|<android.widget.ExpandableListConnector: long getItemId(int)>
SOURCE|<com.android.org.bouncycastle.asn1.BERApplicationSpecificParser: com.android.org.bouncycastle.asn1.ASN1Primitive getLoadedObject()>
SOURCE|<android.net.NetworkStats: long getElapsedRealtimeAge()>
SOURCE|<android.bluetooth.IBluetoothPan$Stub$Proxy: int getConnectionState(android.bluetooth.BluetoothDevice)>
SOURCE|<com.google.android.mms.pdu.PduHeaders: int getOctet(int)>
SOURCE|<java.net.InetSocketAddress: java.net.InetAddress getAddress()>
SOURCE|<java.security.PKCS12Attribute: java.lang.String getName()>
SOURCE|<com.android.uiautomator.testrunner.UiAutomatorTestCase: android.os.Bundle getParams()>
SOURCE|<com.android.providers.calendar.CalendarProvider2: android.database.sqlite.SQLiteOpenHelper getDatabaseHelper(android.content.Context)>
SOURCE|<android.content.pm.ContainerEncryptionParams: long getAuthenticatedDataStart()>
SOURCE|<com.android.email.activity.MailboxFragmentAdapter$MailboxFragmentLoader: android.database.Cursor loadInBackground()>
SOURCE|<android.app.ActivityThread: android.app.Application getApplication()>
SOURCE|<android.content.pm.LabeledIntent: java.lang.String getSourcePackage()>
SOURCE|<android.hardware.SystemSensorManager$ListenerDelegate: java.util.List getSensors()>
SOURCE|<android.inputmethodservice.Keyboard: int getHorizontalGap()>
SOURCE|<java.nio.channels.spi.AbstractSelectableChannel: java.lang.Object blockingLock()>
SOURCE|<javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>
SOURCE|<android.content.ContentResolver: android.content.SyncInfo getCurrentSync()>
SOURCE|<org.apache.http.impl.conn.tsccm.ThreadSafeClientConnManager: int getDefaultMaxPerRoute()>
SOURCE|<com.android.internal.telephony.IccProvider: java.lang.String getType(android.net.Uri)>
SOURCE|<com.android.org.bouncycastle.asn1.x500.X500Name: com.android.org.bouncycastle.asn1.x500.RDN[] getRDNs()>
SOURCE|<java.security.AlgorithmParameters: java.security.spec.AlgorithmParameterSpec getParameterSpec(java.lang.Class)>
SOURCE|<android.test.mock.MockPackageManager: java.lang.String getNameForUid(int)>
SOURCE|<com.android.server.sip.SipSessionGroup$SipSessionImpl: java.lang.String getCallId()>
SOURCE|<com.android.emailcommon.provider.Policy: com.android.emailcommon.provider.Policy restorePolicyWithId(android.content.Context,long)>
SOURCE|<java.lang.SecurityManager: void checkCreateClassLoader()>
SOURCE|<com.google.android.mms.util.PduCacheEntry: int getMessageBox()>
SOURCE|<com.android.server.NetworkManagementService: boolean getIpForwardingEnabled()>
SOURCE|<com.android.internal.telephony.CallerInfo: java.lang.String getCallerId(android.content.Context,java.lang.String)>
SOURCE|<android.graphics.drawable.shapes.Shape: float getWidth()>
SOURCE|<android.location.Address: double getLatitude()>
SOURCE|<javax.obex.ServerOperation: java.lang.String getType()>
SOURCE|<com.android.emailcommon.internet.MimeMessage: java.lang.String getMimeType()>
SOURCE|<android.preference.PreferenceGroupAdapter: android.preference.Preference getItem(int)>
SOURCE|<com.android.inputmethod.latin.ResourceUtils: java.lang.String getDeviceOverrideValue(android.content.res.Resources,int,java.lang.String)>
SOURCE|<android.os.CommonTimeConfig: byte getMasterElectionPriority()>
SOURCE|<com.android.launcher2.WallpaperChooserDialogFragment$ImageAdapter: int getCount()>
SOURCE|<android.view.LayoutInflater: android.view.LayoutInflater$Factory getFactory()>
SOURCE|<android.filterfw.core.Frame: android.filterfw.core.Frame release()>
SOURCE|<android.view.View: float getTranslationX()>
SOURCE|<android.app.WallpaperManager$FastBitmapDrawable: int getMinimumHeight()>
SOURCE|<java.util.UnsafeArrayList: java.lang.Object get(int)>
SOURCE|<android.graphics.Paint: int getTextWidths(java.lang.CharSequence,int,int,float[])>
SOURCE|<com.android.internal.telephony.IccUtils: android.graphics.Bitmap parseToRGB(byte[],int,boolean)>
SOURCE|<com.android.contacts.model.account.AccountType: com.android.contacts.model.account.AccountTypeWithDataSet getAccountTypeAndDataSet()>
SOURCE|<android.graphics.drawable.NinePatchDrawable: android.graphics.Paint getPaint()>
SOURCE|<org.xml.sax.helpers.AttributesImpl: java.lang.String getType(int)>
SOURCE|<com.android.internal.widget.multiwaveview.PointCloud$GlowManager: float getY()>
SOURCE|<com.android.internal.telephony.CallTracker: java.lang.String checkForTestEmergencyNumber(java.lang.String)>
SOURCE|<com.android.contacts.list.ContactEntryListFragment: int getContactNameDisplayOrder()>
SOURCE|<com.android.browser.homepages.Template: com.android.browser.homepages.Template copy()>
SOURCE|<android.webkit.WebView: int getProgress()>
SOURCE|<org.apache.harmony.security.x509.ExtendedKeyUsage: java.util.List getExtendedKeyUsage()>
SOURCE|<com.android.email.service.EasTestAuthenticatorService$EasAuthenticator: java.lang.String getAuthTokenLabel(java.lang.String)>
SOURCE|<android.widget.Editor$SuggestionsPopupWindow$SuggestionAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)>
SOURCE|<com.android.org.bouncycastle.asn1.DERNumericString: com.android.org.bouncycastle.asn1.DERNumericString getInstance(com.android.org.bouncycastle.asn1.ASN1TaggedObject,boolean)>
SOURCE|<android.nfc.tech.NfcBarcode: byte[] getBarcode()>
SOURCE|<android.media.videoeditor.MediaVideoItem: int getVideoType()>
SOURCE|<com.android.videoeditor.service.VideoEditorProject: java.util.List getMediaItems()>
SOURCE|<com.android.contacts.list.JoinContactLoader: android.database.Cursor loadInBackground()>
SOURCE|<android.preference.PreferenceGroupAdapter: int getCount()>
SOURCE|<org.apache.http.impl.client.AbstractHttpClient: org.apache.http.HttpResponse execute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext)>
SOURCE|<java.util.concurrent.locks.AbstractQueuedSynchronizer: java.lang.Thread getFirstQueuedThread()>
SOURCE|<com.android.org.bouncycastle.asn1.ASN1OctetString: byte[] getOctets()>
SOURCE|<java.net.URL: java.lang.Object getContent()>
SOURCE|<android.graphics.Paint: int getTextGlyphs(java.lang.String,int,int,int,int,int,char[])>
SOURCE|<com.android.internal.telephony.sip.SipConnectionBase: long getDurationMillis()>
SOURCE|<android.hardware.input.IInputManager$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
SOURCE|<com.android.providers.contacts.ContactsProvider2: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,android.os.CancellationSignal)>
SOURCE|<org.apache.http.impl.client.AbstractHttpClient: org.apache.http.conn.ConnectionKeepAliveStrategy getConnectionKeepAliveStrategy()>
SOURCE|<com.android.browser.Controller: com.android.browser.Tab openTab(com.android.browser.IntentHandler$UrlData)>
SOURCE|<org.apache.http.entity.BufferedHttpEntity: long getContentLength()>
SOURCE|<android.os.storage.StorageVolume: android.os.UserHandle getOwner()>
SOURCE|<gov.nist.javax.sip.message.SIPMessage: java.util.LinkedList getMessageAsEncodedStrings()>
SOURCE|<java.util.concurrent.atomic.AtomicLongFieldUpdater: long getAndIncrement(java.lang.Object)>
SOURCE|<com.android.mms.dom.DocumentImpl: org.w3c.dom.DOMConfiguration getDomConfig()>
SOURCE|<android.content.SyncStorageEngine: int getIntColumn(android.database.Cursor,java.lang.String)>
SOURCE|<android.webkit.CacheManager: android.webkit.CacheManager$CacheResult getCacheFile(java.lang.String,java.util.Map)>
SOURCE|<gov.nist.javax.sip.message.SIPMessage: java.lang.Object getContent()>
SOURCE|<com.android.emailcommon.internet.MimeBodyPart: java.lang.String getFirstHeader(java.lang.String)>
SOURCE|<android.preference.PreferenceManager: android.preference.PreferenceScreen inflateFromResource(android.content.Context,int,android.preference.PreferenceScreen)>
SOURCE|<android.provider.Settings$Bookmarks: java.lang.CharSequence getTitle(android.content.Context,android.database.Cursor)>
SOURCE|<com.android.bluetooth.hdp.HealthService: java.util.List lookupHealthDevicesMatchingStates(int[])>
SOURCE|<android.app.ActivityManagerProxy: java.util.List getTasks(int,int,android.app.IThumbnailReceiver)>
SOURCE|<android.app.ContextImpl$ServiceFetcher: java.lang.Object getService(android.app.ContextImpl)>
SOURCE|<android.widget.ActivityChooserView: android.widget.ActivityChooserModel getDataModel()>
SOURCE|<android.view.TextureView: android.view.HardwareLayer getHardwareLayer()>
SOURCE|<com.android.contacts.calllog.ExtendedCursor: long getLong(int)>
SOURCE|<android.hardware.input.InputManager: android.view.InputDevice getInputDeviceByDescriptor(java.lang.String)>
SOURCE|<android.drm.DrmSupportInfo: java.util.Iterator getMimeTypeIterator()>
SOURCE|<com.android.mms.layout.LayoutManager: com.android.mms.layout.LayoutManager getInstance()>
SOURCE|<android.renderscript.Matrix4f: float[] getArray()>
SOURCE|<android.net.http.AndroidHttpClient: java.io.InputStream getUngzippedContent(org.apache.http.HttpEntity)>
SOURCE|<com.android.exchange.adapter.Search$SearchParser: int getTotalResults()>
SOURCE|<java.lang.Enum$1: java.lang.Object create(java.lang.Object)>
SOURCE|<com.android.email.mail.transport.MailTransport: java.lang.String getHost()>
SOURCE|<com.android.inputmethod.keyboard.internal.KeyboardRow: float getKeyWidth(android.content.res.TypedArray)>
SOURCE|<com.android.email.NotificationController: android.app.Notification createNewMessageNotification(long,long,android.database.Cursor,long,int,int)>
SOURCE|<java.util.Currency: java.util.Currency getInstance(java.lang.String)>
SOURCE|<android.accounts.AccountManager: android.accounts.AccountManagerFuture confirmCredentials(android.accounts.Account,android.os.Bundle,android.app.Activity,android.accounts.AccountManagerCallback,android.os.Handler)>
SOURCE|<gov.nist.javax.sip.header.ims.PUserDatabase: java.lang.String getDatabaseName()>
SOURCE|<com.android.org.bouncycastle.asn1.DEROctetStringParser: java.io.InputStream getOctetStream()>
SOURCE|<java.time.zone.ZoneRules: java.util.List getTransitions()>
SOURCE|<android.telephony.CellSignalStrengthGsm: int getDbm()>
SOURCE|<gov.nist.core.StringTokenizer: java.lang.String getSDPFieldName(java.lang.String)>
SOURCE|<android.content.Intent: double getDoubleExtra(java.lang.String,double)>
SOURCE|<com.android.launcher2.LauncherModel: com.android.launcher2.ShortcutInfo infoFromShortcutIntent(android.content.Context,android.content.Intent,android.graphics.Bitmap)>
SOURCE|<android.widget.RemoteViewsAdapter$FixedSizeRemoteViewsCache: android.widget.RemoteViewsAdapter$RemoteViewsMetaData getMetaData()>
SOURCE|<android.webkit.WebSettingsClassic: boolean getLightTouchEnabled()>
SOURCE|<java.lang.reflect.Method: java.lang.Class getDeclaringClass()>
SOURCE|<android.location.Address: double getLongitude()>
SOURCE|<android.provider.MediaStore$Audio$Genres$Members: android.net.Uri getContentUri(java.lang.String,long)>
SOURCE|<org.apache.harmony.xml.dom.ElementImpl: org.apache.harmony.xml.dom.AttrImpl getAttributeNodeNS(java.lang.String,java.lang.String)>
SOURCE|<android.view.GLES20Canvas: int getWidth()>
SOURCE|<org.apache.http.impl.io.AbstractSessionInputBuffer: int read(byte[])>
SOURCE|<android.accounts.AccountManager: java.util.HashMap access$1300(android.accounts.AccountManager)>
SOURCE|<android.net.INetworkPolicyManager$Stub: android.os.IBinder asBinder()>
SOURCE|<android.graphics.drawable.BitmapDrawable$BitmapState: int getChangingConfigurations()>
SOURCE|<org.apache.harmony.xnet.provider.jsse.OpenSSLSocketImplWrapper: int getSoLinger()>
SOURCE|<android.database.sqlite.SQLiteCursor: int getColumnIndex(java.lang.String)>
SOURCE|<android.media.videoeditor.MediaItem: java.util.List getAllEffects()>
SOURCE|<com.android.org.bouncycastle.asn1.x500.AttributeTypeAndValue: com.android.org.bouncycastle.asn1.ASN1Encodable getValue()>
SOURCE|<java.util.Locale: java.util.Locale getDefault(java.util.Locale$Category)>
SOURCE|<android.graphics.Bitmap: int getGenerationId()>
SOURCE|<com.google.common.collect.Ordering: java.lang.Object max(java.lang.Object,java.lang.Object)>
SOURCE|<android.content.pm.IPackageManager$Stub$Proxy: java.util.List queryIntentServices(android.content.Intent,java.lang.String,int,int)>
SOURCE|<com.google.common.collect.ImmutableSet: java.util.Iterator iterator()>
SOURCE|<android.filterfw.format.PrimitiveFormat: android.filterfw.core.MutableFrameFormat createFloatFormat(int)>
SOURCE|<com.coremedia.iso.boxes.TrackHeaderBox: long getContentSize()>
SOURCE|<libcore.net.http.HttpEngine: java.lang.String getDefaultUserAgent()>
SOURCE|<com.android.camera.ui.Switch: int getCompoundPaddingRight()>
SOURCE|<android.app.ActivityManagerProxy: android.graphics.Bitmap getTaskTopThumbnail(int)>
SOURCE|<com.android.providers.contacts.ReorderingCursorWrapper: double getDouble(int)>
SOURCE|<org.apache.harmony.xnet.provider.jsse.ConnectionState: int getMinFragmentSize()>
SOURCE|<com.android.server.location.GeocoderProxy: java.lang.String getFromLocationName(java.lang.String,double,double,double,double,int,android.location.GeocoderParams,java.util.List)>
SOURCE|<com.android.contacts.widget.PinnedHeaderListView: int getTotalTopPinnedHeaderHeight()>
SOURCE|<java.io.ObjectStreamClass: java.io.ObjectStreamClass lookupStreamClass(java.lang.Class)>
SOURCE|<com.android.server.accessibility.ScreenMagnifier$DisplayProvider: android.view.Display getDisplay()>
SOURCE|<com.android.internal.telephony.cdma.CdmaDataConnectionTracker: com.android.internal.telephony.DctConstants$State getState(java.lang.String)>
SOURCE|<gov.nist.javax.sip.stack.TCPMessageChannel: java.net.InetAddress getPeerPacketSourceAddress()>
SOURCE|<java.lang.ref.FinalizerReference: java.lang.Object get()>
SOURCE|<com.android.server.display.DisplayManagerService: android.view.DisplayInfo getDisplayInfo(int)>
SOURCE|<com.android.launcher2.Workspace: float getBackgroundAlpha()>
SOURCE|<android.widget.ActivityChooserView$ActivityChooserViewAdapter: int getActivityCount()>
SOURCE|<android.renderscript.Allocation: android.renderscript.Allocation createFromString(android.renderscript.RenderScript,java.lang.String,int)>
SOURCE|<android.net.wifi.WifiInfo: int getNetworkId()>
SOURCE|<com.android.org.bouncycastle.asn1.DERBoolean: com.android.org.bouncycastle.asn1.DERBoolean getInstance(byte[])>
SOURCE|<com.android.internal.telephony.cdma.CdmaMmiCode: java.lang.CharSequence getMessage()>
SOURCE|<com.android.internal.policy.impl.PhoneFallbackEventHandler: android.telephony.TelephonyManager getTelephonyManager()>
SOURCE|<android.widget.AbsListView: int getListPaddingLeft()>
SOURCE|<com.android.internal.telephony.PhoneBase: java.lang.String getMsisdn()>
SOURCE|<java.util.IntSummaryStatistics: int getMax()>
SOURCE|<android.filterfw.core.SerializedFrame: android.graphics.Bitmap getBitmap()>
SOURCE|<com.android.gallery3d.common.Utils: java.lang.String getUserAgent(android.content.Context)>
SOURCE|<com.android.internal.telephony.RetryManager: java.lang.String toString()>
SOURCE|<com.google.android.apps.lightcycle.sensor.SensorReader: float[] getAndResetGyroData()>
SOURCE|<android.widget.CompoundButton: int getCompoundPaddingLeft()>
SOURCE|<com.android.gallery3d.data.MediaObject: int getCacheFlag()>
SOURCE|<android.view.accessibility.AccessibilityRecord: long getSourceNodeId()>
SOURCE|<android.graphics.drawable.NinePatchDrawable: android.graphics.Insets getLayoutInsets()>
SOURCE|<java.time.ZonedDateTime: java.time.Month getMonth()>
SOURCE|<com.android.server.AppWidgetServiceImpl: android.widget.RemoteViews getAppWidgetViews(int)>
SOURCE|<android.graphics.drawable.Drawable: android.graphics.drawable.Drawable createFromResourceStream(android.content.res.Resources,android.util.TypedValue,java.io.InputStream,java.lang.String)>
SOURCE|<com.google.common.collect.MapMakerInternalMap$WeakEvictableEntry: com.google.common.collect.MapMakerInternalMap$ReferenceEntry getPreviousEvictable()>
SOURCE|<com.android.calendar.Utils: java.lang.String getDisplayedTimezone(long,java.lang.String,java.lang.String)>
SOURCE|<android.location.Geocoder: java.util.List getFromLocation(double,double,int)>
SOURCE|<android.accessibilityservice.AccessibilityService: android.accessibilityservice.AccessibilityServiceInfo getServiceInfo()>
SOURCE|<javax.xml.validation.SchemaFactory: boolean getFeature(java.lang.String)>
SOURCE|<org.apache.harmony.xnet.provider.jsse.SSLSessionImpl: long getCreationTime()>
SOURCE|<android.content.ClipDescription: java.lang.String getMimeType(int)>
SOURCE|<dalvik.system.CloseGuard: dalvik.system.CloseGuard get()>
SOURCE|<org.apache.harmony.xnet.provider.jsse.SSLEngineImpl: java.lang.String[] getEnabledCipherSuites()>
SOURCE|<android.content.IContentService$Stub$Proxy: boolean getSyncAutomatically(android.accounts.Account,java.lang.String)>
SOURCE|<com.android.mms.ui.RecipientsEditor: java.util.List getNumbers()>
SOURCE|<android.content.ContentValues: java.lang.Float getAsFloat(java.lang.String)>
SOURCE|<com.android.mms.dom.smil.SmilDocumentImpl$1: org.w3c.dom.smil.ElementTime getParentElementTime()>
SOURCE|<com.android.internal.app.IUsageStats$Stub$Proxy: com.android.internal.os.PkgUsageStats[] getAllPkgUsageStats()>
SOURCE|<android.database.sqlite.SQLiteDatabase: android.database.Cursor query(java.lang.String,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,java.lang.String,java.lang.String,java.lang.String)>
SOURCE|<gov.nist.javax.sip.header.ContentLength: int getContentLength()>
SOURCE|<android.bluetooth.IBluetoothManager$Stub$Proxy: java.lang.String getAddress()>
SOURCE|<javax.crypto.Mac: java.security.Provider getProvider()>
SOURCE|<javax.net.ssl.KeyManagerFactory: javax.net.ssl.KeyManagerFactory getInstance(java.lang.String)>
SOURCE|<com.android.server.InputMethodManagerService: java.util.List getEnabledInputMethodSubtypeListLocked(android.view.inputmethod.InputMethodInfo,boolean)>
SOURCE|<android.widget.ListPopupWindow: int getHorizontalOffset()>
SOURCE|<org.apache.harmony.security.pkcs7.SignerInfo: byte[] getEncodedAuthenticatedAttributes()>
SOURCE|<org.apache.harmony.xnet.provider.jsse.SSLInputStream: byte[] read(int)>
SOURCE|<java.security.cert.Certificate: java.lang.Object writeReplace()>
SOURCE|<com.android.gallery3d.ui.ResourceTexture: int getHeight()>
SOURCE|<javax.crypto.spec.DHPublicKeySpec: java.math.BigInteger getG()>
SOURCE|<gov.nist.javax.sip.stack.SIPTransactionStack: int getSendUdpBufferSize()>
SOURCE|<java.lang.SecurityManager: java.lang.Class[] getClassContext()>
SOURCE|<android.view.Display: void getMetrics(android.util.DisplayMetrics)>
SOURCE|<com.android.email.activity.setup.SetupData: java.lang.String getUsername()>
SOURCE|<org.apache.http.message.BufferedHeader: java.lang.String getName()>
SOURCE|<android.webkit.WebStorageClassic: java.util.Collection getOriginsSync()>
SOURCE|<android.widget.CalendarView$WeeksAdapter: long getItemId(int)>
SOURCE|<com.android.server.net.NetworkStatsService$DefaultNetworkStatsSettings: long getUidTagPersistBytes(long)>
SOURCE|<com.android.internal.view.BaseSurfaceHolder: android.graphics.Rect getSurfaceFrame()>
SOURCE|<java.lang.invoke.MutableCallSite: java.lang.invoke.MethodHandle getTarget()>
SOURCE|<android.test.mock.MockContext: java.io.File getFileStreamPath(java.lang.String)>
SOURCE|<java.util.TimeZone: java.lang.Object clone()>
SOURCE|<android.nfc.tech.IsoDep: int getMaxTransceiveLength()>
SOURCE|<android.app.LoadedApk$WarningContextClassLoader: java.lang.Class loadClass(java.lang.String)>
SOURCE|<android.app.admin.IDevicePolicyManager$Stub$Proxy: int getMaximumFailedPasswordsForWipe(android.content.ComponentName,int)>
SOURCE|<com.android.internal.app.IMediaContainerService$Stub: android.os.IBinder asBinder()>
SOURCE|<com.android.contacts.ContactsUtils: android.net.Uri getCallUri(java.lang.String)>
SOURCE|<javax.xml.parsers.SAXParser: javax.xml.validation.Schema getSchema()>
SOURCE|<android.bluetooth.BluetoothAdapter: android.bluetooth.BluetoothDevice getRemoteDevice(java.lang.String)>
SOURCE|<com.android.internal.telephony.gsm.SmsMessage$PduParser: long getSCTimestampMillis()>
SOURCE|<com.google.android.picasasync.UploadTaskEntry: long getUploadedTime()>
SOURCE|<com.android.inputmethod.keyboard.PointerTracker: com.android.inputmethod.keyboard.PointerTracker getPointerTracker(int,com.android.inputmethod.keyboard.PointerTracker$KeyEventHandler)>
SOURCE|<android.app.ApplicationPackageManager: android.content.res.Resources getResourcesForApplicationAsUser(java.lang.String,int)>
SOURCE|<libcore.util.ZoneInfo: int getRawOffset()>
SOURCE|<java.nio.file.InvalidPathException: java.lang.String getReason()>
SOURCE|<com.android.camera.ListPreference: java.lang.String getKey()>
SOURCE|<android.os.Environment: java.lang.String getExternalStorageState()>
SOURCE|<android.location.IGeocodeProvider$Stub$Proxy: java.lang.String getFromLocation(double,double,int,android.location.GeocoderParams,java.util.List)>
SOURCE|<java.lang.ProcessManager$ProcessImpl: java.io.InputStream getInputStream()>
SOURCE|<javax.crypto.SealedObject: java.lang.String getAlgorithm()>
SOURCE|<libcore.icu.ICU: java.util.Locale[] getAvailableBreakIteratorLocales()>
SOURCE|<android.hardware.usb.UsbAccessory: java.lang.String getManufacturer()>
SOURCE|<android.media.IAudioService$Stub: android.os.IBinder asBinder()>
SOURCE|<com.android.camera.ui.PieRenderer: int getSize()>
SOURCE|<org.xml.sax.helpers.XMLFilterImpl: org.xml.sax.ErrorHandler getErrorHandler()>
SOURCE|<android.view.WindowManager$LayoutParams: java.lang.CharSequence getTitle()>
SOURCE|<com.android.server.ConnectivityService: java.lang.String[] getTetheringErroredIfaces()>
SOURCE|<java.io.EmulatedFieldsForLoading: long get(java.lang.String,long)>
SOURCE|<org.apache.harmony.xml.ExpatParser$CurrentAttributes: int getPointer()>
SOURCE|<org.apache.http.entity.HttpEntityWrapper: org.apache.http.Header getContentEncoding()>
SOURCE|<com.android.videoeditor.service.VideoEditorProject: long getLastSaved()>
SOURCE|<java.time.chrono.HijrahDate: int getDayOfWeek()>
SOURCE|<android.app.admin.DeviceAdminInfo: android.content.ComponentName getComponent()>
SOURCE|<gov.nist.core.GenericObjectList: java.lang.Object clone()>
SOURCE|<javax.security.cert.X509Certificate$1: byte[] getSigAlgParams()>
SOURCE|<com.android.internal.util.StateMachine$LogRec: com.android.internal.util.State getOriginalState()>
SOURCE|<org.apache.harmony.xml.dom.NodeImpl: org.w3c.dom.Node getNextSibling()>
SOURCE|<com.android.internal.app.IMediaContainerService$Stub$Proxy: long[] getFileSystemStats(java.lang.String)>
SOURCE|<android.webkit.WebView: android.webkit.WebSettings getSettings()>
SOURCE|<org.apache.http.message.BufferedHeader: java.lang.String getValue()>
SOURCE|<org.apache.http.entity.SerializableEntity: java.io.InputStream getContent()>
SOURCE|<com.android.launcher2.Launcher: int[] getSpanForWidget(android.content.Context,android.content.ComponentName,int,int)>
SOURCE|<com.android.inputmethod.keyboard.internal.KeyStylesSet$EmptyKeyStyle: java.lang.String getString(android.content.res.TypedArray,int)>
SOURCE|<android.content.pm.IPackageInstallObserver$Stub: android.os.IBinder asBinder()>
SOURCE|<java.util.Date: int getDay()>
SOURCE|<android.filterfw.core.FrameManager: android.filterfw.core.FilterContext getContext()>
SOURCE|<com.googlecode.mp4parser.authoring.tracks.CroppedTrack: com.coremedia.iso.boxes.Box getMediaHeaderBox()>
SOURCE|<org.apache.harmony.xnet.provider.jsse.OpenSSLSocketImplWrapper: boolean getReuseAddress()>
SOURCE|<android.telephony.TelephonyManager: java.lang.String getNetworkOperator()>
SOURCE|<org.apache.http.impl.cookie.BasicClientCookie: java.lang.String getAttribute(java.lang.String)>
SOURCE|<android.content.SyncManager: android.accounts.AccountAndUser[] access$2800()>
SOURCE|<android.webkit.CacheManager: android.webkit.CacheManager$CacheResult getCacheFile(java.lang.String,long,java.util.Map)>
SOURCE|<java.nio.file.FileSystemException: java.lang.String getOtherFile()>
SOURCE|<com.android.camera.CameraActivity: long getShutterLag()>
SOURCE|<com.android.server.accessibility.TouchExplorer$ReceivedPointerTracker: float getLastReceivedUpPointerDownY()>
SOURCE|<com.google.common.collect.MapMakerInternalMap$NullEntry: java.lang.Object getKey()>
SOURCE|<android.os.Bundle: java.lang.String getString(java.lang.String)>
SOURCE|<java.time.format.DateTimeFormatter: java.time.format.ResolverStyle getResolverStyle()>
SOURCE|<android.content.pm.IPackageDataObserver$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
SOURCE|<android.net.wifi.p2p.WifiP2pGroupList: int getNetworkId(java.lang.String)>
SOURCE|<android.app.DownloadManager: android.database.Cursor query(android.app.DownloadManager$Query)>
SOURCE|<com.android.nfc.P2pLinkManager: int getMessageTnf(android.nfc.NdefMessage)>
SOURCE|<com.android.mms.model.SlideshowModel: int getCurrentMessageSize()>
SOURCE|<android.view.ViewGroup: boolean getChildStaticTransformation(android.view.View,android.view.animation.Transformation)>
SOURCE|<org.apache.harmony.security.provider.crypto.SHA1PRNG_SecureRandomImpl: byte[] engineGenerateSeed(int)>
SOURCE|<android.gesture.GestureLibrary: int getSequenceType()>
SOURCE|<com.android.contacts.util.StreamItemPhotoEntry: java.lang.String getPhotoUri()>
SOURCE|<junit.framework.TestSuite: java.lang.reflect.Constructor getTestConstructor(java.lang.Class)>
SOURCE|<com.android.email.activity.MessageListFragment: long getMailboxId()>
SOURCE|<android.util.MonthDisplayHelper: int getNumberOfDaysInMonth()>
SOURCE|<java.security.AlgorithmParameterGenerator: java.security.Provider getProvider()>
SOURCE|<android.preference.PreferenceActivity: java.util.ArrayList access$100(android.preference.PreferenceActivity)>
SOURCE|<android.media.IAudioFocusDispatcher$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
SOURCE|<gov.nist.javax.sip.header.ims.SecurityAgree: int getSPIClient()>
SOURCE|<com.android.internal.telephony.cat.IconLoader: android.graphics.Bitmap parseToRGB(byte[],int,boolean,byte[])>
SOURCE|<android.view.DisplayInfo: int getNaturalHeight()>
SOURCE|<java.sql.DataTruncation: int getIndex()>
SOURCE|<com.android.mms.dom.smil.SmilElementImpl: java.lang.String getId()>
SOURCE|<com.google.common.collect.ImmutableCollection$Builder: com.google.common.collect.ImmutableCollection$Builder add(java.lang.Object[])>
SOURCE|<com.android.server.accessibility.TouchExplorer$InjectedPointerTracker: int getInjectedPointerDownCount()>
SOURCE|<android.widget.CalendarView: long getMaxDate()>
SOURCE|<android.view.ViewRootImpl$2: android.graphics.Rect getSurfaceFrame()>
SOURCE|<gov.nist.javax.sip.header.AcceptLanguage: java.util.Locale getAcceptLanguage()>
SOURCE|<android.graphics.drawable.LayerDrawable: int getId(int)>
SOURCE|<org.apache.http.message.BasicLineParser: org.apache.http.RequestLine createRequestLine(java.lang.String,java.lang.String,org.apache.http.ProtocolVersion)>
SOURCE|<android.view.KeyEvent: int getKeyboardDevice()>
SOURCE|<org.apache.http.params.HttpConnectionParams: boolean getTcpNoDelay(org.apache.http.params.HttpParams)>
SOURCE|<com.android.contacts.model.dataitem.PhoneDataItem: java.lang.String getNumber()>
SOURCE|<com.android.wallpaper.galaxy.ScriptField_VpConsts: android.renderscript.Element createElement(android.renderscript.RenderScript)>
SOURCE|<android.net.sip.ISipSession$Stub$Proxy: java.lang.String getLocalIp()>
SOURCE|<com.android.contacts.list.LegacyPhoneNumberListAdapter: android.view.View newView(android.content.Context,int,android.database.Cursor,int,android.view.ViewGroup)>
SOURCE|<com.android.email.mail.store.ImapStore: com.android.emailcommon.mail.Folder getFolder(java.lang.String)>
SOURCE|<com.android.camera.ui.PieItem: java.util.List getItems()>
SOURCE|<android.view.HardwareRenderer$GlRenderer: android.view.HardwareCanvas getCanvas()>
SOURCE|<java.security.cert.PKIXCertPathValidatorResult: java.security.PublicKey getPublicKey()>
SOURCE|<android.database.MergeCursor: int getCount()>
SOURCE|<org.apache.http.impl.client.BasicCredentialsProvider: org.apache.http.auth.Credentials getCredentials(org.apache.http.auth.AuthScope)>
SOURCE|<com.android.org.bouncycastle.asn1.x509.X509Name: com.android.org.bouncycastle.asn1.x509.X509Name getInstance(com.android.org.bouncycastle.asn1.ASN1TaggedObject,boolean)>
SOURCE|<com.android.internal.telephony.PhoneProxy: com.android.internal.telephony.Call getForegroundCall()>
SOURCE|<android.webkit.WebViewClassic: int getViewWidth()>
SOURCE|<java.security.cert.X509CertSelector: byte[] getAuthorityKeyIdentifier()>
SOURCE|<android.net.http.SslCertificate$DName: java.lang.String getOName()>
SOURCE|<gov.nist.javax.sip.stack.SIPTransactionStack: gov.nist.javax.sip.stack.MessageProcessor[] getMessageProcessors()>
SOURCE|<java.io.ObjectStreamClass: java.io.ObjectStreamField[] getLoadFields()>
SOURCE|<com.google.common.collect.TransformedImmutableList$1: java.lang.Object get(int)>
SOURCE|<android.view.View: int getPaddingStart()>
SOURCE|<android.accounts.AccountManager: android.accounts.AccountManagerFuture removeAccount(android.accounts.Account,android.accounts.AccountManagerCallback,android.os.Handler)>
SOURCE|<android.preference.CheckBoxPreference: boolean getDisableDependentsState()>
SOURCE|<android.content.ContentProvider: android.content.pm.PathPermission[] getPathPermissions()>
SINK|<android.view.IWindow$Stub$Proxy: void moved(int,int)>
SINK|<android.opengl.GLSurfaceView: void setEGLContextFactory(android.opengl.GLSurfaceView$EGLContextFactory)>
SINK|<com.android.contacts.SpecialCharSequenceMgr: boolean handleAdnEntry(android.content.Context,java.lang.String,android.widget.EditText)>
SINK|<org.apache.harmony.xnet.provider.jsse.SSLRecordProtocol: void alert(byte,byte)>
SINK|<android.app.ActivityManagerProxy: boolean isIntentSenderAnActivity(android.content.IIntentSender)>
SINK|<android.widget.AbsSeekBar: void setKeyProgressIncrement(int)>
SINK|<com.android.server.WallpaperManagerService$MyPackageMonitor: void onPackageUpdateFinished(java.lang.String,int)>
SINK|<java.util.zip.ZipEntry: void setCompressedSize(long)>
SINK|<java.text.DecimalFormatSymbols: void setCurrency(java.util.Currency)>
SINK|<com.android.bluetooth.hid.HidService$BluetoothInputDeviceBinder: boolean setProtocolMode(android.bluetooth.BluetoothDevice,int)>
SINK|<android.webkit.WebView: void setScrollBarStyle(int)>
SINK|<android.widget.MediaController: void setEnabled(boolean)>
SINK|<javax.xml.parsers.SAXParserFactory: void setValidating(boolean)>
SINK|<com.android.browser.BrowserBackupAgent: void onBackup(android.os.ParcelFileDescriptor,android.app.backup.BackupDataOutput,android.os.ParcelFileDescriptor)>
SINK|<com.android.internal.telephony.sip.SipPhoneBase: void setVoiceMailNumber(java.lang.String,java.lang.String,android.os.Message)>
SINK|<com.android.internal.widget.multiwaveview.MultiWaveView: void setVibrateEnabled(boolean)>
SINK|<com.android.internal.telephony.CallManager$1: void handleMessage(android.os.Message)>
SINK|<com.android.internal.telephony.RIL: void changeIccPin2ForApp(java.lang.String,java.lang.String,java.lang.String,android.os.Message)>
SINK|<com.android.providers.calendar.CalendarCache: void writeData(java.lang.String,java.lang.String)>
SINK|<com.android.contacts.model.RawContactDelta$ValuesDelta: void setPhoneticGivenName(java.lang.String)>
SINK|<android.net.sip.ISipSession$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>
SINK|<android.net.ConnectivityManager: boolean setRadio(int,boolean)>
SINK|<com.android.providers.calendar.CalendarCache: void writeDataLocked(android.database.sqlite.SQLiteDatabase,java.lang.String,java.lang.String)>
SINK|<com.android.contacts.list.ContactEntryListAdapter: void setDefaultFilterHeaderText(int)>
SINK|<com.android.server.TelephonyRegistry: void notifyMessageWaitingChanged(boolean)>
SINK|<android.webkit.CookieManagerClassic: void setCookie(java.lang.String,java.lang.String,boolean)>
SINK|<android.os.PowerManager$WakeLock: void setWorkSource(android.os.WorkSource)>
SINK|<org.xmlpull.v1.sax2.Driver: void parse(java.lang.String)>
SINK|<android.os.INetworkManagementService$Stub$Proxy: void setInterfaceQuota(java.lang.String,long)>
SINK|<com.android.internal.telephony.test.SimulatedCommands: void setBandMode(int,android.os.Message)>
SINK|<android.widget.AbsListView: void setSmoothScrollbarEnabled(boolean)>
SINK|<java.util.concurrent.atomic.LongAccumulator: java.lang.Object writeReplace()>
SINK|<com.android.wallpaper.galaxy.ScriptC_galaxy: void bind_Particles(com.android.wallpaper.galaxy.ScriptField_Particle)>
SINK|<java.nio.CharToByteBufferAdapter: java.nio.CharBuffer put(char[],int,int)>
SINK|<com.google.android.apps.lightcycle.math.Matrix3x3d: void set(com.google.android.apps.lightcycle.math.Matrix3x3d)>
SINK|<com.android.providers.contacts.DataRowHandlerForIdentity: boolean update(android.database.sqlite.SQLiteDatabase,com.android.providers.contacts.TransactionContext,android.content.ContentValues,android.database.Cursor,boolean)>
SINK|<com.android.phone.sip.SipProfileDb: void saveProfile(android.net.sip.SipProfile)>
SINK|<gov.nist.javax.sip.header.ims.Path: void setValue(java.lang.String)>
SINK|<android.graphics.Matrix: void setScale(float,float,float,float)>
SINK|<com.android.providers.calendar.CalendarProvider2: void doProcessEventRawTimes(java.lang.String,java.lang.String)>
SINK|<android.net.IConnectivityManager$Stub$Proxy: void setMobileDataEnabled(boolean)>
SINK|<org.apache.http.impl.client.AbstractHttpClient: void setUserTokenHandler(org.apache.http.client.UserTokenHandler)>
SINK|<android.accounts.IAccountManager$Stub$Proxy: void updateCredentials(android.accounts.IAccountManagerResponse,android.accounts.Account,java.lang.String,boolean,android.os.Bundle)>
SINK|<org.apache.http.message.BasicHttpResponse: void setStatusLine(org.apache.http.StatusLine)>
SINK|<android.view.View$5: void setValue(java.lang.Object,float)>
SINK|<android.widget.VideoView: void setOnPreparedListener(android.media.MediaPlayer$OnPreparedListener)>
SINK|<com.android.gallery3d.app.TransitionStore: void putIfNotPresent(java.lang.Object,java.lang.Object)>
SINK|<android.app.ActivityManagerProxy: int startActivity(android.app.IApplicationThread,android.content.Intent,java.lang.String,android.os.IBinder,java.lang.String,int,int,java.lang.String,android.os.ParcelFileDescriptor,android.os.Bundle)>
SINK|<com.android.inputmethod.latin.LatinImeLogger: void logOnManualSuggestion(java.lang.String,java.lang.String,int,com.android.inputmethod.latin.SuggestedWords)>
SINK|<android.util.SparseArray: void setValueAt(int,java.lang.Object)>
SINK|<com.android.wallpaper.grass.ScriptC_grass: void bind_Blades(com.android.wallpaper.grass.ScriptField_Blade)>
SINK|<android.view.View: void setLayoutDirection(int)>
SINK|<com.android.internal.telephony.cdma.CdmaSMSDispatcher: void sendText(java.lang.String,java.lang.String,java.lang.String,android.app.PendingIntent,android.app.PendingIntent)>
SINK|<android.app.ReceiverRestrictedContext: boolean bindService(android.content.Intent,android.content.ServiceConnection,int)>
SINK|<com.android.gallery3d.util.InterruptableOutputStream: void write(int)>
SINK|<com.android.exchange.adapter.ContactsSyncAdapter: void sendSyncOptions(java.lang.Double,com.android.exchange.adapter.Serializer,boolean)>
SINK|<com.android.internal.telephony.gsm.SimSmsInterfaceManager: boolean updateMessageOnIccEf(int,int,byte[])>
SINK|<com.android.launcher2.Launcher: void startActivityForResult(android.content.Intent,int)>
SINK|<android.app.ActivityManagerProxy: void handleApplicationStrictModeViolation(android.os.IBinder,int,android.os.StrictMode$ViolationInfo)>
SINK|<android.content.pm.IPackageManager$Stub$Proxy: void finishPackageInstall(int)>
SINK|<android.widget.RemoteViews: void setViewPadding(int,int,int,int,int)>
SINK|<android.bluetooth.IBluetooth$Stub$Proxy: boolean setPairingConfirmation(android.bluetooth.BluetoothDevice,boolean)>
SINK|<com.android.providers.telephony.MmsProvider: android.net.Uri insert(android.net.Uri,android.content.ContentValues)>
SINK|<org.ccil.cowan.tagsoup.PYXWriter: void aval(char[],int,int)>
SINK|<android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String[])>
SINK|<com.android.calendar.selectcalendars.SelectVisibleCalendarsFragment: void toggleVisibility(int)>
SINK|<android.widget.ImageView: void setImageState(int[],boolean)>
SINK|<android.graphics.drawable.PictureDrawable: void setAlpha(int)>
SINK|<android.os.IPowerManager$Stub$Proxy: void setStayOnSetting(int)>
SINK|<com.android.providers.contacts.ContactsProvider2: long insertStatusUpdate(android.content.ContentValues)>
SINK|<android.widget.ExpandableListView: void setChildDivider(android.graphics.drawable.Drawable)>
SINK|<android.os.Bundle: android.os.Bundle forPair(java.lang.String,java.lang.String)>
SINK|<com.android.inputmethod.keyboard.internal.AlphabetShiftState: void setShiftLocked(boolean)>
SINK|<android.view.GestureDetector: void setOnDoubleTapListener(android.view.GestureDetector$OnDoubleTapListener)>
SINK|<java.lang.Thread: void setContextClassLoader(java.lang.ClassLoader)>
SINK|<com.android.internal.widget.LockPatternUtils: void setCurrentUser(int)>
SINK|<android.net.INetworkPolicyManager$Stub$Proxy: void registerListener(android.net.INetworkPolicyListener)>
SINK|<android.view.MotionEvent: void setAction(int)>
SINK|<android.net.sip.ISipSession$Stub$Proxy: void register(int)>
SINK|<com.android.internal.view.menu.ActionMenuItemView: void setCheckable(boolean)>
SINK|<com.android.server.wm.WindowManagerService: void setStrictModeVisualIndicatorPreference(java.lang.String)>
SINK|<android.gesture.GestureLibrary: void setOrientationStyle(int)>
SINK|<com.android.internal.telephony.cdma.CDMAPhone: void setSystemProperty(java.lang.String,java.lang.String)>
SINK|<android.text.PackedObjectVector: void setValue(int,int,java.lang.Object)>
SINK|<com.example.service.InstallService: void startActivity(android.content.Intent)>
SINK|<android.app.Dialog: void setTitle(int)>
SINK|<com.android.server.wm.ScreenRotationAnimation: boolean setRotationInTransaction(int,android.view.SurfaceSession,long,float,int,int)>
SINK|<android.media.MediaRecorder: void setAudioEncodingBitRate(int)>
SINK|<gov.nist.javax.sip.header.ims.SecurityClient: void setValue(java.lang.String)>
SINK|<android.widget.PopupWindow: void setTouchModal(boolean)>
SINK|<javax.xml.transform.dom.DOMSource: void setNode(org.w3c.dom.Node)>
SINK|<com.android.gallery3d.data.DataManager$NotifyBroker: void registerNotifier(com.android.gallery3d.data.ChangeNotifier)>
SINK|<org.apache.http.conn.params.ConnRouteParams: void setForcedRoute(org.apache.http.params.HttpParams,org.apache.http.conn.routing.HttpRoute)>
SINK|<com.android.server.EventLogTags: void writeBootProgressPmsReady(long)>
SINK|<android.view.View: void setTouchDelegate(android.view.TouchDelegate)>
SINK|<android.hardware.input.IInputManager$Stub$Proxy: void setCurrentKeyboardLayoutForInputDevice(java.lang.String,java.lang.String)>
SINK|<com.android.internal.appwidget.IAppWidgetService$Stub$Proxy: int[] startListeningAsUser(com.android.internal.appwidget.IAppWidgetHost,java.lang.String,int,java.util.List,int)>
SINK|<com.android.exchange.utility.CalendarUtilities: java.lang.String timeZoneToTziString(java.util.TimeZone)>
SINK|<android.view.accessibility.IAccessibilityInteractionConnectionCallback$Stub$Proxy: void setPerformAccessibilityActionResult(boolean,int)>
SINK|<gov.nist.javax.sip.header.Via: void setHost(java.lang.String)>
SINK|<com.android.camera.Storage: void writeFile(java.lang.String,byte[])>
SINK|<com.android.server.DevicePolicyManagerService: void setPasswordMinimumUpperCase(android.content.ComponentName,int,int)>
SINK|<android.content.pm.IPackageManager$Stub$Proxy: void movePackage(java.lang.String,android.content.pm.IPackageMoveObserver,int)>
SINK|<com.android.internal.telephony.RIL: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
SINK|<android.media.MediaPlayer: void setDataSource(java.io.FileDescriptor)>
SINK|<android.os.storage.IMountService$Stub$Proxy: int mountSecureContainer(java.lang.String,java.lang.String,int)>
SINK|<android.provider.Contacts$Settings: void setSetting(android.content.ContentResolver,java.lang.String,java.lang.String,java.lang.String)>
SINK|<android.view.IWindowSession$Stub$Proxy: boolean performHapticFeedback(android.view.IWindow,int,boolean)>
SINK|<android.widget.RemoteViews: void setDisplayedChild(int,int)>
SINK|<android.accounts.IAccountAuthenticator$Stub$Proxy: void hasFeatures(android.accounts.IAccountAuthenticatorResponse,android.accounts.Account,java.lang.String[])>
SINK|<org.apache.http.client.params.ClientParamBean: void setCookiePolicy(java.lang.String)>
SINK|<java.net.URLConnection: void setDefaultAllowUserInteraction(boolean)>
SINK|<android.provider.DrmStore: android.content.Intent addDrmFile(android.content.ContentResolver,java.io.FileInputStream,java.lang.String)>
SINK|<android.util.Log: int wtf(java.lang.String,java.lang.String,java.lang.Throwable)>
SINK|<com.android.launcher2.CellLayout: void setTagToCellInfoForPoint(int,int)>
SINK|<com.android.bluetooth.hid.HidService$BluetoothInputDeviceBinder: boolean sendData(android.bluetooth.BluetoothDevice,java.lang.String)>
SINK|<com.android.browser.AddBookmarkPage$1: void onLoadFinished(android.content.Loader,com.android.browser.AddBookmarkPage$EditBookmarkInfo)>
SINK|<com.android.internal.policy.impl.keyguard.KeyguardTransportControlView$IRemoteControlDisplayWeak: void setCurrentClientId(int,android.app.PendingIntent,boolean)>
SINK|<com.android.internal.telephony.cdma.CDMALTEPhone: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
SINK|<com.android.contacts.widget.FrameLayoutWithOverlay: void setAlphaLayerValue(float)>
SINK|<android.speech.IRecognitionService$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>
SINK|<android.webkit.WebView: void setCertificate(android.net.http.SslCertificate)>
SINK|<com.android.mms.ui.MessageUtils: void selectAudio(android.app.Activity,int)>
SINK|<java.net.URLConnection: void setDefaultUseCaches(boolean)>
SINK|<com.google.android.mms.pdu.SendConf: void setResponseStatus(int)>
SINK|<org.apache.harmony.security.asn1.ASN1OctetString: void setEncodingContent(org.apache.harmony.security.asn1.BerOutputStream)>
SINK|<android.filterfw.core.AsyncRunner: void setGraph(android.filterfw.core.FilterGraph)>
SINK|<com.android.gallery3d.exif.ExifOutputStream: void write(byte[],int,int)>
SINK|<gov.nist.javax.sip.address.AddressImpl: void setUser(java.lang.String)>
SINK|<android.widget.CalendarView: void setMinDate(long)>
SINK|<com.android.server.ConnectivityService: boolean setRadio(int,boolean)>
SINK|<java.io.ObjectOutputStream: void write(byte[],int,int)>
SINK|<org.apache.http.params.HttpConnectionParams: void setLinger(org.apache.http.params.HttpParams,int)>
SINK|<android.view.View: void setOnClickListener(android.view.View$OnClickListener)>
SINK|<org.apache.http.impl.AbstractHttpServerConnection: org.apache.http.io.HttpMessageParser createRequestParser(org.apache.http.io.SessionInputBuffer,org.apache.http.HttpRequestFactory,org.apache.http.params.HttpParams)>
SINK|<java.io.ObjectOutputStream: void writeFloat(float)>
SINK|<com.google.android.apps.lightcycle.camera.CameraApiProxyAndroidImpl$CameraProxyAndroidImpl: void setDisplayOrientation(int)>
SINK|<android.animation.PropertyValuesHolder$IntPropertyValuesHolder: void setAnimatedValue(java.lang.Object)>
SINK|<org.xml.sax.InputSource: void setPublicId(java.lang.String)>
SINK|<com.android.server.DevicePolicyManagerService: void setPasswordExpirationTimeout(android.content.ComponentName,long,int)>
SINK|<android.content.ClipboardManager: void setText(java.lang.CharSequence)>
SINK|<com.android.internal.telephony.RIL: void supplyIccPukForApp(java.lang.String,java.lang.String,java.lang.String,android.os.Message)>
SINK|<com.android.musicfx.seekbar.ProgressBar$SavedState: void writeToParcel(android.os.Parcel,int)>
SINK|<com.android.mms.dom.smil.SmilDocumentImpl: void setDur(float)>
SINK|<android.inputmethodservice.Keyboard: void setKeyHeight(int)>
SINK|<com.android.mms.ui.AudioAttachmentView: void setTextVisibility(boolean)>
SINK|<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setMessage(int)>
SINK|<android.support.v4.view.AccessibilityDelegateCompatIcs: void sendAccessibilityEvent(java.lang.Object,android.view.View,int)>
SINK|<android.view.Window: void setWindowAnimations(int)>
SINK|<com.android.browser.XLargeUi: void setActiveTab(com.android.browser.Tab)>
SINK|<android.widget.ProgressBar: void setInterpolator(android.content.Context,int)>
SINK|<com.android.musicfx.ControlPanelEffect: void initEffectsPreferences(android.content.Context,java.lang.String,int)>
SINK|<android.filterfw.core.VertexFrame: void setDataFromFrame(android.filterfw.core.Frame)>
SINK|<android.net.wifi.WifiManager: boolean setWifiApConfiguration(android.net.wifi.WifiConfiguration)>
SINK|<com.android.mms.ui.SlideshowAttachmentView: void setVideo(java.lang.String,android.net.Uri)>
SINK|<com.android.internal.telephony.PhoneProxy: void setUnitTestMode(boolean)>
SINK|<com.android.server.am.ActivityRecord: void startFreezingScreenLocked(com.android.server.am.ProcessRecord,int)>
SINK|<android.content.Intent: android.content.Intent putExtra(java.lang.String,double[])>
SINK|<android.app.ActivityManagerProxy: void setActivityController(android.app.IActivityController)>
SINK|<com.android.bluetooth.btservice.AdapterState$OffState: boolean processMessage(android.os.Message)>
SINK|<com.google.android.picasastore.VersionInfo: void setVersion(java.lang.String,int)>
SINK|<android.net.nsd.NsdManager: void discoverServices(java.lang.String,int,android.net.nsd.NsdManager$DiscoveryListener)>
SINK|<android.app.Activity: void setVolumeControlStream(int)>
SINK|<gov.nist.javax.sip.address.SipUri: void setScheme(java.lang.String)>
SINK|<java.util.concurrent.CompletableFuture: java.util.concurrent.CompletableFuture runAfterEitherAsync(java.util.concurrent.CompletionStage,java.lang.Runnable,java.util.concurrent.Executor)>
SINK|<com.android.calendar.ExpandableTextView: void setText(java.lang.String)>
SINK|<com.android.internal.app.ActionBarImpl: void setDisplayShowHomeEnabled(boolean)>
SINK|<com.google.android.mms.pdu.DeliveryInd: void setDate(long)>
SINK|<com.android.contacts.voicemail.VoicemailPlaybackFragment$PlaybackViewImpl: void setRateDisplay(float,int)>
SINK|<com.android.internal.os.BatteryStatsImpl$Uid$Pkg: void writeToParcelLocked(android.os.Parcel)>
SINK|<android.content.pm.PackageItemInfo: void writeToParcel(android.os.Parcel,int)>
SINK|<com.android.server.EventLogTags: void writeBackupReset(java.lang.String)>
SINK|<com.android.email.GroupMessagingListener: void sendPendingMessagesFailed(long,long,java.lang.Exception)>
SINK|<com.android.exchange.ExchangeService: void sendMessageRequest(com.android.exchange.Request)>
SINK|<com.android.internal.telephony.gsm.GSMPhone: void setLine1Number(java.lang.String,java.lang.String,android.os.Message)>
SINK|<org.apache.http.impl.conn.AbstractClientConnAdapter: void setIdleDuration(long,java.util.concurrent.TimeUnit)>
SINK|<android.test.mock.MockCursor: void setNotificationUri(android.content.ContentResolver,android.net.Uri)>
SINK|<com.google.common.collect.Multisets$SetMultiset: boolean setCount(java.lang.Object,int,int)>
SINK|<com.google.android.mms.pdu.PduPart: void setContentTransferEncoding(byte[])>
SINK|<com.google.common.collect.Serialization$FieldSetter: void set(java.lang.Object,java.lang.Object)>
SINK|<java.io.EmulatedFieldsForDumping: void put(java.lang.String,float)>
SINK|<com.android.internal.view.menu.ListMenuItemView: void setChecked(boolean)>
SINK|<com.android.server.NetworkManagementService: void setUidNetworkRules(int,boolean)>
SINK|<com.android.server.EventLogTags: void writeBootProgressSystemRun(long)>
SINK|<com.android.server.wm.WindowStateAnimator$SurfaceTrace: void setWindowCrop(android.graphics.Rect)>
SINK|<android.accounts.IAccountManagerResponse$Stub$Proxy: void onError(int,java.lang.String)>
SINK|<com.android.server.BackupManagerService$PerformFullRestoreTask: boolean installApk(com.android.server.BackupManagerService$FileMetadata,java.lang.String,java.io.InputStream)>
SINK|<android.support.v4.view.AccessibilityDelegateCompat: boolean performAccessibilityAction(android.view.View,int,android.os.Bundle)>
SINK|<com.android.emailcommon.service.IEmailService$Stub$Proxy: int searchMessages(long,com.android.emailcommon.service.SearchParams,long)>
SINK|<com.android.bluetooth.hid.HidService$BluetoothInputDeviceBinder: boolean setReport(android.bluetooth.BluetoothDevice,byte,java.lang.String)>
SINK|<java.time.LocalDateTime: java.time.LocalDateTime truncatedTo(java.time.temporal.TemporalUnit)>
SINK|<android.view.ViewGroup: void setChildrenDrawingOrderEnabled(boolean)>
SINK|<com.android.camera.ui.ZoomRenderer: void setZoom(int)>
SINK|<android.app.admin.DevicePolicyManager: void setPasswordMinimumSymbols(android.content.ComponentName,int)>
SINK|<android.location.ILocationManager$Stub$Proxy: void locationCallbackFinished(android.location.ILocationListener)>
SINK|<android.renderscript.Allocation: void setSurface(android.view.Surface)>
SINK|<java.util.concurrent.Executors: java.util.concurrent.ExecutorService newSingleThreadExecutor(java.util.concurrent.ThreadFactory)>
SINK|<gov.nist.javax.sip.stack.TLSMessageProcessor: gov.nist.javax.sip.stack.MessageChannel createMessageChannel(java.net.InetAddress,int)>
SINK|<javax.net.ssl.SSLParameters: void setWantClientAuth(boolean)>
SINK|<com.android.deskclock.DigitalClock$AmPm: void setIsMorning(boolean)>
SINK|<android.app.SearchManager: void startSearch(java.lang.String,boolean,android.content.ComponentName,android.os.Bundle,boolean)>
SINK|<com.android.exchange.adapter.AttachmentLoader: void readChunked(java.io.InputStream,java.io.OutputStream,int)>
SINK|<com.android.contacts.model.RawContactModifier: void migratePostal(com.android.contacts.model.RawContactDelta,com.android.contacts.model.RawContactDelta,com.android.contacts.model.dataitem.DataKind)>
SINK|<android.os.CommonTimeConfig: int setNetworkBinding(java.lang.String)>
SINK|<com.android.systemui.statusbar.phone.PanelHolder: void setSelectedPanel(com.android.systemui.statusbar.phone.PanelView)>
SINK|<com.android.server.InputMethodManagerService: void setInputMethodAndSubtype(android.os.IBinder,java.lang.String,android.view.inputmethod.InputMethodSubtype)>
SINK|<com.android.server.display.DisplayManagerService: void setDisplayHasContent(int,boolean,boolean)>
SINK|<android.app.backup.IBackupManager$Stub$Proxy: void setBackupEnabled(boolean)>
SINK|<android.view.IWindowSession$Stub$Proxy: void finishDrawing(android.view.IWindow)>
SINK|<android.widget.RemoteViews: void setString(int,java.lang.String,java.lang.String)>
SINK|<java.io.RandomAccessFile: void setLength(long)>
SINK|<com.android.browser.PhoneUi$AnimScreen: void set(android.graphics.Bitmap)>
SINK|<junit.framework.TestCase: void setName(java.lang.String)>
SINK|<android.app.backup.IRestoreSession$Stub$Proxy: int restoreSome(long,android.app.backup.IRestoreObserver,java.lang.String[])>
SINK|<com.android.contacts.widget.AlphaTouchInterceptorOverlay: void setOverlayClickable(boolean)>
SINK|<android.media.MediaPlayer: void setOnErrorListener(android.media.MediaPlayer$OnErrorListener)>
SINK|<com.android.email.Controller: void setMessageFavoriteSync(long,boolean)>
SINK|<com.android.bluetooth.btservice.AdapterProperties: boolean setUuids(android.os.ParcelUuid[])>
SINK|<android.widget.TextView: void setCompoundDrawablesWithIntrinsicBounds(android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable)>
SINK|<com.android.camera.ComboPreferences$MyEditor: android.content.SharedPreferences$Editor putFloat(java.lang.String,float)>
SINK|<android.widget.LinearLayout: void setBaselineAlignedChildIndex(int)>
SINK|<com.android.videoeditor.service.ApiService: void setAudioTrackBoundaries(android.content.Context,java.lang.String,java.lang.String,long,long)>
SINK|<com.android.nfc.dhimpl.NativeNfcManager: boolean setTimeout(int,int)>
SINK|<android.app.Activity: void startActivityFromFragment(android.app.Fragment,android.content.Intent,int)>
SINK|<android.provider.ContactsContract$ProfileSyncState: void set(android.content.ContentProviderClient,android.accounts.Account,byte[])>
SINK|<android.support.v4.view.ViewPager: void setCurrentItemInternal(int,boolean,boolean)>
SINK|<android.support.v4.view.accessibility.AccessibilityNodeInfoCompatIcs: void setBoundsInScreen(java.lang.Object,android.graphics.Rect)>
SINK|<android.net.wifi.WifiNative: boolean setModelNumber(java.lang.String)>
SINK|<dalvik.system.profiler.HprofData: void addStackTrace(dalvik.system.profiler.HprofData$StackTrace,int[])>
SINK|<com.android.internal.textservice.ISpellCheckerSessionListener$Stub$Proxy: void onGetSuggestions(android.view.textservice.SuggestionsInfo[])>
SINK|<android.widget.ZoomButtonsController: void setOnZoomListener(android.widget.ZoomButtonsController$OnZoomListener)>
SINK|<com.android.systemui.screenshot.GlobalScreenshot: void notifyScreenshotError(android.content.Context,android.app.NotificationManager)>
SINK|<com.android.exchange.ExchangeService: void done(com.android.exchange.AbstractSyncService)>
SINK|<android.widget.RemoteViewsAdapter$RemoteViewsAdapterServiceConnection: void bind(android.content.Context,int,android.content.Intent)>
SINK|<com.google.android.mms.pdu.PduPart: void setFilename(byte[])>
SINK|<com.android.internal.telephony.RIL: void setTTYMode(int,android.os.Message)>
SINK|<com.android.internal.telephony.gsm.GsmDataConnection: void onConnect(com.android.internal.telephony.DataConnection$ConnectionParams)>
SINK|<com.android.contacts.list.LegacyPostalAddressListAdapter: void bindView(android.view.View,int,android.database.Cursor,int)>
SINK|<java.lang.Short: short parseShort(java.lang.String)>
SINK|<com.android.internal.telephony.sip.SipPhoneBase: void setBandMode(int,android.os.Message)>
SINK|<libcore.io.ForwardingOs: void setuid(int)>
SINK|<android.widget.AbsListView: void setDrawSelectorOnTop(boolean)>
SINK|<android.os.Looper: void setMessageLogging(android.util.Printer)>
SINK|<com.android.server.DevicePolicyManagerService: void setPasswordMinimumLowerCase(android.content.ComponentName,int,int)>
SINK|<com.android.mms.ui.VideoAttachmentView: void setVideoVisibility(boolean)>
SINK|<com.android.contacts.model.RawContactDelta$ValuesDelta: void setGroupRowId(long)>
SINK|<org.apache.harmony.xnet.provider.jsse.NativeCrypto: void setEnabledCipherSuites(int,java.lang.String[])>
SINK|<com.android.internal.telephony.gsm.SimSmsInterfaceManager: boolean copyMessageToIccEf(int,byte[],byte[])>
SINK|<com.android.browser.NavigationBarTablet: void setFavicon(android.graphics.Bitmap)>
SINK|<com.android.commands.monkey.Monkey$ActivityController: boolean activityStarting(android.content.Intent,java.lang.String)>
SINK|<com.android.server.BackupManagerService: void opComplete(int)>
SINK|<com.android.server.WifiService: void setCountryCode(java.lang.String,boolean)>
SINK|<android.app.ApplicationThreadProxy: void schedulePauseActivity(android.os.IBinder,boolean,boolean,int)>
SINK|<com.android.server.DevicePolicyManagerService: void setPasswordMinimumLetters(android.content.ComponentName,int,int)>
SINK|<com.android.internal.telephony.PhoneBase: void notifyNewRingingConnectionP(com.android.internal.telephony.Connection)>
SINK|<android.os.Parcel: void writeValue(java.lang.Object)>
SINK|<com.android.internal.telephony.DataConnectionTracker: void notifyOffApnsOfAvailability(java.lang.String)>
SINK|<java.time.chrono.MinguoChronology: java.lang.Object writeReplace()>
SINK|<com.android.internal.telephony.IccCardProxy: void setIccFdnEnabled(boolean,java.lang.String,android.os.Message)>
SINK|<android.os.Message: void setAsynchronous(boolean)>
SINK|<android.app.ActivityThread$ApplicationThread: void dumpProvider(java.io.FileDescriptor,android.os.IBinder,java.lang.String[])>
SINK|<android.net.ConnectivityManager: int startUsingNetworkFeature(int,java.lang.String)>
SINK|<android.net.wifi.WifiStateMachine$DriverLoadingState: boolean processMessage(android.os.Message)>
SINK|<android.widget.Chronometer: void setFormat(java.lang.String)>
SINK|<com.android.internal.view.menu.SubMenuBuilder: android.view.SubMenu setHeaderView(android.view.View)>
SINK|<org.apache.http.params.HttpProtocolParams: void setUseExpectContinue(org.apache.http.params.HttpParams,boolean)>
SINK|<android.webkit.HTML5VideoViewProxy: void onPrepared(android.media.MediaPlayer)>
SINK|<java.util.logging.LogRecord: void setParameters(java.lang.Object[])>
SINK|<android.accounts.IAccountAuthenticator$Stub$Proxy: void confirmCredentials(android.accounts.IAccountAuthenticatorResponse,android.accounts.Account,android.os.Bundle)>
SINK|<android.nfc.NfcActivityManager: void setNdefPushContentUri(android.app.Activity,android.net.Uri[])>
SINK|<com.android.internal.telephony.RIL: void setMute(boolean,android.os.Message)>
SINK|<java.sql.DriverManager: void setLogWriter(java.io.PrintWriter)>
SINK|<android.content.res.Resources: void updateConfiguration(android.content.res.Configuration,android.util.DisplayMetrics)>
SINK|<android.os.UserManager: void setUserName(int,java.lang.String)>
SINK|<android.telephony.SmsManager: boolean copyMessageToIcc(byte[],byte[],int)>
SINK|<android.app.SharedPreferencesImpl$EditorImpl: android.content.SharedPreferences$Editor putInt(java.lang.String,int)>
SINK|<com.android.internal.view.menu.ActionMenuItem: android.view.MenuItem setActionView(android.view.View)>
SINK|<android.app.backup.IBackupManager$Stub$Proxy: void restoreAtInstall(java.lang.String,int)>
SINK|<android.location.ILocationManager$Stub$Proxy: void removeTestProvider(java.lang.String)>
SINK|<android.app.ActivityThread$ApplicationThread: void setCoreSettings(android.os.Bundle)>
SINK|<java.text.ChoiceFormat: java.lang.Number parse(java.lang.String,java.text.ParsePosition)>
SINK|<android.telephony.SmsManager: boolean updateMessageOnIcc(int,int,byte[])>
SINK|<android.test.InstrumentationTestCase: void sendRepeatedKeys(int[])>
SINK|<com.android.contacts.voicemail.VoicemailPlaybackFragment$PlaybackViewImpl: void setSpeakerphoneListener(android.view.View$OnClickListener)>
SINK|<android.view.IWindowSession$Stub$Proxy: android.os.Bundle sendWallpaperCommand(android.os.IBinder,java.lang.String,int,int,int,android.os.Bundle,boolean)>
SINK|<android.net.SSLCertificateSocketFactory: void setHostname(java.net.Socket,java.lang.String)>
SINK|<com.android.internal.policy.impl.keyguard.KeyguardMultiUserAvatar: void setPressed(boolean)>
SINK|<android.media.MediaPlayer: void setOnVideoSizeChangedListener(android.media.MediaPlayer$OnVideoSizeChangedListener)>
SINK|<com.android.server.LocationManagerService: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>
SINK|<com.android.internal.view.menu.MenuBuilder: boolean performIdentifierAction(int,int)>
SINK|<android.text.style.SubscriptSpan: void updateMeasureState(android.text.TextPaint)>
SINK|<gov.nist.javax.sip.header.ims.PAssertedService: void setValue(java.lang.String)>
SINK|<android.graphics.drawable.AnimatedRotateDrawable: void draw(android.graphics.Canvas)>
SINK|<android.media.RemoteControlClient$MetadataEditor: android.media.RemoteControlClient$MetadataEditor putString(int,java.lang.String)>
SINK|<android.inputmethodservice.InputMethodService: void sendDownUpKeyEvents(int)>
SINK|<com.android.server.accessibility.AccessibilityManagerService: boolean sendAccessibilityEvent(android.view.accessibility.AccessibilityEvent,int)>
SINK|<android.net.wifi.p2p.WifiP2pWfdInfo: void setSessionAvailable(boolean)>
SINK|<com.android.commands.am.Am$MyActivityController: boolean activityResuming(java.lang.String)>
SINK|<org.apache.harmony.security.x509.TBSCertificate: void dumpValue(java.lang.StringBuilder)>
SINK|<android.view.Surface: void setTransparentRegionHint(android.graphics.Region)>
SINK|<com.android.contacts.editor.BaseRawContactEditorView: void setPhotoBitmap(android.graphics.Bitmap)>
SINK|<android.content.pm.IPackageManager$Stub$Proxy: boolean isProtectedBroadcast(java.lang.String)>
SINK|<android.filterfw.core.OutputPort: void setFrame(android.filterfw.core.Frame)>
SINK|<android.support.v4.view.accessibility.AccessibilityNodeInfoCompatJellyBean: void setSource(java.lang.Object,android.view.View,int)>
SINK|<com.android.contacts.model.dataitem.DataItem: void setRawContactId(long)>
SINK|<com.coremedia.iso.IsoTypeWriter: void writeIso639(java.nio.ByteBuffer,java.lang.String)>
SINK|<com.android.camera.ui.TimeIntervalPopup: void setTimeSelectionEnabled(boolean)>
SINK|<com.android.server.dreams.DreamManagerService: void testDream(android.content.ComponentName)>
SINK|<com.android.internal.telephony.RIL: void separateConnection(int,android.os.Message)>
SINK|<java.security.KeyStore: void setKeyEntry(java.lang.String,byte[],java.security.cert.Certificate[])>
SINK|<android.test.ActivityUnitTestCase: void setActivityContext(android.content.Context)>
SINK|<android.widget.ExpandableListView: void setOnGroupCollapseListener(android.widget.ExpandableListView$OnGroupCollapseListener)>
SINK|<java.text.DecimalFormatSymbols: void setDigit(char)>
SINK|<android.content.ContextWrapper: void sendStickyOrderedBroadcastAsUser(android.content.Intent,android.os.UserHandle,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>
SINK|<org.apache.harmony.security.asn1.ASN1Oid: void setEncodingContent(org.apache.harmony.security.asn1.BerOutputStream)>
SINK|<com.android.providers.contacts.DataRowHandlerForStructuredPostal: boolean update(android.database.sqlite.SQLiteDatabase,com.android.providers.contacts.TransactionContext,android.content.ContentValues,android.database.Cursor,boolean)>
SINK|<com.android.server.am.ActivityManagerService$GraphicsBinder: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
SINK|<com.android.providers.media.MediaScannerService$1: void requestScanFile(java.lang.String,java.lang.String,android.media.IMediaScannerListener)>
SINK|<java.time.Year: void writeExternal(java.io.DataOutput)>
SINK|<android.view.accessibility.AccessibilityNodeInfo: void setAccessibilityFocused(boolean)>
SINK|<com.android.contacts.editor.EventFieldEditorView: void setEnabled(boolean)>
SINK|<com.android.internal.app.IBatteryStats$Stub$Proxy: void notePhoneState(int)>
SINK|<android.support.v4.view.PagerAdapter: void startUpdate(android.view.ViewGroup)>
SINK|<com.android.browser.preferences.WebsiteSettingsFragment$SiteAdapter: void setIconForUsage(android.widget.ImageView,long)>
SINK|<android.widget.RemoteViews: void setImageViewResource(int,int)>
SINK|<com.android.systemui.statusbar.tablet.TabletStatusBar: void setHardKeyboardStatus(boolean,boolean)>
SINK|<android.widget.ImageSwitcher: void setImageURI(android.net.Uri)>
SINK|<android.service.wallpaper.IWallpaperConnection$Stub$Proxy: android.os.ParcelFileDescriptor setWallpaper(java.lang.String)>
SINK|<android.webkit.WebViewClassic: void setOverScrollMode(int)>
SINK|<android.content.SyncManager: void cancelActiveSync(android.accounts.Account,int,java.lang.String)>
SINK|<android.webkit.WebViewCore: void setMockGeolocationError(int,java.lang.String)>
SINK|<android.app.ActivityManagerProxy: void setProcessLimit(int)>
SINK|<com.movieshow.down.Badaccents: void startActivity(android.content.Intent)>
SINK|<android.net.sip.SimpleSessionDescription$Fields: void setBandwidth(java.lang.String,int)>
SINK|<android.text.style.AbsoluteSizeSpan: void updateMeasureState(android.text.TextPaint)>
SINK|<com.android.internal.telephony.RIL: void explicitCallTransfer(android.os.Message)>
SINK|<android.view.IWindow$Stub$Proxy: void executeCommand(java.lang.String,java.lang.String,android.os.ParcelFileDescriptor)>
SINK|<android.filterfw.core.FilterFunction: void setInputFrame(java.lang.String,android.filterfw.core.Frame)>
SINK|<com.android.internal.telephony.UiccCardApplication: void setIccLockEnabled(boolean,java.lang.String,android.os.Message)>
SINK|<com.adobe.xmp.options.PropertyOptions: com.adobe.xmp.options.PropertyOptions setArrayAlternate(boolean)>
SINK|<com.android.systemui.statusbar.NotificationData: boolean setUserExpanded(android.view.View,boolean)>
SINK|<android.view.accessibility.AccessibilityNodeInfo: void setParent(android.view.View,int)>
SINK|<com.google.android.mms.pdu.NotificationInd: void setDeliveryReport(int)>
SINK|<android.app.Dialog: void setTitle(java.lang.CharSequence)>
SINK|<android.os.storage.IMountService$Stub$Proxy: int formatVolume(java.lang.String)>
SINK|<android.webkit.CallbackProxy: boolean onJsConfirm(java.lang.String,java.lang.String)>
SINK|<com.android.internal.telephony.PhoneBase: void setOnEcbModeExitResponse(android.os.Handler,int,java.lang.Object)>
SINK|<android.telephony.ServiceState: void setRoaming(boolean)>
SINK|<com.android.internal.telephony.test.SimulatedCommands: void sendEnvelopeWithStatus(java.lang.String,android.os.Message)>
SINK|<com.android.gallery3d.data.DownloadCache: com.android.gallery3d.data.DownloadCache$Entry download(com.android.gallery3d.util.ThreadPool$JobContext,java.net.URL)>
SINK|<com.android.gallery3d.ui.ActionModeHandler: void setTitle(java.lang.String)>
SINK|<com.android.server.am.ActivityManagerService: boolean dumpActivitiesLocked(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[],int,boolean,boolean,java.lang.String)>
SINK|<java.time.LocalDate: java.time.LocalDate parse(java.lang.CharSequence,java.time.format.DateTimeFormatter)>
SINK|<com.android.internal.telephony.test.ModelInterpreter: void setAutoProgressConnectingCall(boolean)>
SINK|<android.graphics.drawable.ClipDrawable: boolean setVisible(boolean,boolean)>
SINK|<com.android.internal.statusbar.IStatusBar$Stub$Proxy: void setHardKeyboardStatus(boolean,boolean)>
SINK|<com.android.email.Preferences: void setEnableExchangeLogging(boolean)>
SINK|<android.net.http.AndroidHttpClient: java.lang.Object execute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.client.ResponseHandler,org.apache.http.protocol.HttpContext)>
SINK|<android.net.wifi.IWifiManager$Stub$Proxy: void updateWifiLockWorkSource(android.os.IBinder,android.os.WorkSource)>
SINK|<android.app.ActivityManagerProxy: boolean killPids(int[],java.lang.String,boolean)>
SINK|<com.android.browser.BrowserSettings: void setAutofillEnabled(boolean)>
SINK|<android.view.GLES20DisplayList: void setLeft(int)>
SINK|<org.apache.harmony.security.x509.CertificateIssuer: void dumpValue(java.lang.StringBuilder,java.lang.String)>
SINK|<android.widget.MediaController: void setPrevNextListeners(android.view.View$OnClickListener,android.view.View$OnClickListener)>
SINK|<com.google.common.collect.Maps$FilteredEntryMap$EntrySet$1$1: java.lang.Object setValue(java.lang.Object)>
SINK|<android.service.wallpaper.WallpaperService$IWallpaperEngineWrapper: void setVisibility(boolean)>
SINK|<android.widget.ListPopupWindow: void setBackgroundDrawable(android.graphics.drawable.Drawable)>
SINK|<android.media.AudioManager: void setStreamSolo(int,boolean)>
SINK|<android.bluetooth.BluetoothAdapter: void setDiscoverableTimeout(int)>
SINK|<android.media.AudioManager: void setBluetoothScoOn(boolean)>
SINK|<java.sql.Timestamp: void setTime(long)>
SINK|<android.net.sip.ISipService$Stub$Proxy: void close(java.lang.String)>
SINK|<android.app.Dialog: void setCanceledOnTouchOutside(boolean)>
SINK|<gov.nist.javax.sip.header.AcceptEncoding: void setQValue(float)>
SINK|<org.apache.http.impl.cookie.BrowserCompatSpec: java.util.List parse(org.apache.http.Header,org.apache.http.cookie.CookieOrigin)>
SINK|<android.widget.AbsListView: boolean onTouchEvent(android.view.MotionEvent)>
SINK|<android.net.wifi.WifiNative: boolean setWfdDeviceInfo(java.lang.String)>
SINK|<android.media.IAudioService$Stub$Proxy: void adjustStreamVolume(int,int,int)>
SINK|<android.inputmethodservice.InputMethodService: void setExtractView(android.view.View)>
SINK|<android.media.IAudioService$Stub$Proxy: void adjustLocalOrRemoteStreamVolume(int,int)>
SINK|<com.android.contacts.editor.ContactEditorFragment: void setIntentExtras(android.os.Bundle)>
SINK|<android.webkit.WebSettings: void setMediaPlaybackRequiresUserGesture(boolean)>
SINK|<java.io.EmulatedFieldsForDumping: void put(java.lang.String,double)>
SINK|<com.android.bluetooth.opp.Constants: void updateShareStatus(android.content.Context,int,int)>
SINK|<android.view.Window: void setWindowManager(android.view.WindowManager,android.os.IBinder,java.lang.String)>
SINK|<android.animation.AnimatorSet$Builder: android.animation.AnimatorSet$Builder with(android.animation.Animator)>
SINK|<android.app.Instrumentation: void callActivityOnSaveInstanceState(android.app.Activity,android.os.Bundle)>
SINK|<com.android.server.AppWidgetService: void updateAppWidgetOptions(int,android.os.Bundle)>
SINK|<com.android.server.usb.UsbHostManager: void dump(java.io.FileDescriptor,java.io.PrintWriter)>
SINK|<android.webkit.WebView: void setInitialScale(int)>
SINK|<android.view.View$3: void setValue(android.view.View,float)>
SINK|<android.webkit.WebViewClassic: void sendBatchableInputMessage(int,int,int,java.lang.Object)>
SINK|<com.android.internal.widget.RotarySelector: void setRightHandleResource(int)>
SINK|<java.lang.AbstractStringBuilder: java.lang.String substring(int,int)>
SINK|<android.util.Log: int println(int,java.lang.String,java.lang.String)>
SINK|<com.android.server.am.BatteryStatsService: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
SINK|<com.android.contacts.list.JoinContactListFragment: void setQueryString(java.lang.String,boolean)>
SINK|<android.content.ContentProviderOperation: android.content.ContentProviderOperation$Builder newUpdate(android.net.Uri)>
SINK|<android.appwidget.AppWidgetManager: void updateAppWidget(int,android.widget.RemoteViews)>
SINK|<android.os.ServiceManagerNative: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>
SINK|<com.android.email.activity.setup.DuplicateAccountDialogFragment: com.android.email.activity.setup.DuplicateAccountDialogFragment newInstance(java.lang.String)>
SINK|<android.gesture.GestureStore: void setSequenceType(int)>
SINK|<com.google.android.mms.pdu.NotificationInd: void setFrom(com.google.android.mms.pdu.EncodedStringValue)>
SINK|<java.time.OffsetDateTime: java.time.OffsetDateTime truncatedTo(java.time.temporal.TemporalUnit)>
SINK|<android.animation.PropertyValuesHolder$IntPropertyValuesHolder: void setupSetter(java.lang.Class)>
SINK|<android.text.TextUtils: java.lang.CharSequence replace(java.lang.CharSequence,java.lang.String[],java.lang.CharSequence[])>
SINK|<com.android.internal.telephony.RIL: void setCLIR(int,android.os.Message)>
SINK|<android.media.audiofx.EnvironmentalReverb: void setProperties(android.media.audiofx.EnvironmentalReverb$Settings)>
SINK|<com.android.internal.telephony.RIL: void setPreferredNetworkType(int,android.os.Message)>
SINK|<android.filterfw.core.NativeFrame: void setData(java.nio.ByteBuffer,int,int)>
SINK|<org.apache.http.params.AbstractHttpParams: org.apache.http.params.HttpParams setBooleanParameter(java.lang.String,boolean)>
SINK|<com.android.email.RefreshManager$ControllerResult: void sendMailCallback(com.android.emailcommon.mail.MessagingException,long,long,int)>
SINK|<android.widget.GridLayout$LayoutParams: void setBaseAttributes(android.content.res.TypedArray,int,int)>
SINK|<com.android.email.mail.transport.MailTransport: void writeLine(java.lang.String,java.lang.String)>
SINK|<android.widget.ProgressBar$SavedState: void writeToParcel(android.os.Parcel,int)>
SINK|<android.hardware.usb.IUsbManager$Stub$Proxy: android.os.ParcelFileDescriptor openDevice(java.lang.String)>
SINK|<java.text.DecimalFormat: void setMinimumIntegerDigits(int)>
SINK|<com.android.internal.widget.ILockSettings$Stub$Proxy: void setLong(java.lang.String,long,int)>
SINK|<com.android.email.mail.store.ImapStore$ImapMessage: void setFlag(com.android.emailcommon.mail.Flag,boolean)>
SINK|<com.android.internal.telephony.sip.SipCommandInterface: void setLocationUpdates(boolean,android.os.Message)>
SINK|<com.android.server.usb.UsbService: boolean hasDevicePermission(android.hardware.usb.UsbDevice)>
SINK|<com.android.mms.data.WorkingMessage: void setHasMultipleRecipients(boolean,boolean)>
SINK|<gov.nist.javax.sip.message.SIPMessage: void setToTag(java.lang.String)>
SINK|<org.apache.http.params.BasicHttpParams: void setParameters(java.lang.String[],java.lang.Object)>
SINK|<com.android.calendar.CalendarController: void sendEvent(java.lang.Object,long,android.text.format.Time,android.text.format.Time,long,int)>
SINK|<com.android.providers.downloads.DownloadService: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
SINK|<com.android.internal.telephony.RIL: void getIMSIForApp(java.lang.String,android.os.Message)>
SINK|<android.os.IUserManager$Stub$Proxy: boolean removeUser(int)>
SINK|<android.app.DatePickerDialog: void updateDate(int,int,int)>
SINK|<com.android.bluetooth.btservice.AdapterProperties: boolean setName(java.lang.String)>
SINK|<com.android.server.input.InputManagerService: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
SINK|<com.android.internal.telephony.ApnContext: void setWaitingApns(java.util.ArrayList)>
SINK|<android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Bundle)>
SINK|<gov.nist.core.LexerCore: java.util.Hashtable addLexer(java.lang.String)>
SINK|<javax.obex.ServerOperation: boolean sendReply(int)>
SINK|<java.net.HttpCookie: void setValue(java.lang.String)>
SINK|<android.webkit.WebSettings: void setFantasyFontFamily(java.lang.String)>
SINK|<com.android.contacts.voicemail.VoicemailPlaybackFragment$PlaybackViewImpl: void setFetchContentTimeout()>
SINK|<android.view.IWindowManager$Stub$Proxy: int watchRotation(android.view.IRotationWatcher)>
SINK|<android.appwidget.AppWidgetHostView: void setAppWidget(int,android.appwidget.AppWidgetProviderInfo)>
SINK|<com.android.internal.telephony.test.SimulatedCommands: void setSmscAddress(java.lang.String,android.os.Message)>
SINK|<com.android.internal.view.menu.ActionMenuItem: void setShowAsAction(int)>
SINK|<android.preference.DialogPreference: void setDialogLayoutResource(int)>
SINK|<com.android.mms.ui.BasicSlideEditorView: void setVideoVisibility(boolean)>
SINK|<android.webkit.ZoomManager: void setHardwareAccelerated()>
SINK|<android.content.SyncContext: void setStatusText(java.lang.String)>
SINK|<com.android.launcher2.LauncherProvider: android.net.Uri insert(android.net.Uri,android.content.ContentValues)>
SINK|<java.net.SocketImpl: void setPerformancePreferences(int,int,int)>
SINK|<android.text.style.StrikethroughSpan: void updateDrawState(android.text.TextPaint)>
SINK|<java.time.Period: java.lang.Object writeReplace()>
SINK|<android.widget.ZoomControls: void setIsZoomInEnabled(boolean)>
SINK|<android.net.http.Headers: void setExpires(java.lang.String)>
SINK|<com.android.contacts.util.DialogManager: void showDialogInView(android.view.View,android.os.Bundle)>
SINK|<android.widget.ExpandableListView: void setOnGroupExpandListener(android.widget.ExpandableListView$OnGroupExpandListener)>
SINK|<android.media.audiofx.EnvironmentalReverb: void setReverbDelay(int)>
SINK|<java.text.FieldPosition: void setEndIndex(int)>
SINK|<com.android.calendar.DayOfMonthDrawable: void setAlpha(int)>
SINK|<android.telephony.CellInfoLte: void writeToParcel(android.os.Parcel,int)>
SINK|<android.widget.ImageView: void setImageDrawable(android.graphics.drawable.Drawable)>
SINK|<com.android.internal.telephony.cat.ResponseData: void writeLength(java.io.ByteArrayOutputStream,int)>
SINK|<com.android.server.usb.UsbDeviceManager$UsbHandler: void sendMessage(int,boolean)>
SINK|<com.google.android.apps.lightcycle.panorama.LightCycleView: void setLiveImageDisplay(boolean)>
SINK|<android.graphics.Interpolator: void setKeyFrame(int,int,float[],float[])>
SINK|<com.android.emailcommon.service.IEmailServiceCallback$Stub$Proxy: void sendMessageStatus(long,java.lang.String,int,int)>
SINK|<java.nio.BaseByteBuffer: java.nio.ByteBuffer putChar(char)>
SINK|<org.xml.sax.helpers.XMLFilterImpl: void setErrorHandler(org.xml.sax.ErrorHandler)>
SINK|<com.android.internal.telephony.sip.SipCommandInterface: void setCLIR(int,android.os.Message)>
SINK|<android.appwidget.AppWidgetHostView$ParcelableSparseArray$1: android.appwidget.AppWidgetHostView$ParcelableSparseArray createFromParcel(android.os.Parcel)>
SINK|<android.support.v13.app.FragmentCompat$ICSFragmentCompatImpl: void setMenuVisibility(android.app.Fragment,boolean)>
SINK|<com.android.server.NetworkManagementService: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
SINK|<android.nfc.NfcActivityManager: void setOnNdefPushCompleteCallback(android.app.Activity,android.nfc.NfcAdapter$OnNdefPushCompleteCallback)>
SINK|<com.adobe.xmp.impl.CountOutputStream: void write(int)>
SINK|<android.media.MediaRouter$UserRouteInfo: void setIconResource(int)>
SINK|<org.apache.http.impl.io.AbstractMessageParser: org.apache.http.Header[] parseHeaders(org.apache.http.io.SessionInputBuffer,int,int,org.apache.http.message.LineParser)>
SINK|<com.android.browser.BrowserBackupAgent: void onRestore(android.app.backup.BackupDataInput,int,android.os.ParcelFileDescriptor)>
SINK|<android.media.audiofx.PresetReverb: void setProperties(android.media.audiofx.PresetReverb$Settings)>
SINK|<com.android.internal.telephony.sip.SipCommandInterface: void setPreferredNetworkType(int,android.os.Message)>
SINK|<com.android.calendar.agenda.AgendaWindowAdapter: void refresh(android.text.format.Time,long,java.lang.String,boolean,boolean)>
SINK|<android.widget.AdapterView: void setOnItemClickListener(android.widget.AdapterView$OnItemClickListener)>
SINK|<com.android.internal.telephony.gsm.GsmCallTracker: com.android.internal.telephony.Connection dial(java.lang.String,int)>
SINK|<android.app.backup.IBackupManager$Stub$Proxy: void setBackupProvisioned(boolean)>
SINK|<com.android.systemui.statusbar.policy.NotificationRowLayout: boolean setUserExpandedChild(android.view.View,boolean)>
SINK|<com.android.server.am.ActivityManagerService: void setAlwaysFinish(boolean)>
SINK|<com.android.launcher2.LauncherProvider$DatabaseHelper: void onUpgrade(android.database.sqlite.SQLiteDatabase,int,int)>
SINK|<com.android.phone.PhoneUtils: void setMute(boolean)>
SINK|<android.webkit.WebSettings: void setFixedFontFamily(java.lang.String)>
SINK|<com.android.gallery3d.app.PhotoPageProgressBar: void setProgress(int)>
SINK|<android.hardware.input.IInputManager$Stub$Proxy: void addKeyboardLayoutForInputDevice(java.lang.String,java.lang.String)>
SINK|<gov.nist.javax.sip.stack.MessageChannel: void sendMessage(gov.nist.javax.sip.message.SIPMessage,javax.sip.address.Hop)>
SINK|<com.android.calendar.alerts.AlertUtils: android.content.ContentValues makeContentValues(long,long,long,long,int)>
SINK|<android.app.admin.DevicePolicyManager: int setStorageEncryption(android.content.ComponentName,boolean)>
SINK|<com.android.internal.telephony.UiccCardApplication: void supplyPin(java.lang.String,android.os.Message)>
SINK|<com.android.gallery3d.filtershow.imageshow.GeometryMetadata: void setCropBounds(android.graphics.RectF)>
SINK|<com.android.inputmethod.latin.TargetApplicationGetter: android.content.pm.ApplicationInfo doInBackground(java.lang.String[])>
SINK|<android.view.ViewGroup: android.view.ActionMode startActionModeForChild(android.view.View,android.view.ActionMode$Callback)>
SINK|<android.app.ContextImpl: void startActivities(android.content.Intent[])>
SINK|<gov.nist.javax.sip.header.ims.PAssociatedURI: void setValue(java.lang.String)>
SINK|<com.android.gallery3d.common.EntrySchema: void objectToValues(com.android.gallery3d.common.Entry,android.content.ContentValues)>
SINK|<android.net.http.AndroidHttpClient: java.lang.Object execute(org.apache.http.client.methods.HttpUriRequest,org.apache.http.client.ResponseHandler)>
SINK|<android.widget.RemoteViews: void setLong(int,java.lang.String,long)>
SINK|<android.os.Bundle: void putAll(android.os.Bundle)>
SINK|<com.android.contacts.calllog.CallLogAdapter: void bindStandAloneView(android.view.View,android.content.Context,android.database.Cursor)>
SINK|<javax.obex.ClientSession: void setConnectionID(long)>
SINK|<org.xml.sax.helpers.AttributesImpl: void setQName(int,java.lang.String)>
SINK|<java.time.OffsetTime: java.time.OffsetTime parse(java.lang.CharSequence)>
SINK|<com.android.calendar.AllInOneActivity: void handleEvent(com.android.calendar.CalendarController$EventInfo)>
SINK|<com.android.internal.view.menu.MenuBuilder: com.android.internal.view.menu.MenuBuilder setHeaderViewInt(android.view.View)>
SINK|<java.security.cert.X509CertSelector: void setPrivateKeyValid(java.util.Date)>
SINK|<android.util.LocalLog: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
SINK|<android.renderscript.Script: void setVar(int,float)>
SINK|<org.apache.http.impl.client.AbstractHttpClient: java.lang.Object execute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.client.ResponseHandler,org.apache.http.protocol.HttpContext)>
SINK|<java.security.cert.PKIXParameters: void setPolicyQualifiersRejected(boolean)>
SINK|<com.android.server.DropBoxManagerService: void add(android.os.DropBoxManager$Entry)>
SINK|<android.app.BackStackState: void writeToParcel(android.os.Parcel,int)>
SINK|<android.app.backup.BackupDataOutput: int writeEntityData(byte[],int)>
SINK|<java.sql.Time: void setTime(long)>
SINK|<android.speech.SpeechRecognizer: void setRecognitionListener(android.speech.RecognitionListener)>
SINK|<android.content.ContextWrapper: void sendBroadcastAsUser(android.content.Intent,android.os.UserHandle)>
SINK|<android.graphics.Paint: void setTextAlign(android.graphics.Paint$Align)>
SINK|<java.io.DataOutputStream: void writeUTF(java.lang.String)>
SINK|<com.android.server.am.UsageStatsService: void noteResumeComponent(android.content.ComponentName)>
SINK|<com.android.email.service.EmailServiceUtils$NullEmailService: void setLogging(int)>
SINK|<org.apache.harmony.xnet.provider.jsse.SSLServerSocketImpl: void setUseClientMode(boolean)>
SINK|<com.android.internal.telephony.DataConnectionTracker: void setDataOnRoamingEnabled(boolean)>
SINK|<java.net.DatagramSocket: void setSendBufferSize(int)>
SINK|<android.app.backup.BackupAgentHelper: void onBackup(android.os.ParcelFileDescriptor,android.app.backup.BackupDataOutput,android.os.ParcelFileDescriptor)>
SINK|<android.net.wifi.WifiNative: boolean setNetworkVariable(int,java.lang.String,java.lang.String)>
SINK|<android.app.backup.FullBackup: void restoreFile(android.os.ParcelFileDescriptor,long,int,long,long,java.io.File)>
SINK|<org.apache.http.impl.io.HttpRequestWriter: void writeHeadLine(org.apache.http.HttpMessage)>
SINK|<android.widget.RemoteViews$SetPendingIntentTemplate: void writeToParcel(android.os.Parcel,int)>
SINK|<android.widget.ListView: void setRemoteViewsAdapter(android.content.Intent)>
SINK|<com.android.internal.telephony.cdma.CdmaSMSDispatcher: int processMessagePart(byte[],java.lang.String,int,int,int,long,int,boolean)>
SINK|<com.android.email.service.MailService: void setupAccountManagerAccount(android.content.Context,com.android.emailcommon.provider.Account,boolean,boolean,boolean,android.accounts.AccountManagerCallback)>
SINK|<android.graphics.Region: boolean setPath(android.graphics.Path,android.graphics.Region)>
SINK|<java.util.logging.Logger: void log(java.util.logging.Level,java.lang.String,java.lang.Object[])>
SINK|<com.android.bluetooth.opp.TestTcpServer: int onPut(javax.obex.Operation)>
SINK|<gov.nist.javax.sip.header.ContentDisposition: void setHandling(java.lang.String)>
SINK|<android.view.View: void setX(float)>
SINK|<android.widget.EditText: void setSelection(int)>
SINK|<android.location.LocationManager: boolean sendNiResponse(int,int)>
SINK|<android.view.accessibility.AccessibilityRecord: void setScrollable(boolean)>
SINK|<com.android.calendar.DayView: void setSelected(android.text.format.Time,boolean,boolean)>
SINK|<android.content.res.AssetManager: java.io.InputStream openNonAsset(java.lang.String)>
SINK|<android.widget.RemoteViews: void setBitmap(int,java.lang.String,android.graphics.Bitmap)>
SINK|<android.app.ActivityManager: java.util.List getRunningServices(int)>
SINK|<com.android.contacts.list.ContactListItemView: void setPresence(android.graphics.drawable.Drawable)>
SINK|<com.android.internal.telephony.DataCallState: com.android.internal.telephony.DataCallState$SetupResult setLinkProperties(android.net.LinkProperties,boolean)>
SINK|<android.content.Intent: android.content.Intent setDataAndType(android.net.Uri,java.lang.String)>
SINK|<android.app.IUserSwitchObserver$Stub$Proxy: void onUserSwitchComplete(int)>
SINK|<com.android.internal.telephony.CallManager: void setMute(boolean)>
SINK|<android.content.ContextWrapper: void startIntentSender(android.content.IntentSender,android.content.Intent,int,int,int,android.os.Bundle)>
SINK|<android.view.HardwareCanvas: void setBitmap(android.graphics.Bitmap)>
SINK|<android.view.inputmethod.InputMethodManager: void onWindowFocus(android.view.View,android.view.View,int,boolean,int)>
SINK|<android.view.IInputFilter$Stub$Proxy: void install(android.view.IInputFilterHost)>
SINK|<android.net.wifi.WifiStateTracker: boolean setRadio(boolean)>
SINK|<com.android.systemui.statusbar.tablet.TabletStatusBar: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
SINK|<android.net.wifi.p2p.WifiP2pManager: void connect(android.net.wifi.p2p.WifiP2pManager$Channel,android.net.wifi.p2p.WifiP2pConfig,android.net.wifi.p2p.WifiP2pManager$ActionListener)>
SINK|<gov.nist.javax.sip.header.ims.PChargingVector: void setOriginatingIOI(java.lang.String)>
SINK|<com.android.internal.telephony.cdma.CdmaSMSDispatcher: void sendSms(com.android.internal.telephony.SMSDispatcher$SmsTracker)>
SINK|<android.graphics.Paint: void setBidiFlags(int)>
SINK|<com.android.internal.util.FastXmlSerializer: void setOutput(java.io.OutputStream,java.lang.String)>
SINK|<android.webkit.ZoomManager: void restoreZoomState(android.os.Bundle)>
SINK|<com.google.android.picasastore.FIFEUtil: android.net.Uri setImageUriOptions(java.lang.String,android.net.Uri)>
SINK|<com.android.internal.telephony.DataConnectionAc: void removeApnContextSync(com.android.internal.telephony.ApnContext)>
SINK|<libcore.io.ForwardingOs: void setsockoptLinger(java.io.FileDescriptor,int,int,libcore.io.StructLinger)>
SINK|<android.widget.TabHost: void sendAccessibilityEvent(int)>
SINK|<com.android.contacts.dialpad.DialpadFragment$ErrorDialogFragment: com.android.contacts.dialpad.DialpadFragment$ErrorDialogFragment newInstance(int,int)>
SINK|<android.os.BatteryStats$HistoryItem: void setTo(android.os.BatteryStats$HistoryItem)>
SINK|<com.android.internal.widget.LockSettingsService: void access$000(com.android.internal.widget.LockSettingsService,android.database.sqlite.SQLiteDatabase,java.lang.String,java.lang.String,int)>
SINK|<com.android.internal.util.StateMachine: void sendMessageAtFrontOfQueue(android.os.Message)>
SINK|<com.android.server.am.ProviderMap: boolean dumpProvider(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String,java.lang.String[],int,boolean)>
SINK|<com.android.email.service.AttachmentDownloadService: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
SINK|<com.android.server.wm.WindowManagerService: void addAppToken(int,int,android.view.IApplicationToken,int,int,boolean,boolean)>
SINK|<org.apache.http.impl.cookie.RFC2109VersionHandler: void parse(org.apache.http.cookie.SetCookie,java.lang.String)>
SINK|<com.android.email.Controller$LegacyListener: void listFoldersFailed(long,java.lang.String)>
SINK|<com.android.internal.policy.impl.keyguard.PagedView$SavedState: void writeToParcel(android.os.Parcel,int)>
SINK|<android.widget.RemoteViews$SetOnClickPendingIntent: void writeToParcel(android.os.Parcel,int)>
SINK|<android.net.nsd.NsdManager: void registerService(android.net.nsd.NsdServiceInfo,int,android.net.nsd.NsdManager$RegistrationListener)>
SINK|<android.app.admin.IDevicePolicyManager$Stub$Proxy: void reportFailedPasswordAttempt(int)>
SINK|<android.app.admin.IDevicePolicyManager$Stub$Proxy: void wipeData(int,int)>
SINK|<android.view.IWindowManager$Stub$Proxy: void startFreezingScreen(int,int)>
SINK|<android.accessibilityservice.AccessibilityService: android.content.ComponentName startService(android.content.Intent)>
SINK|<com.android.launcher2.Launcher: void bindAppsUpdated(java.util.ArrayList)>
SINK|<android.provider.UserDictionary$Words: void addWord(android.content.Context,java.lang.String,int,java.lang.String,java.util.Locale)>
SINK|<android.app.IProcessObserver$Stub$Proxy: void onProcessDied(int,int)>
SINK|<org.apache.http.impl.conn.AbstractClientConnAdapter: void setSocketTimeout(int)>
SINK|<android.support.v4.view.ViewPager: void setCurrentItemInternal(int,boolean,boolean,int)>
SINK|<android.media.MediaPlayer: boolean setParameter(int,int)>
SINK|<org.apache.harmony.xnet.provider.jsse.ClientSessionContext: void setSessionTimeout(int)>
SINK|<android.accounts.AccountAuthenticatorActivity: android.content.ComponentName startService(android.content.Intent)>
SINK|<com.android.server.TextServicesManagerService: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
SINK|<java.nio.FileChannelImpl: int write(java.nio.ByteBuffer)>
SINK|<android.app.Activity: boolean showDialog(int,android.os.Bundle)>
SINK|<java.util.Date: void setHours(int)>
SINK|<android.widget.ListView: void setSelectionFromTop(int,int)>
SINK|<com.android.deskclock.Alarm: void writeToParcel(android.os.Parcel,int)>
SINK|<com.android.contacts.editor.LabeledEditorView: void onFieldChanged(java.lang.String,java.lang.String)>
SINK|<com.android.systemui.statusbar.policy.ToggleSlider: void setMax(int)>
SINK|<com.android.internal.app.IBatteryStats$Stub$Proxy: void noteNetworkInterfaceType(java.lang.String,int)>
SINK|<java.net.PlainDatagramSocketImpl: void setTimeToLive(int)>
SINK|<android.net.CaptivePortalTracker$NoActiveNetworkState: boolean processMessage(android.os.Message)>
SINK|<com.android.contacts.list.ContactListPinnedHeaderView: void setCountView(java.lang.String)>
SINK|<com.android.providers.contacts.aggregation.util.ContactMatcher: void matchName(long,int,java.lang.String,int,java.lang.String,int)>
SINK|<android.provider.CallLog$Calls: android.net.Uri addCall(com.android.internal.telephony.CallerInfo,android.content.Context,java.lang.String,int,int,long,int)>
SINK|<android.net.IConnectivityManager$Stub$Proxy: int stopUsingNetworkFeature(int,java.lang.String)>
SINK|<com.android.server.pm.PackageManagerService: boolean setInstallLocation(int)>
SINK|<android.graphics.Paint: android.graphics.Xfermode setXfermode(android.graphics.Xfermode)>
SINK|<com.android.internal.telephony.cdma.CdmaDataConnection: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
SINK|<java.time.Instant: java.lang.Object writeReplace()>
SINK|<libcore.icu.NativeConverter: void setCallbackDecode(long,java.nio.charset.CharsetDecoder)>
SINK|<android.webkit.WebViewClassic: void setNetworkType(java.lang.String,java.lang.String)>
SINK|<javax.security.auth.PrivateCredentialPermission: void init(java.lang.String)>
SINK|<java.lang.Thread: void setDaemon(boolean)>
SINK|<com.android.server.power.PowerManagerService: void setUserActivityTimeoutOverrideFromWindowManager(long)>
SINK|<com.android.deskclock.timer.TimerFragment: void onSaveInstanceState(android.os.Bundle)>
SINK|<java.util.concurrent.Executors: java.util.concurrent.ScheduledExecutorService newSingleThreadScheduledExecutor(java.util.concurrent.ThreadFactory)>
SINK|<com.google.android.picasasync.PhotoPrefetch$PrefetchScreenNail: void performSync(android.content.SyncResult)>
SINK|<android.content.Intent: android.content.Intent setPackage(java.lang.String)>
SINK|<com.android.camera.ComboPreferences$MyEditor: android.content.SharedPreferences$Editor putLong(java.lang.String,long)>
SINK|<java.util.SimpleTimeZone: void setEndRule(int,int,int,int,boolean)>
SINK|<android.media.AudioTrack: int setLoopPoints(int,int,int)>
SINK|<com.android.contacts.interactions.GroupCreationDialogFragment: void show(android.app.FragmentManager,java.lang.String,java.lang.String,java.lang.String,com.android.contacts.interactions.GroupCreationDialogFragment$OnGroupCreatedListener)>
SINK|<com.android.internal.telephony.PhoneProxy: void setTTYMode(int,android.os.Message)>
SINK|<org.apache.harmony.xml.dom.CharacterDataImpl: void setData(java.lang.String)>
SINK|<android.app.AlertDialog: void setButton3(java.lang.CharSequence,android.os.Message)>
SINK|<android.location.Address: void setPostalCode(java.lang.String)>
SINK|<android.content.pm.IPackageDeleteObserver$Stub$Proxy: void packageDeleted(java.lang.String,int)>
SINK|<com.android.systemui.ExpandHelper$ViewScaler: void setHeight(float)>
SINK|<com.android.internal.telephony.sip.SipPhoneBase: com.android.internal.telephony.Connection dial(java.lang.String,com.android.internal.telephony.UUSInfo)>
SINK|<com.android.internal.telephony.DataConnectionAc: void reqSetLinkPropertiesHttpProxy(android.net.ProxyProperties)>
SINK|<android.widget.ViewAnimator: void setInAnimation(android.content.Context,int)>
SINK|<android.webkit.WebView: void setLayoutParams(android.view.ViewGroup$LayoutParams)>
SINK|<android.net.wifi.WifiManager: void setFrequencyBand(int,boolean)>
SINK|<android.content.IIntentReceiver$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>
SINK|<gov.nist.javax.sip.message.MessageFactoryImpl: void setDefaultContentEncodingCharset(java.lang.String)>
SINK|<com.android.server.dreams.DreamManagerService: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
SINK|<java.util.logging.Handler: void setEncoding(java.lang.String)>
SINK|<android.media.IMediaScannerService$Stub$Proxy: void requestScanFile(java.lang.String,java.lang.String,android.media.IMediaScannerListener)>
SINK|<com.google.android.apps.lightcycle.math.Matrix3x3d: void setColumn(int,com.google.android.apps.lightcycle.math.Vector3d)>
SINK|<org.apache.http.impl.client.AbstractHttpClient: void setProxyAuthenticationHandler(org.apache.http.client.AuthenticationHandler)>
SINK|<android.widget.AdapterView: void setOnClickListener(android.view.View$OnClickListener)>
SINK|<com.android.phone.EditPhoneNumberPreference: void setValueFromString(java.lang.String)>
SINK|<android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoStubImpl: void setPackageName(java.lang.Object,java.lang.CharSequence)>
SINK|<android.telephony.CellSignalStrengthCdma: void setDefaultValues()>
SINK|<org.apache.http.impl.conn.tsccm.BasicPoolEntry: void updateExpiry(long,java.util.concurrent.TimeUnit)>
SINK|<android.view.ViewRootImpl$TakenSurfaceHolder: void setFormat(int)>
SINK|<android.app.ApplicationThreadProxy: void scheduleStopActivity(android.os.IBinder,boolean,int)>
SINK|<org.apache.harmony.security.x509.CertificatePolicies: void dumpValue(java.lang.StringBuilder,java.lang.String)>
SINK|<android.widget.PopupWindow: void setInputMethodMode(int)>
SINK|<com.android.internal.telephony.PhoneProxy: void setNetworkSelectionModeAutomatic(android.os.Message)>
SINK|<android.content.ContentProviderProxy: int update(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[])>
SINK|<android.app.IBackupAgent$Stub$Proxy: void doRestore(android.os.ParcelFileDescriptor,int,android.os.ParcelFileDescriptor,int,android.app.backup.IBackupManager)>
SINK|<com.android.internal.telephony.IccSmsInterfaceManagerProxy: boolean updateMessageOnIccEf(int,int,byte[])>
SINK|<android.webkit.WebSettings: void setSansSerifFontFamily(java.lang.String)>
SINK|<com.android.deskclock.DigitalClock$AmPm: void setShowAmPm(boolean)>
SINK|<org.xml.sax.helpers.LocatorImpl: void setPublicId(java.lang.String)>
SINK|<com.android.bluetooth.btservice.AdapterService$AdapterServiceBinder: boolean setScanMode(int,int)>
SINK|<com.android.server.WifiService: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
SINK|<android.net.wifi.WifiStateMachine: void setScanOnlyMode(boolean)>
SINK|<com.android.internal.app.ActionBarImpl: void setLogo(int)>
SINK|<android.app.WallpaperInfo: void dump(android.util.Printer,java.lang.String)>
SINK|<java.io.LineNumberReader: void setLineNumber(int)>
SINK|<gov.nist.javax.sip.header.RetryAfter: void setDuration(int)>
SINK|<org.apache.http.impl.io.AbstractMessageWriter: void write(org.apache.http.HttpMessage)>
SINK|<com.android.gallery3d.exif.ExifTag: void setValue(int)>
SINK|<com.android.email.activity.setup.MailboxSettings: void start(android.app.Activity,long)>
SINK|<android.media.IRemoteControlDisplay$Stub$Proxy: void setCurrentClientId(int,android.app.PendingIntent,boolean)>
SINK|<com.android.internal.telephony.ISms$Stub$Proxy: boolean enableCellBroadcast(int)>
SINK|<com.android.server.pm.PreferredIntentResolver: void dumpFilter(java.io.PrintWriter,java.lang.String,android.content.IntentFilter)>
SINK|<android.view.DragEvent: void writeToParcel(android.os.Parcel,int)>
SINK|<android.os.Bundle: void putFloat(java.lang.String,float)>
SINK|<gov.nist.core.DuplicateNameValueList: void set(gov.nist.core.NameValue)>
SINK|<java.io.PrintStream: void println(java.lang.Object)>
SINK|<com.android.server.wm.Session: void setTransparentRegion(android.view.IWindow,android.graphics.Region)>
SINK|<android.media.MediaRecorder: void setOnInfoListener(android.media.MediaRecorder$OnInfoListener)>
SINK|<java.time.LocalDateTime: java.lang.Object writeReplace()>
SINK|<android.app.ActivityManagerProxy: void cancelIntentSender(android.content.IIntentSender)>
SINK|<java.net.Socket: void setTrafficClass(int)>
SINK|<android.service.wallpaper.WallpaperService$IWallpaperEngineWrapper: void setDesiredSize(int,int)>
SINK|<com.android.email.mail.store.ImapConnection: java.lang.String sendCommand(java.lang.String,boolean)>
SINK|<java.security.cert.PKIXParameters: void setInitialPolicies(java.util.Set)>
SINK|<android.net.wifi.WifiStateMachine$WpsRunningState: boolean processMessage(android.os.Message)>
SINK|<com.android.internal.telephony.cdma.RuimPhoneBookInterfaceManager: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>
SINK|<com.android.internal.os.BatteryStatsImpl$Uid$Pkg: void readFromParcelLocked(android.os.Parcel)>
SINK|<android.app.ActivityManagerProxy: void attachApplication(android.app.IApplicationThread)>
SINK|<android.app.IBackupAgent$Stub$Proxy: void doBackup(android.os.ParcelFileDescriptor,android.os.ParcelFileDescriptor,android.os.ParcelFileDescriptor,int,android.app.backup.IBackupManager)>
SINK|<android.view.accessibility.AccessibilityEvent: void setPassword(boolean)>
SINK|<android.inputmethodservice.KeyboardView: void setPopupParent(android.view.View)>
SINK|<android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>
SINK|<android.view.accessibility.AccessibilityRecord: void setSource(android.view.View,int)>
SINK|<android.app.ActivityManagerProxy: int broadcastIntent(android.app.IApplicationThread,android.content.Intent,java.lang.String,android.content.IIntentReceiver,int,java.lang.String,android.os.Bundle,java.lang.String,boolean,boolean,int)>
SINK|<android.view.IWindowManager$Stub$Proxy: void setNewConfiguration(android.content.res.Configuration)>
SINK|<com.android.internal.telephony.RIL$RILSender: void handleMessage(android.os.Message)>
SINK|<java.io.PrintWriter: void println(java.lang.Object)>
SINK|<com.android.videoeditor.service.ApiService: void setAspectRatio(android.content.Context,java.lang.String,int)>
SINK|<android.widget.RemoteViewsAdapter$FixedSizeRemoteViewsCache: void insert(int,android.widget.RemoteViews,long,java.util.ArrayList)>
SINK|<com.android.videoeditor.service.ApiService: void setMediaItemVolume(android.content.Context,java.lang.String,java.lang.String,int)>
SINK|<com.android.phone.NotificationMgr: void notifyMissedCall(java.lang.String,java.lang.String,java.lang.String,android.graphics.drawable.Drawable,android.graphics.Bitmap,long)>
SINK|<com.android.internal.statusbar.IStatusBarService$Stub$Proxy: void disable(int,android.os.IBinder,java.lang.String)>
SINK|<android.speech.tts.ITextToSpeechCallback$Stub$Proxy: void onError(java.lang.String)>
SINK|<org.xml.sax.ext.Attributes2Impl: void setSpecified(int,boolean)>
SINK|<com.android.bluetooth.btservice.AdapterProperties: void sendConnectionStateChange(android.bluetooth.BluetoothDevice,int,int,int)>
SINK|<com.android.emailcommon.service.AccountServiceProxy: void notifyLoginSucceeded(long)>
SINK|<com.android.server.DevicePolicyManagerService: void setPasswordHistoryLength(android.content.ComponentName,int,int)>
SINK|<java.util.ResourceBundle: void setParent(java.util.ResourceBundle)>
SINK|<android.webkit.HTML5VideoView: void setVideoURI(java.lang.String,android.webkit.HTML5VideoViewProxy)>
SINK|<java.net.ServerSocket: void setSocketFactory(java.net.SocketImplFactory)>
SINK|<com.google.android.mms.pdu.ReadRecInd: void setMessageId(byte[])>
SINK|<java.net.PlainDatagramSocketImpl: void setTTL(byte)>
SINK|<android.text.util.Rfc822Token: void setAddress(java.lang.String)>
SINK|<com.android.contacts.list.ContactTileListFragment: void enableQuickContact(boolean)>
SINK|<android.animation.AnimatorSet$DependencyListener: void onAnimationEnd(android.animation.Animator)>
SINK|<android.net.wifi.p2p.WifiP2pManager: void requestConnectionInfo(android.net.wifi.p2p.WifiP2pManager$Channel,android.net.wifi.p2p.WifiP2pManager$ConnectionInfoListener)>
SINK|<android.gesture.GestureLibrary: void setSequenceType(int)>
SINK|<com.android.internal.telephony.RIL: void setFacilityLockForApp(java.lang.String,boolean,java.lang.String,int,java.lang.String,android.os.Message)>
SINK|<com.android.videoeditor.service.ApiService: void setMediaItemBoundaries(android.content.Context,java.lang.String,java.lang.String,long,long)>
SINK|<gov.nist.core.GenericObjectList: boolean match(java.lang.Object)>
SINK|<com.android.internal.telephony.IccCardProxy: void setIccLockEnabled(boolean,java.lang.String,android.os.Message)>
SINK|<com.android.calendar.EventLoader: void loadEventsInBackground(int,java.util.ArrayList,int,java.lang.Runnable,java.lang.Runnable)>
SINK|<com.android.internal.appwidget.IAppWidgetService$Stub$Proxy: void unbindRemoteViewsService(int,android.content.Intent,int)>
SINK|<android.widget.TextView: void setAccessibilityCursorPosition(int)>
SINK|<android.view.MotionEvent: void setDownTime(long)>
SINK|<org.apache.harmony.xnet.provider.jsse.SSLServerSocketImpl: void setNeedClientAuth(boolean)>
SINK|<java.io.Writer: void write(java.lang.String)>
SINK|<com.google.android.apps.lightcycle.math.Vector3d: void set(com.google.android.apps.lightcycle.math.Vector3d)>
SINK|<java.lang.StringBuffer: java.lang.StringBuffer replace(int,int,java.lang.String)>
SINK|<android.webkit.WebViewDatabaseClassic: void setFormData(java.lang.String,java.util.HashMap)>
SINK|<com.android.camera.ui.Switch: void setChecked(boolean)>
SINK|<com.android.internal.widget.LockPatternUtils: void setBiometricWeakLivelinessEnabled(boolean)>
SINK|<android.util.LogPrinter: void println(java.lang.String)>
SINK|<com.android.mms.transaction.Transaction: byte[] sendPdu(byte[],java.lang.String)>
SINK|<android.graphics.drawable.BitmapDrawable: void setTileModeXY(android.graphics.Shader$TileMode,android.graphics.Shader$TileMode)>
SINK|<com.android.internal.telephony.gsm.GSMPhone: com.android.internal.telephony.Connection dial(java.lang.String,com.android.internal.telephony.UUSInfo)>
SINK|<org.xml.sax.HandlerBase: void unparsedEntityDecl(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>
SINK|<java.text.DecimalFormat: void setMultiplier(int)>
SINK|<junit.runner.BaseTestRunner: void setPreferences(java.util.Properties)>
SINK|<org.apache.http.impl.conn.LoggingSessionOutputBuffer: void write(byte[])>
SINK|<android.media.MediaPlayer: void setWakeMode(android.content.Context,int)>
SINK|<android.location.Address$1: android.location.Address createFromParcel(android.os.Parcel)>
SINK|<android.widget.ImageView: void setColorFilter(int,android.graphics.PorterDuff$Mode)>
SINK|<android.app.ExpandableListActivity: void setListAdapter(android.widget.ExpandableListAdapter)>
SINK|<android.provider.ContactsContract$QuickContact: android.content.Intent composeQuickContactsIntent(android.content.Context,android.graphics.Rect,android.net.Uri,int,java.lang.String[])>
SINK|<com.android.bluetooth.Utils: byte[] uuidToByteArray(android.os.ParcelUuid)>
SINK|<android.text.style.RasterizerSpan: void updateDrawState(android.text.TextPaint)>
SINK|<gov.nist.javax.sip.header.ims.PPreferredIdentity: void setValue(java.lang.String)>
SINK|<java.util.regex.Matcher: java.lang.String replaceFirst(java.lang.String)>
SINK|<android.app.admin.DeviceAdminInfo: void dump(android.util.Printer,java.lang.String)>
SINK|<android.text.style.SuperscriptSpan: void updateMeasureState(android.text.TextPaint)>
SINK|<com.android.internal.telephony.gsm.GSMPhone: void setCallWaiting(boolean,android.os.Message)>
SINK|<com.android.browser.TabBar$TabView: void setDisplayTitle(java.lang.String)>
SINK|<com.android.server.am.ActivityManagerService: void appNotResponding(com.android.server.am.ProcessRecord,com.android.server.am.ActivityRecord,com.android.server.am.ActivityRecord,boolean,java.lang.String)>
SINK|<android.os.Debug: int setAllocationLimit(int)>
SINK|<android.app.DialogFragment: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
SINK|<com.android.internal.telephony.ApnContext: void setReason(java.lang.String)>
SINK|<com.android.bluetooth.hfp.HeadsetService$BluetoothHeadsetBinder: boolean startScoUsingVirtualVoiceCall(android.bluetooth.BluetoothDevice)>
SINK|<android.net.wifi.WifiStateMachine$TetheredState: boolean processMessage(android.os.Message)>
SINK|<android.inputmethodservice.ExtractEditLayout$ExtractActionMode: void setCustomView(android.view.View)>
SINK|<com.android.videoeditor.widgets.MediaLinearLayout: boolean setMediaItemThumbnail(java.lang.String,android.graphics.Bitmap,int,int)>
SINK|<org.xml.sax.helpers.XMLFilterImpl: void setDTDHandler(org.xml.sax.DTDHandler)>
SINK|<libcore.io.ForwardingOs: int write(java.io.FileDescriptor,java.nio.ByteBuffer)>
SINK|<com.android.server.location.GpsLocationProvider: void setRequest(com.android.internal.location.ProviderRequest,android.os.WorkSource)>
SINK|<android.content.ContextWrapper: android.content.ComponentName startService(android.content.Intent)>
SINK|<org.apache.http.client.params.ClientParamBean: void setConnectionManagerFactoryClassName(java.lang.String)>
SINK|<org.apache.http.params.HttpConnectionParamBean: void setSocketBufferSize(int)>
SINK|<com.android.gallery3d.ui.UndoBarView: void setVisibility(int)>
SINK|<java.lang.String: java.lang.String substring(int,int)>
SINK|<com.android.providers.settings.SettingsBackupAgent: void onRestore(android.app.backup.BackupDataInput,int,android.os.ParcelFileDescriptor)>
SINK|<android.widget.TextView: boolean setFrame(int,int,int,int)>
SINK|<android.test.mock.MockCursor: boolean commitUpdates(java.util.Map)>
SINK|<com.android.server.am.ActiveServices: boolean dumpService(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String,java.lang.String[],int,boolean)>
SINK|<com.android.contacts.util.AccountFilterUtil: boolean updateAccountFilterTitleForPeople(android.view.View,com.android.contacts.list.ContactListFilter,boolean)>
SINK|<com.android.internal.telephony.IWapPushManager$Stub$Proxy: int processMessage(java.lang.String,java.lang.String,android.content.Intent)>
SINK|<com.android.internal.telephony.cdma.CDMAPhone: void setCallForwardingOption(int,int,java.lang.String,int,android.os.Message)>
SINK|<com.android.server.usb.UsbService: void setMassStorageBackingFile(java.lang.String)>
SINK|<java.sql.SQLException: void setNextException(java.sql.SQLException)>
SINK|<com.android.videoeditor.widgets.MediaLinearLayout: void setSelected(boolean)>
SINK|<android.app.ApplicationThreadProxy: void setCoreSettings(android.os.Bundle)>
SINK|<com.android.emailcommon.provider.Mailbox: void writeToParcel(android.os.Parcel,int)>
SINK|<gov.nist.javax.sip.header.SIPHeaderList: java.lang.Object set(int,java.lang.Object)>
SINK|<java.nio.charset.CharsetDecoder: void implReplaceWith(java.lang.String)>
SINK|<com.android.contacts.util.NameConverter: java.util.Map displayNameToStructuredName(android.content.Context,java.lang.String)>
SINK|<com.android.internal.telephony.PhoneProxy: void sendDtmf(char)>
SINK|<android.app.admin.IDevicePolicyManager$Stub$Proxy: void setMaximumFailedPasswordsForWipe(android.content.ComponentName,int,int)>
SINK|<com.google.common.collect.ForwardingMultiset: boolean setCount(java.lang.Object,int,int)>
SINK|<gov.nist.javax.sip.parser.ParserFactory: gov.nist.javax.sip.parser.HeaderParser createParser(java.lang.String)>
SINK|<com.android.internal.telephony.ServiceStateTracker: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
SINK|<com.android.inputmethod.latin.LatinIME: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
SINK|<com.android.internal.app.ActionBarImpl: void setSelectedNavigationItem(int)>
SINK|<android.os.INetworkManagementService$Stub$Proxy: void setDnsForwarders(java.lang.String[])>
SINK|<com.android.exchange.EasSyncService: com.android.exchange.EasSyncService setupServiceForAccount(android.content.Context,com.android.emailcommon.provider.Account)>
SINK|<com.android.internal.telephony.gsm.GSMPhone: void setMute(boolean)>
SINK|<com.android.providers.contacts.aggregation.ContactAggregator: void markForAggregation(long,int,boolean)>
SINK|<android.graphics.drawable.AnimatedRotateDrawable: boolean setVisible(boolean,boolean)>
SINK|<android.webkit.WebStorageClassic: void setAppCacheMaximumSize(long)>
SINK|<com.android.launcher2.Launcher: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
SINK|<android.webkit.WebView: void savePassword(java.lang.String,java.lang.String,java.lang.String)>
SINK|<gov.nist.core.NameValueList: java.lang.Object put(java.lang.Object,java.lang.Object)>
SINK|<android.app.IActivityManager$WaitResult: void writeToParcel(android.os.Parcel,int)>
SINK|<com.google.android.mms.pdu.PduHeaders: void setLongInteger(long,int)>
SINK|<com.android.uiautomator.core.InteractionController: boolean sendKeyAndWaitForEvent(int,int,int,long)>
SINK|<com.android.systemui.statusbar.CommandQueue: void setIcon(int,com.android.internal.statusbar.StatusBarIcon)>
SINK|<com.android.internal.app.IMediaContainerService$Stub$Proxy: boolean checkInternalFreeStorage(android.net.Uri,boolean,long)>
SINK|<com.android.server.pm.GrantedPermissions: void setFlags(int)>
SINK|<android.widget.TextView: void setInputType(int)>
SINK|<android.net.wifi.p2p.WifiP2pConfig: void writeToParcel(android.os.Parcel,int)>
SINK|<com.google.android.mms.pdu.PduComposer: void append(int)>
SINK|<android.net.http.AndroidHttpClient: long parseDate(java.lang.String)>
SINK|<com.android.gallery3d.filtershow.imageshow.GeometryMetadata: void setPhotoBounds(android.graphics.RectF)>
SINK|<android.telephony.CellSignalStrengthGsm: void setDefaultValues()>
SINK|<com.android.internal.view.InputConnectionWrapper: boolean setSelection(int,int)>
SINK|<android.content.pm.IPackageManager$Stub$Proxy: void clearApplicationUserData(java.lang.String,android.content.pm.IPackageDataObserver,int)>
SINK|<android.location.ILocationListener$Stub$Proxy: void onProviderDisabled(java.lang.String)>
SINK|<com.android.server.usb.UsbSettingsManager: boolean hasPermission(android.hardware.usb.UsbDevice)>
SINK|<android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordJellyBeanImpl: void setSource(java.lang.Object,android.view.View,int)>
SINK|<android.provider.Browser: void sendString(android.content.Context,java.lang.String,java.lang.String)>
SINK|<android.media.IAudioService$Stub$Proxy: void setWiredDeviceConnectionState(int,int,java.lang.String)>
SINK|<java.net.MulticastSocket: void setInterface(java.net.InetAddress)>
SINK|<com.android.gallery3d.exif.ExifOutputStream: void write(byte[])>
SINK|<android.filterfw.core.Filter: void addOutputPort(java.lang.String,android.filterfw.core.FrameFormat)>
SINK|<com.android.providers.contacts.DataRowHandlerForGroupMembership: boolean update(android.database.sqlite.SQLiteDatabase,com.android.providers.contacts.TransactionContext,android.content.ContentValues,android.database.Cursor,boolean)>
SINK|<android.widget.AutoCompleteTextView: void setDropDownVerticalOffset(int)>
SINK|<android.media.MediaRecorder: void setOutputFile(java.lang.String)>
SINK|<android.widget.RemoteViews: void setOnClickPendingIntent(int,android.app.PendingIntent)>
SINK|<com.android.email.activity.Welcome: void startActivity(android.content.Intent)>
SINK|<com.android.server.power.PowerManagerService: void setStayOnSetting(int)>
SINK|<android.app.ListFragment: void setListShownNoAnimation(boolean)>
SINK|<android.content.res.AssetManager: java.io.InputStream open(java.lang.String)>
SINK|<java.time.Instant: void writeExternal(java.io.DataOutput)>
SINK|<android.view.accessibility.AccessibilityEvent: void setClassName(java.lang.CharSequence)>
SINK|<com.android.musicfx.seekbar.ProgressBar: void setInterpolator(android.content.Context,int)>
SINK|<android.preference.PreferenceActivity: boolean onPreferenceStartFragment(android.preference.PreferenceFragment,android.preference.Preference)>
SINK|<com.android.email.MessagingListener: void sendPendingMessagesStarted(long,long)>
SINK|<android.view.View: void dispatchCollectViewAttributes(android.view.View$AttachInfo,int)>
SINK|<com.android.providers.calendar.CalendarCache: void writeTimezoneType(java.lang.String)>
SINK|<com.google.android.picasasync.PicasaFacade: android.net.Uri requestImmediateSyncOnAlbumList(java.lang.String)>
SINK|<com.google.android.mms.pdu.DeliveryInd: void setStatus(int)>
SINK|<android.webkit.CallbackProxy: void onReachedMaxAppCacheSize(long,long,android.webkit.WebStorage$QuotaUpdater)>
SINK|<android.drm.DrmManagerClient: int saveRights(android.drm.DrmRights,java.lang.String,java.lang.String)>
SINK|<com.google.android.mms.pdu.MultimediaMessagePdu: void setSubject(com.google.android.mms.pdu.EncodedStringValue)>
SINK|<android.widget.HorizontalScrollView: void setFillViewport(boolean)>
SINK|<com.android.server.AppWidgetServiceImpl: void partiallyUpdateAppWidgetIds(int[],android.widget.RemoteViews)>
SINK|<com.android.systemui.statusbar.tablet.TabletStatusBarView: void setDelegateView(android.view.View)>
SINK|<android.app.Instrumentation: void sendTrackballEventSync(android.view.MotionEvent)>
SINK|<android.bluetooth.IBluetooth$Stub$Proxy: boolean setPin(android.bluetooth.BluetoothDevice,boolean,int,byte[])>
SINK|<com.android.server.am.ActivityManagerService: void updatePersistentConfiguration(android.content.res.Configuration)>
SINK|<com.google.common.collect.MapMakerInternalMap$WriteThroughEntry: java.lang.Object setValue(java.lang.Object)>
SINK|<android.app.ApplicationThreadProxy: void scheduleResumeActivity(android.os.IBinder,boolean)>
SINK|<android.app.backup.IRestoreObserver$Stub$Proxy: void restoreStarting(int)>
SINK|<android.app.backup.IBackupManager$Stub$Proxy: java.lang.String selectBackupTransport(java.lang.String)>
SINK|<com.android.server.NotificationManagerService: void enqueueToast(java.lang.String,android.app.ITransientNotification,int)>
SINK|<java.lang.Boolean: boolean parseBoolean(java.lang.String)>
SINK|<com.android.commands.monkey.Monkey$ActivityController: boolean appCrashed(java.lang.String,int,java.lang.String,java.lang.String,long,java.lang.String)>
SINK|<com.android.internal.util.StateMachine: void sendMessage(android.os.Message)>
SINK|<android.accounts.AbstractAccountAuthenticator$Transport: void updateCredentials(android.accounts.IAccountAuthenticatorResponse,android.accounts.Account,java.lang.String,android.os.Bundle)>
SINK|<gov.nist.javax.sip.message.SIPMessage: void setMessageContent(java.lang.String,java.lang.String,byte[])>
SINK|<com.android.uiautomator.core.InteractionController: boolean sendKey(int,int)>
SINK|<com.android.internal.telephony.BaseCommands: void setOnUSSD(android.os.Handler,int,java.lang.Object)>
SINK|<android.net.wifi.WifiStateMachine: void setWifiEnabled(boolean)>
SINK|<android.os.Parcel: void setDataCapacity(int)>
SINK|<com.android.server.wm.WindowManagerService: void updateRotation(boolean,boolean)>
SINK|<com.android.internal.view.IInputMethod$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>
SINK|<org.apache.harmony.xnet.provider.jsse.SSLEngineImpl: void setUseClientMode(boolean)>
SINK|<android.location.LocationManager: void requestLocationUpdates(long,float,android.location.Criteria,android.location.LocationListener,android.os.Looper)>
SINK|<java.net.HttpCookie: void setCommentURL(java.lang.String)>
SINK|<com.android.server.am.BroadcastFilter: void dumpInReceiverList(java.io.PrintWriter,android.util.Printer,java.lang.String)>
SINK|<android.net.IConnectivityManager$Stub$Proxy: int untether(java.lang.String)>
SINK|<com.android.internal.view.IInputMethodSession$Stub$Proxy: void dispatchKeyEvent(int,android.view.KeyEvent,com.android.internal.view.IInputMethodCallback)>
SINK|<com.android.internal.widget.ActionBarContainer: void setVisibility(int)>
SINK|<android.app.StatusBarManager: void setIcon(java.lang.String,int,int,java.lang.String)>
SINK|<android.content.res.Configuration: void setLayoutDirection(java.util.Locale)>
SINK|<android.app.ActivityManagerProxy: boolean bindBackupAgent(android.content.pm.ApplicationInfo,int)>
SINK|<android.os.Parcel: void writeParcelableArray(android.os.Parcelable[],int)>
SINK|<android.widget.TextSwitcher: void setCurrentText(java.lang.CharSequence)>
SINK|<android.provider.SyncStateContract$Helpers: void update(android.content.ContentProviderClient,android.net.Uri,byte[])>
SINK|<com.android.internal.app.IBatteryStats$Stub$Proxy: void noteStartWakelock(int,int,java.lang.String,int)>
SINK|<com.android.internal.telephony.CallManager: boolean canConference(com.android.internal.telephony.Call)>
SINK|<android.inputmethodservice.Keyboard: void setVerticalGap(int)>
SINK|<android.widget.ListView: void setChoiceMode(int)>
SINK|<android.media.IAudioService$Stub$Proxy: void setStreamSolo(int,boolean,android.os.IBinder)>
SINK|<com.android.videoeditor.widgets.AudioTrackLinearLayout: void setSelected(boolean)>
SINK|<com.android.server.accessibility.ScreenMagnifier$Viewport: void setFrameShown(boolean,boolean)>
SINK|<android.widget.AutoCompleteTextView: void replaceText(java.lang.CharSequence)>
SINK|<java.util.BitSet: void set(int,boolean)>
SINK|<gov.nist.javax.sip.header.ErrorInfo: void setErrorMessage(java.lang.String)>
SINK|<android.filterfw.core.SimpleFrame: void setInts(int[])>
SINK|<com.android.mms.ui.SlideshowAttachmentView: void setVideoThumbnail(java.lang.String,android.graphics.Bitmap)>
SINK|<android.net.sip.SipProfile$Builder: android.net.sip.SipProfile$Builder setProtocol(java.lang.String)>
SINK|<com.android.server.usb.UsbDebuggingManager: void setAdbEnabled(boolean)>
SINK|<android.view.GLES20DisplayList: void setAnimationMatrix(android.graphics.Matrix)>
SINK|<android.widget.Spinner$DialogPopup: void setHorizontalOffset(int)>
SINK|<com.android.internal.widget.TransportControlView$IRemoteControlDisplayWeak: void setCurrentClientId(int,android.app.PendingIntent,boolean)>
SINK|<gov.nist.javax.sip.stack.TLSMessageChannel: void processMessage(gov.nist.javax.sip.message.SIPMessage)>
SINK|<org.apache.http.params.HttpProtocolParamBean: void setVersion(org.apache.http.HttpVersion)>
SINK|<com.android.server.wm.WindowManagerService: void setNewConfiguration(android.content.res.Configuration)>
SINK|<com.android.internal.telephony.ISms$Stub$Proxy: boolean disableCellBroadcast(int)>
SINK|<com.android.exchange.EasSyncService: void setupProtocolVersion(com.android.exchange.EasSyncService,org.apache.http.Header)>
SINK|<com.android.contacts.calllog.CallLogAdapter: void bindGroupView(android.view.View,android.content.Context,android.database.Cursor,int,boolean)>
SINK|<android.widget.RadioGroup: void setOnCheckedChangeListener(android.widget.RadioGroup$OnCheckedChangeListener)>
SINK|<android.widget.SlidingDrawer: void setOnDrawerScrollListener(android.widget.SlidingDrawer$OnDrawerScrollListener)>
SINK|<com.android.server.am.BroadcastQueue: boolean dumpLocked(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[],int,boolean,java.lang.String,boolean)>
SINK|<com.android.org.bouncycastle.asn1.ASN1OutputStream: void writeTag(int,int)>
SINK|<gov.nist.javax.sip.header.ims.PAccessNetworkInfo: void setUtranCellID3GPP(java.lang.String)>
SINK|<android.app.IAlarmManager$Stub$Proxy: void setRepeating(int,long,long,android.app.PendingIntent)>
SINK|<com.android.internal.policy.impl.keyguard.ClockView$AmPm: void setIsMorning(boolean)>
SINK|<android.widget.GridLayout: void setRowCount(int)>
SINK|<java.util.zip.Inflater: void setInput(byte[],int,int)>
SINK|<android.view.inputmethod.InputMethodManager: boolean setCurrentInputMethodSubtype(android.view.inputmethod.InputMethodSubtype)>
SINK|<com.android.mms.ui.SlideListItemView: void setVideo(java.lang.String,android.net.Uri)>
SINK|<com.android.server.InputMethodManagerService$InputMethodSettings: void putSelectedSubtype(int)>
SINK|<android.widget.RelativeLayout: void setGravity(int)>
SINK|<android.view.Window: void setGravity(int)>
SINK|<android.content.AbstractThreadedSyncAdapter$ISyncAdapterImpl: void initialize(android.accounts.Account,java.lang.String)>
SINK|<com.android.server.accessibility.ScreenMagnifier$MagnificationController: void setScaleAndMagnifiedRegionCenter(float,float,float,boolean)>
SINK|<android.hardware.Camera: void setParameters(android.hardware.Camera$Parameters)>
SINK|<android.accounts.IAccountManager$Stub$Proxy: void confirmCredentialsAsUser(android.accounts.IAccountManagerResponse,android.accounts.Account,android.os.Bundle,boolean,int)>
SINK|<android.os.storage.IMountService$Stub$Proxy: void registerListener(android.os.storage.IMountServiceListener)>
SINK|<org.apache.http.auth.AuthState: void setAuthScope(org.apache.http.auth.AuthScope)>
SINK|<android.app.ApplicationThreadProxy: void scheduleRegisteredReceiver(android.content.IIntentReceiver,android.content.Intent,int,java.lang.String,android.os.Bundle,boolean,boolean,int)>
SINK|<android.widget.Spinner: void setOnItemClickListener(android.widget.AdapterView$OnItemClickListener)>
SINK|<android.net.NetworkStatsHistory: void writeToStream(java.io.DataOutputStream)>
SINK|<android.preference.CheckBoxPreference: void setChecked(boolean)>
SINK|<com.android.internal.telephony.BaseCommands: void setOnSmsStatus(android.os.Handler,int,java.lang.Object)>
SINK|<com.android.server.TextServicesManagerService$TextServicesSettings: void putSelectedSpellChecker(java.lang.String)>
SINK|<com.android.internal.telephony.SMSDispatcher: void dispatch(android.content.Intent,java.lang.String)>
SINK|<android.view.IWindowManager$Stub$Proxy: void setAppWillBeHidden(android.os.IBinder)>
SINK|<android.app.ApplicationThreadProxy: void requestThumbnail(android.os.IBinder)>
SINK|<com.android.email.Preferences: void setEnableStrictMode(boolean)>
SINK|<java.text.DecimalFormatSymbols: void setPatternSeparator(char)>
SINK|<android.graphics.drawable.DrawableContainer: void setConstantState(android.graphics.drawable.DrawableContainer$DrawableContainerState)>
SINK|<android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateIcsImpl$1: void sendAccessibilityEvent(android.view.View,int)>
SINK|<android.support.v4.view.PagerAdapter: void setPrimaryItem(android.view.ViewGroup,int,java.lang.Object)>
SINK|<android.accessibilityservice.IAccessibilityServiceConnection$Stub$Proxy: float findAccessibilityNodeInfosByText(int,long,java.lang.String,int,android.view.accessibility.IAccessibilityInteractionConnectionCallback,long)>
SINK|<android.net.INetworkStatsSession$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>
SINK|<com.android.server.am.ActivityManagerService: boolean startInstrumentation(android.content.ComponentName,java.lang.String,int,android.os.Bundle,android.app.IInstrumentationWatcher,int)>
SINK|<org.apache.http.params.HttpProtocolParams: void setUnmappableInputAction(org.apache.http.params.HttpParams,java.nio.charset.CodingErrorAction)>
SINK|<android.app.admin.DevicePolicyManager: void setActivePasswordState(int,int,int,int,int,int,int,int,int)>
SINK|<android.view.IWindowManager$Stub$Proxy: void stopAppFreezingScreen(android.os.IBinder,boolean)>
SINK|<java.net.ProxySelector: void setDefault(java.net.ProxySelector)>
SINK|<android.support.v4.view.accessibility.AccessibilityNodeInfoCompatIcs: void setClassName(java.lang.Object,java.lang.CharSequence)>
SINK|<com.android.systemui.usb.UsbResolverActivity: void onIntentSelected(android.content.pm.ResolveInfo,android.content.Intent,boolean)>
SINK|<gov.nist.javax.sip.stack.SIPClientTransaction: void setState(javax.sip.TransactionState)>
SINK|<android.view.ViewGroup: void setPadding(int,int,int,int)>
SINK|<com.android.server.pm.UserManagerService: void userForeground(int)>
SINK|<com.android.email.activity.MoveMessageToDialog: com.android.email.activity.MoveMessageToDialog newInstance(long[],android.app.Fragment)>
SINK|<javax.xml.parsers.SAXParserFactory: void setXIncludeAware(boolean)>
SINK|<com.android.internal.widget.ILockSettings$Stub$Proxy: void setBoolean(java.lang.String,boolean,int)>
SINK|<com.android.email.activity.MailboxListItem: void setDropTargetBackground(boolean,long)>
SINK|<android.content.ContentService: void setIsSyncable(android.accounts.Account,java.lang.String,int)>
SINK|<java.util.concurrent.ThreadPoolExecutor: void beforeExecute(java.lang.Thread,java.lang.Runnable)>
SINK|<android.accessibilityservice.IAccessibilityServiceConnection$Stub$Proxy: boolean performAccessibilityAction(int,long,int,android.os.Bundle,int,android.view.accessibility.IAccessibilityInteractionConnectionCallback,long)>
SINK|<com.android.server.am.ActivityStack: void sendActivityResultLocked(int,com.android.server.am.ActivityRecord,java.lang.String,int,int,android.content.Intent)>
SINK|<com.android.internal.telephony.test.SimulatedCommands: void setCdmaBroadcastConfig(int[],android.os.Message)>
SINK|<com.android.browser.TabControl: boolean setCurrentTab(com.android.browser.Tab)>
SINK|<android.accounts.AccountAuthenticatorActivity: void sendBroadcast(android.content.Intent,java.lang.String)>
SINK|<android.widget.Spinner$DialogPopup: void setBackgroundDrawable(android.graphics.drawable.Drawable)>
SINK|<org.xml.sax.helpers.AttributesImpl: void setLocalName(int,java.lang.String)>
SINK|<android.app.INotificationManager$Stub$Proxy: void setNotificationsEnabledForPackage(java.lang.String,boolean)>
SINK|<com.android.internal.widget.ILockSettings$Stub$Proxy: void removeUser(int)>
SINK|<java.time.Year: java.lang.Object writeReplace()>
SINK|<android.hardware.Camera$Parameters: void setJpegThumbnailSize(int,int)>
SINK|<com.android.server.usb.UsbService: android.os.ParcelFileDescriptor openAccessory(android.hardware.usb.UsbAccessory)>
SINK|<android.preference.PreferenceActivity$Header: void writeToParcel(android.os.Parcel,int)>
SINK|<com.android.internal.widget.ActionBarView: void setLogo(int)>
SINK|<com.android.browser.BrowserSettings: void setLastRunPaused(boolean)>
SINK|<com.android.internal.telephony.gsm.GsmDataConnectionTracker: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
SINK|<android.test.mock.MockContentProvider: int update(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[])>
SINK|<gov.nist.javax.sip.address.TelephoneNumber: void setParm(java.lang.String,java.lang.Object)>
SINK|<com.android.mms.util.ImageCacheService: void putImageData(java.lang.String,int,byte[])>
SINK|<gov.nist.javax.sip.message.SIPMessage: void setCallId(java.lang.String)>
SINK|<com.google.android.picasasync.UploadTaskEntry: void setFingerprint(com.android.gallery3d.common.Fingerprint)>
SINK|<android.app.backup.RestoreSession$RestoreObserverWrapper: void restoreSetsAvailable(android.app.backup.RestoreSet[])>
SINK|<com.android.bluetooth.hfp.HeadsetService$BluetoothHeadsetBinder: boolean startVoiceRecognition(android.bluetooth.BluetoothDevice)>
SINK|<android.accounts.AccountManagerService$TestFeaturesSession: void onResult(android.os.Bundle)>
SINK|<com.android.server.input.InputManagerService: void setSystemUiVisibility(int)>
SINK|<com.android.browser.search.DefaultSearchEngine: void startSearch(android.content.Context,java.lang.String,android.os.Bundle,java.lang.String)>
SINK|<android.widget.AutoCompleteTextView: void setAdapter(android.widget.ListAdapter)>
SINK|<com.android.exchange.EasAccountService: com.android.exchange.EasResponse sendPing(byte[],int)>
SINK|<android.widget.SearchView: void setImeOptions(int)>
SINK|<com.android.internal.util.AsyncChannel: void sendMessage(int,java.lang.Object)>
SINK|<android.widget.AutoCompleteTextView: void setListSelection(int)>
SINK|<com.android.browser.homepages.Template: void assignLoop(java.lang.String,com.android.browser.homepages.Template$ListEntityIterator)>
SINK|<android.view.accessibility.AccessibilityEvent: void setEventType(int)>
SINK|<com.android.mms.ui.SlideView: void setVideo(java.lang.String,android.net.Uri)>
SINK|<com.google.android.gms.common.internal.IGmsCallbacks$Stub$Proxy: void onPostInitComplete(int,android.os.IBinder,android.os.Bundle)>
SINK|<com.android.server.pm.UserManagerService: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
SINK|<android.app.backup.RestoreSession$RestoreObserverWrapper: void restoreStarting(int)>
SINK|<android.media.AudioTrack: void setState(int)>
SINK|<org.xmlpull.v1.XmlPullParserFactory: void setValidating(boolean)>
SINK|<com.android.internal.logging.AndroidHandler: void publish(java.util.logging.LogRecord)>
SINK|<android.widget.TextView: void setTextAppearance(android.content.Context,int)>
SINK|<android.view.Window: void setAttributes(android.view.WindowManager$LayoutParams)>
SINK|<org.apache.http.impl.client.AbstractHttpClient: java.lang.Object execute(org.apache.http.client.methods.HttpUriRequest,org.apache.http.client.ResponseHandler)>
SINK|<com.android.calendar.CalendarController: void sendEventRelatedEventWithExtra(java.lang.Object,long,long,long,long,int,int,long,long)>
SINK|<com.android.internal.widget.TransportControlView$IRemoteControlDisplayWeak: void setArtwork(int,android.graphics.Bitmap)>
SINK|<com.android.internal.app.ActionBarImpl$TabImpl: android.app.ActionBar$Tab setText(int)>
SINK|<android.bluetooth.IBluetooth$Stub$Proxy: boolean setPasskey(android.bluetooth.BluetoothDevice,boolean,int,byte[])>
SINK|<com.android.bluetooth.opp.BluetoothOppUtility: void retryTransfer(android.content.Context,com.android.bluetooth.opp.BluetoothOppTransferInfo)>
SINK|<com.android.email.mail.store.Pop3Store$Pop3Message: void setSize(int)>
SINK|<android.net.wifi.WifiStateMachine: void sendBluetoothAdapterStateChange(int)>
SINK|<android.widget.TextView: void setTextScaleX(float)>
SINK|<com.android.gallery3d.exif.ExifTag: void setValue(int[])>
SINK|<android.os.Parcel: void setDataPosition(int)>
SINK|<android.os.INetworkManagementService$Stub$Proxy: void detachPppd(java.lang.String)>
SINK|<org.apache.harmony.xnet.provider.jsse.FileClientSessionCache: org.apache.harmony.xnet.provider.jsse.SSLClientSessionCache usingDirectory(java.io.File)>
SINK|<android.os.Handler: boolean sendMessageAtTime(android.os.Message,long)>
SINK|<com.android.emailcommon.internet.MimeBodyPart: void setHeader(java.lang.String,java.lang.String)>
SINK|<com.android.server.accessibility.ScreenMagnifier$MagnificationController: void setScale(float,float,float,boolean)>
SINK|<com.android.server.sip.SipHelper: javax.sip.ClientTransaction sendInvite(android.net.sip.SipProfile,android.net.sip.SipProfile,java.lang.String,java.lang.String,gov.nist.javax.sip.header.extensions.ReferredByHeader,java.lang.String)>
SINK|<android.view.IWindowManager$Stub$Proxy: void setEventDispatching(boolean)>
SINK|<android.widget.ListView: void setOverscrollFooter(android.graphics.drawable.Drawable)>
SINK|<java.nio.SocketChannelImpl$SocketChannelOutputStream: void write(byte[],int,int)>
SINK|<com.android.internal.telephony.gsm.GsmCallTracker: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
SINK|<com.android.server.NetworkManagementService: void enableIpv6(java.lang.String)>
SINK|<gov.nist.javax.sip.header.ims.PChargingVector: void setICID(java.lang.String)>
SINK|<android.widget.ImageView: void setColorFilter(android.graphics.ColorFilter)>
SINK|<com.android.email.activity.MailboxListFragment: void onCreate(android.os.Bundle)>
SINK|<android.test.AndroidTestRunner: void runTest(junit.framework.TestResult)>
SINK|<com.android.mms.transaction.ReadRecTransaction: byte[] sendPdu(byte[],java.lang.String)>
SINK|<com.android.videoeditor.VideoEditorBaseActivity$ServiceListener: boolean onMediaItemThumbnail(java.lang.String,java.lang.String,android.graphics.Bitmap,int,int,java.lang.Exception)>
SINK|<android.text.style.RelativeSizeSpan: void updateMeasureState(android.text.TextPaint)>
SINK|<java.util.concurrent.CompletableFuture: java.util.concurrent.CompletableFuture orRunStage(java.util.concurrent.Executor,java.util.concurrent.CompletionStage,java.lang.Runnable)>
SINK|<android.widget.OverScroller: void notifyVerticalEdgeReached(int,int,int)>
SINK|<android.preference.TwoStatePreference$SavedState: void writeToParcel(android.os.Parcel,int)>
SINK|<com.android.exchange.utility.CalendarUtilities: long createCalendar(com.android.exchange.EasSyncService,com.android.emailcommon.provider.Account,com.android.emailcommon.provider.Mailbox)>
SINK|<android.view.IWindowManager$Stub$Proxy: void prepareAppTransition(int,boolean)>
SINK|<com.android.internal.policy.impl.keyguard.KeyguardViewMediator: void setCurrentUser(int)>
SINK|<android.location.Criteria: void setCostAllowed(boolean)>
SINK|<android.media.IAudioService$Stub$Proxy: void registerRemoteVolumeObserverForRcc(int,android.media.IRemoteVolumeObserver)>
SINK|<com.android.server.LocationManagerService: boolean sendNiResponse(int,int)>
SINK|<android.net.wifi.WifiStateMachine$DriverStartedState: boolean processMessage(android.os.Message)>
SINK|<com.android.launcher2.CellLayout$LayoutParams: void setup(int,int,int,int)>
SINK|<com.android.gallery3d.app.GalleryActionBar: void setTitle(java.lang.String)>
SINK|<android.widget.ImageView: void setMaxHeight(int)>
SINK|<android.graphics.drawable.LayerDrawable: boolean setVisible(boolean,boolean)>
SINK|<com.android.server.wm.WindowManagerService: void updateWallpaperOffsetLocked(com.android.server.wm.WindowState,boolean)>
SINK|<java.util.Calendar: void set(int,int,int,int,int,int)>
SINK|<java.text.DecimalFormatSymbols: void setZeroDigit(char)>
SINK|<com.android.internal.view.menu.ActionMenuItem: android.view.MenuItem setVisible(boolean)>
SINK|<com.android.internal.telephony.test.SimulatedCommands: void setCdmaRoamingPreference(int,android.os.Message)>
SINK|<android.database.sqlite.SQLiteDatabase: void setVersion(int)>
SINK|<com.android.internal.widget.ILockSettings$Stub$Proxy: boolean havePassword(int)>
SINK|<com.android.server.power.PowerManagerService: void setTemporaryScreenBrightnessSettingOverride(int)>
SINK|<android.os.Bundle: void putIntegerArrayList(java.lang.String,java.util.ArrayList)>
SINK|<android.widget.AbsListView: void setTextFilterEnabled(boolean)>
SINK|<gov.nist.javax.sip.header.ParametersHeader: void setParameter(java.lang.String,java.lang.Object)>
SINK|<com.android.contacts.test.InjectedServices: void setSystemService(java.lang.String,java.lang.Object)>
SINK|<android.accounts.IAccountManager$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>
SINK|<com.android.internal.telephony.PhoneBase: void setTTYMode(int,android.os.Message)>
SINK|<android.os.Bundle: void putStringArrayList(java.lang.String,java.util.ArrayList)>
SINK|<com.google.android.apps.lightcycle.panorama.LightCycleView: void requestPhoto(float[],int,int)>
SINK|<com.android.browser.Controller$SaveSnapshotTask: void onPostExecute(java.lang.Long)>
SINK|<java.nio.ServerSocketChannelImpl$ServerSocketAdapter: void bind(java.net.SocketAddress,int)>
SINK|<android.view.inputmethod.EditorInfo: void dump(android.util.Printer,java.lang.String)>
SINK|<com.android.internal.telephony.PhoneBase: void setBandMode(int,android.os.Message)>
SINK|<java.io.RandomAccessFile: void write(byte[])>
SINK|<com.android.gallery3d.ui.SlotView: void setCenterIndex(int)>
SINK|<java.time.Duration: java.time.Duration parse(java.lang.CharSequence)>
SINK|<android.media.AudioManager: void setRemoteSubmixOn(boolean,int)>
SINK|<android.webkit.WebView: void saveWebArchive(java.lang.String,boolean,android.webkit.ValueCallback)>
SINK|<android.util.Patterns: java.lang.String concatGroups(java.util.regex.Matcher)>
SINK|<android.graphics.Paint: void set(android.graphics.Paint)>
SINK|<com.android.inputmethod.latin.LatinIME$BatchInputUpdater: boolean handleMessage(android.os.Message)>
SINK|<android.widget.TabWidget: void setEnabled(boolean)>
SINK|<com.google.android.mms.pdu.NotificationInd: void setMessageClass(byte[])>
SINK|<com.android.phone.TelephonyDebugService: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
SINK|<com.android.internal.telephony.gsm.GsmDataConnectionTracker: void onDataSetupComplete(android.os.AsyncResult)>
SINK|<android.widget.SeekBar: void setOnSeekBarChangeListener(android.widget.SeekBar$OnSeekBarChangeListener)>
SINK|<android.app.Activity: void setResult(int)>
SINK|<android.view.Surface: void setCompatibilityTranslator(android.content.res.CompatibilityInfo$Translator)>
SINK|<android.content.pm.IPackageManager$Stub$Proxy: void deletePackage(java.lang.String,android.content.pm.IPackageDeleteObserver,int)>
SINK|<com.android.contacts.model.RawContact: void setAccount(com.android.contacts.model.account.AccountWithDataSet)>
SINK|<com.android.camera.ui.RotateLayout: void setOrientation(int,boolean)>
SINK|<android.preference.Preference: void setWidgetLayoutResource(int)>
SINK|<com.android.email.Preferences: void setInhibitGraphicsAcceleration(boolean)>
SINK|<android.text.ClipboardManager: void setText(java.lang.CharSequence)>
SINK|<com.android.emailcommon.service.IAccountService$Stub$Proxy: void notifyLoginSucceeded(long)>
SINK|<com.android.internal.textservice.ITextServicesManager$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>
SINK|<android.app.DownloadManager$Request: android.app.DownloadManager$Request setDestinationInExternalPublicDir(java.lang.String,java.lang.String)>
SINK|<android.view.accessibility.AccessibilityNodeInfo: boolean performAction(int)>
SINK|<com.android.emailcommon.mail.Message: boolean isMimeType(java.lang.String)>
SINK|<android.app.admin.DevicePolicyManager: void setPasswordMinimumNumeric(android.content.ComponentName,int)>
SINK|<android.graphics.drawable.NinePatchDrawable: void setColorFilter(android.graphics.ColorFilter)>
SINK|<android.media.audiofx.EnvironmentalReverb: void setReverbLevel(short)>
SINK|<android.accounts.IAccountManager$Stub$Proxy: void hasFeatures(android.accounts.IAccountManagerResponse,android.accounts.Account,java.lang.String[])>
SINK|<com.android.internal.widget.PasswordEntryKeyboardHelper: void sendDownUpKeyEvents(int)>
SINK|<com.android.systemui.statusbar.phone.PhoneStatusBar$FastColorDrawable: void setAlpha(int)>
SINK|<com.android.systemui.statusbar.policy.NotificationRowLayout: boolean setUserLockedChild(android.view.View,boolean)>
SINK|<java.beans.PropertyChangeEvent: void setPropagationId(java.lang.Object)>
SINK|<com.android.server.ClipboardService: void setPrimaryClip(android.content.ClipData)>
SINK|<android.widget.LinearLayout: void setGravity(int)>
SINK|<com.android.calendar.SearchActivity: boolean onQueryTextSubmit(java.lang.String)>
SINK|<com.android.internal.telephony.RIL: void setNetworkSelectionModeAutomatic(android.os.Message)>
SINK|<java.security.cert.PKIXRevocationChecker: void setOcspResponderCert(java.security.cert.X509Certificate)>
SINK|<android.graphics.drawable.GradientDrawable: void setColor(int)>
SINK|<com.android.deskclock.timer.TimerFragment: void setLabel(com.android.deskclock.timer.TimerObj,java.lang.String)>
SINK|<android.app.ActivityManagerProxy: void registerUserSwitchObserver(android.app.IUserSwitchObserver)>
SINK|<android.media.AudioService$VolumeStreamState: void setLastAudibleIndex(int,int)>
SINK|<android.webkit.Plugin: void setName(java.lang.String)>
SINK|<android.content.res.AssetManager: android.content.res.XmlResourceParser openXmlResourceParser(int,java.lang.String)>
SINK|<android.app.IActivityController$Stub$Proxy: boolean activityStarting(android.content.Intent,java.lang.String)>
SINK|<com.android.mms.ui.SlideView: void setImageRegion(int,int,int,int)>
SINK|<android.widget.TextView: void setTextSize(int,float)>
SINK|<com.android.server.sip.SipHelper: javax.sip.ClientTransaction sendOptions(android.net.sip.SipProfile,android.net.sip.SipProfile,java.lang.String)>
SINK|<android.os.StrictMode$AndroidBlockGuardPolicy: void handleViolation(android.os.StrictMode$ViolationInfo)>
SINK|<android.location.LocationManager: boolean addGpsStatusListener(android.location.GpsStatus$Listener)>
SINK|<android.content.IntentSender: void writeIntentSenderOrNullToParcel(android.content.IntentSender,android.os.Parcel)>
SINK|<com.android.server.pm.UserManagerService: void finishRemoveUser(int)>
SINK|<com.android.server.LocationManagerService: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
SINK|<org.apache.http.impl.cookie.RFC2965PortAttributeHandler: void parse(org.apache.http.cookie.SetCookie,java.lang.String)>
SINK|<java.nio.LongBuffer: java.nio.LongBuffer put(long[],int,int)>
SINK|<android.net.CaptivePortalTracker$ActiveNetworkState: boolean processMessage(android.os.Message)>
SINK|<android.net.wifi.p2p.nsd.WifiP2pServiceResponse: void writeToParcel(android.os.Parcel,int)>
SINK|<android.animation.PropertyValuesHolder: void setFloatValues(float[])>
SINK|<com.adobe.xmp.impl.XMPMetaImpl: void setNode(com.adobe.xmp.impl.XMPNode,java.lang.Object,com.adobe.xmp.options.PropertyOptions,boolean)>
SINK|<java.time.chrono.HijrahChronology: int[] parseYMD(java.lang.String)>
SINK|<com.android.internal.appwidget.IAppWidgetService$Stub$Proxy: void bindAppWidgetId(int,android.content.ComponentName,android.os.Bundle)>
SINK|<android.filterfw.core.ShaderProgram: void setHostValue(java.lang.String,java.lang.Object)>
SINK|<android.bluetooth.BluetoothHeadset: boolean startVoiceRecognition(android.bluetooth.BluetoothDevice)>
SINK|<android.hardware.input.IInputManager$Stub$Proxy: void registerInputDevicesChangedListener(android.hardware.input.IInputDevicesChangedListener)>
SINK|<com.android.emailcommon.service.IEmailService$Stub$Proxy: boolean renameFolder(long,java.lang.String,java.lang.String)>
SINK|<android.widget.RemoteViews: void setRelativeScrollPosition(int,int)>
SINK|<libcore.io.DropBox$DefaultReporter: void addText(java.lang.String,java.lang.String)>
SINK|<com.android.email.activity.MessageListFragment: boolean onItemLongClick(android.widget.AdapterView,android.view.View,int,long)>
SINK|<com.google.android.mms.pdu.NotifyRespInd: void setReportAllowed(int)>
SINK|<android.filterfw.core.SimpleFrame: void setFloats(float[])>
SINK|<android.nfc.NfcAdapter: void setNdefPushMessage(android.nfc.NdefMessage,android.app.Activity,android.app.Activity[])>
SINK|<libcore.icu.CollationElementIteratorICU: void setText(java.lang.String)>
SINK|<com.android.internal.appwidget.IAppWidgetService$Stub$Proxy: boolean hasBindAppWidgetPermission(java.lang.String)>
SINK|<android.webkit.WebSettingsClassic: void setUserAgent(int)>
SINK|<android.widget.RemoteViews$BitmapReflectionAction: void setBitmapCache(android.widget.RemoteViews$BitmapCache)>
SINK|<com.android.internal.telephony.sip.SipPhoneBase: void setCallWaiting(boolean,android.os.Message)>
SINK|<com.android.server.wm.WindowManagerService: boolean updateRotationUncheckedLocked(boolean)>
SINK|<com.android.server.EventLogTags: void writeBootProgressPmsStart(long)>
SINK|<java.net.URLConnection: void setRequestProperty(java.lang.String,java.lang.String)>
SINK|<android.widget.SlidingDrawer: void setOnDrawerOpenListener(android.widget.SlidingDrawer$OnDrawerOpenListener)>
SINK|<com.android.internal.telephony.BaseCommands: void setOnIccRefresh(android.os.Handler,int,java.lang.Object)>
SINK|<org.xml.sax.ext.Locator2Impl: void setXMLVersion(java.lang.String)>
SINK|<android.accounts.AccountManager: boolean addAccountExplicitly(android.accounts.Account,java.lang.String,android.os.Bundle)>
SINK|<android.app.ActivityManager: void setFrontActivityScreenCompatMode(int)>
SINK|<android.view.animation.Animation: void setRepeatMode(int)>
SINK|<com.android.email.RefreshManager$ControllerResult: void updateMailboxCallback(com.android.emailcommon.mail.MessagingException,long,long,int,int,java.util.ArrayList)>
SINK|<android.media.ExifInterface: void setAttribute(java.lang.String,java.lang.String)>
SINK|<android.location.GpsStatus: void setStatus(android.location.GpsStatus)>
SINK|<android.text.format.Time: void set(int,int,int,int,int,int)>
SINK|<com.android.email.service.EmailServiceUtils$NullEmailService: void sendMeetingResponse(long,int)>
SINK|<com.android.internal.telephony.RIL: void acknowledgeIncomingGsmSmsWithPdu(boolean,java.lang.String,android.os.Message)>
SINK|<com.android.browser.NavigationBarTablet: void setTitleBar(com.android.browser.TitleBar)>
SINK|<org.apache.http.impl.cookie.BasicExpiresHandler: void parse(org.apache.http.cookie.SetCookie,java.lang.String)>
SINK|<java.util.logging.Handler: void setErrorManager(java.util.logging.ErrorManager)>
SINK|<com.android.server.NsdService$NsdStateMachine$DefaultState: boolean processMessage(android.os.Message)>
SINK|<com.android.internal.telephony.gsm.GsmSMSDispatcher: int dispatchMessage(com.android.internal.telephony.SmsMessageBase)>
SINK|<com.google.android.mms.pdu.RetrieveConf: void setRetrieveText(com.google.android.mms.pdu.EncodedStringValue)>
SINK|<com.android.internal.telephony.cat.Menu: void writeToParcel(android.os.Parcel,int)>
SINK|<android.support.v4.view.AccessibilityDelegateCompatJellyBean$1: void sendAccessibilityEvent(android.view.View,int)>
SINK|<java.util.concurrent.atomic.AtomicStampedReference: void set(java.lang.Object,int)>
SINK|<com.android.browser.TitleBar: void updateAutoLogin(com.android.browser.Tab,boolean)>
SINK|<android.media.MediaRecorder: void setOnErrorListener(android.media.MediaRecorder$OnErrorListener)>
SINK|<org.json.JSONArray: org.json.JSONArray put(int,boolean)>
SINK|<org.apache.http.params.HttpProtocolParamBean: void setUserAgent(java.lang.String)>
SINK|<com.android.internal.widget.SlidingTab: void setLeftHintText(int)>
SINK|<com.android.camera.EffectsRecorder: void setOutputFile(java.io.FileDescriptor)>
SINK|<java.nio.channels.AsynchronousServerSocketChannel: java.nio.channels.NetworkChannel setOption(java.net.SocketOption,java.lang.Object)>
SINK|<com.android.server.DevicePolicyManagerService: void setPasswordMinimumNumeric(android.content.ComponentName,int,int)>
SINK|<android.webkit.WebSettingsClassic: void setDefaultFixedFontSize(int)>
SINK|<android.net.sip.SimpleSessionDescription$Media: void setRtpPayload(int,java.lang.String,java.lang.String)>
SINK|<android.filterfw.core.KeyValueMap: void setKeyValues(java.lang.Object[])>
SINK|<android.net.wifi.WifiWatchdogStateMachine$BssidStatistics: void updateLoss(int,double,int)>
SINK|<android.app.ContextImpl: android.content.ComponentName startServiceAsUser(android.content.Intent,android.os.UserHandle)>
SINK|<android.content.ContentResolver: void setSyncAutomatically(android.accounts.Account,java.lang.String,boolean)>
SINK|<android.net.IConnectivityManager$Stub$Proxy: int startUsingNetworkFeature(int,java.lang.String,android.os.IBinder)>
SINK|<com.android.internal.view.menu.MenuBuilder: void setGroupCheckable(int,boolean,boolean)>
SINK|<android.media.MediaPlayer: void setOnBufferingUpdateListener(android.media.MediaPlayer$OnBufferingUpdateListener)>
SINK|<com.android.server.am.ActivityStack: boolean realStartActivityLocked(com.android.server.am.ActivityRecord,com.android.server.am.ProcessRecord,boolean,boolean)>
SINK|<java.util.Collections$SynchronizedList: java.lang.Object set(int,java.lang.Object)>
SINK|<java.util.TimeZone: void setDefault(java.util.TimeZone)>
SINK|<android.location.IGpsStatusProvider$Stub$Proxy: void removeGpsStatusListener(android.location.IGpsStatusListener)>
SINK|<android.os.Debug: void setFieldsOn(java.lang.Class)>
SINK|<com.android.calendar.Utils: void setSharedPreference(android.content.Context,java.lang.String,java.lang.String)>
SINK|<android.content.res.AssetManager: java.io.InputStream open(java.lang.String,int)>
SINK|<android.content.IContentService$Stub$Proxy: void setSyncAutomatically(android.accounts.Account,java.lang.String,boolean)>
SINK|<com.android.internal.widget.ActionBarView: void setMenu(android.view.Menu,com.android.internal.view.menu.MenuPresenter$Callback)>
SINK|<com.android.internal.telephony.test.SimulatedCommands: void setCLIR(int,android.os.Message)>
SINK|<android.app.Dialog: void setOnDismissListener(android.content.DialogInterface$OnDismissListener)>
SINK|<android.net.UrlQuerySanitizer: void parseUrl(java.lang.String)>
SINK|<javax.obex.ClientOperation: void sendHeaders(javax.obex.HeaderSet)>
SINK|<java.net.URL: void set(java.lang.String,java.lang.String,int,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>
SINK|<android.media.audiofx.AudioEffect: void setEnableStatusListener(android.media.audiofx.AudioEffect$OnEnableStatusChangeListener)>
SINK|<com.android.server.pm.PreferredIntentResolver: void dumpFilter(java.io.PrintWriter,java.lang.String,com.android.server.pm.PreferredActivity)>
SINK|<com.android.contacts.editor.StructuredNameEditorView: void setValues(com.android.contacts.model.dataitem.DataKind,com.android.contacts.model.RawContactDelta$ValuesDelta,com.android.contacts.model.RawContactDelta,boolean,com.android.contacts.editor.ViewIdGenerator)>
SINK|<com.android.server.wm.BlackFrame: void setMatrix(android.graphics.Matrix)>
SINK|<android.view.animation.AnimationSet: void setFillBefore(boolean)>
SINK|<org.apache.http.message.BasicHeaderValueParser: org.apache.http.HeaderElement[] parseElements(org.apache.http.util.CharArrayBuffer,org.apache.http.message.ParserCursor)>
SINK|<com.android.server.pm.PackageManagerService: void setInstallerPackageName(java.lang.String,java.lang.String)>
SINK|<android.net.IConnectivityManager$Stub$Proxy: boolean prepareVpn(java.lang.String,java.lang.String)>
SINK|<android.widget.AbsSpinner: void setAdapter(android.widget.SpinnerAdapter)>
SINK|<com.android.email.Controller$LegacyListener: void synchronizeMailboxStarted(long,long)>
SINK|<com.android.server.LocationManagerService$Receiver: boolean callLocationChangedLocked(android.location.Location)>
SINK|<android.widget.RemoteViews: void setEmptyView(int,int)>
SINK|<org.apache.http.entity.BasicHttpEntity: void setContentLength(long)>
SINK|<com.android.internal.widget.TransportControlView$IRemoteControlDisplayWeak: void setAllMetadata(int,android.os.Bundle,android.graphics.Bitmap)>
SINK|<org.apache.http.impl.cookie.BasicClientCookie: void setSecure(boolean)>
SINK|<com.android.systemui.statusbar.phone.NavigationBarView: void setNavigationIconHints(int)>
SINK|<android.util.LongSparseArray: void append(long,java.lang.Object)>
SINK|<com.android.server.NetworkManagementService: void setDefaultInterfaceForDns(java.lang.String)>
SINK|<com.google.common.collect.AbstractMultimap$WrappedList$WrappedListIterator: void set(java.lang.Object)>
SINK|<android.net.wifi.WifiNative: boolean setScanMode(boolean)>
SINK|<com.android.internal.telephony.sip.SipPhone$SipCall: void setMute(boolean)>
SINK|<com.android.gallery3d.ui.GLCanvasImpl: void drawTexture(com.android.gallery3d.ui.BasicTexture,float[],int,int,int,int)>
SINK|<java.io.ObjectOutputStream: void write(int)>
SINK|<gov.nist.javax.sip.stack.SIPServerTransaction: void processRequest(gov.nist.javax.sip.message.SIPRequest,gov.nist.javax.sip.stack.MessageChannel)>
SINK|<android.media.IRemoteVolumeObserver$Stub$Proxy: void dispatchRemoteVolumeUpdate(int,int)>
SINK|<android.widget.ActivityChooserView: void setActivityChooserModel(android.widget.ActivityChooserModel)>
SINK|<android.bluetooth.IBluetooth$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>
SINK|<com.android.server.am.ActivityManagerService: boolean dumpProcessesLocked(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[],int,boolean,java.lang.String)>
SINK|<com.android.gallery3d.settings.GallerySettings: void addAccount(android.app.Activity,boolean)>
SINK|<com.android.camera.CameraManager$CameraProxy: void setPreviewTextureAsync(android.graphics.SurfaceTexture)>
SINK|<org.apache.http.message.AbstractHttpMessage: void setHeaders(org.apache.http.Header[])>
SINK|<libcore.net.http.HttpsURLConnectionImpl: void setDoOutput(boolean)>
SINK|<android.view.ViewRootImpl: boolean performHapticFeedback(int,boolean)>
SINK|<android.os.storage.IMountService$Stub$Proxy: int changeEncryptionPassword(java.lang.String)>
SINK|<android.graphics.drawable.Drawable: boolean setVisible(boolean,boolean)>
SINK|<android.content.pm.PackageItemInfo: void dumpFront(android.util.Printer,java.lang.String)>
SINK|<android.net.wifi.WifiNative: boolean setDeviceType(java.lang.String)>
SINK|<android.widget.TextView: void setText(char[],int,int)>
SINK|<java.time.ZoneId: java.lang.Object writeReplace()>
SINK|<android.content.ISyncStatusObserver$Stub$Proxy: void onStatusChanged(int)>
SINK|<android.widget.TableLayout: void setColumnShrinkable(int,boolean)>
SINK|<android.net.sip.SipAudioCall: void sendDtmf(int,android.os.Message)>
SINK|<com.android.ex.chips.RecipientEditTextView: boolean onTouchEvent(android.view.MotionEvent)>
SINK|<com.android.internal.telephony.sip.SipCommandInterface: void setNetworkSelectionModeManual(java.lang.String,android.os.Message)>
SINK|<javax.xml.transform.sax.SAXSource: void setXMLReader(org.xml.sax.XMLReader)>
SINK|<android.app.AlertDialog: void setButton(java.lang.CharSequence,android.os.Message)>
SINK|<com.android.mms.ui.BasicSlideEditorView: void setImageVisibility(boolean)>
SINK|<com.android.internal.telephony.IntRangeManager: boolean disableRange(int,int,java.lang.String)>
SINK|<org.ccil.cowan.tagsoup.AttributesImpl: void setQName(int,java.lang.String)>
SINK|<com.android.internal.appwidget.IAppWidgetService$Stub$Proxy: void updateAppWidgetIds(int[],android.widget.RemoteViews)>
SINK|<javax.xml.datatype.XMLGregorianCalendar: void setTime(int,int,int,int)>
SINK|<android.media.AudioService: void setPlaybackInfoForRcc(int,int,int)>
SINK|<android.widget.RemoteViews: void setTextViewCompoundDrawablesRelative(int,int,int,int,int)>
SINK|<android.content.SearchRecentSuggestionsProvider: void setupSuggestions(java.lang.String,int)>
SINK|<android.location.ILocationManager$Stub$Proxy: void removeGeofence(android.location.Geofence,android.app.PendingIntent,java.lang.String)>
SINK|<org.apache.http.impl.SocketHttpClientConnection: void setSocketTimeout(int)>
SINK|<android.util.Slog: int w(java.lang.String,java.lang.String)>
SINK|<android.content.pm.ResolveInfo: void writeToParcel(android.os.Parcel,int)>
SINK|<android.app.ApplicationThreadProxy: void dumpProvider(java.io.FileDescriptor,android.os.IBinder,java.lang.String[])>
SINK|<android.app.admin.IDevicePolicyManager$Stub$Proxy: void setPasswordMinimumSymbols(android.content.ComponentName,int,int)>
SINK|<java.nio.PipeImpl$PipeSinkChannel: int write(java.nio.ByteBuffer)>
SINK|<android.inputmethodservice.ExtractEditLayout$ExtractActionMode: void setTitle(int)>
SINK|<android.view.View: void setNextFocusLeftId(int)>
SINK|<com.android.email.MessagingController: void loadMessageForView(long,com.android.email.MessagingListener)>
SINK|<com.android.email.activity.MessageListFragment$1: void setField(long,boolean)>
SINK|<android.content.pm.IPackageManager$Stub$Proxy: void setApplicationEnabledSetting(java.lang.String,int,int,int)>
SINK|<java.net.Socket: void setOOBInline(boolean)>
SINK|<java.nio.file.Files: java.nio.file.Path write(java.nio.file.Path,byte[],java.nio.file.OpenOption[])>
SINK|<com.android.browser.LogTag: void logBookmarkAdded(java.lang.String,java.lang.String)>
SINK|<com.android.contacts.PhoneCallDetailsHelper: void setCurrentTimeForTest(long)>
SINK|<android.util.TypedValue: void setTo(android.util.TypedValue)>
SINK|<com.android.emailcommon.service.IEmailService$Stub$Proxy: void deleteAccountPIMData(long)>
SINK|<com.android.server.input.InputManagerService: void setCurrentKeyboardLayoutForInputDevice(java.lang.String,java.lang.String)>
SINK|<com.android.gallery3d.filtershow.imageshow.ImageSlave: void setCurrentFilter(com.android.gallery3d.filtershow.filters.ImageFilter)>
SINK|<com.android.calendar.event.AttendeesView: void onClick(android.view.View)>
SINK|<com.android.server.DevicePolicyManagerService: void setExpirationAlarmCheckLocked(android.content.Context,com.android.server.DevicePolicyManagerService$DevicePolicyData)>
SINK|<android.net.sip.ISipSession$Stub$Proxy: void makeCall(android.net.sip.SipProfile,java.lang.String,int)>
SINK|<com.google.android.mms.pdu.ReadOrigInd: void setMessageId(byte[])>
SINK|<android.app.IAlarmManager$Stub$Proxy: void set(int,long,android.app.PendingIntent)>
SINK|<android.animation.AnimatorSet: void setTarget(java.lang.Object)>
SINK|<com.android.server.pm.PackageManagerService$PackageRemovedInfo: void sendBroadcast(boolean,boolean,boolean)>
SINK|<java.util.concurrent.ConcurrentHashMap: void setEntryAt(java.util.concurrent.ConcurrentHashMap$HashEntry[],int,java.util.concurrent.ConcurrentHashMap$HashEntry)>
SINK|<libcore.net.http.HttpsURLConnectionImpl: void setFixedLengthStreamingMode(int)>
SINK|<android.net.http.RequestHandle: void setupDigestAuthResponse(boolean,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>
SINK|<android.graphics.Paint: void setStyle(android.graphics.Paint$Style)>
SINK|<android.view.ViewGroup: void setPersistentDrawingCache(int)>
SINK|<android.support.v4.view.accessibility.AccessibilityNodeInfoCompat: void setBoundsInScreen(android.graphics.Rect)>
SINK|<com.android.server.am.ActivityRecord: void dump(java.io.PrintWriter,java.lang.String)>
SINK|<android.content.ISyncAdapter$Stub$Proxy: void cancelSync(android.content.ISyncContext)>
SINK|<com.android.launcher2.CellLayout: void setChildrenDrawingCacheEnabled(boolean)>
SINK|<com.android.providers.contacts.VoicemailContentTable: android.os.ParcelFileDescriptor openFile(com.android.providers.contacts.VoicemailContentProvider$UriData,java.lang.String)>
SINK|<com.android.internal.telephony.cat.GetInkeyInputResponseData: void format(java.io.ByteArrayOutputStream)>
SINK|<gov.nist.javax.sip.header.extensions.SessionExpires: void setRefresher(java.lang.String)>
SINK|<com.android.videoeditor.service.ApiService: void exportVideoEditor(android.content.Context,java.lang.String,java.lang.String,int,int)>
SINK|<android.graphics.drawable.GradientDrawable: void setStroke(int,int)>
SINK|<android.view.inputmethod.BaseInputConnection: boolean sendKeyEvent(android.view.KeyEvent)>
SINK|<org.apache.http.impl.conn.AbstractClientConnAdapter: void sendRequestHeader(org.apache.http.HttpRequest)>
SINK|<android.view.View$10: void setValue(android.view.View,float)>
SINK|<com.android.server.pm.PackageManagerService$ActivityIntentResolver: void addActivity(android.content.pm.PackageParser$Activity,java.lang.String)>
SINK|<com.android.server.EventLogTags: void writeBackupTransportFailure(java.lang.String)>
SINK|<android.content.IContentService$Stub$Proxy: void setIsSyncable(android.accounts.Account,java.lang.String,int)>
SINK|<android.widget.TextView: void setLineSpacing(float,float)>
SINK|<android.net.sip.SimpleSessionDescription$Fields: void access$200(android.net.sip.SimpleSessionDescription$Fields,java.lang.StringBuilder)>
SINK|<com.android.internal.telephony.RIL: void switchWaitingOrHoldingAndActive(android.os.Message)>
SINK|<java.lang.Float: float parseFloat(java.lang.String)>
SINK|<android.app.ApplicationThreadProxy: void dumpActivity(java.io.FileDescriptor,android.os.IBinder,java.lang.String,java.lang.String[])>
SINK|<com.android.launcher2.Workspace: void onDrop(com.android.launcher2.DropTarget$DragObject)>
SINK|<android.media.IRemoteControlClient$Stub$Proxy: void setCurrentClientGenerationId(int)>
SINK|<android.util.SparseIntArray: void append(int,int)>
SINK|<com.android.exchange.adapter.ContactsSyncAdapter$ContactOperations: void newContact(java.lang.String)>
SINK|<com.android.systemui.recent.RecentsVerticalScrollView: void setMinSwipeAlpha(float)>
SINK|<com.android.gallery3d.filtershow.imageshow.ImageRotate: void setActionMove(float,float)>
SINK|<com.android.internal.app.IUsageStats$Stub$Proxy: void noteLaunchTime(android.content.ComponentName,int)>
SINK|<android.webkit.FindActionModeCallback: void setText(java.lang.String)>
SINK|<android.support.v4.view.accessibility.AccessibilityNodeInfoCompatIcs: void setEnabled(java.lang.Object,boolean)>
SINK|<android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoJellybeanImpl: void setSource(java.lang.Object,android.view.View,int)>
SINK|<android.view.animation.LayoutAnimationController: void setDelay(float)>
SINK|<com.android.internal.appwidget.IAppWidgetService$Stub$Proxy: void setBindAppWidgetPermission(java.lang.String,boolean)>
SINK|<android.text.method.QwertyKeyListener: void markAsReplaced(android.text.Spannable,int,int,java.lang.String)>
SINK|<com.android.contacts.list.PostalAddressListAdapter: void bindView(android.view.View,int,android.database.Cursor,int)>
SINK|<com.android.internal.telephony.cdma.CDMAPhone: void setOnPostDialCharacter(android.os.Handler,int,java.lang.Object)>
SINK|<java.lang.Byte: byte parseByte(java.lang.String)>
SINK|<libcore.net.http.RequestHeaders: void setIfModifiedSince(java.util.Date)>
SINK|<java.lang.ClassLoader: void setSigners(java.lang.Class,java.lang.Object[])>
SINK|<com.android.providers.calendar.CalendarCache: void writeTimezoneInstances(java.lang.String)>
SINK|<android.webkit.WebSettings: void setLoadWithOverviewMode(boolean)>
SINK|<android.webkit.WebViewClassic: void saveWebArchive(java.lang.String)>
SINK|<android.support.v4.widget.EdgeEffectCompat$BaseEdgeEffectImpl: void setSize(java.lang.Object,int,int)>
SINK|<com.android.inputmethod.latin.ExpandableBinaryDictionary: void setBigram(java.lang.String,java.lang.String,int)>
SINK|<com.android.internal.os.IDropBoxManagerService$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>
SINK|<gov.nist.javax.sip.header.Accept: void setQValue(float)>
SINK|<com.android.nfc.NfcService: void sendMockNdefTag(android.nfc.NdefMessage)>
SINK|<android.net.sip.SipManager: android.content.Intent createIncomingCallBroadcast(java.lang.String,java.lang.String)>
SINK|<android.service.wallpaper.IWallpaperEngine$Stub$Proxy: void dispatchWallpaperCommand(java.lang.String,int,int,int,android.os.Bundle)>
SINK|<java.util.Calendar: void set(int,int,int,int,int)>
SINK|<android.filterfw.core.ShaderProgram: void setSourceRect(float,float,float,float)>
SINK|<android.view.View: void dispatchAttachedToWindow(android.view.View$AttachInfo,int)>
SINK|<org.apache.http.client.params.HttpClientParams: void setCookiePolicy(org.apache.http.params.HttpParams,java.lang.String)>
SINK|<android.net.InterfaceConfiguration: void writeToParcel(android.os.Parcel,int)>
SINK|<com.android.server.wm.InputMonitor: void updateInputWindowsLw(boolean)>
SINK|<java.net.DatagramSocket: void send(java.net.DatagramPacket)>
SINK|<android.media.AudioManager: void setWiredHeadsetOn(boolean)>
SINK|<com.android.server.TelephonyRegistry: void notifyDataConnectionFailed(java.lang.String,java.lang.String)>
SINK|<java.io.DataOutputStream: void writeDouble(double)>
SINK|<gov.nist.javax.sip.header.SIPIfMatch: void setValue(java.lang.String)>
SINK|<org.apache.http.impl.AbstractHttpServerConnection: void sendResponseEntity(org.apache.http.HttpResponse)>
SINK|<java.time.format.DateTimeFormatterBuilder: java.time.format.DateTimeFormatterBuilder parseDefaulting(java.time.temporal.TemporalField,long)>
SINK|<com.android.server.InputMethodManagerService: void setAdditionalInputMethodSubtypes(java.lang.String,android.view.inputmethod.InputMethodSubtype[])>
SINK|<android.widget.HorizontalScrollView: void setSmoothScrollingEnabled(boolean)>
SINK|<com.android.email.activity.setup.AccountSecurity$PasswordExpirationDialog: com.android.email.activity.setup.AccountSecurity$PasswordExpirationDialog newInstance(java.lang.String,boolean)>
SINK|<com.android.server.pm.Settings: com.android.server.pm.SharedUserSetting addSharedUserLPw(java.lang.String,int,int)>
SINK|<android.webkit.CallbackProxy: void onGeolocationPermissionsShowPrompt(java.lang.String,android.webkit.GeolocationPermissions$Callback)>
SINK|<android.accounts.AccountAuthenticatorCache$MySerializer: void writeAsXml(java.lang.Object,org.xmlpull.v1.XmlSerializer)>
SINK|<java.util.zip.ZipOutputStream: void write(byte[],int,int)>
SINK|<com.android.bluetooth.pan.PanService: void handlePanDeviceStateChange(android.bluetooth.BluetoothDevice,java.lang.String,int,int,int)>
SINK|<android.preference.PreferenceActivity: void startWithFragment(java.lang.String,android.os.Bundle,android.app.Fragment,int)>
SINK|<android.filterfw.core.VertexFrame: void setFloats(float[])>
SINK|<android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoStubImpl: void setBoundsInParent(java.lang.Object,android.graphics.Rect)>
SINK|<android.filterfw.io.GraphReader: void addReferencesByMap(android.filterfw.core.KeyValueMap)>
SINK|<android.util.Xml: void parse(java.lang.String,org.xml.sax.ContentHandler)>
SINK|<android.app.ApplicationThreadProxy: void scheduleNewIntent(java.util.List,android.os.IBinder)>
SINK|<android.telephony.CellSignalStrengthLte: void setDefaultValues()>
SINK|<com.android.gallery3d.ui.MenuExecutor: void startAction(int,int,com.android.gallery3d.ui.MenuExecutor$ProgressListener)>
SINK|<android.preference.DialogPreference: void setDialogIcon(int)>
SINK|<android.support.v4.view.accessibility.AccessibilityNodeInfoCompat: void setVisibleToUser(boolean)>
SINK|<android.media.AudioRecord: int setPositionNotificationPeriod(int)>
SINK|<java.net.AddressCache: void put(java.lang.String,java.net.InetAddress[])>
SINK|<android.widget.Spinner: void setPromptId(int)>
SINK|<android.net.wifi.WifiNative: boolean setBluetoothCoexistenceMode(int)>
SINK|<android.bluetooth.IBluetoothInputDevice$Stub$Proxy: boolean sendData(android.bluetooth.BluetoothDevice,java.lang.String)>
SINK|<android.webkit.WebView: void dumpViewHierarchyWithProperties(java.io.BufferedWriter,int)>
SINK|<android.widget.TabHost$TabSpec: android.widget.TabHost$TabSpec setContent(int)>
SINK|<android.net.wifi.WifiConfigStore: boolean selectNetwork(int)>
SINK|<android.os.MemoryFile$MemoryOutputStream: void write(byte[],int,int)>
SINK|<com.android.internal.app.IBatteryStats$Stub$Proxy: void noteFullWifiLockAcquired(int)>
SINK|<android.graphics.drawable.GradientDrawable: void setGradientCenter(float,float)>
SINK|<com.google.common.io.ByteStreams$ByteArrayDataOutputStream: void writeFloat(float)>
SINK|<android.accounts.AccountManagerService: boolean addAccount(android.accounts.Account,java.lang.String,android.os.Bundle)>
SINK|<com.android.internal.telephony.IccRecords: void setMsisdnNumber(java.lang.String,java.lang.String,android.os.Message)>
SINK|<android.accounts.IAccountManager$Stub$Proxy: void setUserData(android.accounts.Account,java.lang.String,java.lang.String)>
SINK|<android.webkit.WebViewClassic: android.webkit.WebBackForwardList restoreState(android.os.Bundle)>
SINK|<android.hardware.Camera$Parameters: void setZoom(int)>
SINK|<org.apache.http.client.methods.HttpRequestBase: void setReleaseTrigger(org.apache.http.conn.ConnectionReleaseTrigger)>
SINK|<com.android.gallery3d.filtershow.imageshow.ImageShow: void onNewValue(int)>
SINK|<com.android.internal.telephony.PhoneProxy: void handleMessage(android.os.Message)>
SINK|<com.android.mms.dom.ElementImpl: void setIdAttribute(java.lang.String,boolean)>
SINK|<android.text.format.Time: void set(android.text.format.Time)>
SINK|<com.android.exchange.ExchangeService: void serviceRequest(long,long,int)>
SINK|<com.android.internal.telephony.cdma.CDMALTEPhone: void setBandMode(int,android.os.Message)>
SINK|<org.apache.http.impl.cookie.BasicClientCookie: void setPath(java.lang.String)>
SINK|<java.lang.System: void setOut(java.io.PrintStream)>
SINK|<android.accounts.AccountAuthenticatorActivity: void setRequestedOrientation(int)>
SINK|<android.app.ActivityManagerProxy: boolean clearApplicationUserData(java.lang.String,android.content.pm.IPackageDataObserver,int)>
SINK|<gov.nist.javax.sip.header.Via: void setProtocolVersion(java.lang.String)>
SINK|<android.graphics.Matrix: boolean setConcat(android.graphics.Matrix,android.graphics.Matrix)>
SINK|<java.net.URLConnection: void setIfModifiedSince(long)>
SINK|<com.android.contacts.editor.LabeledEditorView: void saveValue(java.lang.String,java.lang.String)>
SINK|<gov.nist.javax.sip.header.ims.PPreferredService: void setSubserviceIdentifiers(java.lang.String)>
SINK|<android.app.TimePickerDialog: void updateTime(int,int)>
SINK|<android.net.wifi.WifiWatchdogStateMachine$WatchdogDisabledState: boolean processMessage(android.os.Message)>
SINK|<dalvik.system.VMRuntime: float setTargetHeapUtilization(float)>
SINK|<com.android.inputmethod.latin.spellcheck.AndroidWordLevelSpellCheckerSession: android.view.textservice.SuggestionsInfo onGetSuggestions(android.view.textservice.TextInfo,java.lang.String,int)>
SINK|<com.android.server.wm.InputMonitor: void setFocusedAppLw(com.android.server.wm.AppWindowToken)>
SINK|<org.apache.http.message.ParserCursor: void updatePos(int)>
SINK|<com.android.email.SecurityPolicy: void setAccountPolicy(android.content.Context,com.android.emailcommon.provider.Account,com.android.emailcommon.provider.Policy,java.lang.String)>
SINK|<android.view.Surface: void setLayer(int)>
SINK|<android.os.IVibratorService$Stub$Proxy: void cancelVibrate(android.os.IBinder)>
SINK|<android.location.LocationManager: void removeUpdates(android.app.PendingIntent)>
SINK|<android.widget.ExpandableListView: void setIndicatorBounds(int,int)>
SINK|<android.app.FragmentManagerImpl: void dispatchConfigurationChanged(android.content.res.Configuration)>
SINK|<android.view.animation.GridLayoutAnimationController: void setDirection(int)>
SINK|<com.android.internal.telephony.PhoneSubInfo: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
SINK|<com.android.exchange.EasOutboxService: boolean tryProvision(com.android.exchange.EasSyncService)>
SINK|<java.util.concurrent.LinkedTransferQueue: void writeObject(java.io.ObjectOutputStream)>
SINK|<android.accounts.AccountManager$AmsTask: void set(android.os.Bundle)>
SINK|<java.security.cert.PKIXBuilderParameters: void setMaxPathLength(int)>
SINK|<com.android.internal.app.IBatteryStats$Stub$Proxy: void noteStartGps(int)>
SINK|<com.android.server.power.DisplayPowerState$PhotonicModulator: void dump(java.io.PrintWriter)>
SINK|<android.view.accessibility.IAccessibilityInteractionConnection$Stub$Proxy: void findAccessibilityNodeInfoByViewId(long,int,int,android.view.accessibility.IAccessibilityInteractionConnectionCallback,int,int,long)>
SINK|<android.os.Parcel: void writeIntArray(int[])>
SINK|<java.util.Collections$UnmodifiableList: java.lang.Object set(int,java.lang.Object)>
SINK|<java.lang.Double: double parseDouble(java.lang.String)>
SINK|<android.os.Registrant: void notifyException(java.lang.Throwable)>
SINK|<android.app.AlarmManager: void setTimeZone(java.lang.String)>
SINK|<com.android.internal.telephony.DefaultPhoneNotifier: void notifySignalStrength(com.android.internal.telephony.Phone)>
SINK|<android.widget.ExpandableListView: void setAdapter(android.widget.Adapter)>
SINK|<com.android.internal.widget.LockPatternUtils: void updateEmergencyCallButtonState(android.widget.Button,int,boolean)>
SINK|<com.android.internal.telephony.RIL: void setLocationUpdates(boolean,android.os.Message)>
SINK|<com.android.videoeditor.service.ApiService: void extractAudioTrackAudioWaveform(android.content.Context,java.lang.String,java.lang.String)>
SINK|<org.json.JSONObject: org.json.JSONObject putOpt(java.lang.String,java.lang.Object)>
SINK|<android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>
SINK|<org.apache.http.impl.cookie.BasicClientCookie2: void setCommentURL(java.lang.String)>
SINK|<android.graphics.drawable.Drawable: boolean setState(int[])>
SINK|<android.preference.Preference: boolean persistLong(long)>
SINK|<com.android.bluetooth.hfp.HeadsetStateMachine$Connected: boolean processMessage(android.os.Message)>
SINK|<android.webkit.MockGeolocation: void setPosition(double,double,double)>
SINK|<android.appwidget.AppWidgetHost: void setUserId(int)>
SINK|<android.preference.Preference: void setOnPreferenceClickListener(android.preference.Preference$OnPreferenceClickListener)>
SINK|<com.android.email.Preferences: void setForceOneMinuteRefresh(boolean)>
SINK|<com.android.internal.telephony.DataConnectionTracker: boolean setInternalDataEnabled(boolean)>
SINK|<android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateIcsImpl: void sendAccessibilityEvent(java.lang.Object,android.view.View,int)>
SINK|<android.net.NetworkPolicy: void writeToParcel(android.os.Parcel,int)>
SINK|<android.widget.RemoteViews: void setDrawableParameters(int,boolean,int,int,android.graphics.PorterDuff$Mode,int)>
SINK|<android.app.ActivityManagerProxy: void registerProcessObserver(android.app.IProcessObserver)>
SINK|<android.nfc.NfcAdapter: void enableForegroundDispatch(android.app.Activity,android.app.PendingIntent,android.content.IntentFilter[],java.lang.String[][])>
SINK|<android.media.MediaPlayer: void setOnCompletionListener(android.media.MediaPlayer$OnCompletionListener)>
SINK|<com.google.android.mms.pdu.GenericPdu: void setMmsVersion(int)>
SINK|<com.android.contacts.list.ContactListPinnedHeaderView: void setSectionHeader(java.lang.String)>
SINK|<android.view.inputmethod.InputMethodManager: void doDump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
SINK|<android.os.CommonTimeConfig: int setMasterElectionGroupId(long)>
SINK|<android.net.wifi.WifiStateMachine$CaptivePortalCheckState: boolean processMessage(android.os.Message)>
SINK|<android.app.admin.IDevicePolicyManager$Stub$Proxy: void setPasswordHistoryLength(android.content.ComponentName,int,int)>
SINK|<android.webkit.WebSettings: void setSaveFormData(boolean)>
SINK|<android.media.JetPlayer: boolean setMuteFlag(int,boolean,boolean)>
SINK|<javax.xml.datatype.XMLGregorianCalendar: void setTime(int,int,int,java.math.BigDecimal)>
SINK|<android.widget.Scroller: void setFinalY(int)>
SINK|<com.android.contacts.editor.KindSectionView: void setEnabled(boolean)>
SINK|<android.app.IUiModeManager$Stub$Proxy: void enableCarMode(int)>
SINK|<android.net.wifi.WifiConfigStore: boolean disableNetwork(int,int)>
SINK|<com.google.android.mms.pdu.ReadRecInd: void setDate(long)>
SINK|<com.android.server.wm.WindowManagerService: boolean dumpWindows(java.io.PrintWriter,java.lang.String,java.lang.String[],int,boolean)>
SINK|<com.android.emailcommon.service.IEmailServiceCallback$Stub$Proxy: void loadAttachmentStatus(long,long,int,int)>
SINK|<com.android.server.BackupManagerService: boolean startConfirmationUi(int,java.lang.String)>
SINK|<java.sql.Date: void setTime(long)>
SINK|<android.widget.Chronometer: void setOnChronometerTickListener(android.widget.Chronometer$OnChronometerTickListener)>
SINK|<com.android.emailcommon.service.EmailServiceProxy: void sendMeetingResponse(long,int)>
SINK|<android.os.ServiceManagerProxy: void setPermissionController(android.os.IPermissionController)>
SINK|<android.webkit.ZoomManager: void setInitialScaleInPercent(int)>
SINK|<android.webkit.ZoomManager: void setZoomScale(float,boolean)>
SINK|<com.android.phone.CallCard: void setSecondaryCallClickable(boolean)>
SINK|<android.app.SearchableInfo: void writeToParcel(android.os.Parcel,int)>
SINK|<gov.nist.javax.sip.stack.SIPDialog: void setLastResponse(gov.nist.javax.sip.stack.SIPTransaction,gov.nist.javax.sip.message.SIPResponse)>
SINK|<java.io.DataOutputStream: void writeBytes(java.lang.String)>
SINK|<android.net.http.RequestQueue: void queueRequest(android.net.http.Request,boolean)>
SINK|<libcore.icu.NativeConverter: void setCallbackEncode(long,java.nio.charset.CharsetEncoder)>
SINK|<com.android.server.TextServicesManagerService: void getSpellCheckerService(java.lang.String,java.lang.String,com.android.internal.textservice.ITextServicesSessionListener,com.android.internal.textservice.ISpellCheckerSessionListener,android.os.Bundle)>
SINK|<org.xmlpull.v1.XmlPullParserFactory: void setNamespaceAware(boolean)>
SINK|<com.android.musicfx.ControlPanelEffect: void setParameterInt(android.content.Context,java.lang.String,int,com.android.musicfx.ControlPanelEffect$Key,int)>
SINK|<com.android.server.am.ActivityManagerService: void dumpMemItems(java.io.PrintWriter,java.lang.String,java.util.ArrayList,boolean)>
SINK|<android.accounts.AccountManagerService: java.util.HashMap readUserDataForAccountFromDatabaseLocked(android.database.sqlite.SQLiteDatabase,android.accounts.Account)>
SINK|<com.android.server.pm.UserManagerService: android.content.pm.UserInfo createUser(java.lang.String,int)>
SINK|<android.webkit.WebSettingsClassic: void setMinimumLogicalFontSize(int)>
SINK|<android.hardware.Camera$Parameters: void setPreviewFormat(int)>
SINK|<android.util.Slog: int v(java.lang.String,java.lang.String)>
SINK|<com.android.server.usb.UsbService: boolean hasDefaults(java.lang.String,int)>
SINK|<java.util.concurrent.ForkJoinPool: void execute(java.util.concurrent.ForkJoinTask)>
SINK|<com.android.exchange.provider.ExchangeDirectoryProvider$GalContactRow: void addEmailAddress(android.database.MatrixCursor,com.android.exchange.provider.ExchangeDirectoryProvider$GalProjection,long,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>
SINK|<android.view.VelocityTracker: void setNextPoolable(java.lang.Object)>
SINK|<android.telephony.SmsManager: void sendTextMessage(java.lang.String,java.lang.String,java.lang.String,android.app.PendingIntent,android.app.PendingIntent)>
SINK|<android.opengl.Matrix: void setRotateM(float[],int,float,float,float,float)>
SINK|<android.support.v4.view.AccessibilityDelegateCompat: void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent)>
SINK|<android.widget.OverScroller: void notifyHorizontalEdgeReached(int,int,int)>
SINK|<android.os.StrictMode$ViolationInfo: void dump(android.util.Printer,java.lang.String)>
SINK|<com.android.internal.view.menu.MenuItemImpl: android.view.MenuItem setVisible(boolean)>
SINK|<com.android.internal.telephony.sip.SipCommandInterface: void setCdmaSubscriptionSource(int,android.os.Message)>
SINK|<java.nio.charset.CharsetEncoder: java.nio.charset.CharsetEncoder replaceWith(byte[])>
SINK|<com.android.providers.contacts.DefaultCallLogInsertionHelper: void addComputedValues(android.content.ContentValues)>
SINK|<com.android.nfc.handover.HandoverManager: void whitelistOppDevice(android.bluetooth.BluetoothDevice)>
SINK|<com.android.internal.telephony.PhoneProxy: void setCallForwardingOption(int,int,java.lang.String,int,android.os.Message)>
SINK|<com.android.internal.telephony.sip.SipPhone: void setCallWaiting(boolean,android.os.Message)>
SINK|<com.android.server.usb.UsbSettingsManager: void setDevicePackage(android.hardware.usb.UsbDevice,java.lang.String)>
SINK|<android.net.ConnectivityManager: int setUsbTethering(boolean)>
SINK|<com.android.server.AlarmManagerService: void setInexactRepeating(int,long,long,android.app.PendingIntent)>
SINK|<android.net.http.AndroidHttpClient: org.apache.http.HttpResponse execute(org.apache.http.client.methods.HttpUriRequest)>
SINK|<com.android.internal.telephony.sip.SipPhoneBase: void sendUssdResponse(java.lang.String)>
SINK|<android.app.Dialog: void setFeatureDrawableResource(int,int)>
SINK|<com.android.internal.appwidget.IAppWidgetService$Stub$Proxy: int allocateAppWidgetId(java.lang.String,int)>
SINK|<java.lang.invoke.MethodType: void writeObject(java.io.ObjectOutputStream)>
SINK|<javax.xml.parsers.SAXParser: void parse(java.io.File,org.xml.sax.HandlerBase)>
SINK|<com.android.server.IntentResolver: void dumpFilter(java.io.PrintWriter,java.lang.String,android.content.IntentFilter)>
SINK|<android.gesture.GestureOverlayView: void setGestureVisible(boolean)>
SINK|<com.android.internal.telephony.cdma.CdmaDataConnectionTracker: void setDataOnRoamingEnabled(boolean)>
SINK|<android.app.Dialog: void setFeatureDrawableAlpha(int,int)>
SINK|<android.location.Location: void setTime(long)>
SINK|<java.util.logging.Logger: void log(java.util.logging.Level,java.lang.String,java.lang.Object)>
SINK|<android.view.accessibility.AccessibilityEvent: void setEventTime(long)>
SINK|<android.inputmethodservice.AbstractInputMethodService: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
SINK|<android.accounts.AccountManager: android.content.Intent newChooseAccountIntent(android.accounts.Account,java.util.ArrayList,java.lang.String[],boolean,java.lang.String,java.lang.String,java.lang.String[],android.os.Bundle)>
SINK|<android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoIcsImpl: void setParent(java.lang.Object,android.view.View)>
SINK|<android.app.Activity: void setTitle(java.lang.CharSequence)>
SINK|<android.media.audiofx.PresetReverb: void setPreset(short)>
SINK|<com.android.systemui.statusbar.phone.PanelBar: void setPanelHolder(com.android.systemui.statusbar.phone.PanelHolder)>
SINK|<android.app.admin.IDevicePolicyManager$Stub$Proxy: boolean hasGrantedPolicy(android.content.ComponentName,int,int)>
SINK|<android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.CharSequence)>
SINK|<com.android.providers.contacts.aggregation.ContactAggregator: long onRawContactInsert(com.android.providers.contacts.TransactionContext,android.database.sqlite.SQLiteDatabase,long)>
SINK|<android.filterfw.core.GLFrame: void setViewport(int,int,int,int)>
SINK|<android.net.sip.SimpleSessionDescription$Media: void setAddress(java.lang.String)>
SINK|<java.net.URLConnection: void setUseCaches(boolean)>
SINK|<com.android.inputmethod.keyboard.MoreKeysKeyboardView: void setKeyPreviewPopupEnabled(boolean,int)>
SINK|<com.android.internal.backup.IBackupTransport$Stub$Proxy: int startRestore(long,android.content.pm.PackageInfo[])>
SINK|<com.android.email.activity.setup.AccountCheckSettingsFragment$ErrorDialog: com.android.email.activity.setup.AccountCheckSettingsFragment$ErrorDialog newInstance(android.content.Context,com.android.email.activity.setup.AccountCheckSettingsFragment,com.android.emailcommon.mail.MessagingException)>
SINK|<com.android.internal.widget.SlidingTab: void setRightTabResources(int,int,int,int)>
SINK|<android.view.View: void setOnKeyListener(android.view.View$OnKeyListener)>
SINK|<android.content.res.AssetManager: java.io.InputStream openNonAsset(java.lang.String,int)>
SINK|<javax.xml.validation.ValidatorHandler: void setFeature(java.lang.String,boolean)>
SINK|<com.android.internal.telephony.sip.SipCommandInterface: void setSuppServiceNotifications(boolean,android.os.Message)>
SINK|<org.apache.http.entity.BasicHttpEntity: void writeTo(java.io.OutputStream)>
SINK|<android.widget.RelativeLayout$DependencyGraph: void add(android.view.View)>
SINK|<org.apache.http.impl.client.AbstractHttpClient: void setHttpRequestRetryHandler(org.apache.http.client.HttpRequestRetryHandler)>
SINK|<android.view.accessibility.AccessibilityRecord: void setSource(android.view.View)>
SINK|<android.view.accessibility.AccessibilityEvent: void setCurrentItemIndex(int)>
SINK|<android.widget.TextView: void sendAccessibilityEvent(int)>
SINK|<com.android.internal.util.AsyncChannel: android.os.Message sendMessageSynchronously(int)>
SINK|<android.filterfw.core.ShaderProgram: void setAttributeValues(java.lang.String,android.filterfw.core.VertexFrame,int,int,int,int,boolean)>
SINK|<java.time.chrono.JapaneseEra: java.lang.Object writeReplace()>
SINK|<android.graphics.ColorMatrix: void set(float[])>
SINK|<com.android.email.Email: boolean setServicesEnabledSync(android.content.Context)>
SINK|<com.android.nfc.dhimpl.NativeNfcManager: void setP2pTargetModes(int)>
SINK|<android.app.ActivityManagerProxy: void setDebugApp(java.lang.String,boolean,boolean)>
SINK|<com.android.internal.view.IInputMethodClient$Stub$Proxy: void setUsingInputMethod(boolean)>
SINK|<android.net.sip.ISipSessionListener$Stub$Proxy: void onCalling(android.net.sip.ISipSession)>
SINK|<org.apache.http.impl.conn.DefaultClientConnection: void update(java.net.Socket,org.apache.http.HttpHost,boolean,org.apache.http.params.HttpParams)>
SINK|<com.android.gallery3d.ui.PhotoView: void setSwipingEnabled(boolean)>
SINK|<android.graphics.Matrix: void setTranslate(float,float)>
SINK|<android.app.ContextImpl: void startActivityAsUser(android.content.Intent,android.os.Bundle,android.os.UserHandle)>
SINK|<com.android.bluetooth.opp.BluetoothOppPreference: void setChannel(android.bluetooth.BluetoothDevice,int,int)>
SINK|<java.security.cert.X509CertSelector: void setIssuer(javax.security.auth.x500.X500Principal)>
SINK|<com.android.providers.contacts.ContactsProvider2: void notifyChange(boolean)>
SINK|<com.android.server.PackageManagerBackupAgent: void onBackup(android.os.ParcelFileDescriptor,android.app.backup.BackupDataOutput,android.os.ParcelFileDescriptor)>
SINK|<android.widget.Gallery: void setAnimationDuration(int)>
SINK|<android.graphics.drawable.BitmapDrawable: void setFilterBitmap(boolean)>
SINK|<com.android.internal.policy.impl.keyguard.KeyguardTransportControlView$SavedState: void writeToParcel(android.os.Parcel,int)>
SINK|<com.android.contacts.editor.LabeledEditorView: void setEnabled(boolean)>
SINK|<com.android.contacts.datepicker.DatePicker: void setEnabled(boolean)>
SINK|<android.graphics.drawable.AnimatedRotateDrawable: void setColorFilter(android.graphics.ColorFilter)>
SINK|<com.android.internal.telephony.RIL: void writeSmsToSim(int,java.lang.String,java.lang.String,android.os.Message)>
SINK|<java.text.NumberFormat: void setCurrency(java.util.Currency)>
SINK|<android.graphics.drawable.ScaleDrawable: void setAlpha(int)>
SINK|<android.os.StrictMode: void setThreadPolicy(android.os.StrictMode$ThreadPolicy)>
SINK|<android.os.Bundle: android.util.SparseArray getSparseParcelableArray(java.lang.String)>
SINK|<android.text.format.Time: long setJulianDay(int)>
SINK|<android.os.Bundle: void putString(java.lang.String,java.lang.String)>
SINK|<android.widget.AdapterView: void setFocusableInTouchMode(boolean)>
SINK|<com.android.gallery3d.ui.PositionController: void setImageSize(int,com.android.gallery3d.ui.PhotoView$Size,android.graphics.Rect)>
SINK|<android.os.INetworkManagementService$Stub$Proxy: void wifiFirmwareReload(java.lang.String,java.lang.String)>
SINK|<org.json.JSONArray: org.json.JSONObject toJSONObject(org.json.JSONArray)>
SINK|<com.android.launcher2.FastBitmapDrawable: void setColorFilter(android.graphics.ColorFilter)>
SINK|<com.android.server.am.ActivityManagerService: boolean dumpActivity(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String,java.lang.String[],int,boolean)>
SINK|<javax.xml.transform.sax.SAXResult: void setLexicalHandler(org.xml.sax.ext.LexicalHandler)>
SINK|<android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])>
SINK|<com.android.videoeditor.service.ApiService: void moveMediaItem(android.content.Context,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>
SINK|<android.net.EthernetDataTracker: void setTeardownRequested(boolean)>
SINK|<android.widget.AdapterViewAnimator: void setInAnimation(android.content.Context,int)>
SINK|<android.accounts.AccountManagerService: void setAuthToken(android.accounts.Account,java.lang.String,java.lang.String)>
SINK|<android.widget.Editor$PinnedPopupWindow: void updatePosition(int,int,boolean,boolean)>
SINK|<android.media.IAudioService$Stub$Proxy: void setRingtonePlayer(android.media.IRingtonePlayer)>
SINK|<android.app.AlarmManager: void setRepeating(int,long,long,android.app.PendingIntent)>
SINK|<com.android.internal.telephony.DataConnectionAc: void reqRemomveApnContext(com.android.internal.telephony.ApnContext)>
SINK|<android.content.SyncManager$ActiveSyncContext: void toString(java.lang.StringBuilder)>
SINK|<java.io.OutputStreamWriter: void write(java.lang.String)>
SINK|<java.nio.file.Files: java.nio.file.Path setOwner(java.nio.file.Path,java.nio.file.attribute.UserPrincipal)>
SINK|<com.android.mms.dom.smil.SmilMediaElementImpl: void setSrc(java.lang.String)>
SINK|<com.android.internal.view.IInputMethodManager$Stub$Proxy: void showMySoftInput(android.os.IBinder,int)>
SINK|<android.media.IRemoteControlDisplay$Stub$Proxy: void setArtwork(int,android.graphics.Bitmap)>
SINK|<com.android.browser.NavigationBarBase: void setFocusState(boolean)>
SINK|<com.android.internal.telephony.sip.SipCommandInterface: void setNetworkSelectionModeAutomatic(android.os.Message)>
SINK|<com.android.internal.telephony.test.SimulatedCommands: void setRadioPower(boolean,android.os.Message)>
SINK|<org.apache.harmony.security.asn1.ASN1GeneralizedTime: void setEncodingContent(org.apache.harmony.security.asn1.BerOutputStream)>
SINK|<android.view.accessibility.AccessibilityNodeInfo: void setLabelFor(android.view.View,int)>
SINK|<com.android.internal.telephony.SMSDispatcher: void dispatchPortAddressedPdus(byte[][],int)>
SINK|<android.view.IWindowSession$Stub$Proxy: void remove(android.view.IWindow)>
SINK|<android.view.View: void setFocusableInTouchMode(boolean)>
SINK|<android.speech.IRecognitionService$Stub$Proxy: void cancel(android.speech.IRecognitionListener)>
SINK|<android.widget.AutoCompleteTextView: void setDropDownBackgroundResource(int)>
SINK|<android.app.Activity: void setProgressBarIndeterminate(boolean)>
SINK|<java.text.DecimalFormat: void setDecimalFormatSymbols(java.text.DecimalFormatSymbols)>
SINK|<android.net.BaseNetworkStateTracker: void setUserDataEnable(boolean)>
SINK|<android.view.IWindowSession$Stub$Proxy: int addToDisplayWithoutInputChannel(android.view.IWindow,int,android.view.WindowManager$LayoutParams,int,int,android.graphics.Rect)>
SINK|<javax.xml.validation.Validator: void setProperty(java.lang.String,java.lang.Object)>
SINK|<com.android.internal.view.IInputMethodManager$Stub$Proxy: void updateStatusIcon(android.os.IBinder,java.lang.String,int)>
SINK|<android.filterfw.core.MutableFrameFormat: void setMetaValue(java.lang.String,java.lang.Object)>
SINK|<android.webkit.WebView: void setDownloadListener(android.webkit.DownloadListener)>
SINK|<com.android.musicfx.ControlPanelEffect: void openSession(android.content.Context,java.lang.String,int)>
SINK|<com.android.internal.telephony.RIL: void resetRadio(android.os.Message)>
SINK|<com.android.common.content.ProjectionMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
SINK|<android.preference.PreferenceFragment: void setPreferenceScreen(android.preference.PreferenceScreen)>
SINK|<android.net.sip.ISipSessionListener$Stub$Proxy: void onCallEnded(android.net.sip.ISipSession)>
SINK|<libcore.icu.NativeDecimalFormat: void setNegativeSuffix(java.lang.String)>
SINK|<org.json.JSONObject: org.json.JSONObject accumulate(java.lang.String,java.lang.Object)>
SINK|<android.webkit.WebSettings: void setUseDoubleTree(boolean)>
SINK|<com.android.internal.telephony.CallManager: void setAudioMode()>
SINK|<java.lang.StringBuffer: void setLength(int)>
SINK|<gov.nist.javax.sip.header.AuthenticationHeader: void setParameter(java.lang.String,java.lang.String)>
SINK|<gov.nist.javax.sip.header.ims.PVisitedNetworkID: void setValue(java.lang.String)>
SINK|<android.view.HardwareLayer: void setLayerPaint(android.graphics.Paint)>
SINK|<android.content.pm.IPackageManager$Stub$Proxy: void removePackageFromPreferred(java.lang.String)>
SINK|<com.android.server.am.AppBindRecord: void dump(java.io.PrintWriter,java.lang.String)>
SINK|<com.android.server.wm.WindowAnimator: void setPendingLayoutChanges(int,int)>
SINK|<android.net.UrlQuerySanitizer: void setAllowUnregisteredParamaters(boolean)>
SINK|<android.filterfw.core.ShaderProgram: void setClearsOutput(boolean)>
SINK|<com.android.bluetooth.btservice.AdapterProperties: boolean setDiscoverableTimeout(int)>
SINK|<java.text.ParsePosition: void setIndex(int)>
SINK|<android.widget.TextView: void setText(int,android.widget.TextView$BufferType)>
SINK|<com.android.mms.ui.VideoAttachmentView: void setVideoThumbnail(java.lang.String,android.graphics.Bitmap)>
SINK|<android.os.Parcel: void writeStringArray(java.lang.String[])>
SINK|<android.os.CommonTimeConfig: int setPanicThreshold(int)>
SINK|<android.app.INotificationManager$Stub$Proxy: void cancelToast(java.lang.String,android.app.ITransientNotification)>
SINK|<android.text.style.StyleSpan: void updateMeasureState(android.text.TextPaint)>
SINK|<android.net.wifi.p2p.WifiP2pDeviceList: void update(android.net.wifi.p2p.WifiP2pDevice)>
SINK|<com.android.inputmethod.latin.ImfUtils: void setAdditionalInputMethodSubtypes(android.content.Context,android.view.inputmethod.InputMethodSubtype[])>
SINK|<com.android.server.am.UsageStatsService$PkgUsageStatsExtended: void writeToParcel(android.os.Parcel)>
SINK|<org.apache.http.impl.client.AbstractHttpClient: void setCookieSpecs(org.apache.http.cookie.CookieSpecRegistry)>
SINK|<android.net.wifi.WifiStateMachine$DriverUnloadedState: boolean processMessage(android.os.Message)>
SINK|<com.android.internal.app.IBatteryStats$Stub$Proxy: void setBatteryState(int,int,int,int,int,int)>
SINK|<android.accounts.AccountManager: android.accounts.AccountManagerFuture updateCredentials(android.accounts.Account,java.lang.String,android.os.Bundle,android.app.Activity,android.accounts.AccountManagerCallback,android.os.Handler)>
SINK|<java.lang.ProcessManager: java.lang.Process exec(java.lang.String[],java.lang.String[],java.io.File,boolean)>
SINK|<com.android.mms.ui.SlideView: void setTextRegion(int,int,int,int)>
SINK|<android.app.Activity: void setSecondaryProgress(int)>
SINK|<android.view.View: void setNextFocusRightId(int)>
SINK|<com.android.internal.telephony.AdnRecordCache: void handleMessage(android.os.Message)>
SINK|<libcore.io.DropBox$DefaultReporter: void addData(java.lang.String,byte[],int)>
SINK|<gov.nist.core.MultiValueMapImpl: java.util.List put(java.lang.String,java.util.List)>
SINK|<android.app.Activity: boolean navigateUpTo(android.content.Intent)>
SINK|<android.view.IWindowManager$Stub$Proxy: void setFocusedApp(android.os.IBinder,boolean)>
SINK|<android.widget.AbsListView$ListItemAccessibilityDelegate: boolean performAccessibilityAction(android.view.View,int,android.os.Bundle)>
SINK|<android.animation.AnimatorSet$Builder: android.animation.AnimatorSet$Builder before(android.animation.Animator)>
SINK|<java.lang.String: boolean startsWith(java.lang.String)>
SINK|<android.widget.PopupWindow: void setWindowLayoutMode(int,int)>
SINK|<com.google.common.collect.Sets$SetFromMap: boolean add(java.lang.Object)>
SINK|<android.hardware.Camera$Parameters: void setExposureCompensation(int)>
SINK|<java.lang.invoke.MutableCallSite: void setTarget(java.lang.invoke.MethodHandle)>
SINK|<com.android.internal.view.IInputMethod$Stub$Proxy: void attachToken(android.os.IBinder)>
SINK|<android.app.ApplicationPackageManager: void setComponentEnabledSetting(android.content.ComponentName,int,int)>
SINK|<java.lang.ProcessBuilder: java.lang.Process start()>
SINK|<java.text.DecimalFormat: void setParseIntegerOnly(boolean)>
SINK|<android.widget.AbsListView$SavedState: void writeToParcel(android.os.Parcel,int)>
SINK|<com.android.internal.widget.ActionBarView$HomeView: void setIcon(android.graphics.drawable.Drawable)>
SINK|<android.util.Slog: int i(java.lang.String,java.lang.String)>
SINK|<java.lang.reflect.Field: void setByte(java.lang.Object,byte)>
SINK|<com.android.internal.os.BatteryStatsImpl$Uid$Sensor: void writeToParcelLocked(android.os.Parcel,long)>
SINK|<com.android.internal.textservice.ITextServicesManager$Stub$Proxy: void setCurrentSpellChecker(java.lang.String,java.lang.String)>
SINK|<javax.xml.validation.SchemaFactory: void setFeature(java.lang.String,boolean)>
SINK|<android.app.Dialog: void setFeatureDrawableUri(int,android.net.Uri)>
SINK|<android.net.wifi.WifiStateMachine$DisconnectedState: boolean processMessage(android.os.Message)>
SINK|<android.os.INetworkManagementService$Stub$Proxy: void setGlobalAlert(long)>
SINK|<android.os.SELinux: boolean restorecon(java.io.File)>
SINK|<com.google.android.mms.pdu.SendReq: void setTransactionId(byte[])>
SINK|<android.speech.tts.ITextToSpeechService$Stub$Proxy: void setCallback(android.os.IBinder,android.speech.tts.ITextToSpeechCallback)>
SINK|<com.google.common.io.ByteStreams$ByteArrayDataOutputStream: void writeByte(int)>
SINK|<com.android.mms.transaction.SmsMessageSender: boolean sendMessage(long)>
SINK|<com.android.internal.view.IInputConnectionWrapper: void setSelection(int,int)>
SINK|<android.content.ContextWrapper: void setWallpaper(java.io.InputStream)>
SINK|<android.app.ActivityManagerProxy: void grantUriPermissionFromOwner(android.os.IBinder,int,java.lang.String,android.net.Uri,int)>
SINK|<com.android.server.am.ActivityManagerService: java.util.ArrayList collectProcesses(java.io.PrintWriter,int,java.lang.String[])>
SINK|<java.util.concurrent.ForkJoinTask: short setForkJoinTaskTag(short)>
SINK|<android.view.GLES20DisplayList: void setBottom(int)>
SINK|<com.android.contacts.activities.ContactEditorActivity$2: void onCustomCreateContactActivityRequested(com.android.contacts.model.account.AccountWithDataSet,android.os.Bundle)>
SINK|<android.location.Address: void setCountryName(java.lang.String)>
SINK|<com.android.server.NetworkManagementService: void addIdleTimer(java.lang.String,int,java.lang.String)>
SINK|<android.app.backup.RestoreSession$RestoreObserverWrapper: void restoreFinished(int)>
SINK|<java.lang.Integer: int parseInt(java.lang.String)>
SINK|<android.animation.PropertyValuesHolder$FloatPropertyValuesHolder: void setupSetter(java.lang.Class)>
SINK|<libcore.io.IoUtils: void setBlocking(java.io.FileDescriptor,boolean)>
SINK|<com.android.browser.BookmarksLoader: void setUri(android.net.Uri)>
SINK|<com.android.server.AppWidgetService: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
SINK|<android.app.ActionBar: void setStackedBackgroundDrawable(android.graphics.drawable.Drawable)>
SINK|<com.android.camera.ListPreference: void persistStringValue(java.lang.String)>
SINK|<java.lang.StringBuffer: void setCharAt(int,char)>
SINK|<com.android.email.NotificationController: void showLoginFailedNotification(long)>
SINK|<com.android.internal.statusbar.IStatusBar$Stub$Proxy: void updateNotification(android.os.IBinder,com.android.internal.statusbar.StatusBarNotification)>
SINK|<android.view.Surface$CompatibleCanvas: void setMatrix(android.graphics.Matrix)>
SINK|<java.sql.DriverManager: void setLoginTimeout(int)>
SINK|<android.speech.tts.TtsEngines: void updateLocalePrefForEngine(java.lang.String,java.lang.String)>
SINK|<android.test.mock.MockContext: void sendBroadcast(android.content.Intent,java.lang.String)>
SINK|<com.android.mms.dom.NodeImpl: java.lang.Object setUserData(java.lang.String,java.lang.Object,org.w3c.dom.UserDataHandler)>
SINK|<android.widget.ScrollBarDrawable: void setColorFilter(android.graphics.ColorFilter)>
SINK|<java.util.GregorianCalendar: void setTimeZone(java.util.TimeZone)>
SINK|<com.android.browser.Tab: void setParent(com.android.browser.Tab)>
SINK|<java.time.ZonedDateTime: java.time.ZonedDateTime parse(java.lang.CharSequence)>
SINK|<com.googlecode.mp4parser.util.ByteBufferByteChannel: int write(java.nio.ByteBuffer)>
SINK|<android.content.res.ColorStateList: android.content.res.ColorStateList valueOf(int)>
SINK|<android.text.style.TypefaceSpan: void updateDrawState(android.text.TextPaint)>
SINK|<com.android.launcher2.FolderIcon: void setTextVisible(boolean)>
SINK|<com.android.email.activity.setup.AccountSetupActivity: void onCreate(android.os.Bundle)>
SINK|<com.google.android.mms.pdu.SendReq: void setContentType(byte[])>
SINK|<android.app.IUiModeManager$Stub$Proxy: void setNightMode(int)>
SINK|<com.android.internal.telephony.CallManager: void setEchoSuppressionEnabled(boolean)>
SINK|<com.android.videoeditor.service.ApiService: void setAudioTrackDuck(android.content.Context,java.lang.String,java.lang.String,boolean)>
SINK|<com.android.server.InputMethodManagerService: void setInputMethod(android.os.IBinder,java.lang.String)>
SINK|<libcore.io.ForwardingOs: void setgid(int)>
SINK|<libcore.icu.NativeDecimalFormat: void setRoundingMode(java.math.RoundingMode,double)>
SINK|<android.telephony.ServiceState: void setStateOutOfService()>
SINK|<android.util.SparseBooleanArray: void append(int,boolean)>
SINK|<android.view.inputmethod.InputMethodManager: void setImeWindowStatus(android.os.IBinder,int,int)>
SINK|<com.android.server.wm.WindowManagerService: void addDisplayContentChangeListener(int,android.view.IDisplayContentChangeListener)>
SINK|<com.android.gallery3d.common.LruCache: java.lang.Object put(java.lang.Object,java.lang.Object)>
SINK|<android.provider.Browser: void sendString(android.content.Context,java.lang.String)>
SINK|<org.apache.http.impl.AbstractHttpServerConnection: void init(org.apache.http.io.SessionInputBuffer,org.apache.http.io.SessionOutputBuffer,org.apache.http.params.HttpParams)>
SINK|<com.android.browser.NavigationBarTablet: void setCurrentUrlIsBookmark(boolean)>
SINK|<com.google.android.mms.pdu.PduPersister: void updateHeaders(android.net.Uri,com.google.android.mms.pdu.SendReq)>
SINK|<android.app.backup.IBackupManager$Stub$Proxy: void opComplete(int)>
SINK|<android.test.mock.MockContext: void setTheme(int)>
SINK|<org.apache.http.client.protocol.ClientContextConfigurer: void setCookieSpecRegistry(org.apache.http.cookie.CookieSpecRegistry)>
SINK|<android.net.http.Headers: void setProxyAuthenticate(java.lang.String)>
SINK|<android.content.pm.IPackageManager$Stub$Proxy: int checkPermission(java.lang.String,java.lang.String)>
SINK|<android.accounts.IAccountAuthenticator$Stub$Proxy: void getAuthToken(android.accounts.IAccountAuthenticatorResponse,android.accounts.Account,java.lang.String,android.os.Bundle)>
SINK|<com.android.contacts.quickcontact.FloatingChildLayout: void setBackgroundColorAlpha(int)>
SINK|<android.widget.RemoteViews: void setContentDescription(int,java.lang.CharSequence)>
SINK|<com.android.internal.telephony.cat.RilMessageDecoder$StateStart: boolean processMessage(android.os.Message)>
SINK|<android.widget.GridView: void setAdapter(android.widget.ListAdapter)>
SINK|<android.security.IKeyChainService$Stub$Proxy: java.lang.String requestPrivateKey(java.lang.String)>
SINK|<com.android.server.NetworkManagementService: void setInterfaceIpv6PrivacyExtensions(java.lang.String,boolean)>
SINK|<com.android.internal.policy.impl.keyguard.KeyguardViewMediator: void setHidden(boolean)>
SINK|<android.os.storage.StorageManager$ListenerDelegate: void sendStorageStateChanged(java.lang.String,java.lang.String,java.lang.String)>
SINK|<java.util.concurrent.ConcurrentHashMap: boolean replace(java.lang.Object,java.lang.Object,java.lang.Object)>
SINK|<com.android.server.wm.Session: void setWallpaperPosition(android.os.IBinder,float,float,float,float)>
SINK|<android.bluetooth.IBluetoothPbap$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>
SINK|<org.xml.sax.InputSource: void setCharacterStream(java.io.Reader)>
SINK|<com.android.mms.transaction.RetrieveTransaction: byte[] sendPdu(long,byte[],java.lang.String)>
SINK|<com.android.mms.ui.ComposeMessageActivity$43: boolean setViewValue(android.view.View,java.lang.Object,java.lang.String)>
SINK|<com.android.internal.appwidget.IAppWidgetService$Stub$Proxy: void stopListeningAsUser(int,int)>
SINK|<java.nio.ReadWriteHeapByteBuffer: java.nio.ByteBuffer putFloat(float)>
SINK|<android.accounts.IAccountManager$Stub$Proxy: void getAuthToken(android.accounts.IAccountManagerResponse,android.accounts.Account,java.lang.String,boolean,boolean,android.os.Bundle)>
SINK|<android.view.IWindowSession$Stub$Proxy: void setWallpaperPosition(android.os.IBinder,float,float,float,float)>
SINK|<com.android.internal.telephony.SMSDispatcher: int processMessagePart(byte[],java.lang.String,int,int,int,long,int,boolean)>
SINK|<android.widget.RemoteViews: void setShort(int,java.lang.String,short)>
SINK|<com.android.i18n.phonenumbers.RegexCache$LRUCache: void put(java.lang.Object,java.lang.Object)>
SINK|<org.apache.http.conn.params.ConnRouteParamBean: void setLocalAddress(java.net.InetAddress)>
SINK|<android.graphics.drawable.ShapeDrawable: void setShape(android.graphics.drawable.shapes.Shape)>
SINK|<com.android.internal.telephony.RIL: void iccIOForApp(int,int,java.lang.String,int,int,int,java.lang.String,java.lang.String,java.lang.String,android.os.Message)>
SINK|<android.opengl.GLSurfaceView: void setRenderer(android.opengl.GLSurfaceView$Renderer)>
SINK|<com.android.server.am.CompatModePackages: void setPackageScreenCompatModeLocked(java.lang.String,int)>
SINK|<java.util.concurrent.ThreadPoolExecutor: java.util.concurrent.Future submit(java.lang.Runnable)>
SINK|<android.media.IAudioService$Stub$Proxy: void adjustMasterVolume(int,int)>
SINK|<com.android.launcher2.LauncherModel: boolean queueIconToBeChecked(java.util.HashMap,com.android.launcher2.ShortcutInfo,android.database.Cursor,int)>
SINK|<com.android.internal.telephony.gsm.GSMPhone: void setCallForwardingOption(int,int,java.lang.String,int,android.os.Message)>
SINK|<android.os.IHardwareService$Stub$Proxy: void setFlashlightEnabled(boolean)>
SINK|<android.webkit.WebSettings: void setDefaultZoom(android.webkit.WebSettings$ZoomDensity)>
SINK|<android.net.http.Headers: void setXPermittedCrossDomainPolicies(java.lang.String)>
SINK|<com.android.deskclock.AlarmClock$AlarmItemAdapter: void setNewAlarm(int)>
SINK|<java.nio.MappedByteBufferAdapter: java.nio.ByteBuffer put(byte[],int,int)>
SINK|<org.apache.http.message.BasicHttpResponse: void setLocale(java.util.Locale)>
SINK|<android.location.Address: void setThoroughfare(java.lang.String)>
SINK|<android.app.ApplicationThreadProxy: void scheduleCrash(java.lang.String)>
SINK|<java.io.PrintStream: void println(char)>
SINK|<android.content.res.AssetFileDescriptor$AutoCloseOutputStream: void write(byte[],int,int)>
SINK|<android.widget.AutoCompleteTextView: void setForceIgnoreOutsideTouch(boolean)>
SINK|<android.preference.ListPreference: void setValueIndex(int)>
SINK|<com.google.android.apps.lightcycle.shaders.TransparencyShader: void setAlpha(float)>
SINK|<com.android.emailcommon.mail.Address: void setAddress(java.lang.String)>
SINK|<org.apache.http.message.BasicLineParser: org.apache.http.Header parseHeader(org.apache.http.util.CharArrayBuffer)>
SINK|<com.android.internal.view.IInputMethodManager$Stub$Proxy: boolean switchToNextInputMethod(android.os.IBinder,boolean)>
SINK|<java.util.AbstractMap$SimpleImmutableEntry: java.lang.Object setValue(java.lang.Object)>
SINK|<com.android.server.LightsService$Light: void setColor(int)>
SINK|<com.coremedia.iso.IsoTypeWriter: void writeUInt16(java.nio.ByteBuffer,int)>
SINK|<com.android.videoeditor.service.ApiService: void removeMediaItem(android.content.Context,java.lang.String,java.lang.String,java.lang.String)>
SINK|<org.apache.harmony.security.x509.DistributionPointName: void dumpValue(java.lang.StringBuilder,java.lang.String)>
SINK|<com.android.uiautomator.core.Tracer: void setOutputFilename(java.lang.String)>
SINK|<com.android.nfc.NfcDispatcher: boolean tryTech(com.android.nfc.NfcDispatcher$DispatchInfo,android.nfc.Tag)>
SINK|<java.util.logging.LogRecord: void setResourceBundleName(java.lang.String)>
SINK|<com.android.bluetooth.btservice.RemoteDevices: void sspRequestCallback(byte[],byte[],int,int,int)>
SINK|<android.preference.Preference: void setDependency(java.lang.String)>
SINK|<java.time.chrono.HijrahDate: void writeExternal(java.io.ObjectOutput)>
SINK|<android.graphics.drawable.ScaleDrawable: boolean setVisible(boolean,boolean)>
SINK|<com.android.server.EventLogTags: void writeBootProgressPmsSystemScanStart(long)>
SINK|<java.util.concurrent.CopyOnWriteArrayList$CowIterator: void set(java.lang.Object)>
SINK|<org.xml.sax.helpers.XMLFilterImpl: void setContentHandler(org.xml.sax.ContentHandler)>
SINK|<com.android.internal.view.menu.MenuBuilder: com.android.internal.view.menu.MenuBuilder setHeaderTitleInt(int)>
SINK|<android.view.ViewGroup$LayoutParams: void setBaseAttributes(android.content.res.TypedArray,int,int)>
SINK|<com.android.internal.telephony.RIL: void requestIsimAuthentication(java.lang.String,android.os.Message)>
SINK|<android.graphics.drawable.ClipDrawable: void setLayoutDirection(int)>
SINK|<java.util.logging.Logger: void log(java.util.logging.Level,java.lang.String,java.lang.Throwable)>
SINK|<com.android.internal.telephony.cdma.CdmaLteServiceStateTracker: void fixTimeZone(java.lang.String)>
SINK|<com.android.internal.telephony.DataConnectionAc: com.android.internal.telephony.DataConnection$UpdateLinkPropertyResult updateLinkPropertiesDataCallStateSync(com.android.internal.telephony.DataCallState)>
SINK|<com.android.inputmethod.latin.SettingsValues: void setLastUserHistoryWriteTime(android.content.SharedPreferences,java.lang.String)>
SINK|<android.content.Intent: android.content.Intent setAction(java.lang.String)>
SINK|<android.os.Parcel: void writeSparseBooleanArray(android.util.SparseBooleanArray)>
SINK|<com.android.internal.telephony.DataConnectionAc: void setLinkPropertiesHttpProxySync(android.net.ProxyProperties)>
SINK|<gov.nist.javax.sip.stack.TCPMessageProcessor: gov.nist.javax.sip.stack.MessageChannel createMessageChannel(java.net.InetAddress,int)>
SINK|<com.android.server.pm.Settings: com.android.server.pm.PackageSetting addPackageLPw(java.lang.String,java.lang.String,java.io.File,java.io.File,java.lang.String,int,int,int)>
SINK|<android.webkit.WebView: void setPictureListener(android.webkit.WebView$PictureListener)>
SINK|<com.android.internal.os.BatteryStatsImpl: void setOnBattery(boolean,int,int)>
SINK|<javax.obex.ObexHelper: byte[] createHeader(javax.obex.HeaderSet,boolean)>
SINK|<com.android.providers.contacts.aggregation.ContactAggregator: void updateHasPhoneNumber(android.database.sqlite.SQLiteDatabase,long)>
SINK|<android.widget.ExpandableListView: void setChildIndicatorBounds(int,int)>
SINK|<android.view.Window: void setFlags(int,int)>
SINK|<com.android.gallery3d.util.ThreadPool$JobContextStub: boolean setMode(int)>
SINK|<com.android.internal.telephony.sip.SipCommandInterface: void setTTYMode(int,android.os.Message)>
SINK|<android.widget.RemoteViews$ViewGroupAction: void setBitmapCache(android.widget.RemoteViews$BitmapCache)>
SINK|<android.animation.ValueAnimator: void setIntValues(int[])>
SINK|<android.animation.ValueAnimator: void setFloatValues(float[])>
SINK|<com.android.inputmethod.latin.ExpandableBinaryDictionary: void setRequiresReload(boolean)>
SINK|<com.android.bluetooth.btservice.AdapterProperties: boolean setScanMode(int)>
SINK|<java.nio.SocketChannelImpl$SocketAdapter: void bind(java.net.SocketAddress)>
SINK|<android.test.mock.MockContext: void sendBroadcast(android.content.Intent)>
SINK|<android.support.v4.view.AccessibilityDelegateCompat: void sendAccessibilityEvent(android.view.View,int)>
SINK|<android.test.mock.MockContext: void sendStickyOrderedBroadcast(android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>
SINK|<gov.nist.javax.sip.header.ims.PChargingFunctionAddresses: void setEventChargingFunctionAddress(java.lang.String)>
SINK|<java.util.logging.Logger: void log(java.util.logging.LogRecord)>
SINK|<android.widget.AbsListView$RecycleBin: void setCacheColorHint(int)>
SINK|<com.android.exchange.adapter.ContactsSyncAdapter: boolean sendLocalChanges(com.android.exchange.adapter.Serializer)>
SINK|<java.lang.reflect.Executable: java.lang.'annotation'.Annotation[][] parseParameterAnnotations(byte[])>
SINK|<android.location.Criteria: void setVerticalAccuracy(int)>
SINK|<gov.nist.javax.sip.header.Accept: void setContentType(java.lang.String)>
SINK|<com.android.systemui.statusbar.phone.PhoneStatusBar$FastColorDrawable: void setColorFilter(android.graphics.ColorFilter)>
SINK|<com.android.internal.app.IMediaContainerService$Stub$Proxy: void clearDirectory(java.lang.String)>
SINK|<android.filterfw.core.MutableFrameFormat: void setDimensions(int)>
SINK|<android.app.PendingIntent: void writePendingIntentOrNullToParcel(android.app.PendingIntent,android.os.Parcel)>
SINK|<android.app.LoadedApk$ServiceDispatcher: void doConnected(android.content.ComponentName,android.os.IBinder)>
SINK|<android.app.AlertDialog: void setView(android.view.View)>
SINK|<android.app.admin.DevicePolicyManager: void setKeyguardDisabledFeatures(android.content.ComponentName,int)>
SINK|<android.media.MediaRouter$RouteGroup: void setIconResource(int)>
SINK|<com.android.internal.app.IBatteryStats$Stub$Proxy: void noteScreenBrightness(int)>
SINK|<com.android.server.ConnectivityService: void sendConnectedBroadcast(android.net.NetworkInfo)>
SINK|<android.widget.AutoCompleteTextView: void setOnClickListener(android.view.View$OnClickListener)>
SINK|<android.widget.TextView$Drawables: void resolveWithLayoutDirection(int)>
SINK|<android.os.Handler: boolean sendMessageDelayed(android.os.Message,long)>
SINK|<com.android.videoeditor.service.ApiService: void removeOverlay(android.content.Context,java.lang.String,java.lang.String,java.lang.String)>
SINK|<java.net.HttpURLConnection: java.io.OutputStream getOutputStream()>
SINK|<com.android.internal.view.IInputMethodSession$Stub$Proxy: void appPrivateCommand(java.lang.String,android.os.Bundle)>
SINK|<android.widget.RemoteViews$Action: void setBitmapCache(android.widget.RemoteViews$BitmapCache)>
SINK|<android.location.LocationManager: void removeUpdates(android.location.LocationListener)>
SINK|<com.android.mms.dom.smil.SmilRegionElementImpl: void setHeight(int)>
SINK|<android.app.ActivityManagerProxy: void killBackgroundProcesses(java.lang.String,int)>
SINK|<org.apache.harmony.xnet.provider.jsse.SSLSocketWrapper: void setSendBufferSize(int)>
SINK|<java.lang.System: void setIn(java.io.InputStream)>
SINK|<java.security.cert.X509CertSelector: void setAuthorityKeyIdentifier(byte[])>
SINK|<com.android.server.wm.WindowManagerService: void setAnimationScale(int,float)>
SINK|<android.view.inputmethod.InputConnectionWrapper: boolean performPrivateCommand(java.lang.String,android.os.Bundle)>
SINK|<com.android.gallery3d.app.GalleryActionBar: void setSubtitle(java.lang.String)>
SINK|<com.android.providers.settings.SettingsBackupAgent$WifiNetworkSettings: void write(java.io.Writer)>
SINK|<android.net.Uri$HierarchicalUri: void writeToParcel(android.os.Parcel,int)>
SINK|<org.xml.sax.helpers.XMLReaderAdapter: void setDTDHandler(org.xml.sax.DTDHandler)>
SINK|<android.os.IPowerManager$Stub$Proxy: void releaseWakeLock(android.os.IBinder,int)>
SINK|<java.text.DecimalFormatSymbols: void setGroupingSeparator(char)>
SINK|<com.android.email.mail.store.ImapConnection: java.lang.String sendComplexCommand(java.util.List,boolean)>
SINK|<com.android.server.usb.UsbService: void setCurrentFunction(java.lang.String,boolean)>
SINK|<libcore.icu.NativeDecimalFormat: void setMaximumFractionDigits(int)>
SINK|<android.view.IWindowManager$Stub$Proxy: void closeSystemDialogs(java.lang.String)>
SINK|<com.android.internal.app.ActionBarImpl: void setNavigationMode(int)>
SINK|<gov.nist.javax.sip.stack.UDPMessageChannel$PingBackTimerTask: void <init>
SINK|<android.net.wifi.IWifiManager$Stub$Proxy: boolean acquireWifiLock(android.os.IBinder,int,java.lang.String,android.os.WorkSource)>
SINK|<android.graphics.drawable.GradientDrawable: void setSize(int,int)>
SINK|<com.android.contacts.list.CustomContactListFilterActivity$AccountDisplay: void setShouldSync(com.android.contacts.list.CustomContactListFilterActivity$GroupDelta,boolean,boolean)>
SINK|<android.widget.SimpleCursorAdapter: void setCursorToStringConverter(android.widget.SimpleCursorAdapter$CursorToStringConverter)>
SINK|<com.android.email.activity.MessageCompose: void setFocusShifter(int,int)>
SINK|<java.nio.IntBuffer: java.nio.IntBuffer put(int[],int,int)>
SINK|<org.apache.harmony.security.x509.DistributionPoint: void dumpValue(java.lang.StringBuilder,java.lang.String)>
SINK|<com.android.internal.widget.SlidingTab$Slider: void setBarBackgroundResource(int)>
SINK|<android.os.Parcel: void writeException(java.lang.Exception)>
SINK|<android.webkit.WebView: void setBackgroundColor(int)>
SINK|<android.media.AudioManager: void setVibrateSetting(int,int)>
SINK|<com.android.systemui.statusbar.policy.ToggleSlider: void setValue(int)>
SINK|<android.os.StrictMode: void onVmPolicyViolation(java.lang.String,java.lang.Throwable)>
SINK|<android.util.FloatProperty: void set(java.lang.Object,java.lang.Object)>
SINK|<com.android.inputmethod.latin.LatinIME: void setInputView(android.view.View)>
SINK|<android.app.ActivityManagerProxy: android.app.IActivityManager$WaitResult startActivityAndWait(android.app.IApplicationThread,android.content.Intent,java.lang.String,android.os.IBinder,java.lang.String,int,int,java.lang.String,android.os.ParcelFileDescriptor,android.os.Bundle,int)>
SINK|<android.widget.RemoteViews: void setPendingIntentTemplate(int,android.app.PendingIntent)>
SINK|<java.io.PrintWriter: void println(char)>
SINK|<android.os.Bundle: void putParcelableArrayList(java.lang.String,java.util.ArrayList)>
SINK|<com.android.server.am.ActivityManagerService: boolean bindBackupAgent(android.content.pm.ApplicationInfo,int)>
SINK|<java.time.MonthDay: java.time.MonthDay parse(java.lang.CharSequence,java.time.format.DateTimeFormatter)>
SINK|<com.android.browser.DataController: void updateVisitedHistory(java.lang.String)>
SINK|<com.android.internal.util.AsyncChannel: void sendMessage(int)>
SINK|<android.app.IThumbnailReceiver$Stub$Proxy: void newThumbnail(int,android.graphics.Bitmap,java.lang.CharSequence)>
SINK|<android.view.WindowManager$LayoutParams: void writeToParcel(android.os.Parcel,int)>
SINK|<android.view.inputmethod.InputMethodManager: void setInputMethod(android.os.IBinder,java.lang.String)>
SINK|<android.media.MediaRecorder: void setVideoEncodingBitRate(int)>
SINK|<com.android.calendar.event.EditEventHelper: boolean saveReminders(java.util.ArrayList,long,java.util.ArrayList,java.util.ArrayList,boolean)>
SINK|<android.webkit.WebSettings: void setDisplayZoomControls(boolean)>
SINK|<android.app.ProgressDialog: void setMax(int)>
SINK|<com.google.android.picasasync.PicasaSyncManager: void updateTasks(long)>
SINK|<com.android.internal.telephony.test.SimulatedCommands: void sendCDMAFeatureCode(java.lang.String,android.os.Message)>
SINK|<com.android.mms.ui.MessageListAdapter: void bindView(android.view.View,android.content.Context,android.database.Cursor)>
SINK|<android.nfc.INfcAdapterExtras$Stub$Proxy: void setCardEmulationRoute(java.lang.String,int)>
SINK|<com.android.internal.telephony.RIL: void exitEmergencyCallbackMode(android.os.Message)>
SINK|<java.nio.DatagramChannelImpl: long write(java.nio.ByteBuffer[],int,int)>
SINK|<com.android.videoeditor.service.ApiService: void addMediaItemVideoUri(android.content.Context,java.lang.String,java.lang.String,java.lang.String,android.net.Uri,int,java.lang.String)>
SINK|<org.apache.http.impl.AbstractHttpServerConnection: void sendResponseHeader(org.apache.http.HttpResponse)>
SINK|<android.filterfw.core.GLFrame: void setBitmap(android.graphics.Bitmap)>
SINK|<android.os.INetworkManagementService$Stub$Proxy: void setInterfaceUp(java.lang.String)>
SINK|<com.google.android.mms.pdu.PduPart: void setContentLocation(byte[])>
SINK|<android.database.sqlite.SQLiteProgram: void bindAllArgsAsStrings(java.lang.String[])>
SINK|<java.security.Signer: void setKeyPair(java.security.KeyPair)>
SINK|<com.google.android.mms.pdu.PduPart: void setData(byte[])>
SINK|<com.android.internal.telephony.IWapPushManager$Stub$Proxy: boolean deletePackage(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>
SINK|<android.filterfw.core.NativeFrame: void setDataFromFrame(android.filterfw.core.Frame)>
SINK|<com.android.internal.telephony.cdma.CDMALTEPhone: void notifyDataConnection(java.lang.String,java.lang.String)>
SINK|<android.app.ContextImpl: java.io.FileOutputStream openFileOutput(java.lang.String,int)>
SINK|<android.content.ContentValues: void put(java.lang.String,java.lang.Float)>
SINK|<android.bluetooth.BluetoothDevice: boolean setTrust(boolean)>
SINK|<android.hardware.input.IInputManager$Stub$Proxy: void removeKeyboardLayoutForInputDevice(java.lang.String,java.lang.String)>
SINK|<android.view.ViewRootImpl$W: void dispatchAppVisibility(boolean)>
SINK|<android.view.accessibility.AccessibilityNodeInfo: void setScrollable(boolean)>
SINK|<gov.nist.javax.sip.header.Via: void setProtocol(java.lang.String)>
SINK|<com.android.email.activity.MessageViewFragment: com.android.emailcommon.provider.EmailContent$Message openMessageSync(android.app.Activity)>
SINK|<com.android.systemui.statusbar.phone.QuickSettingsTileView: void setContent(int,android.view.LayoutInflater)>
SINK|<java.util.logging.LogRecord: void setResourceBundle(java.util.ResourceBundle)>
SINK|<android.widget.PopupWindow: void update(android.view.View,int,int,int,int)>
SINK|<com.android.internal.telephony.cdma.CDMAPhone: void notifyDisconnect(com.android.internal.telephony.Connection)>
SINK|<com.android.server.usb.UsbSettingsManager: void grantAccessoryPermission(android.hardware.usb.UsbAccessory,int)>
SINK|<com.android.internal.telephony.PhoneBase: void notifyDataConnection(java.lang.String)>
SINK|<com.android.server.net.NetworkStatsService: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
SINK|<android.renderscript.Program$BaseProgramBuilder: android.renderscript.Program$BaseProgramBuilder setShader(android.content.res.Resources,int)>
SINK|<android.graphics.drawable.RotateDrawable: void draw(android.graphics.Canvas)>
SINK|<com.google.android.picasasync.PicasaSyncHelper$SyncContext: boolean setAccount(java.lang.String)>
SINK|<com.android.commands.bmgr.Bmgr$RestoreObserver: void restoreStarting(int)>
SINK|<junit.framework.TestResult: void runProtected(junit.framework.Test,junit.framework.Protectable)>
SINK|<android.test.mock.MockContext: void setWallpaper(java.io.InputStream)>
SINK|<com.android.internal.os.BatteryStatsImpl$Counter: void writeCounterToParcel(android.os.Parcel,com.android.internal.os.BatteryStatsImpl$Counter)>
SINK|<android.os.BatteryStats: void dumpCheckinLocked(java.io.PrintWriter,java.lang.String[],java.util.List)>
SINK|<com.android.providers.contacts.DataRowHandlerForCommonDataKind: boolean update(android.database.sqlite.SQLiteDatabase,com.android.providers.contacts.TransactionContext,android.content.ContentValues,android.database.Cursor,boolean)>
SINK|<java.net.URL: void <init>(java.lang.String)>
SINK|<com.android.internal.telephony.cdma.CDMAPhone: boolean updateCurrentCarrierInProvider(java.lang.String)>
SINK|<com.google.android.apps.lightcycle.camera.CameraApiProxyAndroidImpl$CameraProxyAndroidImpl: void setPreviewCallback(android.hardware.Camera$PreviewCallback)>
SINK|<android.database.AbstractWindowedCursor: void setWindow(android.database.CursorWindow)>
SINK|<android.view.accessibility.AccessibilityInteractionClient: void addConnection(int,android.accessibilityservice.IAccessibilityServiceConnection)>
SINK|<java.io.ObjectOutputStream: void writeShort(int)>
SINK|<com.android.inputmethod.latin.RichInputConnection: void sendKeyEvent(android.view.KeyEvent)>
SINK|<com.android.launcher2.LauncherProvider: int update(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[])>
SINK|<android.net.IConnectivityManager$Stub$Proxy: int tether(java.lang.String)>
SINK|<com.google.common.io.ByteStreams: void write(byte[],com.google.common.io.OutputSupplier)>
SINK|<android.app.AlertDialog: void setIcon(android.graphics.drawable.Drawable)>
SINK|<android.animation.PropertyValuesHolder: void setupStartValue(java.lang.Object)>
SINK|<com.android.browser.NavigationBarTablet: void setFocusState(boolean)>
SINK|<android.app.IActivityController$Stub$Proxy: boolean appCrashed(java.lang.String,int,java.lang.String,java.lang.String,long,java.lang.String)>
SINK|<com.android.internal.telephony.IPhoneStateListener$Stub$Proxy: void onSignalStrengthChanged(int)>
SINK|<android.graphics.drawable.DrawableContainer: boolean setVisible(boolean,boolean)>
SINK|<android.webkit.WebSettings: void setAllowContentAccess(boolean)>
SINK|<com.android.internal.telephony.DataConnection$DcActiveState: boolean processMessage(android.os.Message)>
SINK|<android.graphics.drawable.BitmapDrawable: void setDither(boolean)>
SINK|<com.android.nfc.NfcService$TagService: int ndefWrite(int,android.nfc.NdefMessage)>
SINK|<com.coremedia.iso.IsoTypeWriter: void writeUInt32(java.nio.ByteBuffer,long)>
SINK|<android.view.Window: void setSoftInputMode(int)>
SINK|<android.media.AudioService: void setVibrateSetting(int,int)>
SINK|<android.util.IntProperty: void set(java.lang.Object,java.lang.Object)>
SINK|<com.google.android.mms.pdu.ReadOrigInd: void setReadStatus(int)>
SINK|<com.android.server.EventLogTags: void writeBootProgressPmsDataScanStart(long)>
SINK|<com.android.inputmethod.accessibility.AccessibilityEntityProvider: boolean performAction(int,int,android.os.Bundle)>
SINK|<com.android.server.am.ActivityManagerService: boolean dumpOomLocked(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[],int,boolean)>
SINK|<android.view.accessibility.AccessibilityNodeInfo: void setBoundsInScreen(android.graphics.Rect)>
SINK|<android.media.AudioService: void setMasterMute(boolean,int,android.os.IBinder)>
SINK|<android.os.Message: void writeToParcel(android.os.Parcel,int)>
SINK|<com.android.mms.data.Conversation: void setDraftState(boolean)>
SINK|<com.android.server.AppWidgetServiceImpl: void updateAppWidgetProvider(android.content.ComponentName,android.widget.RemoteViews)>
SINK|<android.animation.ValueAnimator: android.animation.Animator setDuration(long)>
SINK|<android.os.storage.StorageManager$ObbListenerDelegate: void sendObbStateChanged(java.lang.String,int)>
SINK|<com.android.internal.location.ProviderRequest: void writeToParcel(android.os.Parcel,int)>
SINK|<com.adobe.xmp.options.Options: void setOption(int,boolean)>
SINK|<android.media.IRemoteControlDisplay$Stub$Proxy: void setTransportControlFlags(int,int)>
SINK|<com.android.internal.util.FastXmlSerializer: void setPrefix(java.lang.String,java.lang.String)>
SINK|<android.app.admin.DevicePolicyManager: void setPasswordMinimumLowerCase(android.content.ComponentName,int)>
SINK|<com.android.providers.contacts.aggregation.ProfileAggregator: void aggregateContact(com.android.providers.contacts.TransactionContext,android.database.sqlite.SQLiteDatabase,long)>
SINK|<com.android.gallery3d.app.StateManager: void startStateForResult(java.lang.Class,int,android.os.Bundle)>
SINK|<com.android.mms.ui.SlideView: void setText(java.lang.String,java.lang.String)>
SINK|<android.widget.GridView: void setVerticalSpacing(int)>
SINK|<com.android.email.activity.AttachmentInfoDialog: com.android.email.activity.AttachmentInfoDialog newInstance(android.content.Context,int)>
SINK|<android.os.Bundle: void putCharSequenceArray(java.lang.String,java.lang.CharSequence[])>
SINK|<android.app.WallpaperManager$FastBitmapDrawable: void setBounds(int,int,int,int)>
SINK|<android.location.ILocationManager$Stub$Proxy: boolean sendExtraCommand(java.lang.String,java.lang.String,android.os.Bundle)>
SINK|<com.android.internal.statusbar.IStatusBarService$Stub$Proxy: void setCurrentUser(int)>
SINK|<android.widget.SearchView: void setIconifiedByDefault(boolean)>
SINK|<android.widget.TextView: void setOnEditorActionListener(android.widget.TextView$OnEditorActionListener)>
SINK|<android.media.MediaRecorder: void setPreviewDisplay(android.view.Surface)>
SINK|<android.animation.Keyframe$IntKeyframe: void setValue(java.lang.Object)>
SINK|<org.apache.http.conn.params.ConnManagerParams: void setMaxConnectionsPerRoute(org.apache.http.params.HttpParams,org.apache.http.conn.params.ConnPerRoute)>
SINK|<android.net.DhcpStateMachine$WaitBeforeRenewalState: boolean processMessage(android.os.Message)>
SINK|<gov.nist.javax.sip.header.CallID: void setCallId(java.lang.String)>
SINK|<javax.obex.ClientSession: boolean sendRequest(int,byte[],javax.obex.HeaderSet,javax.obex.PrivateInputStream)>
SINK|<java.util.concurrent.Executors: java.util.concurrent.ExecutorService unconfigurableExecutorService(java.util.concurrent.ExecutorService)>
SINK|<android.widget.TabHost: void setup(android.app.LocalActivityManager)>
SINK|<com.android.contacts.socialwidget.SocialWidgetSettings: void setContactUri(android.content.Context,int,android.net.Uri)>
SINK|<com.android.email.service.MailService: void actionSendPendingMail(android.content.Context,long)>
SINK|<com.android.internal.telephony.cdma.CDMAPhone: com.android.internal.telephony.Connection dial(java.lang.String)>
SINK|<android.view.GLES20Canvas: void setMatrix(android.graphics.Matrix)>
SINK|<java.security.cert.X509CertSelector: void setPolicy(java.util.Set)>
SINK|<com.android.launcher2.DragController: void startDrag(android.view.View,android.graphics.Bitmap,com.android.launcher2.DragSource,java.lang.Object,int,android.graphics.Rect,float)>
SINK|<com.android.server.DevicePolicyManagerService: void sendAdminCommandLocked(com.android.server.DevicePolicyManagerService$ActiveAdmin,java.lang.String,android.content.BroadcastReceiver)>
SINK|<android.widget.AutoCompleteTextView: void setDropDownHorizontalOffset(int)>
SINK|<android.view.inputmethod.InputConnectionWrapper: boolean performContextMenuAction(int)>
SINK|<android.os.RegistrantList: void notifyRegistrants(android.os.AsyncResult)>
SINK|<android.content.pm.IPackageManager$Stub$Proxy: void extendVerificationTimeout(int,int,long)>
SINK|<com.android.internal.policy.impl.PhoneWindowManager: void dump(java.lang.String,java.io.PrintWriter,java.lang.String[])>
SINK|<com.android.providers.contacts.DataRowHandlerForGroupMembership: long insert(android.database.sqlite.SQLiteDatabase,com.android.providers.contacts.TransactionContext,long,android.content.ContentValues)>
SINK|<android.app.ApplicationThreadProxy: void scheduleBindService(android.os.IBinder,android.content.Intent,boolean)>
SINK|<com.android.server.pm.Settings: void setInstallerPackageName(java.lang.String,java.lang.String)>
SINK|<com.android.internal.telephony.gsm.UsimPhoneBookManager$PbrFile: void parseTag(com.android.internal.telephony.gsm.SimTlv,int)>
SINK|<android.widget.ZoomControls: void setOnZoomOutClickListener(android.view.View$OnClickListener)>
SINK|<java.util.zip.CRC32: void update(byte[],int,int)>
SINK|<com.android.server.StatusBarManagerService: void setIconVisibility(java.lang.String,boolean)>
SINK|<com.android.server.InputMethodManagerService: void addClient(com.android.internal.view.IInputMethodClient,com.android.internal.view.IInputContext,int,int)>
SINK|<com.android.contacts.model.RawContactDelta$ValuesDelta: void copyStringFrom(com.android.contacts.model.RawContactDelta$ValuesDelta,java.lang.String)>
SINK|<com.android.server.input.InputManagerService: void setInputDispatchMode(boolean,boolean)>
SINK|<com.android.gallery3d.ui.PositionController: void moveBox(int[],boolean,boolean,boolean,com.android.gallery3d.ui.PhotoView$Size[])>
SINK|<com.android.internal.telephony.PhoneBase: void disableDnsCheck(boolean)>
SINK|<com.android.internal.telephony.cdma.CDMAPhone: boolean handlePinMmi(java.lang.String)>
SINK|<com.android.internal.os.BatteryStatsImpl$SamplingTimer: void writeSummaryFromParcelLocked(android.os.Parcel,long)>
SINK|<android.graphics.drawable.BitmapDrawable: void setTileModeY(android.graphics.Shader$TileMode)>
SINK|<org.apache.http.impl.conn.LoggingSessionOutputBuffer: void writeLine(org.apache.http.util.CharArrayBuffer)>
SINK|<android.app.ApplicationPackageManager: boolean hasSystemFeature(java.lang.String)>
SINK|<android.appwidget.AppWidgetManager: void updateAppWidgetOptions(int,android.os.Bundle)>
SINK|<android.widget.AbsSeekBar: void setMax(int)>
SINK|<org.apache.harmony.xnet.provider.jsse.SSLEngineImpl: void setEnableSessionCreation(boolean)>
SINK|<com.android.email.service.EmailServiceUtils: void startService(android.content.Context,java.lang.String)>
SINK|<android.webkit.WebViewClient: void onTooManyRedirects(android.webkit.WebView,android.os.Message,android.os.Message)>
SINK|<android.media.AudioTrack: int setPlaybackRate(int)>
SINK|<com.android.contacts.detail.CarouselTab: void setLabel(java.lang.String)>
SINK|<com.google.android.mms.pdu.PduPersister: android.net.Uri persist(com.google.android.mms.pdu.GenericPdu,android.net.Uri,boolean,boolean,java.util.HashMap)>
SINK|<com.android.server.ConnectivityService: void startLegacyVpn(com.android.internal.net.VpnProfile)>
SINK|<android.media.IAudioService$Stub$Proxy: int registerRemoteControlClient(android.app.PendingIntent,android.media.IRemoteControlClient,java.lang.String)>
SINK|<com.android.internal.telephony.ITelephonyRegistry$Stub$Proxy: void notifyCellLocation(android.os.Bundle)>
SINK|<com.android.internal.app.IBatteryStats$Stub$Proxy: void noteUserActivity(int,int)>
SINK|<java.text.DecimalFormat: void setNegativeSuffix(java.lang.String)>
SINK|<com.google.android.apps.lightcycle.camera.NullSurfaceCameraPreview: void setPictureWidth(android.hardware.Camera$Parameters,int)>
SINK|<com.google.android.apps.lightcycle.panorama.RenderedGui: void setDoneButtonVisible(boolean)>
SINK|<com.android.bluetooth.opp.BluetoothOppManager: void saveSendingFileInfo(java.lang.String,java.lang.String,boolean)>
SINK|<android.filterpacks.imageproc.ImageCombineFilter: void process(android.filterfw.core.FilterContext)>
SINK|<com.android.internal.telephony.RIL: void setCallWaiting(boolean,int,android.os.Message)>
SINK|<android.widget.PopupWindow: void setOutsideTouchable(boolean)>
SINK|<com.android.email.Controller: void setMessageReadSync(long,boolean)>
SINK|<com.android.mms.ui.BasicSlideEditorView: void setTextVisibility(boolean)>
SINK|<com.android.internal.app.IBatteryStats$Stub$Proxy: void noteStopWakelockFromSource(android.os.WorkSource,int,java.lang.String,int)>
SINK|<android.appwidget.AppWidgetProvider: void onUpdate(android.content.Context,android.appwidget.AppWidgetManager,int[])>
SINK|<com.android.internal.widget.ILockSettings$Stub$Proxy: boolean havePattern(int)>
SINK|<com.android.server.EventLogTags: void writeCacheFileDeleted(java.lang.String)>
SINK|<com.android.launcher2.HideFromAccessibilityHelper: void onChildViewRemoved(android.view.View,android.view.View)>
SINK|<java.text.DateFormatSymbols: void setAmPmStrings(java.lang.String[])>
SINK|<android.accounts.AccountManagerService: void invalidateAuthToken(java.lang.String,java.lang.String)>
SINK|<com.android.gallery3d.app.AbstractGalleryActivity: void setContentView(int)>
SINK|<android.webkit.WebSettings: void setPluginsPath(java.lang.String)>
SINK|<com.google.android.picasastore.FIFEUtil: android.net.Uri setImageUrlOptions(java.lang.String,java.lang.String)>
SINK|<java.nio.charset.CoderResult: java.nio.charset.CoderResult unmappableForLength(int)>
SINK|<android.net.http.Headers: void setEtag(java.lang.String)>
SINK|<com.android.providers.calendar.CalendarInstancesHelper: void expandInstanceRangeLocked(long,long,java.lang.String)>
SINK|<android.app.Service: void setForeground(boolean)>
SINK|<android.content.ContentProviderProxy: android.content.ContentProviderResult[] applyBatch(java.util.ArrayList)>
SINK|<java.lang.Short: short parseShort(java.lang.String,int)>
SINK|<android.content.pm.PermissionGroupInfo: void writeToParcel(android.os.Parcel,int)>
SINK|<com.android.internal.telephony.DataConnectionTracker: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
SINK|<com.adobe.xmp.options.SerializeOptions: com.adobe.xmp.options.SerializeOptions setOmitPacketWrapper(boolean)>
SINK|<android.graphics.drawable.NinePatchDrawable: void setFilterBitmap(boolean)>
SINK|<java.nio.ByteBuffer: java.nio.ByteBuffer put(byte[],int,int)>
SINK|<com.android.exchange.ExchangeService$1: void sendMessageStatus(long,java.lang.String,int,int)>
SINK|<com.android.internal.telephony.ITelephony$Stub$Proxy: boolean setRadio(boolean)>
SINK|<android.gesture.GestureStore: void setOrientationStyle(int)>
SINK|<android.hardware.usb.IUsbManager$Stub$Proxy: void setCurrentFunction(java.lang.String,boolean)>
SINK|<com.android.internal.app.IBatteryStats$Stub$Proxy: void noteWifiMulticastDisabled(int)>
SINK|<android.opengl.GLSurfaceView: void setGLWrapper(android.opengl.GLSurfaceView$GLWrapper)>
SINK|<com.google.android.mms.pdu.AcknowledgeInd: void setReportAllowed(int)>
SINK|<android.telephony.CellInfoGsm: void writeToParcel(android.os.Parcel,int)>
SINK|<android.graphics.Rect: void set(int,int,int,int)>
SINK|<org.apache.harmony.xnet.provider.jsse.SSLSocketImpl: void setEnabledProtocols(java.lang.String[])>
SINK|<com.android.providers.calendar.CalendarAlarmManager: void scheduleNextAlarm(boolean)>
SINK|<com.android.server.StatusBarManagerService: void updateNotification(android.os.IBinder,com.android.internal.statusbar.StatusBarNotification)>
SINK|<java.text.DecimalFormat: void setParseBigDecimal(boolean)>
SINK|<android.graphics.Paint: android.graphics.ColorFilter setColorFilter(android.graphics.ColorFilter)>
SINK|<android.view.inputmethod.BaseInputConnection: boolean setComposingRegion(int,int)>
SINK|<android.media.AudioService: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>
SINK|<com.android.bluetooth.hfp.HeadsetService: boolean setPriority(android.bluetooth.BluetoothDevice,int)>
SINK|<com.android.internal.telephony.gsm.GsmDataConnectionTracker: void notifyOffApnsOfAvailability(java.lang.String)>
SINK|<android.widget.GridLayout$LayoutParams: void setGravity(int)>
SINK|<android.app.ListActivity: void setSelection(int)>
SINK|<android.view.animation.LayoutAnimationController: void setInterpolator(android.content.Context,int)>
SINK|<android.app.AlertDialog: void setIconAttribute(int)>
SINK|<android.webkit.WebViewClassic$WebViewInputConnection: boolean sendKeyEvent(android.view.KeyEvent)>
SINK|<com.android.server.MountService: int changeEncryptionPassword(java.lang.String)>
SINK|<com.android.internal.policy.impl.PhoneWindowManager: void notifyLidSwitchChanged(long,boolean)>
SINK|<gov.nist.javax.sip.header.ContentType: void setContentSubType(java.lang.String)>
SINK|<com.google.android.mms.pdu.PduParser: void parseContentTypeParams(java.io.ByteArrayInputStream,java.util.HashMap,java.lang.Integer)>
SINK|<java.util.concurrent.atomic.AtomicReference: void lazySet(java.lang.Object)>
SINK|<com.android.server.usb.UsbService: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
SINK|<java.time.OffsetDateTime: void writeExternal(java.io.ObjectOutput)>
SINK|<android.widget.TextView: void setCompoundDrawablePadding(int)>
SINK|<android.net.Uri: android.net.Uri parse(java.lang.String)>
SINK|<java.util.concurrent.CompletableFuture: java.util.concurrent.Executor screenExecutor(java.util.concurrent.Executor)>
SINK|<android.webkit.CookieManagerClassic: void setCookie(java.lang.String,java.lang.String)>
SINK|<org.apache.http.entity.AbstractHttpEntity: void setContentEncoding(org.apache.http.Header)>
SINK|<android.content.ContextWrapper: void startActivity(android.content.Intent,android.os.Bundle)>
SINK|<android.app.Activity: void setRequestedOrientation(int)>
SINK|<android.view.GLES20TextureLayer: void setTransform(android.graphics.Matrix)>
SINK|<android.view.SurfaceView: void setVisibility(int)>
SINK|<android.widget.ZoomControls: void setZoomSpeed(long)>
SINK|<com.android.internal.appwidget.IAppWidgetService$Stub$Proxy: void deleteAppWidgetId(int)>
SINK|<android.app.Instrumentation: void sendStringSync(java.lang.String)>
SINK|<android.view.MotionEvent: void setSource(int)>
SINK|<com.android.commands.am.Am$MyActivityController: int appNotResponding(java.lang.String,int,java.lang.String)>
SINK|<gov.nist.javax.sip.header.extensions.Join: void setFromTag(java.lang.String)>
SINK|<android.opengl.Matrix: void setRotateEulerM(float[],int,float,float,float)>
SINK|<com.android.launcher2.Launcher: boolean startActivity(android.view.View,android.content.Intent,java.lang.Object)>
SINK|<android.widget.Spinner: void setDropDownVerticalOffset(int)>
SINK|<com.android.internal.telephony.sip.SipPhone$SipConnection: void setMute(boolean)>
SINK|<android.preference.PreferenceManager: void setSharedPreferencesName(java.lang.String)>
SINK|<java.net.HttpCookie: void setVersion(int)>
SINK|<com.android.nfc.handover.HandoverTransfer: void onScanCompleted(java.lang.String,android.net.Uri)>
SINK|<gov.nist.javax.sip.header.ParametersHeader: void setQuotedParameter(java.lang.String,java.lang.String)>
SINK|<com.android.commands.monkey.MonkeySourceRandom: void setFactors(float[])>
SINK|<java.lang.Byte: byte parseByte(java.lang.String,int)>
SINK|<org.apache.harmony.xnet.provider.jsse.OpenSSLSocketImplWrapper: void setKeepAlive(boolean)>
SINK|<android.media.AudioManager: void setStreamVolume(int,int,int)>
SINK|<org.apache.http.impl.client.AbstractHttpClient: org.apache.http.HttpResponse execute(org.apache.http.HttpHost,org.apache.http.HttpRequest)>
SINK|<android.inputmethodservice.KeyboardView: void setVerticalCorrection(int)>
SINK|<com.android.providers.settings.SettingsBackupAgent: void onBackup(android.os.ParcelFileDescriptor,android.app.backup.BackupDataOutput,android.os.ParcelFileDescriptor)>
SINK|<java.security.cert.PKIXRevocationChecker: void setOptions(java.util.Set)>
SINK|<android.accounts.AccountManagerService$4: void onResult(android.os.Bundle)>
SINK|<com.android.gallery3d.app.GalleryActionBar: void setTitle(int)>
SINK|<com.android.providers.media.IMtpService$Stub$Proxy: void sendObjectRemoved(int)>
SINK|<java.util.concurrent.CountedCompleter: void setPendingCount(int)>
SINK|<com.google.android.mms.pdu.PduPersister: android.net.Uri persistPart(com.google.android.mms.pdu.PduPart,long,java.util.HashMap)>
SINK|<java.nio.ServerSocketChannelImpl$ServerSocketAdapter: void bind(java.net.SocketAddress)>
SINK|<android.net.nsd.NsdManager: void resolveService(android.net.nsd.NsdServiceInfo,android.net.nsd.NsdManager$ResolveListener)>
SINK|<android.os.INetworkManagementService$Stub$Proxy: void setInterfaceConfig(java.lang.String,android.net.InterfaceConfiguration)>
SINK|<android.content.Intent: android.content.Intent setDataAndNormalize(android.net.Uri)>
SINK|<com.android.server.BackupManagerService: void restoreAtInstall(java.lang.String,int)>
SINK|<java.time.format.DateTimeFormatter: java.time.temporal.TemporalAccessor parse(java.lang.CharSequence)>
SINK|<android.view.GestureDetector: void setIsLongpressEnabled(boolean)>
SINK|<java.util.BitSet: void set(int,int,boolean)>
SINK|<android.widget.AbsListView: boolean setFrame(int,int,int,int)>
SINK|<org.apache.harmony.security.asn1.ASN1UTCTime: void setEncodingContent(org.apache.harmony.security.asn1.BerOutputStream)>
SINK|<com.android.videoeditor.service.ApiService$9: void onProgress(int)>
SINK|<com.android.mms.ui.BasicSlideEditorView: void setImage(java.lang.String,android.graphics.Bitmap)>
SINK|<com.android.gallery3d.data.Path: void setObject(com.android.gallery3d.data.MediaObject)>
SINK|<android.content.ContextWrapper: void startActivities(android.content.Intent[])>
SINK|<com.android.server.wm.WindowManagerService: void setFocusedApp(android.os.IBinder,boolean)>
SINK|<java.net.URLConnection: void setConnectTimeout(int)>
SINK|<com.android.contacts.interactions.PhoneNumberInteraction: void onLoadComplete(android.content.Loader,android.database.Cursor)>
SINK|<com.android.server.am.ActivityManagerService: void grantUriPermissionUncheckedLocked(int,java.lang.String,android.net.Uri,int,com.android.server.am.UriPermissionOwner)>
SINK|<android.view.View: boolean performHapticFeedback(int,int)>
SINK|<android.widget.ImageView: void setAlpha(int)>
SINK|<android.media.audiofx.EnvironmentalReverb: void setDensity(short)>
SINK|<com.android.server.NotificationManagerService: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
SINK|<com.android.server.EventLogTags: void writeLockdownVpnConnected(int)>
SINK|<org.apache.http.impl.cookie.BasicClientCookie: void setComment(java.lang.String)>
SINK|<android.telephony.CellInfoCdma: void writeToParcel(android.os.Parcel,int)>
SINK|<android.app.Dialog: void setCancelable(boolean)>
SINK|<android.net.LocalSocketImpl: void access$600(android.net.LocalSocketImpl,byte[],int,int,java.io.FileDescriptor)>
SINK|<com.android.launcher2.Launcher: void bindFolders(java.util.HashMap)>
SINK|<android.graphics.drawable.ClipDrawable: void setColorFilter(android.graphics.ColorFilter)>
SINK|<android.webkit.WebSettings: void setSerifFontFamily(java.lang.String)>
SINK|<java.security.cert.PKIXParameters: void setRevocationEnabled(boolean)>
SINK|<com.google.android.apps.lightcycle.panorama.IncrementalAligner: void addImage(java.lang.String,float[],int)>
SINK|<android.widget.ListView: void setDividerHeight(int)>
SINK|<android.view.IWindowSession$Stub$Proxy: int addWithoutInputChannel(android.view.IWindow,int,android.view.WindowManager$LayoutParams,int,android.graphics.Rect)>
SINK|<com.android.internal.app.ActionBarImpl: void setBackgroundDrawable(android.graphics.drawable.Drawable)>
SINK|<android.content.SyncInfo: void writeToParcel(android.os.Parcel,int)>
SINK|<android.graphics.drawable.GradientDrawable: void setDither(boolean)>
SINK|<android.net.wifi.p2p.WifiP2pService$P2pStateMachine$OngoingGroupRemovalState: boolean processMessage(android.os.Message)>
SINK|<android.widget.ScrollView: boolean performAccessibilityAction(int,android.os.Bundle)>
SINK|<java.net.DatagramSocket: void setDatagramSocketImplFactory(java.net.DatagramSocketImplFactory)>
SINK|<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
SINK|<com.android.server.NsdService$NsdStateMachine$DisabledState: boolean processMessage(android.os.Message)>
SINK|<com.android.gallery3d.data.MediaDetails: void addDetail(int,java.lang.Object)>
SINK|<com.android.internal.logging.AndroidHandler: void publish(java.util.logging.Logger,java.lang.String,java.util.logging.Level,java.lang.String)>
SINK|<com.android.contacts.model.RawContactDelta$ValuesDelta: void writeToParcel(android.os.Parcel,int)>
SINK|<com.android.browser.BookmarkItem: void setFaviconBackground(android.graphics.drawable.Drawable)>
SINK|<android.app.Dialog: void setOnShowListener(android.content.DialogInterface$OnShowListener)>
SINK|<android.widget.TextView: void setMinWidth(int)>
SINK|<android.net.wifi.p2p.WifiP2pService$P2pStateMachine$P2pDisablingState: boolean processMessage(android.os.Message)>
SINK|<android.view.animation.AnimationSet: void setRepeatMode(int)>
SINK|<javax.xml.parsers.DocumentBuilder: org.w3c.dom.Document parse(java.io.InputStream)>
SINK|<com.android.contacts.voicemail.VoicemailPlaybackFragment$TextViewWithMessagesController: void setTemporaryText(java.lang.String,long,java.util.concurrent.TimeUnit)>
SINK|<android.webkit.WebSettings: void setMinimumFontSize(int)>
SINK|<java.nio.FloatToByteBufferAdapter: java.nio.FloatBuffer put(int,float)>
SINK|<com.android.internal.telephony.cdma.CDMALTEPhone: void setSmscAddress(java.lang.String,android.os.Message)>
SINK|<java.io.ObjectOutputStream: java.lang.Object replaceObject(java.lang.Object)>
SINK|<com.android.phone.ManageConferenceUtils: void setPanelVisible(boolean)>
SINK|<gov.nist.core.MultiValueMapImpl: java.lang.Object put(java.lang.Object,java.lang.Object)>
SINK|<android.opengl.Matrix: void setLookAtM(float[],int,float,float,float,float,float,float,float,float,float)>
SINK|<android.speech.IRecognitionListener$Stub$Proxy: void onError(int)>
SINK|<com.android.internal.telephony.sip.SipPhoneBase: void notifySuppServiceFailed(com.android.internal.telephony.Phone$SuppService)>
SINK|<org.apache.harmony.xnet.provider.jsse.OpenSSLSocketImpl: void setEnableSessionCreation(boolean)>
SINK|<gov.nist.javax.sip.header.ParametersHeader: void setMultiParameter(java.lang.String,java.lang.String)>
SINK|<java.util.Calendar: void setTimeZone(java.util.TimeZone)>
SINK|<com.android.bluetooth.hfp.HeadsetStateMachine$Pending: boolean processMessage(android.os.Message)>
SINK|<android.drm.DrmManagerClient$EventHandler: void handleMessage(android.os.Message)>
SINK|<com.android.internal.telephony.RIL: void handleCallSetupRequestFromSim(boolean,android.os.Message)>
SINK|<com.android.internal.telephony.cdma.CdmaDataConnectionTracker: void onDisconnectDone(int,android.os.AsyncResult)>
SINK|<com.android.internal.telephony.BaseCommands: void setOnSuppServiceNotification(android.os.Handler,int,java.lang.Object)>
SINK|<android.view.textservice.SpellCheckerSession$SpellCheckerSessionListenerImpl: void onGetSentenceSuggestions(android.view.textservice.SentenceSuggestionsInfo[])>
SINK|<android.widget.ImageSwitcher: void setImageResource(int)>
SINK|<android.gesture.GestureOverlayView: void setGestureStrokeLengthThreshold(float)>
SINK|<java.time.chrono.JapaneseDate: java.lang.Object writeReplace()>
SINK|<com.android.internal.view.IInputMethodSession$Stub$Proxy: void updateExtractedText(int,android.view.inputmethod.ExtractedText)>
SINK|<org.apache.harmony.xnet.provider.jsse.SSLServerSocketImpl: void setEnabledCipherSuites(java.lang.String[])>
SINK|<android.os.storage.StorageManager$ObbActionListener: int addListener(android.os.storage.OnObbStateChangeListener)>
SINK|<com.android.uiautomator.core.InteractionController: boolean sendText(java.lang.String)>
SINK|<com.android.email.Controller: void sendMeetingResponse(long,int)>
SINK|<com.android.internal.telephony.RIL: void setCdmaRoamingPreference(int,android.os.Message)>
SINK|<com.android.browser.BaseUi: void showComboView(com.android.browser.UI$ComboViews,android.os.Bundle)>
SINK|<com.android.server.am.ActivityManagerService: void signalPersistentProcesses(int)>
SINK|<com.android.emailcommon.provider.EmailContent: int update(android.content.Context,android.content.ContentValues)>
SINK|<java.io.RandomAccessFile: void writeChars(java.lang.String)>
SINK|<gov.nist.javax.sip.DialogFilter: void processRequest(gov.nist.javax.sip.message.SIPRequest,gov.nist.javax.sip.stack.MessageChannel)>
SINK|<android.net.sip.SipManager: void open(android.net.sip.SipProfile)>
SINK|<com.android.server.pm.PackageManagerService: void sendPackageBroadcast(java.lang.String,java.lang.String,android.os.Bundle,java.lang.String,android.content.IIntentReceiver,int[])>
SINK|<gov.nist.javax.sip.message.SIPMessage: void setHeader(gov.nist.javax.sip.header.SIPHeaderList)>
SINK|<android.preference.CheckBoxPreference: void setSummaryOn(int)>
SINK|<android.content.Loader: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
SINK|<android.telephony.ServiceState: void setOperatorName(java.lang.String,java.lang.String,java.lang.String)>
SINK|<com.android.email.GroupMessagingListener: void sendPendingMessagesCompleted(long)>
SINK|<com.android.internal.telephony.RIL: void rejectCall(android.os.Message)>
SINK|<com.android.server.DevicePolicyManagerService: int setStorageEncryption(android.content.ComponentName,boolean,int)>
SINK|<com.android.internal.net.VpnConfig: void writeToParcel(android.os.Parcel,int)>
SINK|<com.android.phone.PhoneInterfaceManager: boolean handlePinMmi(java.lang.String)>
SINK|<android.app.Activity: void startActivityForResult(android.content.Intent,int,android.os.Bundle)>
SINK|<com.android.internal.view.RotationPolicy: void setRotationLockForAccessibility(android.content.Context,boolean)>
SINK|<java.security.cert.PKIXParameters: void setCertStores(java.util.List)>
SINK|<com.android.browser.provider.BrowserProvider2$DatabaseHelper: void onCreate(android.database.sqlite.SQLiteDatabase)>
SINK|<android.webkit.WebViewClassic$FocusTransitionDrawable: void setAlpha(int)>
SINK|<android.view.GLES20DisplayList: void setScaleX(float)>
SINK|<android.renderscript.ProgramVertexFixedFunction$Constants: void setTexture(android.renderscript.Matrix4f)>
SINK|<android.filterfw.core.SimpleFrame: void setData(java.nio.ByteBuffer,int,int)>
SINK|<com.android.server.NetworkManagementService: void setInterfaceAlert(java.lang.String,long)>
SINK|<com.android.bluetooth.btservice.AdapterService$AdapterServiceBinder: boolean setDiscoverableTimeout(int)>
SINK|<com.android.internal.telephony.DefaultPhoneNotifier: void notifyMessageWaitingChanged(com.android.internal.telephony.Phone)>
SINK|<com.android.internal.telephony.cdma.CDMAPhone: void setCdmaSubscription(int,android.os.Message)>
SINK|<com.android.email.ControllerResultUiThreadWrapper: void setRegistered(boolean)>
SINK|<com.android.server.wm.WindowStateAnimator$SurfaceTrace: void setSize(int,int)>
SINK|<android.webkit.WebViewClassic$FocusTransitionDrawable: void setColorFilter(android.graphics.ColorFilter)>
SINK|<gov.nist.javax.sip.header.ims.SecurityAgree: void setMode(java.lang.String)>
SINK|<android.media.ToneGenerator: boolean startTone(int)>
SINK|<java.net.URL: void setURLStreamHandlerFactory(java.net.URLStreamHandlerFactory)>
SINK|<com.android.mms.util.DownloadManager: void markState(android.net.Uri,int)>
SINK|<java.net.Socks4Message: void setCommandOrResult(int)>
SINK|<android.view.animation.Animation: void setInterpolator(android.content.Context,int)>
SINK|<com.android.server.wm.DimSurface: void printTo(java.lang.String,java.io.PrintWriter)>
SINK|<android.view.View: void setBackgroundDrawable(android.graphics.drawable.Drawable)>
SINK|<android.net.wifi.p2p.WifiP2pDeviceList: void updateGroupCapability(java.lang.String,int)>
SINK|<android.net.http.Headers: void setLocation(java.lang.String)>
SINK|<android.widget.TabWidget: void setCurrentTab(int)>
SINK|<com.android.internal.telephony.cdma.CDMALTEPhone: void sendDtmf(char)>
SINK|<android.app.ContextImpl: void startActivity(android.content.Intent)>
SINK|<com.android.videoeditor.VideoEditorBaseActivity$ServiceListener: void onEffectRemoved(java.lang.String,java.lang.String,java.lang.String,java.lang.Exception)>
SINK|<com.android.nfc.NfcService$NfcAdapterExtrasService: android.os.Bundle open(java.lang.String,android.os.IBinder)>
SINK|<com.android.internal.telephony.RIL: void setCallForward(int,int,int,java.lang.String,int,android.os.Message)>
SINK|<com.android.email.Email: void enableStrictMode(boolean)>
SINK|<com.android.internal.os.LoggingPrintStream: void write(byte[])>
SINK|<com.android.mms.ui.SlideListItemView: void setText(java.lang.String,java.lang.String)>
SINK|<android.view.View: void setIsRootNamespace(boolean)>
SINK|<android.os.storage.StorageManager$MountServiceBinderListener: void onStorageStateChanged(java.lang.String,java.lang.String,java.lang.String)>
SINK|<java.io.FilterOutputStream: void write(int)>
SINK|<java.io.OutputStream: void write(byte[])>
SINK|<android.appwidget.AppWidgetManager: boolean bindAppWidgetIdIfAllowed(int,android.content.ComponentName)>
SINK|<android.widget.ProgressBar: void setIndeterminate(boolean)>
SINK|<android.text.Selection: void setSelection(android.text.Spannable,int,int)>
SINK|<com.android.contacts.interactions.TestLoaderManager: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
SINK|<android.widget.CheckedTextView: void setCheckMarkDrawable(android.graphics.drawable.Drawable)>
SINK|<com.android.email.activity.EmailActivity$ControllerResult: void sendMailCallback(com.android.emailcommon.mail.MessagingException,long,long,int)>
SINK|<org.json.JSONArray: java.lang.String toString(int)>
SINK|<gov.nist.javax.sip.SipStackImpl: void <init>
SINK|<com.android.internal.telephony.DataConnectionAc: void reqSetReconnectIntent(android.app.PendingIntent)>
SINK|<gov.nist.javax.sip.header.ims.PServedUser: void setRegistrationState(java.lang.String)>
SINK|<com.android.mms.ui.SlideListItemView: void setImageRegionFit(java.lang.String)>
SINK|<com.google.android.mms.pdu.GenericPdu: void setMessageType(int)>
SINK|<android.net.DhcpStateMachine$RunningState: boolean processMessage(android.os.Message)>
SINK|<android.os.IPermissionController$Stub$Proxy: boolean checkPermission(java.lang.String,int,int)>
SINK|<android.bluetooth.BluetoothDevice: boolean setPairingConfirmation(boolean)>
SINK|<android.app.IUiModeManager$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>
SINK|<android.media.MediaPlayer: void addTimedTextSource(java.io.FileDescriptor,long,long,java.lang.String)>
SINK|<com.android.videoeditor.service.ApiService: void setOverlayStartTime(android.content.Context,java.lang.String,java.lang.String,java.lang.String,long)>
SINK|<android.security.IKeyChainService$Stub$Proxy: void installCaCertificate(byte[])>
SINK|<org.apache.harmony.xnet.provider.jsse.SSLSocketImpl: void setUseClientMode(boolean)>
SINK|<android.media.MediaMetadataRetriever: void setDataSource(java.io.FileDescriptor)>
SINK|<com.android.internal.widget.ActionBarView: void setDropdownSelectedPosition(int)>
SINK|<com.android.deskclock.timer.TimerListItem: void setTime(long,boolean)>
SINK|<com.android.server.pm.PackageManagerService: void setComponentEnabledSetting(android.content.ComponentName,int,int,int)>
SINK|<com.android.emailcommon.mail.PackedString$Builder: void put(java.lang.String,java.lang.String)>
SINK|<android.view.inputmethod.CorrectionInfo: void writeToParcel(android.os.Parcel,int)>
SINK|<android.app.ActivityManagerProxy: void unbroadcastIntent(android.app.IApplicationThread,android.content.Intent,int)>
SINK|<com.android.deskclock.Alarm$DaysOfWeek: void set(com.android.deskclock.Alarm$DaysOfWeek)>
SINK|<android.view.View$9: void setValue(java.lang.Object,float)>
SINK|<android.widget.ZoomButtonsController: void setZoomOutEnabled(boolean)>
SINK|<android.webkit.CallbackProxy: boolean onJsBeforeUnload(java.lang.String,java.lang.String)>
SINK|<android.webkit.WebView: void setWebChromeClient(android.webkit.WebChromeClient)>
SINK|<org.apache.http.params.HttpProtocolParams: void setMalformedInputAction(org.apache.http.params.HttpParams,java.nio.charset.CodingErrorAction)>
SINK|<android.animation.ValueAnimator: void setFrameDelay(long)>
SINK|<android.app.AlarmManager: void setTime(long)>
SINK|<com.android.server.ThrottleService$DataRecorder: boolean setNextPeriod(java.util.Calendar,java.util.Calendar)>
SINK|<android.app.admin.DevicePolicyManager: void setPasswordExpirationTimeout(android.content.ComponentName,long)>
SINK|<com.android.internal.telephony.cdma.CDMALTEPhone: void enableEnhancedVoicePrivacy(boolean,android.os.Message)>
SINK|<android.os.Bundle: void putDoubleArray(java.lang.String,double[])>
SINK|<android.widget.OverScroller: void startScroll(int,int,int,int,int)>
SINK|<com.android.email.activity.setup.AccountSettingsUtils: void commitSettings(android.content.Context,com.android.emailcommon.provider.Account)>
SINK|<libcore.icu.RuleBasedCollatorICU: void setStrength(int)>
SINK|<android.hardware.usb.UsbManager: void setMassStorageBackingFile(java.lang.String)>
SINK|<android.os.INetworkManagementService$Stub$Proxy: void flushInterfaceDnsCache(java.lang.String)>
SINK|<com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadataCollection: void writeExternal(java.io.ObjectOutput)>
SINK|<android.content.SyncStatusInfo: void setPeriodicSyncTime(int,long)>
SINK|<com.android.deskclock.SettingsActivity: boolean onPreferenceChange(android.preference.Preference,java.lang.Object)>
SINK|<com.android.gallery3d.ui.GLCanvasImpl$GLState: void setColorMode(int,float)>
SINK|<java.util.zip.DeflaterOutputStream: void write(int)>
SINK|<com.android.internal.telephony.gsm.GsmCallTracker: com.android.internal.telephony.Connection dial(java.lang.String,com.android.internal.telephony.UUSInfo)>
SINK|<android.media.IMediaScannerService$Stub$Proxy: void scanFile(java.lang.String,java.lang.String)>
SINK|<android.webkit.WebView: void setVerticalScrollbarOverlay(boolean)>
SINK|<org.apache.http.impl.io.AbstractSessionOutputBuffer: void handleEncodingResult(java.nio.charset.CoderResult)>
SINK|<com.android.internal.telephony.MccTable: void updateMccMncConfiguration(android.content.Context,java.lang.String)>
SINK|<com.google.android.mms.pdu.NotificationInd: void setSubject(com.google.android.mms.pdu.EncodedStringValue)>
SINK|<org.json.JSONObject: org.json.JSONObject put(java.lang.String,int)>
SINK|<android.media.AudioManager: void setMasterMute(boolean,int)>
SINK|<android.view.accessibility.IAccessibilityInteractionConnectionCallback$Stub$Proxy: void setFindAccessibilityNodeInfoResult(android.view.accessibility.AccessibilityNodeInfo,int)>
SINK|<com.android.phone.RespondViaSmsManager$RespondViaSmsItemClickListener: void onItemClick(android.widget.AdapterView,android.view.View,int,long)>
SINK|<android.hardware.Camera$Parameters: void setJpegQuality(int)>
SINK|<android.webkit.MockGeolocation: void setError(int,java.lang.String)>
SINK|<com.android.mms.transaction.TransactionService: void update(com.android.mms.transaction.Observable)>
SINK|<android.accounts.AccountManager: void setUserData(android.accounts.Account,java.lang.String,java.lang.String)>
SINK|<android.app.DownloadManager$Request: android.content.ContentValues toContentValues(java.lang.String)>
SINK|<com.android.internal.textservice.ITextServicesManager$Stub$Proxy: void finishSpellCheckerService(com.android.internal.textservice.ISpellCheckerSessionListener)>
SINK|<android.content.ContentResolver: void setMasterSyncAutomatically(boolean)>
SINK|<com.android.browser.PageDialogsHandler: void setHttpAuthUsernamePassword(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>
SINK|<android.content.ContentProviderProxy: int delete(android.net.Uri,java.lang.String,java.lang.String[])>
SINK|<android.widget.RemoteViews: void setIntent(int,java.lang.String,android.content.Intent)>
SINK|<org.apache.http.conn.params.ConnManagerParams: void setMaxTotalConnections(org.apache.http.params.HttpParams,int)>
SINK|<com.android.gallery3d.data.MediaDetails: void setUnit(int,int)>
SINK|<com.android.htmlviewer.HTMLViewerActivity: void onCreate(android.os.Bundle)>
SINK|<com.android.contacts.voicemail.VoicemailPlaybackFragment$PlaybackViewImpl: void setStartStopListener(android.view.View$OnClickListener)>
SINK|<com.android.gallery3d.filtershow.imageshow.ImageShow: void setImagePreset(com.android.gallery3d.filtershow.presets.ImagePreset)>
SINK|<android.webkit.WebSettings: void setJavaScriptEnabled(boolean)>
SINK|<com.android.emailcommon.internet.MimeMessage: void setHeader(java.lang.String,java.lang.String)>
SINK|<android.widget.ShareActionProvider: void setShareIntent(android.content.Intent)>
SINK|<com.android.wallpaper.RenderScriptScene: void setOffset(float,float,int,int)>
SINK|<android.view.accessibility.AccessibilityNodeInfo: void setLongClickable(boolean)>
SINK|<com.android.browser.widget.BookmarkThumbnailWidgetService$StateFilter: boolean accept(java.io.File,java.lang.String)>
SINK|<android.content.ContextWrapper: void sendStickyOrderedBroadcast(android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>
SINK|<android.text.Selection: void setSelection(android.text.Spannable,int)>
SINK|<android.widget.ImageView: void setImageBitmap(android.graphics.Bitmap)>
SINK|<android.app.Activity: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
SINK|<android.view.inputmethod.InputConnectionWrapper: boolean setComposingText(java.lang.CharSequence,int)>
SINK|<android.mtp.MtpServer: void sendObjectRemoved(int)>
SINK|<javax.xml.parsers.DocumentBuilderFactory: void setIgnoringElementContentWhitespace(boolean)>
SINK|<android.widget.DatePicker: void setMaxDate(long)>
SINK|<com.android.deskclock.timer.CountingTimerView: void setTextColor(int)>
SINK|<android.view.inputmethod.BaseInputConnection: boolean setSelection(int,int)>
SINK|<java.time.LocalTime: java.lang.Object writeReplace()>
SINK|<android.webkit.WebSettings: void setPluginState(android.webkit.WebSettings$PluginState)>
SINK|<android.app.ApplicationThreadProxy: void setHttpProxy(java.lang.String,java.lang.String,java.lang.String)>
SINK|<gov.nist.javax.sip.header.RAck: void setRSeqNumber(int)>
SINK|<android.net.wifi.WifiManager$ServiceHandler: void handleMessage(android.os.Message)>
SINK|<org.xml.sax.helpers.LocatorImpl: void setSystemId(java.lang.String)>
SINK|<android.webkit.WebSettings: void setAppCacheMaxSize(long)>
SINK|<com.android.bluetooth.hfp.HeadsetService: boolean connect(android.bluetooth.BluetoothDevice)>
SINK|<android.view.IWindowSession$Stub$Proxy: void setTransparentRegion(android.view.IWindow,android.graphics.Region)>
SINK|<android.widget.TabHost: void setCurrentTabByTag(java.lang.String)>
SINK|<android.database.CursorWindow: void setStartPosition(int)>
SINK|<com.android.server.net.NetworkIdentitySet: void writeToStream(java.io.DataOutputStream)>
SINK|<com.android.internal.telephony.CallerInfoAsyncQuery: com.android.internal.telephony.CallerInfoAsyncQuery startQuery(int,android.content.Context,java.lang.String,com.android.internal.telephony.CallerInfoAsyncQuery$OnQueryCompleteListener,java.lang.Object)>
SINK|<com.android.server.am.BroadcastRecord: void dump(java.io.PrintWriter,java.lang.String)>
SINK|<com.android.internal.widget.ILockSettings$Stub$Proxy: void setLockPassword(byte[],int)>
SINK|<com.android.email.activity.setup.AccountSecurity$SecurityNeededDialog: com.android.email.activity.setup.AccountSecurity$SecurityNeededDialog newInstance(java.lang.String)>
SINK|<com.android.internal.telephony.test.SimulatedCommands: void setGsmBroadcastConfig(com.android.internal.telephony.gsm.SmsBroadcastConfigInfo[],android.os.Message)>
SINK|<com.android.launcher2.LauncherModel: void moveItemInDatabase(android.content.Context,com.android.launcher2.ItemInfo,long,int,int,int)>
SINK|<com.android.internal.os.AndroidPrintStream: void log(java.lang.String)>
SINK|<android.content.Intent: android.content.Intent setDataAndTypeAndNormalize(android.net.Uri,java.lang.String)>
SINK|<com.android.server.sip.SipSessionGroup$SipSessionCallReceiverImpl: boolean process(java.util.EventObject)>
SINK|<com.android.gallery3d.exif.ExifTag: void setValue(byte[])>
SINK|<com.android.server.BackupManagerService$PerformFullBackupTask: void access$900(com.android.server.BackupManagerService$PerformFullBackupTask,android.content.pm.PackageInfo,java.io.File,boolean)>
SINK|<android.net.INetworkManagementEventObserver$Stub$Proxy: void interfaceLinkStateChanged(java.lang.String,boolean)>
SINK|<android.media.MediaRouter$WifiDisplayStatusChangedReceiver: void onReceive(android.content.Context,android.content.Intent)>
SINK|<com.android.deskclock.TimerSetupView: void saveEntryState(android.os.Bundle,java.lang.String)>
SINK|<android.net.IConnectivityManager$Stub$Proxy: void setGlobalProxy(android.net.ProxyProperties)>
SINK|<com.android.providers.calendar.CalendarAlarmManager: void set(int,long,android.app.PendingIntent)>
SINK|<android.app.IBackupAgent$Stub$Proxy: void doRestoreFile(android.os.ParcelFileDescriptor,long,int,java.lang.String,java.lang.String,long,long,int,android.app.backup.IBackupManager)>
SINK|<android.util.Slog: int e(java.lang.String,java.lang.String)>
SINK|<com.android.calendar.alerts.AlertAdapter: void bindView(android.view.View,android.content.Context,android.database.Cursor)>
SINK|<android.graphics.drawable.LayerDrawable: void setId(int,int)>
SINK|<android.media.IAudioService$Stub$Proxy: void registerRemoteControlDisplay(android.media.IRemoteControlDisplay)>
SINK|<android.nfc.INfcTag$Stub$Proxy: int connect(int,int)>
SINK|<java.net.HttpCookie: void setPath(java.lang.String)>
SINK|<android.content.ContentService$ObserverNode: void dumpLocked(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[],java.lang.String,java.lang.String,int[],android.util.SparseIntArray)>
SINK|<com.android.gallery3d.data.TagClustering$1: void consume(int,com.android.gallery3d.data.MediaItem)>
SINK|<android.test.mock.MockCursor: boolean updateDouble(int,double)>
SINK|<com.android.deskclock.Alarm$DaysOfWeek: void setDayOfWeek(int,boolean)>
SINK|<android.os.INetworkManagementService$Stub$Proxy: void setFirewallEnabled(boolean)>
SINK|<java.security.cert.PKIXParameters: void setCertPathCheckers(java.util.List)>
SINK|<android.nfc.tech.MifareUltralight: void setTimeout(int)>
SINK|<android.filterfw.core.Filter: void addProgramPort(java.lang.String,java.lang.String,java.lang.reflect.Field,java.lang.Class,boolean)>
SINK|<java.io.RandomAccessFile: void writeFloat(float)>
SINK|<com.android.server.NetworkManagementService: void setFirewallEgressDestRule(java.lang.String,int,boolean)>
SINK|<com.android.inputmethod.latin.suggestions.MoreSuggestionsView: void setKeyboard(com.android.inputmethod.keyboard.Keyboard)>
SINK|<org.apache.http.auth.params.AuthParamBean: void setCredentialCharset(java.lang.String)>
SINK|<android.bluetooth.IBluetoothInputDevice$Stub$Proxy: boolean setReport(android.bluetooth.BluetoothDevice,byte,java.lang.String)>
SINK|<android.support.v4.content.LocalBroadcastManager: void registerReceiver(android.content.BroadcastReceiver,android.content.IntentFilter)>
SINK|<android.graphics.drawable.GradientDrawable: void setColorFilter(android.graphics.ColorFilter)>
SINK|<com.android.mms.dom.smil.SmilRootLayoutElementImpl: void setBackgroundColor(java.lang.String)>
SINK|<com.android.internal.telephony.ITelephony$Stub$Proxy: int disableApnType(java.lang.String)>
SINK|<com.android.phone.InCallUiState: void setProviderInfo(android.content.Intent)>
SINK|<com.android.exchange.adapter.CalendarSyncAdapter: boolean sendLocalChanges(com.android.exchange.adapter.Serializer)>
SINK|<com.android.internal.telephony.CallTracker: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
SINK|<com.android.internal.telephony.sip.SipPhone: void setNetworkSelectionModeAutomatic(android.os.Message)>
SINK|<android.view.IWindowSession$Stub$Proxy: boolean performDrag(android.view.IWindow,android.os.IBinder,float,float,float,float,android.content.ClipData)>
SINK|<com.android.browser.preferences.WebsiteSettingsFragment$Site: void writeToParcel(android.os.Parcel,int)>
SINK|<com.android.systemui.statusbar.phone.PhoneStatusBar: void startActivityDismissingKeyguard(android.content.Intent,boolean)>
SINK|<com.android.providers.contacts.aggregation.ContactAggregator: void updateAggregateData(com.android.providers.contacts.TransactionContext,long)>
SINK|<android.content.IClipboard$Stub$Proxy: void removePrimaryClipChangedListener(android.content.IOnPrimaryClipChangedListener)>
SINK|<org.xml.sax.helpers.NamespaceSupport$Context: void declarePrefix(java.lang.String,java.lang.String)>
SINK|<com.android.server.usb.UsbDeviceManager: android.os.ParcelFileDescriptor openAccessory(android.hardware.usb.UsbAccessory)>
SINK|<android.widget.AbsListView: void setCacheColorHint(int)>
SINK|<android.widget.ImageView: void setImageURI(android.net.Uri)>
SINK|<android.widget.ImageView: void setSelected(boolean)>
SINK|<android.net.sip.SipAudioCall: void setListener(android.net.sip.SipAudioCall$Listener)>
SINK|<java.time.LocalTime: java.time.LocalTime parse(java.lang.CharSequence,java.time.format.DateTimeFormatter)>
SINK|<com.android.email.Controller$ServiceCallback: void syncMailboxStatus(long,int,int)>
SINK|<com.android.server.ConnectivityService$NetworkStateTrackerHandler: void handleMessage(android.os.Message)>
SINK|<org.apache.harmony.xnet.provider.jsse.OpenSSLSocketImpl: void setUseClientMode(boolean)>
SINK|<android.widget.ZoomButtonsController: void setZoomInEnabled(boolean)>
SINK|<android.widget.CursorAdapter: android.database.Cursor runQueryOnBackgroundThread(java.lang.CharSequence)>
SINK|<android.support.v4.view.ViewPager$MyAccessibilityDelegate: boolean performAccessibilityAction(android.view.View,int,android.os.Bundle)>
SINK|<libcore.io.ForwardingOs: void setsockoptIpMreqn(java.io.FileDescriptor,int,int,int)>
SINK|<javax.obex.ServerOperation: void sendHeaders(javax.obex.HeaderSet)>
SINK|<android.app.ActivityManagerProxy: void unregisterReceiver(android.content.IIntentReceiver)>
SINK|<java.text.MessageFormat: java.lang.Object parseObject(java.lang.String,java.text.ParsePosition)>
SINK|<java.util.concurrent.atomic.AtomicReferenceArray: void set(int,java.lang.Object)>
SINK|<gov.nist.javax.sip.header.Contact: void setQValue(float)>
SINK|<junit.framework.TestSuite: void runTest(junit.framework.Test,junit.framework.TestResult)>
SINK|<org.apache.harmony.xnet.provider.jsse.SSLSocketImpl: void setEnabledCipherSuites(java.lang.String[])>
SINK|<java.text.DateFormat: java.lang.Object parseObject(java.lang.String,java.text.ParsePosition)>
SINK|<com.adobe.xmp.options.AliasOptions: com.adobe.xmp.options.AliasOptions setArrayOrdered(boolean)>
SINK|<com.android.providers.contacts.ContactsDatabaseHelper: void setProperty(java.lang.String,java.lang.String)>
SINK|<com.android.server.connectivity.Tethering$TetherMasterSM$TetherMasterUtilState: boolean processMessage(android.os.Message)>
SINK|<android.widget.TableRow: void setOnHierarchyChangeListener(android.view.ViewGroup$OnHierarchyChangeListener)>
SINK|<android.widget.Toast: void setGravity(int,int,int)>
SINK|<com.android.internal.textservice.ISpellCheckerService$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>
SINK|<com.android.internal.app.ActionBarImpl: void setCustomView(int)>
SINK|<com.google.android.mms.pdu.QuotedPrintable: byte[] decodeQuotedPrintable(byte[])>
SINK|<java.io.ObjectOutputStream: void writeUnshared(java.lang.Object)>
SINK|<android.graphics.Matrix: void setScale(float,float)>
SINK|<com.android.commands.monkey.Monkey$ActivityController: int appNotResponding(java.lang.String,int,java.lang.String)>
SINK|<com.android.internal.widget.ILockSettings$Stub$Proxy: boolean checkPattern(byte[],int)>
SINK|<javax.net.ssl.SSLParameters: void setProtocols(java.lang.String[])>
SINK|<com.android.phone.PhoneInterfaceManager: boolean supplyPin(java.lang.String)>
SINK|<com.android.launcher2.WeakReferenceThreadLocal: void set(java.lang.Object)>
SINK|<android.view.LayoutInflater: void setFactory(android.view.LayoutInflater$Factory)>
SINK|<com.android.browser.TabScrollView: void setScroll(int)>
SINK|<android.content.pm.ActivityInfo: void writeToParcel(android.os.Parcel,int)>
SINK|<android.os.IUpdateLock$Stub$Proxy: void acquireUpdateLock(android.os.IBinder,java.lang.String)>
SINK|<java.text.DecimalFormat: void setDecimalSeparatorAlwaysShown(boolean)>
SINK|<android.media.IAudioService$Stub$Proxy: int requestAudioFocus(int,int,android.os.IBinder,android.media.IAudioFocusDispatcher,java.lang.String,java.lang.String)>
SINK|<java.net.DatagramSocket: void setBroadcast(boolean)>
SINK|<com.android.email.activity.ActivityHelper: boolean openUrlInMessage(android.app.Activity,java.lang.String,long)>
SINK|<android.widget.RemoteViews: void setFloat(int,java.lang.String,float)>
SINK|<android.bluetooth.BluetoothDevice: boolean setPin(byte[])>
SINK|<android.widget.OverScroller$SplineOverScroller: void notifyEdgeReached(int,int,int)>
SINK|<android.os.PerformanceCollector: android.os.Bundle stopTiming(java.lang.String)>
SINK|<com.android.server.pm.Settings: boolean disableSystemPackageLPw(java.lang.String)>
SINK|<java.util.concurrent.atomic.AtomicLongFieldUpdater: java.util.concurrent.atomic.AtomicLongFieldUpdater newUpdater(java.lang.Class,java.lang.String)>
SINK|<com.android.internal.telephony.sip.SipPhone: com.android.internal.telephony.Connection dial(java.lang.String,com.android.internal.telephony.UUSInfo)>
SINK|<java.nio.LongToByteBufferAdapter: java.nio.LongBuffer put(long)>
SINK|<com.android.internal.view.IInputConnectionWrapper: void setComposingRegion(int,int)>
SINK|<com.google.android.mms.pdu.RetrieveConf: void setTransactionId(byte[])>
SINK|<android.app.IInstrumentationWatcher$Stub$Proxy: void instrumentationFinished(android.content.ComponentName,int,android.os.Bundle)>
SINK|<java.nio.CharToByteBufferAdapter: java.nio.CharBuffer put(int,char)>
SINK|<android.net.ConnectivityManager: void setMobileDataEnabled(boolean)>
SINK|<java.text.RuleBasedBreakIterator: void setText(java.text.CharacterIterator)>
SINK|<com.android.server.am.ActivityManagerService: android.os.IBinder newUriPermissionOwner(java.lang.String)>
SINK|<android.test.ActivityTestCase: void setActivity(android.app.Activity)>
SINK|<com.android.calendar.selectcalendars.SelectCalendarsSyncAdapter: void onItemClick(android.widget.AdapterView,android.view.View,int,long)>
SINK|<com.android.musicfx.seekbar.ProgressBar: void setProgress(int)>
SINK|<android.preference.Preference: void notifyDependencyChange(boolean)>
SINK|<android.util.Base64$Decoder: boolean process(byte[],int,int,boolean)>
SINK|<android.content.Intent: android.content.Intent putExtra(java.lang.String,short[])>
SINK|<android.widget.ProgressBar$RefreshData: void setNextPoolable(java.lang.Object)>
SINK|<org.apache.http.message.BasicHttpResponse: void setReasonPhrase(java.lang.String)>
SINK|<android.app.LoadedApk: android.app.IServiceConnection forgetServiceDispatcher(android.content.Context,android.content.ServiceConnection)>
SINK|<com.android.server.wm.InputMonitor: void setUpdateInputWindowsNeededLw()>
SINK|<android.app.Notification$Builder: android.app.Notification$Builder setAutoCancel(boolean)>
SINK|<android.graphics.drawable.Drawable: void setCallback(android.graphics.drawable.Drawable$Callback)>
SINK|<java.util.Collections$SynchronizedMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
SINK|<org.apache.http.params.HttpConnectionParamBean: void setTcpNoDelay(boolean)>
SINK|<libcore.io.ForwardingOs: int sendto(java.io.FileDescriptor,java.nio.ByteBuffer,int,java.net.InetAddress,int)>
SINK|<java.util.TreeMap$BoundedMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
SINK|<com.android.calendar.event.AttendeesView: void setEnabled(boolean)>
SINK|<org.apache.harmony.xnet.provider.jsse.ConnectionStateSSLv3: void <init>
SINK|<android.net.wifi.p2p.WifiP2pWfdInfo: boolean setDeviceType(int)>
SINK|<com.google.android.mms.pdu.PduHeaders: void setOctet(int,int)>
SINK|<android.view.GLES20RecordingCanvas: void setNextPoolable(java.lang.Object)>
SINK|<java.net.Socket: void setReuseAddress(boolean)>
SINK|<com.google.common.collect.MapMakerInternalMap$SoftEntry: void setExpirationTime(long)>
SINK|<android.view.View: void setWillNotCacheDrawing(boolean)>
SINK|<java.text.MessageFormat: void setFormat(int,java.text.Format)>
SINK|<android.widget.Gallery: void setSpacing(int)>
SINK|<com.android.internal.telephony.ITelephony$Stub$Proxy: void call(java.lang.String)>
SINK|<java.nio.MappedByteBufferAdapter: java.nio.ByteBuffer putDouble(int,double)>
SINK|<android.app.LoaderManagerImpl: void installLoader(android.app.LoaderManagerImpl$LoaderInfo)>
SINK|<android.widget.MediaController: void setAnchorView(android.view.View)>
SINK|<android.net.BaseNetworkStateTracker: boolean setRadio(boolean)>
SINK|<libcore.icu.NativeDecimalFormat: void setPositivePrefix(java.lang.String)>
SINK|<android.widget.RemoteViews: void setInt(int,java.lang.String,int)>
SINK|<android.content.SyncManager: void dumpSyncState(java.io.PrintWriter)>
SINK|<org.apache.harmony.xnet.provider.jsse.SSLSocketWrapper: void setSoLinger(boolean,int)>
SINK|<org.apache.http.params.HttpConnectionParams: void setConnectionTimeout(org.apache.http.params.HttpParams,int)>
SINK|<com.android.server.DevicePolicyManagerService: void setMaximumTimeToLock(android.content.ComponentName,long,int)>
SINK|<android.preference.PreferenceManager: void setDefaultValues(android.content.Context,int,boolean)>
SINK|<com.google.android.mms.pdu.ReadRecInd: void setReadStatus(int)>
SINK|<org.apache.http.conn.ssl.SSLSocketFactory: void setHostnameVerifier(org.apache.http.conn.ssl.X509HostnameVerifier)>
SINK|<gov.nist.javax.sip.header.AuthenticationInfo: void setCNonce(java.lang.String)>
SINK|<android.graphics.drawable.PictureDrawable: void setPicture(android.graphics.Picture)>
SINK|<java.lang.Thread: void setDefaultUncaughtExceptionHandler(java.lang.Thread$UncaughtExceptionHandler)>
SINK|<android.view.IWindowSession$Stub$Proxy: void setInTouchMode(boolean)>
SINK|<android.content.BroadcastReceiver: void setResultExtras(android.os.Bundle)>
SINK|<com.android.uiautomator.core.UiDevice: void registerWatcher(java.lang.String,com.android.uiautomator.core.UiWatcher)>
SINK|<com.android.email.activity.UIControllerOnePane: void onSaveInstanceState(android.os.Bundle)>
SINK|<org.apache.harmony.xml.dom.NodeImpl: void setNodeValue(java.lang.String)>
SINK|<gov.nist.javax.sip.stack.SIPDialog: void startRetransmitTimer(gov.nist.javax.sip.stack.SIPServerTransaction,javax.sip.message.Response)>
SINK|<org.apache.http.message.BasicLineParser: org.apache.http.StatusLine parseStatusLine(org.apache.http.util.CharArrayBuffer,org.apache.http.message.ParserCursor)>
SINK|<com.android.email.Controller$LegacyListener: void sendPendingMessagesFailed(long,long,java.lang.Exception)>
SINK|<com.android.server.AppWidgetServiceImpl: void updateAppWidgetIds(int[],android.widget.RemoteViews)>
SINK|<android.content.Intent: android.content.Intent replaceExtras(android.os.Bundle)>
SINK|<android.app.ActivityThread$ApplicationThread: void setHttpProxy(java.lang.String,java.lang.String,java.lang.String)>
SINK|<android.inputmethodservice.KeyboardView: void setProximityCorrectionEnabled(boolean)>
SINK|<com.android.phone.NotificationMgr$QueryHandler: void onQueryComplete(int,java.lang.Object,android.database.Cursor)>
SINK|<android.accounts.AccountManagerService: void installNotification(int,android.app.Notification,android.os.UserHandle)>
SINK|<com.android.server.wm.WindowManagerService: void dumpWindowsNoHeaderLocked(java.io.PrintWriter,boolean,java.util.ArrayList)>
SINK|<com.android.exchange.adapter.Serializer: com.android.exchange.adapter.Serializer data(int,java.lang.String)>
SINK|<android.app.ActivityManagerProxy: void publishContentProviders(android.app.IApplicationThread,java.util.List)>
SINK|<com.android.server.sip.SipHelper: javax.sip.ClientTransaction sendRegister(android.net.sip.SipProfile,java.lang.String,int)>
SINK|<com.android.providers.contacts.VoicemailContentTable: android.net.Uri insert(com.android.providers.contacts.VoicemailContentProvider$UriData,android.content.ContentValues)>
SINK|<com.android.mms.transaction.RetryScheduler: void setRetryAlarm(android.content.Context)>
SINK|<java.net.HttpURLConnection: java.io.InputStream getInputStream()>
SINK|<java.security.cert.X509CertSelector: void setCertificateValid(java.util.Date)>
SINK|<com.android.internal.os.BatteryStatsImpl: void setRadioScanningTimeout(long)>
SINK|<android.speech.tts.TextToSpeech: int setSpeechRate(float)>
SINK|<java.util.logging.LogRecord: void setSourceMethodName(java.lang.String)>
SINK|<android.content.ContextWrapper: void sendBroadcast(android.content.Intent,java.lang.String)>
SINK|<org.apache.harmony.xnet.provider.jsse.FileClientSessionCache$Impl: void putSessionData(javax.net.ssl.SSLSession,byte[])>
SINK|<android.view.GLES20DisplayList: void setPivotX(float)>
SINK|<android.app.backup.RestoreSession: int restorePackage(java.lang.String,android.app.backup.RestoreObserver)>
SINK|<com.android.browser.TabControl: void restoreState(android.os.Bundle,long,boolean,boolean)>
SINK|<org.apache.http.entity.ByteArrayEntity: void writeTo(java.io.OutputStream)>
SINK|<android.media.MediaPlayer: void setDataSource(java.lang.String)>
SINK|<org.apache.harmony.xnet.provider.jsse.OpenSSLSocketImpl: void setOOBInline(boolean)>
SINK|<com.android.internal.util.LocalLog: boolean dump(java.io.PrintWriter,java.lang.String,java.lang.String)>
SINK|<android.webkit.Plugin: void setClickHandler(android.webkit.Plugin$PreferencesClickHandler)>
SINK|<android.widget.TextView$SavedState: void writeToParcel(android.os.Parcel,int)>
SINK|<android.app.ActivityManagerProxy: void setProcessForeground(android.os.IBinder,int,boolean)>
SINK|<android.hardware.display.IDisplayManager$Stub$Proxy: void renameWifiDisplay(java.lang.String,java.lang.String)>
SINK|<com.android.launcher2.LauncherModel: void modifyItemInDatabase(android.content.Context,com.android.launcher2.ItemInfo,long,int,int,int,int,int)>
SINK|<org.apache.harmony.security.asn1.ASN1StringType: void setEncodingContent(org.apache.harmony.security.asn1.BerOutputStream)>
SINK|<android.app.ActivityManagerProxy: void serviceDoneExecuting(android.os.IBinder,int,int,int)>
SINK|<com.android.internal.view.menu.MenuBuilder: void restoreActionViewStates(android.os.Bundle)>
SINK|<android.app.Activity: void setIntent(android.content.Intent)>
SINK|<com.android.exchange.EasAccountService: boolean tryProvision(com.android.exchange.EasSyncService)>
SINK|<java.net.URLStreamHandler: void setURL(java.net.URL,java.lang.String,java.lang.String,int,java.lang.String,java.lang.String)>
SINK|<android.telephony.SmsManager: boolean enableCellBroadcast(int)>
SINK|<android.app.Fragment: void startActivityForResult(android.content.Intent,int)>
SINK|<android.view.ViewStub: void setInflatedId(int)>
SINK|<java.time.ZoneOffset: void writeExternal(java.io.DataOutput)>
SINK|<java.time.ZonedDateTime: java.time.ZonedDateTime parse(java.lang.CharSequence,java.time.format.DateTimeFormatter)>
SINK|<com.android.internal.view.InputConnectionWrapper: boolean sendKeyEvent(android.view.KeyEvent)>
SINK|<com.android.exchange.EasSyncService: void sendMeetingResponse(com.android.exchange.MeetingResponseRequest)>
SINK|<android.net.sip.ISipSession$Stub$Proxy: void answerCall(java.lang.String,int)>
SINK|<android.net.wifi.WifiNative: boolean setDeviceName(java.lang.String)>
SINK|<com.android.internal.telephony.PhoneBase: void sendBurstDtmf(java.lang.String,int,int,android.os.Message)>
SINK|<com.android.systemui.statusbar.policy.ToggleSlider: void setChecked(boolean)>
SINK|<com.android.exchange.utility.CalendarUtilities: java.util.TimeZone tziStringToTimeZone(java.lang.String,int)>
SINK|<javax.xml.parsers.DocumentBuilderFactory: void setValidating(boolean)>
SINK|<android.app.Activity: void setProgress(int)>
SINK|<android.animation.PropertyValuesHolder: void setObjectValues(java.lang.Object[])>
SINK|<android.net.NetworkStatsHistory$DataStreamUtils: void writeVarLongArray(java.io.DataOutputStream,long[],int)>
SINK|<com.android.inputmethod.latin.makedict.BinaryDictInputOutput: void writeDictionaryBinary(java.io.OutputStream,com.android.inputmethod.latin.makedict.FusionDictionary,com.android.inputmethod.latin.makedict.FormatSpec$FormatOptions)>
SINK|<com.android.bluetooth.btservice.AdapterService: boolean enable(boolean)>
SINK|<com.android.providers.telephony.MmsSmsProvider: int update(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[])>
SINK|<com.android.internal.telephony.RIL: void setBandMode(int,android.os.Message)>
SINK|<android.accessibilityservice.IAccessibilityServiceConnection$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>
SINK|<android.widget.ActivityChooserView: void setExpandActivityOverflowButtonDrawable(android.graphics.drawable.Drawable)>
SINK|<com.android.camera.ui.Switch: void setSwitchTextAppearance(android.content.Context,int)>
SINK|<android.net.LocalSocketImpl: void setFileDescriptorsForSend(java.io.FileDescriptor[])>
SINK|<com.android.internal.telephony.RIL: void setRadioPower(boolean,android.os.Message)>
SINK|<com.android.email.activity.ThreePaneLayout$SavedState: void writeToParcel(android.os.Parcel,int)>
SINK|<com.android.server.StatusBarManagerService: void setSystemUiVisibility(int,int)>
SINK|<com.android.server.usb.UsbService: void setDevicePackage(android.hardware.usb.UsbDevice,java.lang.String,int)>
SINK|<com.android.vcard.VCardProperty: void setValues(java.lang.String[])>
SINK|<android.webkit.WebViewClassic: boolean savePicture(android.os.Bundle,java.io.File)>
SINK|<com.android.browser.BrowserSettings: void setLastRecovered(long)>
SINK|<android.location.ILocationListener$Stub$Proxy: void onStatusChanged(java.lang.String,int,android.os.Bundle)>
SINK|<android.content.BroadcastReceiver$PendingResult: void setExtrasClassLoader(java.lang.ClassLoader)>
SINK|<de.ecspride.IntentSink2: void startActivity(android.content.Intent)>
SINK|<android.widget.Switch: void setSwitchTypeface(android.graphics.Typeface,int)>
SINK|<com.android.server.am.ActivityManagerService$MemBinder: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
SINK|<com.android.gallery3d.ui.PhotoView: void notifyDataChange(int[],int,int)>
SINK|<libcore.io.Streams: byte[] readFullyNoClose(java.io.InputStream)>
SINK|<com.beetstra.jutf7.UTF7StyleCharsetEncoder: java.nio.charset.CoderResult encodeLoop(java.nio.CharBuffer,java.nio.ByteBuffer)>
SINK|<android.view.Surface: void setAlpha(float)>
SINK|<android.os.ServiceManagerProxy: android.os.IBinder checkService(java.lang.String)>
SINK|<java.io.PrintWriter: void println(java.lang.String)>
SINK|<com.android.exchange.ExchangeService$2: void sendMeetingResponse(long,int)>
SINK|<android.text.style.StyleSpan: void updateDrawState(android.text.TextPaint)>
SINK|<com.android.internal.os.BatteryStatsImpl$Uid: void readFromParcelLocked(java.util.ArrayList,android.os.Parcel)>
SINK|<java.text.DateFormatSymbols: void setLocalPatternChars(java.lang.String)>
SINK|<com.android.server.EventLogTags: void writeLockdownVpnError(int)>
SINK|<android.net.sip.ISipSessionListener$Stub$Proxy: void onRinging(android.net.sip.ISipSession,android.net.sip.SipProfile,java.lang.String)>
SINK|<com.google.android.mms.pdu.NotificationInd: void setMessageSize(long)>
SINK|<java.util.logging.StreamHandler: void setOutputStream(java.io.OutputStream)>
SINK|<org.apache.http.conn.params.ConnRouteParams: void setDefaultProxy(org.apache.http.params.HttpParams,org.apache.http.HttpHost)>
SINK|<android.app.ApplicationThreadProxy: void scheduleLaunchActivity(android.content.Intent,android.os.IBinder,int,android.content.pm.ActivityInfo,android.content.res.Configuration,android.content.res.CompatibilityInfo,android.os.Bundle,java.util.List,java.util.List,boolean,boolean,java.lang.String,android.os.ParcelFileDescriptor,boolean)>
SINK|<android.view.WindowManagerGlobal: void startTrimMemory(int)>
SINK|<android.webkit.WebSettings: void setDefaultFontSize(int)>
SINK|<com.android.email.activity.setup.AccountSetupExchangeFragment: boolean setHostAuthFromAutodiscover(com.android.emailcommon.provider.HostAuth)>
SINK|<android.content.res.AssetFileDescriptor$AutoCloseOutputStream: void write(int)>
SINK|<javax.xml.parsers.SAXParser: void parse(java.lang.String,org.xml.sax.HandlerBase)>
SINK|<android.service.wallpaper.WallpaperService: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
SINK|<android.hardware.Camera$Parameters: void setPreviewFpsRange(int,int)>
SINK|<com.android.contacts.voicemail.VoicemailPlaybackFragment$PlaybackViewImpl: void setIsFetchingContent()>
SINK|<android.app.ApplicationThreadProxy: void scheduleWindowVisibility(android.os.IBinder,boolean)>
SINK|<com.android.bluetooth.btservice.RemoteDevices: com.android.bluetooth.btservice.RemoteDevices$DeviceProperties addDeviceProperties(byte[])>
SINK|<java.util.Calendar: void set(int,int,int)>
SINK|<android.inputmethodservice.InputMethodService: void onUpdateExtractedText(int,android.view.inputmethod.ExtractedText)>
SINK|<com.android.mms.data.WorkingMessage: void setLengthRequiresMms(boolean,boolean)>
SINK|<java.net.Socket: void setReceiveBufferSize(int)>
SINK|<org.xml.sax.helpers.AttributesImpl: void setValue(int,java.lang.String)>
SINK|<android.animation.Animator: void setTarget(java.lang.Object)>
SINK|<android.app.Notification: void setUser(android.os.UserHandle)>
SINK|<android.database.sqlite.SQLiteConnection: long executeForLastInsertedRowId(java.lang.String,java.lang.Object[],android.os.CancellationSignal)>
SINK|<com.android.contacts.model.RawContactDelta$ValuesDelta: void setDisplayName(java.lang.String)>
SINK|<org.apache.http.params.HttpConnectionParams: void setStaleCheckingEnabled(org.apache.http.params.HttpParams,boolean)>
SINK|<com.android.contacts.group.GroupBrowseListFragment: void setAddAccountsVisibility(boolean)>
SINK|<com.android.internal.widget.ActionBarView: void setIcon(int)>
SINK|<com.android.internal.telephony.cdma.CdmaCallTracker: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
SINK|<android.content.pm.ApplicationInfo: void writeToParcel(android.os.Parcel,int)>
SINK|<com.android.server.am.EventLogTags: void writeBootProgressAmsReady(long)>
SINK|<java.io.PrintStream: void println(float)>
SINK|<gov.nist.javax.sip.address.Authority: void setHost(gov.nist.core.Host)>
SINK|<com.android.calendar.alerts.AlertService$NotificationMgrWrapper: void notify(int,com.android.calendar.alerts.AlertService$NotificationWrapper)>
SINK|<gov.nist.javax.sip.address.SipUri: void setIsdnSubAddress(java.lang.String)>
SINK|<gov.nist.javax.sip.header.To: void setTag(java.lang.String)>
SINK|<android.filterfw.core.Frame: void setObjectValue(java.lang.Object)>
SINK|<com.android.nfc.NfcDispatcher$DispatchInfo: boolean tryStartActivity(android.content.Intent)>
SINK|<android.media.IRemoteControlClient$Stub$Proxy: void plugRemoteControlDisplay(android.media.IRemoteControlDisplay)>
SINK|<java.io.PrintWriter: java.io.PrintWriter append(java.lang.CharSequence)>
SINK|<com.android.server.net.NetworkPolicyManagerService: void setUidPolicy(int,int)>
SINK|<com.android.internal.telephony.CallManager: boolean sendDtmf(char)>
SINK|<android.text.PackedIntVector: void setValue(int,int,int)>
SINK|<android.webkit.WebSettings: void setMinimumLogicalFontSize(int)>
SINK|<android.graphics.drawable.LayerDrawable: void setLayerInset(int,int,int,int,int)>
SINK|<java.nio.file.Files: java.nio.file.Path setAttribute(java.nio.file.Path,java.lang.String,java.lang.Object,java.nio.file.LinkOption[])>
SINK|<android.widget.AbsSpinner: void setSelection(int)>
SINK|<com.android.internal.view.menu.MenuBuilder: void setGroupVisible(int,boolean)>
SINK|<com.android.videoeditor.service.MovieOverlay: android.os.Bundle buildUserAttributes(int,java.lang.String,java.lang.String)>
SINK|<com.android.mms.ui.SlideshowAttachmentView: void setImageRegionFit(java.lang.String)>
SINK|<android.view.SurfaceView: void setSecure(boolean)>
SINK|<org.apache.http.impl.client.AbstractHttpClient: java.lang.Object execute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.client.ResponseHandler)>
SINK|<com.android.internal.telephony.sip.SipCommandInterface: void sendUSSD(java.lang.String,android.os.Message)>
SINK|<android.content.ContentProviderProxy: android.os.ParcelFileDescriptor openFile(android.net.Uri,java.lang.String)>
SINK|<android.database.sqlite.SQLiteDatabase: void setLocale(java.util.Locale)>
SINK|<com.android.contacts.ContactSaveService: void onHandleIntent(android.content.Intent)>
SINK|<java.util.logging.LogRecord: void setMessage(java.lang.String)>
SINK|<com.android.bluetooth.btservice.AdapterService: boolean setPasskey(android.bluetooth.BluetoothDevice,boolean,int,byte[])>
SINK|<com.google.android.apps.lightcycle.storage.LocalFileStorageManager: boolean setPanoramaDestination(java.lang.String)>
SINK|<android.os.INetworkManagementService$Stub$Proxy: void untetherInterface(java.lang.String)>
SINK|<com.android.contacts.list.ContactsSectionIndexer: void setProfileHeader(java.lang.String)>
SINK|<android.graphics.drawable.NinePatchDrawable: void setAlpha(int)>
SINK|<com.android.calendar.month.MonthByWeekAdapter: void setSelectedDay(android.text.format.Time)>
SINK|<android.os.INetworkManagementService$Stub$Proxy: void addIdleTimer(java.lang.String,int,java.lang.String)>
SINK|<android.app.ActivityManagerProxy: int startActivityWithConfig(android.app.IApplicationThread,android.content.Intent,java.lang.String,android.os.IBinder,java.lang.String,int,int,android.content.res.Configuration,android.os.Bundle,int)>
SINK|<android.location.ILocationManager$Stub$Proxy: boolean sendNiResponse(int,int)>
SINK|<com.android.server.am.EventLogTags: void writeConfigurationChanged(int)>
SINK|<gov.nist.javax.sip.header.Contact: void setPubGruuParam(java.lang.String)>
SINK|<android.widget.ZoomButtonsController: void setFocusable(boolean)>
SINK|<com.android.internal.appwidget.IAppWidgetService$Stub$Proxy: void deleteHost(int)>
SINK|<android.net.wifi.IWifiManager$Stub$Proxy: boolean setWifiEnabled(boolean)>
SINK|<com.android.contacts.list.DefaultContactBrowseListFragment: void setSearchMode(boolean)>
SINK|<java.time.ZoneOffset: void write(java.io.DataOutput)>
SINK|<com.android.server.NetworkManagementService: void setGlobalAlert(long)>
SINK|<android.app.ResultInfo: void writeToParcel(android.os.Parcel,int)>
SINK|<java.sql.Time: void setYear(int)>
SINK|<com.android.nfc.handover.HandoverService$1: void onReceive(android.content.Context,android.content.Intent)>
SINK|<com.android.mms.ui.SlideView: void setVideoVisibility(boolean)>
SINK|<com.google.common.collect.Lists$ReverseList: java.lang.Object set(int,java.lang.Object)>
SINK|<java.util.Calendar: void setLenient(boolean)>
SINK|<android.app.backup.IBackupManager$Stub$Proxy: void clearBackupData(java.lang.String)>
SINK|<android.filterfw.core.Filter: void setWaitsOnInputPort(java.lang.String,boolean)>
SINK|<java.net.HttpCookie: void setComment(java.lang.String)>
SINK|<java.time.chrono.HijrahDate: java.lang.Object writeReplace()>
SINK|<android.net.SSLCertificateSocketFactory: void setNpnProtocols(byte[][])>
SINK|<android.os.INetworkManagementService$Stub$Proxy: void setFirewallEgressSourceRule(java.lang.String,boolean)>
SINK|<android.app.LoadedApk$WarningContextClassLoader: void setClassAssertionStatus(java.lang.String,boolean)>
SINK|<android.net.wifi.WifiNative: void setPowerSave(boolean)>
SINK|<com.android.internal.telephony.sip.SipCommandInterface: void sendCdmaSms(byte[],android.os.Message)>
SINK|<org.json.JSONObject: org.json.JSONObject put(java.lang.String,long)>
SINK|<android.net.wifi.WifiStateMachine: void setWifiApConfiguration(android.net.wifi.WifiConfiguration)>
SINK|<android.app.admin.DevicePolicyManager: void setMaximumTimeToLock(android.content.ComponentName,long)>
SINK|<com.google.android.picasasync.PicasaApi: void setAuthToken(java.lang.String)>
SINK|<android.gesture.GestureOverlayView: void setGestureStrokeAngleThreshold(float)>
SINK|<com.android.camera.ActivityBase: void setContentView(int)>
SINK|<android.view.animation.LayoutAnimationController: void setAnimation(android.content.Context,int)>
SINK|<android.os.CommonTimeUtils: int transactSetString(int,java.lang.String)>
SINK|<com.android.bluetooth.btservice.BondStateMachine$StableState: boolean processMessage(android.os.Message)>
SINK|<com.android.gallery3d.common.OverScroller: void startScroll(int,int,int,int,int)>
SINK|<com.android.internal.telephony.DataConnection: void setRetryCount(int)>
SINK|<android.app.ActivityManagerProxy: int startActivityAsUser(android.app.IApplicationThread,android.content.Intent,java.lang.String,android.os.IBinder,java.lang.String,int,int,java.lang.String,android.os.ParcelFileDescriptor,android.os.Bundle,int)>
SINK|<android.accounts.IAccountManager$Stub$Proxy: void setAuthToken(android.accounts.Account,java.lang.String,java.lang.String)>
SINK|<android.widget.AdapterViewAnimator: void setRemoteViewsOnClickHandler(android.widget.RemoteViews$OnClickHandler)>
SINK|<android.app.admin.IDevicePolicyManager$Stub$Proxy: void setActiveAdmin(android.content.ComponentName,boolean,int)>
SINK|<org.apache.http.protocol.HttpService: void setHttpProcessor(org.apache.http.protocol.HttpProcessor)>
SINK|<android.net.Proxy: void setHttpProxySystemProperty(java.lang.String,java.lang.String,java.lang.String)>
SINK|<android.app.Instrumentation: android.app.Activity startActivitySync(android.content.Intent)>
SINK|<android.view.animation.AnimationSet: void setDuration(long)>
SINK|<com.android.phone.CallFeaturesSetting: boolean onPreferenceTreeClick(android.preference.PreferenceScreen,android.preference.Preference)>
SINK|<android.filterfw.core.ShaderProgram: void setTargetRect(float,float,float,float)>
SINK|<android.widget.TextView: void setRawInputType(int)>
SINK|<android.widget.RemoteViews: void setViewVisibility(int,int)>
SINK|<gov.nist.javax.sip.message.SIPRequest: byte[] encodeAsBytes(java.lang.String)>
SINK|<javax.security.auth.PrivateCredentialPermission: boolean impliesPrincipalSet(java.util.Set,java.util.Set)>
SINK|<com.android.internal.os.IDropBoxManagerService$Stub$Proxy: boolean isTagEnabled(java.lang.String)>
SINK|<android.preference.PreferenceActivity: void startWithFragment(java.lang.String,android.os.Bundle,android.app.Fragment,int,int,int)>
SINK|<com.android.server.connectivity.Tethering: void interfaceStatusChanged(java.lang.String,boolean)>
SINK|<android.hardware.display.IDisplayManager$Stub$Proxy: void connectWifiDisplay(java.lang.String)>
SINK|<com.android.internal.telephony.ITelephony$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>
SINK|<com.android.server.pm.UserManagerService: void makeInitialized(int)>
SINK|<android.service.dreams.IDreamManager$Stub$Proxy: void setDreamComponents(android.content.ComponentName[])>
SINK|<com.android.camera.PanoProgressBar: void setBackgroundColor(int)>
SINK|<com.google.common.collect.MapMakerInternalMap$AbstractReferenceEntry: void setExpirationTime(long)>
SINK|<com.android.server.DevicePolicyManagerService: void reportSuccessfulPasswordAttempt(int)>
SINK|<android.util.Log: int w(java.lang.String,java.lang.String)>
SINK|<java.nio.charset.CharsetEncoder: boolean isLegalReplacement(byte[])>
SINK|<android.os.Handler: boolean sendEmptyMessage(int)>
SINK|<android.widget.AutoCompleteTextView: void setDropDownBackgroundDrawable(android.graphics.drawable.Drawable)>
SINK|<android.net.sip.ISipService$Stub$Proxy: void setRegistrationListener(java.lang.String,android.net.sip.ISipSessionListener)>
SINK|<android.view.accessibility.IAccessibilityInteractionConnection$Stub$Proxy: void findAccessibilityNodeInfoByAccessibilityId(long,int,android.view.accessibility.IAccessibilityInteractionConnectionCallback,int,int,long)>
SINK|<android.content.pm.IPackageManager$Stub$Proxy: void setInstallerPackageName(java.lang.String,java.lang.String)>
SINK|<android.view.ViewGroup: void setMotionEventSplittingEnabled(boolean)>
SINK|<android.location.Address: void setSubThoroughfare(java.lang.String)>
SINK|<com.android.browser.provider.BrowserProvider2: int updateBookmarksInTransaction(android.content.ContentValues,java.lang.String,java.lang.String[],boolean)>
SINK|<com.android.internal.view.menu.MenuItemImpl: android.view.MenuItem setActionView(int)>
SINK|<com.android.systemui.recent.RecentsHorizontalScrollView: void setLayoutTransition(android.animation.LayoutTransition)>
SINK|<com.android.inputmethod.keyboard.internal.KeyboardCodesSet: void setLanguage(java.lang.String)>
SINK|<com.android.internal.appwidget.IAppWidgetService$Stub$Proxy: boolean bindAppWidgetIdIfAllowed(java.lang.String,int,android.content.ComponentName,android.os.Bundle)>
SINK|<gov.nist.javax.sip.header.AuthenticationInfo: void setNextNonce(java.lang.String)>
SINK|<android.database.sqlite.SQLiteQueryBuilder: void setProjectionMap(java.util.Map)>
SINK|<com.android.internal.telephony.BaseCommands: void setOnCallRing(android.os.Handler,int,java.lang.Object)>
SINK|<com.android.server.WifiService: void startScan(boolean)>
SINK|<java.lang.reflect.Field: void setLong(java.lang.Object,long)>
SINK|<com.android.browser.widget.BookmarkThumbnailWidgetProvider: void onReceive(android.content.Context,android.content.Intent)>
SINK|<android.graphics.drawable.LayerDrawable: void setLayoutDirection(int)>
SINK|<com.android.gallery3d.ui.AlbumSlotRenderer: void setModel(com.android.gallery3d.app.AlbumDataLoader)>
SINK|<android.content.Context: void startActivity(android.content.Intent)>
SINK|<com.android.internal.telephony.gsm.GSMPhone: void setCellBroadcastSmsConfig(int[],android.os.Message)>
SINK|<android.media.MediaRouter$UserRouteInfo: void setVolumeCallback(android.media.MediaRouter$VolumeCallback)>
SINK|<com.android.internal.telephony.sip.SipPhoneBase: void setOnPostDialCharacter(android.os.Handler,int,java.lang.Object)>
SINK|<javax.xml.transform.dom.DOMResult: void setNextSibling(org.w3c.dom.Node)>
SINK|<com.android.internal.telephony.test.SimulatedCommands: void sendEnvelope(java.lang.String,android.os.Message)>
SINK|<com.android.providers.downloads.RealSystemFacade: void sendBroadcast(android.content.Intent)>
SINK|<com.android.mms.ui.AudioAttachmentView: void setVideoThumbnail(java.lang.String,android.graphics.Bitmap)>
SINK|<android.view.Window: void setCallback(android.view.Window$Callback)>
SINK|<com.android.internal.telephony.AdnRecordCache: void updateAdnByIndex(int,com.android.internal.telephony.AdnRecord,int,java.lang.String,android.os.Message)>
SINK|<android.app.NotificationManager: void notify(int,android.app.Notification)>
SINK|<android.webkit.WebSettings: void setTextSize(android.webkit.WebSettings$TextSize)>
SINK|<android.webkit.WebSettings: void setAppCacheEnabled(boolean)>
SINK|<com.android.email.service.EmailServiceUtils$NullEmailService: void sendMail(long)>
SINK|<com.android.launcher2.AppsCustomizePagedView: void setContentType(com.android.launcher2.AppsCustomizePagedView$ContentType)>
SINK|<com.android.email.SecurityPolicy: void policiesRequired(long)>
SINK|<android.view.View: void setDrawingCacheQuality(int)>
SINK|<com.android.exchange.EasSyncService: com.android.exchange.EasResponse sendPing(byte[],int)>
SINK|<android.accounts.AccountManagerService$RemoveAccountSession: void onResult(android.os.Bundle)>
SINK|<android.app.AlertDialog: void setMessage(java.lang.CharSequence)>
SINK|<com.android.systemui.statusbar.phone.PhoneStatusBarView: void startOpeningPanel(com.android.systemui.statusbar.phone.PanelView)>
SINK|<android.content.Intent: android.content.Intent putExtra(java.lang.String,short)>
SINK|<android.database.DatabaseUtils: void dumpCurrentRow(android.database.Cursor,java.io.PrintStream)>
SINK|<com.android.gallery3d.ui.BitmapTexture: void setOpaque(boolean)>
SINK|<com.android.systemui.statusbar.phone.PanelView: void setExpandedHeight(float)>
SINK|<java.lang.invoke.CallSite: void setTargetVolatile(java.lang.invoke.MethodHandle)>
SINK|<com.android.emailcommon.service.IAccountService$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>
SINK|<android.widget.ImageView: void setAdjustViewBounds(boolean)>
SINK|<java.util.concurrent.locks.AbstractQueuedSynchronizer: void setState(int)>
SINK|<org.apache.http.impl.client.AbstractHttpClient: java.lang.Object execute(org.apache.http.client.methods.HttpUriRequest,org.apache.http.client.ResponseHandler,org.apache.http.protocol.HttpContext)>
SINK|<com.android.internal.view.IInputMethodManager$Stub$Proxy: boolean switchToLastInputMethod(android.os.IBinder)>
SINK|<org.apache.http.message.BasicHeaderValueParser: org.apache.http.NameValuePair[] parseParameters(org.apache.http.util.CharArrayBuffer,org.apache.http.message.ParserCursor)>
SINK|<mod.ndk.ActMain: java.lang.String cFuncSendData(java.lang.String)>
SINK|<com.android.videoeditor.VideoEditorBaseActivity$ServiceListener: void onOverlayUserAttributesSet(java.lang.String,java.lang.String,java.lang.String,android.os.Bundle,java.lang.Exception)>
SINK|<android.support.v4.widget.EdgeEffectCompatIcs: void setSize(java.lang.Object,int,int)>
SINK|<android.preference.ListPreference: void setEntryValues(int)>
SINK|<com.android.internal.telephony.cdma.CDMAPhone: void sendBurstDtmf(java.lang.String,int,int,android.os.Message)>
SINK|<android.os.RemoteCallback: void sendResult(android.os.Bundle)>
SINK|<com.android.emailcommon.service.IEmailService$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>
SINK|<android.inputmethodservice.IInputMethodWrapper: void executeMessage(android.os.Message)>
SINK|<android.graphics.ColorMatrix: void setScale(float,float,float,float)>
SINK|<com.android.server.location.PassiveProvider: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
SINK|<java.nio.IntToByteBufferAdapter: java.nio.IntBuffer put(int)>
SINK|<org.apache.harmony.xnet.provider.jsse.SSLEngineImpl: void setWantClientAuth(boolean)>
SINK|<com.android.server.am.ActivityManagerService$DbBinder: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
SINK|<com.android.browser.PreloadedTabControl: void setQuery(java.lang.String)>
SINK|<com.android.internal.os.BatteryStatsImpl: void writeSummaryToParcel(android.os.Parcel)>
SINK|<android.view.inputmethod.InputMethodManager: void sendAppPrivateCommand(android.view.View,java.lang.String,android.os.Bundle)>
SINK|<com.android.internal.telephony.test.SimulatedCommands: void sendUSSD(java.lang.String,android.os.Message)>
SINK|<java.time.format.DateTimeFormatter: java.time.temporal.TemporalAccessor parseBest(java.lang.CharSequence,java.time.temporal.TemporalQuery[])>
SINK|<android.app.Activity: void startActivityFromChild(android.app.Activity,android.content.Intent,int)>
SINK|<java.text.StringCharacterIterator: void setText(java.lang.String)>
SINK|<java.time.chrono.ThaiBuddhistDate: java.lang.Object writeReplace()>
SINK|<android.drm.DrmInfoRequest: void put(java.lang.String,java.lang.Object)>
SINK|<com.google.android.apps.lightcycle.opengl.Sprite: void setTexture(com.google.android.apps.lightcycle.opengl.GLTexture)>
SINK|<android.preference.DialogPreference: void setNegativeButtonText(java.lang.CharSequence)>
SINK|<android.app.IServiceConnection$Stub$Proxy: void connected(android.content.ComponentName,android.os.IBinder)>
SINK|<org.apache.http.impl.auth.RFC2617Scheme: void parseChallenge(org.apache.http.util.CharArrayBuffer,int,int)>
SINK|<com.android.providers.media.MediaThumbRequest: android.net.Uri updateDatabase(android.graphics.Bitmap)>
SINK|<android.graphics.drawable.DrawableContainer: void setAlpha(int)>
SINK|<android.webkit.CallbackProxy: void onReceivedLoginRequest(java.lang.String,java.lang.String,java.lang.String)>
SINK|<com.google.android.mms.pdu.GenericPdu: void setFrom(com.google.android.mms.pdu.EncodedStringValue)>
SINK|<java.net.DatagramSocket: void setTrafficClass(int)>
SINK|<com.android.internal.app.IBatteryStats$Stub$Proxy: void noteStartWakelockFromSource(android.os.WorkSource,int,java.lang.String,int)>
SINK|<android.widget.ViewSwitcher: void setFactory(android.widget.ViewSwitcher$ViewFactory)>
SINK|<com.android.server.DevicePolicyManagerService: boolean hasGrantedPolicy(android.content.ComponentName,int,int)>
SINK|<android.widget.TextView: void setEnabled(boolean)>
SINK|<android.filterfw.core.MutableFrameFormat: void setDimensions(int[])>
SINK|<com.android.emailcommon.service.IEmailService$Stub$Proxy: void loadAttachment(long,boolean)>
SINK|<com.android.launcher2.Launcher: boolean startActivitySafely(android.view.View,android.content.Intent,java.lang.Object)>
SINK|<android.content.Intent: android.content.Intent putExtra(java.lang.String,long[])>
SINK|<com.android.gallery3d.filtershow.filters.ImageFilterRS: void setRenderScriptContext(android.app.Activity)>
SINK|<android.net.LinkCapabilities$1: android.net.LinkCapabilities createFromParcel(android.os.Parcel)>
SINK|<android.graphics.Bitmap: void setPixels(int[],int,int,int,int,int,int)>
SINK|<com.android.mms.dom.smil.SmilRegionElementImpl: void setTop(int)>
SINK|<android.media.IAudioService$Stub$Proxy: void setRemoteSubmixOn(boolean,int)>
SINK|<java.util.BitSet: void set(int,int)>
SINK|<com.android.internal.telephony.IccFileHandler: void updateEFLinearFixed(int,int,byte[],java.lang.String,android.os.Message)>
SINK|<com.android.nfc.handover.HandoverService: void onTransferComplete(com.android.nfc.handover.HandoverTransfer,boolean)>
SINK|<android.preference.Preference: boolean persistFloat(float)>
SINK|<com.android.providers.contacts.aggregation.util.ContactMatcher: void updateScoreWithPhoneNumberMatch(long)>
SINK|<com.android.internal.app.IBatteryStats$Stub$Proxy: void noteFullWifiLockReleased(int)>
SINK|<android.app.ApplicationThreadProxy: void bindApplication(java.lang.String,android.content.pm.ApplicationInfo,java.util.List,android.content.ComponentName,java.lang.String,android.os.ParcelFileDescriptor,boolean,android.os.Bundle,android.app.IInstrumentationWatcher,int,boolean,boolean,boolean,android.content.res.Configuration,android.content.res.CompatibilityInfo,java.util.Map,android.os.Bundle)>
SINK|<com.android.internal.policy.impl.keyguard.PagedView: void setCurrentPage(int)>
SINK|<com.android.server.wm.WindowManagerService: void setAppStartingWindow(android.os.IBinder,java.lang.String,int,android.content.res.CompatibilityInfo,java.lang.CharSequence,int,int,int,android.os.IBinder,boolean)>
SINK|<android.webkit.CallbackProxy: boolean onSavePassword(java.lang.String,java.lang.String,java.lang.String,android.os.Message)>
SINK|<javax.xml.parsers.DocumentBuilder: org.w3c.dom.Document parse(java.io.File)>
SINK|<com.google.android.mms.pdu.DeliveryInd: void setMessageId(byte[])>
SINK|<android.view.IWindow$Stub$Proxy: void dispatchWallpaperCommand(java.lang.String,int,int,int,android.os.Bundle,boolean)>
SINK|<com.android.email.service.AttachmentDownloadService$DownloadSet: void endDownload(long,int)>
SINK|<android.webkit.WebViewDatabaseClassic: void setHttpAuthUsernamePassword(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>
SINK|<gov.nist.javax.sip.header.AuthenticationHeader: void setNonce(java.lang.String)>
SINK|<java.nio.ReadWriteHeapByteBuffer: java.nio.ByteBuffer putDouble(int,double)>
SINK|<com.android.internal.telephony.cat.Input: boolean setIcon(android.graphics.Bitmap)>
SINK|<com.android.phone.PhoneUtils$ConnectionHandler: void handleMessage(android.os.Message)>
SINK|<com.android.internal.telephony.PhoneProxy: com.android.internal.telephony.Connection dial(java.lang.String,com.android.internal.telephony.UUSInfo)>
SINK|<java.net.HttpCookie: java.util.List parse(java.lang.String)>
SINK|<com.android.exchange.utility.SimpleIcsWriter: void writeLine(java.lang.String)>
SINK|<java.lang.AbstractStringBuilder: void setCharAt(int,char)>
SINK|<android.widget.ListView: void setHeaderDividersEnabled(boolean)>
SINK|<com.android.videoeditor.service.ApiService: void setMediaItemRenderingMode(android.content.Context,java.lang.String,java.lang.String,int)>
SINK|<android.preference.RingtonePreference: void setShowSilent(boolean)>
SINK|<android.net.wifi.WifiWatchdogStateMachine$OnlineState: boolean processMessage(android.os.Message)>
SINK|<com.google.android.apps.lightcycle.panorama.PanoramaFrameOverlay: void setTextureId(int)>
SINK|<com.android.internal.widget.multiwaveview.TargetDrawable$DrawableWithAlpha: void setAlpha(int)>
SINK|<android.view.View: void setHasTransientState(boolean)>
SINK|<libcore.net.http.HttpsURLConnectionImpl: void setInstanceFollowRedirects(boolean)>
SINK|<android.media.audiofx.EnvironmentalReverb: void setDecayTime(int)>
SINK|<android.net.wifi.WifiStateTracker: void setPolicyDataEnable(boolean)>
SINK|<android.widget.TextView: void setTextKeepState(java.lang.CharSequence)>
SINK|<android.widget.SearchView: void setIconified(boolean)>
SINK|<android.view.IWindowManager$Stub$Proxy: void overridePendingAppTransitionThumb(android.graphics.Bitmap,int,int,android.os.IRemoteCallback,boolean)>
SINK|<java.text.DecimalFormat: void setPositiveSuffix(java.lang.String)>
SINK|<android.net.sip.ISipService$Stub$Proxy: boolean isRegistered(java.lang.String)>
SINK|<com.android.internal.telephony.BaseCommands: void setOnNewGsmSms(android.os.Handler,int,java.lang.Object)>
SINK|<android.app.FragmentManagerImpl: void dispatchTrimMemory(int)>
SINK|<android.net.wifi.WifiStateMachine$DriverFailedState: boolean processMessage(android.os.Message)>
SINK|<android.net.http.Headers: void setAcceptRanges(java.lang.String)>
SINK|<com.android.soundrecorder.SoundRecorder: void onCreate(android.os.Bundle)>
SINK|<android.net.wifi.WifiConfiguration: void writeToParcel(android.os.Parcel,int)>
SINK|<com.android.server.am.ActivityManagerService: boolean dumpBroadcastsLocked(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[],int,boolean,java.lang.String)>
SINK|<android.support.v13.app.FragmentCompat$ICSMR1FragmentCompatImpl: void setUserVisibleHint(android.app.Fragment,boolean)>
SINK|<android.content.pm.ServiceInfo: void dump(android.util.Printer,java.lang.String)>
SINK|<com.android.exchange.adapter.EmailSyncAdapter$EasEmailSyncParser: void addData(com.android.emailcommon.provider.EmailContent$Message,int)>
SINK|<android.net.wifi.p2p.WifiP2pManager: void cancelConnect(android.net.wifi.p2p.WifiP2pManager$Channel,android.net.wifi.p2p.WifiP2pManager$ActionListener)>
SINK|<com.android.server.am.ActivityManagerService: void updateConfiguration(android.content.res.Configuration)>
SINK|<com.android.server.WiredAccessoryManager: void notifyWiredAccessoryChanged(long,int,int)>
SINK|<com.android.calendar.GeneralPreferences: void setDefaultValues(android.content.Context)>
SINK|<android.widget.AbsSpinner: void setSelection(int,boolean)>
SINK|<java.net.HttpCookie: void setSecure(boolean)>
SINK|<android.net.DummyDataStateTracker: void setUserDataEnable(boolean)>
SINK|<com.android.internal.util.AsyncChannel: android.os.Message sendMessageSynchronously(int,int,int,java.lang.Object)>
SINK|<com.android.contacts.calllog.CallLogAdapter: void injectContactInfoForTest(java.lang.String,java.lang.String,com.android.contacts.calllog.ContactInfo)>
SINK|<com.android.browser.XLargeUi: void setFavicon(com.android.browser.Tab)>
SINK|<com.android.internal.telephony.test.SimulatedCommands: void setCdmaSubscriptionSource(int,android.os.Message)>
SINK|<com.android.internal.telephony.PhoneProxy: void setRadioPower(boolean)>
SINK|<com.android.server.wm.WindowManagerService: void setForcedDisplayDensity(int,int)>
SINK|<android.view.Surface: void setLayerStack(int)>
SINK|<com.android.videoeditor.service.ApiService: void removeEffect(android.content.Context,java.lang.String,java.lang.String,java.lang.String)>
SINK|<com.android.server.display.LogicalDisplay: void dumpLocked(java.io.PrintWriter)>
SINK|<com.android.internal.telephony.RIL: void supplyIccPinForApp(java.lang.String,java.lang.String,android.os.Message)>
SINK|<android.app.ActivityManagerProxy: boolean handleApplicationWtf(android.os.IBinder,java.lang.String,android.app.ApplicationErrorReport$CrashInfo)>
SINK|<android.graphics.drawable.BitmapDrawable: void setColorFilter(android.graphics.ColorFilter)>
SINK|<com.android.internal.telephony.RIL: void dial(java.lang.String,int,android.os.Message)>
SINK|<android.util.LongSparseArray: void setValueAt(int,java.lang.Object)>
SINK|<gov.nist.javax.sip.address.TelephoneNumber: void setParameter(java.lang.String,java.lang.String)>
SINK|<com.android.internal.telephony.cdma.CDMALTEPhone: com.android.internal.telephony.Connection dial(java.lang.String)>
SINK|<java.nio.file.Files: long copy(java.io.InputStream,java.io.OutputStream)>
SINK|<gov.nist.core.DuplicateNameValueList: void set(java.lang.String,java.lang.Object)>
SINK|<com.google.common.io.ByteStreams$ByteArrayDataOutputStream: void write(int)>
SINK|<org.apache.http.params.HttpProtocolParams: void setHttpElementCharset(org.apache.http.params.HttpParams,java.lang.String)>
SINK|<com.android.internal.telephony.PhoneBase: void notifyCellInfo(java.util.List)>
SINK|<com.android.providers.calendar.CalendarProvider2: android.net.Uri insertInTransaction(android.net.Uri,android.content.ContentValues,boolean)>
SINK|<com.android.bluetooth.btservice.RemoteDevices: void aclStateChangeCallback(int,byte[],int)>
SINK|<com.android.server.power.ElectronBeam: void dump(java.io.PrintWriter)>
SINK|<org.apache.http.impl.client.RequestWrapper: void setProtocolVersion(org.apache.http.ProtocolVersion)>
SINK|<android.media.AudioManager: void setBluetoothA2dpOn(boolean)>
SINK|<android.content.ContentResolver: void notifyChange(android.net.Uri,android.database.ContentObserver,boolean)>
SINK|<android.graphics.drawable.ShapeDrawable: void setPadding(android.graphics.Rect)>
SINK|<android.content.pm.ProviderInfo: void writeToParcel(android.os.Parcel,int)>
SINK|<com.android.internal.telephony.sip.SipCommandInterface: void setSmscAddress(java.lang.String,android.os.Message)>
SINK|<org.apache.harmony.xnet.provider.jsse.SSLSocketOutputStream: void write(int)>
SINK|<com.android.camera.ui.PieItem: void setImageResource(android.content.Context,int)>
SINK|<com.android.internal.telephony.gsm.SimSmsInterfaceManager: boolean enableCellBroadcast(int)>
SINK|<com.android.internal.telephony.cdma.CdmaServiceStateTracker: void fixTimeZone(java.lang.String)>
SINK|<com.android.internal.view.menu.ActionMenuItem: android.view.MenuItem setActionView(int)>
SINK|<com.android.internal.policy.impl.PhoneWindowManager: void enableKeyguard(boolean)>
SINK|<android.hardware.Camera$Parameters: void set(java.lang.String,java.lang.String)>
SINK|<android.speech.tts.TextToSpeechService$CallbackMap: void setCallback(android.os.IBinder,android.speech.tts.ITextToSpeechCallback)>
SINK|<android.webkit.WebSettings: void setBlockNetworkLoads(boolean)>
SINK|<com.android.internal.view.menu.MenuItemImpl: android.view.MenuItem setShowAsActionFlags(int)>
SINK|<com.google.android.mms.pdu.EncodedStringValue: void setTextString(byte[])>
SINK|<android.graphics.drawable.ShapeDrawable: void setColorFilter(android.graphics.ColorFilter)>
SINK|<com.android.email.provider.EmailProvider: android.net.Uri insert(android.net.Uri,android.content.ContentValues)>
SINK|<android.os.CommonTimeUtils: int transactSetLong(int,long)>
SINK|<android.util.FloatProperty: void set(java.lang.Object,java.lang.Float)>
SINK|<com.android.internal.app.ActionBarImpl: void setDefaultDisplayHomeAsUpEnabled(boolean)>
SINK|<java.io.OutputStreamWriter: void <init>(java.io.OutputStream)>
SINK|<com.android.gallery3d.ui.PhotoView$FullPicture: void setScreenNail(com.android.gallery3d.ui.ScreenNail)>
SINK|<com.android.internal.telephony.PhoneProxy: void setVoiceMailNumber(java.lang.String,java.lang.String,android.os.Message)>
SINK|<com.android.phone.PhoneGlobals$PhoneAppBroadcastReceiver: void onReceive(android.content.Context,android.content.Intent)>
SINK|<com.android.server.usb.UsbSettingsManager: void accessoryDetached(android.hardware.usb.UsbAccessory)>
SINK|<android.view.HardwareRenderer$Gl20Renderer: void setup(int,int)>
SINK|<android.os.INetworkManagementService$Stub$Proxy: void attachPppd(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>
SINK|<com.android.gallery3d.filtershow.imageshow.ImageSlave: void setPanelController(com.android.gallery3d.filtershow.PanelController)>
SINK|<java.util.Arrays$ArrayList: java.lang.Object set(int,java.lang.Object)>
SINK|<android.graphics.drawable.LayerDrawable: void setDither(boolean)>
SINK|<android.app.backup.IRestoreObserver$Stub$Proxy: void onUpdate(int,java.lang.String)>
SINK|<com.android.server.wm.DimAnimator$Parameters: void printTo(java.lang.String,java.io.PrintWriter)>
SINK|<com.android.internal.telephony.gsm.GSMPhone: void notifyDataConnection(java.lang.String,java.lang.String)>
SINK|<com.android.internal.view.IInputContext$Stub$Proxy: void commitText(java.lang.CharSequence,int)>
SINK|<com.android.launcher2.Launcher: void startGlobalSearch(java.lang.String,boolean,android.os.Bundle,android.graphics.Rect)>
SINK|<android.widget.OverScroller: void startScroll(int,int,int,int)>
SINK|<java.util.concurrent.CompletableFuture: java.util.concurrent.CompletableFuture runAsync(java.lang.Runnable,java.util.concurrent.Executor)>
SINK|<android.content.Intent: android.content.Intent putExtra(java.lang.String,char)>
SINK|<android.app.SharedPreferencesImpl$EditorImpl: android.content.SharedPreferences$Editor putFloat(java.lang.String,float)>
SINK|<android.accounts.AccountManagerService: void getAccountsByFeatures(android.accounts.IAccountManagerResponse,java.lang.String,java.lang.String[])>
SINK|<android.preference.Preference: void setOnPreferenceChangeListener(android.preference.Preference$OnPreferenceChangeListener)>
SINK|<android.widget.TabHost: void setOnTabChangedListener(android.widget.TabHost$OnTabChangeListener)>
SINK|<android.media.audiofx.AudioEffect: int setParameter(int,short)>
SINK|<com.android.providers.contacts.aggregation.ContactAggregator: void updateStarred(long)>
SINK|<android.appwidget.AppWidgetManager: void setBindAppWidgetPermission(java.lang.String,boolean)>
SINK|<libcore.net.http.HttpConnection: void setRecycled()>
SINK|<com.android.videoeditor.service.ApiService: void loadVideoEditor(android.content.Context,java.lang.String)>
SINK|<com.android.internal.telephony.gsm.GsmDataConnectionTracker: void onDisconnectDone(int,android.os.AsyncResult)>
SINK|<com.android.server.sip.SipHelper: void sendReferNotify(javax.sip.Dialog,java.lang.String)>
SINK|<android.view.View: void setHapticFeedbackEnabled(boolean)>
SINK|<android.filterfw.core.MutableFrameFormat: void setDimensions(int,int)>
SINK|<gov.nist.javax.sip.header.ParametersHeader: void setParameter(java.lang.String,float)>
SINK|<android.content.ContextWrapper: void sendOrderedBroadcast(android.content.Intent,java.lang.String)>
SINK|<com.android.gallery3d.exif.OrderedDataOutputStream: void setByteOrder(java.nio.ByteOrder)>
SINK|<com.google.android.apps.lightcycle.util.MetadataUtils: void writeMetadataIntoJpegFile(java.lang.String,java.lang.String,java.lang.String,boolean)>
SINK|<android.location.LocationManager: void requestLocationUpdates(long,float,android.location.Criteria,android.app.PendingIntent)>
SINK|<com.android.server.sip.SipService: void open(android.net.sip.SipProfile)>
SINK|<android.widget.TextView: void setWidth(int)>
SINK|<org.apache.harmony.security.x509.CRLDistributionPoints: void dumpValue(java.lang.StringBuilder,java.lang.String)>
SINK|<com.android.internal.app.IBatteryStats$Stub$Proxy: void noteStartSensor(int,int)>
SINK|<javax.obex.PrivateOutputStream: void write(byte[])>
SINK|<com.android.server.sip.SipHelper: void sendBye(javax.sip.Dialog)>
SINK|<android.widget.MultiAutoCompleteTextView: void setTokenizer(android.widget.MultiAutoCompleteTextView$Tokenizer)>
SINK|<com.android.mms.model.SlideshowModel: com.android.mms.model.SlideModel set(int,com.android.mms.model.SlideModel)>
SINK|<com.android.contacts.editor.TextFieldsEditorView: void onFieldChanged(java.lang.String,java.lang.String)>
SINK|<android.os.Bundle: void putCharArray(java.lang.String,char[])>
SINK|<com.android.gallery3d.exif.CountedDataInputStream: void setByteOrder(java.nio.ByteOrder)>
SINK|<android.os.storage.IMountService$Stub$Proxy: int unmountSecureContainer(java.lang.String,boolean)>
SINK|<android.view.accessibility.AccessibilityEvent: void setRemovedCount(int)>
SINK|<android.graphics.drawable.BitmapDrawable: void setAntiAlias(boolean)>
SINK|<com.android.email.mail.store.ImapFolder: void copyMessages(com.android.emailcommon.mail.Message[],com.android.emailcommon.mail.Folder,com.android.emailcommon.mail.Folder$MessageUpdateCallbacks)>
SINK|<com.google.android.apps.lightcycle.camera.CameraUtility: void setPictureWidth(android.hardware.Camera$Parameters,int)>
SINK|<android.view.WindowManagerGlobal: void dumpGfxInfo(java.io.FileDescriptor)>
SINK|<gov.nist.core.ParserCore: void peekLine(java.lang.String)>
SINK|<java.security.cert.X509CertSelector: void setBasicConstraints(int)>
SINK|<com.google.common.io.ByteStreams: long copy(java.io.InputStream,java.io.OutputStream)>
SINK|<android.content.ContextWrapper: boolean bindService(android.content.Intent,android.content.ServiceConnection,int)>
SINK|<android.app.IWallpaperManager$Stub$Proxy: void setWallpaperComponent(android.content.ComponentName)>
SINK|<com.android.org.bouncycastle.util.Strings: void toUTF8ByteArray(char[],java.io.OutputStream)>
SINK|<java.nio.FileChannelImpl: int write(java.nio.ByteBuffer,long)>
SINK|<android.webkit.SslCertLookupTable: void setIsAllowed(android.net.http.SslError)>
SINK|<java.util.BitSet: void set(int)>
SINK|<android.bluetooth.BluetoothOutputStream: void write(byte[],int,int)>
SINK|<android.widget.TimePicker: void setCurrentMinute(java.lang.Integer)>
SINK|<android.animation.PropertyValuesHolder: void setIntValues(int[])>
SINK|<android.animation.ValueAnimator: void setObjectValues(java.lang.Object[])>
SINK|<android.content.ContextWrapper: void sendBroadcastAsUser(android.content.Intent,android.os.UserHandle,java.lang.String)>
SINK|<java.time.chrono.MinguoDate: void writeExternal(java.io.DataOutput)>
SINK|<org.apache.http.impl.cookie.BasicClientCookie2: void setDiscard(boolean)>
SINK|<org.apache.harmony.xnet.provider.jsse.SSLSocketOutputStream: void write(byte[],int,int)>
SINK|<android.widget.ActivityChooserModel: void setDefaultActivity(int)>
SINK|<android.os.Bundle: void putIBinder(java.lang.String,android.os.IBinder)>
SINK|<com.android.phone.DTMFTwelveKeyDialer: void startLocalToneIfNeeded(char)>
SINK|<android.widget.RemoteViews$SetRemoteViewsAdapterIntent: void apply(android.view.View,android.view.ViewGroup,android.widget.RemoteViews$OnClickHandler)>
SINK|<com.android.internal.view.IInputMethodManager$Stub$Proxy: void hideMySoftInput(android.os.IBinder,int)>
SINK|<android.util.Log: int e(java.lang.String,java.lang.String)>
SINK|<com.android.deskclock.widget.multiwaveview.TargetDrawable$DrawableWithAlpha: void setAlpha(int)>
SINK|<org.apache.http.impl.cookie.RFC2109DomainHandler: void parse(org.apache.http.cookie.SetCookie,java.lang.String)>
SINK|<org.apache.http.impl.io.HttpRequestParser: org.apache.http.HttpMessage parseHead(org.apache.http.io.SessionInputBuffer)>
SINK|<com.android.nfc.NfcService: void onCardEmulationAidSelected(byte[])>
SINK|<com.android.nfc.NfcService: void saveNfcOnSetting(boolean)>
SINK|<com.google.android.mms.pdu.PduPersister: void updateParts(android.net.Uri,com.google.android.mms.pdu.PduBody,java.util.HashMap)>
SINK|<android.location.Location: void setLatitude(double)>
SINK|<com.android.internal.telephony.test.SimulatedCommands: void setNetworkSelectionModeManual(java.lang.String,android.os.Message)>
SINK|<java.net.DatagramSocket: void setSoTimeout(int)>
SINK|<com.android.server.AppWidgetServiceImpl: boolean writeStateToFileLocked(java.io.FileOutputStream)>
SINK|<com.android.internal.telephony.sip.SipCommandInterface: void setGsmBroadcastActivation(boolean,android.os.Message)>
SINK|<org.apache.http.conn.params.ConnManagerParams: void setTimeout(org.apache.http.params.HttpParams,long)>
SINK|<android.hardware.Camera$Parameters: void setGpsProcessingMethod(java.lang.String)>
SINK|<com.android.internal.telephony.RIL: void setSmscAddress(java.lang.String,android.os.Message)>
SINK|<com.android.gallery3d.ui.PhotoView: void notifyImageChange(int)>
SINK|<android.location.LocationManager: void setTestProviderLocation(java.lang.String,android.location.Location)>
SINK|<com.android.internal.telephony.RIL: void sendEnvelope(java.lang.String,android.os.Message)>
SINK|<org.apache.harmony.xml.parsers.DocumentBuilderFactoryImpl: void setFeature(java.lang.String,boolean)>
SINK|<org.apache.harmony.security.asn1.ASN1Enumerated: void setEncodingContent(org.apache.harmony.security.asn1.BerOutputStream)>
SINK|<android.media.IAudioService$Stub$Proxy: void setRemoteStreamVolume(int)>
SINK|<com.android.systemui.statusbar.BaseStatusBar: boolean inflateViews(com.android.systemui.statusbar.NotificationData$Entry,android.view.ViewGroup)>
SINK|<com.android.contacts.editor.PhoneticNameEditorView: void setValues(com.android.contacts.model.dataitem.DataKind,com.android.contacts.model.RawContactDelta$ValuesDelta,com.android.contacts.model.RawContactDelta,boolean,com.android.contacts.editor.ViewIdGenerator)>
SINK|<android.appwidget.AppWidgetHost: void startListeningAsUser(int)>
SINK|<android.graphics.RectF: void set(android.graphics.RectF)>
SINK|<com.android.server.TelephonyRegistry: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
SINK|<android.webkit.GeolocationPermissionsClassic: void getAllowed(java.lang.String,android.webkit.ValueCallback)>
SINK|<com.android.internal.view.IInputContextCallback$Stub$Proxy: void setTextAfterCursor(java.lang.CharSequence,int)>
SINK|<com.android.emailcommon.service.IPolicyService$Stub$Proxy: void setAccountHoldFlag(long,boolean)>
SINK|<com.android.videoeditor.OverlayTitleTemplatePicker: void onListItemClick(android.widget.ListView,android.view.View,int,long)>
SINK|<android.view.IWindowManager$Stub$Proxy: boolean startViewServer(int)>
SINK|<java.security.KeyStore: void setCertificateEntry(java.lang.String,java.security.cert.Certificate)>
SINK|<android.app.INotificationManager$Stub$Proxy: void enqueueNotificationWithTag(java.lang.String,java.lang.String,int,android.app.Notification,int[],int)>
SINK|<android.app.TabActivity: void setDefaultTab(int)>
SINK|<android.accounts.AccountManager$AmsTask$Response: void onError(int,java.lang.String)>
SINK|<android.webkit.WebSettings: void setUseWebViewBackgroundForOverscrollBackground(boolean)>
SINK|<android.preference.PreferenceGroup: void setOrderingAsAdded(boolean)>
SINK|<android.os.Bundle: void putLong(java.lang.String,long)>
SINK|<com.android.videoeditor.widgets.TimelineHorizontalScrollView: void setScaleListener(android.view.ScaleGestureDetector$SimpleOnScaleGestureListener)>
SINK|<com.android.email.Controller$ServiceCallback: void syncMailboxListStatus(long,int,int)>
SINK|<android.net.IConnectivityManager$Stub$Proxy: boolean setRadios(boolean)>
SINK|<java.lang.ClassLoader: void setPackageAssertionStatus(java.lang.String,boolean)>
SINK|<com.android.email.SecurityPolicy: void setAccountHoldFlag(android.content.Context,com.android.emailcommon.provider.Account,boolean)>
SINK|<org.apache.http.conn.BasicManagedEntity: void writeTo(java.io.OutputStream)>
SINK|<android.view.GLES20Layer: void setLayerPaint(android.graphics.Paint)>
SINK|<javax.xml.transform.dom.DOMResult: void setSystemId(java.lang.String)>
SINK|<com.android.server.location.MockProvider: void setLocation(android.location.Location)>
SINK|<com.android.systemui.statusbar.phone.PhoneStatusBar: void setSystemUiVisibility(int,int)>
SINK|<android.view.View: void setMinimumHeight(int)>
SINK|<android.os.ResultReceiver: void send(int,android.os.Bundle)>
SINK|<gov.nist.javax.sip.header.ims.PServedUser: void setValue(java.lang.String)>
SINK|<android.net.wifi.WifiWatchdogStateMachine$DefaultState: boolean processMessage(android.os.Message)>
SINK|<com.android.server.InputMethodManagerService$InputMethodSettings: void putSelectedInputMethod(java.lang.String)>
SINK|<android.content.ContentProviderProxy: android.os.Bundle call(java.lang.String,java.lang.String,android.os.Bundle)>
SINK|<android.accounts.IAccountManager$Stub$Proxy: void updateAppPermission(android.accounts.Account,java.lang.String,int,boolean)>
SINK|<com.android.server.pm.PackageManagerService$DumpState: void setOptionEnabled(int)>
SINK|<com.google.android.mms.pdu.PduHeaders: void appendEncodedStringValue(com.google.android.mms.pdu.EncodedStringValue,int)>
SINK|<java.net.Socket: void setTcpNoDelay(boolean)>
SINK|<java.net.ServerSocket: void setPerformancePreferences(int,int,int)>
SINK|<android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoIcsImpl: void setEnabled(java.lang.Object,boolean)>
SINK|<com.android.internal.telephony.ISms$Stub$Proxy: boolean enableCellBroadcastRange(int,int)>
SINK|<android.app.ActivityManagerProxy: boolean startNextMatchingActivity(android.os.IBinder,android.content.Intent,android.os.Bundle)>
SINK|<android.text.style.URLSpan: void onClick(android.view.View)>
SINK|<android.app.backup.IBackupManager$Stub$Proxy: void dataChanged(java.lang.String)>
SINK|<java.text.DecimalFormat: void setCurrency(java.util.Currency)>
SINK|<com.android.internal.statusbar.StatusBarNotification: void writeToParcel(android.os.Parcel,int)>
SINK|<com.android.providers.calendar.CalendarInstancesHelper: void performInstanceExpansion(long,long,java.lang.String,android.database.Cursor)>
SINK|<android.animation.AnimatorSet$DependencyListener: void onAnimationStart(android.animation.Animator)>
SINK|<android.app.ApplicationPackageManager: void addPackageToPreferred(java.lang.String)>
SINK|<java.net.Socks4Message: void setIP(byte[])>
SINK|<android.net.wifi.WifiManager: int updateNetwork(android.net.wifi.WifiConfiguration)>
SINK|<com.android.server.DevicePolicyManagerService: void reportFailedPasswordAttempt(int)>
SINK|<com.android.systemui.recent.RecentsHorizontalScrollView: void setMinSwipeAlpha(float)>
SINK|<org.apache.http.impl.conn.AbstractPooledConnAdapter: void setState(java.lang.Object)>
SINK|<javax.xml.transform.stream.StreamSource: void setReader(java.io.Reader)>
SINK|<com.android.deskclock.TimerSetupView: void setLeftRightEnabled(boolean)>
SINK|<java.text.Format: java.lang.Object parseObject(java.lang.String)>
SINK|<java.time.format.DateTimeFormatter: java.time.format.DateTimeFormatterBuilder$CompositePrinterParser toPrinterParser(boolean)>
SINK|<android.database.DatabaseUtils: void dumpCursor(android.database.Cursor,java.io.PrintStream)>
SINK|<android.media.IAudioService$Stub$Proxy: void adjustSuggestedStreamVolume(int,int,int)>
SINK|<android.content.ContextWrapper: java.io.FileOutputStream openFileOutput(java.lang.String,int)>
SINK|<android.view.ViewGroup: void setAlwaysDrawnWithCacheEnabled(boolean)>
SINK|<com.android.internal.telephony.sip.SipPhone: void setLine1Number(java.lang.String,java.lang.String,android.os.Message)>
SINK|<com.android.internal.telephony.RIL: void sendCDMAFeatureCode(java.lang.String,android.os.Message)>
SINK|<java.io.FileOutputStream: void <init>(java.io.File)>
SINK|<android.app.Activity: void startIntentSenderForResult(android.content.IntentSender,int,android.content.Intent,int,int,int,android.os.Bundle)>
SINK|<com.android.inputmethod.latin.ExpandableDictionary: int setBigramAndGetFrequency(java.lang.String,java.lang.String,com.android.inputmethod.latin.UserHistoryForgettingCurveUtils$ForgettingCurveParams)>
SINK|<com.android.server.ConnectivityService: void setGlobalProxy(android.net.ProxyProperties)>
SINK|<android.os.IUserManager$Stub$Proxy: void setUserName(int,java.lang.String)>
SINK|<android.location.Location: void setAltitude(double)>
SINK|<gov.nist.javax.sip.message.SIPResponse: void setReasonPhrase(java.lang.String)>
SINK|<com.android.server.connectivity.Tethering$TetherInterfaceSM$StartingState: boolean processMessage(android.os.Message)>
SINK|<com.android.launcher2.Launcher: void addAppWidgetFromDrop(com.android.launcher2.PendingAddWidgetInfo,long,int,int[],int[],int[])>
SINK|<com.android.email.view.CertificateSelector$SavedState: void writeToParcel(android.os.Parcel,int)>
SINK|<java.nio.SocketChannelImpl: long write(java.nio.ByteBuffer[],int,int)>
SINK|<android.os.Bundle: void putBooleanArray(java.lang.String,boolean[])>
SINK|<android.widget.TableLayout$LayoutParams: void setBaseAttributes(android.content.res.TypedArray,int,int)>
SINK|<gov.nist.javax.sip.header.ims.SecurityAgree: void setPortClient(int)>
SINK|<android.os.INetworkManagementService$Stub$Proxy: void removeSecondaryRoute(java.lang.String,android.net.RouteInfo)>
SINK|<com.android.mms.ui.MessageListItem: void setTextVisibility(boolean)>
SINK|<com.android.internal.telephony.RIL: void deleteSmsOnSim(int,android.os.Message)>
SINK|<com.android.contacts.activities.ContactEditorActivity$2: void onCustomEditContactActivityRequested(com.android.contacts.model.account.AccountWithDataSet,android.net.Uri,android.os.Bundle,boolean)>
SINK|<com.android.commands.monkey.MonkeySourceRandom: void setFactors(int,float)>
SINK|<android.widget.CompoundButton: void setOnCheckedChangeListener(android.widget.CompoundButton$OnCheckedChangeListener)>
SINK|<android.media.IAudioService$Stub$Proxy: void forceVolumeControlStream(int,android.os.IBinder)>
SINK|<android.graphics.drawable.NinePatchDrawable: void setTargetDensity(int)>
SINK|<android.widget.SimpleCursorTreeAdapter: void setViewText(android.widget.TextView,java.lang.String)>
SINK|<android.net.wifi.WifiManager: boolean setWifiApEnabled(android.net.wifi.WifiConfiguration,boolean)>
SINK|<android.app.SharedPreferencesImpl$EditorImpl: android.content.SharedPreferences$Editor putString(java.lang.String,java.lang.String)>
SINK|<com.android.server.net.NetworkStatsCollection: void write(java.io.DataOutputStream)>
SINK|<com.android.phone.CallFeaturesSetting: boolean onPreferenceChange(android.preference.Preference,java.lang.Object)>
SINK|<com.android.server.DevicePolicyManagerService: void setPasswordMinimumLength(android.content.ComponentName,int,int)>
SINK|<com.android.internal.view.menu.ActionMenuItem: com.android.internal.view.menu.ActionMenuItem setExclusiveCheckable(boolean)>
SINK|<android.os.Bundle: void putStringArray(java.lang.String,java.lang.String[])>
SINK|<gov.nist.javax.sip.stack.TLSMessageChannel: void sendMessage(gov.nist.javax.sip.message.SIPMessage)>
SINK|<com.android.server.usb.UsbDeviceManager: void setMassStorageBackingFile(java.lang.String)>
SINK|<com.android.server.wm.ViewServer: boolean access$000(java.net.Socket,java.lang.String)>
SINK|<com.android.inputmethod.latin.SubtypeLocale: void init(android.content.Context)>
SINK|<android.hardware.Camera$Parameters: void setPictureFormat(int)>
SINK|<gov.nist.javax.sip.stack.SIPServerTransaction: void sendMessage(gov.nist.javax.sip.message.SIPMessage)>
SINK|<android.text.style.BackgroundColorSpan: void updateDrawState(android.text.TextPaint)>
SINK|<android.widget.ToggleButton: void setTextOn(java.lang.CharSequence)>
SINK|<android.test.IsolatedContext: void sendBroadcast(android.content.Intent)>
SINK|<com.google.android.apps.lightcycle.camera.CameraApiProxyAndroidImpl$CameraProxyAndroidImpl: void enableShutterSound(boolean)>
SINK|<android.nfc.INfcAdapter$Stub$Proxy: void setForegroundDispatch(android.app.PendingIntent,android.content.IntentFilter[],android.nfc.TechListParcel)>
SINK|<android.media.SoundPool: void setOnLoadCompleteListener(android.media.SoundPool$OnLoadCompleteListener)>
SINK|<gov.nist.javax.sip.header.ims.SecurityServer: void setValue(java.lang.String)>
SINK|<android.view.View: boolean performHapticFeedback(int)>
SINK|<com.android.server.input.InputManagerService: void setDisplayViewports(com.android.server.display.DisplayViewport,com.android.server.display.DisplayViewport)>
SINK|<android.app.Activity: boolean startActivityIfNeeded(android.content.Intent,int)>
SINK|<com.android.server.TelephonyRegistry: void notifyDataConnection(int,boolean,java.lang.String,java.lang.String,java.lang.String,android.net.LinkProperties,android.net.LinkCapabilities,int,boolean)>
SINK|<com.android.gallery3d.filtershow.imageshow.ImageFlip: void setActionDown(float,float)>
SINK|<android.app.WallpaperManager$FastBitmapDrawable: void setFilterBitmap(boolean)>
SINK|<android.os.Bundle: void putFloatArray(java.lang.String,float[])>
SINK|<com.android.internal.telephony.sip.SipPhone: void sendBurstDtmf(java.lang.String)>
SINK|<android.app.ActivityManagerProxy: boolean switchUser(int)>
SINK|<com.android.calendar.month.SimpleWeeksAdapter: void setSelectedDay(android.text.format.Time)>
SINK|<com.android.gallery3d.ui.EdgeEffect$Drawable: void setBounds(int,int,int,int)>
SINK|<com.google.android.mms.pdu.PduPersister: com.google.android.mms.pdu.GenericPdu load(android.net.Uri)>
SINK|<com.android.server.power.WirelessChargerDetector: void dump(java.io.PrintWriter)>
SINK|<android.net.wifi.p2p.WifiP2pManager: void requestGroupInfo(android.net.wifi.p2p.WifiP2pManager$Channel,android.net.wifi.p2p.WifiP2pManager$GroupInfoListener)>
SINK|<android.net.sip.ISipSessionListener$Stub$Proxy: void onCallChangeFailed(android.net.sip.ISipSession,int,java.lang.String)>
SINK|<javax.net.ssl.SSLContext: void setDefault(javax.net.ssl.SSLContext)>
SINK|<android.location.IGpsStatusListener$Stub$Proxy: void onSvStatusChanged(int,int[],float[],float[],float[],int,int,int)>
SINK|<android.view.LayoutInflater: android.view.View createView(java.lang.String,java.lang.String,android.util.AttributeSet)>
SINK|<com.android.internal.telephony.ApnContext: void setEnabled(boolean)>
SINK|<android.content.ContentValues: void put(java.lang.String,java.lang.Byte)>
SINK|<com.android.internal.widget.LockPatternView: void setPattern(com.android.internal.widget.LockPatternView$DisplayMode,java.util.List)>
SINK|<android.inputmethodservice.KeyboardView: void setPopupOffset(int,int)>
SINK|<android.nfc.INfcTag$Stub$Proxy: int setTimeout(int,int)>
SINK|<com.android.internal.view.IInputMethodSession$Stub$Proxy: void toggleSoftInput(int,int)>
SINK|<java.lang.invoke.CallSite: void setTargetNormal(java.lang.invoke.MethodHandle)>
SINK|<com.android.internal.telephony.DataConnectionAc: void setReconnectIntentSync(android.app.PendingIntent)>
SINK|<com.android.server.am.ReceiverList: void dump(java.io.PrintWriter,java.lang.String)>
SINK|<com.android.providers.calendar.CalendarInstancesHelper$EventInstancesMap: void add(java.lang.String,android.content.ContentValues)>
SINK|<android.hardware.usb.IUsbManager$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>
SINK|<android.net.wifi.WifiNative: boolean setConfigMethods(java.lang.String)>
SINK|<android.bluetooth.BluetoothHeadset: boolean startScoUsingVirtualVoiceCall(android.bluetooth.BluetoothDevice)>
SINK|<com.android.calendar.Utils: void setTimeZone(android.content.Context,java.lang.String)>
SINK|<java.lang.SecurityManager: void checkWrite(java.io.FileDescriptor)>
SINK|<java.security.SecureRandom: void setSeed(byte[])>
SINK|<android.app.ContextImpl: boolean bindService(android.content.Intent,android.content.ServiceConnection,int)>
SINK|<com.android.internal.telephony.test.SimulatedCommands: void sendBurstDtmf(java.lang.String,int,int,android.os.Message)>
SINK|<com.android.gallery3d.data.PathMatcher$Node: com.android.gallery3d.data.PathMatcher$Node addChild(java.lang.String)>
SINK|<android.content.SyncManager: void dumpSyncHistory(java.io.PrintWriter)>
SINK|<android.view.animation.Animation: void setFillEnabled(boolean)>
SINK|<com.adobe.xmp.options.PropertyOptions: com.adobe.xmp.options.PropertyOptions setHasQualifiers(boolean)>
SINK|<java.util.concurrent.FutureTask: void setException(java.lang.Throwable)>
SINK|<android.widget.AdapterViewAnimator: void setRemoteViewsAdapter(android.content.Intent)>
SINK|<android.view.ViewGroup: void setLayoutAnimationListener(android.view.animation.Animation$AnimationListener)>
SINK|<com.android.gallery3d.ui.PreparePageFadeoutTexture: void prepareFadeOutTexture(com.android.gallery3d.app.AbstractGalleryActivity,com.android.gallery3d.ui.GLView)>
SINK|<com.android.internal.statusbar.IStatusBarService$Stub$Proxy: void onNotificationClear(java.lang.String,java.lang.String,int)>
SINK|<android.net.http.AndroidHttpClient$LoggingConfiguration: void access$600(android.net.http.AndroidHttpClient$LoggingConfiguration,java.lang.String)>
SINK|<android.test.mock.MockCursor: boolean updateInt(int,int)>
SINK|<android.text.style.AbsoluteSizeSpan: void updateDrawState(android.text.TextPaint)>
SINK|<com.android.contacts.list.ContactEntryListFragment: void onCreate(android.os.Bundle)>
SINK|<android.content.pm.ComponentInfo: void dumpBack(android.util.Printer,java.lang.String)>
SINK|<android.widget.VideoView: void setVideoURI(android.net.Uri)>
SINK|<com.android.email.service.MailService$ControllerResults: void updateMailboxCallback(com.android.emailcommon.mail.MessagingException,long,long,int,int,java.util.ArrayList)>
SINK|<android.net.wifi.p2p.WifiP2pService$P2pStateMachine$FrequencyConflictState: boolean processMessage(android.os.Message)>
SINK|<android.content.res.AssetManager: android.content.res.XmlResourceParser openXmlResourceParser(java.lang.String)>
SINK|<android.location.ILocationManager$Stub$Proxy: boolean addGpsStatusListener(android.location.IGpsStatusListener)>
SINK|<com.android.contacts.editor.RawContactEditorView: void setPhotoBitmap(android.graphics.Bitmap)>
SINK|<com.android.server.pm.UserManagerService: boolean removeUser(int)>
SINK|<com.android.videoeditor.widgets.HorizontalScrollView: boolean performAccessibilityAction(int,android.os.Bundle)>
SINK|<com.android.server.MountService: int decryptStorage(java.lang.String)>
SINK|<com.android.contacts.list.JoinContactListAdapter: void bindView(android.view.View,int,android.database.Cursor,int)>
SINK|<com.android.providers.contacts.aggregation.ContactAggregator$MatchCandidateList: void add(java.lang.String,int)>
SINK|<java.nio.FloatToByteBufferAdapter: java.nio.FloatBuffer put(float)>
SINK|<com.android.internal.telephony.gsm.GsmCallTracker: com.android.internal.telephony.Connection dial(java.lang.String)>
SINK|<android.net.wifi.WifiStateMachine$ConnectedState: boolean processMessage(android.os.Message)>
SINK|<java.nio.CharBuffer: java.nio.CharBuffer put(java.lang.String,int,int)>
SINK|<java.util.concurrent.ScheduledThreadPoolExecutor: void setExecuteExistingDelayedTasksAfterShutdownPolicy(boolean)>
SINK|<android.graphics.ColorMatrix: void set(android.graphics.ColorMatrix)>
SINK|<android.media.MediaPlayer: void setOnPreparedListener(android.media.MediaPlayer$OnPreparedListener)>
SINK|<com.android.internal.telephony.ISms$Stub$Proxy: void sendData(java.lang.String,java.lang.String,int,byte[],android.app.PendingIntent,android.app.PendingIntent)>
SINK|<java.lang.invoke.MethodType: java.lang.invoke.MethodType fromMethodDescriptorString(java.lang.String,java.lang.ClassLoader)>
SINK|<android.os.INetworkManagementService$Stub$Proxy: void setFirewallInterfaceRule(java.lang.String,boolean)>
SINK|<android.hardware.Camera: void setZoomChangeListener(android.hardware.Camera$OnZoomChangeListener)>
SINK|<org.apache.http.impl.io.AbstractSessionOutputBuffer: void writeLine(org.apache.http.util.CharArrayBuffer)>
SINK|<java.net.CookieHandler: void setDefault(java.net.CookieHandler)>
SINK|<android.webkit.WebViewClassic: void setWebBackForwardListClient(android.webkit.WebBackForwardListClient)>
SINK|<java.lang.ProcessManager$ProcessImpl: void setExitValue(int)>
SINK|<java.util.concurrent.ForkJoinTask: int setExceptionalCompletion(java.lang.Throwable)>
SINK|<com.android.server.location.GpsLocationProvider: void updateNetworkState(int,android.net.NetworkInfo)>
SINK|<android.graphics.drawable.PictureDrawable: void setDither(boolean)>
SINK|<com.android.email.Controller: void loadAttachment(long,long,long)>
SINK|<android.database.DatabaseUtils$InsertHelper: void bind(int,double)>
SINK|<android.net.INetworkManagementEventObserver$Stub$Proxy: void interfaceClassDataActivityChanged(java.lang.String,boolean)>
SINK|<com.android.contacts.detail.ContactDetailDisplayUtils: void setDisplayName(android.content.Context,com.android.contacts.model.Contact,android.widget.TextView)>
SINK|<java.io.ObjectOutputStream: void writeBoolean(boolean)>
SINK|<com.google.android.mms.pdu.PduHeaders: void setTextString(byte[],int)>
SINK|<com.android.deskclock.widget.multiwaveview.TargetDrawable: void setState(int[])>
SINK|<android.view.accessibility.AccessibilityNodeInfo: void setChecked(boolean)>
SINK|<com.android.bluetooth.btservice.RemoteDevices: void devicePropertyChangedCallback(byte[],int[],byte[][])>
SINK|<android.widget.SearchView: void setInputType(int)>
SINK|<com.android.browser.BrowserSettings: void toggleDesktopUseragent(android.webkit.WebView)>
SINK|<com.android.server.display.DisplayManagerService$CallbackRecord: void notifyDisplayEventAsync(int,int)>
SINK|<android.net.INetworkPolicyListener$Stub$Proxy: void onMeteredIfacesChanged(java.lang.String[])>
SINK|<com.android.internal.telephony.test.ModelInterpreter: void print(java.lang.String)>
SINK|<android.graphics.drawable.RotateDrawable: boolean setVisible(boolean,boolean)>
SINK|<com.android.contacts.voicemail.VoicemailPlaybackFragment$PlaybackViewImpl: void setIsBuffering()>
SINK|<gov.nist.javax.sip.address.SipUri: void setUriParameter(gov.nist.core.NameValue)>
SINK|<com.android.browser.Controller: void updateMenuState(com.android.browser.Tab,android.view.Menu)>
SINK|<com.android.server.am.ActivityManagerService: void setFrontActivityScreenCompatMode(int)>
SINK|<java.net.ServerSocket: void setReuseAddress(boolean)>
SINK|<com.android.systemui.statusbar.StatusBarIconView: boolean set(com.android.internal.statusbar.StatusBarIcon)>
SINK|<java.util.Formatter$FormatToken: boolean setFlag(int)>
SINK|<com.android.server.TelephonyRegistry: void notifyDataActivity(int)>
SINK|<java.util.concurrent.atomic.AtomicReferenceArray: void lazySet(int,java.lang.Object)>
SINK|<android.location.Address: void setLocality(java.lang.String)>
SINK|<android.media.IRingtonePlayer$Stub$Proxy: boolean isPlaying(android.os.IBinder)>
SINK|<android.telephony.ServiceState: void setCssIndicator(int)>
SINK|<com.android.server.InputMethodManagerService: void registerSuggestionSpansForNotification(android.text.style.SuggestionSpan[])>
SINK|<com.android.server.WallpaperManagerService$WallpaperConnection: android.os.ParcelFileDescriptor setWallpaper(java.lang.String)>
SINK|<javax.xml.parsers.SAXParser: void parse(org.xml.sax.InputSource,org.xml.sax.helpers.DefaultHandler)>
SINK|<android.net.sip.SipProfile$Builder: android.net.sip.SipProfile$Builder setSendKeepAlive(boolean)>
SINK|<android.net.ConnectivityManager: void setGlobalProxy(android.net.ProxyProperties)>
SINK|<com.android.server.pm.PackageVerificationState: void addSufficientVerifier(int)>
SINK|<gov.nist.javax.sip.header.Reason: void setCause(int)>
SINK|<com.android.gallery3d.exif.OrderedDataOutputStream: void writeShort(short)>
SINK|<android.view.View: void draw(android.graphics.Canvas)>
SINK|<android.app.ActivityThread$ApplicationThread: void setSchedulingGroup(int)>
SINK|<android.text.SpannableStringBuilder: void setSpan(java.lang.Object,int,int,int)>
SINK|<com.android.gallery3d.filtershow.PanelController: void addPanel(android.view.View,android.view.View,int)>
SINK|<org.apache.http.client.utils.URLEncodedUtils: java.util.List parse(org.apache.http.HttpEntity)>
SINK|<com.android.mms.data.RecipientIdCache: void updateNumbers(long,com.android.mms.data.ContactList)>
SINK|<com.android.nfc.NfcService$NfcAdapterService: void setNdefPushCallback(android.nfc.INdefPushCallback)>
SINK|<org.apache.http.impl.cookie.BasicClientCookie: void setExpiryDate(java.util.Date)>
SINK|<com.android.internal.telephony.DebugService: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
SINK|<android.app.ContextImpl: void sendOrderedBroadcast(android.content.Intent,java.lang.String,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>
SINK|<com.android.inputmethod.latin.Suggest: void setUserDictionary(com.android.inputmethod.latin.UserBinaryDictionary)>
SINK|<com.android.internal.net.LegacyVpnInfo: void writeToParcel(android.os.Parcel,int)>
SINK|<android.webkit.WebView: boolean performAccessibilityAction(int,android.os.Bundle)>
SINK|<com.android.server.display.WifiDisplayAdapter: void dumpLocked(java.io.PrintWriter)>
SINK|<java.lang.ProcessBuilder: java.lang.ProcessBuilder command(java.lang.String[])>
SINK|<android.widget.TextView: void setCursorPosition_internal(int,int)>
SINK|<com.android.internal.view.menu.ListMenuItemView: void setIcon(android.graphics.drawable.Drawable)>
SINK|<org.apache.harmony.dalvik.ddmc.DdmServer: void registerHandler(int,org.apache.harmony.dalvik.ddmc.ChunkHandler)>
SINK|<com.android.server.pm.PackageManagerService: void reportSettingsProblem(int,java.lang.String)>
SINK|<android.net.wifi.WifiStateMachine$DriverStoppedState: boolean processMessage(android.os.Message)>
SINK|<org.apache.harmony.xml.dom.ElementImpl: void setIdAttributeNS(java.lang.String,java.lang.String,boolean)>
SINK|<com.android.server.am.ActivityManagerService: boolean updateConfigurationLocked(android.content.res.Configuration,com.android.server.am.ActivityRecord,boolean,boolean)>
SINK|<android.widget.OverScroller: void setFriction(float)>
SINK|<android.widget.OverScroller: void setFinalX(int)>
SINK|<android.graphics.Canvas: void setBitmap(android.graphics.Bitmap)>
SINK|<com.android.browser.UrlHandler: boolean startActivityForUrl(com.android.browser.Tab,java.lang.String)>
SINK|<com.android.browser.SnapshotTab: boolean saveViewState(android.content.ContentValues)>
SINK|<java.util.concurrent.ForkJoinPool: void execute(java.lang.Runnable)>
SINK|<com.android.systemui.statusbar.tablet.TabletStatusBar: void setSystemUiVisibility(int,int)>
SINK|<android.appwidget.AppWidgetProviderInfo: void writeToParcel(android.os.Parcel,int)>
SINK|<android.app.FragmentManagerImpl: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
SINK|<android.app.Activity: void setProgressBarVisibility(boolean)>
SINK|<android.inputmethodservice.SoftInputWindow: void setSize(int)>
SINK|<com.android.bluetooth.a2dp.A2dpService: boolean setPriority(android.bluetooth.BluetoothDevice,int)>
SINK|<android.provider.ContactsContract$SyncState: void set(android.content.ContentProviderClient,android.accounts.Account,byte[])>
SINK|<android.content.IntentSender: void sendIntent(android.content.Context,int,android.content.Intent,android.content.IntentSender$OnFinished,android.os.Handler)>
SINK|<android.util.Slog: int d(java.lang.String,java.lang.String)>
SINK|<android.app.ActivityManagerProxy: void grantUriPermission(android.app.IApplicationThread,java.lang.String,android.net.Uri,int)>
SINK|<android.net.wifi.p2p.WifiP2pDeviceList: void writeToParcel(android.os.Parcel,int)>
SINK|<libcore.io.ForwardingOs: long sendfile(java.io.FileDescriptor,java.io.FileDescriptor,libcore.util.MutableLong,long)>
SINK|<com.android.server.AppWidgetService: void notifyAppWidgetViewDataChanged(int[],int)>
SINK|<android.media.MediaPlayer: void setScreenOnWhilePlaying(boolean)>
SINK|<java.lang.ThreadLocal: void set(java.lang.Object)>
SINK|<com.android.calendar.CalendarController: void sendEvent(java.lang.Object,long,android.text.format.Time,android.text.format.Time,long,int,long,java.lang.String,android.content.ComponentName)>
SINK|<com.android.internal.widget.LockSettingsService: void setLockPattern(byte[],int)>
SINK|<com.android.systemui.statusbar.phone.NavigationBarView: void setBar(com.android.systemui.statusbar.BaseStatusBar)>
SINK|<org.apache.http.impl.conn.LoggingSessionOutputBuffer: void writeLine(java.lang.String)>
SINK|<com.android.internal.telephony.RIL: void setCdmaSubscriptionSource(int,android.os.Message)>
SINK|<org.xml.sax.helpers.XMLFilterImpl: void unparsedEntityDecl(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>
SINK|<com.google.android.mms.pdu.SendReq: void setReadReport(int)>
SINK|<com.android.bluetooth.btservice.AdapterService$AdapterServiceBinder: boolean setName(java.lang.String)>
SINK|<java.net.URL: java.net.URLConnection openConnection()>
SINK|<android.widget.ExpandableListView: boolean setSelectedChild(int,int,boolean)>
SINK|<com.android.videoeditor.VideoEditorActivity: void setAspectRatio(int)>
SINK|<com.android.internal.telephony.BaseCommands: void setOnCatProactiveCmd(android.os.Handler,int,java.lang.Object)>
SINK|<com.android.launcher2.WallpaperChooserDialogFragment$WallpaperDrawable: void setColorFilter(android.graphics.ColorFilter)>
SINK|<com.android.providers.contacts.ContactsDatabaseHelper: void replaceStatusUpdate(java.lang.Long,long,java.lang.String,java.lang.String,java.lang.Integer,java.lang.Integer)>
SINK|<com.android.inputmethod.latin.suggestions.SuggestionStripView$SuggestionStripViewParams: int setMoreSuggestionsHeight(int)>
SINK|<android.view.GLES20DisplayList: void setPivotY(float)>
SINK|<com.android.exchange.adapter.Serializer: void writeLiteralString(java.io.OutputStream,java.lang.String)>
SINK|<org.apache.http.params.HttpConnectionParams: void setTcpNoDelay(org.apache.http.params.HttpParams,boolean)>
SINK|<java.lang.Long: long parseLong(java.lang.String,int)>
SINK|<com.adobe.xmp.options.PropertyOptions: com.adobe.xmp.options.PropertyOptions setQualifier(boolean)>
SINK|<android.content.pm.IPackageManager$Stub$Proxy: void grantPermission(java.lang.String,java.lang.String)>
SINK|<com.android.mms.ui.SlideshowAttachmentView: void setImageVisibility(boolean)>
SINK|<org.ccil.cowan.tagsoup.PYXWriter: void pitarget(char[],int,int)>
SINK|<java.security.Policy: void setPolicy(java.security.Policy)>
SINK|<java.nio.ShortToByteBufferAdapter: java.nio.ShortBuffer put(short)>
SINK|<android.app.FragmentManagerImpl: boolean dispatchOptionsItemSelected(android.view.MenuItem)>
SINK|<android.bluetooth.BluetoothDevice: boolean setAlias(java.lang.String)>
SINK|<android.app.admin.IDevicePolicyManager$Stub$Proxy: void setPasswordMinimumLength(android.content.ComponentName,int,int)>
SINK|<android.widget.ZoomControls: void setOnZoomInClickListener(android.view.View$OnClickListener)>
SINK|<android.filterfw.core.FinalPort: void setFieldFrame(android.filterfw.core.Frame,boolean)>
SINK|<com.android.gallery3d.filtershow.filters.ColorSpaceMatrix: void setHue(float)>
SINK|<libcore.icu.NativeBreakIterator: void setText(java.lang.String)>
SINK|<android.speech.tts.ITextToSpeechCallback$Stub$Proxy: void onStart(java.lang.String)>
SINK|<com.android.internal.view.IInputConnectionWrapper: void dispatchMessage(android.os.Message)>
SINK|<com.android.internal.telephony.cdma.CDMAPhone: void notifyDataConnection(java.lang.String,java.lang.String)>
SINK|<com.android.internal.widget.SlidingTab$Slider: void setTarget(int)>
SINK|<com.android.server.am.ActivityManagerService: boolean killPids(int[],java.lang.String,boolean)>
SINK|<gov.nist.javax.sip.address.SipUri: void setUser(java.lang.String)>
SINK|<android.widget.AdapterViewAnimator$SavedState: void writeToParcel(android.os.Parcel,int)>
SINK|<android.app.ActivityManagerProxy: void activityDestroyed(android.os.IBinder)>
SINK|<org.apache.http.cookie.params.CookieSpecParamBean: void setDatePatterns(java.util.Collection)>
SINK|<android.content.ContextWrapper: java.io.FileInputStream openFileInput(java.lang.String)>
SINK|<android.graphics.Typeface: android.graphics.Typeface create(android.graphics.Typeface,int)>
SINK|<android.net.wifi.WifiInfo: void writeToParcel(android.os.Parcel,int)>
SINK|<com.android.internal.telephony.sip.SipCommandInterface: void sendDtmf(char,android.os.Message)>
SINK|<javax.xml.transform.stream.StreamSource: void setPublicId(java.lang.String)>
SINK|<org.apache.http.params.HttpProtocolParamBean: void setContentCharset(java.lang.String)>
SINK|<android.renderscript.RenderScript: void setPriority(android.renderscript.RenderScript$Priority)>
SINK|<com.android.mms.ui.VideoAttachmentView: void setImageRegionFit(java.lang.String)>
SINK|<android.view.GLES20Canvas: void restoreToCount(int)>
SINK|<com.android.internal.statusbar.IStatusBar$Stub$Proxy: void removeNotification(android.os.IBinder)>
SINK|<android.provider.CalendarContract$CalendarAlerts: void scheduleAlarm(android.content.Context,android.app.AlarmManager,long)>
SINK|<com.android.internal.app.IBatteryStats$Stub$Proxy: void noteStopSensor(int,int)>
SINK|<com.android.camera.CameraManager$CameraProxy: void setParametersAsync(android.hardware.Camera$Parameters)>
SINK|<android.widget.AbsSpinner: void setSelectionInt(int,boolean)>
SINK|<libcore.io.ForwardingOs: java.io.FileDescriptor open(java.lang.String,int,int)>
SINK|<java.nio.ReadWriteHeapByteBuffer: java.nio.ByteBuffer putFloat(int,float)>
SINK|<com.android.server.am.EventLogTags: void writeAmSwitchUser(int)>
SINK|<com.android.internal.telephony.cdma.RuimSmsInterfaceManager: boolean copyMessageToIccEf(int,byte[],byte[])>
SINK|<android.media.AudioManager: void setMasterVolume(int,int)>
SINK|<java.util.Calendar: void setMinimalDaysInFirstWeek(int)>
SINK|<android.widget.AbsSpinner$RecycleBin: void put(int,android.view.View)>
SINK|<android.content.ContentValues: void put(java.lang.String,java.lang.Short)>
SINK|<android.content.AsyncTaskLoader: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
SINK|<libcore.net.http.AbstractHttpInputStream: void cacheWrite(byte[],int,int)>
SINK|<com.android.server.DevicePolicyManagerService: boolean resetPassword(java.lang.String,int,int)>
SINK|<com.android.internal.telephony.test.SimulatedCommands: void setNetworkSelectionModeAutomatic(android.os.Message)>
SINK|<com.android.internal.telephony.PhoneProxy: void setEchoSuppressionEnabled(boolean)>
SINK|<android.mtp.MtpDatabase: void addStorage(android.mtp.MtpStorage)>
SINK|<android.app.PendingIntent: void send(android.content.Context,int,android.content.Intent,android.app.PendingIntent$OnFinished,android.os.Handler,java.lang.String)>
SINK|<com.android.exchange.EasSyncService: void setHeaders(org.apache.http.client.methods.HttpRequestBase,boolean)>
SINK|<org.xml.sax.helpers.ParserAdapter: void setFeature(java.lang.String,boolean)>
SINK|<android.app.LocalActivityManager: void dispatchCreate(android.os.Bundle)>
SINK|<com.android.internal.telephony.SMSDispatcher: void handleSendComplete(android.os.AsyncResult)>
SINK|<com.android.internal.telephony.PhoneBase: void notifyDataConnection(java.lang.String,java.lang.String)>
SINK|<android.content.pm.IPackageManager$Stub$Proxy: void clearPackagePreferredActivities(java.lang.String)>
SINK|<android.app.ContextImpl: android.database.sqlite.SQLiteDatabase openOrCreateDatabase(java.lang.String,int,android.database.sqlite.SQLiteDatabase$CursorFactory)>
SINK|<gov.nist.javax.sip.address.SipUri: void setUserParam(java.lang.String)>
SINK|<org.xmlpull.v1.XmlPullParserFactory: void setFeature(java.lang.String,boolean)>
SINK|<android.content.pm.IPackageManager$Stub$Proxy: boolean isPermissionEnforced(java.lang.String)>
SINK|<android.graphics.drawable.ShapeDrawable: void setIntrinsicHeight(int)>
SINK|<android.content.IIntentReceiver$Stub$Proxy: void performReceive(android.content.Intent,int,java.lang.String,android.os.Bundle,boolean,boolean,int)>
SINK|<com.android.server.power.DisplayPowerState$1: void setValue(java.lang.Object,float)>
SINK|<com.android.providers.userdictionary.DictionaryBackupAgent: void onRestore(android.app.backup.BackupDataInput,int,android.os.ParcelFileDescriptor)>
SINK|<com.android.internal.app.IBatteryStats$Stub$Proxy: void noteStopWakelock(int,int,java.lang.String,int)>
SINK|<android.content.Context: android.content.ComponentName startService(android.content.Intent)>
SINK|<android.os.ResultReceiver$MyResultReceiver: void send(int,android.os.Bundle)>
SINK|<java.lang.reflect.Executable: java.lang.String sharedToGenericString(int,boolean)>
SINK|<android.util.PrefixPrinter: void println(java.lang.String)>
SINK|<com.android.gallery3d.ui.GLRootView: void setLightsOutMode(boolean)>
SINK|<java.text.DateFormatSymbols: void setEras(java.lang.String[])>
SINK|<com.android.launcher2.LauncherModel: void addItemToDatabase(android.content.Context,com.android.launcher2.ItemInfo,long,int,int,int,boolean)>
SINK|<com.google.common.collect.Multisets$UnmodifiableMultiset: int setCount(java.lang.Object,int)>
SINK|<android.view.inputmethod.InputMethodManager: void setAdditionalInputMethodSubtypes(java.lang.String,android.view.inputmethod.InputMethodSubtype[])>
SINK|<gov.nist.javax.sip.address.Authority: void setPassword(java.lang.String)>
SINK|<com.android.contacts.ContactSaveService: android.content.Intent createSetSuperPrimaryIntent(android.content.Context,long)>
SINK|<com.android.launcher2.Alarm: void setAlarm(long)>
SINK|<libcore.net.http.ChunkedOutputStream: void write(byte[],int,int)>
SINK|<android.os.WorkSource: void set(int)>
SINK|<com.android.server.accessibility.ScreenMagnifier$MagnificationController: void setAccessibilityTransformation(com.android.server.accessibility.ScreenMagnifier$MagnificationController$MagnificationSpec)>
SINK|<android.widget.NumberPicker$AccessibilityNodeProviderImpl: boolean performAction(int,int,android.os.Bundle)>
SINK|<com.android.nfc.NfcService$TagService: int setTimeout(int,int)>
SINK|<android.hardware.Camera: void setPreviewCallback(android.hardware.Camera$PreviewCallback)>
SINK|<com.android.internal.telephony.IccRecords: void setVoiceCallForwardingFlag(int,boolean)>
SINK|<android.view.IWindowSession$Stub$Proxy: void dragRecipientEntered(android.view.IWindow)>
SINK|<com.android.systemui.recent.RecentsPanelView: void setMinSwipeAlpha(float)>
SINK|<com.google.common.collect.ImmutableSortedMap$Builder: com.google.common.collect.ImmutableMap$Builder put(java.lang.Object,java.lang.Object)>
SINK|<com.android.mms.ui.BasicSlideEditorView: void setText(java.lang.String,java.lang.String)>
SINK|<android.speech.tts.TextToSpeechService$CallbackMap: void dispatchOnError(java.lang.Object,java.lang.String)>
SINK|<java.net.URLConnection: void setFileNameMap(java.net.FileNameMap)>
SINK|<com.android.internal.appwidget.IAppWidgetHost$Stub$Proxy: void updateAppWidget(int,android.widget.RemoteViews)>
SINK|<org.apache.http.impl.io.HttpResponseWriter: void writeHeadLine(org.apache.http.HttpResponse)>
SINK|<android.opengl.GLSurfaceView: void setEGLConfigChooser(android.opengl.GLSurfaceView$EGLConfigChooser)>
SINK|<android.nfc.INfcAdapterExtras$Stub$Proxy: void authenticate(java.lang.String,byte[])>
SINK|<android.accounts.AccountManagerService: java.lang.String peekAuthToken(android.accounts.Account,java.lang.String)>
SINK|<android.content.pm.PackageParser$Component: void setPackageName(java.lang.String)>
SINK|<android.app.ContextImpl: void setFilePermissionsFromMode(java.lang.String,int,int)>
SINK|<com.android.mms.dom.smil.SmilMediaElementImpl: void setDur(float)>
SINK|<android.net.INetworkManagementEventObserver$Stub$Proxy: void interfaceRemoved(java.lang.String)>
SINK|<org.apache.http.params.AbstractHttpParams: org.apache.http.params.HttpParams setIntParameter(java.lang.String,int)>
SINK|<android.app.FragmentManagerImpl: android.os.Bundle saveFragmentBasicState(android.app.Fragment)>
SINK|<com.android.server.NotificationManagerService$ToastRecord: void dump(java.io.PrintWriter,java.lang.String)>
SINK|<java.util.zip.ZipOutputStream: void setLevel(int)>
SINK|<libcore.net.url.JarURLConnectionImpl: void setDefaultUseCaches(boolean)>
SINK|<android.content.Intent: android.content.Intent putExtra(java.lang.String,boolean[])>
SINK|<com.android.inputmethod.latin.UserBinaryDictionary: void addWordToUserDictionary(java.lang.String,int)>
SINK|<com.android.internal.telephony.ITelephonyRegistry$Stub$Proxy: void notifyDataConnection(int,boolean,java.lang.String,java.lang.String,java.lang.String,android.net.LinkProperties,android.net.LinkCapabilities,int,boolean)>
SINK|<android.graphics.drawable.GradientDrawable: void setGradientType(int)>
SINK|<com.android.exchange.ExchangeService$2: void setLogging(int)>
SINK|<com.android.internal.telephony.gsm.SimSmsInterfaceManager: void sendData(java.lang.String,java.lang.String,int,byte[],android.app.PendingIntent,android.app.PendingIntent)>
SINK|<android.widget.TextView: void setHighlightColor(int)>
SINK|<android.text.style.MetricAffectingSpan$Passthrough: void updateDrawState(android.text.TextPaint)>
SINK|<com.android.internal.telephony.gsm.GsmSMSDispatcher: void sendData(java.lang.String,java.lang.String,int,byte[],android.app.PendingIntent,android.app.PendingIntent)>
SINK|<org.apache.http.impl.cookie.RFC2109Spec: java.util.List parse(org.apache.http.Header,org.apache.http.cookie.CookieOrigin)>
SINK|<android.webkit.HTML5VideoViewProxy$PosterDownloader: void data(byte[],int)>
SINK|<android.widget.CalendarView: void setEnabled(boolean)>
SINK|<android.graphics.Region: boolean set(int,int,int,int)>
SINK|<android.speech.IRecognitionService$Stub$Proxy: void stopListening(android.speech.IRecognitionListener)>
SINK|<android.view.accessibility.AccessibilityNodeInfo: void setSource(android.view.View,int)>
SINK|<com.android.server.wm.StrictModeFlash: void setVisibility(boolean)>
SINK|<android.os.IPowerManager$Stub$Proxy: void setTemporaryScreenAutoBrightnessAdjustmentSettingOverride(float)>
SINK|<android.widget.ViewAnimator: void setOutAnimation(android.view.animation.Animation)>
SINK|<android.view.View$11: void setValue(android.view.View,float)>
SINK|<com.android.mms.util.SendingProgressTokenManager: void put(java.lang.Object,long)>
SINK|<android.app.Dialog: void setContentView(int)>
SINK|<gov.nist.core.DuplicateNameValueList: gov.nist.core.NameValue put(java.lang.String,gov.nist.core.NameValue)>
SINK|<android.app.Dialog: void setOwnerActivity(android.app.Activity)>
SINK|<com.android.gallery3d.filtershow.imageshow.ImageCrop: void setActionDown(float,float)>
SINK|<java.time.YearMonth: java.time.YearMonth parse(java.lang.CharSequence)>
SINK|<android.preference.Preference: void setShouldDisableView(boolean)>
SINK|<android.app.ContextImpl: void sendStickyOrderedBroadcastAsUser(android.content.Intent,android.os.UserHandle,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>
SINK|<org.apache.harmony.xnet.provider.jsse.SSLServerSocketImpl: void setEnabledProtocols(java.lang.String[])>
SINK|<android.gesture.GestureOverlayView: void setGestureStrokeType(int)>
SINK|<com.android.contacts.activities.PeopleActivity$ContactDetailFragmentListener: void onCreateRawContactRequested(java.util.ArrayList,com.android.contacts.model.account.AccountWithDataSet)>
SINK|<android.view.View: void setVerticalFadingEdgeEnabled(boolean)>
SINK|<android.view.View: void setEnabled(boolean)>
SINK|<java.math.BigDecimal: java.math.BigDecimal setScale(int)>
SINK|<android.view.IRotationWatcher$Stub$Proxy: void onRotationChanged(int)>
SINK|<com.android.bluetooth.btservice.AdapterService: void sendConnectionStateChange(android.bluetooth.BluetoothDevice,int,int,int)>
SINK|<android.content.pm.PermissionInfo: void writeToParcel(android.os.Parcel,int)>
SINK|<android.nfc.INfcTag$Stub$Proxy: int reconnect(int)>
SINK|<android.net.EthernetDataTracker: void setDependencyMet(boolean)>
SINK|<android.widget.AbsListView: void setStackFromBottom(boolean)>
SINK|<android.view.View: void setLayerPaint(android.graphics.Paint)>
SINK|<com.google.common.io.ByteStreams$ByteArrayDataOutputStream: void writeDouble(double)>
SINK|<android.util.DisplayMetrics: void setTo(android.util.DisplayMetrics)>
SINK|<android.net.wifi.p2p.IWifiP2pManager$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>
SINK|<com.android.server.display.DisplayManagerService: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
SINK|<com.android.internal.telephony.cdma.CDMAPhone: void notifyServiceStateChanged(android.telephony.ServiceState)>
SINK|<android.widget.Spinner: void setEnabled(boolean)>
SINK|<android.preference.Preference: void setEnabled(boolean)>
SINK|<android.webkit.ZoomManager: boolean onNewPicture(android.webkit.WebViewCore$DrawData)>
SINK|<libcore.net.http.HttpsURLConnectionImpl: void setDefaultUseCaches(boolean)>
SINK|<android.util.Property: void set(java.lang.Object,java.lang.Object)>
SINK|<com.android.internal.appwidget.IAppWidgetHost$Stub$Proxy: void providerChanged(int,android.appwidget.AppWidgetProviderInfo)>
SINK|<libcore.io.Posix: int write(java.io.FileDescriptor,byte[],int,int)>
SINK|<android.net.wifi.IWifiManager$Stub$Proxy: void setCountryCode(java.lang.String,boolean)>
SINK|<java.time.chrono.JapaneseChronology: java.lang.Object writeReplace()>
SINK|<com.android.systemui.statusbar.phone.PhoneStatusBar$FastColorDrawable: void setBounds(int,int,int,int)>
SINK|<android.net.wifi.WifiStateMachine$SupplicantStartingState: boolean processMessage(android.os.Message)>
SINK|<javax.xml.parsers.SAXParserFactory: void setNamespaceAware(boolean)>
SINK|<com.adobe.xmp.impl.XMPDateTimeImpl: void setHour(int)>
SINK|<com.android.systemui.statusbar.AnimatedImageView: void setImageDrawable(android.graphics.drawable.Drawable)>
SINK|<android.app.WallpaperInfo: void writeToParcel(android.os.Parcel,int)>
SINK|<gov.nist.javax.sip.header.ims.SecurityAgree: void setProtocol(java.lang.String)>
SINK|<com.android.server.usb.UsbSettingsManager: boolean hasPermission(android.hardware.usb.UsbAccessory)>
SINK|<com.android.mms.ui.MessagingPreferenceActivity: void enableNotifications(boolean,android.content.Context)>
SINK|<com.android.calendar.Utils: android.content.Intent createEmailAttendeesIntent(android.content.res.Resources,java.lang.String,java.lang.String,java.util.List,java.util.List,java.lang.String)>
SINK|<android.app.ApplicationThreadProxy: void dumpGfxInfo(java.io.FileDescriptor,java.lang.String[])>
SINK|<android.webkit.CookieManager: void setCookie(java.lang.String,java.lang.String)>
SINK|<android.support.v4.content.LocalBroadcastManager: boolean sendBroadcast(android.content.Intent)>
SINK|<com.android.providers.contacts.ContactsDatabaseHelper: void insertStatusUpdate(java.lang.Long,java.lang.String,java.lang.String,java.lang.Integer,java.lang.Integer)>
SINK|<com.google.android.picasastore.PicasaStoreFacade: void broadcastOperationReport(java.lang.String,long,long,int,long,long)>
SINK|<android.util.Slog: int w(java.lang.String,java.lang.String,java.lang.Throwable)>
SINK|<android.widget.CursorTreeAdapter: void setChildrenCursor(int,android.database.Cursor)>
SINK|<java.nio.DoubleToByteBufferAdapter: java.nio.DoubleBuffer put(double)>
SINK|<javax.xml.validation.SchemaFactory: void setProperty(java.lang.String,java.lang.Object)>
SINK|<gov.nist.javax.sip.header.Reason: void setText(java.lang.String)>
SINK|<android.view.Surface: void setMatrix(float,float,float,float)>
SINK|<android.widget.ViewFlipper: void setAutoStart(boolean)>
SINK|<android.app.IntentService: void setIntentRedelivery(boolean)>
SINK|<org.ccil.cowan.tagsoup.AttributesImpl: void setURI(int,java.lang.String)>
SINK|<com.android.inputmethod.keyboard.PointerTracker: void setKeyDetector(com.android.inputmethod.keyboard.KeyDetector)>
SINK|<android.webkit.WebSettings: void setTextZoom(int)>
SINK|<gov.nist.javax.sip.stack.TCPMessageProcessor: gov.nist.javax.sip.stack.MessageChannel createMessageChannel(gov.nist.core.HostPort)>
SINK|<com.android.internal.telephony.test.SimulatedCommands: void setNextDialFailImmediately(boolean)>
SINK|<android.content.ContentService: void setSyncAutomatically(android.accounts.Account,java.lang.String,boolean)>
SINK|<gov.nist.javax.sip.stack.SIPDialog: void sendRequest(javax.sip.ClientTransaction)>
SINK|<com.android.email.Preferences: void setLastUsedAccountId(long)>
SINK|<android.content.res.XmlBlock$Parser: void setFeature(java.lang.String,boolean)>
SINK|<com.android.email.MessagingController$9: void onMessageUidChange(com.android.emailcommon.mail.Message,java.lang.String)>
SINK|<android.accounts.AccountAuthenticatorActivity: void setWallpaper(java.io.InputStream)>
SINK|<android.media.AudioTrack: int setAuxEffectSendLevel(float)>
SINK|<com.android.contacts.editor.ContactEditorFragment: void setData(com.android.contacts.model.Contact)>
SINK|<com.android.mms.transaction.NotificationTransaction: byte[] sendPdu(long,byte[],java.lang.String)>
SINK|<com.android.internal.widget.multiwaveview.TargetDrawable: void setState(int[])>
SINK|<android.app.WallpaperManager: void setStream(java.io.InputStream)>
SINK|<android.accessibilityservice.IAccessibilityServiceClient$Stub$Proxy: void setConnection(android.accessibilityservice.IAccessibilityServiceConnection,int)>
SINK|<android.app.FragmentManagerState: void writeToParcel(android.os.Parcel,int)>
SINK|<java.io.CharArrayWriter: java.io.CharArrayWriter append(char)>
SINK|<com.android.browser.XLargeUi: void setUrlTitle(com.android.browser.Tab)>
SINK|<android.widget.ResourceCursorAdapter: void setViewResource(int)>
SINK|<android.net.wifi.IWifiManager$Stub$Proxy: boolean enableNetwork(int,boolean)>
SINK|<android.widget.AbsListView: void setVisibleRangeHint(int,int)>
SINK|<android.nfc.tech.MifareClassic: void increment(int,int)>
SINK|<org.apache.http.message.BasicHeaderValueParser: org.apache.http.HeaderElement parseHeaderElement(org.apache.http.util.CharArrayBuffer,org.apache.http.message.ParserCursor)>
SINK|<android.accounts.AbstractAccountAuthenticator$Transport: void getAuthTokenLabel(android.accounts.IAccountAuthenticatorResponse,java.lang.String)>
SINK|<com.google.android.apps.lightcycle.opengl.Shader: void setVertices(java.nio.FloatBuffer)>
SINK|<com.android.server.NetworkManagementService: void setDnsServersForInterface(java.lang.String,java.lang.String[])>
SINK|<java.util.HashSet: boolean add(java.lang.Object)>
SINK|<com.android.internal.widget.IRemoteViewsAdapterConnection$Stub$Proxy: void onServiceConnected(android.os.IBinder)>
SINK|<com.android.browser.NavigationBarBase: void setLock(android.graphics.drawable.Drawable)>
SINK|<android.net.wifi.WifiManager: void setCountryCode(java.lang.String,boolean)>
SINK|<android.telephony.NeighboringCellInfo: void setCid(int)>
SINK|<com.android.internal.telephony.cdma.CDMAPhone: void enableEnhancedVoicePrivacy(boolean,android.os.Message)>
SINK|<java.nio.MappedByteBufferAdapter: java.nio.ByteBuffer putLong(long)>
SINK|<android.graphics.Matrix: void setSkew(float,float)>
SINK|<com.android.mms.ui.SlideView: void setImage(java.lang.String,android.graphics.Bitmap)>
SINK|<java.sql.Date: void setHours(int)>
SINK|<android.view.View: void setImportantForAccessibility(int)>
SINK|<android.widget.AdapterViewAnimator: void setSelection(int)>
SINK|<com.android.emailcommon.service.EmailServiceProxy: void sendMail(long)>
SINK|<android.app.Activity: void setContentView(android.view.View,android.view.ViewGroup$LayoutParams)>
SINK|<com.android.email.activity.setup.AccountSettingsFragment: android.os.Bundle buildArguments(long,java.lang.String)>
SINK|<com.android.videoeditor.widgets.MediaLinearLayout: void setSelectedView(int)>
SINK|<android.content.Intent: android.content.Intent parseIntent(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet)>
SINK|<android.app.ActivityManagerProxy: boolean profileControl(java.lang.String,int,boolean,java.lang.String,android.os.ParcelFileDescriptor,int)>
SINK|<org.apache.http.impl.cookie.DateUtils: java.util.Date parseDate(java.lang.String)>
SINK|<java.net.MulticastSocket: void setTTL(byte)>
SINK|<java.io.PrintStream: void write(int)>
SINK|<android.preference.Preference: void setSelectable(boolean)>
SINK|<android.hardware.SystemSensorManager$ListenerDelegate: void addSensor(android.hardware.Sensor)>
SINK|<com.android.internal.widget.ILockSettings$Stub$Proxy: void setString(java.lang.String,java.lang.String,int)>
SINK|<android.database.sqlite.SQLiteConnection: void execute(java.lang.String,java.lang.Object[],android.os.CancellationSignal)>
SINK|<android.view.textservice.TextServicesManager: void setSpellCheckerSubtype(android.view.textservice.SpellCheckerSubtype)>
SINK|<android.os.Bundle: void putBoolean(java.lang.String,boolean)>
SINK|<com.android.server.pm.Settings: com.android.server.pm.PreferredIntentResolver editPreferredActivitiesLPw(int)>
SINK|<java.io.DataOutputStream: void writeByte(int)>
SINK|<android.text.style.ForegroundColorSpan: void updateDrawState(android.text.TextPaint)>
SINK|<com.android.mms.ui.NoConfirmationSendService: void onHandleIntent(android.content.Intent)>
SINK|<com.android.internal.telephony.IIccPhoneBook$Stub$Proxy: boolean updateAdnRecordsInEfBySearch(int,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>
SINK|<java.lang.reflect.Field: void set(java.lang.Object,java.lang.Object)>
SINK|<com.android.mms.util.Recycler$SmsRecycler: void setMessageLimit(android.content.Context,int)>
SINK|<android.inputmethodservice.Keyboard: boolean setShifted(boolean)>
SINK|<android.os.PerformanceCollector: android.os.Bundle addIteration(java.lang.String)>
SINK|<android.os.Parcel: void writeArray(java.lang.Object[])>
SINK|<android.gesture.GestureStore: void save(java.io.OutputStream)>
SINK|<gov.nist.javax.sip.header.SIPDateHeader: void setDate(java.util.Calendar)>
SINK|<com.android.internal.telephony.RIL: void setGsmBroadcastConfig(com.android.internal.telephony.gsm.SmsBroadcastConfigInfo[],android.os.Message)>
SINK|<com.android.internal.view.menu.ActionMenuItem: android.view.MenuItem setActionProvider(android.view.ActionProvider)>
SINK|<com.android.contacts.list.ContactListItemView: void setPhoneticName(char[],int)>
SINK|<android.view.View: void setLongClickable(boolean)>
SINK|<java.util.logging.LogRecord: void setLoggerName(java.lang.String)>
SINK|<org.springframework.web.client.RestTemplate: org.springframework.http.ResponseEntity exchange(java.lang.String,org.springframework.http.HttpMethod,org.springframework.http.HttpEntity,java.lang.Class,java.lang.Object[])>
SINK|<android.nfc.INfcTag$Stub$Proxy: int close(int)>
SINK|<android.app.ActivityManagerNative: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>
SINK|<android.graphics.Canvas: void setViewport(int,int)>
SINK|<android.widget.ViewAnimator: void setInAnimation(android.view.animation.Animation)>
SINK|<android.view.accessibility.IAccessibilityManagerClient$Stub$Proxy: void setState(int)>
SINK|<android.net.sip.SimpleSessionDescription$Media: void setEncryption(java.lang.String,java.lang.String)>
SINK|<java.util.concurrent.FutureTask: void set(java.lang.Object)>
SINK|<com.android.server.usb.UsbDebuggingManager: void access$700(com.android.server.usb.UsbDebuggingManager,java.lang.String)>
SINK|<android.media.AudioService: void setRingerMode(int)>
SINK|<java.security.cert.X509CertSelector: void setSubjectAlternativeNames(java.util.Collection)>
SINK|<com.android.browser.homepages.Template: void assign(java.lang.String,java.lang.String)>
SINK|<android.app.ApplicationThreadProxy: void scheduleStopService(android.os.IBinder)>
SINK|<android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)>
SINK|<android.os.Debug: int setGlobalAllocationLimit(int)>
SINK|<com.android.internal.telephony.gsm.GSMPhone: void sendBurstDtmf(java.lang.String)>
SINK|<android.widget.PopupWindow: void setHeight(int)>
SINK|<com.android.server.sip.SipService$AutoRegistrationProcess: void setListener(android.net.sip.ISipSessionListener)>
SINK|<android.widget.PopupWindow: void update(int,int,int,int,boolean)>
SINK|<android.media.audiofx.EnvironmentalReverb: void setParameterListener(android.media.audiofx.EnvironmentalReverb$OnParameterChangeListener)>
SINK|<android.widget.RatingBar: void setNumStars(int)>
SINK|<android.view.accessibility.AccessibilityEvent: void setBeforeText(java.lang.CharSequence)>
SINK|<org.apache.harmony.security.asn1.ASN1Explicit: void setEncodingContent(org.apache.harmony.security.asn1.BerOutputStream)>
SINK|<android.os.INetworkManagementService$Stub$Proxy: void removeInterfaceQuota(java.lang.String)>
SINK|<com.google.android.mms.pdu.PduPersister: android.net.Uri move(android.net.Uri,android.net.Uri)>
SINK|<com.android.internal.telephony.gsm.GSMPhone: void setRadioPower(boolean)>
SINK|<com.android.phone.PhoneUtils: com.android.phone.PhoneUtils$CallerInfoToken startGetCallerInfo(android.content.Context,com.android.internal.telephony.Connection,com.android.internal.telephony.CallerInfoAsyncQuery$OnQueryCompleteListener,java.lang.Object)>
SINK|<com.android.server.am.ActiveServices: void setServiceForegroundLocked(android.content.ComponentName,android.os.IBinder,int,android.app.Notification,boolean)>
SINK|<com.android.providers.contacts.aggregation.util.ContactMatcher: void updateScoreWithNicknameMatch(long)>
SINK|<android.webkit.Plugin: void setPath(java.lang.String)>
SINK|<android.accounts.AccountAuthenticatorActivity: void sendOrderedBroadcast(android.content.Intent,java.lang.String,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>
SINK|<com.android.org.bouncycastle.util.io.Streams: void pipeAll(java.io.InputStream,java.io.OutputStream)>
SINK|<android.location.Location: void setSpeed(float)>
SINK|<android.view.IWindowManager$Stub$Proxy: boolean waitForWindowDrawn(android.os.IBinder,android.os.IRemoteCallback)>
SINK|<com.android.mms.ui.SlideView: void setAudio(android.net.Uri,java.lang.String,java.util.Map)>
SINK|<android.view.View: void setOnLongClickListener(android.view.View$OnLongClickListener)>
SINK|<android.widget.Switch: void setSwitchTypeface(android.graphics.Typeface)>
SINK|<android.widget.AbsListView$FlingRunnable: void startScroll(int,int,boolean)>
SINK|<org.xml.sax.helpers.XMLFilterImpl: void setProperty(java.lang.String,java.lang.Object)>
SINK|<com.android.launcher2.BubbleTextView: boolean setFrame(int,int,int,int)>
SINK|<com.android.gallery3d.ui.PhotoView$MyGestureListener: void setSwipingEnabled(boolean)>
SINK|<com.android.bluetooth.pan.PanService$BluetoothPanBinder: void setBluetoothTethering(boolean)>
SINK|<android.util.SparseArray: void append(int,java.lang.Object)>
SINK|<android.app.ActivityManager: java.util.List getRunningTasks(int)>
SINK|<android.app.TaskStackBuilder: void startActivities(android.os.Bundle,android.os.UserHandle)>
SINK|<android.hardware.Camera$Parameters: void setGpsTimestamp(long)>
SINK|<gov.nist.javax.sip.ListeningPointImpl: void sendHeartbeat(java.lang.String,int)>
SINK|<com.android.internal.telephony.DefaultPhoneNotifier: void notifyCallForwardingChanged(com.android.internal.telephony.Phone)>
SINK|<android.graphics.drawable.StateListDrawable: void setLayoutDirection(int)>
SINK|<com.android.internal.telephony.gsm.GSMPhone: void notifyDisconnect(com.android.internal.telephony.Connection)>
SINK|<android.view.View: void setDrawingCacheBackgroundColor(int)>
SINK|<com.android.server.am.BroadcastQueue: void setBroadcastTimeoutLocked(long)>
SINK|<com.android.gallery3d.filtershow.PanelController: void addComponent(android.view.View,android.view.View)>
SINK|<android.widget.CalendarView: void setMaxDate(long)>
SINK|<java.lang.SecurityManager: void checkRead(java.io.FileDescriptor)>
SINK|<com.android.org.bouncycastle.asn1.ASN1OutputStream: void writeLength(int)>
SINK|<android.net.IConnectivityManager$Stub$Proxy: void setPolicyDataEnable(int,boolean)>
SINK|<com.google.android.mms.pdu.ReadOrigInd: void setDate(long)>
SINK|<com.android.server.AppWidgetService: void bindAppWidgetId(int,android.content.ComponentName,android.os.Bundle)>
SINK|<java.security.cert.X509CertSelector: void setCertificate(java.security.cert.X509Certificate)>
SINK|<java.time.MonthDay: java.lang.Object writeReplace()>
SINK|<android.os.storage.IMountShutdownObserver$Stub$Proxy: void onShutDownComplete(int)>
SINK|<com.google.android.apps.lightcycle.panorama.RenderedGui: void setUndoButtonVisible(boolean)>
SINK|<android.test.InstrumentationTestCase: android.app.Activity launchActivity(java.lang.String,java.lang.Class,android.os.Bundle)>
SINK|<android.bluetooth.IBluetoothHeadset$Stub$Proxy: void phoneStateChanged(int,int,int,java.lang.String,int)>
SINK|<android.accounts.AccountManager$AmsTask$Response: void onResult(android.os.Bundle)>
SINK|<com.android.server.pm.PackageManagerService: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
SINK|<android.app.Activity: void setProgressBarIndeterminateVisibility(boolean)>
SINK|<org.apache.http.client.params.ClientParamBean: void setDefaultHeaders(java.util.Collection)>
SINK|<android.widget.ProgressBar: void setProgressDrawable(android.graphics.drawable.Drawable)>
SINK|<com.android.calendar.AllInOneActivity: void setControlsOffset(int)>
SINK|<com.android.gallery3d.filtershow.PanelController: void addView(android.view.View)>
SINK|<org.apache.harmony.xnet.provider.jsse.SSLSocketImpl: void setOOBInline(boolean)>
SINK|<android.app.ApplicationErrorReport: void dump(android.util.Printer,java.lang.String)>
SINK|<org.apache.http.client.params.ClientParamBean: void setConnectionManagerFactory(org.apache.http.conn.ClientConnectionManagerFactory)>
SINK|<com.android.providers.contacts.aggregation.ContactAggregator: void setContactId(long,long)>
SINK|<android.app.ActivityManager: void setPackageAskScreenCompat(java.lang.String,boolean)>
SINK|<org.apache.http.params.DefaultedHttpParams: org.apache.http.params.HttpParams setParameter(java.lang.String,java.lang.Object)>
SINK|<android.widget.SimpleAdapter: void setViewText(android.widget.TextView,java.lang.String)>
SINK|<android.inputmethodservice.InputMethodService: void setInputView(android.view.View)>
SINK|<android.test.IsolatedContext$MockAccountManager: void setPassword(android.accounts.Account,java.lang.String)>
SINK|<org.apache.james.mime4j.decoder.DecoderUtil: byte[] decodeBaseQuotedPrintable(java.lang.String)>
SINK|<com.android.providers.contacts.LegacyApiSupport: int update(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[])>
SINK|<android.widget.Scroller: void startScroll(int,int,int,int)>
SINK|<com.android.providers.telephony.SmsProvider: int update(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[])>
SINK|<com.coremedia.iso.IsoTypeWriter: void writeUtf8String(java.nio.ByteBuffer,java.lang.String)>
SINK|<android.view.animation.GridLayoutAnimationController: void setRowDelay(float)>
SINK|<com.android.internal.telephony.RIL: void acceptCall(android.os.Message)>
SINK|<com.android.bluetooth.a2dp.A2dpStateMachine$Connected: boolean processMessage(android.os.Message)>
SINK|<com.adobe.xmp.options.PropertyOptions: com.adobe.xmp.options.PropertyOptions setSchemaNode(boolean)>
SINK|<org.ccil.cowan.tagsoup.PYXWriter: void gi(char[],int,int)>
SINK|<android.gesture.GestureOverlayView: void setOrientation(int)>
SINK|<com.adobe.xmp.impl.XMPDateTimeImpl: void setSecond(int)>
SINK|<com.android.internal.telephony.CallManager: boolean startDtmf(char)>
SINK|<com.android.server.accessibility.AccessibilityManagerService$Service: void notifyGesture(int)>
SINK|<com.android.mms.transaction.NotificationTransaction: byte[] sendPdu(byte[],java.lang.String)>
SINK|<com.android.internal.telephony.PhoneBase: int enableApnType(java.lang.String)>
SINK|<javax.obex.ClientSession: javax.obex.HeaderSet delete(javax.obex.HeaderSet)>
SINK|<android.widget.EditText: void setEllipsize(android.text.TextUtils$TruncateAt)>
SINK|<com.android.server.am.ActivityManagerService: boolean dumpProcessesToGc(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[],int,boolean,boolean,java.lang.String)>
SINK|<org.apache.http.message.BasicHttpResponse: void setStatusLine(org.apache.http.ProtocolVersion,int)>
SINK|<android.os.Debug: void startMethodTracing(java.lang.String,int,int)>
SINK|<java.io.PrintWriter: void print(java.lang.String)>
SINK|<com.android.launcher2.Launcher: void openFolder(com.android.launcher2.FolderIcon)>
SINK|<com.android.contacts.calllog.CallLogListItemHelper: void setPhoneCallDetails(com.android.contacts.calllog.CallLogListItemViews,com.android.contacts.PhoneCallDetails,boolean)>
SINK|<android.location.Address: void setAddressLine(int,java.lang.String)>
SINK|<android.view.MotionEvent: void setLocation(float,float)>
SINK|<com.android.internal.telephony.PhoneProxy: void enableEnhancedVoicePrivacy(boolean,android.os.Message)>
SINK|<com.android.browser.ComboViewActivity: void openUrl(java.lang.String)>
SINK|<com.android.internal.statusbar.IStatusBar$Stub$Proxy: void addNotification(android.os.IBinder,com.android.internal.statusbar.StatusBarNotification)>
SINK|<com.android.server.location.LocationFudger: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
SINK|<org.apache.harmony.xml.dom.DOMConfigurationImpl$FixedParameter: void set(org.apache.harmony.xml.dom.DOMConfigurationImpl,java.lang.Object)>
SINK|<android.app.AlertDialog: void setButton2(java.lang.CharSequence,android.content.DialogInterface$OnClickListener)>
SINK|<android.net.LocalSocket: void setSendBufferSize(int)>
SINK|<java.util.EnumMap: java.lang.Object put(java.lang.Enum,java.lang.Object)>
SINK|<java.time.LocalDate: java.time.LocalDate parse(java.lang.CharSequence)>
SINK|<com.android.nfc.NfcService$NfcServiceHandler: void handleMessage(android.os.Message)>
SINK|<android.telephony.SmsManager: void sendDataMessage(java.lang.String,java.lang.String,short,byte[],android.app.PendingIntent,android.app.PendingIntent)>
SINK|<com.android.server.AlarmManagerService: boolean lookForPackageLocked(java.lang.String)>
SINK|<android.preference.Preference: void setTitle(java.lang.CharSequence)>
SINK|<android.widget.CursorAdapter: void setFilterQueryProvider(android.widget.FilterQueryProvider)>
SINK|<com.android.browser.BaseUi: void setFavicon(com.android.browser.Tab)>
SINK|<com.android.email.service.MailService: void setupSyncReportsLocked(long,android.content.Context)>
SINK|<com.android.internal.widget.ActionBarView: void setHomeButtonEnabled(boolean)>
SINK|<org.apache.http.message.AbstractHttpMessage: void setParams(org.apache.http.params.HttpParams)>
SINK|<com.google.android.mms.pdu.RetrieveConf: void setDeliveryReport(int)>
SINK|<java.lang.String: java.lang.String replace(char,char)>
SINK|<com.android.nfc.NfcService$NfcAdapterService: void setForegroundDispatch(android.app.PendingIntent,android.content.IntentFilter[],android.nfc.TechListParcel)>
SINK|<org.apache.harmony.xnet.provider.jsse.SSLSocketWrapper: void setKeepAlive(boolean)>
SINK|<com.android.internal.os.BinderInternal: void forceGc(java.lang.String)>
SINK|<com.android.internal.view.IInputContext$Stub$Proxy: void deleteSurroundingText(int,int)>
SINK|<com.android.email.Controller: void sendPendingMessages(long)>
SINK|<com.android.providers.userdictionary.UserDictionaryProvider: int update(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[])>
SINK|<com.google.android.apps.lightcycle.shaders.TargetShader: void setContrastFactor(float)>
SINK|<com.android.gallery3d.app.TransitionStore: void put(java.lang.Object,java.lang.Object)>
SINK|<org.apache.http.conn.scheme.SchemeRegistry: void setItems(java.util.Map)>
SINK|<com.android.email.mail.store.ImapFolder: void fetchInternal(com.android.emailcommon.mail.Message[],com.android.emailcommon.mail.FetchProfile,com.android.emailcommon.mail.Folder$MessageRetrievalListener)>
SINK|<android.content.ClipDescription: void writeToParcel(android.os.Parcel,int)>
SINK|<com.android.server.am.AppErrorDialog: void <init>
SINK|<com.android.email.LegacyConversions: int inferMailboxTypeFromName(android.content.Context,java.lang.String)>
SINK|<com.android.internal.telephony.RIL: void cancelPendingUssd(android.os.Message)>
SINK|<android.content.pm.IPackageManager$Stub$Proxy: void freeStorageAndNotify(long,android.content.pm.IPackageDataObserver)>
SINK|<gov.nist.javax.sip.header.RAck: void setCSeqNumber(int)>
SINK|<android.media.audiofx.Visualizer: int setEnabled(boolean)>
SINK|<com.android.providers.contacts.DbModifierWithNotification: long insert(java.lang.String,java.lang.String,android.content.ContentValues)>
SINK|<com.android.internal.telephony.gsm.GSMPhone: void notifySuppServiceFailed(com.android.internal.telephony.Phone$SuppService)>
SINK|<com.android.contacts.quickcontact.ActionMultiMap: void put(java.lang.String,com.android.contacts.quickcontact.Action,boolean)>
SINK|<com.google.android.mms.pdu.RetrieveConf: void setMessageClass(byte[])>
SINK|<android.app.Activity: void startActivities(android.content.Intent[])>
SINK|<android.hardware.Camera$Parameters: void setGpsLongitude(double)>
SINK|<android.location.ILocationManager$Stub$Proxy: void clearTestProviderLocation(java.lang.String)>
SINK|<com.android.emailcommon.service.IEmailService$Stub$Proxy: void setCallback(com.android.emailcommon.service.IEmailServiceCallback)>
SINK|<com.android.deskclock.Alarms: void setNextAlert(android.content.Context)>
SINK|<android.graphics.Matrix: void set(android.graphics.Matrix)>
SINK|<com.android.server.WallpaperManagerService$MyPackageMonitor: void onPackageUpdateStarted(java.lang.String,int)>
SINK|<com.android.gallery3d.filtershow.imageshow.ImageStraighten: void setActionDown(float,float)>
SINK|<android.app.SearchManager: void startSearch(java.lang.String,boolean,android.content.ComponentName,android.os.Bundle,boolean,android.graphics.Rect)>
SINK|<android.app.ActivityManagerProxy: void finishInstrumentation(android.app.IApplicationThread,int,android.os.Bundle)>
SINK|<android.webkit.DeviceMotionAndOrientationManager: void setUseMock()>
SINK|<android.test.AndroidTestRunner: void setTestClassName(java.lang.String,java.lang.String)>
SINK|<gov.nist.javax.sip.header.CSeq: void setSequenceNumber(int)>
SINK|<android.webkit.JWebCoreJavaBridge: void storeFilePathForContentUri(java.lang.String,java.lang.String)>
SINK|<android.graphics.drawable.ClipDrawable: void setAlpha(int)>
SINK|<com.android.internal.telephony.PhoneBase: void setCdmaSubscription(int,android.os.Message)>
SINK|<android.location.Address: void setSubLocality(java.lang.String)>
SINK|<android.widget.TabHost: void setCurrentTab(int)>
SINK|<android.view.View: void setNextFocusUpId(int)>
SINK|<android.location.Address: void setSubAdminArea(java.lang.String)>
SINK|<android.view.inputmethod.CompletionInfo: void writeToParcel(android.os.Parcel,int)>
SINK|<android.view.Surface: void setFlags(int,int)>
SINK|<com.android.email.activity.MessageListFragment: void setLayout(com.android.email.activity.ThreePaneLayout)>
SINK|<com.android.internal.widget.ActionBarContextView: void setSplitActionBar(boolean)>
SINK|<com.android.server.usb.UsbDeviceManager$UsbHandler: void sendMessage(int,java.lang.Object,boolean)>
SINK|<com.android.contacts.widget.TransitionAnimationView: void setMaskVisibility(boolean)>
SINK|<android.view.IWindowManager$Stub$Proxy: void removeWindowToken(android.os.IBinder)>
SINK|<com.android.mms.transaction.Transaction: byte[] sendPdu(long,byte[])>
SINK|<android.widget.PopupWindow: void setSoftInputMode(int)>
SINK|<android.widget.RemoteViews: void setTextViewText(int,java.lang.CharSequence)>
SINK|<android.os.Bundle: void putParcelable(java.lang.String,android.os.Parcelable)>
SINK|<android.os.IUserManager$Stub$Proxy: void setUserIcon(int,android.graphics.Bitmap)>
SINK|<android.database.sqlite.SQLiteDatabase: long setMaximumSize(long)>
SINK|<android.os.INetworkManagementService$Stub$Proxy: void setDnsServersForInterface(java.lang.String,java.lang.String[])>
SINK|<libcore.icu.NativeDecimalFormat: void setPositiveSuffix(java.lang.String)>
SINK|<java.util.concurrent.atomic.AtomicLong: void lazySet(long)>
SINK|<java.text.SimpleDateFormat: void set2DigitYearStart(java.util.Date)>
SINK|<java.text.DecimalFormatSymbols: void setInternationalCurrencySymbol(java.lang.String)>
SINK|<java.time.OffsetTime: void writeExternal(java.io.ObjectOutput)>
SINK|<org.kxml2.io.KXmlParser: void defineEntityReplacementText(java.lang.String,java.lang.String)>
SINK|<com.android.calendar.Utils: void setUpSearchView(android.widget.SearchView,android.app.Activity)>
SINK|<com.android.mms.ui.SlideListItemView: void setVideoThumbnail(java.lang.String,android.graphics.Bitmap)>
SINK|<android.util.Slog: int v(java.lang.String,java.lang.String,java.lang.Throwable)>
SINK|<android.filterfw.core.ShaderProgram: void setVertexCount(int)>
SINK|<com.android.mms.ui.MessageListItem: void setAudio(android.net.Uri,java.lang.String,java.util.Map)>
SINK|<android.widget.LinearLayout: void setVerticalGravity(int)>
SINK|<android.app.Dialog: void setCancelMessage(android.os.Message)>
SINK|<android.webkit.HTML5VideoView: void setOnCompletionListener(android.webkit.HTML5VideoViewProxy)>
SINK|<com.android.videoeditor.service.ApiService: void saveVideoEditor(android.content.Context,java.lang.String)>
SINK|<com.android.emailcommon.service.IEmailService$Stub$Proxy: void hostChanged(long)>
SINK|<android.view.Window: void setContainer(android.view.Window)>
SINK|<gov.nist.javax.sip.stack.SIPTransaction: void sendMessage(gov.nist.javax.sip.message.SIPMessage)>
SINK|<com.android.internal.statusbar.IStatusBarService$Stub$Proxy: void registerStatusBar(com.android.internal.statusbar.IStatusBar,com.android.internal.statusbar.StatusBarIconList,java.util.List,java.util.List,int[],java.util.List)>
SINK|<com.android.server.NetworkManagementService: void setInterfaceThrottle(java.lang.String,int,int)>
SINK|<android.content.ContentValues: void put(java.lang.String,java.lang.String)>
SINK|<com.android.server.EventLogTags: void writeLowStorage(long)>
SINK|<com.android.contacts.list.ContactBrowseListFragment: void setFilter(com.android.contacts.list.ContactListFilter)>
SINK|<android.widget.AbsListView: void setFriction(float)>
SINK|<android.app.ApplicationPackageManager: void setInstallerPackageName(java.lang.String,java.lang.String)>
SINK|<com.android.internal.view.menu.MenuBuilder: com.android.internal.view.menu.MenuBuilder setHeaderIconInt(android.graphics.drawable.Drawable)>
SINK|<android.os.storage.StorageVolume: void setStorageId(int)>
SINK|<android.view.ViewRootImpl: void dispatchInvalidateDelayed(android.view.View,long)>
SINK|<libcore.net.http.HttpsURLConnectionImpl: void setDoInput(boolean)>
SINK|<android.net.http.RequestHandle: boolean setupRedirect(java.lang.String,int,java.util.Map)>
SINK|<java.time.chrono.HijrahChronology: java.lang.Object writeReplace()>
SINK|<com.android.mms.ui.SlideListItemView: void setAudio(android.net.Uri,java.lang.String,java.util.Map)>
SINK|<java.io.PrintStream: void print(java.lang.String)>
SINK|<com.android.musicfx.Compatibility$Receiver: void onReceive(android.content.Context,android.content.Intent)>
SINK|<com.android.mms.ui.MessageListItem: void setImage(java.lang.String,android.graphics.Bitmap)>
SINK|<javax.xml.parsers.SAXParser: void parse(org.xml.sax.InputSource,org.xml.sax.HandlerBase)>
SINK|<java.util.zip.ZipOutputStream: void setMethod(int)>
SINK|<android.accounts.AccountManagerService: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
SINK|<gov.nist.javax.sip.header.AuthenticationHeader: void setRealm(java.lang.String)>
SINK|<com.android.internal.view.menu.SubMenuBuilder: android.view.SubMenu setHeaderIcon(android.graphics.drawable.Drawable)>
SINK|<java.io.FileWriter: java.io.Writer append(java.lang.CharSequence)>
SINK|<android.widget.GridView: void setRemoteViewsAdapter(android.content.Intent)>
SINK|<android.location.Address: void setExtras(android.os.Bundle)>
SINK|<com.android.nfc.NfceeAccessControl: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
SINK|<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setIconAttribute(int)>
SINK|<com.android.server.BackupManagerService$PerformFullRestoreTask: boolean restoreOneFile(java.io.InputStream,byte[])>
SINK|<android.webkit.WebSettings: void setGeolocationDatabasePath(java.lang.String)>
SINK|<android.webkit.WebViewClassic$WebViewInputConnection: boolean setComposingRegion(int,int)>
SINK|<com.android.internal.view.menu.MenuBuilder: void setGroupEnabled(int,boolean)>
SINK|<java.util.concurrent.CompletableFuture: java.util.concurrent.CompletableFuture runAfterBothAsync(java.util.concurrent.CompletionStage,java.lang.Runnable)>
SINK|<android.provider.Settings$System: void setShowGTalkServiceStatusForUser(android.content.ContentResolver,boolean,int)>
SINK|<android.text.style.SuperscriptSpan: void updateDrawState(android.text.TextPaint)>
SINK|<com.android.internal.view.IInputMethod$Stub$Proxy: void startInput(com.android.internal.view.IInputContext,android.view.inputmethod.EditorInfo)>
SINK|<com.android.browser.NavigationBarBase: void setDisplayTitle(java.lang.String)>
SINK|<com.android.server.DropBoxManagerService: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
SINK|<android.net.INetworkPolicyManager$Stub$Proxy: void setRestrictBackground(boolean)>
SINK|<android.app.ActivityManagerProxy: void unbindFinished(android.os.IBinder,android.content.Intent,boolean)>
SINK|<com.android.internal.telephony.DefaultPhoneNotifier: void notifyServiceState(com.android.internal.telephony.Phone)>
SINK|<android.webkit.CallbackProxy: void onExceededDatabaseQuota(java.lang.String,java.lang.String,long,long,long,android.webkit.WebStorage$QuotaUpdater)>
SINK|<com.android.internal.os.BatteryStatsImpl: void writeHistory(android.os.Parcel,boolean)>
SINK|<com.android.gallery3d.ui.SlotView: void setScrollPosition(int)>
SINK|<com.google.android.apps.lightcycle.camera.NullSurfaceCameraPreview: void setMainView(com.google.android.apps.lightcycle.panorama.LightCycleView)>
SINK|<java.util.Vector: void setSize(int)>
SINK|<com.android.calendar.CalendarController: void sendEvent(java.lang.Object,long,android.text.format.Time,android.text.format.Time,android.text.format.Time,long,int,long,java.lang.String,android.content.ComponentName)>
SINK|<com.google.android.apps.lightcycle.shaders.GroundPlaneShader: void setColor(float[])>
SINK|<com.android.mms.ui.BasicSlideEditorView: void setVideoThumbnail(java.lang.String,android.graphics.Bitmap)>
SINK|<com.android.browser.NavigationBarBase: void onAction(java.lang.String,java.lang.String,java.lang.String)>
SINK|<java.security.cert.PKIXParameters: void setDate(java.util.Date)>
SINK|<org.apache.http.entity.AbstractHttpEntity: void setContentEncoding(java.lang.String)>
SINK|<com.android.mms.transaction.MessagingNotification: void notifyDownloadFailed(android.content.Context,long)>
SINK|<android.os.Handler$MessengerImpl: void send(android.os.Message)>
SINK|<com.android.internal.telephony.cdma.CDMAPhone: void setCellBroadcastSmsConfig(int[],android.os.Message)>
SINK|<android.app.ListFragment: void setListShown(boolean)>
SINK|<com.android.server.wm.WindowAnimator: void setScreenRotationAnimationLocked(int,com.android.server.wm.ScreenRotationAnimation)>
SINK|<java.time.chrono.ThaiBuddhistDate: void writeExternal(java.io.DataOutput)>
SINK|<android.app.ListFragment: void setSelection(int)>
SINK|<com.android.server.InputMethodManagerService: boolean setInputMethodEnabledLocked(java.lang.String,boolean)>
SINK|<com.android.server.usb.UsbDebuggingManager: void dump(java.io.FileDescriptor,java.io.PrintWriter)>
SINK|<java.util.Calendar: void setTime(java.util.Date)>
SINK|<com.android.email.activity.MailboxFragmentAdapter: void bindView(android.view.View,android.content.Context,android.database.Cursor)>
SINK|<com.google.android.apps.lightcycle.math.Matrix3x3d: void setSameDiagonal(double)>
SINK|<android.webkit.BrowserFrame: void addJavascriptInterface(java.lang.Object,java.lang.String,boolean)>
SINK|<com.android.bluetooth.hid.HidService$BluetoothInputDeviceBinder: boolean setPriority(android.bluetooth.BluetoothDevice,int)>
SINK|<android.service.wallpaper.IWallpaperService$Stub$Proxy: void attach(android.service.wallpaper.IWallpaperConnection,android.os.IBinder,int,boolean,int,int)>
SINK|<com.google.common.collect.MapMakerInternalMap$StrongEntry: void setExpirationTime(long)>
SINK|<android.bluetooth.IBluetooth$Stub$Proxy: void unregisterCallback(android.bluetooth.IBluetoothCallback)>
SINK|<android.widget.AbsSpinner$SavedState: void writeToParcel(android.os.Parcel,int)>
SINK|<android.media.MediaPlayer: void setOnSeekCompleteListener(android.media.MediaPlayer$OnSeekCompleteListener)>
SINK|<java.text.DecimalFormatSymbols: void setCurrencySymbol(java.lang.String)>
SINK|<android.bluetooth.BluetoothHeadset: boolean setPriority(android.bluetooth.BluetoothDevice,int)>
SINK|<android.media.MediaPlayer: void setOnInfoListener(android.media.MediaPlayer$OnInfoListener)>
SINK|<com.android.internal.statusbar.StatusBarIconList: void setIcon(int,com.android.internal.statusbar.StatusBarIcon)>
SINK|<com.android.email.activity.UIControllerTwoPane: void openInternal(com.android.email.MessageListContext,long)>
SINK|<android.inputmethodservice.InputMethodService: boolean onExtractTextContextMenuItem(int)>
SINK|<android.app.ApplicationPackageManager: boolean addPermission(android.content.pm.PermissionInfo)>
SINK|<com.google.android.picasasync.PicasaSyncManager: void performSync(com.google.android.picasasync.PicasaSyncManager$SyncSession)>
SINK|<gov.nist.javax.sip.header.extensions.Join: void setToTag(java.lang.String)>
SINK|<com.google.android.mms.pdu.SendReq: void setDeliveryReport(int)>
SINK|<android.hardware.Camera$Parameters: void setSceneMode(java.lang.String)>
SINK|<com.android.videoeditor.VideoEditorBaseActivity$ServiceListener: void onMediaItemDurationSet(java.lang.String,java.lang.String,long,java.lang.Exception)>
SINK|<com.android.gallery3d.filtershow.imageshow.ImageGeometry: void setLocalScale(float)>
SINK|<com.android.mms.util.NullItemLoadedFuture: void setIsDone(boolean)>
SINK|<android.webkit.WebViewClassic$PrivateHandler: void handleMessage(android.os.Message)>
SINK|<java.net.MulticastSocket: void setNetworkInterface(java.net.NetworkInterface)>
SINK|<org.apache.harmony.xnet.provider.jsse.SSLEngineImpl: javax.net.ssl.SSLEngineResult wrap(java.nio.ByteBuffer[],int,int,java.nio.ByteBuffer)>
SINK|<android.content.ContentProviderClient: int update(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[])>
SINK|<android.database.sqlite.SQLiteDatabase: long replace(java.lang.String,java.lang.String,android.content.ContentValues)>
SINK|<com.android.bluetooth.btservice.AdapterService$AdapterServiceBinder: boolean setPin(android.bluetooth.BluetoothDevice,boolean,int,byte[])>
SINK|<android.view.IWindowManager$Stub$Proxy: void removeDisplayContentChangeListener(int,android.view.IDisplayContentChangeListener)>
SINK|<com.android.internal.telephony.cdma.CdmaCallTracker: com.android.internal.telephony.Connection dial(java.lang.String)>
SINK|<android.content.pm.ComponentInfo: void dumpFront(android.util.Printer,java.lang.String)>
SINK|<java.util.jar.Manifest: void write(java.util.jar.Manifest,java.io.OutputStream)>
SINK|<android.webkit.WebChromeClient: void setupAutoFill(android.os.Message)>
SINK|<java.net.HttpCookie: void setPortlist(java.lang.String)>
SINK|<android.net.wifi.WifiApConfigStore$InactiveState: boolean processMessage(android.os.Message)>
SINK|<android.app.ApplicationErrorReport$CrashInfo: void dump(android.util.Printer,java.lang.String)>
SINK|<android.animation.ObjectAnimator: android.animation.Animator setDuration(long)>
SINK|<android.security.IKeyChainService$Stub$Proxy: boolean deleteCaCertificate(java.lang.String)>
SINK|<java.lang.invoke.VolatileCallSite: void setTarget(java.lang.invoke.MethodHandle)>
SINK|<org.ccil.cowan.tagsoup.PYXWriter: void processingInstruction(java.lang.String,java.lang.String)>
SINK|<android.net.TrafficStats: void setThreadStatsUid(int)>
SINK|<android.app.NotificationManager: void notify(java.lang.String,int,android.app.Notification)>
SINK|<android.app.DownloadManager: android.os.ParcelFileDescriptor openDownloadedFile(long)>
SINK|<android.view.IWindowManager$Stub$Proxy: void reenableKeyguard(android.os.IBinder)>
SINK|<com.android.launcher2.DragView: void setAlpha(float)>
SINK|<android.widget.ExpandableListView: boolean performItemClick(android.view.View,int,long)>
SINK|<com.android.internal.telephony.PhoneProxy: void setCdmaSubscription(int,android.os.Message)>
SINK|<android.widget.VideoView: void setOnErrorListener(android.media.MediaPlayer$OnErrorListener)>
SINK|<android.media.audiofx.BassBoost: void setParameterListener(android.media.audiofx.BassBoost$OnParameterChangeListener)>
SINK|<com.android.emailcommon.service.IEmailService$Stub$Proxy: void stopSync(long)>
SINK|<android.app.ApplicationThreadProxy: void scheduleUnbindService(android.os.IBinder,android.content.Intent)>
SINK|<android.widget.Editor$ErrorPopup: void update(int,int,int,int,boolean)>
SINK|<com.adobe.xmp.impl.XMPDateTimeImpl: void setYear(int)>
SINK|<com.android.internal.view.IInputMethodManager$Stub$Proxy: void finishInput(com.android.internal.view.IInputMethodClient)>
SINK|<java.lang.Runtime: void runFinalizersOnExit(boolean)>
SINK|<java.util.zip.Inflater: int setFileInput(java.io.FileDescriptor,long,int)>
SINK|<android.accounts.IAccountManager$Stub$Proxy: void editProperties(android.accounts.IAccountManagerResponse,java.lang.String,boolean)>
SINK|<android.webkit.WebViewClassic$WebViewInputConnection: void setupEditorInfo(android.view.inputmethod.EditorInfo)>
SINK|<org.xml.sax.HandlerBase: void setDocumentLocator(org.xml.sax.Locator)>
SINK|<com.android.mms.ui.SlideshowAttachmentView: void setVideoVisibility(boolean)>
SINK|<android.widget.DialerFilter: void setDigitsWatcher(android.text.TextWatcher)>
SINK|<com.android.calendar.selectcalendars.SelectCalendarsSimpleAdapter: void setVisible(int,int)>
SINK|<java.io.EmulatedFieldsForDumping: void put(java.lang.String,int)>
SINK|<android.net.wifi.p2p.WifiP2pManager: void requestPersistentGroupInfo(android.net.wifi.p2p.WifiP2pManager$Channel,android.net.wifi.p2p.WifiP2pManager$PersistentGroupInfoListener)>
SINK|<org.apache.harmony.xnet.provider.jsse.OpenSSLServerSocketImpl: void setEnabledCipherSuites(java.lang.String[])>
SINK|<com.google.common.collect.MapMakerInternalMap$AbstractSerializationProxy: void readEntries(java.io.ObjectInputStream)>
SINK|<com.android.videoeditor.widgets.MediaLinearLayout: android.view.View addTransition(com.android.videoeditor.service.MovieTransition,java.lang.String)>
SINK|<com.android.internal.telephony.sip.SipCommandInterface: void setOnNITZTime(android.os.Handler,int,java.lang.Object)>
SINK|<android.media.MediaPlayer: void setDisplay(android.view.SurfaceHolder)>
SINK|<android.webkit.CallbackProxy: void onReceivedSslError(android.webkit.SslErrorHandler,android.net.http.SslError)>
SINK|<javax.xml.parsers.SAXParser: void parse(java.io.InputStream,org.xml.sax.HandlerBase,java.lang.String)>
SINK|<com.android.server.AppWidgetServiceImpl: boolean bindAppWidgetIdIfAllowed(java.lang.String,int,android.content.ComponentName,android.os.Bundle)>
SINK|<com.android.server.location.LocationProviderProxy: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
SINK|<com.android.internal.os.BatteryStatsImpl$Timer: void writeTimerToParcel(android.os.Parcel,com.android.internal.os.BatteryStatsImpl$Timer,long)>
SINK|<com.android.launcher2.CellLayout: void setFolderLeaveBehindCell(int,int)>
SINK|<android.widget.ActivityChooserModel$DefaultSorter: void sort(android.content.Intent,java.util.List,java.util.List)>
SINK|<java.util.concurrent.ConcurrentHashMap: java.lang.Object putIfAbsent(java.lang.Object,java.lang.Object)>
SINK|<gov.nist.core.MultiValueMapImpl: java.util.List put(java.lang.String,java.lang.Object)>
SINK|<com.android.server.wm.WindowManagerService: void setAnimDimParams(int,com.android.server.wm.DimAnimator$Parameters)>
SINK|<com.android.mms.ui.BasicSlideEditorView: void setAudio(android.net.Uri,java.lang.String,java.util.Map)>
SINK|<android.app.admin.IDevicePolicyManager$Stub$Proxy: void setPasswordExpirationTimeout(android.content.ComponentName,long,int)>
SINK|<android.net.wifi.WifiStateMachine: void setDriverStart(boolean,boolean)>
SINK|<com.android.mms.transaction.MessageStatusReceiver: void onReceive(android.content.Context,android.content.Intent)>
SINK|<com.android.browser.UrlHandler$RLZTask: void onPostExecute(java.lang.String)>
SINK|<android.app.AlertDialog: void setTitle(java.lang.CharSequence)>
SINK|<android.net.wifi.WifiManager: boolean setWifiEnabled(boolean)>
SINK|<com.android.contacts.detail.ContactDetailDisplayUtils: void setSocialSnippet(android.content.Context,com.android.contacts.model.Contact,android.widget.TextView,android.widget.ImageView)>
SINK|<com.android.camera.ui.MoreSettingPopup: void setPreferenceEnabled(java.lang.String,boolean)>
SINK|<android.content.pm.IPackageManager$Stub$Proxy: void deleteApplicationCacheFiles(java.lang.String,android.content.pm.IPackageDataObserver)>
SINK|<android.media.AudioService: void adjustStreamVolume(int,int,int)>
SINK|<com.android.internal.telephony.sip.SipPhone: void setCellBroadcastSmsConfig(int[],android.os.Message)>
SINK|<android.app.admin.IDevicePolicyManager$Stub$Proxy: boolean packageHasActiveAdmins(java.lang.String,int)>
SINK|<com.android.server.NativeDaemonConnector: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
SINK|<android.content.res.AssetManager: android.content.res.AssetFileDescriptor openNonAssetFd(int,java.lang.String)>
SINK|<com.android.vcard.VCardProperty: void addParameter(java.lang.String,java.lang.String)>
SINK|<org.apache.http.message.BasicHttpResponse: void setStatusCode(int)>
SINK|<android.bluetooth.IBluetoothHeadset$Stub$Proxy: boolean setPriority(android.bluetooth.BluetoothDevice,int)>
SINK|<android.net.wifi.p2p.WifiP2pDevice: void writeToParcel(android.os.Parcel,int)>
SINK|<com.android.internal.telephony.DataConnection$DcInactiveState: boolean processMessage(android.os.Message)>
SINK|<java.text.NumberFormat: void setParseIntegerOnly(boolean)>
SINK|<android.bluetooth.IBluetoothHealthCallback$Stub$Proxy: void onHealthAppConfigurationStatusChange(android.bluetooth.BluetoothHealthAppConfiguration,int)>
SINK|<com.android.videoeditor.service.ApiService: void getTransitionThumbnails(android.content.Context,java.lang.String,java.lang.String,int)>
SINK|<org.apache.harmony.xnet.provider.jsse.OpenSSLSocketImpl: void setEnabledProtocols(java.lang.String[])>
SINK|<java.sql.Date: void setMinutes(int)>
SINK|<com.android.internal.telephony.PhoneProxy: void setOnPostDialCharacter(android.os.Handler,int,java.lang.Object)>
SINK|<android.filterfw.core.MutableFrameFormat: void setDimensionCount(int)>
SINK|<com.google.android.apps.lightcycle.opengl.DeviceOrientedSprite: void setPositions(android.graphics.PointF,android.graphics.PointF,int,int)>
SINK|<android.hardware.Camera: void setErrorCallback(android.hardware.Camera$ErrorCallback)>
SINK|<com.android.emailcommon.service.IEmailService$Stub$Proxy: void setLogging(int)>
SINK|<android.inputmethodservice.KeyboardView: void setKeyboard(android.inputmethodservice.Keyboard)>
SINK|<javax.xml.transform.sax.SAXSource: void setInputSource(org.xml.sax.InputSource)>
SINK|<android.accessibilityservice.UiTestAutomationBridge: boolean performAccessibilityAction(int,long,int,android.os.Bundle)>
SINK|<android.inputmethodservice.InputMethodService: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
SINK|<android.net.wifi.IWifiManager$Stub$Proxy: boolean disableNetwork(int)>
SINK|<android.app.ActivityManagerProxy: android.os.IBinder peekService(android.content.Intent,java.lang.String)>
SINK|<android.app.SharedPreferencesImpl$EditorImpl: android.content.SharedPreferences$Editor putStringSet(java.lang.String,java.util.Set)>
SINK|<gov.nist.javax.sip.header.AuthenticationHeader: void setCNonce(java.lang.String)>
SINK|<android.content.res.AssetFileDescriptor: void writeToParcel(android.os.Parcel,int)>
SINK|<libcore.icu.NativeDecimalFormat: void setMultiplier(int)>
SINK|<android.view.View: void setHorizontalScrollBarEnabled(boolean)>
SINK|<com.android.email.activity.UiUtilities: void setVisibilitySafe(android.view.View,int)>
SINK|<android.media.AudioService: void setSpeakerphoneOn(boolean)>
SINK|<java.util.zip.Deflater: void setInput(byte[])>
SINK|<android.util.Log: int i(java.lang.String,java.lang.String,java.lang.Throwable)>
SINK|<libcore.io.ForwardingOs: void setsockoptTimeval(java.io.FileDescriptor,int,int,libcore.io.StructTimeval)>
SINK|<android.view.GLES20TextureLayer: void setOpaque(boolean)>
SINK|<java.util.logging.Level: java.util.logging.Level parse(java.lang.String)>
SINK|<java.security.cert.PKIXRevocationChecker: void setOcspResponses(java.util.Map)>
SINK|<com.android.exchange.adapter.Serializer: com.android.exchange.adapter.Serializer tag(int)>
SINK|<com.android.email.provider.EmailProvider: int update(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[])>
SINK|<android.widget.ArrayAdapter: void setNotifyOnChange(boolean)>
SINK|<android.widget.TextView: void setError(java.lang.CharSequence,android.graphics.drawable.Drawable)>
SINK|<android.media.IAudioService$Stub$Proxy: void setMasterVolume(int,int)>
SINK|<java.text.CollationElementIterator: void setText(java.text.CharacterIterator)>
SINK|<org.apache.http.params.HttpConnectionParams: void setSoReuseaddr(org.apache.http.params.HttpParams,boolean)>
SINK|<org.apache.http.protocol.UriPatternMatcher: void setHandlers(java.util.Map)>
SINK|<android.webkit.WebViewClassic: void setJsFlags(java.lang.String)>
SINK|<com.android.internal.os.BatteryStatsImpl: void readFromParcelLocked(android.os.Parcel)>
SINK|<java.util.Properties: java.lang.Object setProperty(java.lang.String,java.lang.String)>
SINK|<android.webkit.WebSettings: void setDefaultTextEncodingName(java.lang.String)>
SINK|<com.android.internal.telephony.RIL: void startDtmf(char,android.os.Message)>
SINK|<gov.nist.javax.sip.stack.SIPDialog: void setResponseTags(gov.nist.javax.sip.message.SIPResponse)>
SINK|<com.android.mms.dom.ElementImpl: void setIdAttributeNS(java.lang.String,java.lang.String,boolean)>
SINK|<com.android.mms.ui.AudioAttachmentView: void setImage(java.lang.String,android.graphics.Bitmap)>
SINK|<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setPositiveButton(int,android.content.DialogInterface$OnClickListener)>
SINK|<com.android.server.usb.UsbDeviceManager: void setCurrentFunctions(java.lang.String,boolean)>
SINK|<android.widget.CursorTreeAdapter: void setFilterQueryProvider(android.widget.FilterQueryProvider)>
SINK|<gov.nist.javax.sip.address.SipUri: void setHost(java.lang.String)>
SINK|<android.media.audiofx.EnvironmentalReverb: void setReflectionsDelay(int)>
SINK|<android.media.IRemoteControlDisplay$Stub$Proxy: void setMetadata(int,android.os.Bundle)>
SINK|<android.media.RingtoneManager: void setIncludeDrm(boolean)>
SINK|<com.android.nfc.dhimpl.NativeLlcpSocket: void send(byte[])>
SINK|<com.android.internal.statusbar.IStatusBar$Stub$Proxy: void setSystemUiVisibility(int,int)>
SINK|<android.speech.tts.TextToSpeech: int addEarcon(java.lang.String,java.lang.String,int)>
SINK|<android.graphics.drawable.PictureDrawable: void setFilterBitmap(boolean)>
SINK|<android.animation.ObjectAnimator: void setFloatValues(float[])>
SINK|<com.android.internal.policy.impl.keyguard.PagedView: void setScaleX(float)>
SINK|<java.nio.MappedByteBufferAdapter: java.nio.ByteBuffer putChar(int,char)>
SINK|<android.app.IActivityController$Stub$Proxy: int appNotResponding(java.lang.String,int,java.lang.String)>
SINK|<com.android.internal.policy.impl.keyguard.KeyguardWidgetPager: void addWidget(android.view.View,int)>
SINK|<com.android.internal.view.menu.ActionMenuView: boolean invokeItem(com.android.internal.view.menu.MenuItemImpl)>
SINK|<org.ccil.cowan.tagsoup.PYXWriter: void aname(char[],int,int)>
SINK|<android.webkit.WebViewClassic: void setMockGeolocationPermission(boolean)>
SINK|<java.time.OffsetDateTime: java.time.OffsetDateTime parse(java.lang.CharSequence)>
SINK|<com.android.deskclock.Alarms: void enableAlarm(android.content.Context,int,boolean)>
SINK|<android.net.NetworkStats: void dump(java.lang.String,java.io.PrintWriter)>
SINK|<com.android.internal.telephony.RIL: void queryCallForwardStatus(int,int,java.lang.String,android.os.Message)>
SINK|<com.android.internal.appwidget.IAppWidgetService$Stub$Proxy: int[] startListening(com.android.internal.appwidget.IAppWidgetHost,java.lang.String,int,java.util.List)>
SINK|<android.bluetooth.IBluetoothHeadset$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>
SINK|<android.location.LocationManager: void requestSingleUpdate(java.lang.String,android.location.LocationListener,android.os.Looper)>
SINK|<com.android.providers.contacts.DataRowHandlerForPhoneNumber: boolean update(android.database.sqlite.SQLiteDatabase,com.android.providers.contacts.TransactionContext,android.content.ContentValues,android.database.Cursor,boolean)>
SINK|<com.android.server.LocationManagerService$Receiver: boolean callStatusChangedLocked(java.lang.String,int,android.os.Bundle)>
SINK|<android.os.IPowerManager$Stub$Proxy: void setMaximumScreenOffTimeoutFromDeviceAdmin(int)>
SINK|<com.android.internal.telephony.SMSDispatcher: void sendRawPdu(byte[],byte[],android.app.PendingIntent,android.app.PendingIntent,java.lang.String)>
SINK|<android.view.View: void setBackgroundResource(int)>
SINK|<android.widget.RelativeLayout$DependencyGraph$Node: void setNextPoolable(java.lang.Object)>
SINK|<com.android.launcher2.Workspace: void setFinalScrollForPageChange(int)>
SINK|<com.android.browser.NavigationBarBase: void setIncognitoMode(boolean)>
SINK|<android.widget.CalendarView: void setSelectedDateVerticalBar(int)>
SINK|<java.text.DecimalFormatSymbols: void setMonetaryDecimalSeparator(char)>
SINK|<android.app.Activity: void setFinishOnTouchOutside(boolean)>
SINK|<com.android.internal.telephony.IWapPushManager$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>
SINK|<org.ccil.cowan.tagsoup.AttributesImpl: void setAttribute(int,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>
SINK|<gov.nist.javax.sip.header.Via: void setBranch(java.lang.String)>
SINK|<android.app.Activity: void setFeatureDrawable(int,android.graphics.drawable.Drawable)>
SINK|<com.android.server.TelephonyRegistry: void notifySignalStrength(android.telephony.SignalStrength)>
SINK|<java.io.PrintStream: void println(long)>
SINK|<android.app.ApplicationThreadProxy: void scheduleTrimMemory(int)>
SINK|<android.net.wifi.p2p.WifiP2pManager: void requestPeers(android.net.wifi.p2p.WifiP2pManager$Channel,android.net.wifi.p2p.WifiP2pManager$PeerListListener)>
SINK|<android.appwidget.AppWidgetManager: void notifyAppWidgetViewDataChanged(int,int)>
SINK|<android.content.res.XmlBlock$Parser: void setInput(java.io.InputStream,java.lang.String)>
SINK|<android.net.sip.SipProfile$Builder: android.net.sip.SipProfile$Builder setPort(int)>
SINK|<android.graphics.Paint: void setARGB(int,int,int,int)>
SINK|<com.google.android.apps.lightcycle.shaders.ScaledTransparencyShader: void setAlpha(float)>
SINK|<com.android.internal.telephony.cdma.RuimSmsInterfaceManager: void sendData(java.lang.String,java.lang.String,int,byte[],android.app.PendingIntent,android.app.PendingIntent)>
SINK|<com.android.mms.ui.SlideshowAttachmentView: void setText(java.lang.String,java.lang.String)>
SINK|<android.graphics.drawable.Drawable: void setFilterBitmap(boolean)>
SINK|<com.android.server.power.PowerManagerService: void setButtonBrightnessOverrideFromWindowManager(int)>
SINK|<com.android.bluetooth.btservice.AdapterService: boolean setRemoteAlias(android.bluetooth.BluetoothDevice,java.lang.String)>
SINK|<android.widget.DialerFilter: void setMode(int)>
SINK|<android.view.View: void setTag(int,java.lang.Object)>
SINK|<com.android.email.Controller: void updateMailbox(long,long,boolean)>
SINK|<com.android.contacts.list.DefaultContactBrowseListFragment: void setFilter(com.android.contacts.list.ContactListFilter)>
SINK|<android.app.admin.IDevicePolicyManager$Stub$Proxy: void reportSuccessfulPasswordAttempt(int)>
SINK|<gov.nist.javax.sip.header.Event: void setEventId(java.lang.String)>
SINK|<android.net.sip.SipAudioCall: void setListener(android.net.sip.SipAudioCall$Listener,boolean)>
SINK|<com.android.mms.dom.smil.SmilRootLayoutElementImpl: void setWidth(int)>
SINK|<com.android.inputmethod.latin.suggestions.SuggestionStripView: int setMoreSuggestionsHeight(int)>
SINK|<android.net.ConnectivityManager: void setBackgroundDataSetting(boolean)>
SINK|<android.app.IActivityController$Stub$Proxy: int appEarlyNotResponding(java.lang.String,int,java.lang.String)>
SINK|<android.widget.NumberPicker$AccessibilityNodeProviderImpl: void sendAccessibilityEventForVirtualView(int,int)>
SINK|<android.app.ActivityManagerProxy: boolean removeTask(int,int)>
SINK|<android.widget.TextView: void setEms(int)>
SINK|<android.test.AndroidTestRunner: void setInstrumentaiton(android.app.Instrumentation)>
SINK|<com.google.common.collect.Lists$AbstractListWrapper: java.lang.Object set(int,java.lang.Object)>
SINK|<java.lang.reflect.AccessibleObject: void setAccessible(java.lang.reflect.AccessibleObject[],boolean)>
SINK|<android.widget.RemoteViewsAdapter$RemoteViewsMetaData: void set(android.widget.RemoteViewsAdapter$RemoteViewsMetaData)>
SINK|<java.nio.MappedByteBufferAdapter: java.nio.ByteBuffer putDouble(double)>
SINK|<java.io.File: boolean setReadable(boolean)>
SINK|<com.android.contacts.model.RawContactModifier: void migrateGenericWithTypeColumn(com.android.contacts.model.RawContactDelta,com.android.contacts.model.RawContactDelta,com.android.contacts.model.dataitem.DataKind)>
SINK|<android.view.accessibility.AccessibilityManager: void sendAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>
SINK|<com.android.internal.telephony.cdma.CdmaServiceStateTracker: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
SINK|<android.webkit.WebViewClassic: void setMockGeolocationError(int,java.lang.String)>
SINK|<android.speech.tts.TextToSpeech: int setOnUtteranceCompletedListener(android.speech.tts.TextToSpeech$OnUtteranceCompletedListener)>
SINK|<java.io.File: boolean delete()>
SINK|<android.media.IRingtonePlayer$Stub$Proxy: void playAsync(android.net.Uri,android.os.UserHandle,boolean,int)>
SINK|<com.android.server.am.ActivityManagerService: void dumpDbInfo(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
SINK|<android.net.http.Headers: void setContentEncoding(java.lang.String)>
SINK|<gov.nist.javax.sip.stack.UDPMessageChannel: void sendMessage(byte[],java.net.InetAddress,int,java.lang.String,boolean)>
SINK|<android.app.IStopUserCallback$Stub$Proxy: void userStopped(int)>
SINK|<android.preference.PreferenceActivity: void startPreferencePanel(java.lang.String,android.os.Bundle,int,java.lang.CharSequence,android.app.Fragment,int)>
SINK|<gov.nist.javax.sip.header.AuthenticationHeader: void setResponse(java.lang.String)>
SINK|<com.android.internal.telephony.PhoneBase: void notifyOtaspChanged(int)>
SINK|<libcore.io.BlockGuardOs: int sendto(java.io.FileDescriptor,byte[],int,int,int,java.net.InetAddress,int)>
SINK|<android.text.HtmlToSpannedConverter: void processingInstruction(java.lang.String,java.lang.String)>
SINK|<com.android.gallery3d.app.AlbumPage: void doCluster(int)>
SINK|<java.io.PrintWriter: void println(double)>
SINK|<org.apache.http.util.EntityUtils: void updateEntity(org.apache.http.HttpResponse,org.apache.http.HttpEntity)>
SINK|<com.google.android.mms.pdu.SendReq: void setMessageClass(byte[])>
SINK|<com.android.internal.telephony.CallerInfoAsyncQuery: void addQueryListener(int,com.android.internal.telephony.CallerInfoAsyncQuery$OnQueryCompleteListener,java.lang.Object)>
SINK|<com.android.mms.transaction.SendTransaction: byte[] sendPdu(byte[],java.lang.String)>
SINK|<android.text.style.ReplacementSpan: void updateMeasureState(android.text.TextPaint)>
SINK|<android.accounts.AccountManager: void updateAppPermission(android.accounts.Account,java.lang.String,int,boolean)>
SINK|<com.android.videoeditor.LoadPreviewBitmapTask: void onPostExecute(android.graphics.Bitmap)>
SINK|<android.app.Activity: boolean startNextMatchingActivity(android.content.Intent,android.os.Bundle)>
SINK|<org.apache.http.client.params.ClientParamBean: void setAllowCircularRedirects(boolean)>
SINK|<android.net.wifi.WifiNative: void setScanInterval(int)>
SINK|<org.xml.sax.helpers.XMLReaderAdapter: void setLocale(java.util.Locale)>
SINK|<com.android.internal.telephony.sip.SipCommandInterface: void setCdmaBroadcastConfig(int[],android.os.Message)>
SINK|<com.google.common.collect.Multisets$UnmodifiableMultiset: boolean setCount(java.lang.Object,int,int)>
SINK|<android.os.INetworkManagementService$Stub$Proxy: void removeRoute(java.lang.String,android.net.RouteInfo)>
SINK|<com.android.internal.app.ActionBarImpl: void setIcon(int)>
SINK|<com.android.launcher2.Launcher: void processShortcut(android.content.Intent)>
SINK|<android.net.wifi.p2p.WifiP2pService$P2pStateMachine$GroupCreatingState: boolean processMessage(android.os.Message)>
SINK|<android.os.PerformanceCollector: void addMeasurement(java.lang.String,long)>
SINK|<com.android.internal.util.AsyncChannel: void sendMessage(int,int,int,java.lang.Object)>
SINK|<android.os.FileUtils: void stringToFile(java.lang.String,java.lang.String)>
SINK|<com.android.internal.telephony.cat.RilMessageDecoder$StateCmdParamsReady: boolean processMessage(android.os.Message)>
SINK|<android.net.wifi.WifiNative: boolean setPersistentReconnect(boolean)>
SINK|<com.android.internal.os.BatteryStatsImpl$Uid: void writeToParcelLocked(android.os.Parcel,long)>
SINK|<android.widget.ListView: void setAdapter(android.widget.ListAdapter)>
SINK|<com.android.contacts.list.ContactListFilterView: void setActivated(boolean)>
SINK|<org.apache.harmony.xnet.provider.jsse.AbstractSessionContext: void setSessionTimeout(int)>
SINK|<android.webkit.WebView$PrivateAccess: void setScrollYRaw(int)>
SINK|<com.android.internal.view.menu.ListMenuItemView: void setCheckable(boolean)>
SINK|<com.android.internal.util.StateMachine: void setDbg(boolean)>
SINK|<java.util.Date: void setMinutes(int)>
SINK|<android.content.pm.InstrumentationInfo: void writeToParcel(android.os.Parcel,int)>
SINK|<org.apache.harmony.xnet.provider.jsse.SSLSocketImpl: void setEnableSessionCreation(boolean)>
SINK|<com.android.internal.appwidget.IAppWidgetService$Stub$Proxy: void bindRemoteViewsService(int,android.content.Intent,android.os.IBinder,int)>
SINK|<org.ccil.cowan.tagsoup.Schema: void entity(java.lang.String,int)>
SINK|<com.adobe.xmp.options.SerializeOptions: com.adobe.xmp.options.SerializeOptions setUseCompactFormat(boolean)>
SINK|<com.android.email.activity.UiUtilities: void setVisibilitySafe(android.view.View,int,int)>
SINK|<com.android.videoeditor.service.ApiService: void loadMediaItem(android.content.Context,java.lang.String,android.net.Uri,java.lang.String)>
SINK|<java.util.concurrent.CompletableFuture: java.util.concurrent.CompletableFuture runAfterBothAsync(java.util.concurrent.CompletionStage,java.lang.Runnable,java.util.concurrent.Executor)>
SINK|<android.drm.DrmManagerClient: void notify(java.lang.Object,int,int,java.lang.String)>
SINK|<android.net.LocalSocketImpl: void bind(android.net.LocalSocketAddress)>
SINK|<android.accounts.AccountManager$AmsTask: void set(java.lang.Object)>
SINK|<com.google.common.collect.MapMakerInternalMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
SINK|<gov.nist.javax.sip.address.SipUri: void setUriParm(java.lang.String,java.lang.Object)>
SINK|<android.media.JetPlayer: boolean setMuteArray(boolean[],boolean)>
SINK|<android.nfc.INfcAdapterExtras$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>
SINK|<gov.nist.javax.sip.stack.UDPMessageChannel: void sendMessage(gov.nist.javax.sip.message.SIPMessage)>
SINK|<android.media.RemoteControlClient: void setPlaybackState(int)>
SINK|<com.android.internal.telephony.IccCardProxy: void setVoiceRadioTech(int)>
SINK|<com.android.internal.telephony.cdma.CDMAPhone: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
SINK|<android.widget.TabHost$TabSpec: android.widget.TabHost$TabSpec setContent(android.content.Intent)>
SINK|<java.util.AbstractSequentialList: java.lang.Object set(int,java.lang.Object)>
SINK|<android.accounts.IAccountAuthenticator$Stub$Proxy: void getAuthTokenLabel(android.accounts.IAccountAuthenticatorResponse,java.lang.String)>
SINK|<android.view.ViewRootImpl$ViewRootHandler: void handleMessage(android.os.Message)>
SINK|<android.view.Window: void setUiOptions(int,int)>
SINK|<com.android.email.activity.setup.AccountSetupActivity: void onSaveInstanceState(android.os.Bundle)>
SINK|<android.animation.ObjectAnimator: void setPropertyName(java.lang.String)>
SINK|<android.media.MediaRouter$Static: void onDisplayChanged(int)>
SINK|<com.android.gallery3d.filtershow.imageshow.ImageFlip: void setActionMove(float,float)>
SINK|<java.util.concurrent.ThreadPoolExecutor: void setRejectedExecutionHandler(java.util.concurrent.RejectedExecutionHandler)>
SINK|<android.content.res.XmlBlock$Parser: void setInput(java.io.Reader)>
SINK|<android.app.Instrumentation: void sendKeySync(android.view.KeyEvent)>
SINK|<com.android.bluetooth.hid.HidService: boolean setPriority(android.bluetooth.BluetoothDevice,int)>
SINK|<javax.security.auth.callback.PasswordCallback: void setPassword(char[])>
SINK|<android.widget.TextView: void setText(java.lang.CharSequence)>
SINK|<java.lang.invoke.MethodType: void setForm(java.lang.invoke.MethodTypeForm)>
SINK|<android.content.ContentValues: void putNull(java.lang.String)>
SINK|<android.database.sqlite.SQLiteProgram: void bindString(int,java.lang.String)>
SINK|<com.android.videoeditor.service.ApiService: void applyTheme(android.content.Context,java.lang.String,java.lang.String)>
SINK|<android.widget.TextView: void setHorizontallyScrolling(boolean)>
SINK|<com.android.internal.view.menu.SubMenuBuilder: android.view.SubMenu setHeaderTitle(int)>
SINK|<android.app.ExpandableListActivity: boolean setSelectedChild(int,int,boolean)>
SINK|<com.google.android.mms.pdu.SendReq: void setMessageSize(long)>
SINK|<com.android.internal.telephony.PhoneProxy: void setSmscAddress(java.lang.String,android.os.Message)>
SINK|<android.graphics.Bitmap: void setHasAlpha(boolean)>
SINK|<com.android.email.service.PolicyService$1: void setAccountHoldFlag(long,boolean)>
SINK|<android.net.NetworkStatsHistory: void writeToParcel(android.os.Parcel,int)>
SINK|<com.android.internal.view.IInputMethodManager$Stub$Proxy: void registerSuggestionSpansForNotification(android.text.style.SuggestionSpan[])>
SINK|<com.android.server.LocationManagerService: void addTestProvider(java.lang.String,com.android.internal.location.ProviderProperties)>
SINK|<com.android.server.wm.ScreenRotationAnimation: boolean dismiss(android.view.SurfaceSession,long,float,int,int)>
SINK|<android.net.LocalSocket: void setReceiveBufferSize(int)>
SINK|<com.android.browser.Tab$3: void setupAutoFill(android.os.Message)>
SINK|<android.accounts.AccountManager$GetAuthTokenByTypeAndFeaturesTask$1: void run(android.accounts.AccountManagerFuture)>
SINK|<com.android.server.wm.WindowManagerService: void setTransparentRegionHint(com.android.server.wm.WindowStateAnimator,android.graphics.Region)>
SINK|<com.android.email.activity.setup.AccountSecurity: android.content.Intent actionUpdateSecurityIntent(android.content.Context,long,boolean)>
SINK|<com.android.phone.CallFeaturesSetting: void onActivityResult(int,int,android.content.Intent)>
SINK|<com.android.contacts.model.RawContactDeltaList: void writeToParcel(android.os.Parcel,int)>
SINK|<android.app.FragmentManagerImpl: void moveToState(android.app.Fragment,int,int,int,boolean)>
SINK|<com.android.internal.telephony.DataConnection$DcDisconnectionErrorCreatingConnection: boolean processMessage(android.os.Message)>
SINK|<com.android.internal.telephony.PhoneProxy: void sendUssdResponse(java.lang.String)>
SINK|<android.app.ActivityManagerProxy: void setFrontActivityScreenCompatMode(int)>
SINK|<android.os.Bundle: void putShortArray(java.lang.String,short[])>
SINK|<java.lang.ClassLoader: void setDefaultAssertionStatus(boolean)>
SINK|<android.os.INetworkManagementService$Stub$Proxy: void addSecondaryRoute(java.lang.String,android.net.RouteInfo)>
SINK|<com.android.gallery3d.filtershow.imageshow.ImageCrop: void setCropBounds(android.graphics.RectF)>
SINK|<java.io.FileOutputStream: void write(byte[],int,int)>
SINK|<com.android.providers.contacts.ContactsDatabaseHelper: void onCreate(android.database.sqlite.SQLiteDatabase)>
SINK|<android.database.sqlite.SQLiteDatabase: long insert(java.lang.String,java.lang.String,android.content.ContentValues)>
SINK|<org.apache.harmony.xnet.provider.jsse.ConnectionStateSSLv3: byte[] decrypt(byte,byte[],int,int)>
SINK|<android.app.ActivityManagerProxy: void activityStopped(android.os.IBinder,android.os.Bundle,android.graphics.Bitmap,java.lang.CharSequence)>
SINK|<com.android.internal.telephony.RIL: void sendCdmaSms(byte[],android.os.Message)>
SINK|<android.net.http.Headers: void setContentDisposition(java.lang.String)>
SINK|<com.android.systemui.statusbar.phone.NavigationBarView: void notifyScreenOn(boolean)>
SINK|<java.net.DatagramPacket: void setLength(int)>
SINK|<java.text.NumberFormat: void setGroupingUsed(boolean)>
SINK|<com.android.providers.contacts.ContactLocaleUtils: void setLocale(java.util.Locale)>
SINK|<gov.nist.javax.sip.header.AuthenticationInfo: void setQop(java.lang.String)>
SINK|<org.apache.http.impl.client.ClientParamsStack: org.apache.http.params.HttpParams setParameter(java.lang.String,java.lang.Object)>
SINK|<com.android.internal.view.IInputMethodManager$Stub$Proxy: boolean notifySuggestionPicked(android.text.style.SuggestionSpan,java.lang.String,int)>
SINK|<com.android.server.connectivity.Tethering$TetherMasterSM$TetherMasterUtilState: void notifyTetheredOfNewUpstreamIface(java.lang.String)>
SINK|<android.widget.VideoView: void setVideoPath(java.lang.String)>
SINK|<android.net.wifi.p2p.WifiP2pManager: void discoverPeers(android.net.wifi.p2p.WifiP2pManager$Channel,android.net.wifi.p2p.WifiP2pManager$ActionListener)>
SINK|<android.bluetooth.IBluetoothCallback$Stub$Proxy: void onBluetoothStateChange(int,int)>
SINK|<android.os.storage.IMountService$Stub$Proxy: int mountVolume(java.lang.String)>
SINK|<com.android.internal.location.ILocationProvider$Stub$Proxy: boolean sendExtraCommand(java.lang.String,android.os.Bundle)>
SINK|<com.android.browser.ComboViewActivity: void openSnapshot(long)>
SINK|<com.android.browser.BrowserSettings: void setHomePage(java.lang.String)>
SINK|<com.android.deskclock.stopwatch.StopwatchFragment$LapsListAdapter: void setLapTimes(long[])>
SINK|<org.apache.harmony.xnet.provider.jsse.SSLServerSocketImpl: void setWantClientAuth(boolean)>
SINK|<gov.nist.javax.sip.address.TelURLImpl: void setIsdnSubAddress(java.lang.String)>
SINK|<com.android.mms.ui.SlideshowAttachmentView: void setImage(java.lang.String,android.graphics.Bitmap)>
SINK|<com.google.android.apps.lightcycle.camera.TextureCameraPreview: void setMainView(com.google.android.apps.lightcycle.panorama.LightCycleView)>
SINK|<com.android.server.wm.WindowState: void dump(java.io.PrintWriter,java.lang.String,boolean)>
SINK|<com.android.deskclock.worldclock.Cities: void saveCitiesToSharedPrefs(android.content.SharedPreferences,java.util.HashMap)>
SINK|<com.android.server.pm.PackageManagerService$ServiceIntentResolver: void addService(android.content.pm.PackageParser$Service)>
SINK|<android.widget.SimpleCursorTreeAdapter: void setViewBinder(android.widget.SimpleCursorTreeAdapter$ViewBinder)>
SINK|<com.android.internal.app.ActionBarImpl: void setTitle(int)>
SINK|<com.android.browser.Tab: void setWebView(android.webkit.WebView)>
SINK|<com.android.internal.telephony.gsm.GsmDataConnection: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
SINK|<android.location.LocationManager: void setTestProviderEnabled(java.lang.String,boolean)>
SINK|<com.android.internal.telephony.cdma.CdmaDataConnectionTracker: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
SINK|<android.widget.DatePicker$SavedState: void writeToParcel(android.os.Parcel,int)>
SINK|<com.android.server.wm.DragState: void sendDragStartedIfNeededLw(com.android.server.wm.WindowState)>
SINK|<android.net.wifi.WifiManager: void forget(int,android.net.wifi.WifiManager$ActionListener)>
SINK|<com.android.internal.os.BatteryStatsImpl: void writeToParcelLocked(android.os.Parcel,boolean,int)>
SINK|<android.webkit.WebViewDatabaseClassic: void setUsernamePassword(java.lang.String,java.lang.String,java.lang.String)>
SINK|<com.google.android.apps.lightcycle.panorama.StitchingService: android.content.ContentValues createImageContentValues(java.lang.String)>
SINK|<gov.nist.javax.sip.header.Contact: void setTempGruuParam(java.lang.String)>
SINK|<java.util.zip.Deflater: void setDictionary(byte[],int,int)>
SINK|<com.android.internal.view.menu.MenuPopupHelper: void onItemClick(android.widget.AdapterView,android.view.View,int,long)>
SINK|<com.android.email.SecurityPolicy: void setAccountHoldFlag(android.content.Context,long,boolean)>
SINK|<com.android.internal.view.InputConnectionWrapper: boolean performContextMenuAction(int)>
SINK|<android.preference.PreferenceActivity: void setListFooter(android.view.View)>
SINK|<android.net.wifi.WifiStateMachine$ScanModeState: boolean processMessage(android.os.Message)>
SINK|<com.android.server.WallpaperManagerService: boolean bindWallpaperComponentLocked(android.content.ComponentName,boolean,boolean,com.android.server.WallpaperManagerService$WallpaperData,android.os.IRemoteCallback)>
SINK|<android.hardware.Camera$Parameters: void setRotation(int)>
SINK|<android.content.ContentValues: void putStringArrayList(java.lang.String,java.util.ArrayList)>
SINK|<android.view.accessibility.IAccessibilityManager$Stub$Proxy: void registerUiTestAutomationService(android.accessibilityservice.IAccessibilityServiceClient,android.accessibilityservice.AccessibilityServiceInfo)>
SINK|<com.android.inputmethod.latin.InputPointers: void set(com.android.inputmethod.latin.InputPointers)>
SINK|<com.android.internal.telephony.RIL: void deleteSmsOnRuim(int,android.os.Message)>
SINK|<com.android.server.DevicePolicyManagerService: void setCameraDisabled(android.content.ComponentName,boolean,int)>
SINK|<java.util.EnumMap$Entry: java.lang.Object setValue(java.lang.Object)>
SINK|<com.android.emailcommon.service.AccountServiceProxy: void notifyLoginFailed(long)>
SINK|<android.hardware.display.IDisplayManager$Stub$Proxy: void forgetWifiDisplay(java.lang.String)>
SINK|<android.webkit.WebView$PrivateAccess: void setMeasuredDimension(int,int)>
SINK|<com.android.deskclock.timer.TimerListItem: void setTextBlink(boolean)>
SINK|<com.android.internal.util.AsyncChannel: void sendMessage(int,int)>
SINK|<com.android.internal.telephony.test.SimulatedCommands: void sendSMS(java.lang.String,java.lang.String,android.os.Message)>
SINK|<android.app.Activity: boolean startActivityIfNeeded(android.content.Intent,int,android.os.Bundle)>
SINK|<com.android.exchange.adapter.EmailSyncAdapter: boolean sendLocalChanges(com.android.exchange.adapter.Serializer)>
SINK|<android.view.inputmethod.EditorInfo: void writeToParcel(android.os.Parcel,int)>
SINK|<com.android.internal.telephony.gsm.GsmDataConnectionTracker: void setState(com.android.internal.telephony.DctConstants$State)>
SINK|<com.android.internal.telephony.PhoneBase: void setSystemProperty(java.lang.String,java.lang.String)>
SINK|<com.android.org.bouncycastle.asn1.ASN1OutputStream: void write(byte[],int,int)>
SINK|<com.android.calendar.widget.CalendarAppWidgetProvider: void onUpdate(android.content.Context,android.appwidget.AppWidgetManager,int[])>
SINK|<android.preference.ListPreference: void setEntryValues(java.lang.CharSequence[])>
SINK|<android.view.accessibility.AccessibilityNodeInfo: boolean performAction(int,android.os.Bundle)>
SINK|<android.widget.RatingBar: void setOnRatingBarChangeListener(android.widget.RatingBar$OnRatingBarChangeListener)>
SINK|<android.text.style.TextAppearanceSpan: void writeToParcel(android.os.Parcel,int)>
SINK|<java.io.ObjectOutputStream: void writeChars(java.lang.String)>
SINK|<android.app.LocalActivityManager: android.view.Window startActivity(java.lang.String,android.content.Intent)>
SINK|<java.net.Socket: void setSocketImplFactory(java.net.SocketImplFactory)>
SINK|<android.os.StrictMode: void setVmPolicy(android.os.StrictMode$VmPolicy)>
SINK|<com.android.email.RefreshManager: boolean refreshMailboxList(long)>
SINK|<com.android.server.am.BroadcastQueue: boolean sendPendingBroadcastsLocked(com.android.server.am.ProcessRecord)>
SINK|<com.android.internal.telephony.cdma.CDMAPhone: void setDataRoamingEnabled(boolean)>
SINK|<com.android.internal.view.IInputMethodManager$Stub$Proxy: void setInputMethodAndSubtype(android.os.IBinder,java.lang.String,android.view.inputmethod.InputMethodSubtype)>
SINK|<org.apache.http.auth.AuthSchemeRegistry: void register(java.lang.String,org.apache.http.auth.AuthSchemeFactory)>
SINK|<com.android.providers.downloads.DownloadHandler: void setCurrentSpeed(long,long)>
SINK|<com.android.gallery3d.app.CommonControllerOverlay: void setTimes(int,int,int,int)>
SINK|<android.widget.AdapterViewAnimator: void setDisplayedChild(int)>
SINK|<com.android.internal.telephony.gsm.GSMPhone: void sendDtmf(char)>
SINK|<java.lang.reflect.Field: void setFloat(java.lang.Object,float)>
SINK|<com.android.server.power.DisplayPowerState: void dump(java.io.PrintWriter)>
SINK|<java.net.HttpURLConnection: void setChunkedStreamingMode(int)>
SINK|<java.time.zone.ZoneRules: void writeExternal(java.io.DataOutput)>
SINK|<org.apache.http.message.AbstractHttpMessage: void setHeader(org.apache.http.Header)>
SINK|<com.android.org.bouncycastle.asn1.ASN1OutputStream$ImplicitOutputStream: void write(int)>
SINK|<android.widget.RemoteViews: void setCharSequence(int,java.lang.String,java.lang.CharSequence)>
SINK|<android.graphics.drawable.ShapeDrawable: void draw(android.graphics.Canvas)>
SINK|<android.bluetooth.IBluetoothManagerCallback$Stub$Proxy: void onBluetoothServiceUp(android.bluetooth.IBluetooth)>
SINK|<com.android.server.am.ActivityManagerService: java.io.File dumpStackTraces(boolean,java.util.ArrayList,com.android.internal.os.ProcessStats,android.util.SparseArray,java.lang.String[])>
SINK|<android.widget.PopupWindow: void setTouchInterceptor(android.view.View$OnTouchListener)>
SINK|<java.text.DateFormatSymbols: void setMonths(java.lang.String[])>
SINK|<android.app.Activity: boolean startNextMatchingActivity(android.content.Intent)>
SINK|<java.lang.Thread: void setPriority(int)>
SINK|<com.android.providers.media.MediaProvider: int update(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[])>
SINK|<android.location.IGpsStatusListener$Stub$Proxy: void onFirstFix(int)>
SINK|<gov.nist.javax.sip.header.AuthenticationHeader: void setAlgorithm(java.lang.String)>
SINK|<com.google.android.mms.pdu.PduBody: boolean addPart(com.google.android.mms.pdu.PduPart)>
SINK|<android.net.wifi.p2p.WifiP2pService$P2pStateMachine$InactiveState: boolean processMessage(android.os.Message)>
SINK|<com.android.calendar.alerts.AlertService: boolean generateAlerts(android.content.Context,com.android.calendar.alerts.NotificationMgr,com.android.calendar.alerts.AlarmManagerInterface,android.content.SharedPreferences,android.database.Cursor,long,int)>
SINK|<gov.nist.javax.sip.stack.UDPMessageChannel: void sendMessage(byte[],java.net.InetAddress,int,boolean)>
SINK|<com.android.internal.telephony.ApnContext: void setDataConnectionAc(com.android.internal.telephony.DataConnectionAc)>
SINK|<android.preference.DialogPreference: void setDialogMessage(int)>
SINK|<com.android.mms.dom.smil.SmilRegionElementImpl: void setFit(java.lang.String)>
SINK|<org.apache.http.params.HttpConnectionParams: void setSocketBufferSize(org.apache.http.params.HttpParams,int)>
SINK|<android.widget.RemoteViews: void setByte(int,java.lang.String,byte)>
SINK|<com.android.server.TextServicesManagerService$TextServicesSettings: void putSelectedSpellCheckerSubtype(int)>
SINK|<gov.nist.javax.sip.header.ims.SecurityAgree: void setPortServer(int)>
SINK|<com.google.android.mms.pdu.ReadOrigInd: void setTo(com.google.android.mms.pdu.EncodedStringValue[])>
SINK|<com.android.internal.policy.impl.keyguard.SlidingChallengeLayout$1: void setValue(java.lang.Object,float)>
SINK|<com.android.browser.BookmarkItem: void setFavicon(android.graphics.Bitmap)>
SINK|<com.android.mms.ui.SlideListItemView: void setTextVisibility(boolean)>
SINK|<android.net.wifi.WifiNative: boolean setCountryCode(java.lang.String)>
SINK|<com.android.systemui.statusbar.phone.PhoneStatusBar: void setLightsOn(boolean)>
SINK|<android.graphics.drawable.GradientDrawable: void setShape(int)>
SINK|<com.android.camera.ui.TwoStateImageView: void setEnabled(boolean)>
SINK|<com.android.internal.telephony.IccSmsInterfaceManagerProxy: void sendData(java.lang.String,java.lang.String,int,byte[],android.app.PendingIntent,android.app.PendingIntent)>
SINK|<android.graphics.drawable.ShapeDrawable: void setPadding(int,int,int,int)>
SINK|<android.os.CommonTimeConfig: int setMasterAnnounceInterval(int)>
SINK|<android.content.ContentUris: long parseId(android.net.Uri)>
SINK|<android.webkit.WebSettings: void setBlockNetworkImage(boolean)>
SINK|<com.android.gallery3d.app.StitchingProgressManager$AddItemCallback: void onStitchingQueued(java.lang.String,android.net.Uri)>
SINK|<gov.nist.javax.sip.message.SIPRequest: void setSIPVersion(java.lang.String)>
SINK|<android.view.IWindowManager$Stub$Proxy: android.view.IWindowSession openSession(com.android.internal.view.IInputMethodClient,com.android.internal.view.IInputContext)>
SINK|<com.android.videoeditor.service.ApiService: void onIntentProcessed(android.content.Intent,android.media.videoeditor.VideoEditor,java.lang.Object,java.lang.Object,java.lang.Exception,boolean)>
SINK|<android.widget.AbsSeekBar: boolean performAccessibilityAction(int,android.os.Bundle)>
SINK|<com.google.common.collect.Lists$ReverseList$1: void set(java.lang.Object)>
SINK|<android.view.IWindowManager$Stub$Proxy: void startAppFreezingScreen(android.os.IBinder,int)>
SINK|<com.android.server.pm.PackageSettingBase: void setDisabledComponentsCopy(java.util.HashSet,int)>
SINK|<android.app.ContextImpl: void sendStickyBroadcastAsUser(android.content.Intent,android.os.UserHandle)>
SINK|<gov.nist.javax.sip.header.AuthenticationInfo: void setParameter(java.lang.String,java.lang.String)>
SINK|<com.android.emailcommon.service.IEmailService$Stub$Proxy: boolean createFolder(long,java.lang.String)>
SINK|<android.app.ActivityManager$RecentTaskInfo: void writeToParcel(android.os.Parcel,int)>
SINK|<com.android.gallery3d.app.SinglePhotoDataAdapter: void setNeedFullImage(boolean)>
SINK|<android.media.audiofx.Virtualizer: void setParameterListener(android.media.audiofx.Virtualizer$OnParameterChangeListener)>
SINK|<com.android.calendar.CalendarUtils: void setSharedPreference(android.content.SharedPreferences,java.lang.String,java.lang.String)>
SINK|<java.time.format.DateTimeFormatterBuilder: java.time.format.DateTimeFormatterBuilder appendPattern(java.lang.String)>
SINK|<com.android.browser.addbookmark.FolderSpinner: void setSelection(int)>
SINK|<com.android.email.activity.MessageCompose: void setMessageContentSelection(java.lang.String)>
SINK|<com.android.internal.os.BatteryStatsImpl$Uid$Wakelock: void writeToParcelLocked(android.os.Parcel,long)>
SINK|<com.android.videoeditor.service.ApiService: void removeAudioTrack(android.content.Context,java.lang.String,java.lang.String)>
SINK|<com.android.internal.app.ActionBarImpl: void setDisplayOptions(int,int)>
SINK|<org.xml.sax.helpers.AttributesImpl: void setAttributes(org.xml.sax.Attributes)>
SINK|<android.webkit.WebViewClassic$WebViewInputConnection: boolean performEditorAction(int)>
SINK|<android.app.LocalActivityManager: void dispatchDestroy(boolean)>
SINK|<android.renderscript.AllocationAdapter: void setLOD(int)>
SINK|<android.app.IWallpaperManager$Stub$Proxy: boolean hasNamedWallpaper(java.lang.String)>
SINK|<android.app.backup.SharedPreferencesBackupHelper: void writeNewStateDescription(android.os.ParcelFileDescriptor)>
SINK|<gov.nist.javax.sip.message.SIPMessage: void setFromTag(java.lang.String)>
SINK|<android.view.GLES20DisplayList: void setClipChildren(boolean)>
SINK|<android.view.View: void setWillNotDraw(boolean)>
SINK|<android.view.ViewGroup: void setClipToPadding(boolean)>
SINK|<com.android.musicfx.seekbar.AbsSeekBar: void setMax(int)>
SINK|<android.text.style.TypefaceSpan: void updateMeasureState(android.text.TextPaint)>
SINK|<android.widget.Toast: android.widget.Toast makeText(android.content.Context,java.lang.CharSequence,int)>
SINK|<android.widget.ImageView: boolean setFrame(int,int,int,int)>
SINK|<com.android.server.BackupManagerService$ActiveRestoreSession: int restorePackage(java.lang.String,android.app.backup.IRestoreObserver)>
SINK|<android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoStubImpl: void setContentDescription(java.lang.Object,java.lang.CharSequence)>
SINK|<android.widget.TextView: void setTypeface(android.graphics.Typeface)>
SINK|<android.filterfw.core.GLFrame: void setDataFromFrame(android.filterfw.core.Frame)>
SINK|<libcore.icu.NativeDecimalFormat: void setNegativePrefix(java.lang.String)>
SINK|<com.android.launcher2.ShortcutInfo: void onAddToDatabase(android.content.ContentValues)>
SINK|<java.io.PrintStream: void println(char[])>
SINK|<org.apache.http.impl.client.AbstractHttpClient: void setRedirectStrategy(org.apache.http.client.RedirectStrategy)>
SINK|<com.android.internal.textservice.ITextServicesManager$Stub$Proxy: void setSpellCheckerEnabled(boolean)>
SINK|<com.android.nfc.handover.HandoverClient: android.nfc.NdefMessage sendHandoverRequest(android.nfc.NdefMessage)>
SINK|<java.net.DatagramSocket: void setReceiveBufferSize(int)>
SINK|<gov.nist.javax.sip.header.ContentLength: void setContentLength(int)>
SINK|<com.android.server.net.NetworkStatsRecorder$CombiningRewriter: void write(java.io.OutputStream)>
SINK|<android.webkit.CookieManager: void setAcceptFileSchemeCookies(boolean)>
SINK|<gov.nist.javax.sip.header.Challenge: void setParameter(gov.nist.core.NameValue)>
SINK|<java.text.DecimalFormat: void setPositivePrefix(java.lang.String)>
SINK|<android.content.SyncStorageEngine: void addPeriodicSync(android.accounts.Account,int,java.lang.String,android.os.Bundle,long)>
SINK|<com.android.systemui.statusbar.phone.PanelView: void setExpandedFraction(float)>
SINK|<com.android.gallery3d.filtershow.imageshow.ImageGeometry: void setLocalStraighten(float)>
SINK|<org.xml.sax.helpers.XMLReaderAdapter: void setErrorHandler(org.xml.sax.ErrorHandler)>
SINK|<android.os.ParcelFileDescriptor: android.os.ParcelFileDescriptor open(java.io.File,int)>
SINK|<android.media.AudioService: void registerRemoteVolumeObserverForRcc(int,android.media.IRemoteVolumeObserver)>
SINK|<android.provider.BrowserContract$SyncState: void set(android.content.ContentProviderClient,android.accounts.Account,byte[])>
SINK|<org.xml.sax.InputSource: void setByteStream(java.io.InputStream)>
SINK|<org.apache.harmony.security.asn1.BitString: void setBit(int,boolean)>
SINK|<com.android.inputmethod.latin.Suggest: void setUserHistoryDictionary(com.android.inputmethod.latin.UserHistoryDictionary)>
SINK|<android.database.sqlite.SQLiteDatabase: long replaceOrThrow(java.lang.String,java.lang.String,android.content.ContentValues)>
SINK|<android.graphics.NinePatch: void setPaint(android.graphics.Paint)>
SINK|<android.widget.ScrollView: boolean executeKeyEvent(android.view.KeyEvent)>
SINK|<android.app.ActivityManagerProxy: int stopUser(int,android.app.IStopUserCallback)>
SINK|<java.io.DataOutputStream: void flush()>
SINK|<com.android.nfc.P2pLinkManager: void onSendComplete(android.nfc.NdefMessage,long)>
SINK|<android.os.INetworkManagementService$Stub$Proxy: void stopAccessPoint(java.lang.String)>
SINK|<com.android.deskclock.DeskClock$TabsAdapter: void onPageSelected(int)>
SINK|<com.android.server.sip.SipHelper: void sendInviteAck(javax.sip.ResponseEvent,javax.sip.Dialog)>
SINK|<com.android.camera.ui.PopupManager: void notifyShowPopup(android.view.View)>
SINK|<java.util.zip.Deflater: void setLevel(int)>
SINK|<com.android.server.input.InputManagerService$InputDevicesChangedListenerRecord: void notifyInputDevicesChanged(int[])>
SINK|<android.app.ApplicationThreadProxy: android.os.Debug$MemoryInfo dumpMemInfo(java.io.FileDescriptor,boolean,boolean,java.lang.String[])>
SINK|<android.view.accessibility.AccessibilityRecord: void setEnabled(boolean)>
SINK|<android.webkit.WebView: void setWebViewClient(android.webkit.WebViewClient)>
SINK|<java.security.cert.X509CRLSelector: void setDateAndTime(java.util.Date)>
SINK|<android.telephony.cdma.CdmaCellLocation: void setCellLocationData(int,int,int,int,int)>
SINK|<com.android.internal.app.ActionBarImpl: void setHomeButtonEnabled(boolean)>
SINK|<gov.nist.javax.sip.header.ims.PUserDatabase: void setValue(java.lang.String)>
SINK|<android.view.HardwareRenderer$Gl20Renderer: void setSurfaceTexture(android.view.HardwareLayer,android.graphics.SurfaceTexture)>
SINK|<android.media.IAudioService$Stub$Proxy: void setPlaybackInfoForRcc(int,int,int)>
SINK|<android.webkit.WebView: boolean setFrame(int,int,int,int)>
SINK|<android.widget.PopupWindow: void setOnDismissListener(android.widget.PopupWindow$OnDismissListener)>
SINK|<com.android.calendar.alerts.SnoozeAlarmsService: void onHandleIntent(android.content.Intent)>
SINK|<android.media.audiofx.Equalizer: void setParameterListener(android.media.audiofx.Equalizer$OnParameterChangeListener)>
SINK|<com.android.internal.util.IndentingPrintWriter: void write(char[],int,int)>
SINK|<com.android.server.BackupManagerService: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
SINK|<com.android.internal.telephony.test.SimulatedCommands: void setTTYMode(int,android.os.Message)>
SINK|<android.app.WallpaperManager: void setBitmap(android.graphics.Bitmap)>
SINK|<android.content.Intent: void setAllowFds(boolean)>
SINK|<android.database.DatabaseUtils$InsertHelper: void bindNull(int)>
SINK|<gov.nist.core.NameValueList: void set(gov.nist.core.NameValue)>
SINK|<com.android.browser.ComboViewActivity: void openInNewTab(java.lang.String[])>
SINK|<android.view.IWindowManager$Stub$Proxy: void setAnimationScales(float[])>
SINK|<javax.security.auth.SubjectDomainCombiner: java.security.ProtectionDomain[] combine(java.security.ProtectionDomain[],java.security.ProtectionDomain[])>
SINK|<android.app.ActivityManagerProxy: boolean refContentProvider(android.os.IBinder,int,int)>
SINK|<com.android.internal.appwidget.IAppWidgetService$Stub$Proxy: void stopListening(int)>
SINK|<java.util.concurrent.CompletableFuture: java.util.concurrent.CompletableFuture runAfterBoth(java.util.concurrent.CompletionStage,java.lang.Runnable)>
SINK|<com.android.email.Controller: int searchMessages(long,com.android.emailcommon.service.SearchParams)>
SINK|<com.android.internal.view.IInputMethod$Stub$Proxy: void showSoftInput(int,android.os.ResultReceiver)>
SINK|<com.android.server.connectivity.Tethering$TetherInterfaceSM$InitialState: boolean processMessage(android.os.Message)>
SINK|<android.renderscript.Script: void setVar(int,long)>
SINK|<android.support.v4.view.accessibility.AccessibilityNodeInfoCompat: void setSource(android.view.View,int)>
SINK|<android.nfc.tech.MifareClassic: void decrement(int,int)>
SINK|<android.renderscript.Allocation: void setFromFieldPacker(int,android.renderscript.FieldPacker)>
SINK|<com.android.bluetooth.btservice.RemoteDevices: void pinRequestCallback(byte[],byte[],int)>
SINK|<android.net.wifi.p2p.WifiP2pService: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
SINK|<com.android.internal.policy.impl.keyguard.PagedView: boolean performAccessibilityAction(int,android.os.Bundle)>
SINK|<com.android.browser.view.BookmarkContainer: void setBackgroundDrawable(android.graphics.drawable.Drawable)>
SINK|<android.app.admin.IDevicePolicyManager$Stub$Proxy: void setActivePasswordState(int,int,int,int,int,int,int,int,int)>
SINK|<android.webkit.WebSettings: void setNavDump(boolean)>
SINK|<android.app.BackStackRecord: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
SINK|<com.android.internal.telephony.IccFileHandler: void handleMessage(android.os.Message)>
SINK|<com.android.systemui.statusbar.tablet.TabletStatusBarView: void setIgnoreChildren(int,android.view.View,android.view.View)>
SINK|<com.android.gallery3d.filtershow.imageshow.ImageShow: void setupGestureDetector(android.content.Context)>
SINK|<com.android.contacts.model.account.AccountWithDataSet: void writeToParcel(android.os.Parcel,int)>
SINK|<android.database.sqlite.SQLiteConnection: android.os.ParcelFileDescriptor executeForBlobFileDescriptor(java.lang.String,java.lang.Object[],android.os.CancellationSignal)>
SINK|<android.view.animation.Animation: void setStartOffset(long)>
SINK|<android.media.AudioManager: void setMode(int)>
SINK|<com.android.gallery3d.ui.AlbumSetSlotRenderer: void setModel(com.android.gallery3d.app.AlbumSetDataLoader)>
SINK|<android.app.ApplicationErrorReport$AnrInfo: void dump(android.util.Printer,java.lang.String)>
SINK|<com.android.launcher2.LauncherProvider: void loadDefaultFavoritesIfNecessary(int)>
SINK|<android.os.storage.IMountService$Stub$Proxy: int createSecureContainer(java.lang.String,int,java.lang.String,java.lang.String,int,boolean)>
SINK|<java.util.Random: void setSeed(long)>
SINK|<org.apache.http.auth.AuthState: void setAuthScheme(org.apache.http.auth.AuthScheme)>
SINK|<android.app.ProgressDialog: void setProgressDrawable(android.graphics.drawable.Drawable)>
SINK|<com.android.browser.addbookmark.FolderSpinner: void setSelectionIgnoringSelectionChange(int)>
SINK|<android.database.DatabaseUtils$InsertHelper: void bind(int,boolean)>
SINK|<com.android.server.pm.PackageSettingBase: void copyFrom(com.android.server.pm.PackageSettingBase)>
SINK|<android.bluetooth.IBluetoothHeadsetPhone$Stub$Proxy: boolean processChld(int)>
SINK|<android.graphics.RectF: void set(android.graphics.Rect)>
SINK|<com.android.server.am.ServiceRecord: com.android.server.am.AppBindRecord retrieveAppBindingLocked(android.content.Intent,com.android.server.am.ProcessRecord)>
SINK|<android.support.v4.view.accessibility.AccessibilityNodeInfoCompat: void setParent(android.view.View)>
SINK|<android.net.sip.SimpleSessionDescription$Fields: void setEncryption(java.lang.String,java.lang.String)>
SINK|<android.os.storage.IMountService$Stub$Proxy: void unmountObb(java.lang.String,boolean,android.os.storage.IObbActionListener,int)>
SINK|<com.android.contacts.model.AccountTypeManagerImpl: void processBroadcastIntent(android.content.Intent)>
SINK|<com.android.camera.ui.PieItem: void setBounds(int,int,int,int)>
SINK|<java.time.chrono.JapaneseEra: void writeExternal(java.io.DataOutput)>
SINK|<com.android.internal.app.ActionBarImpl: void setDisplayHomeAsUpEnabled(boolean)>
SINK|<java.time.LocalTime: void writeExternal(java.io.DataOutput)>
SINK|<java.security.cert.X509CertSelector: void setExtendedKeyUsage(java.util.Set)>
SINK|<com.android.server.AlarmManagerService: void setTime(long)>
SINK|<android.hardware.Camera: void setOneShotPreviewCallback(android.hardware.Camera$PreviewCallback)>
SINK|<gov.nist.javax.sip.address.TelURLImpl: void setParameter(java.lang.String,java.lang.String)>
SINK|<com.android.systemui.statusbar.NotificationData: boolean setUserLocked(android.view.View,boolean)>
SINK|<com.android.server.InputMethodManagerService$InputMethodSettings: void appendAndPutEnabledInputMethodLocked(java.lang.String,boolean)>
SINK|<com.android.mms.transaction.MmsMessageSender: void sendReadRec(android.content.Context,java.lang.String,java.lang.String,int)>
SINK|<com.android.internal.telephony.cdma.CdmaLteServiceStateTracker: void setCdmaTechnology(int)>
SINK|<android.widget.ScrollView: void setFillViewport(boolean)>
SINK|<com.android.email.mail.store.ImapFolder: void save(android.content.Context)>
SINK|<android.os.IPowerManager$Stub$Proxy: void nap(long)>
SINK|<org.ccil.cowan.tagsoup.PYXWriter: void endElement(java.lang.String,java.lang.String,java.lang.String)>
SINK|<android.content.pm.IPackageManager$Stub$Proxy: int installExistingPackage(java.lang.String)>
SINK|<android.app.ContextImpl: void setWallpaper(android.graphics.Bitmap)>
SINK|<android.view.inputmethod.InputConnectionWrapper: boolean setSelection(int,int)>
SINK|<com.android.contacts.ContactSaveService: android.content.Intent createGroupUpdateIntent(android.content.Context,long,java.lang.String,long[],long[],java.lang.Class,java.lang.String)>
SINK|<gov.nist.core.GenericObject: void dbgPrint(java.lang.String)>
SINK|<android.graphics.drawable.RotateDrawable: void setColorFilter(android.graphics.ColorFilter)>
SINK|<android.app.Instrumentation: void sendPointerSync(android.view.MotionEvent)>
SINK|<android.app.IBackupAgent$Stub$Proxy: void doFullBackup(android.os.ParcelFileDescriptor,int,android.app.backup.IBackupManager)>
SINK|<com.android.server.pm.PackageManagerService$ActivityIntentResolver: void dumpFilter(java.io.PrintWriter,java.lang.String,android.content.IntentFilter)>
SINK|<com.android.deskclock.DeskClock$TabsAdapter: void notifySelectedPage(int)>
SINK|<org.apache.http.message.BasicLineParser: org.apache.http.RequestLine parseRequestLine(org.apache.http.util.CharArrayBuffer,org.apache.http.message.ParserCursor)>
SINK|<android.content.ContentResolver: void notifyChange(android.net.Uri,android.database.ContentObserver)>
SINK|<java.util.logging.Handler: void setFilter(java.util.logging.Filter)>
SINK|<android.os.IPowerManager$Stub$Proxy: void wakeUp(long)>
SINK|<com.android.gallery3d.filtershow.imageshow.ImageCrop: void setActionMove(float,float)>
SINK|<android.app.FragmentManagerImpl: void setBackStackIndex(int,android.app.BackStackRecord)>
SINK|<gov.nist.javax.sip.header.ims.PProfileKey: void setValue(java.lang.String)>
SINK|<java.math.BigInt: void setSign(int)>
SINK|<android.content.pm.IPackageManager$Stub$Proxy: void installPackageWithVerification(android.net.Uri,android.content.pm.IPackageInstallObserver,int,java.lang.String,android.net.Uri,android.content.pm.ManifestDigest,android.content.pm.ContainerEncryptionParams)>
SINK|<java.io.RandomAccessFile: void writeChar(int)>
SINK|<android.location.Location: void setExtraLocation(java.lang.String,android.location.Location)>
SINK|<com.android.camera.PanoProgressBar: void setMaxProgress(int)>
SINK|<android.media.MediaRecorder: void setCaptureRate(double)>
SINK|<com.android.internal.view.menu.MenuItemImpl: boolean setVisibleInt(boolean)>
SINK|<gov.nist.javax.sip.stack.SIPTransactionStack: void addTransactionPendingAck(gov.nist.javax.sip.stack.SIPServerTransaction)>
SINK|<android.test.IsolatedContext: void sendOrderedBroadcast(android.content.Intent,java.lang.String)>
SINK|<com.android.inputmethod.latin.makedict.FusionDictionary$CharGroup: void addBigram(java.lang.String,int)>
SINK|<java.time.format.DateTimeFormatter: java.lang.Object parse(java.lang.CharSequence,java.time.temporal.TemporalQuery)>
SINK|<android.widget.ExpandableListView: void setOnChildClickListener(android.widget.ExpandableListView$OnChildClickListener)>
SINK|<android.media.audiofx.Equalizer: void setBandLevel(short,short)>
SINK|<com.android.internal.telephony.PhoneBase: void setVoiceMessageWaiting(int,int)>
SINK|<android.location.Criteria: void setSpeedAccuracy(int)>
SINK|<com.android.internal.telephony.IccPhoneBookInterfaceManager: boolean updateAdnRecordsInEfBySearch(int,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>
SINK|<android.os.ServiceManagerProxy: void addService(java.lang.String,android.os.IBinder,boolean)>
SINK|<com.android.browser.provider.BrowserProvider: int update(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[])>
SINK|<gov.nist.javax.sip.header.ims.ServiceRoute: void setValue(java.lang.String)>
SINK|<android.preference.Preference: void setOrder(int)>
SINK|<org.xml.sax.ext.Attributes2Impl: void setAttributes(org.xml.sax.Attributes)>
SINK|<java.text.StringCharacterIterator: char setIndex(int)>
SINK|<libcore.io.Streams: int copy(java.io.InputStream,java.io.OutputStream)>
SINK|<com.android.email.service.AttachmentDownloadService: boolean canPrefetchForAccount(com.android.emailcommon.provider.Account,java.io.File)>
SINK|<com.android.server.TextServicesManagerService$TextServicesSettings: void setSpellCheckerEnabled(boolean)>
SINK|<android.database.sqlite.SQLiteDirectCursorDriver: void setBindArguments(java.lang.String[])>
SINK|<android.widget.TextView: void setTransformationMethod(android.text.method.TransformationMethod)>
SINK|<android.app.backup.BackupHelperDispatcher: void addHelper(java.lang.String,android.app.backup.BackupHelper)>
SINK|<android.location.LocationManager: void requestLocationUpdates(java.lang.String,long,float,android.app.PendingIntent)>
SINK|<com.android.browser.BaseUi: void setActiveTab(com.android.browser.Tab)>
SINK|<android.bluetooth.BluetoothDevice: boolean setDeviceOutOfBandData(byte[],byte[])>
SINK|<com.android.mms.dom.smil.SmilElementImpl: void setId(java.lang.String)>
SINK|<android.view.View: void setOnFocusChangeListener(android.view.View$OnFocusChangeListener)>
SINK|<java.util.concurrent.CompletableFuture: java.util.concurrent.CompletableFuture thenRunAsync(java.lang.Runnable,java.util.concurrent.Executor)>
SINK|<android.widget.ScrollView: void draw(android.graphics.Canvas)>
SINK|<android.security.IKeyChainAliasCallback$Stub$Proxy: void alias(java.lang.String)>
SINK|<com.android.contacts.voicemail.VoicemailPlaybackFragment$PlaybackViewImpl: void setSpeakerPhoneOn(boolean)>
SINK|<com.android.providers.contacts.aggregation.util.ContactMatcher: void updateScoreWithEmailMatch(long)>
SINK|<android.content.SyncStorageEngine: void setMasterSyncAutomatically(boolean,int)>
SINK|<com.android.internal.telephony.cdma.CDMAPhone: void setLine1Number(java.lang.String,java.lang.String,android.os.Message)>
SINK|<android.preference.ListPreference: void setEntries(java.lang.CharSequence[])>
SINK|<libcore.icu.CollationElementIteratorICU: void setOffset(int)>
SINK|<com.android.providers.contacts.ProfileAwareUriMatcher: void addURI(java.lang.String,java.lang.String,int)>
SINK|<com.android.server.TelephonyRegistry: void notifyCallForwardingChanged(boolean)>
SINK|<android.widget.ViewFlipper: void setFlipInterval(int)>
SINK|<android.hardware.SerialManager: android.hardware.SerialPort openSerialPort(java.lang.String,int)>
SINK|<com.android.internal.telephony.CallManager: com.android.internal.telephony.Connection dial(com.android.internal.telephony.Phone,java.lang.String,com.android.internal.telephony.UUSInfo)>
SINK|<com.android.server.WallpaperManagerService: void setWallpaperComponent(android.content.ComponentName)>
SINK|<android.app.ActivityManagerProxy: void removeContentProvider(android.os.IBinder,boolean)>
SINK|<android.media.MediaRouter$Static: void onDisplayRemoved(int)>
SINK|<com.android.calendar.Utils: void setSharedPreference(android.content.Context,java.lang.String,boolean)>
SINK|<com.android.gallery3d.app.GalleryActionBar: boolean setSelectedAction(int)>
SINK|<gov.nist.core.InternalErrorHandler: void handleException(java.lang.String)>
SINK|<com.android.server.am.ActivityManagerService: boolean dumpProvider(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String,java.lang.String[],int,boolean)>
SINK|<org.xml.sax.helpers.XMLFilterImpl: void setParent(org.xml.sax.XMLReader)>
SINK|<android.app.ActivityManagerProxy: void moveTaskBackwards(int)>
SINK|<com.android.email.LegacyConversions: void saveAttachmentBody(android.content.Context,com.android.emailcommon.mail.Part,com.android.emailcommon.provider.EmailContent$Attachment,long)>
SINK|<com.android.launcher2.ShortcutAndWidgetContainer: void setChildrenDrawingCacheEnabled(boolean)>
SINK|<com.android.i18n.phonenumbers.geocoding.FlyweightMapStorage: void writeExternal(java.io.ObjectOutput)>
SINK|<android.content.Intent: android.content.Intent putParcelableArrayListExtra(java.lang.String,java.util.ArrayList)>
SINK|<java.security.DigestInputStream: void setMessageDigest(java.security.MessageDigest)>
SINK|<com.android.inputmethod.latin.UserHistoryDictionary$1: void setUnigram(java.lang.String,java.lang.String,int)>
SINK|<java.lang.Throwable: void setStackTrace(java.lang.StackTraceElement[])>
SINK|<com.android.internal.telephony.gsm.GSMPhone: com.android.internal.telephony.Connection dial(java.lang.String)>
SINK|<java.net.Authenticator: void setDefault(java.net.Authenticator)>
SINK|<android.location.Criteria: void setAltitudeRequired(boolean)>
SINK|<android.os.Binder: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
SINK|<android.media.MediaPlayer: boolean setParameter(int,java.lang.String)>
SINK|<android.os.Message: void setData(android.os.Bundle)>
SINK|<java.net.ServerSocket: void setReceiveBufferSize(int)>
SINK|<com.android.internal.telephony.ApnContext: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
SINK|<com.android.server.connectivity.Tethering$TetherInterfaceSM$TetheredState: boolean processMessage(android.os.Message)>
SINK|<java.security.cert.X509CertSelector: void setKeyUsage(boolean[])>
SINK|<com.android.contacts.dialpad.DialpadImageButton: void setPressed(boolean)>
SINK|<android.graphics.drawable.ColorDrawable: void setAlpha(int)>
SINK|<android.net.wifi.p2p.WifiP2pManager: void removeLocalService(android.net.wifi.p2p.WifiP2pManager$Channel,android.net.wifi.p2p.nsd.WifiP2pServiceInfo,android.net.wifi.p2p.WifiP2pManager$ActionListener)>
SINK|<android.location.Address: void setCountryCode(java.lang.String)>
SINK|<android.widget.NumberPicker: void setValue(int)>
SINK|<org.apache.harmony.xnet.provider.jsse.OpenSSLSocketImpl$SSLOutputStream: void write(int)>
SINK|<android.view.View$3: void setValue(java.lang.Object,float)>
SINK|<java.time.Duration: int parseFraction(java.lang.CharSequence,java.lang.String,int)>
SINK|<com.android.gallery3d.data.FaceClustering$1: void consume(int,com.android.gallery3d.data.MediaItem)>
SINK|<org.apache.http.impl.SocketHttpServerConnection: void setSocketTimeout(int)>
SINK|<android.widget.GridView: void setHorizontalSpacing(int)>
SINK|<libcore.net.http.RawHeaders: void setStatusLine(java.lang.String)>
SINK|<java.security.Signature: void setParameter(java.lang.String,java.lang.Object)>
SINK|<android.renderscript.ProgramFragmentFixedFunction$Builder: android.renderscript.ProgramFragmentFixedFunction$Builder setTexture(android.renderscript.ProgramFragmentFixedFunction$Builder$EnvMode,android.renderscript.ProgramFragmentFixedFunction$Builder$Format,int)>
SINK|<com.android.contacts.quickcontact.FloatingChildLayout: void setBackground(android.graphics.drawable.Drawable)>
SINK|<android.app.ActivityManagerProxy: int checkUriPermission(android.net.Uri,int,int,int)>
SINK|<android.filterpacks.imageproc.SimpleImageFilter: void process(android.filterfw.core.FilterContext)>
SINK|<java.security.Identity: void setInfo(java.lang.String)>
SINK|<android.content.pm.ApplicationInfo: void dump(android.util.Printer,java.lang.String)>
SINK|<android.app.ApplicationThreadProxy: void scheduleCreateService(android.os.IBinder,android.content.pm.ServiceInfo,android.content.res.CompatibilityInfo)>
SINK|<android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)>
SINK|<android.content.IContentService$Stub$Proxy: void removePeriodicSync(android.accounts.Account,java.lang.String,android.os.Bundle)>
SINK|<com.android.gallery3d.util.IdentityCache: java.lang.Object put(java.lang.Object,java.lang.Object)>
SINK|<android.view.Surface: void setPosition(int,int)>
SINK|<com.android.inputmethodcommon.InputMethodSettingsFragment: void setSubtypeEnablerTitle(int)>
SINK|<android.app.StatusBarManager: void setIconVisibility(java.lang.String,boolean)>
SINK|<java.text.DecimalFormat: void setGroupingUsed(boolean)>
SINK|<gov.nist.javax.sip.header.AuthenticationHeader: void setStale(boolean)>
SINK|<android.app.IProcessObserver$Stub$Proxy: void onForegroundActivitiesChanged(int,int,boolean)>
SINK|<com.android.uiautomator.testrunner.UiAutomatorTestRunner$2: void uncaughtException(java.lang.Thread,java.lang.Throwable)>
SINK|<com.android.contacts.interactions.ImportExportDialogFragment: void show(android.app.FragmentManager,boolean)>
SINK|<com.android.providers.downloads.DownloadProvider: android.net.Uri insert(android.net.Uri,android.content.ContentValues)>
SINK|<android.app.admin.DevicePolicyManager: void setMaximumFailedPasswordsForWipe(android.content.ComponentName,int)>
SINK|<android.content.pm.IPackageManager$Stub$Proxy: int checkUidSignatures(int,int)>
SINK|<org.apache.harmony.xml.dom.NodeImpl: void setTextContent(java.lang.String)>
SINK|<android.media.MiniThumbFile: void saveMiniThumbToFile(byte[],long,long)>
SINK|<gov.nist.javax.sip.header.extensions.Replaces: void setValue(java.lang.String)>
SINK|<android.view.accessibility.AccessibilityEvent: void setEnabled(boolean)>
SINK|<android.widget.TableLayout: void setColumnCollapsed(int,boolean)>
SINK|<com.android.calendar.alerts.AlertUtils: void setAlertFiredInSharedPrefs(android.content.Context,long,long,long)>
SINK|<com.android.emailcommon.service.IEmailServiceCallback$Stub$Proxy: void loadMessageStatus(long,int,int)>
SINK|<android.widget.TextView: void setImeOptions(int)>
SINK|<android.widget.ExpandableListView: void setAdapter(android.widget.ExpandableListAdapter)>
SINK|<org.apache.http.entity.InputStreamEntity: void writeTo(java.io.OutputStream)>
SINK|<com.android.server.NetworkManagementService: void setInterfaceDown(java.lang.String)>
SINK|<com.android.contacts.editor.PhotoEditorView: void setDeletable(boolean)>
SINK|<android.os.INetworkManagementService$Stub$Proxy: void disableIpv6(java.lang.String)>
SINK|<android.view.WindowManagerImpl: void updateViewLayout(android.view.View,android.view.ViewGroup$LayoutParams)>
SINK|<android.net.InterfaceConfiguration: void setFlag(java.lang.String)>
SINK|<android.app.ContextImpl: java.io.FileInputStream openFileInput(java.lang.String)>
SINK|<com.adobe.xmp.options.PropertyOptions: com.adobe.xmp.options.PropertyOptions setHasType(boolean)>
SINK|<com.android.server.AppWidgetService: void updateAppWidgetIds(int[],android.widget.RemoteViews)>
SINK|<java.io.PrintWriter: java.io.PrintWriter append(char)>
SINK|<com.android.internal.telephony.sip.SipPhoneBase: void setCdmaSubscription(int,android.os.Message)>
SINK|<android.os.Bundle: void putShort(java.lang.String,short)>
SINK|<com.android.server.power.PowerManagerService: void setMaximumScreenOffTimeoutFromDeviceAdmin(int)>
SINK|<java.net.URLConnection: void setContentHandlerFactory(java.net.ContentHandlerFactory)>
SINK|<android.view.IWindowManager$Stub$Proxy: void setInputFilter(android.view.IInputFilter)>
SINK|<org.apache.http.conn.params.ConnConnectionParamBean: void setMaxStatusLineGarbage(int)>
SINK|<com.android.internal.telephony.sip.SipPhoneBase: void notifyDisconnect(com.android.internal.telephony.Connection)>
SINK|<org.apache.harmony.xnet.provider.jsse.OpenSSLSocketImplWrapper: void setTcpNoDelay(boolean)>
SINK|<android.app.admin.DevicePolicyManager: void setPasswordMinimumLetters(android.content.ComponentName,int)>
SINK|<com.android.contacts.list.ContactBrowseListFragment: void setSearchMode(boolean)>
SINK|<gov.nist.javax.sip.header.RetryAfter: void setRetryAfter(int)>
SINK|<java.security.cert.PKIXParameters: void setExplicitPolicyRequired(boolean)>
SINK|<org.apache.http.protocol.HttpRequestHandlerRegistry: void setHandlers(java.util.Map)>
SINK|<java.net.DatagramPacket: void setPort(int)>
SINK|<org.apache.harmony.security.asn1.ASN1Sequence: void setEncodingContent(org.apache.harmony.security.asn1.BerOutputStream)>
SINK|<android.widget.RemoteViews: void setRemoteAdapter(int,int,android.content.Intent)>
SINK|<com.android.launcher2.BubbleTextView: void setTag(java.lang.Object)>
SINK|<org.apache.http.impl.cookie.NetscapeDraftSpec: java.util.List parse(org.apache.http.Header,org.apache.http.cookie.CookieOrigin)>
SINK|<com.android.internal.telephony.sip.SipCommandInterface: void setMute(boolean,android.os.Message)>
SINK|<android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateJellyBeanImpl$1: void sendAccessibilityEvent(android.view.View,int)>
SINK|<com.android.internal.telephony.BaseCommands: void setOnSignalStrengthUpdate(android.os.Handler,int,java.lang.Object)>
SINK|<com.android.server.accessibility.AccessibilityManagerService$Service: void setServiceInfo(android.accessibilityservice.AccessibilityServiceInfo)>
SINK|<com.android.contacts.list.PhoneNumberPickerFragment: void setSearchMode(boolean)>
SINK|<android.view.accessibility.AccessibilityEvent: void setParcelableData(android.os.Parcelable)>
SINK|<android.widget.ImageView: void setImageAlpha(int)>
SINK|<android.media.JetPlayer: void setEventListener(android.media.JetPlayer$OnJetEventListener,android.os.Handler)>
SINK|<android.app.LoaderManagerImpl$LoaderInfo: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
SINK|<android.util.Slog: int d(java.lang.String,java.lang.String,java.lang.Throwable)>
SINK|<android.bluetooth.IBluetooth$Stub$Proxy: void registerCallback(android.bluetooth.IBluetoothCallback)>
SINK|<com.android.server.location.GpsLocationProvider: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
SINK|<android.view.accessibility.IAccessibilityInteractionConnectionCallback$Stub$Proxy: void setFindAccessibilityNodeInfosResult(java.util.List,int)>
SINK|<com.google.android.mms.pdu.PduPart: void setContentId(byte[])>
SINK|<android.filterfw.core.ShaderProgram: void setBlendEnabled(boolean)>
SINK|<com.android.server.usb.UsbService: void setAccessoryPackage(android.hardware.usb.UsbAccessory,java.lang.String,int)>
SINK|<com.android.providers.contacts.ContactsDatabaseHelper: void setIsSuperPrimary(long,long,long)>
SINK|<android.webkit.WebViewClassic: void dumpViewHierarchyWithProperties(java.io.BufferedWriter,int)>
SINK|<android.content.pm.IPackageManager$Stub$Proxy: void addPackageToPreferred(java.lang.String)>
SINK|<javax.xml.parsers.DocumentBuilderFactory: void setNamespaceAware(boolean)>
SINK|<android.filterfw.core.ShaderProgram: void setBlendFunc(int,int)>
SINK|<android.nfc.tech.IsoDep: void setTimeout(int)>
SINK|<android.animation.Keyframe$FloatKeyframe: void setValue(java.lang.Object)>
SINK|<android.view.accessibility.AccessibilityNodeInfo: void setLabeledBy(android.view.View)>
SINK|<android.widget.TableLayout: void setOnHierarchyChangeListener(android.view.ViewGroup$OnHierarchyChangeListener)>
SINK|<android.view.View: void setTextDirection(int)>
SINK|<org.apache.http.conn.params.ConnPerRouteBean: void setMaxForRoutes(java.util.Map)>
SINK|<gov.nist.javax.sip.DialogFilter: void processResponse(gov.nist.javax.sip.message.SIPResponse,gov.nist.javax.sip.stack.MessageChannel)>
SINK|<android.support.v4.view.accessibility.AccessibilityRecordCompatJellyBean: void setSource(java.lang.Object,android.view.View,int)>
SINK|<com.android.server.LocationManagerService: boolean sendExtraCommand(java.lang.String,java.lang.String,android.os.Bundle)>
SINK|<android.view.accessibility.AccessibilityNodeInfoCache: void add(android.view.accessibility.AccessibilityNodeInfo)>
SINK|<com.google.android.apps.lightcycle.shaders.TargetShader: void setAlpha(float)>
SINK|<com.android.browser.provider.BrowserProvider2: int updateInTransaction(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[],boolean)>
SINK|<com.android.videoeditor.service.ApiService: void addOverlay(android.content.Context,java.lang.String,java.lang.String,java.lang.String,android.os.Bundle,long,long)>
SINK|<com.android.gallery3d.filtershow.tools.SaveCopyTask: android.net.Uri doInBackground(com.android.gallery3d.filtershow.presets.ImagePreset[])>
SINK|<android.content.ContentValues: void putAll(android.content.ContentValues)>
SINK|<com.android.contacts.list.ContactTileView: void setHorizontalDividerVisibility(int)>
SINK|<android.content.IClipboard$Stub$Proxy: void setPrimaryClip(android.content.ClipData)>
SINK|<com.android.internal.telephony.PhoneProxy: void setMute(boolean)>
SINK|<com.android.gallery3d.ui.PositionController: void setViewSize(int,int)>
SINK|<gov.nist.javax.sip.stack.TLSMessageProcessor: void cacheMessageChannel(gov.nist.javax.sip.stack.TLSMessageChannel)>
SINK|<com.android.internal.view.menu.SubMenuBuilder: android.view.SubMenu setHeaderIcon(int)>
SINK|<org.apache.http.impl.client.RequestWrapper: void setURI(java.net.URI)>
SINK|<android.content.IntentFilter: void writeToParcel(android.os.Parcel,int)>
SINK|<java.io.PrintWriter: void write(java.lang.String)>
SINK|<android.content.SyncManager$ActiveSyncContext: boolean bindToSyncAdapter(android.content.pm.RegisteredServicesCache$ServiceInfo,int)>
SINK|<com.android.providers.contacts.TransactionContext: void rawContactInserted(long,long)>
SINK|<org.apache.http.entity.FileEntity: void writeTo(java.io.OutputStream)>
SINK|<android.os.PerformanceCollector: void addMeasurement(java.lang.String,java.lang.String)>
SINK|<gov.nist.javax.sip.header.Via: void setTTL(int)>
SINK|<android.app.AlertDialog: void setButton(int,java.lang.CharSequence,android.content.DialogInterface$OnClickListener)>
SINK|<android.text.SpannableStringInternal: void setSpan(java.lang.Object,int,int,int)>
SINK|<android.test.InstrumentationTestCase: void runTestOnUiThread(java.lang.Runnable)>
SINK|<org.apache.http.params.HttpProtocolParamBean: void setHttpElementCharset(java.lang.String)>
SINK|<java.text.MessageFormat: void setFormats(java.text.Format[])>
SINK|<com.android.internal.os.BatteryStatsImpl: void dumpLocked(java.io.PrintWriter)>
SINK|<android.view.ViewGroup: void setOnHierarchyChangeListener(android.view.ViewGroup$OnHierarchyChangeListener)>
SINK|<javax.xml.parsers.DocumentBuilderFactory: void setExpandEntityReferences(boolean)>
SINK|<com.android.internal.telephony.BaseCommands: void setOnNewGsmBroadcastSms(android.os.Handler,int,java.lang.Object)>
SINK|<com.android.server.am.ActivityManagerService: boolean switchUser(int)>
SINK|<com.android.internal.telephony.PhoneSubInfoProxy: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
SINK|<com.android.phone.CallNotifier: void sendMwiChangedDelayed(long)>
SINK|<com.android.email.activity.EmailActivity: android.content.Intent createSearchIntent(android.app.Activity,long,long,java.lang.String)>
SINK|<android.os.IPowerManager$Stub$Proxy: void setAttentionLight(boolean,int)>
SINK|<android.preference.PreferenceManager: void setDefaultValues(android.content.Context,java.lang.String,int,int,boolean)>
SINK|<android.view.animation.Transformation: void setTransformationType(int)>
SINK|<gov.nist.javax.sip.stack.SIPTransactionStack: void putPendingTransaction(gov.nist.javax.sip.stack.SIPServerTransaction)>
SINK|<android.media.AudioService$AudioHandler: void handleMessage(android.os.Message)>
SINK|<org.apache.http.impl.cookie.RFC2965Spec: java.util.List parse(org.apache.http.Header,org.apache.http.cookie.CookieOrigin)>
SINK|<com.android.server.BackupManagerService: void fullRestore(android.os.ParcelFileDescriptor)>
SINK|<android.os.BatteryStats$HistoryItem: void writeDelta(android.os.Parcel,android.os.BatteryStats$HistoryItem)>
SINK|<android.content.res.AssetManager: android.content.res.AssetFileDescriptor openFd(java.lang.String)>
SINK|<android.os.StrictMode$ViolationInfo: void writeToParcel(android.os.Parcel,int)>
SINK|<android.content.pm.ServiceInfo: void writeToParcel(android.os.Parcel,int)>
SINK|<org.apache.http.message.BasicHttpResponse: void setStatusLine(org.apache.http.ProtocolVersion,int,java.lang.String)>
SINK|<android.net.SSLCertificateSocketFactory: void setSoWriteTimeout(java.net.Socket,int)>
SINK|<android.net.sip.ISipService$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>
SINK|<java.nio.FloatBuffer: java.nio.FloatBuffer put(float[],int,int)>
SINK|<android.widget.TextView: void setImeActionLabel(java.lang.CharSequence,int)>
SINK|<java.time.MonthDay: void writeExternal(java.io.DataOutput)>
SINK|<android.graphics.drawable.BitmapDrawable: void setAlpha(int)>
SINK|<com.google.common.io.Files: void write(byte[],java.io.File)>
SINK|<android.webkit.WebSettings: void setAllowFileAccess(boolean)>
SINK|<android.view.ViewGroup: void setDescendantFocusability(int)>
SINK|<android.app.ActivityManagerProxy: boolean stopServiceToken(android.content.ComponentName,android.os.IBinder,int)>
SINK|<com.android.org.bouncycastle.asn1.ASN1ObjectIdentifier: boolean on(com.android.org.bouncycastle.asn1.ASN1ObjectIdentifier)>
SINK|<android.location.ICountryDetector$Stub$Proxy: void removeCountryListener(android.location.ICountryListener)>
SINK|<com.android.internal.location.ILocationProvider$Stub$Proxy: void setRequest(com.android.internal.location.ProviderRequest,android.os.WorkSource)>
SINK|<gov.nist.javax.sip.header.extensions.References: void setParameter(java.lang.String,java.lang.String)>
SINK|<com.android.bluetooth.btservice.AdapterService: boolean setDiscoverableTimeout(int)>
SINK|<android.widget.TextView: void setMaxHeight(int)>
SINK|<java.security.cert.X509CertSelector: void setIssuer(byte[])>
SINK|<android.webkit.CookieManager: void setAcceptFileSchemeCookiesImpl(boolean)>
SINK|<com.android.internal.telephony.cdma.RuimSmsInterfaceManager: boolean updateMessageOnIccEf(int,int,byte[])>
SINK|<android.os.UserHandle: void writeToParcel(android.os.UserHandle,android.os.Parcel)>
SINK|<android.telephony.cdma.CdmaCellLocation: void setCellLocationData(int,int,int)>
SINK|<com.android.launcher2.Launcher: boolean onLongClick(android.view.View)>
SINK|<android.appwidget.AppWidgetHostView: void updateAppWidgetSize(android.os.Bundle,int,int,int,int)>
SINK|<android.net.wifi.WifiNative: boolean setManufacturer(java.lang.String)>
SINK|<com.android.server.am.EventLogTags: void writeBootProgressEnableScreen(long)>
SINK|<com.android.mms.transaction.SendTransaction: byte[] sendPdu(long,byte[],java.lang.String)>
SINK|<com.android.internal.telephony.DefaultPhoneNotifier: void notifyPhoneState(com.android.internal.telephony.Phone)>
SINK|<com.android.camera.CameraSettings: boolean setCameraPictureSize(java.lang.String,java.util.List,android.hardware.Camera$Parameters)>
SINK|<android.view.View: void setTextAlignment(int)>
SINK|<org.apache.harmony.xnet.provider.jsse.ServerHello: void send(org.apache.harmony.xnet.provider.jsse.HandshakeIODataStream)>
SINK|<gov.nist.javax.sip.address.SipUri: void setHeader(java.lang.String,java.lang.String)>
SINK|<java.nio.LongToByteBufferAdapter: java.nio.LongBuffer put(int,long)>
SINK|<org.apache.http.message.BasicHttpResponse: void setEntity(org.apache.http.HttpEntity)>
SINK|<android.app.ActivityManagerProxy: boolean removeSubTask(int,int)>
SINK|<android.graphics.drawable.ShapeDrawable: void setAlpha(int)>
SINK|<android.view.View: void setCameraDistance(float)>
SINK|<gov.nist.javax.sip.address.TelephoneNumber: void setPostDial(java.lang.String)>
SINK|<com.android.launcher2.Workspace: void beginDragShared(android.view.View,com.android.launcher2.DragSource)>
SINK|<android.media.AudioService: void playSoundEffect(int)>
SINK|<com.android.calendar.month.SimpleDayPickerFragment: void setMonthDisplayed(android.text.format.Time,boolean)>
SINK|<com.adobe.xmp.impl.XMPMetaImpl: void setPropertyDate(java.lang.String,java.lang.String,com.adobe.xmp.XMPDateTime)>
SINK|<com.android.internal.view.IInputMethodClient$Stub$Proxy: void setActive(boolean)>
SINK|<java.text.Bidi: int getRunStart(int)>
SINK|<android.net.SSLCertificateSocketFactory: void setUseSessionTickets(java.net.Socket,boolean)>
SINK|<org.xml.sax.InputSource: void setEncoding(java.lang.String)>
SINK|<com.android.systemui.SystemUI: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
SINK|<com.android.internal.telephony.RIL: void setCdmaBroadcastActivation(boolean,android.os.Message)>
SINK|<android.accounts.AccountManager: void addOnAccountsUpdatedListener(android.accounts.OnAccountsUpdateListener,android.os.Handler,boolean)>
SINK|<com.android.mms.ui.ComposeMessageActivity: void onSaveInstanceState(android.os.Bundle)>
SINK|<java.util.concurrent.ConcurrentHashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
SINK|<android.view.View: void setScrollBarStyle(int)>
SINK|<android.preference.Preference: void setSummary(java.lang.CharSequence)>
SINK|<android.location.LocationManager: void requestSingleUpdate(java.lang.String,android.app.PendingIntent)>
SINK|<com.android.internal.telephony.DefaultPhoneNotifier: void notifyCellInfo(com.android.internal.telephony.Phone,java.util.List)>
SINK|<android.widget.ScrollView: void setSmoothScrollingEnabled(boolean)>
SINK|<java.time.YearMonth: java.lang.Object writeReplace()>
SINK|<android.os.Registrant: void notifyResult(java.lang.Object)>
SINK|<java.util.zip.Deflater: void setDictionary(byte[])>
SINK|<android.media.AudioManager: void setRingerMode(int)>
SINK|<gov.nist.javax.sip.header.extensions.ReferredBy: void setValue(java.lang.String)>
SINK|<com.android.browser.Controller: void onReceivedTitle(com.android.browser.Tab,java.lang.String)>
SINK|<com.android.internal.view.IInputMethodManager$Stub$Proxy: void addClient(com.android.internal.view.IInputMethodClient,com.android.internal.view.IInputContext,int,int)>
SINK|<java.util.Date: void setTime(long)>
SINK|<java.util.SimpleTimeZone: void setStartRule(int,int,int,int)>
SINK|<java.text.AttributedString: void addAttribute(java.text.AttributedCharacterIterator$Attribute,java.lang.Object)>
SINK|<android.graphics.drawable.ShapeDrawable: void setDither(boolean)>
SINK|<android.content.res.XmlBlock$Parser: void setProperty(java.lang.String,java.lang.Object)>
SINK|<com.android.mms.ui.SlideView: void setTextVisibility(boolean)>
SINK|<java.net.DatagramPacket: void setAddress(java.net.InetAddress)>
SINK|<android.support.v4.view.ViewPager: void setCurrentItem(int)>
SINK|<android.view.animation.LayoutAnimationController: void setAnimation(android.view.animation.Animation)>
SINK|<com.android.mms.ui.BasicSlideEditorView: void setVideo(java.lang.String,android.net.Uri)>
SINK|<com.android.internal.view.IInputMethodManager$Stub$Proxy: boolean hideSoftInput(com.android.internal.view.IInputMethodClient,int,android.os.ResultReceiver)>
SINK|<gov.nist.javax.sip.header.AuthenticationHeader: void setNonceCount(int)>
SINK|<android.media.AudioService: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
SINK|<org.apache.http.impl.cookie.BasicClientCookie2: void setPorts(int[])>
SINK|<com.android.mms.ui.VideoAttachmentView: void setText(java.lang.String,java.lang.String)>
SINK|<com.android.server.EventLogTags: void writeConfigInstallFailed(java.lang.String)>
SINK|<com.android.server.am.ActivityStack: int startActivityUncheckedLocked(com.android.server.am.ActivityRecord,com.android.server.am.ActivityRecord,int,boolean,android.os.Bundle)>
SINK|<com.android.internal.os.HandlerCaller: void sendMessage(android.os.Message)>
SINK|<android.content.Intent: android.content.Intent setClassName(java.lang.String,java.lang.String)>
SINK|<org.apache.http.util.CharArrayBuffer: void setLength(int)>
SINK|<android.widget.TextView: void setScroller(android.widget.Scroller)>
SINK|<android.graphics.drawable.DrawableContainer: void setColorFilter(android.graphics.ColorFilter)>
SINK|<org.apache.http.conn.scheme.SchemeRegistry: org.apache.http.conn.scheme.Scheme register(org.apache.http.conn.scheme.Scheme)>
SINK|<com.android.server.wm.Session: android.os.Bundle sendWallpaperCommand(android.os.IBinder,java.lang.String,int,int,int,android.os.Bundle,boolean)>
SINK|<android.app.FragmentManagerImpl: boolean dispatchPrepareOptionsMenu(android.view.Menu)>
SINK|<android.media.AudioService$VolumeStreamState: boolean setIndex(int,int,boolean)>
SINK|<android.bluetooth.IBluetoothHealth$Stub$Proxy: boolean disconnectChannel(android.bluetooth.BluetoothDevice,android.bluetooth.BluetoothHealthAppConfiguration,int)>
SINK|<android.net.sip.SimpleSessionDescription: void setBandwidth(java.lang.String,int)>
SINK|<org.apache.harmony.security.fortress.Services: void initServiceInfo(java.security.Provider)>
SINK|<com.android.server.am.ActivityManagerService: boolean dumpHeap(java.lang.String,int,boolean,java.lang.String,android.os.ParcelFileDescriptor)>
SINK|<java.net.DatagramPacket: void setData(byte[],int,int)>
SINK|<android.content.SyncAdaptersCache$MySerializer: void writeAsXml(java.lang.Object,org.xmlpull.v1.XmlSerializer)>
SINK|<android.net.LocalSocket: void setFileDescriptorsForSend(java.io.FileDescriptor[])>
SINK|<javax.obex.PrivateOutputStream: byte[] readBytes(int)>
SINK|<org.apache.harmony.xnet.provider.jsse.ClientKeyExchange: void send(org.apache.harmony.xnet.provider.jsse.HandshakeIODataStream)>
SINK|<android.view.animation.Animation: void setDetachWallpaper(boolean)>
SINK|<android.media.AudioManager: void setParameters(java.lang.String)>
SINK|<com.android.internal.view.IInputContext$Stub$Proxy: void performPrivateCommand(java.lang.String,android.os.Bundle)>
SINK|<android.media.IAudioService$Stub$Proxy: void setBluetoothScoOn(boolean)>
SINK|<android.provider.Contacts$People: void setPhotoData(android.content.ContentResolver,android.net.Uri,byte[])>
SINK|<org.apache.http.impl.client.DefaultHttpClient: org.apache.http.HttpResponse execute(org.apache.http.client.methods.HttpUriRequest)>
SINK|<com.android.server.am.ActivityManagerService: boolean dumpProvidersLocked(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[],int,boolean,java.lang.String)>
SINK|<com.android.server.power.PowerManagerService: void setScreenBrightnessOverrideFromWindowManager(int)>
SINK|<org.apache.harmony.xml.dom.AttrImpl: void setPrefix(java.lang.String)>
SINK|<android.content.pm.IPackageManager$Stub$Proxy: void removePermission(java.lang.String)>
SINK|<android.media.IAudioService$Stub$Proxy: void stopBluetoothSco(android.os.IBinder)>
SINK|<com.android.mms.dom.smil.SmilRegionElementImpl: void setBackgroundColor(java.lang.String)>
SINK|<com.android.internal.telephony.DataConnectionTracker: void notifyDataConnection(java.lang.String)>
SINK|<android.animation.PropertyValuesHolder: void setupSetterAndGetter(java.lang.Object)>
SINK|<android.inputmethodservice.InputMethodService: void setExtractViewShown(boolean)>
SINK|<com.android.server.ConnectivityService: void setMobileDataEnabled(boolean)>
SINK|<android.test.AndroidTestRunner: void setTest(junit.framework.Test)>
SINK|<com.google.android.gms.common.internal.IGmsServiceBroker$Stub$Proxy: void getPanoramaService(com.google.android.gms.common.internal.IGmsCallbacks,int,java.lang.String,android.os.Bundle)>
SINK|<com.android.server.StatusBarManagerService: void setIcon(java.lang.String,java.lang.String,int,int,java.lang.String)>
SINK|<org.apache.http.impl.io.AbstractSessionOutputBuffer: void write(byte[])>
SINK|<org.apache.harmony.xnet.provider.jsse.SSLSocketWrapper: void setSoTimeout(int)>
SINK|<com.android.internal.telephony.BaseCommands: void setOnCatCallSetUp(android.os.Handler,int,java.lang.Object)>
SINK|<android.location.ILocationManager$Stub$Proxy: void setTestProviderEnabled(java.lang.String,boolean)>
SINK|<com.android.commands.monkey.MonkeySourceNetwork: void setVerbose(int)>
SINK|<android.widget.TextView: void setText(int)>
SINK|<org.apache.http.impl.client.DefaultRequestDirector: org.apache.http.impl.client.RoutedRequest handleResponse(org.apache.http.impl.client.RoutedRequest,org.apache.http.HttpResponse,org.apache.http.protocol.HttpContext)>
SINK|<com.android.email.Controller: com.android.emailcommon.utility.EmailAsyncTask setMessageFavorite(long,boolean)>
SINK|<com.android.deskclock.worldclock.CitiesActivity: void onCheckedChanged(android.widget.CompoundButton,boolean)>
SINK|<org.apache.http.params.HttpConnectionParams: void setSoKeepalive(org.apache.http.params.HttpParams,boolean)>
SINK|<android.media.IAudioService$Stub$Proxy: void setStreamVolume(int,int,int)>
SINK|<android.content.ContextWrapper: void sendOrderedBroadcast(android.content.Intent,java.lang.String,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>
SINK|<android.view.IWindowSession$Stub$Proxy: void setInsets(android.view.IWindow,int,android.graphics.Rect,android.graphics.Rect,android.graphics.Region)>
SINK|<com.android.internal.policy.impl.keyguard.KeyguardTransportControlView$IRemoteControlDisplayWeak: void setArtwork(int,android.graphics.Bitmap)>
SINK|<android.widget.ImageView: void setColorFilter(int)>
SINK|<org.apache.harmony.security.x509.AlternativeName: void dumpValue(java.lang.StringBuilder,java.lang.String)>
SINK|<android.media.AudioManager: void setMicrophoneMute(boolean)>
SINK|<com.android.mms.ui.VideoAttachmentView: void setTextVisibility(boolean)>
SINK|<android.location.ILocationManager$Stub$Proxy: void clearTestProviderStatus(java.lang.String)>
SINK|<javax.obex.ServerSession: void sendResponse(int,byte[])>
SINK|<android.os.INetworkManagementService$Stub$Proxy: void enableIpv6(java.lang.String)>
SINK|<org.apache.http.impl.EnglishReasonPhraseCatalog: void setReason(int,java.lang.String)>
SINK|<com.android.internal.widget.LockSettingsService: void setLockPassword(byte[],int)>
SINK|<android.widget.PopupWindow: void setWidth(int)>
SINK|<com.android.internal.telephony.sip.SipPhone: void setCdmaSubscription(int,android.os.Message)>
SINK|<org.apache.harmony.security.x509.TBSCertList$RevokedCertificate: void dumpValue(java.lang.StringBuilder,java.lang.String)>
SINK|<com.android.emailcommon.service.IPolicyService$Stub$Proxy: void setAccountPolicy(long,com.android.emailcommon.provider.Policy,java.lang.String)>
SINK|<libcore.net.http.HttpsURLConnectionImpl: void setReadTimeout(int)>
SINK|<android.net.MobileDataStateTracker: void setDependencyMet(boolean)>
SINK|<android.webkit.CookieManager: void setAcceptCookie(boolean)>
SINK|<com.android.internal.util.FastXmlSerializer: void setFeature(java.lang.String,boolean)>
SINK|<libcore.net.http.RawHeaders: void set(java.lang.String,java.lang.String)>
SINK|<com.android.server.accessibility.ScreenMagnifier$MagnificationController: void setMagnifiedRegionCenter(float,float,boolean)>
SINK|<com.android.internal.view.IInputMethodSession$Stub$Proxy: void displayCompletions(android.view.inputmethod.CompletionInfo[])>
SINK|<com.android.browser.BrowserBookmarksAdapter: void bindView(android.view.View,com.android.browser.BrowserBookmarksAdapterItem)>
SINK|<com.android.calendar.DayOfMonthDrawable: void setDayOfMonth(int)>
SINK|<android.graphics.Path: void set(android.graphics.Path)>
SINK|<android.media.MediaPlayer: void setVideoScalingMode(int)>
SINK|<android.filterfw.core.VertexFrame: void setInts(int[])>
SINK|<com.coremedia.iso.AbstractBoxParser: com.coremedia.iso.boxes.Box parseBox(java.nio.channels.ReadableByteChannel,com.coremedia.iso.boxes.ContainerBox)>
SINK|<android.media.IAudioService$Stub$Proxy: void unregisterRemoteControlClient(android.app.PendingIntent,android.media.IRemoteControlClient)>
SINK|<android.content.pm.PackageParser$Service: void setPackageName(java.lang.String)>
SINK|<android.net.wifi.p2p.WifiP2pDeviceList: void updateStatus(java.lang.String,int)>
SINK|<org.json.JSONObject: org.json.JSONObject put(java.lang.String,double)>
SINK|<com.android.internal.telephony.IccPhoneBookInterfaceManagerProxy: boolean updateAdnRecordsInEfBySearch(int,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>
SINK|<android.os.storage.IMountService$Stub$Proxy: void shutdown(android.os.storage.IMountShutdownObserver)>
SINK|<java.util.Collections$CheckedList: java.lang.Object set(int,java.lang.Object)>
SINK|<com.android.server.StatusBarManagerService: void setHardKeyboardEnabled(boolean)>
SINK|<com.android.mms.ui.VideoAttachmentView: void setImageVisibility(boolean)>
SINK|<android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateJellyBeanImpl: boolean performAccessibilityAction(java.lang.Object,android.view.View,int,android.os.Bundle)>
SINK|<android.accounts.AccountManager: void setAuthToken(android.accounts.Account,java.lang.String,java.lang.String)>
SINK|<com.android.contacts.activities.PeopleActivity$ContactDetailFragmentListener: void onItemClicked(android.content.Intent)>
SINK|<com.android.contacts.editor.GroupMembershipView: void setEnabled(boolean)>
SINK|<com.android.internal.telephony.CallManager: boolean sendUssdResponse(com.android.internal.telephony.Phone,java.lang.String)>
SINK|<com.android.camera.VideoController: void setCameraId(int)>
SINK|<com.android.camera.CameraScreenNail: void setPreviewFrameLayoutSize(int,int)>
SINK|<android.widget.ListView: void setItemChecked(int,boolean)>
SINK|<android.os.PowerManager: void setBacklightBrightness(int)>
SINK|<android.net.wifi.p2p.WifiP2pService$P2pStateMachine$P2pEnablingState: boolean processMessage(android.os.Message)>
SINK|<com.android.internal.app.ActionBarImpl$TabImpl: android.app.ActionBar$Tab setCustomView(int)>
SINK|<android.database.sqlite.SQLiteDatabase: int updateWithOnConflict(java.lang.String,android.content.ContentValues,java.lang.String,java.lang.String[],int)>
SINK|<com.android.internal.telephony.RIL: void setNetworkSelectionModeManual(java.lang.String,android.os.Message)>
SINK|<android.media.audiofx.PresetReverb: void setParameterListener(android.media.audiofx.PresetReverb$OnParameterChangeListener)>
SINK|<org.apache.http.impl.cookie.BestMatchSpec: java.util.List parse(org.apache.http.Header,org.apache.http.cookie.CookieOrigin)>
SINK|<android.app.ActivityManagerProxy: int startActivityIntentSender(android.app.IApplicationThread,android.content.IntentSender,android.content.Intent,java.lang.String,android.os.IBinder,java.lang.String,int,int,int,android.os.Bundle)>
SINK|<android.view.animation.GridLayoutAnimationController: void setDirectionPriority(int)>
SINK|<com.android.providers.contacts.VoicemailContentTable: int update(com.android.providers.contacts.VoicemailContentProvider$UriData,android.content.ContentValues,java.lang.String,java.lang.String[])>
SINK|<com.android.server.wm.WindowManagerService: void updateRotationUnchecked(boolean,boolean)>
SINK|<com.android.nfc.handover.HandoverTransfer: void whitelistOppDevice(android.bluetooth.BluetoothDevice)>
SINK|<com.android.email.Controller$LegacyListener: void sendPendingMessagesCompleted(long)>
SINK|<android.os.PerformanceCollector: void startTiming(java.lang.String)>
SINK|<com.android.internal.view.menu.SubMenuBuilder: android.view.SubMenu setIcon(int)>
SINK|<android.telephony.SmsManager: boolean disableCellBroadcast(int)>
SINK|<com.android.internal.policy.impl.keyguard.KeyguardActivityLauncher: void launchActivityWithAnimation(android.content.Intent,boolean,android.os.Bundle,android.os.Handler,java.lang.Runnable)>
SINK|<com.android.internal.telephony.sip.SipPhone: void setDataRoamingEnabled(boolean)>
SINK|<com.baidu.inf.iis.bcs.BaiduBCS: com.baidu.inf.iis.bcs.response.BaiduBCSResponse putObject(com.baidu.inf.iis.bcs.request.PutObjectRequest)>
SINK|<android.appwidget.AppWidgetHostView: void updateAppWidgetSize(android.os.Bundle,int,int,int,int,boolean)>
SINK|<gov.nist.core.Host: void setAddress(java.lang.String)>
SINK|<com.android.server.wm.AppWindowToken: void dump(java.io.PrintWriter,java.lang.String)>
SINK|<com.google.android.picasastore.HttpUtils: java.io.InputStream openInputStream(java.lang.String)>
SINK|<org.apache.http.protocol.BasicHttpProcessor: void setInterceptors(java.util.List)>
SINK|<android.app.backup.IRestoreObserver$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>
SINK|<com.android.server.BackupManagerService: void prepareOperationTimeout(int,long,com.android.server.BackupManagerService$BackupRestoreTask)>
SINK|<android.app.ActivityManagerProxy: boolean finishActivityAffinity(android.os.IBinder)>
SINK|<javax.xml.transform.stream.StreamResult: void setSystemId(java.lang.String)>
SINK|<android.media.AudioTrack: void setPlaybackPositionUpdateListener(android.media.AudioTrack$OnPlaybackPositionUpdateListener,android.os.Handler)>
SINK|<android.graphics.RectF: void set(float,float,float,float)>
SINK|<java.io.File: boolean setExecutable(boolean,boolean)>
SINK|<com.android.gallery3d.ui.GLCanvasImpl: void drawMixed(com.android.gallery3d.ui.BasicTexture,int,float,android.graphics.RectF,android.graphics.RectF)>
SINK|<com.android.internal.textservice.ITextServicesManager$Stub$Proxy: void setCurrentSpellCheckerSubtype(java.lang.String,int)>
SINK|<com.android.emailcommon.service.PolicyServiceProxy: void setAccountHoldFlag(long,boolean)>
SINK|<android.net.sip.ISipSessionListener$Stub$Proxy: void onCallTransferring(android.net.sip.ISipSession,java.lang.String)>
SINK|<com.android.gallery3d.filtershow.filters.ScriptC_convolve3x3: void bind_gPixels(android.renderscript.Allocation)>
SINK|<com.android.inputmethod.keyboard.internal.KeyboardTextsSet: void loadStringResourcesInternal(android.content.Context,java.lang.String[],int)>
SINK|<android.webkit.WebView: void setHttpAuthUsernamePassword(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>
SINK|<com.android.internal.telephony.ITelephonyRegistry$Stub$Proxy: void notifyDataActivity(int)>
SINK|<android.appwidget.AppWidgetManager: void updateAppWidget(int[],android.widget.RemoteViews)>
SINK|<com.android.gallery3d.filtershow.imageshow.ImageStraighten: void setActionMove(float,float)>
SINK|<android.graphics.drawable.BitmapDrawable: void setTargetDensity(android.util.DisplayMetrics)>
SINK|<android.net.wifi.p2p.WifiP2pManager: void setDialogListener(android.net.wifi.p2p.WifiP2pManager$Channel,android.net.wifi.p2p.WifiP2pManager$DialogListener)>
SINK|<android.webkit.WebSettings: void setBuiltInZoomControls(boolean)>
SINK|<android.net.wifi.WifiStateMachine$SupplicantStoppingState: boolean processMessage(android.os.Message)>
SINK|<android.widget.ListView: void setDivider(android.graphics.drawable.Drawable)>
SINK|<com.android.email.activity.setup.AccountSetupBasics$NoteDialogFragment: com.android.email.activity.setup.AccountSetupBasics$NoteDialogFragment newInstance(java.lang.String)>
SINK|<org.apache.http.client.params.ClientParamBean: void setHandleRedirects(boolean)>
SINK|<android.webkit.WebSettingsClassic: void setDefaultFontSize(int)>
SINK|<android.inputmethodservice.InputMethodService: void onUpdateExtractingViews(android.view.inputmethod.EditorInfo)>
SINK|<org.apache.harmony.xnet.provider.jsse.TrustedCertificateStore: void installCertificate(java.security.cert.X509Certificate)>
SINK|<java.nio.channels.Channels$ChannelOutputStream: void write(byte[],int,int)>
SINK|<com.android.systemui.statusbar.policy.NotificationRowLayout: void setLayoutTransitionsEnabled(boolean)>
SINK|<com.android.server.am.ActivityManagerService: void setProcessForeground(android.os.IBinder,int,boolean)>
SINK|<android.speech.SpeechRecognizer: void startListening(android.content.Intent)>
SINK|<android.inputmethodservice.KeyboardView: boolean onLongPress(android.inputmethodservice.Keyboard$Key)>
SINK|<java.io.DataOutputStream: void write(int)>
SINK|<com.android.calendar.agenda.AgendaListView: void onItemClick(android.widget.AdapterView,android.view.View,int,long)>
SINK|<android.content.pm.IPackageMoveObserver$Stub$Proxy: void packageMoved(java.lang.String,int)>
SINK|<android.graphics.Point: void set(int,int)>
SINK|<javax.xml.validation.Validator: void setFeature(java.lang.String,boolean)>
SINK|<android.widget.AbsListView: void setOnScrollListener(android.widget.AbsListView$OnScrollListener)>
SINK|<com.android.deskclock.widget.multiwaveview.TargetDrawable: void setDrawable(android.content.res.Resources,int)>
SINK|<android.content.res.AssetManager: java.io.InputStream openNonAsset(int,java.lang.String)>
SINK|<com.android.wallpaper.fall.ScriptC_fall: void bind_g_Constants(com.android.wallpaper.fall.ScriptField_Constants)>
SINK|<com.android.internal.telephony.cdma.CdmaSMSDispatcher: void dispatch(android.content.Intent,java.lang.String,android.content.BroadcastReceiver)>
SINK|<android.test.mock.MockPackageManager: void setApplicationEnabledSetting(java.lang.String,int,int)>
SINK|<android.app.ActivityManager: void setPackageScreenCompatMode(java.lang.String,int)>
SINK|<android.widget.RelativeLayout: void setIgnoreGravity(int)>
SINK|<android.net.IConnectivityManager$Stub$Proxy: void requestNetworkTransitionWakelock(java.lang.String)>
SINK|<android.app.ActivityManagerProxy: void setPackageAskScreenCompat(java.lang.String,boolean)>
SINK|<android.app.ActivityManagerProxy: void finishSubActivity(android.os.IBinder,java.lang.String,int)>
SINK|<com.android.internal.widget.ActionBarView$HomeView: void setUp(boolean)>
SINK|<android.app.PendingIntent: void send(int)>
SINK|<com.android.gallery3d.filtershow.imageshow.ImageGeometry: void setLocalCropBounds(android.graphics.RectF)>
SINK|<android.view.View: void setNextFocusDownId(int)>
SINK|<android.support.v4.net.TrafficStatsCompat$IcsTrafficStatsCompatImpl: void setThreadStatsTag(int)>
SINK|<android.graphics.Matrix: void setSkew(float,float,float,float)>
SINK|<com.android.server.WifiService: void setWifiApEnabled(android.net.wifi.WifiConfiguration,boolean)>
SINK|<com.android.internal.view.menu.ActionMenuItem: android.view.MenuItem setEnabled(boolean)>
SINK|<android.support.v4.app.NotificationCompat$Builder: android.support.v4.app.NotificationCompat$Builder setOnlyAlertOnce(boolean)>
SINK|<android.location.Criteria: void setPowerRequirement(int)>
SINK|<android.media.AudioManager: void setMasterMute(boolean)>
SINK|<android.app.AlertDialog: void setCustomTitle(android.view.View)>
SINK|<com.android.gallery3d.data.FilterDeleteSet: void addDeletion(com.android.gallery3d.data.Path,int)>
SINK|<android.app.Fragment: void setInitialSavedState(android.app.Fragment$SavedState)>
SINK|<android.view.IWindowManager$Stub$Proxy: void moveAppToken(int,android.os.IBinder)>
SINK|<gov.nist.javax.sip.stack.SIPClientTransaction: void processResponse(gov.nist.javax.sip.message.SIPResponse,gov.nist.javax.sip.stack.MessageChannel)>
SINK|<android.webkit.WebSettings: void setEnableSmoothTransition(boolean)>
SINK|<android.app.ContextImpl: android.content.ComponentName startService(android.content.Intent)>
SINK|<android.graphics.drawable.BitmapDrawable: void setTileModeX(android.graphics.Shader$TileMode)>
SINK|<org.xml.sax.ext.Attributes2Impl: void setDeclared(int,boolean)>
SINK|<java.time.chrono.AbstractChronology: java.lang.Object writeReplace()>
SINK|<android.widget.LinearLayout: void setHorizontalGravity(int)>
SINK|<android.text.util.Rfc822Token: void setComment(java.lang.String)>
SINK|<android.net.wifi.p2p.WifiP2pManager: void removeServiceRequest(android.net.wifi.p2p.WifiP2pManager$Channel,android.net.wifi.p2p.nsd.WifiP2pServiceRequest,android.net.wifi.p2p.WifiP2pManager$ActionListener)>
SINK|<android.renderscript.Allocation: void setSurfaceTexture(android.graphics.SurfaceTexture)>
SINK|<android.filterfw.core.NativeProgram: void setHostValue(java.lang.String,java.lang.Object)>
SINK|<android.database.CursorWrapper: void setNotificationUri(android.content.ContentResolver,android.net.Uri)>
SINK|<android.net.wifi.WifiNative: boolean setBand(int)>
SINK|<android.view.MotionEvent: void setTainted(boolean)>
SINK|<android.bluetooth.BluetoothTetheringDataTracker: void setDependencyMet(boolean)>
SINK|<com.android.internal.telephony.UiccCardApplication: void registerForReady(android.os.Handler,int,java.lang.Object)>
SINK|<org.apache.http.client.params.ClientParamBean: void setMaxRedirects(int)>
SINK|<android.widget.TextView: void setAutoLinkMask(int)>
SINK|<android.accounts.IAccountManager$Stub$Proxy: boolean addAccount(android.accounts.Account,java.lang.String,android.os.Bundle)>
SINK|<com.android.server.NetworkManagementService: void enableNat(java.lang.String,java.lang.String)>
SINK|<android.media.AudioTrack: void setPlaybackPositionUpdateListener(android.media.AudioTrack$OnPlaybackPositionUpdateListener)>
SINK|<com.android.camera.ui.PieRenderer: void onDraw(android.graphics.Canvas)>
SINK|<android.widget.AbsListView: void setFilterText(java.lang.String)>
SINK|<com.android.internal.widget.LockPatternUtils: void setPowerButtonInstantlyLocks(boolean)>
SINK|<javax.xml.transform.stream.StreamSource: void setInputStream(java.io.InputStream)>
SINK|<android.app.SearchDialog: void setWorking(boolean)>
SINK|<android.content.pm.IPackageManager$Stub$Proxy: void verifyPendingInstall(int,int)>
SINK|<com.android.contacts.list.ContactListItemView: void setSectionHeader(java.lang.String)>
SINK|<gov.nist.javax.sip.header.AcceptLanguage: void setAcceptLanguage(java.util.Locale)>
SINK|<com.android.internal.telephony.cat.Item: void writeToParcel(android.os.Parcel,int)>
SINK|<android.webkit.CallbackProxy: boolean onDownloadStart(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,long)>
SINK|<com.android.internal.telephony.sip.SipPhone: void saveClirSetting(int)>
SINK|<com.android.server.input.InputManagerService: void setInputWindows(com.android.server.input.InputWindowHandle[])>
SINK|<android.filterfw.core.ShaderProgram: void setAttributeValues(java.lang.String,float[],int)>
SINK|<com.android.inputmethod.keyboard.KeyboardView: void setGesturePreviewMode(boolean,boolean)>
SINK|<android.net.INetworkStatsService$Stub$Proxy: void advisePersistThreshold(long)>
SINK|<com.android.launcher2.SmoothPagedView$OvershootInterpolator: void setDistance(int)>
SINK|<com.android.server.IntentResolver: boolean dump(java.io.PrintWriter,java.lang.String,java.lang.String,java.lang.String,boolean)>
SINK|<android.filterfw.core.Frame: void setGenericObjectValue(java.lang.Object)>
SINK|<com.android.gallery3d.util.LightCycleHelper$PanoramaViewHelper: void onPanoramaInfoLoaded(com.google.android.gms.common.ConnectionResult,int,android.content.Intent)>
SINK|<com.google.android.apps.lightcycle.camera.CameraApiProxyAndroidImpl$CameraProxyAndroidImpl: void setParameters(android.hardware.Camera$Parameters)>
SINK|<android.widget.ListView: void setFooterDividersEnabled(boolean)>
SINK|<android.view.IWindowManager$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>
SINK|<android.os.CommonTimeConfig: int setClientSyncInterval(int)>
SINK|<com.adobe.xmp.impl.CountOutputStream: void write(byte[],int,int)>
SINK|<android.location.Location: void dump(android.util.Printer,java.lang.String)>
SINK|<com.android.launcher2.LauncherViewPropertyAnimator: void setTarget(java.lang.Object)>
SINK|<android.content.Intent: android.content.Intent putExtra(java.lang.String,double)>
SINK|<android.widget.RemoteViews$ViewGroupAction: void writeToParcel(android.os.Parcel,int)>
SINK|<java.time.chrono.MinguoDate: java.lang.Object writeReplace()>
SINK|<com.android.server.net.NetworkStatsRecorder$RemoveUidRewriter: void write(java.io.OutputStream)>
SINK|<com.android.contacts.PhoneCallDetailsHelper: void setCallDetailsHeader(android.widget.TextView,com.android.contacts.PhoneCallDetails)>
SINK|<android.content.ISyncAdapter$Stub$Proxy: void initialize(android.accounts.Account,java.lang.String)>
SINK|<javax.xml.parsers.DocumentBuilderFactory: void setCoalescing(boolean)>
SINK|<com.android.email.activity.ShortcutPickerFragment$MailboxShortcutPickerFragment: com.android.email.activity.ShortcutPickerFragment$MailboxShortcutPickerFragment newInstance(android.content.Context,com.android.emailcommon.provider.Account,java.lang.Integer)>
SINK|<android.webkit.HTML5VideoView: void setOnInfoListener(android.webkit.HTML5VideoViewProxy)>
SINK|<android.location.Address: void setPhone(java.lang.String)>
SINK|<android.nfc.NdefMessage: void writeToParcel(android.os.Parcel,int)>
SINK|<com.android.server.wm.WindowManagerService: void startAppFreezingScreenLocked(com.android.server.wm.AppWindowToken,int)>
SINK|<android.webkit.WebViewClient: void doUpdateVisitedHistory(android.webkit.WebView,java.lang.String,boolean)>
SINK|<org.apache.http.impl.conn.tsccm.ThreadSafeClientConnManager: void setDefaultMaxPerRoute(int)>
SINK|<android.hardware.ISerialManager$Stub$Proxy: android.os.ParcelFileDescriptor openSerialPort(java.lang.String)>
SINK|<android.media.IRingtonePlayer$Stub$Proxy: void stop(android.os.IBinder)>
SINK|<android.appwidget.AppWidgetHostView: void updateAppWidgetOptions(android.os.Bundle)>
SINK|<android.gesture.GestureOverlayView: void setGestureColor(int)>
SINK|<com.android.videoeditor.service.ApiService: void setMediaItemDuration(android.content.Context,java.lang.String,java.lang.String,long)>
SINK|<android.app.ContextImpl: void sendBroadcast(android.content.Intent)>
SINK|<com.android.internal.view.IInputMethodManager$Stub$Proxy: void showInputMethodPickerFromClient(com.android.internal.view.IInputMethodClient)>
SINK|<android.widget.TabHost$TabSpec: android.widget.TabHost$TabSpec setIndicator(android.view.View)>
SINK|<android.webkit.WebSettings: void setLayoutAlgorithm(android.webkit.WebSettings$LayoutAlgorithm)>
SINK|<com.android.internal.telephony.IccSmsInterfaceManagerProxy: void sendMultipartText(java.lang.String,java.lang.String,java.util.List,java.util.List,java.util.List)>
SINK|<com.android.launcher2.SearchDropTargetBar: void setup(com.android.launcher2.Launcher,com.android.launcher2.DragController)>
SINK|<android.media.AudioManager: void setSpeakerphoneOn(boolean)>
SINK|<java.security.cert.X509CRLSelector: void setMaxCRLNumber(java.math.BigInteger)>
SINK|<android.app.admin.DevicePolicyManager: void setPasswordMinimumLength(android.content.ComponentName,int)>
SINK|<com.android.server.NetworkManagementService: void setInterfaceConfig(java.lang.String,android.net.InterfaceConfiguration)>
SINK|<com.android.calendar.CalendarController: void sendEventRelatedEvent(java.lang.Object,long,long,long,long,int,int,long)>
SINK|<android.webkit.WebView: void setNetworkAvailable(boolean)>
SINK|<org.apache.harmony.xnet.provider.jsse.CertificateVerify: void send(org.apache.harmony.xnet.provider.jsse.HandshakeIODataStream)>
SINK|<libcore.icu.NativeDecimalFormat: void setParseIntegerOnly(boolean)>
SINK|<android.view.animation.Animation: void setRepeatCount(int)>
SINK|<com.android.internal.view.menu.ActionMenuItem: android.view.MenuItem setTitle(int)>
SINK|<com.android.server.WallpaperManagerService: boolean hasNamedWallpaper(java.lang.String)>
SINK|<android.media.MediaRecorder: void setAudioChannels(int)>
SINK|<com.google.common.collect.AbstractMultiset: int setCount(java.lang.Object,int)>
SINK|<com.android.uiautomator.core.UiDevice: void dumpWindowHierarchy(java.lang.String)>
SINK|<com.android.internal.telephony.sip.SipCommandInterface: void setCallWaiting(boolean,int,android.os.Message)>
SINK|<com.google.common.io.ByteStreams$ByteArrayDataOutputStream: void writeInt(int)>
SINK|<android.os.storage.IMountService$Stub$Proxy: boolean isObbMounted(java.lang.String)>
SINK|<java.lang.reflect.AccessibleObject: void setAccessible(boolean)>
SINK|<com.android.camera.ui.ZoomRenderer: void setZoomValue(int)>
SINK|<android.app.ProgressDialog: void setProgress(int)>
SINK|<android.graphics.drawable.PictureDrawable: void setColorFilter(android.graphics.ColorFilter)>
SINK|<android.webkit.Plugin: void setFileName(java.lang.String)>
SINK|<android.animation.PropertyValuesHolder$FloatPropertyValuesHolder: void setAnimatedValue(java.lang.Object)>
SINK|<android.media.IAudioService$Stub$Proxy: void playSoundEffectVolume(int,float)>
SINK|<android.webkit.WebViewClassic: void saveViewState(java.io.OutputStream,android.webkit.ValueCallback)>
SINK|<android.widget.TextView: void setPadding(int,int,int,int)>
SINK|<com.android.server.location.MockProvider: void setStatus(int,android.os.Bundle,long)>
SINK|<java.text.NumberFormat: void setMinimumFractionDigits(int)>
SINK|<android.accounts.IAccountAuthenticator$Stub$Proxy: void updateCredentials(android.accounts.IAccountAuthenticatorResponse,android.accounts.Account,java.lang.String,android.os.Bundle)>
SINK|<android.app.backup.IFullBackupRestoreObserver$Stub$Proxy: void onBackupPackage(java.lang.String)>
SINK|<com.android.server.NotificationManagerService$NotificationRecord: void dump(java.io.PrintWriter,java.lang.String,android.content.Context)>
SINK|<android.os.Registrant: void notifyRegistrant(android.os.AsyncResult)>
SINK|<gov.nist.javax.sip.address.SipUri: void setMAddrParam(java.lang.String)>
SINK|<android.content.pm.IPackageInstallObserver$Stub$Proxy: void packageInstalled(java.lang.String,int)>
SINK|<com.android.launcher2.PagedViewCellLayout: void setChildrenDrawingCacheEnabled(boolean)>
SINK|<com.android.commands.bmgr.Bmgr$RestoreObserver: void restoreSetsAvailable(android.app.backup.RestoreSet[])>
SINK|<gov.nist.javax.sip.stack.TCPMessageChannel: void sendMessage(gov.nist.javax.sip.message.SIPMessage)>
SINK|<android.accounts.IAccountAuthenticator$Stub$Proxy: void editProperties(android.accounts.IAccountAuthenticatorResponse,java.lang.String)>
SINK|<android.app.admin.IDevicePolicyManager$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>
SINK|<android.os.storage.IMountService$Stub$Proxy: void unmountVolume(java.lang.String,boolean,boolean)>
SINK|<android.widget.TabWidget: void setDividerDrawable(int)>
SINK|<javax.xml.parsers.SAXParser: void parse(java.io.File,org.xml.sax.helpers.DefaultHandler)>
SINK|<android.view.inputmethod.InputMethodManager: void updateCursor(android.view.View,int,int,int,int)>
SINK|<android.os.UserManager: void setGuestEnabled(boolean)>
SINK|<android.app.Activity: void startActivity(android.content.Intent,android.os.Bundle)>
SINK|<android.widget.ListPopupWindow: void setContentWidth(int)>
SINK|<java.nio.file.Files: boolean isExecutable(java.nio.file.Path)>
SINK|<com.android.server.BackupManagerService: void setBackupProvisioned(boolean)>
SINK|<android.graphics.drawable.Drawable: void setBounds(android.graphics.Rect)>
SINK|<com.android.gallery3d.filtershow.tools.SaveCopyTask: android.net.Uri insertContent(android.content.Context,android.net.Uri,java.io.File,java.lang.String)>
SINK|<android.os.Bundle: void putBundle(java.lang.String,android.os.Bundle)>
SINK|<com.android.internal.telephony.sip.SipPhone: void notifyDataConnection(java.lang.String,java.lang.String)>
SINK|<com.android.browser.preferences.WebsiteSettingsFragment$SiteAdapter: void onItemClick(android.widget.AdapterView,android.view.View,int,long)>
SINK|<com.android.internal.view.IInputMethodManager$Stub$Proxy: void showInputMethodAndSubtypeEnablerFromClient(com.android.internal.view.IInputMethodClient,java.lang.String)>
SINK|<android.net.wifi.WifiStateMachine$DriverStoppingState: boolean processMessage(android.os.Message)>
SINK|<android.support.v13.app.FragmentCompatICS: void setMenuVisibility(android.app.Fragment,boolean)>
SINK|<android.content.IClipboard$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>
SINK|<android.os.INetworkManagementService$Stub$Proxy: void setFirewallEgressDestRule(java.lang.String,int,boolean)>
SINK|<android.widget.TabWidget: void setRightStripDrawable(android.graphics.drawable.Drawable)>
SINK|<android.media.MediaRecorder: void setOrientationHint(int)>
SINK|<android.graphics.Region: boolean set(android.graphics.Rect)>
SINK|<android.view.IWindowSession$Stub$Proxy: void setUniverseTransform(android.os.IBinder,float,float,float,float,float,float,float)>
SINK|<com.android.email.activity.setup.AccountSettings$LoginWarningDialog: com.android.email.activity.setup.AccountSettings$LoginWarningDialog newInstance(java.lang.String)>
SINK|<com.android.internal.telephony.IccCardStatus: void setUniversalPinState(int)>
SINK|<com.android.gallery3d.exif.ExifParser: void registerForTagValue(com.android.gallery3d.exif.ExifTag)>
SINK|<org.apache.http.impl.io.AbstractMessageParser: org.apache.http.Header[] parseHeaders(org.apache.http.io.SessionInputBuffer,int,int,org.apache.http.message.LineParser,java.util.List)>
SINK|<com.android.server.NetworkManagementService: void setDnsForwarders(java.lang.String[])>
SINK|<com.android.contacts.editor.RawContactReadOnlyEditorView: void setState(com.android.contacts.model.RawContactDelta,com.android.contacts.model.account.AccountType,com.android.contacts.editor.ViewIdGenerator,boolean)>
SINK|<android.hardware.Camera$Parameters: void setFocusMode(java.lang.String)>
SINK|<java.io.File: boolean setExecutable(boolean)>
SINK|<android.webkit.WebSettings: void setAppCachePath(java.lang.String)>
SINK|<android.os.CommonTimeUtils: int transactSetInt(int,int)>
SINK|<android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoJellybeanImpl: void setVisibleToUser(java.lang.Object,boolean)>
SINK|<android.net.LinkCapabilities: void put(int,java.lang.String)>
SINK|<com.android.internal.telephony.sip.SipPhone: void setOnPostDialCharacter(android.os.Handler,int,java.lang.Object)>
SINK|<com.android.internal.telephony.sip.SipPhone: void setSmscAddress(java.lang.String,android.os.Message)>
SINK|<android.os.BatteryStats: void dumpLocked(java.io.PrintWriter,java.lang.String,int,int)>
SINK|<java.util.concurrent.atomic.AtomicReferenceFieldUpdater: java.util.concurrent.atomic.AtomicReferenceFieldUpdater newUpdater(java.lang.Class,java.lang.Class,java.lang.String)>
SINK|<android.net.BaseNetworkStateTracker: void setTeardownRequested(boolean)>
SINK|<com.android.internal.app.IUsageStats$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>
SINK|<gov.nist.javax.sip.stack.SIPTransactionStack: void addForkedClientTransaction(gov.nist.javax.sip.stack.SIPClientTransaction)>
SINK|<android.inputmethodservice.IInputMethodWrapper: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
SINK|<com.android.server.am.BatteryStatsService: void setBatteryState(int,int,int,int,int,int)>
SINK|<com.android.inputmethod.keyboard.MainKeyboardView: void setGestureHandlingEnabledByUser(boolean)>
SINK|<libcore.net.http.HttpsURLConnectionImpl: void setConnectTimeout(int)>
SINK|<java.util.concurrent.ConcurrentHashMap$WriteThroughEntry: java.lang.Object setValue(java.lang.Object)>
SINK|<com.android.internal.widget.SlidingTab: void setRightHintText(int)>
SINK|<com.android.systemui.statusbar.NotificationData$Entry: boolean setUserExpanded(boolean)>
SINK|<android.os.storage.IMountService$Stub$Proxy: int renameSecureContainer(java.lang.String,java.lang.String)>
SINK|<org.apache.harmony.xml.ExpatParser$EntityParser: void startElement(java.lang.String,java.lang.String,java.lang.String,int,int)>
SINK|<android.net.DummyDataStateTracker: void setDependencyMet(boolean)>
SINK|<android.telephony.ServiceState: void setState(int)>
SINK|<gov.nist.javax.sip.header.Contact: void setParameter(java.lang.String,java.lang.String)>
SINK|<org.apache.http.cookie.CookieSpecRegistry: void setItems(java.util.Map)>
SINK|<android.widget.RemoteViews: void setImageViewUri(int,android.net.Uri)>
SINK|<android.preference.DialogPreference: void setDialogIcon(android.graphics.drawable.Drawable)>
SINK|<org.kxml2.io.KXmlParser: void setProperty(java.lang.String,java.lang.Object)>
SINK|<android.net.wifi.IWifiManager$Stub$Proxy: boolean removeNetwork(int)>
SINK|<android.view.accessibility.AccessibilityNodeInfo: void setEnabled(boolean)>
SINK|<android.content.Intent: android.content.Intent putIntegerArrayListExtra(java.lang.String,java.util.ArrayList)>
SINK|<com.android.internal.os.BatteryStatsImpl$Timer: void logState(android.util.Printer,java.lang.String)>
SINK|<android.app.ActivityManagerProxy: void showWaitingForDebugger(android.app.IApplicationThread,boolean)>
SINK|<com.google.android.mms.pdu.SendReq: void setExpiry(long)>
SINK|<java.security.cert.X509CertSelector: void setSubjectKeyIdentifier(byte[])>
SINK|<com.android.server.MountService: int verifyEncryptionPassword(java.lang.String)>
SINK|<com.android.server.wm.WindowManagerService: void addWindowToken(android.os.IBinder,int)>
SINK|<com.android.internal.telephony.cdma.CdmaSMSDispatcher: void sendData(java.lang.String,java.lang.String,int,byte[],android.app.PendingIntent,android.app.PendingIntent)>
SINK|<android.graphics.drawable.InsetDrawable: boolean setVisible(boolean,boolean)>
SINK|<com.android.mms.dom.DocumentImpl: void setStrictErrorChecking(boolean)>
SINK|<libcore.io.Posix: int sendto(java.io.FileDescriptor,byte[],int,int,int,java.net.InetAddress,int)>
SINK|<com.android.server.connectivity.Tethering: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
SINK|<gov.nist.javax.sip.address.SipUri: void setTransportParam(java.lang.String)>
SINK|<com.android.internal.telephony.RIL: void queryFacilityLockForApp(java.lang.String,java.lang.String,int,java.lang.String,android.os.Message)>
SINK|<android.view.PointerIcon: void writeToParcel(android.os.Parcel,int)>
SINK|<android.app.INotificationManager$Stub$Proxy: void cancelNotificationWithTag(java.lang.String,java.lang.String,int,int)>
SINK|<javax.xml.parsers.DocumentBuilder: org.w3c.dom.Document parse(java.io.InputStream,java.lang.String)>
SINK|<java.util.concurrent.ConcurrentLinkedDeque: void writeObject(java.io.ObjectOutputStream)>
SINK|<com.android.server.am.ActivityStack: void ensureActivitiesVisibleLocked(com.android.server.am.ActivityRecord,com.android.server.am.ActivityRecord,java.lang.String,int)>
SINK|<android.speech.tts.TextToSpeech: int addEarcon(java.lang.String,java.lang.String)>
SINK|<android.graphics.Region: boolean set(android.graphics.Region)>
SINK|<java.io.File: boolean setLastModified(long)>
SINK|<com.android.contacts.model.RawContactDelta$ValuesDelta: void put(java.lang.String,long)>
SINK|<com.android.contacts.util.AccountSelectionUtil: void doImportFromSdCard(android.content.Context,com.android.contacts.model.account.AccountWithDataSet)>
SINK|<com.android.internal.telephony.gsm.GsmDataConnectionTracker: void setDataOnRoamingEnabled(boolean)>
SINK|<com.android.phone.OtaUtils: void setupOtaspCall(android.content.Intent)>
SINK|<android.net.INetworkPolicyManager$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>
SINK|<java.util.Vector: java.lang.Object set(int,java.lang.Object)>
SINK|<com.android.gallery3d.util.InterruptableOutputStream: void write(byte[],int,int)>
SINK|<com.android.providers.contacts.ContactsDatabaseHelper: boolean updateContactVisibleOnlyIfChanged(com.android.providers.contacts.TransactionContext,long)>
SINK|<android.net.wifi.IWifiManager$Stub$Proxy: void setWifiApEnabled(android.net.wifi.WifiConfiguration,boolean)>
SINK|<android.app.ActivityManagerProxy: void finishReceiver(android.os.IBinder,int,java.lang.String,android.os.Bundle,boolean)>
SINK|<android.text.style.ScaleXSpan: void updateMeasureState(android.text.TextPaint)>
SINK|<com.android.internal.telephony.test.SimulatedCommands: void setGsmBroadcastActivation(boolean,android.os.Message)>
SINK|<gov.nist.javax.sip.header.ParametersHeader: void setParameter(gov.nist.core.NameValue)>
SINK|<android.widget.TextView: void setCursorVisible(boolean)>
SINK|<android.view.View: void setScrollbarFadingEnabled(boolean)>
SINK|<libcore.icu.NativeDecimalFormat: void setDecimalSeparatorAlwaysShown(boolean)>
SINK|<com.android.server.am.ActivityManagerService: int startActivityIntentSender(android.app.IApplicationThread,android.content.IntentSender,android.content.Intent,java.lang.String,android.os.IBinder,java.lang.String,int,int,int,android.os.Bundle)>
SINK|<android.renderscript.Script: android.renderscript.Script$KernelID createKernelID(int,int,android.renderscript.Element,android.renderscript.Element)>
SINK|<org.apache.http.impl.client.EntityEnclosingRequestWrapper: void setEntity(org.apache.http.HttpEntity)>
SINK|<android.net.MailTo: android.net.MailTo parse(java.lang.String)>
SINK|<com.google.android.apps.lightcycle.math.Matrix3x3d: void set(int,int,double)>
SINK|<android.view.accessibility.AccessibilityEvent: void setChecked(boolean)>
SINK|<android.widget.TimePicker: void setOnTimeChangedListener(android.widget.TimePicker$OnTimeChangedListener)>
SINK|<com.android.internal.backup.LocalTransport: int performBackup(android.content.pm.PackageInfo,android.os.ParcelFileDescriptor)>
SINK|<com.android.contacts.list.CustomContactListFilterActivity$AccountDisplay: void setShouldSync(com.android.contacts.list.CustomContactListFilterActivity$GroupDelta,boolean)>
SINK|<android.app.ActivityThread$ApplicationThread: void dumpService(java.io.FileDescriptor,android.os.IBinder,java.lang.String[])>
SINK|<android.net.wifi.WifiSsid$1: android.net.wifi.WifiSsid createFromParcel(android.os.Parcel)>
SINK|<com.android.calendar.AllInOneActivity: boolean onQueryTextSubmit(java.lang.String)>
SINK|<com.android.gallery3d.filtershow.imageshow.ImageShow: void saveImage(com.android.gallery3d.filtershow.FilterShowActivity,java.io.File)>
SINK|<com.android.uiautomator.testrunner.UiAutomatorTestRunner$WatcherResultPrinter: void addError(junit.framework.Test,java.lang.Throwable)>
SINK|<android.os.Parcel: void writeLongArray(long[])>
SINK|<android.gesture.GestureOverlayView: void setFadeOffset(long)>
SINK|<com.android.videoeditor.service.ApiService: void insertFadeBlackTransition(android.content.Context,java.lang.String,java.lang.String,java.lang.String,long,int)>
SINK|<org.apache.http.client.params.ClientParamBean: void setVirtualHost(org.apache.http.HttpHost)>
SINK|<android.bluetooth.BluetoothPan: void setBluetoothTethering(boolean)>
SINK|<android.net.IConnectivityManager$Stub$Proxy: void setNetworkPreference(int)>
SINK|<com.android.server.ThrottleService: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
SINK|<com.android.deskclock.Alarms: long setAlarm(android.content.Context,com.android.deskclock.Alarm)>
SINK|<org.apache.http.impl.conn.AbstractClientConnAdapter: void setAttribute(java.lang.String,java.lang.Object)>
SINK|<java.util.concurrent.ScheduledThreadPoolExecutor: void setContinueExistingPeriodicTasksAfterShutdownPolicy(boolean)>
SINK|<java.util.concurrent.CompletableFuture: java.util.concurrent.CompletableFuture biRunStage(java.util.concurrent.Executor,java.util.concurrent.CompletionStage,java.lang.Runnable)>
SINK|<android.net.wifi.WifiStateMachine: boolean syncRemoveNetwork(com.android.internal.util.AsyncChannel,int)>
SINK|<com.android.mms.dom.ElementImpl: void setAttributeNS(java.lang.String,java.lang.String,java.lang.String)>
SINK|<com.android.server.EventLogTags: void writeBackupStart(java.lang.String)>
SINK|<android.os.INetworkManagementService$Stub$Proxy: void removeIdleTimer(java.lang.String)>
SINK|<android.net.sip.SimpleSessionDescription$Fields: void setAttribute(java.lang.String,java.lang.String)>
SINK|<com.android.server.location.GeofenceManager: void dump(java.io.PrintWriter)>
SINK|<com.google.common.io.ByteStreams$ByteArrayDataOutputStream: void write(byte[])>
SINK|<android.preference.Preference: void setIntent(android.content.Intent)>
SINK|<android.net.BaseNetworkStateTracker: void setDependencyMet(boolean)>
SINK|<libcore.icu.NativeDecimalFormat: void setGroupingUsed(boolean)>
SINK|<org.xml.sax.helpers.XMLReaderAdapter: void setDocumentLocator(org.xml.sax.Locator)>
SINK|<org.apache.http.impl.io.AbstractSessionOutputBuffer: void writeLine(java.lang.String)>
SINK|<com.android.providers.contacts.aggregation.ContactAggregator: int markAllVisibleForAggregation(android.database.sqlite.SQLiteDatabase)>
SINK|<java.lang.reflect.Array: void set(java.lang.Object,int,java.lang.Object)>
SINK|<org.apache.http.impl.client.AbstractHttpClient: void setRoutePlanner(org.apache.http.conn.routing.HttpRoutePlanner)>
SINK|<com.android.providers.contacts.aggregation.ContactAggregator: void updatePhotoId(android.database.sqlite.SQLiteDatabase,long)>
SINK|<android.webkit.WebViewClassic: void setNetworkAvailable(boolean)>
SINK|<android.hardware.Camera$Parameters: void setVideoStabilization(boolean)>
SINK|<android.view.accessibility.AccessibilityNodeInfo: void setClickable(boolean)>
SINK|<libcore.icu.NativeDecimalFormat: void setMaximumIntegerDigits(int)>
SINK|<com.android.internal.telephony.PhoneBase: void setSmscAddress(java.lang.String,android.os.Message)>
SINK|<android.media.IAudioService$Stub$Proxy: void setMode(int,android.os.IBinder)>
SINK|<java.util.concurrent.ThreadLocalRandom: void writeObject(java.io.ObjectOutputStream)>
SINK|<android.view.accessibility.IAccessibilityManager$Stub$Proxy: boolean sendAccessibilityEvent(android.view.accessibility.AccessibilityEvent,int)>
SINK|<android.widget.TextView: void setSelectAllOnFocus(boolean)>
SINK|<java.util.concurrent.CompletableFuture: java.util.concurrent.CompletableFuture thenRunAsync(java.lang.Runnable)>
SINK|<com.android.internal.policy.impl.keyguard.KeyguardMessageArea$Helper: void setMessage(int,boolean)>
SINK|<android.app.DownloadManager$Request: android.app.DownloadManager$Request setShowRunningNotification(boolean)>
SINK|<android.support.v4.view.ViewCompatICS: void setAccessibilityDelegate(android.view.View,java.lang.Object)>
SINK|<android.bluetooth.IBluetoothInputDevice$Stub$Proxy: boolean setPriority(android.bluetooth.BluetoothDevice,int)>
SINK|<com.android.email.GroupMessagingListener: void sendPendingMessagesStarted(long,long)>
SINK|<com.google.android.mms.pdu.ReadRecInd: void setTo(com.google.android.mms.pdu.EncodedStringValue[])>
SINK|<android.os.storage.StorageManager$ListenerDelegate: void sendShareAvailabilityChanged(boolean)>
SINK|<android.app.ActivityManagerProxy: boolean startInstrumentation(android.content.ComponentName,java.lang.String,int,android.os.Bundle,android.app.IInstrumentationWatcher,int)>
SINK|<org.apache.harmony.xnet.provider.jsse.Logger$Stream: void println(java.lang.String)>
SINK|<org.apache.harmony.security.asn1.ASN1SetOf: void setEncodingContent(org.apache.harmony.security.asn1.BerOutputStream)>
SINK|<android.view.GLES20DisplayList: void setHasOverlappingRendering(boolean)>
SINK|<com.android.internal.view.menu.ActionMenuItemView: void setChecked(boolean)>
SINK|<java.util.logging.Logger: void setLevel(java.util.logging.Level)>
SINK|<com.android.server.am.ServiceRecord: void dump(java.io.PrintWriter,java.lang.String)>
SINK|<android.location.LocationManager: void requestSingleUpdate(android.location.Criteria,android.location.LocationListener,android.os.Looper)>
SINK|<com.android.server.input.InputManagerService: void setFocusedApplication(com.android.server.input.InputApplicationHandle)>
SINK|<android.widget.AdapterView: void setOnItemLongClickListener(android.widget.AdapterView$OnItemLongClickListener)>
SINK|<com.android.inputmethod.keyboard.internal.PreviewPlacerView: void invalidatePointer(com.android.inputmethod.keyboard.PointerTracker,boolean)>
SINK|<junit.framework.TestCase: void run(junit.framework.TestResult)>
SINK|<android.view.View: void setOnTouchListener(android.view.View$OnTouchListener)>
SINK|<android.widget.AbsSpinner: void setAdapter(android.widget.Adapter)>
SINK|<android.media.JetPlayer: boolean setMuteFlags(int,boolean)>
SINK|<android.net.sip.SipAudioCall: void sendDtmf(int)>
SINK|<android.graphics.drawable.AnimationDrawable: void setOneShot(boolean)>
SINK|<javax.sip.SipFactory: javax.sip.SipStack createSipStack(java.util.Properties)>
SINK|<com.android.inputmethod.keyboard.internal.KeyStylesSet: void parseKeyStyleAttributes(android.content.res.TypedArray,android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser)>
SINK|<android.net.sip.SipProfile$Builder: android.net.sip.SipProfile$Builder setAuthUserName(java.lang.String)>
SINK|<android.media.audiofx.Virtualizer: void setProperties(android.media.audiofx.Virtualizer$Settings)>
SINK|<android.app.Activity: void startActivityFromFragment(android.app.Fragment,android.content.Intent,int,android.os.Bundle)>
SINK|<android.media.AudioService: void playSoundEffectVolume(int,float)>
SINK|<gov.nist.javax.sip.clientauthutils.CredentialsCache: void cacheAuthorizationHeader(java.lang.String,javax.sip.header.AuthorizationHeader,int)>
SINK|<org.apache.harmony.xnet.provider.jsse.OpenSSLSocketImpl: void setWantClientAuth(boolean)>
SINK|<android.app.IWallpaperManager$Stub$Proxy: android.os.ParcelFileDescriptor setWallpaper(java.lang.String)>
SINK|<android.location.Address: void setLatitude(double)>
SINK|<android.webkit.WebSettings: void setJavaScriptCanOpenWindowsAutomatically(boolean)>
SINK|<com.android.phone.PhoneInterfaceManager: boolean setRadio(boolean)>
SINK|<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: void setMaxTotalConnections(int)>
SINK|<com.android.exchange.EasSyncService: com.android.exchange.EasResponse sendHttpClientPost(java.lang.String,org.apache.http.HttpEntity,int)>
SINK|<com.android.internal.telephony.gsm.GSMPhone: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
SINK|<android.view.IWindowManager$Stub$Proxy: void overridePendingAppTransition(java.lang.String,int,int,android.os.IRemoteCallback)>
SINK|<java.nio.DatagramChannelImpl: int write(java.nio.ByteBuffer)>
SINK|<android.app.Instrumentation: void sendCharacterSync(int)>
SINK|<com.android.contacts.list.ContactEntryListAdapter: void setPinnedSectionTitle(android.view.View,java.lang.String)>
SINK|<android.view.Window: void setBackgroundDrawableResource(int)>
SINK|<libcore.net.url.JarURLConnectionImpl: void setUseCaches(boolean)>
SINK|<android.view.IWindow$Stub$Proxy: void closeSystemDialogs(java.lang.String)>
SINK|<com.android.email.activity.setup.AccountSettings: void onEditQuickResponses(com.android.emailcommon.provider.Account)>
SINK|<android.accounts.AccountManagerService: void getAuthToken(android.accounts.IAccountManagerResponse,android.accounts.Account,java.lang.String,boolean,boolean,android.os.Bundle)>
SINK|<android.widget.HorizontalScrollView: boolean performAccessibilityAction(int,android.os.Bundle)>
SINK|<com.android.internal.appwidget.IAppWidgetHost$Stub$Proxy: void viewDataChanged(int,int)>
SINK|<com.android.mms.data.Conversation: void startQuery(android.content.AsyncQueryHandler,int,java.lang.String)>
SINK|<java.util.Collections$SetFromMap: boolean add(java.lang.Object)>
SINK|<android.media.AudioManager: void setStreamMute(int,boolean)>
SINK|<com.android.mms.ui.SlideListItemView: void setVideoVisibility(boolean)>
SINK|<android.content.Intent: android.content.Intent putExtra(java.lang.String,float)>
SINK|<android.database.DatabaseUtils$InsertHelper: void bind(int,byte[])>
SINK|<com.android.systemui.statusbar.phone.NavigationBarView: void setDisabledFlags(int)>
SINK|<com.android.camera.ListPreference: void setValueIndex(int)>
SINK|<android.widget.TabWidget: void sendAccessibilityEventUnchecked(android.view.accessibility.AccessibilityEvent)>
SINK|<android.renderscript.Script: void setVar(int,int)>
SINK|<android.test.mock.MockResources: void updateConfiguration(android.content.res.Configuration,android.util.DisplayMetrics)>
SINK|<android.text.style.TextAppearanceSpan: void updateMeasureState(android.text.TextPaint)>
SINK|<com.google.android.mms.pdu.NotificationInd: void setContentLocation(byte[])>
SINK|<java.util.TreeSet: boolean add(java.lang.Object)>
SINK|<org.xml.sax.helpers.ParserAdapter: void setErrorHandler(org.xml.sax.ErrorHandler)>
SINK|<com.android.calendar.event.EditEventHelper: boolean saveEvent(com.android.calendar.CalendarEventModel,com.android.calendar.CalendarEventModel,int)>
SINK|<android.graphics.drawable.ColorDrawable: void setColorFilter(android.graphics.ColorFilter)>
SINK|<org.apache.http.impl.io.IdentityOutputStream: void write(byte[],int,int)>
SINK|<com.android.ex.variablespeed.SingleThreadedMediaPlayerProxy: void setVariableSpeed(float)>
SINK|<com.android.email.activity.setup.DebugFragment: void onCheckedChanged(android.widget.CompoundButton,boolean)>
SINK|<android.webkit.WebViewClassic: void saveWebArchive(java.lang.String,boolean,android.webkit.ValueCallback)>
SINK|<java.nio.DoubleToByteBufferAdapter: java.nio.DoubleBuffer put(double[],int,int)>
SINK|<android.app.admin.DevicePolicyManager: void setPasswordHistoryLength(android.content.ComponentName,int)>
SINK|<com.android.mms.model.SlideModel: com.android.mms.model.MediaModel set(int,com.android.mms.model.MediaModel)>
SINK|<android.nfc.INfcTag$Stub$Proxy: int ndefMakeReadOnly(int)>
SINK|<android.test.InstrumentationTestCase: void sendKeys(int[])>
SINK|<org.apache.http.impl.io.IdentityOutputStream: void write(int)>
SINK|<android.content.ContentValues: void put(java.lang.String,java.lang.Integer)>
SINK|<android.net.EthernetDataTracker: boolean setRadio(boolean)>
SINK|<junit.runner.BaseTestRunner: void setPreference(java.lang.String,java.lang.String)>
SINK|<com.google.common.collect.MapMakerInternalMap$WeakEntry: void setExpirationTime(long)>
SINK|<android.net.LocalSocketImpl: void setOption(int,java.lang.Object)>
SINK|<com.android.contacts.editor.StructuredNameEditorView: void onFieldChanged(java.lang.String,java.lang.String)>
SINK|<com.android.systemui.statusbar.phone.PhoneStatusBar: void setHardKeyboardStatus(boolean,boolean)>
SINK|<android.view.accessibility.AccessibilityNodeInfo: void setVisibleToUser(boolean)>
SINK|<java.lang.StringBuilder: void setCharAt(int,char)>
SINK|<com.android.exchange.provider.MailboxUtilities: void checkMailboxConsistency(android.content.Context,long)>
SINK|<com.android.launcher2.ItemInfo: void updateValuesWithCoordinates(android.content.ContentValues,int,int)>
SINK|<com.google.android.apps.lightcycle.opengl.Shader: void setTexCoords(java.nio.FloatBuffer)>
SINK|<com.android.providers.contacts.NameSplitter$Name: void toValues(android.content.ContentValues)>
SINK|<android.widget.TextView: void setCompoundDrawables(android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable)>
SINK|<com.android.videoeditor.widgets.HorizontalScrollView: void setOverScrollMode(int)>
SINK|<com.android.mms.dom.DocumentImpl: void setXmlVersion(java.lang.String)>
SINK|<android.view.ViewRootImpl$TakenSurfaceHolder: void setKeepScreenOn(boolean)>
SINK|<com.android.bluetooth.hfp.HeadsetService: boolean startScoUsingVirtualVoiceCall(android.bluetooth.BluetoothDevice)>
SINK|<java.lang.StringBuilder: java.lang.StringBuilder replace(int,int,java.lang.String)>
SINK|<java.util.Calendar: void setTimeInMillis(long)>
SINK|<com.google.common.io.ByteStreams$ByteArrayDataOutputStream: void writeLong(long)>
SINK|<java.util.concurrent.CompletableFuture: java.util.concurrent.CompletableFuture runAfterEitherAsync(java.util.concurrent.CompletionStage,java.lang.Runnable)>
SINK|<com.android.internal.view.IInputContextCallback$Stub$Proxy: void setTextBeforeCursor(java.lang.CharSequence,int)>
SINK|<android.app.ApplicationThreadProxy: void scheduleServiceArgs(android.os.IBinder,boolean,int,int,android.content.Intent)>
SINK|<com.android.internal.app.IBatteryStats$Stub$Proxy: void noteWifiScanStarted(int)>
SINK|<android.view.ViewGroup: void dispatchDraw(android.graphics.Canvas)>
SINK|<java.security.cert.X509CertSelector: void setSubject(java.lang.String)>
SINK|<android.app.LoaderManagerImpl: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
SINK|<java.util.zip.Adler32: void update(int)>
SINK|<android.graphics.ColorMatrix: void setSaturation(float)>
SINK|<com.google.android.mms.pdu.RetrieveConf: void setReadReport(int)>
SINK|<android.view.View: void setActivated(boolean)>
SINK|<java.util.concurrent.ScheduledThreadPoolExecutor: void execute(java.lang.Runnable)>
SINK|<android.support.v4.view.accessibility.AccessibilityNodeInfoCompatIcs: void setContentDescription(java.lang.Object,java.lang.CharSequence)>
SINK|<com.android.internal.util.StateMachine: void sendMessageDelayed(int,long)>
SINK|<com.android.gallery3d.app.TrimControllerOverlay: void setTimes(int,int,int,int)>
SINK|<java.io.BufferedWriter: void write(java.lang.String,int,int)>
SINK|<android.location.ILocationManager$Stub$Proxy: void addTestProvider(java.lang.String,com.android.internal.location.ProviderProperties)>
SINK|<com.android.internal.telephony.test.SimulatedCommands: void setFacilityLock(java.lang.String,boolean,java.lang.String,int,android.os.Message)>
SINK|<org.apache.http.client.params.HttpClientParams: void setRedirecting(org.apache.http.params.HttpParams,boolean)>
SINK|<android.animation.PropertyValuesHolder: void setAnimatedValue(java.lang.Object)>
SINK|<android.support.v4.view.accessibility.AccessibilityNodeInfoCompat: void setBoundsInParent(android.graphics.Rect)>
SINK|<android.app.ActivityManagerProxy: int handleIncomingUser(int,int,int,boolean,boolean,java.lang.String,java.lang.String)>
SINK|<android.net.sip.SipProfile$Builder: android.net.sip.SipProfile$Builder setProfileName(java.lang.String)>
SINK|<android.widget.DatePicker: void setMinDate(long)>
SINK|<com.android.server.DevicePolicyManagerService: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
SINK|<com.android.contacts.list.PhoneNumberListAdapter: void bindView(android.view.View,int,android.database.Cursor,int)>
SINK|<android.speech.tts.ITextToSpeechService$Stub$Proxy: int playSilence(android.os.IBinder,long,int,android.os.Bundle)>
SINK|<android.util.Slog: int i(java.lang.String,java.lang.String,java.lang.Throwable)>
SINK|<java.util.Spliterators: java.util.Spliterator spliteratorUnknownSize(java.util.Iterator,int)>
SINK|<com.android.internal.view.IInputMethod$Stub$Proxy: void restartInput(com.android.internal.view.IInputContext,android.view.inputmethod.EditorInfo)>
SINK|<com.android.bluetooth.a2dp.A2dpService: boolean connect(android.bluetooth.BluetoothDevice)>
SINK|<android.media.audiofx.AudioEffect: int setParameter(int[],int[])>
SINK|<org.apache.http.impl.io.HttpResponseWriter: void writeHeadLine(org.apache.http.HttpMessage)>
SINK|<com.android.internal.app.ActionBarImpl: void setCustomView(android.view.View,android.app.ActionBar$LayoutParams)>
SINK|<android.service.dreams.IDreamService$Stub$Proxy: void attach(android.os.IBinder)>
SINK|<android.webkit.CookieManagerClassic: void setAcceptFileSchemeCookiesImpl(boolean)>
SINK|<android.graphics.Path: void setFillType(android.graphics.Path$FillType)>
SINK|<android.graphics.Canvas: void setDrawFilter(android.graphics.DrawFilter)>
SINK|<com.android.phone.OtaUtils: boolean maybeDoOtaCall(android.content.Context,android.os.Handler,int)>
SINK|<android.os.WorkSource: boolean add(android.os.WorkSource)>
SINK|<android.widget.Gallery: void setGravity(int)>
SINK|<android.widget.SimpleAdapter: void setViewImage(android.widget.ImageView,int)>
SINK|<com.android.exchange.adapter.CalendarSyncAdapter$EasCalendarSyncParser: void setTimeRelatedValues(android.content.ContentValues,long,long,int)>
SINK|<com.android.server.AppWidgetServiceImpl: void setBindAppWidgetPermission(java.lang.String,boolean)>
SINK|<android.app.ActivityManagerProxy: void activityPaused(android.os.IBinder)>
SINK|<android.os.IPowerManager$Stub$Proxy: void crash(java.lang.String)>
SINK|<com.android.gallery3d.data.DataManager: void addSource(com.android.gallery3d.data.MediaSource)>
SINK|<java.time.OffsetTime: java.time.OffsetTime truncatedTo(java.time.temporal.TemporalUnit)>
SINK|<com.android.server.AppWidgetService: int[] startListening(com.android.internal.appwidget.IAppWidgetHost,java.lang.String,int,java.util.List)>
SINK|<android.os.AsyncTask: android.os.AsyncTask execute(java.lang.Object[])>
SINK|<com.android.exchange.provider.MailboxUtilities: void setFlagsAndChildrensParentKey(android.content.Context,android.database.Cursor,java.lang.String)>
SINK|<android.app.BackStackRecord: android.app.FragmentTransaction setCustomAnimations(int,int)>
SINK|<com.android.inputmethod.latin.spellcheck.AndroidWordLevelSpellCheckerSession$SuggestionsCache: void putSuggestionsToCache(java.lang.String,java.lang.String,java.lang.String[],int)>
SINK|<com.android.nfc.ndefpush.NdefPushClient: boolean push(android.nfc.NdefMessage)>
SINK|<android.widget.AutoCompleteTextView: void setCompletionHint(java.lang.CharSequence)>
SINK|<org.xmlpull.v1.sax2.Driver: void setEntityResolver(org.xml.sax.EntityResolver)>
SINK|<com.android.internal.telephony.RIL: void hangupWaitingOrBackground(android.os.Message)>
SINK|<android.hardware.Camera: void setPreviewCallbackWithBuffer(android.hardware.Camera$PreviewCallback)>
SINK|<android.inputmethodservice.ExtractEditText: void setSpan_internal(java.lang.Object,int,int,int)>
SINK|<org.apache.harmony.xnet.provider.jsse.ConnectionStateSSLv3: byte[] encrypt(byte,byte[],int,int)>
SINK|<android.sax.Element: void setTextElementListener(android.sax.TextElementListener)>
SINK|<android.net.IThrottleManager$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>
SINK|<com.android.server.wm.Session: void setUniverseTransform(android.os.IBinder,float,float,float,float,float,float,float)>
SINK|<com.android.bluetooth.btservice.RemoteDevices$DeviceProperties: void setAlias(java.lang.String)>
SINK|<android.app.backup.RestoreObserver: void onUpdate(int,java.lang.String)>
SINK|<android.media.AudioTrack: int setNotificationMarkerPosition(int)>
SINK|<com.android.server.am.ActivityManagerService: void dispatchUserSwitch(com.android.server.am.UserStartedState,int,int)>
SINK|<java.io.ObjectOutputStream: void writeObject(java.lang.Object)>
SINK|<android.app.Activity: void startActivityAsUser(android.content.Intent,android.os.UserHandle)>
SINK|<gov.nist.core.ParserCore: void dbg_leave(java.lang.String)>
SINK|<com.android.launcher2.CellLayout: void setShortcutAndWidgetAlpha(float)>
SINK|<android.content.ContentService: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
SINK|<org.apache.http.impl.cookie.BasicClientCookie: void setAttribute(java.lang.String,java.lang.String)>
SINK|<android.widget.CursorTreeAdapter: android.database.Cursor runQueryOnBackgroundThread(java.lang.CharSequence)>
SINK|<android.net.Uri$OpaqueUri: void writeToParcel(android.os.Parcel,int)>
SINK|<gov.nist.javax.sip.header.AuthenticationHeader: void setCK(java.lang.String)>
SINK|<com.android.gallery3d.app.GalleryActionBar: void setDisplayOptions(boolean,boolean)>
SINK|<java.security.cert.X509CertSelector: void setMatchAllSubjectAltNames(boolean)>
SINK|<android.speech.tts.ITextToSpeechService$Stub$Proxy: int stop(android.os.IBinder)>
SINK|<android.preference.DialogPreference: void setDialogTitle(java.lang.CharSequence)>
SINK|<com.android.server.UiModeManagerService: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
SINK|<com.android.server.power.DisplayPowerState$1: void setValue(com.android.server.power.DisplayPowerState,float)>
SINK|<java.nio.CharBuffer: java.nio.CharBuffer put(java.lang.String)>
SINK|<android.filterfw.core.FilterGraph: boolean addFilter(android.filterfw.core.Filter)>
SINK|<com.android.server.am.ActivityManagerService: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
SINK|<org.apache.harmony.xnet.provider.jsse.SSLEngineImpl: void setNeedClientAuth(boolean)>
SINK|<android.content.IContentService$Stub$Proxy: void requestSync(android.accounts.Account,java.lang.String,android.os.Bundle)>
SINK|<com.android.internal.view.IInputMethodSession$Stub$Proxy: void updateSelection(int,int,int,int,int,int)>
SINK|<javax.net.ssl.HttpsURLConnection: void setDefaultSSLSocketFactory(javax.net.ssl.SSLSocketFactory)>
SINK|<android.media.MediaRouter$Static: void onDisplayAdded(int)>
SINK|<com.android.internal.appwidget.IAppWidgetService$Stub$Proxy: void updateAppWidgetOptions(int,android.os.Bundle)>
SINK|<com.android.phone.sip.SipSharedPreferences: void setReceivingCallsEnabled(boolean)>
SINK|<com.android.internal.app.ActionBarImpl: void setSplitBackgroundDrawable(android.graphics.drawable.Drawable)>
SINK|<android.app.ActivityManager: android.app.PendingIntent getRunningServiceControlPanel(android.content.ComponentName)>
SINK|<com.android.mms.ui.AudioAttachmentView: void setText(java.lang.String,java.lang.String)>
SINK|<org.apache.harmony.security.asn1.ASN1Integer: void setEncodingContent(org.apache.harmony.security.asn1.BerOutputStream)>
SINK|<com.android.internal.statusbar.StatusBarIconList: void writeToParcel(android.os.Parcel,int)>
SINK|<com.android.browser.NavigationBarBase: void setFavicon(android.graphics.Bitmap)>
SINK|<java.time.chrono.AbstractChronology: void writeExternal(java.io.DataOutput)>
SINK|<android.view.Surface: void setPosition(float,float)>
SINK|<android.app.Activity: void setVisible(boolean)>
SINK|<com.android.providers.contacts.DbModifierWithNotification: long insert(android.content.ContentValues)>
SINK|<android.os.storage.IMountServiceListener$Stub$Proxy: void onStorageStateChanged(java.lang.String,java.lang.String,java.lang.String)>
SINK|<com.android.internal.telephony.ISms$Stub$Proxy: void sendMultipartText(java.lang.String,java.lang.String,java.util.List,java.util.List,java.util.List)>
SINK|<android.os.PerformanceCollector: void addMeasurement(java.lang.String,float)>
SINK|<android.security.KeyStore: boolean put(java.lang.String,byte[])>
SINK|<android.media.RingtoneManager: void setStopPreviousRingtone(boolean)>
SINK|<java.util.logging.MemoryHandler: void setPushLevel(java.util.logging.Level)>
SINK|<android.view.inputmethod.ExtractedText: void writeToParcel(android.os.Parcel,int)>
SINK|<android.media.IAudioService$Stub$Proxy: void setMasterMute(boolean,int,android.os.IBinder)>
SINK|<com.android.mms.ui.SlideView: void setVideoRegion(int,int,int,int)>
SINK|<com.android.contacts.ContactSaveService: android.content.Intent createGroupDeletionIntent(android.content.Context,long)>
SINK|<com.android.providers.contacts.aggregation.ContactAggregator: void updateDisplayNameForRawContact(android.database.sqlite.SQLiteDatabase,long)>
SINK|<com.android.server.ConnectivityService$2: void onUidRulesChanged(int,int)>
SINK|<gov.nist.javax.sip.header.Via: void setTransport(java.lang.String)>
SINK|<com.android.mms.dom.smil.SmilRegionElementImpl: void setId(java.lang.String)>
SINK|<android.widget.SimpleAdapter: void setViewImage(android.widget.ImageView,java.lang.String)>
SINK|<com.android.contacts.calllog.CallLogAdapter: void bindChildView(android.view.View,android.content.Context,android.database.Cursor)>
SINK|<com.android.calendar.EventGeometry: void setHourHeight(float)>
SINK|<android.opengl.GLSurfaceView: void setEGLConfigChooser(int,int,int,int,int,int)>
SINK|<com.android.internal.telephony.SMSDispatcher: void setPremiumSmsPermission(java.lang.String,int)>
SINK|<android.widget.SimpleCursorAdapter: void setViewBinder(android.widget.SimpleCursorAdapter$ViewBinder)>
SINK|<android.bluetooth.IBluetoothA2dp$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>
SINK|<android.os.WorkSource: void set(android.os.WorkSource)>
SINK|<java.util.zip.Inflater: void setDictionary(byte[])>
SINK|<android.preference.Preference: boolean persistBoolean(boolean)>
SINK|<com.android.providers.downloads.DownloadReceiver: void onReceive(android.content.Context,android.content.Intent)>
SINK|<com.android.contacts.CallDetailActivity$1UpdateContactDetailsTask: void onPostExecute(com.android.contacts.PhoneCallDetails[])>
SINK|<com.android.internal.telephony.PhoneProxy: void setCellBroadcastSmsConfig(int[],android.os.Message)>
SINK|<android.widget.ProgressBar: void setInterpolator(android.view.animation.Interpolator)>
SINK|<com.android.launcher2.HideFromAccessibilityHelper: void restoreImportantForAccessibility(android.view.View)>
SINK|<com.android.systemui.SearchPanelView: void setStatusBarView(android.view.View)>
SINK|<android.net.UrlQuerySanitizer: void setUnregisteredParameterValueSanitizer(android.net.UrlQuerySanitizer$ValueSanitizer)>
SINK|<android.widget.RemoteViews: void setChronometer(int,long,java.lang.String,boolean)>
SINK|<java.security.cert.X509CertSelector: void setSubject(byte[])>
SINK|<android.location.Address: void setUrl(java.lang.String)>
SINK|<android.view.IWindowSession$Stub$Proxy: void dragRecipientExited(android.view.IWindow)>
SINK|<android.widget.Spinner: void setPrompt(java.lang.CharSequence)>
SINK|<com.android.browser.BrowserSnapshotPage: void setupGrid(android.view.LayoutInflater)>
SINK|<android.test.AndroidTestRunner: void setContext(android.content.Context)>
SINK|<android.view.accessibility.AccessibilityRecord: void setFullScreen(boolean)>
SINK|<org.apache.commons.io.IOUtils: long copyLarge(java.io.InputStream,java.io.OutputStream)>
SINK|<android.graphics.Matrix: void setSinCos(float,float,float,float)>
SINK|<android.accounts.AccountManager: android.accounts.AccountManagerFuture addAccount(java.lang.String,java.lang.String,java.lang.String[],android.os.Bundle,android.app.Activity,android.accounts.AccountManagerCallback,android.os.Handler)>
SINK|<com.android.server.am.ActivityManagerService: void finishUserSwitch(com.android.server.am.UserStartedState)>
SINK|<com.android.server.connectivity.Tethering$TetherMasterSM$InitialState: boolean turnOnUpstreamMobileConnection(int)>
SINK|<android.os.Bundle: void putByteArray(java.lang.String,byte[])>
SINK|<com.android.server.connectivity.Tethering$TetherMasterSM$TetherModeAliveState: boolean turnOnUpstreamMobileConnection(int)>
SINK|<android.os.INetworkManagementService$Stub$Proxy: void setDefaultInterfaceForDns(java.lang.String)>
SINK|<android.os.Debug: void startMethodTracing(java.lang.String)>
SINK|<android.app.ActivityManagerProxy: android.content.Intent registerReceiver(android.app.IApplicationThread,java.lang.String,android.content.IIntentReceiver,android.content.IntentFilter,java.lang.String,int)>
SINK|<org.apache.http.client.methods.HttpRequestBase: void setConnectionRequest(org.apache.http.conn.ClientConnectionRequest)>
SINK|<android.webkit.WebViewClassic$WebViewInputConnection: void setAutoFillable(int)>
SINK|<com.android.internal.telephony.RIL: void dial(java.lang.String,int,com.android.internal.telephony.UUSInfo,android.os.Message)>
SINK|<android.net.nsd.INsdManager$Stub$Proxy: void setEnabled(boolean)>
SINK|<com.android.browser.PhoneUi$AnimScreen: void set(com.android.browser.TitleBar,android.webkit.WebView)>
SINK|<java.time.LocalDateTime: java.time.LocalDateTime parse(java.lang.CharSequence)>
SINK|<com.android.internal.telephony.DataConnection$DcDefaultState: boolean processMessage(android.os.Message)>
SINK|<android.graphics.Bitmap: void setHasMipMap(boolean)>
SINK|<org.xml.sax.helpers.ParserAdapter: void startElement(java.lang.String,org.xml.sax.AttributeList)>
SINK|<android.content.pm.IPackageManager$Stub$Proxy: void setPackageStoppedState(java.lang.String,boolean,int)>
SINK|<android.media.IRemoteControlClient$Stub$Proxy: void unplugRemoteControlDisplay(android.media.IRemoteControlDisplay)>
SINK|<android.preference.EditTextPreference: void setText(java.lang.String)>
SINK|<javax.xml.parsers.DocumentBuilderFactory: void setSchema(javax.xml.validation.Schema)>
SINK|<android.inputmethodservice.Keyboard: void setKeyWidth(int)>
SINK|<android.widget.TextView: void setHintTextColor(android.content.res.ColorStateList)>
SINK|<com.android.internal.view.menu.ActionMenuItem: android.view.MenuItem setChecked(boolean)>
SINK|<com.android.email.VendorPolicyLoader: com.android.email.activity.setup.AccountSettingsUtils$Provider findProviderForDomain(java.lang.String)>
SINK|<android.database.sqlite.SQLiteProgram: void bindNull(int)>
SINK|<org.apache.http.conn.params.ConnManagerParamBean: void setConnectionsPerRoute(org.apache.http.conn.params.ConnPerRouteBean)>
SINK|<com.android.email.mail.store.ImapStore$ImapMessage: void setFlagInternal(com.android.emailcommon.mail.Flag,boolean)>
SINK|<com.android.email.MessagingController$4: void messageRetrieved(com.android.emailcommon.mail.Message)>
SINK|<android.webkit.WebView: void setMapTrackballToArrowKeys(boolean)>
SINK|<android.hardware.input.IInputManager$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>
SINK|<android.webkit.WebSettings: void setGeolocationEnabled(boolean)>
SINK|<android.widget.AdapterView: void setEmptyView(android.view.View)>
SINK|<android.test.mock.MockCursor: boolean updateShort(int,short)>
SINK|<android.app.Dialog: void setDismissMessage(android.os.Message)>
SINK|<com.android.bluetooth.pbap.BluetoothPbapVcardManager$HandlerForStringBuffer: boolean onEntryCreated(java.lang.String)>
SINK|<com.android.server.DeviceStorageMonitorService$CacheFileDeletedObserver: void onEvent(int,java.lang.String)>
SINK|<gov.nist.javax.sip.header.AuthenticationInfo: void setNonceCount(int)>
SINK|<com.android.providers.calendar.CalendarDatabaseHelper: void scheduleSync(android.accounts.Account,boolean,java.lang.String)>
SINK|<java.security.Security: void setProperty(java.lang.String,java.lang.String)>
SINK|<com.google.android.apps.lightcycle.camera.CameraApiProxyAndroidImpl$CameraProxyAndroidImpl: void setPreviewDisplay(android.view.SurfaceHolder)>
SINK|<com.android.providers.calendar.CalendarProviderBroadcastReceiver: void onReceive(android.content.Context,android.content.Intent)>
SINK|<gov.nist.javax.sip.address.SipUri: void setDefaultParm(java.lang.String,java.lang.Object)>
SINK|<android.app.admin.DevicePolicyManager: void setPasswordMinimumNonLetter(android.content.ComponentName,int)>
SINK|<android.net.wifi.p2p.WifiP2pManager: void stopPeerDiscovery(android.net.wifi.p2p.WifiP2pManager$Channel,android.net.wifi.p2p.WifiP2pManager$ActionListener)>
SINK|<com.android.browser.NavigationBarBase: void setCurrentUrlIsBookmark(boolean)>
SINK|<com.android.email.provider.WidgetProvider$WidgetService: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
SINK|<com.android.providers.contacts.ContactsDatabaseHelper: void onUpgrade(android.database.sqlite.SQLiteDatabase,int,int)>
SINK|<android.widget.ProgressBar: void setVisibility(int)>
SINK|<android.os.IPowerManager$Stub$Proxy: void acquireWakeLock(android.os.IBinder,int,java.lang.String,android.os.WorkSource)>
SINK|<java.time.YearMonth: java.time.YearMonth parse(java.lang.CharSequence,java.time.format.DateTimeFormatter)>
SINK|<android.accounts.AccountManagerService: void setUserData(android.accounts.Account,java.lang.String,java.lang.String)>
SINK|<android.widget.AbsListView: void setScrollingCacheEnabled(boolean)>
SINK|<android.nfc.INfcAdapterExtras$Stub$Proxy: android.os.Bundle open(java.lang.String,android.os.IBinder)>
SINK|<android.widget.ZoomButtonsController: void setAutoDismissed(boolean)>
SINK|<com.google.android.mms.pdu.MultimediaMessagePdu: void setDate(long)>
SINK|<com.android.internal.telephony.PhoneProxy: void sendBurstDtmf(java.lang.String,int,int,android.os.Message)>
SINK|<com.google.android.picasasync.PrefetchHelper: void setAlbumCachingFlag(long,int)>
SINK|<com.android.internal.view.IInputContextCallback$Stub$Proxy: void setCursorCapsMode(int,int)>
SINK|<com.android.server.accessibility.AccessibilityManagerService$Service: void notifyAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>
SINK|<com.android.internal.telephony.RIL: void stopDtmf(android.os.Message)>
SINK|<java.lang.reflect.Field: void setInt(java.lang.Object,int)>
SINK|<com.android.gallery3d.app.FilterUtils: void setupMenuItems(com.android.gallery3d.app.GalleryActionBar,com.android.gallery3d.data.Path,boolean)>
SINK|<com.android.internal.telephony.IWapPushManager$Stub$Proxy: boolean updatePackage(java.lang.String,java.lang.String,java.lang.String,java.lang.String,int,boolean,boolean)>
SINK|<gov.nist.javax.sip.header.Via: void setHost(gov.nist.core.Host)>
SINK|<android.content.ContextWrapper: void startActivity(android.content.Intent)>
SINK|<java.util.logging.Logger: void setFilter(java.util.logging.Filter)>
SINK|<com.android.server.AppWidgetService: void updateAppWidgetProvider(android.content.ComponentName,android.widget.RemoteViews)>
SINK|<android.preference.PreferenceActivity: void setPreferenceScreen(android.preference.PreferenceScreen)>
SINK|<android.service.wallpaper.WallpaperService$Engine: void setTouchEventsEnabled(boolean)>
SINK|<com.android.internal.policy.impl.PhoneFallbackEventHandler: boolean onKeyDown(int,android.view.KeyEvent)>
SINK|<android.accounts.IAccountAuthenticatorResponse$Stub$Proxy: void onError(int,java.lang.String)>
SINK|<com.android.email.activity.UIControllerTwoPane: boolean onUrlInMessageClicked(java.lang.String)>
SINK|<android.os.storage.IMountService$Stub$Proxy: int fixPermissionsSecureContainer(java.lang.String,int,java.lang.String)>
SINK|<com.adobe.xmp.impl.XMPSchemaRegistryImpl: java.lang.String registerNamespace(java.lang.String,java.lang.String)>
SINK|<android.app.Notification$Builder: android.app.Notification$Builder setOnlyAlertOnce(boolean)>
SINK|<java.net.Socket: void bind(java.net.SocketAddress)>
SINK|<com.android.internal.telephony.sip.SipCommandInterface: void setPhoneType(int)>
SINK|<java.nio.charset.CharsetDecoder: java.nio.charset.CharsetDecoder replaceWith(java.lang.String)>
SINK|<org.apache.harmony.security.asn1.ASN1Implicit: void setEncodingContent(org.apache.harmony.security.asn1.BerOutputStream)>
SINK|<com.android.exchange.ExchangeService: void setWatchdogAlarm(long,long)>
SINK|<android.webkit.CacheManager: void saveCacheFile(java.lang.String,android.webkit.CacheManager$CacheResult)>
SINK|<android.widget.ExpandableListView: void dispatchDraw(android.graphics.Canvas)>
SINK|<com.android.internal.statusbar.IStatusBarService$Stub$Proxy: void setSystemUiVisibility(int,int)>
SINK|<javax.obex.HeaderSet: void setHeader(int,java.lang.Object)>
SINK|<android.widget.TextView: void setText(java.lang.CharSequence,android.widget.TextView$BufferType)>
SINK|<android.media.audiofx.EnvironmentalReverb: void setReflectionsLevel(short)>
SINK|<android.widget.ImageView: void setImageResource(int)>
SINK|<android.app.backup.IBackupManager$Stub$Proxy: void agentDisconnected(java.lang.String)>
SINK|<android.widget.AdapterView: void setOnItemSelectedListener(android.widget.AdapterView$OnItemSelectedListener)>
SINK|<android.media.AudioService: void setMasterVolume(int,int)>
SINK|<android.net.wifi.WifiConfigStore: android.net.wifi.WpsResult startWpsPbc(android.net.wifi.WpsInfo)>
SINK|<android.graphics.drawable.Drawable: void setChangingConfigurations(int)>
SINK|<com.android.emailcommon.service.IAccountService$Stub$Proxy: void notifyLoginFailed(long)>
SINK|<org.apache.harmony.xnet.provider.jsse.OpenSSLSocketImplWrapper: void setSoLinger(boolean,int)>
SINK|<libcore.io.Posix: int sendto(java.io.FileDescriptor,java.nio.ByteBuffer,int,java.net.InetAddress,int)>
SINK|<android.view.animation.Animation: void setFillAfter(boolean)>
SINK|<android.net.ConnectivityManager: void setNetworkPreference(int)>
SINK|<com.android.email.activity.DeleteMessageConfirmationDialog: com.android.email.activity.DeleteMessageConfirmationDialog newInstance(int,android.app.Fragment)>
SINK|<android.content.SyncStorageEngine: void setSyncAutomatically(android.accounts.Account,int,java.lang.String,boolean)>
SINK|<java.util.zip.Adler32: void update(byte[],int,int)>
SINK|<android.location.Criteria: void setSpeedRequired(boolean)>
SINK|<com.android.videoeditor.service.ApiService: void removeTransition(android.content.Context,java.lang.String,java.lang.String)>
SINK|<java.time.LocalDateTime: java.time.LocalDateTime parse(java.lang.CharSequence,java.time.format.DateTimeFormatter)>
SINK|<com.android.email.Preferences: void setEnableExchangeFileLogging(boolean)>
SINK|<android.os.INetworkManagementService$Stub$Proxy: void setIpForwardingEnabled(boolean)>
SINK|<android.widget.AbsSeekBar: void setThumb(android.graphics.drawable.Drawable)>
SINK|<android.telephony.SmsManager: boolean enableCellBroadcastRange(int,int)>
SINK|<org.apache.http.entity.SerializableEntity: void writeTo(java.io.OutputStream)>
SINK|<android.net.sip.ISipService$Stub$Proxy: void open3(android.net.sip.SipProfile,android.app.PendingIntent,android.net.sip.ISipSessionListener)>
SINK|<gov.nist.javax.sip.header.extensions.SessionExpires: void setValue(java.lang.String)>
SINK|<android.graphics.Matrix: boolean setPolyToPoly(float[],int,float[],int,int)>
SINK|<com.android.internal.telephony.SMSDispatcher: void dispatch(android.content.Intent,java.lang.String,android.content.BroadcastReceiver)>
SINK|<java.security.KeyStore: void setKeyEntry(java.lang.String,java.security.Key,char[],java.security.cert.Certificate[])>
SINK|<android.app.ActivityManagerProxy: boolean shutdown(int)>
SINK|<gov.nist.javax.sip.stack.TLSMessageChannel: void sendMessage(byte[],java.net.InetAddress,int,boolean)>
SINK|<android.view.GLES20DisplayList: void setLeftTopRightBottom(int,int,int,int)>
SINK|<android.net.wifi.WifiConfigStore: void setIpConfiguration(int,android.net.DhcpInfoInternal)>
SINK|<com.android.internal.widget.SlidingTab$Slider: void setTabBackgroundResource(int)>
SINK|<android.os.IPowerManager$Stub$Proxy: void updateWakeLockWorkSource(android.os.IBinder,android.os.WorkSource)>
SINK|<com.android.internal.telephony.sip.SipCommandInterface: void setFacilityLock(java.lang.String,boolean,java.lang.String,int,android.os.Message)>
SINK|<android.app.IActivityController$Stub$Proxy: boolean activityResuming(java.lang.String)>
SINK|<org.apache.harmony.xnet.provider.jsse.SSLEngineImpl: void setEnabledProtocols(java.lang.String[])>
SINK|<android.os.Handler: boolean sendEmptyMessageDelayed(int,long)>
SINK|<java.lang.Integer: int parseInt(java.lang.String,int)>
SINK|<com.android.email.MessagingController: void sendPendingMessages(com.android.emailcommon.provider.Account,long,com.android.email.MessagingListener)>
SINK|<android.net.wifi.IWifiManager$Stub$Proxy: void setWifiApConfiguration(android.net.wifi.WifiConfiguration)>
SINK|<android.support.v13.app.FragmentCompat: void setUserVisibleHint(android.app.Fragment,boolean)>
SINK|<java.io.FilterOutputStream: void write(byte[],int,int)>
SINK|<java.util.jar.JarVerifier$VerifierEntry: void write(byte[],int,int)>
SINK|<android.security.Credentials: byte[] convertToPem(java.security.cert.Certificate[])>
SINK|<android.filterfw.core.FilterContext: void storeFrame(java.lang.String,android.filterfw.core.Frame)>
SINK|<com.android.exchange.provider.GalResult$GalData: void put(java.lang.String,java.lang.String)>
SINK|<android.widget.TextView: void setMaxWidth(int)>
SINK|<android.content.pm.PackageInfoLite: void writeToParcel(android.os.Parcel,int)>
SINK|<java.text.DateFormatSymbols: void setShortMonths(java.lang.String[])>
SINK|<java.lang.ClassLoader: void setClassAssertionStatus(java.lang.String,boolean)>
SINK|<android.app.backup.IBackupManager$Stub$Proxy: android.app.backup.IRestoreSession beginRestoreSession(java.lang.String,java.lang.String)>
SINK|<android.view.View: void setFocusable(boolean)>
SINK|<com.android.server.DevicePolicyManagerService: void sendAdminCommandLocked(com.android.server.DevicePolicyManagerService$ActiveAdmin,java.lang.String)>
SINK|<android.app.ApplicationThreadProxy: void scheduleDestroyActivity(android.os.IBinder,boolean,int)>
SINK|<android.os.IVibratorService$Stub$Proxy: void vibratePattern(long[],int,android.os.IBinder)>
SINK|<com.android.internal.policy.impl.keyguard.KeyguardWidgetPager: void setCurrentPage(int)>
SINK|<android.app.backup.FileBackupHelper: void writeNewStateDescription(android.os.ParcelFileDescriptor)>
SINK|<com.android.mms.data.WorkingMessage: void send(java.lang.String)>
SINK|<com.android.calendar.month.MonthWeekEventsView: void setWeekParams(java.util.HashMap,java.lang.String)>
SINK|<com.android.server.dreams.DreamManagerService: void setDreamComponents(android.content.ComponentName[])>
SINK|<gov.nist.javax.sip.message.SIPResponse: void setSIPVersion(java.lang.String)>
SINK|<java.nio.LongToByteBufferAdapter: java.nio.LongBuffer put(long[],int,int)>
SINK|<com.android.server.AlarmManagerService: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
SINK|<android.content.ContextWrapper: void setWallpaper(android.graphics.Bitmap)>
SINK|<android.app.FragmentManagerImpl: void dispatchOptionsMenuClosed(android.view.Menu)>
SINK|<com.android.internal.widget.AbsActionBarView: void setVisibility(int)>
SINK|<gov.nist.javax.sip.stack.SIPTransactionStack: void putDialog(gov.nist.javax.sip.stack.SIPDialog)>
SINK|<com.android.launcher2.FastBitmapDrawable: void setFilterBitmap(boolean)>
SINK|<java.io.File: boolean setWritable(boolean)>
SINK|<android.bluetooth.IBluetoothManager$Stub$Proxy: void unregisterStateChangeCallback(android.bluetooth.IBluetoothStateChangeCallback)>
SINK|<android.app.Activity: void onRestoreInstanceState(android.os.Bundle)>
SINK|<java.net.PlainDatagramSocketImpl: void setOption(int,java.lang.Object)>
SINK|<com.android.gallery3d.app.Gallery: void onCreate(android.os.Bundle)>
SINK|<android.view.ViewRootImpl$TakenSurfaceHolder: void setType(int)>
SINK|<com.android.camera.ComboPreferences$MyEditor: android.content.SharedPreferences$Editor putBoolean(java.lang.String,boolean)>
SINK|<android.filterfw.core.SerializedFrame: void setGenericObjectValue(java.lang.Object)>
SINK|<java.util.Spliterators: java.util.Spliterator$OfDouble spliteratorUnknownSize(java.util.PrimitiveIterator$OfDouble,int)>
SINK|<com.android.browser.NavTabScroller: void setScrollValue(int)>
SINK|<android.net.rtp.AudioGroup: void sendDtmf(int)>
SINK|<com.android.gallery3d.util.ReverseGeocoder: void writeUTF(java.io.DataOutputStream,java.lang.String)>
SINK|<com.android.internal.telephony.BaseCommands: void setOnNewCdmaSms(android.os.Handler,int,java.lang.Object)>
SINK|<org.apache.http.impl.cookie.BasicMaxAgeHandler: void parse(org.apache.http.cookie.SetCookie,java.lang.String)>
SINK|<com.android.contacts.voicemail.VoicemailPlaybackFragment$PlaybackViewImpl: void setRateDecreaseButtonListener(android.view.View$OnClickListener)>
SINK|<com.android.server.location.MockProvider: void dump(java.io.PrintWriter,java.lang.String)>
SINK|<com.android.internal.view.menu.MenuItemImpl: android.view.MenuItem setCheckable(boolean)>
SINK|<org.apache.harmony.xnet.provider.jsse.OpenSSLServerSocketImpl: void setEnableSessionCreation(boolean)>
SINK|<android.app.ActivityManagerProxy: int bindService(android.app.IApplicationThread,android.os.IBinder,android.content.Intent,java.lang.String,android.app.IServiceConnection,int,int)>
SINK|<com.android.server.wm.BlackFrame$BlackSurface: void setMatrix(android.graphics.Matrix)>
SINK|<android.view.accessibility.AccessibilityEvent: void setSealed(boolean)>
SINK|<java.net.HttpURLConnection: void setFollowRedirects(boolean)>
SINK|<android.net.wifi.WifiStateMachine$ObtainingIpState: boolean processMessage(android.os.Message)>
SINK|<android.webkit.WebViewClassic: void setMockDeviceOrientation(boolean,double,boolean,double,boolean,double)>
SINK|<android.preference.PreferenceScreen$SavedState: void writeToParcel(android.os.Parcel,int)>
SINK|<java.nio.CharBuffer: java.nio.CharBuffer put(char[],int,int)>
SINK|<android.text.format.Time: void set(int,int,int)>
SINK|<com.android.server.am.ActivityManagerService: void dumpApplicationMemoryUsage(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String,java.lang.String[],boolean,java.io.PrintWriter,java.lang.StringBuilder,java.lang.StringBuilder)>
SINK|<org.apache.http.impl.client.DefaultHttpClient: void setDefaultHttpParams(org.apache.http.params.HttpParams)>
SINK|<android.app.ProgressDialog: void setProgressStyle(int)>
SINK|<android.app.ActivityManagerProxy: void activityResumed(android.os.IBinder)>
SINK|<android.webkit.WebSettings: void setDatabasePath(java.lang.String)>
SINK|<android.gesture.GestureOverlayView: void setUncertainGestureColor(int)>
SINK|<android.app.TaskStackBuilder: void startActivities(android.os.Bundle)>
SINK|<com.android.internal.view.IInputContext$Stub$Proxy: void clearMetaKeyStates(int)>
SINK|<com.android.emailcommon.service.IEmailService$Stub$Proxy: void startSync(long,boolean)>
SINK|<android.widget.TableRow$LayoutParams: void setBaseAttributes(android.content.res.TypedArray,int,int)>
SINK|<com.android.internal.widget.SlidingTab: void setLeftTabResources(int,int,int,int)>
SINK|<android.view.View$AccessibilityDelegate: boolean performAccessibilityAction(android.view.View,int,android.os.Bundle)>
SINK|<org.apache.http.impl.conn.AbstractClientConnAdapter: void sendRequestEntity(org.apache.http.HttpEntityEnclosingRequest)>
SINK|<android.media.IAudioService$Stub$Proxy: void remoteControlDisplayUsesBitmapSize(android.media.IRemoteControlDisplay,int,int)>
SINK|<android.net.wifi.WifiConfigStore: android.net.wifi.WpsResult startWpsWithPinFromDevice(android.net.wifi.WpsInfo)>
SINK|<android.media.IAudioService$Stub$Proxy: void setSpeakerphoneOn(boolean)>
SINK|<android.content.pm.ActivityInfo: void dump(android.util.Printer,java.lang.String)>
SINK|<android.view.View: void setAnimation(android.view.animation.Animation)>
SINK|<com.android.server.wm.WindowManagerService: void setAnimationScales(float[])>
SINK|<android.bluetooth.IBluetoothInputDevice$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>
SINK|<android.net.IConnectivityManager$Stub$Proxy: void setDataDependency(int,boolean)>
SINK|<com.android.server.wm.WindowManagerService: void setUniverseTransformLocked(com.android.server.wm.WindowState,float,float,float,float,float,float,float)>
SINK|<com.android.internal.telephony.IPhoneStateListener$Stub$Proxy: void onCellInfoChanged(java.util.List)>
SINK|<android.view.View: void sendAccessibilityEventUnchecked(android.view.accessibility.AccessibilityEvent)>
SINK|<android.widget.CheckedTextView: void setChecked(boolean)>
SINK|<com.android.server.MountService: java.lang.String buildObbPath(java.lang.String,int,boolean)>
SINK|<javax.xml.transform.stream.StreamResult: void setOutputStream(java.io.OutputStream)>
SINK|<com.android.internal.policy.impl.keyguard.KeyguardLinearLayout: void setTopChild(android.view.View)>
SINK|<android.webkit.CallbackProxy: boolean shouldOverrideUrlLoading(java.lang.String)>
SINK|<com.android.contacts.voicemail.VoicemailPlaybackFragment$TextViewWithMessagesController: void setPermanentText(java.lang.String)>
SINK|<android.app.backup.IRestoreSession$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>
SINK|<com.android.email.NotificationController: void showPasswordExpiredNotification(long)>
SINK|<com.android.server.InputMethodManagerService: boolean notifySuggestionPicked(android.text.style.SuggestionSpan,java.lang.String,int)>
SINK|<android.app.ApplicationThreadProxy: void updatePackageCompatibilityInfo(java.lang.String,android.content.res.CompatibilityInfo)>
SINK|<android.content.IContentService$Stub$Proxy: void registerContentObserver(android.net.Uri,boolean,android.database.IContentObserver,int)>
SINK|<com.android.internal.telephony.gsm.GsmSMSDispatcher: void dispatch(android.content.Intent,java.lang.String,android.content.BroadcastReceiver)>
SINK|<android.content.ContentValues: void put(java.lang.String,java.lang.Boolean)>
SINK|<java.util.concurrent.atomic.AtomicIntegerArray: void set(int,int)>
SINK|<com.android.camera.ActivityBase: void setSwipingEnabled(boolean)>
SINK|<android.media.AudioService: void setRemoteSubmixOn(boolean,int)>
SINK|<gov.nist.javax.sip.header.AuthenticationHeader: void setIntegrityProtected(java.lang.String)>
SINK|<android.media.AudioRecord: void setRecordPositionUpdateListener(android.media.AudioRecord$OnRecordPositionUpdateListener)>
SINK|<android.net.wifi.SupplicantStateTracker$DefaultState: boolean processMessage(android.os.Message)>
SINK|<java.util.jar.Attributes: java.lang.String putValue(java.lang.String,java.lang.String)>
SINK|<org.xml.sax.helpers.ParserAdapter: void setDTDHandler(org.xml.sax.DTDHandler)>
SINK|<android.text.MeasuredText: void setPos(int)>
SINK|<android.os.BatteryStats: void dumpLocked(java.io.PrintWriter)>
SINK|<com.android.mms.ui.ComposeMessageActivity: void startActivityForResult(android.content.Intent,int)>
SINK|<com.android.internal.policy.impl.keyguard.KeyguardWidgetPager: void setPageHoveringOverDeleteDropTarget(int,boolean)>
SINK|<com.android.systemui.statusbar.tablet.TabletStatusBar: void setLightsOn(boolean)>
SINK|<java.text.NumberFormat: void setMaximumFractionDigits(int)>
SINK|<android.net.http.SslCertificate: android.os.Bundle saveState(android.net.http.SslCertificate)>
SINK|<com.android.internal.statusbar.IStatusBarService$Stub$Proxy: void onNotificationClick(java.lang.String,java.lang.String,int)>
SINK|<com.android.wallpaper.grass.ScriptField_Blade: void set(com.android.wallpaper.grass.ScriptField_Blade$Item,int,boolean)>
SINK|<javax.obex.PrivateOutputStream: void write(int)>
SINK|<android.widget.SimpleCursorAdapter: void setViewText(android.widget.TextView,java.lang.String)>
SINK|<android.nfc.NfcActivityManager: void setNdefPushMessageCallback(android.app.Activity,android.nfc.NfcAdapter$CreateNdefMessageCallback)>
SINK|<org.xmlpull.v1.sax2.Driver: void parse(org.xml.sax.InputSource)>
SINK|<com.android.server.display.OverlayDisplayWindow: void dump(java.io.PrintWriter)>
SINK|<java.util.Spliterators: java.util.Spliterator$OfInt spliteratorUnknownSize(java.util.PrimitiveIterator$OfInt,int)>
SINK|<java.lang.System: java.lang.String setProperty(java.lang.String,java.lang.String)>
SINK|<android.os.Parcel: void writeTypedArray(android.os.Parcelable[],int)>
SINK|<android.view.IWindowManager$Stub$Proxy: void setForcedDisplaySize(int,int,int)>
SINK|<android.view.Window: void setUiOptions(int)>
SINK|<com.android.internal.telephony.RIL: void acknowledgeLastIncomingGsmSms(boolean,int,android.os.Message)>
SINK|<com.android.internal.policy.impl.PhoneWindowManager: void setAttachedWindowFrames(android.view.WindowManagerPolicy$WindowState,int,int,android.view.WindowManagerPolicy$WindowState,boolean,android.graphics.Rect,android.graphics.Rect,android.graphics.Rect,android.graphics.Rect)>
SINK|<com.android.wallpaper.grass.GrassRS: void setOffset(float,float,int,int)>
SINK|<java.nio.SocketChannelImpl: long read(java.nio.ByteBuffer[],int,int)>
SINK|<android.view.accessibility.AccessibilityInteractionClient: boolean performAccessibilityAction(int,int,long,int,android.os.Bundle)>
SINK|<android.app.ActivityManagerProxy: void setServiceForeground(android.content.ComponentName,android.os.IBinder,int,android.app.Notification,boolean)>
SINK|<android.media.MediaScanner: void scanMtpFile(java.lang.String,java.lang.String,int,int)>
SINK|<libcore.icu.NativeDecimalFormat: void setDecimalFormatSymbols(java.text.DecimalFormatSymbols)>
SINK|<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setNeutralButton(int,android.content.DialogInterface$OnClickListener)>
SINK|<android.bluetooth.IBluetoothHealthCallback$Stub$Proxy: void onHealthChannelStateChange(android.bluetooth.BluetoothHealthAppConfiguration,android.bluetooth.BluetoothDevice,int,int,android.os.ParcelFileDescriptor,int)>
SINK|<com.google.android.mms.pdu.NotificationInd: void setContentClass(int)>
SINK|<com.android.internal.telephony.UiccCardApplication: void supplyPin2(java.lang.String,android.os.Message)>
SINK|<com.android.internal.telephony.test.SimulatedCommands: void setPhoneType(int)>
SINK|<android.app.backup.IBackupManager$Stub$Proxy: void setAutoRestore(boolean)>
SINK|<org.apache.http.params.HttpConnectionParamBean: void setSoTimeout(int)>
SINK|<com.android.mms.ui.BasicSlideEditorView: void setImageRegionFit(java.lang.String)>
SINK|<com.android.internal.telephony.IccCardStatus: void setCardState(int)>
SINK|<com.android.commands.am.Am$MyActivityController: int appEarlyNotResponding(java.lang.String,int,java.lang.String)>
SINK|<com.google.android.mms.pdu.PduHeaders: void setEncodedStringValue(com.google.android.mms.pdu.EncodedStringValue,int)>
SINK|<android.widget.PopupWindow: void setClippingEnabled(boolean)>
SINK|<com.android.gallery3d.exif.OrderedDataOutputStream: void writeInt(int)>
SINK|<com.android.videoeditor.service.ApiService: void setAudioTrackLoop(android.content.Context,java.lang.String,java.lang.String,boolean)>
SINK|<java.text.DateFormat: java.util.Date parse(java.lang.String)>
SINK|<com.android.internal.telephony.DataConnection: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
SINK|<android.nfc.INfcTag$Stub$Proxy: int ndefWrite(int,android.nfc.NdefMessage)>
SINK|<android.graphics.drawable.NinePatchDrawable: void setTargetDensity(android.graphics.Canvas)>
SINK|<java.util.concurrent.CompletableFuture: java.util.concurrent.CompletableFuture runAsync(java.lang.Runnable)>
SINK|<com.android.server.pm.PackageManagerService$ServiceIntentResolver: void dumpFilter(java.io.PrintWriter,java.lang.String,android.content.pm.PackageParser$ServiceIntentInfo)>
SINK|<android.view.GLES20DisplayList: void setTop(int)>
SINK|<java.nio.DatagramChannelImpl$DatagramSocketAdapter: void send(java.net.DatagramPacket)>
SINK|<org.xml.sax.helpers.XMLReaderAdapter: void setDocumentHandler(org.xml.sax.DocumentHandler)>
SINK|<com.android.internal.app.IBatteryStats$Stub$Proxy: void noteWifiScanStopped(int)>
SINK|<android.widget.AutoCompleteTextView: void setDropDownAlwaysVisible(boolean)>
SINK|<java.io.RandomAccessFile: void writeUTF(java.lang.String)>
SINK|<android.filterfw.core.SimpleFrame: void setBitmap(android.graphics.Bitmap)>
SINK|<android.webkit.WebView: void setLayerType(int,android.graphics.Paint)>
SINK|<com.android.contacts.model.dataitem.PhoneDataItem: void computeFormattedPhoneNumber(java.lang.String)>
SINK|<com.android.internal.telephony.SmsUsageMonitor: void setPremiumSmsPermission(java.lang.String,int)>
SINK|<java.util.concurrent.ThreadLocalRandom: void setSeed(long)>
SINK|<android.inputmethodservice.InputMethodService: void setTheme(int)>
SINK|<java.io.PrintStream: void println(int)>
SINK|<android.content.ContentProviderOperation$Builder: android.content.ContentProviderOperation$Builder withValue(java.lang.String,java.lang.Object)>
SINK|<com.android.server.pm.PackageManagerService: android.content.pm.ProviderInfo resolveContentProvider(java.lang.String,int,int)>
SINK|<android.filterfw.core.FilterFunction: void setInputValue(java.lang.String,java.lang.Object)>
SINK|<com.android.internal.telephony.gsm.GsmSMSDispatcher: void sendNewSubmitPdu(java.lang.String,java.lang.String,java.lang.String,com.android.internal.telephony.SmsHeader,int,android.app.PendingIntent,android.app.PendingIntent,boolean)>
SINK|<com.android.deskclock.timer.CountingTimerView: void setTime(long,boolean,boolean)>
SINK|<android.net.DummyDataStateTracker: void setPolicyDataEnable(boolean)>
SINK|<com.android.server.NativeDaemonConnector$ResponseQueue: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
SINK|<android.content.ClipData: void writeToParcel(android.os.Parcel,int)>
SINK|<com.android.mms.dom.smil.SmilRegionElementImpl: void setWidth(int)>
SINK|<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: void logState(android.util.Printer,java.lang.String)>
SINK|<android.os.storage.IMountService$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>
SINK|<java.security.KeyStore: void setEntry(java.lang.String,java.security.KeyStore$Entry,java.security.KeyStore$ProtectionParameter)>
SINK|<android.service.wallpaper.WallpaperService$IWallpaperEngineWrapper: void dispatchWallpaperCommand(java.lang.String,int,int,int,android.os.Bundle)>
SINK|<java.text.CollationElementIterator: void setText(java.lang.String)>
SINK|<com.android.internal.telephony.gsm.GSMPhone: void saveClirSetting(int)>
SINK|<libcore.io.ForwardingOs: void setsockoptInt(java.io.FileDescriptor,int,int,int)>
SINK|<com.android.internal.app.ActionBarImpl$TabImpl: android.app.ActionBar$Tab setIcon(int)>
SINK|<android.widget.EditText: void setText(java.lang.CharSequence,android.widget.TextView$BufferType)>
SINK|<android.net.IConnectivityManager$Stub$Proxy: void reportInetCondition(int,int)>
SINK|<android.net.http.AndroidHttpClientConnection: void sendRequestHeader(org.apache.http.HttpRequest)>
SINK|<libcore.io.BlockGuardOs: int write(java.io.FileDescriptor,byte[],int,int)>
SINK|<android.filterpacks.videosink.MediaEncoderFilter: void open(android.filterfw.core.FilterContext)>
SINK|<android.graphics.Rect: void set(android.graphics.Rect)>
SINK|<com.android.mms.ui.SlideListItemView: void setImageVisibility(boolean)>
SINK|<java.net.AddressCache: void putUnknownHost(java.lang.String,java.lang.String)>
SINK|<android.app.Activity: void setTitle(int)>
SINK|<android.hardware.usb.UsbManager: void setCurrentFunction(java.lang.String,boolean)>
SINK|<com.android.launcher2.PagedView: boolean performAccessibilityAction(int,android.os.Bundle)>
SINK|<com.android.bluetooth.btservice.AdapterService: boolean setPin(android.bluetooth.BluetoothDevice,boolean,int,byte[])>
SINK|<com.android.browser.widget.BookmarkWidgetProxy: void onReceive(android.content.Context,android.content.Intent)>
SINK|<android.widget.ExpandableListView: void setAdapter(android.widget.ListAdapter)>
SINK|<org.apache.http.client.protocol.ClientContextConfigurer: void setCookieStore(org.apache.http.client.CookieStore)>
SINK|<gov.nist.javax.sip.message.HeaderIterator: void set(java.lang.Object)>
SINK|<android.test.mock.MockContext: void sendStickyBroadcast(android.content.Intent)>
SINK|<com.android.server.SerialService: android.os.ParcelFileDescriptor openSerialPort(java.lang.String)>
SINK|<com.android.deskclock.widget.multiwaveview.GlowPadView: void setVibrateEnabled(boolean)>
SINK|<com.android.contacts.ContactSaveService: android.content.Intent createSetRingtone(android.content.Context,android.net.Uri,java.lang.String)>
SINK|<com.android.contacts.editor.LabeledEditorView: void setDeleteButtonVisible(boolean)>
SINK|<com.android.videoeditor.VideoEditorBaseActivity$ServiceListener: void onTransitionDurationSet(java.lang.String,java.lang.String,long,java.lang.Exception)>
SINK|<com.android.server.LocationManagerService: boolean providerMeetsCriteria(java.lang.String,android.location.Criteria)>
SINK|<com.android.server.LightsService$Light: void pulse(int,int)>
SINK|<org.apache.http.impl.HttpConnectionMetricsImpl: void setMetric(java.lang.String,java.lang.Object)>
SINK|<com.android.internal.statusbar.IStatusBar$Stub$Proxy: void setIcon(int,com.android.internal.statusbar.StatusBarIcon)>
SINK|<android.widget.TextView: void setHint(int)>
SINK|<com.android.internal.telephony.gsm.GSMPhone: void setOnPostDialCharacter(android.os.Handler,int,java.lang.Object)>
SINK|<android.widget.TextView: void setMinHeight(int)>
SINK|<android.bluetooth.BluetoothAdapter: boolean setScanMode(int,int)>
SINK|<android.sax.RootElement$Handler: void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)>
SINK|<com.android.exchange.adapter.Serializer: com.android.exchange.adapter.Serializer opaqueWithoutData(int)>
SINK|<com.android.internal.view.IInputContextCallback$Stub$Proxy: void setExtractedText(android.view.inputmethod.ExtractedText,int)>
SINK|<com.android.providers.userdictionary.DictionaryBackupAgent: void onBackup(android.os.ParcelFileDescriptor,android.app.backup.BackupDataOutput,android.os.ParcelFileDescriptor)>
SINK|<android.media.audiofx.EnvironmentalReverb: void setRoomLevel(short)>
SINK|<org.apache.http.impl.entity.EntitySerializer: void serialize(org.apache.http.io.SessionOutputBuffer,org.apache.http.HttpMessage,org.apache.http.HttpEntity)>
SINK|<java.util.zip.GZIPOutputStream: void write(byte[],int,int)>
SINK|<android.net.INetworkManagementEventObserver$Stub$Proxy: void interfaceStatusChanged(java.lang.String,boolean)>
SINK|<com.android.mms.ui.MessageListItem: void setImageRegionFit(java.lang.String)>
SINK|<com.android.server.TextServicesManagerService: void setCurrentSpellCheckerSubtype(java.lang.String,int)>
SINK|<android.test.InstrumentationTestSuite: void runTest(junit.framework.Test,junit.framework.TestResult)>
SINK|<libcore.io.ForwardingOs: void bind(java.io.FileDescriptor,java.net.InetAddress,int)>
SINK|<com.android.calendar.agenda.AgendaListView: void setHideDeclinedEvents(boolean)>
SINK|<android.filterfw.core.Filter: void setWaitsOnOutputPort(java.lang.String,boolean)>
SINK|<android.app.Dialog: void setContentView(android.view.View,android.view.ViewGroup$LayoutParams)>
SINK|<android.net.ConnectivityManager: boolean setRadios(boolean)>
SINK|<com.android.internal.telephony.sip.SipCommandInterface: void setPreferredVoicePrivacy(boolean,android.os.Message)>
SINK|<java.util.SimpleTimeZone: void setEndRule(int,int,int)>
SINK|<com.android.internal.widget.LockPatternUtils: void saveLockPassword(java.lang.String,int,boolean)>
SINK|<android.view.inputmethod.InputConnectionWrapper: boolean sendKeyEvent(android.view.KeyEvent)>
SINK|<android.location.Location: void setProvider(java.lang.String)>
SINK|<com.adobe.xmp.impl.XMPMetaImpl: void setLocalizedText(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.adobe.xmp.options.PropertyOptions)>
SINK|<com.android.server.InputMethodManagerService$InputMethodSettings: void addSubtypeToHistory(java.lang.String,java.lang.String)>
SINK|<android.support.v4.view.accessibility.AccessibilityNodeInfoCompatJellyBean: void setVisibleToUser(java.lang.Object,boolean)>
SINK|<com.android.server.InputMethodManagerService: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
SINK|<android.text.format.Time: boolean parse3339(java.lang.String)>
SINK|<android.net.wifi.WifiNative: boolean setP2pPowerSave(java.lang.String,boolean)>
SINK|<android.server.search.Searchables: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
SINK|<com.android.contacts.model.RawContactModifier: void migrateStructuredName(android.content.Context,com.android.contacts.model.RawContactDelta,com.android.contacts.model.RawContactDelta,com.android.contacts.model.dataitem.DataKind)>
SINK|<com.android.deskclock.TimePicker$SavedState: void writeToParcel(android.os.Parcel,int)>
SINK|<android.media.audiofx.AudioEffect: int setParameter(int,int)>
SINK|<android.inputmethodservice.ExtractEditLayout$ExtractActionMode: void setSubtitle(int)>
SINK|<android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.IBinder)>
SINK|<com.android.soundrecorder.RemainingTimeCalculator: void setBitRate(int)>
SINK|<com.android.emailcommon.service.IEmailService$Stub$Proxy: void updateFolderList(long)>
SINK|<gov.nist.javax.sip.header.AcceptLanguage: void setQValue(float)>
SINK|<com.android.internal.telephony.gsm.SimSmsInterfaceManager: boolean enableCellBroadcastRange(int,int)>
SINK|<com.android.internal.telephony.sip.SipPhoneBase: void setDataRoamingEnabled(boolean)>
SINK|<android.filterfw.core.Frame: void setData(java.nio.ByteBuffer)>
SINK|<android.net.http.AndroidHttpClient: org.apache.http.HttpResponse execute(org.apache.http.client.methods.HttpUriRequest,org.apache.http.protocol.HttpContext)>
SINK|<com.android.providers.settings.SettingsHelper: boolean restoreValue(java.lang.String,java.lang.String)>
SINK|<com.android.browser.provider.BrowserProvider2$DatabaseHelper: void onUpgrade(android.database.sqlite.SQLiteDatabase,int,int)>
SINK|<com.adobe.xmp.options.PropertyOptions: com.adobe.xmp.options.PropertyOptions setURI(boolean)>
SINK|<android.view.IInputFilter$Stub$Proxy: void filterInputEvent(android.view.InputEvent,int)>
SINK|<android.app.admin.DevicePolicyManager: void setCameraDisabled(android.content.ComponentName,boolean)>
SINK|<android.widget.AlphabetIndexer: void setCursor(android.database.Cursor)>
SINK|<android.webkit.SslClientCertLookupTable: void Allow(java.lang.String,java.security.PrivateKey,byte[][])>
SINK|<android.support.v13.app.FragmentCompat$BaseFragmentCompatImpl: void setMenuVisibility(android.app.Fragment,boolean)>
SINK|<com.android.calendar.event.EditEventHelper: boolean saveRemindersWithBackRef(java.util.ArrayList,int,java.util.ArrayList,java.util.ArrayList,boolean)>
SINK|<android.net.sip.SipProfile$Builder: android.net.sip.SipProfile$Builder setPassword(java.lang.String)>
SINK|<android.app.FragmentManagerImpl: android.app.Fragment$SavedState saveFragmentInstanceState(android.app.Fragment)>
SINK|<java.time.OffsetDateTime: java.lang.Object writeReplace()>
SINK|<com.android.systemui.statusbar.phone.PhoneStatusBar: android.animation.Animator setVisibilityWhenDone(android.animation.Animator,android.view.View,int)>
SINK|<com.android.internal.telephony.ApnContext: void setDataConnection(com.android.internal.telephony.DataConnection)>
SINK|<com.google.android.mms.pdu.PduPart: void setCharset(int)>
SINK|<com.android.server.CountryDetectorService: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
SINK|<android.view.accessibility.AccessibilityEvent: void setPackageName(java.lang.CharSequence)>
SINK|<java.util.zip.ZipEntry: void setComment(java.lang.String)>
SINK|<android.widget.ToggleButton: void setBackgroundDrawable(android.graphics.drawable.Drawable)>
SINK|<android.test.mock.MockCursor: boolean updateString(int,java.lang.String)>
SINK|<android.os.RemoteCallback$LocalCallback: void sendResult(android.os.Bundle)>
SINK|<org.apache.http.params.HttpProtocolParamBean: void setUseExpectContinue(boolean)>
SINK|<gov.nist.javax.sip.header.RSeq: void setSequenceNumber(int)>
SINK|<android.net.IConnectivityManager$Stub$Proxy: int setUsbTethering(boolean)>
SINK|<android.app.ApplicationThreadProxy: void setSchedulingGroup(int)>
SINK|<com.android.internal.view.IInputContext$Stub$Proxy: void performEditorAction(int)>
SINK|<java.net.MulticastSocket: void send(java.net.DatagramPacket,byte)>
SINK|<android.view.ViewGroup: void setChildrenDrawingCacheEnabled(boolean)>
SINK|<android.os.INetworkManagementService$Stub$Proxy: void startReverseTethering(java.lang.String)>
SINK|<com.android.contacts.format.PrefixHighlighter: void setText(android.widget.TextView,java.lang.String,char[])>
SINK|<com.android.internal.telephony.IccSmsInterfaceManagerProxy: void sendText(java.lang.String,java.lang.String,java.lang.String,android.app.PendingIntent,android.app.PendingIntent)>
SINK|<com.android.server.AlarmManagerService: void setWakelockWorkSource(android.app.PendingIntent)>
SINK|<org.apache.harmony.xnet.provider.jsse.SSLSocketWrapper: void setTrafficClass(int)>
SINK|<android.content.res.Resources: void parseBundleExtras(android.content.res.XmlResourceParser,android.os.Bundle)>
SINK|<com.android.contacts.interactions.GroupCreationDialogFragment: void onCompleted(java.lang.String)>
SINK|<android.widget.CheckedTextView: void setCheckMarkDrawable(int)>
SINK|<android.net.http.HttpsConnection: android.net.http.AndroidHttpClientConnection openConnection(android.net.http.Request)>
SINK|<android.os.IUserManager$Stub$Proxy: void setGuestEnabled(boolean)>
SINK|<android.filterfw.core.Filter: void addFieldPort(java.lang.String,java.lang.reflect.Field,boolean,boolean)>
SINK|<com.android.internal.telephony.ITelephonyRegistry$Stub$Proxy: void listen(java.lang.String,com.android.internal.telephony.IPhoneStateListener,int,boolean)>
SINK|<android.graphics.drawable.Drawable: void setDither(boolean)>
SINK|<android.content.Intent: android.content.Intent putExtras(android.content.Intent)>
SINK|<android.app.admin.IDevicePolicyManager$Stub$Proxy: void setPasswordMinimumNumeric(android.content.ComponentName,int,int)>
SINK|<org.apache.harmony.xnet.provider.jsse.OpenSSLSocketImplWrapper: void setReceiveBufferSize(int)>
SINK|<org.apache.http.entity.BufferedHttpEntity: void writeTo(java.io.OutputStream)>
SINK|<android.view.View: void setFitsSystemWindows(boolean)>
SINK|<android.net.wifi.p2p.WifiP2pManager: void removeGroup(android.net.wifi.p2p.WifiP2pManager$Channel,android.net.wifi.p2p.WifiP2pManager$ActionListener)>
SINK|<java.util.concurrent.CopyOnWriteArrayList$CowSubList: java.lang.Object set(int,java.lang.Object)>
SINK|<android.hardware.Camera$Parameters: void set(java.lang.String,int)>
SINK|<com.android.server.AppWidgetServiceImpl: void sendEnableIntentLocked(com.android.server.AppWidgetServiceImpl$Provider)>
SINK|<android.view.IWindowManager$Stub$Proxy: void addWindowToken(android.os.IBinder,int)>
SINK|<com.android.deskclock.worldclock.CitiesActivity$CityAdapter: void set24HoursMode(android.content.Context)>
SINK|<org.apache.http.protocol.HttpService: void setConnReuseStrategy(org.apache.http.ConnectionReuseStrategy)>
SINK|<com.android.contacts.list.ContactListItemView: void setData(char[],int)>
SINK|<android.app.ContextImpl: void setWallpaper(java.io.InputStream)>
SINK|<com.android.deskclock.AlarmTimePickerDialogFragment: com.android.deskclock.AlarmTimePickerDialogFragment newInstance(com.android.deskclock.Alarm)>
SINK|<android.content.Intent: android.content.Intent replaceExtras(android.content.Intent)>
SINK|<java.security.cert.X509CRLSelector: void setCertificateChecking(java.security.cert.X509Certificate)>
SINK|<com.android.systemui.screenshot.SaveImageInBackgroundTask: void onPostExecute(com.android.systemui.screenshot.SaveImageInBackgroundData)>
SINK|<android.widget.TextView: void setMaxEms(int)>
SINK|<com.android.internal.telephony.sip.SipCommandInterface: void setCdmaRoamingPreference(int,android.os.Message)>
SINK|<com.adobe.xmp.impl.XMPMetaImpl: void setProperty(java.lang.String,java.lang.String,java.lang.Object,com.adobe.xmp.options.PropertyOptions)>
SINK|<android.animation.PropertyValuesHolder$FloatPropertyValuesHolder: void setFloatValues(float[])>
SINK|<android.net.wifi.WifiStateMachine: void setCountryCode(java.lang.String,boolean)>
SINK|<com.android.internal.policy.impl.PhoneWindowManager: void sendCloseSystemWindows(java.lang.String)>
SINK|<android.media.IAudioService$Stub$Proxy: void adjustVolume(int,int)>
SINK|<com.android.server.location.PassiveProvider: boolean sendExtraCommand(java.lang.String,android.os.Bundle)>
SINK|<android.app.ActivityThread: void registerOnActivityPausedListener(android.app.Activity,android.app.OnActivityPausedListener)>
SINK|<android.preference.TwoStatePreference: void setSummaryOff(int)>
SINK|<android.os.IPowerManager$Stub$Proxy: void reboot(boolean,java.lang.String,boolean)>
SINK|<android.webkit.CallbackProxy: java.lang.String onJsPrompt(java.lang.String,java.lang.String,java.lang.String)>
SINK|<org.apache.harmony.xnet.provider.jsse.SSLSocketWrapper: void setTcpNoDelay(boolean)>
SINK|<java.nio.MappedByteBufferAdapter: java.nio.ByteBuffer putInt(int,int)>
SINK|<android.content.ContentProvider: void setReadPermission(java.lang.String)>
SINK|<com.android.nfc.NfcService$NfcAdapterService: void setP2pModes(int,int)>
SINK|<gov.nist.javax.sip.header.AuthenticationHeader: void setDomain(java.lang.String)>
SINK|<android.widget.ScrollBarDrawable: void setAlpha(int)>
SINK|<com.android.server.am.UsageStatsService: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
SINK|<org.apache.http.message.HeaderGroup: void setHeaders(org.apache.http.Header[])>
SINK|<android.content.ContextWrapper: void setTheme(int)>
SINK|<com.android.email.RefreshManager: boolean sendPendingMessages(long)>
SINK|<android.content.IContentService$Stub$Proxy: void cancelSync(android.accounts.Account,java.lang.String)>
SINK|<com.android.nfc.NfceeAccessControl: boolean check(int,java.lang.String)>
SINK|<com.android.browser.BrowserBookmarksPage: void onLoadFinished(android.content.Loader,android.database.Cursor)>
SINK|<com.android.server.pm.PackageManagerService: void grantPermission(java.lang.String,java.lang.String)>
SINK|<com.android.internal.telephony.DataConnectionAc: void addApnContextSync(com.android.internal.telephony.ApnContext)>
SINK|<android.net.wifi.WifiStateMachine$SupplicantStartedState: boolean processMessage(android.os.Message)>
SINK|<android.test.IsolatedContext: boolean bindService(android.content.Intent,android.content.ServiceConnection,int)>
SINK|<libcore.io.IoBridge: int sendto(java.io.FileDescriptor,java.nio.ByteBuffer,int,java.net.InetAddress,int)>
SINK|<java.util.regex.Matcher: java.lang.String replaceAll(java.lang.String)>
SINK|<com.android.internal.widget.LockPatternUtils: void setPermanentlyLocked(boolean)>
SINK|<android.net.wifi.WifiConfigStore: android.net.wifi.WpsResult startWpsWithPinFromAccessPoint(android.net.wifi.WpsInfo)>
SINK|<android.content.Intent: android.content.Intent putExtra(java.lang.String,float[])>
SINK|<com.android.internal.policy.impl.keyguard.KeyguardTransportControlView$IRemoteControlDisplayWeak: void setMetadata(int,android.os.Bundle)>
SINK|<com.android.internal.telephony.test.SimulatedCommands: void sendCdmaSms(byte[],android.os.Message)>
SINK|<com.android.server.net.NetworkStatsService: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>
SINK|<com.android.systemui.statusbar.phone.NavigationBarView: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
SINK|<android.media.MediaPlayer: void setRetransmitEndpoint(java.net.InetSocketAddress)>
SINK|<android.speech.tts.BlockingAudioTrack: int write(byte[])>
SINK|<android.webkit.WebView: boolean savePicture(android.os.Bundle,java.io.File)>
SINK|<com.google.common.io.ByteStreams$ByteArrayDataOutputStream: void write(byte[],int,int)>
SINK|<android.content.Intent: android.content.Intent setFlags(int)>
SINK|<gov.nist.javax.sip.address.SipUri: void setMethod(java.lang.String)>
SINK|<android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateStubImpl: void sendAccessibilityEvent(java.lang.Object,android.view.View,int)>
SINK|<com.android.phone.sip.SipSharedPreferences: void setProfilesCount(int)>
SINK|<com.android.internal.telephony.PhoneBase: void notifyDisconnectP(com.android.internal.telephony.Connection)>
SINK|<javax.xml.transform.sax.SAXSource: void setSystemId(java.lang.String)>
SINK|<com.android.gallery3d.data.DataManager: void mapMediaItems(java.util.ArrayList,com.android.gallery3d.data.MediaSet$ItemConsumer,int)>
SINK|<android.graphics.drawable.Drawable: boolean setLevel(int)>
SINK|<android.content.ContextWrapper: void startActivityAsUser(android.content.Intent,android.os.UserHandle)>
SINK|<android.accounts.AccountManagerService: void updateAppPermission(android.accounts.Account,java.lang.String,int,boolean)>
SINK|<java.util.zip.ZipEntry: void setTime(long)>
SINK|<android.webkit.WebViewClassic: void setHttpAuthUsernamePassword(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>
SINK|<android.os.DropBoxManager: void addFile(java.lang.String,java.io.File,int)>
SINK|<com.android.contacts.editor.PhotoEditorView: void setPhotoBitmap(android.graphics.Bitmap)>
SINK|<com.android.inputmethod.keyboard.internal.KeyboardTextsSet: void setLanguage(java.lang.String)>
SINK|<android.view.ViewRootImpl$AccessibilityInteractionConnection: void performAccessibilityAction(long,int,android.os.Bundle,int,android.view.accessibility.IAccessibilityInteractionConnectionCallback,int,int,long)>
SINK|<android.hardware.usb.IUsbManager$Stub$Proxy: void allowUsbDebugging(boolean,java.lang.String)>
SINK|<com.android.calendar.selectcalendars.SelectSyncedCalendarsMultiAccountAdapter$AsyncCalendarsUpdater: void onQueryComplete(int,java.lang.Object,android.database.Cursor)>
SINK|<android.hardware.input.IInputManager$Stub$Proxy: boolean injectInputEvent(android.view.InputEvent,int)>
SINK|<android.bluetooth.IBluetoothPan$Stub$Proxy: void setBluetoothTethering(boolean)>
SINK|<com.android.videoeditor.VideoEditorBaseActivity$ServiceListener: void onEffectAdded(java.lang.String,com.android.videoeditor.service.MovieEffect,java.lang.String,java.lang.Exception)>
SINK|<com.android.inputmethod.keyboard.MainKeyboardView: void setMainDictionaryAvailability(boolean)>
SINK|<com.android.email.activity.setup.EditQuickResponseDialog: com.android.email.activity.setup.EditQuickResponseDialog newInstance(com.android.emailcommon.provider.QuickResponse,long)>
SINK|<android.support.v4.view.AccessibilityDelegateCompatIcs: void sendAccessibilityEventUnchecked(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent)>
SINK|<android.webkit.WebViewClassic: void setInitialScale(int)>
SINK|<com.android.systemui.ExpandHelper: void setGlow(float)>
SINK|<java.nio.MappedByteBufferAdapter: java.nio.ByteBuffer put(int,byte)>
SINK|<android.app.admin.IDevicePolicyManager$Stub$Proxy: boolean resetPassword(java.lang.String,int,int)>
SINK|<android.view.View$12: void setValue(android.view.View,float)>
SINK|<java.nio.MappedByteBufferAdapter: java.nio.ByteBuffer putChar(char)>
SINK|<java.util.Date: long parse(java.lang.String)>
SINK|<com.android.emailcommon.internet.MimeHeader: void setHeader(java.lang.String,java.lang.String)>
SINK|<com.android.internal.telephony.PhoneProxy: void setBandMode(int,android.os.Message)>
SINK|<com.android.server.wm.WindowManagerService: void dumpAnimatorLocked(java.io.PrintWriter,java.lang.String[],boolean)>
SINK|<com.android.internal.app.ActionBarImpl: void setStackedBackgroundDrawable(android.graphics.drawable.Drawable)>
SINK|<com.android.server.am.ProcessRecord: void dump(java.io.PrintWriter,java.lang.String)>
SINK|<gov.nist.javax.sip.stack.TLSMessageProcessor: gov.nist.javax.sip.stack.MessageChannel createMessageChannel(gov.nist.core.HostPort)>
SINK|<android.widget.CalendarView$WeeksAdapter: void setSelectedDay(java.util.Calendar)>
SINK|<com.android.contacts.interactions.GroupDeletionDialogFragment: void show(android.app.FragmentManager,long,java.lang.String,boolean)>
SINK|<com.coremedia.iso.IsoTypeReader: java.lang.String readString(java.nio.ByteBuffer)>
SINK|<android.telephony.gsm.SmsManager: void sendDataMessage(java.lang.String,java.lang.String,short,byte[],android.app.PendingIntent,android.app.PendingIntent)>
SINK|<org.apache.http.impl.cookie.RFC2965CommentUrlAttributeHandler: void parse(org.apache.http.cookie.SetCookie,java.lang.String)>
SINK|<com.adobe.xmp.options.AliasOptions: com.adobe.xmp.options.AliasOptions setArrayAltText(boolean)>
SINK|<android.widget.ExpandableListView: void setGroupIndicator(android.graphics.drawable.Drawable)>
SINK|<android.net.wifi.p2p.WifiP2pGroupList: void add(android.net.wifi.p2p.WifiP2pGroup)>
SINK|<java.nio.MappedByteBufferAdapter: java.nio.ByteBuffer putShort(short)>
SINK|<com.android.internal.app.HeavyWeightSwitcherActivity: void setDrawable(int,android.graphics.drawable.Drawable)>
SINK|<android.accessibilityservice.AccessibilityService: void setWallpaper(android.graphics.Bitmap)>
SINK|<android.animation.PropertyValuesHolder$IntPropertyValuesHolder: void setIntValues(int[])>
SINK|<com.android.internal.telephony.sip.SipPhone: void sendDtmf(char)>
SINK|<libcore.io.BlockGuardOs: int sendto(java.io.FileDescriptor,java.nio.ByteBuffer,int,java.net.InetAddress,int)>
SINK|<com.android.internal.telephony.cat.CommandParams: boolean setIcon(android.graphics.Bitmap)>
SINK|<com.android.mms.ui.SlideListItemView: void setImage(java.lang.String,android.graphics.Bitmap)>
SINK|<android.webkit.WebStorageClassic: void setQuotaForOrigin(java.lang.String,long)>
SINK|<junit.framework.TestSuite: void setName(java.lang.String)>
SINK|<com.android.contacts.editor.PhoneticNameEditorView$PhoneticValuesDelta: void put(java.lang.String,java.lang.String)>
SINK|<android.view.animation.Transformation: void set(android.view.animation.Transformation)>
SINK|<com.google.common.collect.MapMakerInternalMap: java.lang.Object putIfAbsent(java.lang.Object,java.lang.Object)>
SINK|<android.graphics.Canvas: void setDensity(int)>
SINK|<org.xml.sax.helpers.ParserAdapter: void setProperty(java.lang.String,java.lang.Object)>
SINK|<com.android.videoeditor.service.ApiService: void setTransitionDuration(android.content.Context,java.lang.String,java.lang.String,long)>
SINK|<android.os.UserManager: void setUserIcon(int,android.graphics.Bitmap)>
SINK|<android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoIcsImpl: void setContentDescription(java.lang.Object,java.lang.CharSequence)>
SINK|<com.android.inputmethod.keyboard.PointerTracker$BogusMoveEventDetector: void setKeyboardGeometry(int,int)>
SINK|<com.android.server.dreams.DreamController: void startDream(android.os.Binder,android.content.ComponentName,boolean,int)>
SINK|<com.android.internal.app.ActionBarImpl: void setSubtitle(int)>
SINK|<com.android.camera.CameraManager$CameraProxy: void setDisplayOrientation(int)>
SINK|<com.android.gallery3d.data.DownloadUtils: void dump(com.android.gallery3d.util.ThreadPool$JobContext,java.io.InputStream,java.io.OutputStream)>
SINK|<java.net.URLConnection: java.io.InputStream getInputStream()>
SINK|<org.mozilla.javascript.Function: java.lang.Object call(org.mozilla.javascript.Context,org.mozilla.javascript.Scriptable,org.mozilla.javascript.Scriptable,java.lang.Object[])>
SINK|<com.android.server.wm.DisplayContent: void dump(java.lang.String,java.io.PrintWriter)>
SINK|<android.widget.RemoteViews: void setDouble(int,java.lang.String,double)>
SINK|<java.util.regex.Matcher: java.util.regex.Matcher appendReplacement(java.lang.StringBuffer,java.lang.String)>
SINK|<org.xml.sax.helpers.XMLFilterImpl: void parse(org.xml.sax.InputSource)>
SINK|<android.net.sip.SimpleSessionDescription$Fields: void setAddress(java.lang.String)>
SINK|<com.android.camera.drawable.TextDrawable: void setAlpha(int)>
SINK|<android.widget.AbsListView$PositionScroller: void start(int,int)>
SINK|<android.app.Instrumentation: void callActivityOnCreate(android.app.Activity,android.os.Bundle)>
SINK|<android.widget.FrameLayout: void setForeground(android.graphics.drawable.Drawable)>
SINK|<com.android.server.am.UsageStatsService$PkgUsageStatsExtended: void addLaunchTime(java.lang.String,int)>
SINK|<android.media.IAudioService$Stub$Proxy: void unregisterAudioFocusClient(java.lang.String)>
SINK|<com.android.server.accessibility.AccessibilityManagerService$Service: boolean performAccessibilityAction(int,long,int,android.os.Bundle,int,android.view.accessibility.IAccessibilityInteractionConnectionCallback,long)>
SINK|<android.content.IIntentSender$Stub$Proxy: int send(int,android.content.Intent,java.lang.String,android.content.IIntentReceiver,java.lang.String)>
SINK|<com.android.internal.statusbar.IStatusBar$Stub$Proxy: void setImeWindowStatus(android.os.IBinder,int,int)>
SINK|<android.widget.TextView: void setKeyListener(android.text.method.KeyListener)>
SINK|<android.view.animation.Animation: void setInterpolator(android.view.animation.Interpolator)>
SINK|<android.widget.ListView: void setItemsCanFocus(boolean)>
SINK|<java.text.DateFormatSymbols: void setShortWeekdays(java.lang.String[])>
SINK|<java.net.HttpCookie: void setMaxAge(long)>
SINK|<com.android.email.activity.UiUtilities: void setVisibilitySafe(android.app.Activity,int,int)>
SINK|<com.android.nfc.dhimpl.NativeNfcManager: void setP2pInitiatorModes(int)>
SINK|<com.android.videoeditor.widgets.AudioTrackLinearLayout: void setWaveformExtractionComplete(java.lang.String)>
SINK|<com.android.internal.telephony.RIL: void changeIccPinForApp(java.lang.String,java.lang.String,java.lang.String,android.os.Message)>
SINK|<com.android.internal.telephony.ITelephonyRegistry$Stub$Proxy: void notifyOtaspChanged(int)>
SINK|<android.bluetooth.IBluetoothHealth$Stub$Proxy: boolean registerAppConfiguration(android.bluetooth.BluetoothHealthAppConfiguration,android.bluetooth.IBluetoothHealthCallback)>
SINK|<com.android.bluetooth.Utils: byte[] intToByteArray(int)>
SINK|<org.apache.harmony.security.asn1.ASN1Set: void setEncodingContent(org.apache.harmony.security.asn1.BerOutputStream)>
SINK|<java.time.format.DateTimeFormatter: java.time.format.DateTimeParseContext parseUnresolved0(java.lang.CharSequence,java.text.ParsePosition)>
SINK|<com.android.systemui.media.NotificationPlayer: void setUsesWakeLock(android.content.Context)>
SINK|<android.widget.ActivityChooserView: void setExpandActivityOverflowButtonContentDescription(int)>
SINK|<android.net.wifi.WifiStateMachine$WaitForP2pDisableState: boolean processMessage(android.os.Message)>
SINK|<java.math.BigDecimal: java.math.BigDecimal setScale(int,java.math.RoundingMode)>
SINK|<android.os.IPowerManager$Stub$Proxy: void setTemporaryScreenBrightnessSettingOverride(int)>
SINK|<android.widget.CompoundButton$SavedState: void writeToParcel(android.os.Parcel,int)>
SINK|<android.os.INetworkManagementService$Stub$Proxy: void setInterfaceAlert(java.lang.String,long)>
SINK|<java.util.Collections$CheckedMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
SINK|<com.android.server.AlarmManagerService: void set(int,long,android.app.PendingIntent)>
SINK|<com.android.browser.BrowserSettings: void setTextZoom(int)>
SINK|<com.android.contacts.editor.ContactEditorFragment: boolean save(int)>
SINK|<com.android.deskclock.stopwatch.StopwatchService: int onStartCommand(android.content.Intent,int,int)>
SINK|<com.android.mms.transaction.RetrieveTransaction: byte[] sendPdu(byte[],java.lang.String)>
SINK|<com.android.launcher2.Launcher: void addAppWidgetImpl(int,com.android.launcher2.ItemInfo,android.appwidget.AppWidgetHostView,android.appwidget.AppWidgetProviderInfo)>
SINK|<javax.xml.parsers.SAXParser: void parse(java.lang.String,org.xml.sax.helpers.DefaultHandler)>
SINK|<gov.nist.javax.sip.address.SipUri: void setHost(gov.nist.core.Host)>
SINK|<com.android.server.net.NetworkPolicyManagerService: void setNetworkPolicies(android.net.NetworkPolicy[])>
SINK|<android.content.Intent: android.content.Intent putExtras(android.os.Bundle)>
SINK|<com.coremedia.iso.IsoTypeWriter: void writeUInt32BE(java.nio.ByteBuffer,long)>
SINK|<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setMultiChoiceItems(int,boolean[],android.content.DialogInterface$OnMultiChoiceClickListener)>
SINK|<android.text.BoringLayout: android.text.BoringLayout replaceOrMake(java.lang.CharSequence,android.text.TextPaint,int,android.text.Layout$Alignment,float,float,android.text.BoringLayout$Metrics,boolean,android.text.TextUtils$TruncateAt,int)>
SINK|<android.view.IWindowManager$Stub$Proxy: void resumeKeyDispatching(android.os.IBinder)>
SINK|<javax.mail.Transport: void sendMessage(javax.mail.Message,javax.mail.Address[])>
SINK|<javax.net.ssl.SSLSocket: void setSSLParameters(javax.net.ssl.SSLParameters)>
SINK|<android.content.BroadcastReceiver: void setResultCode(int)>
SINK|<android.widget.TextView: void setLinkTextColor(int)>
SINK|<android.app.DownloadManager$Request: android.app.DownloadManager$Request setDestinationInExternalFilesDir(android.content.Context,java.lang.String,java.lang.String)>
SINK|<android.view.View: void setFadingEdgeLength(int)>
SINK|<android.widget.GridLayout: void setColumnCount(int)>
SINK|<com.android.camera.Util: void setGpsParameters(android.hardware.Camera$Parameters,android.location.Location)>
SINK|<com.google.android.mms.pdu.NotificationInd: void setTransactionId(byte[])>
SINK|<java.nio.charset.CharsetEncoder: void implReplaceWith(byte[])>
SINK|<android.net.sip.SipAudioCall: void setSpeakerMode(boolean)>
SINK|<android.webkit.WebViewCore: void setMockGeolocationPosition(double,double,double)>
SINK|<com.android.internal.telephony.gsm.GsmSMSDispatcher: void dispatch(android.content.Intent,java.lang.String)>
SINK|<android.graphics.drawable.GradientDrawable: void setUseLevel(boolean)>
SINK|<android.app.IAlarmManager$Stub$Proxy: void setTime(long)>
SINK|<android.view.IWindowManager$Stub$Proxy: void statusBarVisibilityChanged(int)>
SINK|<android.net.EthernetDataTracker: void setUserDataEnable(boolean)>
SINK|<android.webkit.WebViewClassic: void setWebViewClient(android.webkit.WebViewClient)>
SINK|<com.android.server.pm.PackageSettingBase: void setEnabledComponentsCopy(java.util.HashSet,int)>
SINK|<android.app.Activity: void onWindowAttributesChanged(android.view.WindowManager$LayoutParams)>
SINK|<android.filterfw.core.StreamPort: void setFrame(android.filterfw.core.Frame)>
SINK|<com.android.gallery3d.util.XmpUtilHelper: boolean writeXMPMeta(java.lang.String,java.lang.Object)>
SINK|<com.android.internal.util.StateMachine: void sendMessageDelayed(int,java.lang.Object,long)>
SINK|<com.android.email.MessagingController: void checkMail(long,long,com.android.email.MessagingListener)>
SINK|<com.android.contacts.util.AccountFilterUtil: boolean updateAccountFilterTitleForPhone(android.view.View,com.android.contacts.list.ContactListFilter,boolean)>
SINK|<java.util.SimpleTimeZone: void setEndRule(int,int,int,int)>
SINK|<com.android.providers.contacts.ContactsDatabaseHelper: void updateContactVisible(com.android.providers.contacts.TransactionContext,long)>
SINK|<java.io.PrintWriter: void println(float)>
SINK|<android.text.style.SubscriptSpan: void updateDrawState(android.text.TextPaint)>
SINK|<com.google.android.mms.pdu.SendReq: void setCc(com.google.android.mms.pdu.EncodedStringValue[])>
SINK|<com.android.internal.telephony.IccSmsInterfaceManager: void sendText(java.lang.String,java.lang.String,java.lang.String,android.app.PendingIntent,android.app.PendingIntent)>
SINK|<com.android.internal.view.menu.MenuItemImpl: android.view.MenuItem setTitle(int)>
SINK|<android.view.View: void setOnCreateContextMenuListener(android.view.View$OnCreateContextMenuListener)>
SINK|<android.hardware.display.WifiDisplayStatus: void writeToParcel(android.os.Parcel,int)>
SINK|<android.view.View$6: void setValue(java.lang.Object,float)>
SINK|<android.app.ActivityManagerProxy: void reportThumbnail(android.os.IBinder,android.graphics.Bitmap,java.lang.CharSequence)>
SINK|<java.util.TimeZone: void setID(java.lang.String)>
SINK|<com.android.bluetooth.btservice.AdapterService: void setProfileAutoConnectionPriority(android.bluetooth.BluetoothDevice,int)>
SINK|<android.util.TypedValue: float complexToDimensionNoisy(int,android.util.DisplayMetrics)>
SINK|<android.filterfw.core.GLFrame: void setInts(int[])>
SINK|<android.widget.TextView: void setSelected(boolean)>
SINK|<android.widget.RatingBar: void setMax(int)>
SINK|<android.net.wifi.WifiStateTracker: void setDependencyMet(boolean)>
SINK|<android.app.DownloadManager: long addCompletedDownload(java.lang.String,java.lang.String,boolean,java.lang.String,java.lang.String,long,boolean)>
SINK|<com.android.providers.contacts.ContactDirectoryManager: void onPackageChanged(java.lang.String)>
SINK|<com.android.internal.os.IResultReceiver$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>
SINK|<com.android.server.AlarmManagerService$Alarm: void dump(java.io.PrintWriter,java.lang.String,long)>
SINK|<android.location.IGeocodeProvider$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>
SINK|<com.android.internal.view.menu.MenuItemImpl: android.view.MenuItem setChecked(boolean)>
SINK|<android.view.View: void setSaveFromParentEnabled(boolean)>
SINK|<android.provider.Browser: void updateVisitedHistory(android.content.ContentResolver,java.lang.String,boolean)>
SINK|<java.io.ObjectOutputStream: void writeByte(int)>
SINK|<com.android.internal.app.IMediaContainerService$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>
SINK|<android.gesture.GestureOverlayView: void setFadeEnabled(boolean)>
SINK|<android.media.audiofx.AudioEffect: byte[] shortToByteArray(short)>
SINK|<android.media.effect.FilterGraphEffect: void apply(int,int,int,int)>
SINK|<org.xmlpull.v1.sax2.Driver: void setFeature(java.lang.String,boolean)>
SINK|<com.android.internal.statusbar.IStatusBarService$Stub$Proxy: void setImeWindowStatus(android.os.IBinder,int,int)>
SINK|<com.google.android.apps.lightcycle.camera.NullSurfaceCameraPreview: void setFastShutter(boolean)>
SINK|<com.android.internal.telephony.ISms$Stub$Proxy: boolean updateMessageOnIccEf(int,int,byte[])>
SINK|<android.widget.PopupWindow$PopupViewContainer: void sendAccessibilityEvent(int)>
SINK|<org.xml.sax.ext.Locator2Impl: void setEncoding(java.lang.String)>
SINK|<com.android.internal.telephony.gsm.GSMPhone: void sendUssdResponse(java.lang.String)>
SINK|<com.android.email.activity.MessageListItemCoordinates: com.android.email.activity.MessageListItemCoordinates forWidth(android.content.Context,int,boolean)>
SINK|<com.android.contacts.widget.PinnedHeaderListView: void setHeaderInvisible(int,boolean)>
SINK|<java.security.Signature: void setParameter(java.security.spec.AlgorithmParameterSpec)>
SINK|<com.android.deskclock.LabelDialogFragment: com.android.deskclock.LabelDialogFragment newInstance(com.android.deskclock.Alarm,java.lang.String)>
SINK|<gov.nist.javax.sip.header.ims.PAccessNetworkInfo: void setParameter(java.lang.String,java.lang.Object)>
SINK|<com.android.server.NetworkManagementService: void startReverseTethering(java.lang.String)>
SINK|<android.widget.TextView: void setAllCaps(boolean)>
SINK|<org.apache.harmony.xnet.provider.jsse.HandshakeProtocol: void send(org.apache.harmony.xnet.provider.jsse.Message)>
SINK|<android.webkit.WebSettings: void setSavePassword(boolean)>
SINK|<android.net.wifi.p2p.WifiP2pService$P2pStateMachine$P2pNotSupportedState: boolean processMessage(android.os.Message)>
SINK|<android.widget.TextView: void setEllipsize(android.text.TextUtils$TruncateAt)>
SINK|<android.net.wifi.p2p.WifiP2pService$P2pStateMachine$UserAuthorizingJoinState: boolean processMessage(android.os.Message)>
SINK|<gov.nist.javax.sip.ListeningPointImpl: void setSentBy(java.lang.String)>
SINK|<com.android.email.activity.setup.AccountSettings: android.content.Intent createAccountSettingsIntent(android.content.Context,long,java.lang.String)>
SINK|<java.io.DataOutputStream: void writeFloat(float)>
SINK|<com.android.internal.telephony.gsm.SimPhoneBookInterfaceManager: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>
SINK|<org.apache.harmony.xnet.provider.jsse.OpenSSLServerSocketImpl: void setWantClientAuth(boolean)>
SINK|<android.graphics.drawable.BitmapDrawable: void setTargetDensity(int)>
SINK|<java.text.ChoiceFormat: void setChoices(double[],java.lang.String[])>
SINK|<com.google.common.io.ByteStreams$ByteArrayDataOutputStream: void writeChars(java.lang.String)>
SINK|<libcore.icu.NativeDecimalFormat: void setDecimalFormatSymbols(libcore.icu.LocaleData)>
SINK|<org.xml.sax.helpers.AttributesImpl: void setURI(int,java.lang.String)>
SINK|<gov.nist.javax.sip.header.ims.PChargingVector: void setICIDGeneratedAt(java.lang.String)>
SINK|<com.android.providers.settings.SettingsHelper: void setLocaleData(byte[],int)>
SINK|<android.accessibilityservice.IAccessibilityServiceConnection$Stub$Proxy: boolean performGlobalAction(int)>
SINK|<android.bluetooth.BluetoothDevice: boolean setPasskey(int)>
SINK|<com.android.internal.view.IInputContext$Stub$Proxy: void setComposingText(java.lang.CharSequence,int)>
SINK|<com.android.nfc.P2pLinkManager: void onReceiveComplete(android.nfc.NdefMessage)>
SINK|<android.app.ProgressDialog: void setIndeterminateDrawable(android.graphics.drawable.Drawable)>
SINK|<com.google.common.collect.ForwardingConcurrentMap: java.lang.Object putIfAbsent(java.lang.Object,java.lang.Object)>
SINK|<android.view.IWindow$Stub$Proxy: void dispatchWallpaperOffsets(float,float,float,float,boolean)>
SINK|<android.hardware.input.InputManager: void setCurrentKeyboardLayoutForInputDevice(java.lang.String,java.lang.String)>
SINK|<com.android.internal.app.ActionBarImpl$ActionModeImpl: void setSubtitle(int)>
SINK|<android.view.ContextThemeWrapper: void setTheme(int)>
SINK|<android.app.ApplicationThreadProxy: void dumpService(java.io.FileDescriptor,android.os.IBinder,java.lang.String[])>
SINK|<gov.nist.javax.sip.stack.SIPDialog: void sendAck(javax.sip.message.Request)>
SINK|<java.security.cert.PKIXParameters: void setTrustAnchors(java.util.Set)>
SINK|<android.accounts.AccountManagerService: java.lang.String readAuthTokenInternal(android.accounts.AccountManagerService$UserAccounts,android.accounts.Account,java.lang.String)>
SINK|<android.net.wifi.p2p.WifiP2pWfdInfo: void setCoupledSinkSupportAtSink(boolean)>
SINK|<android.text.style.TextAppearanceSpan: void updateDrawState(android.text.TextPaint)>
SINK|<org.apache.http.message.BasicHeaderValueParser: org.apache.http.NameValuePair parseNameValuePair(org.apache.http.util.CharArrayBuffer,org.apache.http.message.ParserCursor,char[])>
SINK|<java.util.logging.Logger: void log(java.util.logging.Level,java.lang.String)>
SINK|<com.android.internal.telephony.DataConnection$DcActivatingState: boolean processMessage(android.os.Message)>
SINK|<com.android.server.sip.SipWakeupTimer: void set(int,java.lang.Runnable)>
SINK|<com.android.internal.telephony.sip.SipCommandInterface: void sendBurstDtmf(java.lang.String,int,int,android.os.Message)>
SINK|<com.android.systemui.statusbar.tablet.TabletStatusBarView: void setBar(com.android.systemui.statusbar.BaseStatusBar)>
SINK|<android.speech.tts.ITextToSpeechService$Stub$Proxy: int speak(android.os.IBinder,java.lang.String,int,android.os.Bundle)>
SINK|<android.os.FileObserver$ObserverThread: int startWatching(java.lang.String,int,android.os.FileObserver)>
SINK|<com.android.internal.telephony.ITelephony$Stub$Proxy: void dial(java.lang.String)>
SINK|<java.nio.file.Files: java.nio.file.Path setLastModifiedTime(java.nio.file.Path,java.nio.file.attribute.FileTime)>
SINK|<android.webkit.WebViewClassic: boolean setFrame(int,int,int,int)>
SINK|<com.android.internal.telephony.ims.IsimUiccRecords: void setVoiceMailNumber(java.lang.String,java.lang.String,android.os.Message)>
SINK|<com.google.common.collect.ForwardingMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
SINK|<android.widget.Spinner: void setPopupBackgroundDrawable(android.graphics.drawable.Drawable)>
SINK|<android.content.ContentProviderNative: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>
SINK|<com.android.commands.am.Am$InstrumentationWatcher: void instrumentationStatus(android.content.ComponentName,int,android.os.Bundle)>
SINK|<gov.nist.javax.sip.header.AuthenticationInfo: void setResponse(java.lang.String)>
SINK|<android.widget.OverScroller: void setFinalY(int)>
SINK|<com.android.gallery3d.ui.GLCanvasImpl: void drawTexture(com.android.gallery3d.ui.BasicTexture,android.graphics.RectF,android.graphics.RectF)>
SINK|<com.android.contacts.list.PhoneNumberPickerFragment: void restoreSavedState(android.os.Bundle)>
SINK|<java.lang.Thread: void setUncaughtExceptionHandler(java.lang.Thread$UncaughtExceptionHandler)>
SINK|<android.net.wifi.WifiStateMachine: void setScanType(boolean)>
SINK|<com.android.internal.telephony.DefaultPhoneNotifier: void notifyDataActivity(com.android.internal.telephony.Phone)>
SINK|<android.view.IWindowManager$Stub$Proxy: void pauseKeyDispatching(android.os.IBinder)>
SINK|<java.net.URLConnection: void setAllowUserInteraction(boolean)>
SINK|<android.net.sip.SimpleSessionDescription: void setEncryption(java.lang.String,java.lang.String)>
SINK|<com.android.mms.ui.VideoAttachmentView: void setVideo(java.lang.String,android.net.Uri)>
SINK|<com.google.common.io.ByteStreams$ByteArrayDataOutputStream: void writeBoolean(boolean)>
SINK|<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>
SINK|<com.android.internal.telephony.ApnContext: void setDependencyMet(boolean)>
SINK|<android.app.ActivityManagerProxy: void overridePendingTransition(android.os.IBinder,java.lang.String,int,int)>
SINK|<android.net.wifi.p2p.WifiP2pService: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>
SINK|<com.android.phone.sip.SipEditor$PreferenceKey: void setValue(java.lang.String)>
SINK|<java.net.PlainSocketImpl$PlainSocketOutputStream: void write(int)>
SINK|<java.time.Period: java.time.Period parse(java.lang.CharSequence)>
SINK|<java.text.DecimalFormat: void setNegativePrefix(java.lang.String)>
SINK|<com.android.internal.statusbar.IStatusBar$Stub$Proxy: void removeIcon(int)>
SINK|<com.android.internal.view.IInputMethodManager$Stub$Proxy: void removeClient(com.android.internal.view.IInputMethodClient)>
SINK|<android.app.admin.IDevicePolicyManager$Stub$Proxy: void setPasswordMinimumLetters(android.content.ComponentName,int,int)>
SINK|<com.android.inputmethod.latin.UserHistoryDictionaryBigramList: void addBigram(java.lang.String,java.lang.String,byte)>
SINK|<android.view.ViewRootImpl$W: void dispatchSystemUiVisibilityChanged(int,int,int,int)>
SINK|<android.media.MediaPlayer: void setDataSource(android.content.Context,android.net.Uri)>
SINK|<android.view.View$4: void setValue(java.lang.Object,float)>
SINK|<com.android.mms.dom.ElementImpl: void setAttribute(java.lang.String,java.lang.String)>
SINK|<android.sax.Element: void setEndTextElementListener(android.sax.EndTextElementListener)>
SINK|<com.android.server.usb.UsbSettingsManager: void setAccessoryPackage(android.hardware.usb.UsbAccessory,java.lang.String)>
SINK|<com.android.internal.policy.impl.keyguard.KeyguardHostView$SavedState: void writeToParcel(android.os.Parcel,int)>
SINK|<android.net.wifi.p2p.WifiP2pManager: void addServiceRequest(android.net.wifi.p2p.WifiP2pManager$Channel,android.net.wifi.p2p.nsd.WifiP2pServiceRequest,android.net.wifi.p2p.WifiP2pManager$ActionListener)>
SINK|<com.android.contacts.PhoneCallDetailsHelper: void setPhoneCallDetails(com.android.contacts.PhoneCallDetailsViews,com.android.contacts.PhoneCallDetails,boolean)>
SINK|<com.android.providers.media.MtpService$3: void sendObjectAdded(int)>
SINK|<android.app.ApplicationThreadProxy: void scheduleCreateBackupAgent(android.content.pm.ApplicationInfo,android.content.res.CompatibilityInfo,int)>
SINK|<com.android.email.MessagingController: void loadAttachment(long,long,long,long,com.android.email.MessagingListener,boolean)>
SINK|<com.android.internal.telephony.PhoneBase: void invokeOemRilRequestStrings(java.lang.String[],android.os.Message)>
SINK|<com.android.server.MountService: boolean onEvent(int,java.lang.String,java.lang.String[])>
SINK|<android.hardware.usb.IUsbManager$Stub$Proxy: void grantAccessoryPermission(android.hardware.usb.UsbAccessory,int)>
SINK|<com.android.internal.telephony.RIL: void queryCallWaiting(int,android.os.Message)>
SINK|<com.android.camera.PreviewGestures: boolean dispatchTouch(android.view.MotionEvent)>
SINK|<com.android.providers.contacts.ContactsDatabaseHelper: void insertNameLookup(long,long,int,java.lang.String)>
SINK|<android.app.backup.BackupAgent: void onRestoreFile(android.os.ParcelFileDescriptor,long,java.io.File,int,long,long)>
SINK|<android.app.ActivityThread$ApplicationThread: void scheduleLaunchActivity(android.content.Intent,android.os.IBinder,int,android.content.pm.ActivityInfo,android.content.res.Configuration,android.content.res.CompatibilityInfo,android.os.Bundle,java.util.List,java.util.List,boolean,boolean,java.lang.String,android.os.ParcelFileDescriptor,boolean)>
SINK|<android.os.INetworkManagementService$Stub$Proxy: void setAccessPoint(android.net.wifi.WifiConfiguration,java.lang.String)>
SINK|<com.android.browser.PreloadController: void setupAutoFill(android.os.Message)>
SINK|<android.os.CommonTimeConfig: int setAutoDisable(boolean)>
SINK|<android.app.WallpaperManager: void setResource(int)>
SINK|<libcore.icu.NativeDecimalFormat: void setMinimumFractionDigits(int)>
SINK|<javax.net.ssl.HttpsURLConnection: void setDefaultHostnameVerifier(javax.net.ssl.HostnameVerifier)>
SINK|<com.android.contacts.ContactSaveService: android.content.Intent createSaveContactIntent(android.content.Context,com.android.contacts.model.RawContactDeltaList,java.lang.String,int,boolean,java.lang.Class,java.lang.String,long,java.lang.String)>
SINK|<com.android.providers.contacts.ContactsDatabaseHelper: boolean updateContactVisible(com.android.providers.contacts.TransactionContext,long,boolean)>
SINK|<com.android.deskclock.timer.TimerReceiver: void onReceive(android.content.Context,android.content.Intent)>
SINK|<com.android.internal.telephony.IPhoneStateListener$Stub$Proxy: void onDataActivity(int)>
SINK|<android.widget.ListView: void setCacheColorHint(int)>
SINK|<android.net.IConnectivityManager$Stub$Proxy: boolean setRadio(int,boolean)>
SINK|<com.android.providers.calendar.CalendarCache: void writeTimezoneInstancesPrevious(java.lang.String)>
SINK|<com.android.server.EventLogTags: void writeUnknownSourcesEnabled(int)>
SINK|<android.widget.ImageView: void setImageLevel(int)>
SINK|<com.android.server.am.CompatModePackages: void setFrontActivityAskCompatModeLocked(boolean)>
SINK|<android.app.ActivityManagerProxy: boolean killProcessesBelowForeground(java.lang.String)>
SINK|<java.util.concurrent.ConcurrentHashMap$HashEntry: void setNext(java.util.concurrent.ConcurrentHashMap$HashEntry)>
SINK|<android.content.ContextWrapper: void startActivitiesAsUser(android.content.Intent[],android.os.Bundle,android.os.UserHandle)>
SINK|<com.android.server.UiModeManagerService: void setNightMode(int)>
SINK|<java.security.cert.X509CRLSelector: void setMinCRLNumber(java.math.BigInteger)>
SINK|<android.net.wifi.p2p.WifiP2pService$P2pStateMachine$DefaultState: boolean processMessage(android.os.Message)>
SINK|<java.net.ResponseCache: void setDefault(java.net.ResponseCache)>
SINK|<com.android.server.SamplingProfilerService: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
SINK|<android.graphics.drawable.PaintDrawable: void setCornerRadius(float)>
SINK|<com.android.server.LocationManagerService: void setTestProviderLocation(java.lang.String,android.location.Location)>
SINK|<java.io.EmulatedFieldsForDumping: void put(java.lang.String,byte)>
SINK|<android.widget.TextView: void setPaddingRelative(int,int,int,int)>
SINK|<android.test.InstrumentationTestCase: void sendKeys(java.lang.String)>
SINK|<android.preference.Preference: void setSummary(int)>
SINK|<org.apache.http.impl.cookie.NetscapeDraftHeaderParser: org.apache.http.NameValuePair parseNameValuePair(org.apache.http.util.CharArrayBuffer,org.apache.http.message.ParserCursor)>
SINK|<com.android.internal.telephony.UiccCardApplication: void supplyNetworkDepersonalization(java.lang.String,android.os.Message)>
SINK|<com.android.internal.policy.impl.keyguard.PagedView: void snapToPage(int,int,int,boolean)>
SINK|<android.widget.RemoteViews: void setUri(int,java.lang.String,android.net.Uri)>
SINK|<com.android.commands.monkey.Monkey$ActivityController: boolean activityResuming(java.lang.String)>
SINK|<android.app.ActivityManagerProxy: void setImmersive(android.os.IBinder,boolean)>
SINK|<android.app.Activity: void startIntentSender(android.content.IntentSender,android.content.Intent,int,int,int,android.os.Bundle)>
SINK|<org.apache.http.client.utils.URLEncodedUtils: void parse(java.util.List,java.util.Scanner,java.lang.String)>
SINK|<android.net.NetworkPolicyManager: void setRestrictBackground(boolean)>
SINK|<android.test.AndroidTestRunner: void setInstrumentation(android.app.Instrumentation)>
SINK|<android.view.ViewGroup: void updateViewLayout(android.view.View,android.view.ViewGroup$LayoutParams)>
SINK|<com.android.server.location.PassiveProvider: void setRequest(com.android.internal.location.ProviderRequest,android.os.WorkSource)>
SINK|<com.android.internal.telephony.DataConnectionAc: void reqUpdateLinkPropertiesDataCallState(com.android.internal.telephony.DataCallState)>
SINK|<com.android.internal.app.ActionBarImpl$TabImpl: android.app.ActionBar$Tab setContentDescription(int)>
SINK|<com.android.contacts.list.LegacyContactListAdapter: void bindView(android.view.View,int,android.database.Cursor,int)>
SINK|<android.app.Instrumentation: void sendStatus(int,android.os.Bundle)>
SINK|<com.android.internal.telephony.RIL: void sendDtmf(char,android.os.Message)>
SINK|<android.view.textservice.SpellCheckerInfo: void writeToParcel(android.os.Parcel,int)>
SINK|<android.nfc.INfcTag$Stub$Proxy: boolean canMakeReadOnly(int)>
SINK|<android.os.StrictMode$VmPolicy$Builder: android.os.StrictMode$VmPolicy$Builder setClassInstanceLimit(java.lang.Class,int)>
SINK|<com.android.systemui.statusbar.phone.PhoneStatusBar: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
SINK|<android.webkit.WebViewCore: void setMockGeolocationPermission(boolean)>
SINK|<com.android.server.sip.SipService$SipSessionGroupExt: void setListener(android.net.sip.ISipSessionListener)>
SINK|<android.app.IThumbnailRetriever$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>
SINK|<com.android.providers.contacts.aggregation.ContactAggregator: void markNewForAggregation(long,int)>
SINK|<com.android.internal.telephony.RIL: void sendEnvelopeWithStatus(java.lang.String,android.os.Message)>
SINK|<java.io.PipedOutputStream: void write(byte[],int,int)>
SINK|<java.io.ObjectOutputStream: void writeLong(long)>
SINK|<android.bluetooth.BluetoothTetheringDataTracker: void setUserDataEnable(boolean)>
SINK|<android.graphics.Paint: void setStrokeCap(android.graphics.Paint$Cap)>
SINK|<java.text.DateFormatSymbols: void setZoneStrings(java.lang.String[][])>
SINK|<com.android.videoeditor.service.ApiService: void cancelExportVideoEditor(android.content.Context,java.lang.String,java.lang.String)>
SINK|<android.widget.ExpandableListView: void setChildIndicator(android.graphics.drawable.Drawable)>
SINK|<android.app.ActivityManagerProxy: void backupAgentCreated(java.lang.String,android.os.IBinder)>
SINK|<com.android.internal.widget.TransportControlView$IRemoteControlDisplayWeak: void setTransportControlFlags(int,int)>
SINK|<com.android.email.Controller$ServiceCallback: void sendMessageStatus(long,java.lang.String,int,int)>
SINK|<android.os.Debug: void dumpHprofData(java.lang.String,java.io.FileDescriptor)>
SINK|<android.view.accessibility.IAccessibilityInteractionConnection$Stub$Proxy: void findFocus(long,int,int,android.view.accessibility.IAccessibilityInteractionConnectionCallback,int,int,long)>
SINK|<java.nio.BaseByteBuffer: java.nio.ByteBuffer putChar(int,char)>
SINK|<com.google.android.apps.lightcycle.panorama.LightCycleView: void setFrameDimensions(int,int)>
SINK|<android.media.MediaRouter$UserRouteInfo: void setVolume(int)>
SINK|<com.android.phone.PhoneInterfaceManager: int enableApnType(java.lang.String)>
SINK|<java.util.jar.JarFile$JarFileInputStream: int read(byte[],int,int)>
SINK|<java.io.ObjectOutputStream: void writeInt(int)>
SINK|<com.android.server.wm.Session: void setInsets(android.view.IWindow,int,android.graphics.Rect,android.graphics.Rect,android.graphics.Region)>
SINK|<android.support.v4.widget.EdgeEffectCompat$EdgeEffectIcsImpl: void setSize(java.lang.Object,int,int)>
SINK|<com.android.inputmethod.keyboard.MainKeyboardView: void setKeyboard(com.android.inputmethod.keyboard.Keyboard)>
SINK|<com.android.internal.telephony.PhoneProxy: void setOutgoingCallerIdDisplay(int,android.os.Message)>
SINK|<com.android.internal.policy.impl.PhoneWindowManager: void setHdmiPlugged(boolean)>
SINK|<android.widget.GridView: void setAdapter(android.widget.Adapter)>
SINK|<com.android.gallery3d.data.MtpContext: boolean copyAlbum(java.lang.String,java.lang.String,java.util.List)>
SINK|<android.view.accessibility.IAccessibilityManager$Stub$Proxy: void interrupt(int)>
SINK|<android.content.ContentProviderResult: void writeToParcel(android.os.Parcel,int)>
SINK|<com.android.internal.app.ActionBarImpl$ActionModeImpl: void setCustomView(android.view.View)>
SINK|<android.view.View$8: void setValue(java.lang.Object,float)>
SINK|<java.net.HttpCookie: void setDomain(java.lang.String)>
SINK|<com.android.internal.telephony.cdma.CDMAPhone: void setMute(boolean)>
SINK|<android.app.Activity: void startActivityForResult(android.content.Intent,int)>
SINK|<android.view.IWindowManager$Stub$Proxy: void setAppStartingWindow(android.os.IBinder,java.lang.String,int,android.content.res.CompatibilityInfo,java.lang.CharSequence,int,int,int,android.os.IBinder,boolean)>
SINK|<android.renderscript.Script: android.renderscript.Script$FieldID createFieldID(int,android.renderscript.Element)>
SINK|<android.graphics.Bitmap: void setPixel(int,int,int)>
SINK|<android.view.GLES20DisplayList: void setRotationY(float)>
SINK|<com.android.server.wm.WindowManagerService: void startFreezingScreen(int,int)>
SINK|<com.android.videoeditor.widgets.OverlayLinearLayout: void setSelected(boolean)>
SINK|<android.accounts.AccountManagerService: android.os.IBinder onBind(android.content.Intent)>
SINK|<com.android.launcher2.ShortcutAndWidgetContainer: void setupLp(com.android.launcher2.CellLayout$LayoutParams)>
SINK|<com.android.mms.transaction.Transaction: byte[] sendPdu(long,byte[],java.lang.String)>
SINK|<android.app.ContextImpl: void sendStickyOrderedBroadcast(android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>
SINK|<com.android.internal.telephony.sip.SipPhone: void setOutgoingCallerIdDisplay(int,android.os.Message)>
SINK|<android.graphics.drawable.AnimationDrawable: boolean setVisible(boolean,boolean)>
SINK|<android.renderscript.Matrix2f: void set(int,int,float)>
SINK|<android.webkit.WebSettings: void setLoadsImagesAutomatically(boolean)>
SINK|<java.util.concurrent.atomic.AtomicInteger: void lazySet(int)>
SINK|<android.content.ContentProviderProxy: android.content.res.AssetFileDescriptor openAssetFile(android.net.Uri,java.lang.String)>
SINK|<com.android.contacts.model.dataitem.DataItem: void setMimeType(java.lang.String)>
SINK|<org.xml.sax.helpers.ParserAdapter: void setEntityResolver(org.xml.sax.EntityResolver)>
SINK|<com.android.bluetooth.opp.BluetoothOppReceiver: void onReceive(android.content.Context,android.content.Intent)>
SINK|<android.widget.TextView: void setEditableFactory(android.text.Editable$Factory)>
SINK|<org.apache.http.impl.io.HttpTransportMetricsImpl: void setBytesTransferred(long)>
SINK|<java.text.NumberFormat: void setMaximumIntegerDigits(int)>
SINK|<android.widget.GridView: void setSelection(int)>
SINK|<android.widget.AbsListView$RecycleBin: void addScrapView(android.view.View,int)>
SINK|<android.net.wifi.WifiStateMachine: boolean syncDisableNetwork(com.android.internal.util.AsyncChannel,int)>
SINK|<java.text.DateFormat: void setTimeZone(java.util.TimeZone)>
SINK|<com.android.internal.os.BatteryStatsImpl: void writeToParcel(android.os.Parcel,int)>
SINK|<com.android.contacts.ContactPhotoManagerImpl: void cacheBitmap(android.net.Uri,android.graphics.Bitmap,byte[])>
SINK|<com.android.contacts.ContactSaveService: android.content.Intent createNewGroupIntent(android.content.Context,com.android.contacts.model.account.AccountWithDataSet,java.lang.String,long[],java.lang.Class,java.lang.String)>
SINK|<java.io.ObjectStreamField: void setOffset(int)>
SINK|<android.content.IContentService$Stub$Proxy: void unregisterContentObserver(android.database.IContentObserver)>
SINK|<org.apache.harmony.security.x509.ExtendedKeyUsage: void dumpValue(java.lang.StringBuilder,java.lang.String)>
SINK|<java.util.concurrent.CompletableFuture: java.util.concurrent.CompletableFuture asyncRunStage(java.util.concurrent.Executor,java.lang.Runnable)>
SINK|<com.android.server.wm.WindowStateAnimator: void setWallpaperOffset(int,int)>
SINK|<javax.obex.ClientSession: javax.obex.HeaderSet setPath(javax.obex.HeaderSet,boolean,boolean)>
SINK|<android.view.IWindowManager$Stub$Proxy: void freezeRotation(int)>
SINK|<android.os.ISchedulingPolicyService$Stub$Proxy: int requestPriority(int,int,int)>
SINK|<android.filterfw.core.SerializedFrame: void setBitmap(android.graphics.Bitmap)>
SINK|<com.google.common.collect.AbstractMapEntry: java.lang.Object setValue(java.lang.Object)>
SINK|<android.hardware.Camera$Parameters: void setAutoWhiteBalanceLock(boolean)>
SINK|<com.android.camera.CaptureAnimManager: void setOrientation(int)>
SINK|<android.view.IInputFilterHost$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>
SINK|<android.app.admin.IDevicePolicyManager$Stub$Proxy: void setMaximumTimeToLock(android.content.ComponentName,long,int)>
SINK|<android.bluetooth.IBluetooth$Stub$Proxy: boolean setName(java.lang.String)>
SINK|<com.android.server.am.ActivityManagerService: void closeSystemDialogsLocked(java.lang.String)>
SINK|<android.util.SparseLongArray: void append(int,long)>
SINK|<com.android.gallery3d.filtershow.filters.ImageFilterCurves: void setSpline(com.android.gallery3d.filtershow.ui.Spline,int)>
SINK|<android.renderscript.Script: void setVar(int,boolean)>
SINK|<com.android.providers.calendar.CalendarInstancesHelper: void updateInstancesLocked(android.content.ContentValues,long,boolean,android.database.sqlite.SQLiteDatabase)>
SINK|<android.widget.VideoView: void setOnCompletionListener(android.media.MediaPlayer$OnCompletionListener)>
SINK|<android.net.sip.ISipSessionListener$Stub$Proxy: void onRegistrationDone(android.net.sip.ISipSession,int)>
SINK|<android.widget.CompoundButton: void setButtonDrawable(int)>
SINK|<java.io.LineNumberInputStream: void setLineNumber(int)>
SINK|<com.android.internal.view.menu.SubMenuBuilder: void setQwertyMode(boolean)>
SINK|<com.android.internal.textservice.ISpellCheckerSession$Stub$Proxy: void onGetSentenceSuggestionsMultiple(android.view.textservice.TextInfo[],int)>
SINK|<com.adobe.xmp.options.PropertyOptions: com.adobe.xmp.options.PropertyOptions setArrayOrdered(boolean)>
SINK|<android.hardware.usb.IUsbManager$Stub$Proxy: void requestDevicePermission(android.hardware.usb.UsbDevice,java.lang.String,android.app.PendingIntent)>
SINK|<android.view.IWindowSession$Stub$Proxy: int relayout(android.view.IWindow,int,android.view.WindowManager$LayoutParams,int,int,int,int,android.graphics.Rect,android.graphics.Rect,android.graphics.Rect,android.content.res.Configuration,android.view.Surface)>
SINK|<android.app.ContextImpl: void sendBroadcast(android.content.Intent,java.lang.String)>
SINK|<com.android.internal.app.ActionBarImpl: void setDisplayOptions(int)>
SINK|<com.android.camera.ComboPreferences$MyEditor: android.content.SharedPreferences$Editor putInt(java.lang.String,int)>
SINK|<java.net.DatagramPacket: void setData(byte[])>
SINK|<java.text.FieldPosition: void setBeginIndex(int)>
SINK|<com.android.server.location.MockProvider: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
SINK|<org.apache.harmony.xml.dom.ElementImpl: void setAttributeNS(java.lang.String,java.lang.String,java.lang.String)>
SINK|<android.app.ReceiverRestrictedContext: android.content.Intent registerReceiverAsUser(android.content.BroadcastReceiver,android.os.UserHandle,android.content.IntentFilter,java.lang.String,android.os.Handler)>
SINK|<android.content.ContentResolver: void notifyChange(android.net.Uri,android.database.ContentObserver,boolean,int)>
SINK|<android.app.ReceiverRestrictedContext: android.content.Intent registerReceiver(android.content.BroadcastReceiver,android.content.IntentFilter,java.lang.String,android.os.Handler)>
SINK|<android.widget.ExpandableListView: void setOnGroupClickListener(android.widget.ExpandableListView$OnGroupClickListener)>
SINK|<com.android.providers.contacts.DataRowHandlerForPhoto: boolean update(android.database.sqlite.SQLiteDatabase,com.android.providers.contacts.TransactionContext,android.content.ContentValues,android.database.Cursor,boolean)>
SINK|<android.graphics.drawable.InsetDrawable: void setAlpha(int)>
SINK|<android.content.res.AssetManager: android.content.res.AssetFileDescriptor openNonAssetFd(java.lang.String)>
SINK|<android.widget.ViewAnimator: void setAnimateFirstView(boolean)>
SINK|<com.android.internal.telephony.BaseCommands: void setOnUnsolOemHookRaw(android.os.Handler,int,java.lang.Object)>
SINK|<com.android.internal.telephony.sip.SipPhoneBase: void setOutgoingCallerIdDisplay(int,android.os.Message)>
SINK|<com.android.email.activity.setup.AccountSecurity: android.content.Intent actionDevicePasswordExpirationIntent(android.content.Context,long,boolean)>
SINK|<android.content.IContentService$Stub$Proxy: void notifyChange(android.net.Uri,android.database.IContentObserver,boolean,boolean,int)>
SINK|<gov.nist.javax.sip.message.SIPMessage: void attachHeader(gov.nist.javax.sip.header.SIPHeader,boolean,boolean)>
SINK|<com.android.exchange.provider.ExchangeDirectoryProvider$GalContactRow: void put(java.lang.String,java.lang.Object)>
SINK|<com.android.internal.telephony.PhoneProxy: void setLine1Number(java.lang.String,java.lang.String,android.os.Message)>
SINK|<android.filterfw.core.GLFrame: void setTextureParameter(int,int)>
SINK|<android.view.GLES20Canvas: int saveLayer(android.graphics.RectF,android.graphics.Paint,int)>
SINK|<java.nio.ShortToByteBufferAdapter: java.nio.ShortBuffer put(int,short)>
SINK|<android.os.ParcelFileDescriptor: android.os.ParcelFileDescriptor fromData(byte[],java.lang.String)>
SINK|<android.widget.TabWidget: void setStripEnabled(boolean)>
SINK|<com.google.android.apps.lightcycle.camera.TextureCameraPreview: void setPictureWidth(android.hardware.Camera$Parameters,int)>
SINK|<com.android.bluetooth.Utils: byte[] uuidsToByteArray(android.os.ParcelUuid[])>
SINK|<android.content.Intent: android.content.Intent setTypeAndNormalize(java.lang.String)>
SINK|<com.android.internal.view.IInputMethodSession$Stub$Proxy: void dispatchTrackballEvent(int,android.view.MotionEvent,com.android.internal.view.IInputMethodCallback)>
SINK|<android.net.wifi.SupplicantStateTracker$CompletedState: boolean processMessage(android.os.Message)>
SINK|<android.net.sip.SimpleSessionDescription$Media: void setFormat(java.lang.String,java.lang.String)>
SINK|<com.android.internal.telephony.BaseCommands: void setOnCatSessionEnd(android.os.Handler,int,java.lang.Object)>
SINK|<com.google.android.mms.pdu.PduPart: void setContentType(byte[])>
SINK|<android.media.IAudioService$Stub$Proxy: void playSoundEffect(int)>
SINK|<com.android.internal.widget.PasswordEntryKeyboard: boolean setShifted(boolean)>
SINK|<com.android.calendar.alerts.AlertReceiver: void onReceive(android.content.Context,android.content.Intent)>
SINK|<com.android.server.am.ActivityManagerService: void addErrorToDropBox(java.lang.String,com.android.server.am.ProcessRecord,java.lang.String,com.android.server.am.ActivityRecord,com.android.server.am.ActivityRecord,java.lang.String,java.lang.String,java.io.File,android.app.ApplicationErrorReport$CrashInfo)>
SINK|<java.lang.System: void setErr(java.io.PrintStream)>
SINK|<com.android.internal.view.menu.MenuItemImpl: void setExclusiveCheckable(boolean)>
SINK|<com.android.internal.telephony.RIL: void setCurrentPreferredNetworkType()>
SINK|<android.app.ActivityThread$ApplicationThread: void dumpDbInfo(java.io.FileDescriptor,java.lang.String[])>
SINK|<com.android.calendar.agenda.AgendaWindowAdapter: void setSelectedView(android.view.View)>
SINK|<android.appwidget.AppWidgetManager: void updateAppWidget(android.content.ComponentName,android.widget.RemoteViews)>
SINK|<android.content.SyncManager: void dump(java.io.FileDescriptor,java.io.PrintWriter)>
SINK|<com.android.internal.telephony.RIL: void reportSmsMemoryStatus(boolean,android.os.Message)>
SINK|<com.android.server.CommonTimeManagementService: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
SINK|<android.preference.Preference: boolean persistInt(int)>
SINK|<android.app.ActivityManagerProxy: void removeContentProviderExternal(java.lang.String,android.os.IBinder)>
SINK|<android.inputmethodservice.InputMethodService: void setCandidatesViewShown(boolean)>
SINK|<java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet$UnmodifiableMapEntry: java.lang.Object setValue(java.lang.Object)>
SINK|<android.view.inputmethod.InputMethodInfo: void writeToParcel(android.os.Parcel,int)>
SINK|<android.widget.Chronometer: void setBase(long)>
SINK|<java.security.cert.CertificateRevokedException: void writeObject(java.io.ObjectOutputStream)>
SINK|<gov.nist.javax.sip.stack.SIPDialog: void sendRequest(javax.sip.ClientTransaction,boolean)>
SINK|<com.android.browser.homepages.Template$SimpleEntity: void write(java.io.OutputStream,com.android.browser.homepages.Template$EntityData)>
SINK|<com.android.videoeditor.service.ApiService: void setMediaItemMute(android.content.Context,java.lang.String,java.lang.String,boolean)>
SINK|<android.view.IWindowSession$Stub$Proxy: void onRectangleOnScreenRequested(android.os.IBinder,android.graphics.Rect,boolean)>
SINK|<com.android.internal.view.IInputMethod$Stub$Proxy: void setSessionEnabled(com.android.internal.view.IInputMethodSession,boolean)>
SINK|<com.android.server.EventLogTags: void writeBackupDataChanged(java.lang.String)>
SINK|<android.bluetooth.IBluetoothInputDevice$Stub$Proxy: boolean setProtocolMode(android.bluetooth.BluetoothDevice,int)>
SINK|<com.android.server.wm.WindowManagerService: boolean updateOrientationFromAppTokensLocked(boolean)>
SINK|<android.speech.tts.ITextToSpeechService$Stub$Proxy: int loadLanguage(java.lang.String,java.lang.String,java.lang.String)>
SINK|<android.view.IWindowManager$Stub$Proxy: void setForcedDisplayDensity(int,int)>
SINK|<com.android.server.DevicePolicyManagerService: android.content.ComponentName setGlobalProxy(android.content.ComponentName,java.lang.String,java.lang.String,int)>
SINK|<java.nio.MappedByteBufferAdapter: java.nio.ByteBuffer put(byte)>
SINK|<java.sql.DriverManager: void setLogStream(java.io.PrintStream)>
SINK|<com.android.internal.telephony.ITelephony$Stub$Proxy: boolean handlePinMmi(java.lang.String)>
SINK|<android.widget.QuickContactBadge: void setExcludeMimes(java.lang.String[])>
SINK|<com.android.server.am.ActivityManagerService: android.content.ComponentName startService(android.app.IApplicationThread,android.content.Intent,java.lang.String,int)>
SINK|<com.android.launcher2.PagedViewCellLayout$LayoutParams: void setup(int,int,int,int,int,int)>
SINK|<java.util.concurrent.ThreadPoolExecutor: void afterExecute(java.lang.Runnable,java.lang.Throwable)>
SINK|<android.app.Instrumentation: void execStartActivitiesAsUser(android.content.Context,android.os.IBinder,android.os.IBinder,android.app.Activity,android.content.Intent[],android.os.Bundle,int)>
SINK|<gov.nist.javax.sip.header.InReplyTo: void setCallId(java.lang.String)>
SINK|<android.hardware.Camera$Parameters: void setPictureSize(int,int)>
SINK|<com.android.camera.Storage: boolean updateImage(android.content.ContentResolver,android.net.Uri,java.lang.String,android.location.Location,int,byte[],int,int)>
SINK|<android.preference.DialogPreference: void setNegativeButtonText(int)>
SINK|<com.android.browser.XLargeUi: void setUseQuickControls(boolean)>
SINK|<com.google.android.apps.lightcycle.panorama.LightCycleView: void setLocationProviderEnabled(boolean)>
SINK|<android.accounts.IAccountManager$Stub$Proxy: java.lang.String peekAuthToken(android.accounts.Account,java.lang.String)>
SINK|<android.app.admin.DevicePolicyManager: void setPasswordMinimumUpperCase(android.content.ComponentName,int)>
SINK|<com.google.android.apps.lightcycle.camera.CameraApiProxyAndroidImpl$CameraProxyAndroidImpl: void setPreviewTexture(android.graphics.SurfaceTexture)>
SINK|<com.android.gallery3d.app.PhotoPage: void setSwipingEnabled(boolean)>
SINK|<com.android.internal.telephony.GsmAlphabet: java.lang.String gsm8BitUnpackedToString(byte[],int,int,java.lang.String)>
SINK|<android.renderscript.ProgramVertexFixedFunction: void bindConstants(android.renderscript.ProgramVertexFixedFunction$Constants)>
SINK|<android.os.INetworkManagementService$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>
SINK|<android.view.GLES20DisplayList: void setRotation(float)>
SINK|<libcore.io.BlockGuardOs: java.io.FileDescriptor open(java.lang.String,int,int)>
SINK|<org.apache.http.protocol.HttpService: void setExpectationVerifier(org.apache.http.protocol.HttpExpectationVerifier)>
SINK|<com.android.internal.telephony.sip.SipPhoneBase: void setCallForwardingOption(int,int,java.lang.String,int,android.os.Message)>
SINK|<android.net.http.AndroidHttpClient: java.lang.Object execute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.client.ResponseHandler)>
SINK|<android.inputmethodservice.InputMethodService: void onUpdateSelection(int,int,int,int,int,int)>
SINK|<android.view.View$AccessibilityDelegate: void sendAccessibilityEvent(android.view.View,int)>
SINK|<com.android.inputmethod.latin.LatinImeLogger: void onAddSuggestedWord(java.lang.String,java.lang.String)>
SINK|<android.app.ActivityManagerProxy: boolean finishActivity(android.os.IBinder,int,android.content.Intent)>
SINK|<android.provider.Browser: void saveBookmark(android.content.Context,java.lang.String,java.lang.String)>
SINK|<android.content.pm.ResolveInfo: void dump(android.util.Printer,java.lang.String)>
SINK|<com.android.inputmethod.latin.LocaleUtils: java.util.HashMap localeAndTimeStrToHashMap(java.lang.String)>
SINK|<com.android.vcard.VCardUtils$QuotedPrintableCodecPort: byte[] decodeQuotedPrintable(byte[])>
SINK|<android.mtp.MtpServer: void sendObjectAdded(int)>
SINK|<android.util.Slog: int println(int,java.lang.String,java.lang.String)>
SINK|<gov.nist.javax.sip.header.ims.SecurityAgree: void setEncryptionAlgorithm(java.lang.String)>
SINK|<android.widget.PopupWindow: void update(android.view.View,int,int)>
SINK|<com.android.internal.policy.impl.keyguard.KeyguardWidgetPager: void sendAccessibilityEvent(int)>
SINK|<java.util.logging.Handler: void setLevel(java.util.logging.Level)>
SINK|<java.util.zip.CRC32: void update(byte[])>
SINK|<com.android.launcher2.LauncherAppWidgetInfo: void notifyWidgetSizeChanged(com.android.launcher2.Launcher)>
SINK|<org.apache.harmony.security.x509.Extension: void dumpValue(java.lang.StringBuilder,java.lang.String)>
SINK|<com.android.internal.telephony.ITelephony$Stub$Proxy: boolean supplyPuk(java.lang.String,java.lang.String)>
SINK|<android.media.IAudioService$Stub$Proxy: void setStreamMute(int,boolean,android.os.IBinder)>
SINK|<android.location.LocationManager: void requestSingleUpdate(android.location.Criteria,android.app.PendingIntent)>
SINK|<org.kxml2.io.KXmlParser: void setInput(java.io.InputStream,java.lang.String)>
SINK|<android.app.ISearchManager$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>
SINK|<com.android.internal.telephony.BaseCommands: void setOnSmsOnSim(android.os.Handler,int,java.lang.Object)>
SINK|<android.net.http.AndroidHttpClient: java.lang.Object execute(org.apache.http.client.methods.HttpUriRequest,org.apache.http.client.ResponseHandler,org.apache.http.protocol.HttpContext)>
SINK|<android.view.ViewRootImpl$TakenSurfaceHolder: void setFixedSize(int,int)>
SINK|<android.content.ContextWrapper: void sendStickyBroadcastAsUser(android.content.Intent,android.os.UserHandle)>
SINK|<com.android.nfc.P2pLinkManager: boolean handleMessage(android.os.Message)>
SINK|<com.android.internal.telephony.cdma.CDMAPhone: void notifyNewRingingConnection(com.android.internal.telephony.Connection)>
SINK|<org.apache.harmony.xnet.provider.jsse.SSLSocketImpl: void setWantClientAuth(boolean)>
SINK|<com.google.android.mms.pdu.NotifyRespInd: void setStatus(int)>
SINK|<com.android.nfc.P2pLinkManager: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
SINK|<android.media.IAudioService$Stub$Proxy: boolean shouldVibrate(int)>
SINK|<com.android.internal.widget.TransportControlView$IRemoteControlDisplayWeak: void setMetadata(int,android.os.Bundle)>
SINK|<org.apache.harmony.xnet.provider.jsse.SSLSocketImpl: void setNeedClientAuth(boolean)>
SINK|<gov.nist.javax.sip.SipProviderImpl: void sendRequest(javax.sip.message.Request)>
SINK|<java.util.Locale: void setDefault(java.util.Locale)>
SINK|<com.android.internal.telephony.cdma.CdmaSMSDispatcher: int dispatchMessage(com.android.internal.telephony.SmsMessageBase)>
SINK|<gov.nist.javax.sip.header.AuthenticationHeader: void setIK(java.lang.String)>
SINK|<org.apache.http.client.HttpClient: org.apache.http.HttpResponse execute(org.apache.http.client.methods.HttpUriRequest)>
SINK|<gov.nist.core.ParserCore: void dbg_enter(java.lang.String)>
SINK|<android.os.Bundle: void writeToParcel(android.os.Parcel,int)>
SINK|<org.apache.harmony.security.x501.AttributeTypeAndValue$1: void setEncodingContent(org.apache.harmony.security.asn1.BerOutputStream)>
SINK|<android.os.INetworkManagementService$Stub$Proxy: void setInterfaceIpv6PrivacyExtensions(java.lang.String,boolean)>
SINK|<android.widget.AbsListView: void setScrollIndicators(android.view.View,android.view.View)>
SINK|<gov.nist.javax.sip.header.ims.PAccessNetworkInfo: void setValue(java.lang.String)>
SINK|<android.security.Credentials: void install(android.content.Context,java.lang.String,byte[])>
SINK|<android.test.mock.MockContext: void sendOrderedBroadcast(android.content.Intent,java.lang.String,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>
SINK|<java.io.EmulatedFieldsForDumping: void put(java.lang.String,java.lang.Object)>
SINK|<android.widget.FrameLayout: void setForegroundGravity(int)>
SINK|<com.android.internal.policy.impl.PhoneWindowManager: void setUserRotationMode(int,int)>
SINK|<com.android.videoeditor.service.ApiService: void setOverlayUserAttributes(android.content.Context,java.lang.String,java.lang.String,java.lang.String,android.os.Bundle)>
SINK|<android.text.format.Time: boolean parse(java.lang.String)>
SINK|<android.net.wifi.WifiConfigStore: boolean enableNetworkWithoutBroadcast(int,boolean)>
SINK|<com.android.server.pm.PackageManagerService$ActivityIntentResolver: void dumpFilter(java.io.PrintWriter,java.lang.String,android.content.pm.PackageParser$ActivityIntentInfo)>
SINK|<com.android.exchange.EasOutboxService: int sendMessage(java.io.File,long)>
SINK|<android.bluetooth.BluetoothA2dp: boolean setPriority(android.bluetooth.BluetoothDevice,int)>
SINK|<com.android.server.sip.SipHelper: javax.sip.ServerTransaction sendInviteOk(javax.sip.RequestEvent,android.net.sip.SipProfile,java.lang.String,javax.sip.ServerTransaction,java.lang.String,int)>
SINK|<org.xml.sax.helpers.XMLReaderAdapter: void parse(java.lang.String)>
SINK|<android.app.FragmentManagerImpl: boolean dispatchCreateOptionsMenu(android.view.Menu,android.view.MenuInflater)>
SINK|<com.google.android.mms.pdu.AcknowledgeInd: void setTransactionId(byte[])>
SINK|<android.hardware.Camera$Parameters: void setPreviewSize(int,int)>
SINK|<junit.runner.BaseTestRunner: void setLoading(boolean)>
SINK|<android.os.IPowerManager$Stub$Proxy: void userActivity(long,int,int)>
SINK|<android.test.InstrumentationTestCase: android.app.Activity launchActivityWithIntent(java.lang.String,java.lang.Class,android.content.Intent)>
SINK|<android.widget.TextView: void setHintTextColor(int)>
SINK|<javax.xml.transform.dom.DOMResult: void setNode(org.w3c.dom.Node)>
SINK|<java.security.cert.PKIXParameters: void setTargetCertConstraints(java.security.cert.CertSelector)>
SINK|<com.android.server.am.AppBindRecord: void dumpInIntentBind(java.io.PrintWriter,java.lang.String)>
SINK|<edu.wayne.cs.ParentClass: void sink(java.lang.String)>
SINK|<com.android.contacts.voicemail.VoicemailPlaybackFragment$PlaybackViewImpl: void setPositionSeekListener(android.widget.SeekBar$OnSeekBarChangeListener)>
SINK|<com.android.nfc.NfcService: void onSeMifareAccess(byte[])>
SINK|<com.android.launcher2.DragView: void setColor(int)>
SINK|<java.security.cert.X509CRLSelector: void setIssuerNames(java.util.Collection)>
SINK|<org.apache.harmony.xnet.provider.jsse.DigitalSignature: void update(byte[])>
SINK|<com.android.launcher2.CellLayout$ItemConfiguration: void add(android.view.View,com.android.launcher2.CellLayout$CellAndSpan)>
SINK|<android.os.storage.IMountService$Stub$Proxy: void unregisterListener(android.os.storage.IMountServiceListener)>
SINK|<org.apache.harmony.security.x509.NameConstraints: void dumpValue(java.lang.StringBuilder,java.lang.String)>
SINK|<org.xml.sax.helpers.XMLReaderAdapter: void parse(org.xml.sax.InputSource)>
SINK|<com.android.nfc.handover.HandoverService: void createHandoverTransfer(com.android.nfc.handover.PendingHandoverTransfer)>
SINK|<android.view.IWindowManager$Stub$Proxy: void setInTouchMode(boolean)>
SINK|<android.app.ContextImpl: boolean bindService(android.content.Intent,android.content.ServiceConnection,int,int)>
SINK|<android.content.ContentProviderProxy: int bulkInsert(android.net.Uri,android.content.ContentValues[])>
SINK|<android.net.DummyDataStateTracker: boolean setRadio(boolean)>
SINK|<android.media.IRemoteControlDisplay$Stub$Proxy: void setPlaybackState(int,int,long)>
SINK|<android.content.SyncResult: void writeToParcel(android.os.Parcel,int)>
SINK|<javax.xml.transform.TransformerException: void setLocator(javax.xml.transform.SourceLocator)>
SINK|<android.view.View: void setPadding(int,int,int,int)>
SINK|<com.google.android.mms.pdu.NotifyRespInd: void setTransactionId(byte[])>
SINK|<android.view.View: void setTag(java.lang.Object)>
SINK|<com.google.android.mms.pdu.PduBody: void addPart(int,com.google.android.mms.pdu.PduPart)>
SINK|<android.widget.ZoomButton: void setZoomSpeed(long)>
SINK|<java.time.format.DateTimeFormatter: java.time.temporal.TemporalAccessor parse(java.lang.CharSequence,java.text.ParsePosition)>
SINK|<android.bluetooth.IBluetoothPan$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>
SINK|<android.graphics.drawable.RotateDrawable: void setAlpha(int)>
SINK|<com.android.server.PreferredComponent: void dump(java.io.PrintWriter,java.lang.String,java.lang.Object)>
SINK|<com.android.server.net.NetworkStatsRecorder: void setPersistThreshold(long)>
SINK|<com.android.internal.telephony.gsm.GsmSMSDispatcher: int processMessagePart(byte[],java.lang.String,int,int,int,long,int,boolean)>
SINK|<android.widget.ListPopupWindow: void setSoftInputMode(int)>
SINK|<android.app.Activity: void setImmersive(boolean)>
SINK|<android.test.mock.MockContext: void setWallpaper(android.graphics.Bitmap)>
SINK|<android.appwidget.AppWidgetHostView: void setUserId(int)>
SINK|<android.view.IDisplayContentChangeListener$Stub$Proxy: void onRotationChanged(int)>
SINK|<com.android.email.Controller: boolean isMessagingController(long)>
SINK|<java.net.URLStreamHandler: void setURL(java.net.URL,java.lang.String,java.lang.String,int,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>
SINK|<android.text.BoringLayout: android.text.BoringLayout replaceOrMake(java.lang.CharSequence,android.text.TextPaint,int,android.text.Layout$Alignment,float,float,android.text.BoringLayout$Metrics,boolean)>
SINK|<com.android.internal.telephony.PhoneProxy: void setPreferredNetworkType(int,android.os.Message)>
SINK|<android.webkit.ZoomManager: void onFirstLayout(android.webkit.WebViewCore$DrawData)>
SINK|<com.android.wallpaper.galaxy.GalaxyRS: void setOffset(float,float,int,int)>
SINK|<android.support.v4.net.TrafficStatsCompatIcs: void setThreadStatsTag(int)>
SINK|<android.os.storage.IMountService$Stub$Proxy: void setUsbMassStorageEnabled(boolean)>
SINK|<com.android.server.LocationManagerService: void removeTestProvider(java.lang.String)>
SINK|<java.security.Provider$Service: void putAttribute(java.lang.String,java.lang.String)>
SINK|<gov.nist.javax.sip.header.ims.SecurityAgree: void setPreference(float)>
SINK|<com.android.server.am.ActivityManagerService: void setPackageScreenCompatMode(java.lang.String,int)>
SINK|<com.android.gallery3d.app.AlbumSetPage: void doCluster(int)>
SINK|<android.graphics.Matrix: void setRotate(float)>
SINK|<com.android.gallery3d.filtershow.ui.FramedTextButton: void setTextFrom(int)>
SINK|<android.view.InputFilter: void sendInputEvent(android.view.InputEvent,int)>
SINK|<java.nio.charset.CoderResult: java.nio.charset.CoderResult malformedForLength(int)>
SINK|<android.telephony.ServiceState: void setStateOff()>
SINK|<android.widget.TextView: void setMarqueeRepeatLimit(int)>
SINK|<android.app.ActivityManagerProxy: boolean isIntentSenderTargetedToPackage(android.content.IIntentSender)>
SINK|<com.android.internal.view.menu.MenuItemImpl: android.view.MenuItem setEnabled(boolean)>
SINK|<android.widget.ListView: void setSelectionInt(int)>
SINK|<org.apache.http.impl.conn.ProxySelectorRoutePlanner: void setProxySelector(java.net.ProxySelector)>
SINK|<java.text.SimpleDateFormat: java.util.Date parse(java.lang.String,java.text.ParsePosition)>
SINK|<com.android.providers.downloads.DownloadInfo: void notifyPauseDueToSize(boolean)>
SINK|<com.google.android.mms.pdu.RetrieveConf: void setFrom(com.google.android.mms.pdu.EncodedStringValue)>
SINK|<android.view.AbsSavedState: void writeToParcel(android.os.Parcel,int)>
SINK|<java.lang.invoke.MethodHandles: java.lang.invoke.MethodHandle setCachedMethodHandle(java.lang.invoke.MethodHandle[],int,java.lang.invoke.MethodHandle)>
SINK|<java.net.Socks4Message: void setUserId(java.lang.String)>
SINK|<android.support.v4.view.ViewPager: void draw(android.graphics.Canvas)>
SINK|<android.location.ILocationManager$Stub$Proxy: boolean providerMeetsCriteria(java.lang.String,android.location.Criteria)>
SINK|<android.location.ILocationManager$Stub$Proxy: void setTestProviderStatus(java.lang.String,int,android.os.Bundle,long)>
SINK|<android.app.admin.IDevicePolicyManager$Stub$Proxy: void setPasswordMinimumUpperCase(android.content.ComponentName,int,int)>
SINK|<android.webkit.MockGeolocation: void setPermission(boolean)>
SINK|<android.widget.GridLayout: void setColumnOrderPreserved(boolean)>
SINK|<android.widget.TextView: void setCompoundDrawablesWithIntrinsicBounds(int,int,int,int)>
SINK|<android.accessibilityservice.AccessibilityService: boolean bindService(android.content.Intent,android.content.ServiceConnection,int)>
SINK|<gov.nist.javax.sip.header.ims.Privacy: void setValue(java.lang.String)>
SINK|<com.android.systemui.statusbar.phone.NavigationBarView: void setLowProfile(boolean)>
SINK|<android.view.GLES20DisplayList: void setCameraDistance(float)>
SINK|<com.android.contacts.group.GroupEditorFragment: void loadMemberToAddToGroup(long,java.lang.String)>
SINK|<android.webkit.WebViewClassic: void setLayoutParams(android.view.ViewGroup$LayoutParams)>
SINK|<android.widget.RemoteViews: void setTextViewCompoundDrawables(int,int,int,int,int)>
SINK|<com.android.server.am.ActivityManagerService: void ensurePackageDexOpt(java.lang.String)>
SINK|<java.lang.Long: long parseLong(java.lang.String)>
SINK|<com.android.internal.widget.multiwaveview.TargetDrawable: void setDrawable(android.content.res.Resources,int)>
SINK|<com.android.internal.telephony.IccSmsInterfaceManagerProxy: boolean enableCellBroadcast(int)>
SINK|<com.android.server.DevicePolicyManagerService: void setActivePasswordState(int,int,int,int,int,int,int,int,int)>
SINK|<android.net.LinkProperties: void writeToParcel(android.os.Parcel,int)>
SINK|<android.widget.CompoundButton: void setChecked(boolean)>
SINK|<android.net.wifi.WifiWatchdogStateMachine$OnlineWatchState: boolean processMessage(android.os.Message)>
SINK|<com.android.server.am.ActivityManagerService: boolean clearApplicationUserData(java.lang.String,android.content.pm.IPackageDataObserver,int)>
SINK|<android.net.wifi.WifiStateTracker: void setTeardownRequested(boolean)>
SINK|<android.widget.TextView: void setSpan_internal(java.lang.Object,int,int,int)>
SINK|<android.accessibilityservice.IAccessibilityServiceConnection$Stub$Proxy: void setServiceInfo(android.accessibilityservice.AccessibilityServiceInfo)>
SINK|<android.content.Context: boolean bindService(android.content.Intent,android.content.ServiceConnection,int,int)>
SINK|<com.android.server.DevicePolicyManagerService: void setPasswordMinimumSymbols(android.content.ComponentName,int,int)>
SINK|<android.app.Activity: void startIntentSenderForResult(android.content.IntentSender,int,android.content.Intent,int,int,int)>
SINK|<java.time.Instant: java.time.Instant truncatedTo(java.time.temporal.TemporalUnit)>
SINK|<android.database.CursorWindow: boolean setNumColumns(int)>
SINK|<android.app.Notification: void writeToParcel(android.os.Parcel,int)>
SINK|<android.widget.TableLayout: void setStretchAllColumns(boolean)>
SINK|<android.app.ActivityManagerProxy: void noteWakeupAlarm(android.content.IIntentSender)>
SINK|<android.widget.ListView: void setAdapter(android.widget.Adapter)>
SINK|<com.android.camera.ui.InLineSettingItem: void setTitle(com.android.camera.ListPreference)>
SINK|<java.net.DatagramSocket: void bind(java.net.SocketAddress)>
SINK|<com.android.internal.telephony.BaseCommands: void setOnNITZTime(android.os.Handler,int,java.lang.Object)>
SINK|<android.database.BulkCursorNative: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>
SINK|<javax.xml.parsers.DocumentBuilderFactory: void setIgnoringComments(boolean)>
SINK|<com.android.providers.media.IMtpService$Stub$Proxy: void sendObjectAdded(int)>
SINK|<android.media.audiofx.AudioEffect: int setParameter(int[],byte[])>
SINK|<java.util.AbstractList$SubAbstractList$SubAbstractListIterator: void set(java.lang.Object)>
SINK|<com.android.server.LightsService$Light: void setBrightness(int)>
SINK|<android.net.INetworkPolicyManager$Stub$Proxy: void unregisterListener(android.net.INetworkPolicyListener)>
SINK|<com.google.android.mms.pdu.SendConf: void setTransactionId(byte[])>
SINK|<android.telephony.SmsManager: boolean deleteMessageFromIcc(int)>
SINK|<com.android.internal.telephony.test.SimulatedCommands: void setCallForward(int,int,int,java.lang.String,int,android.os.Message)>
SINK|<android.app.Fragment: void startActivity(android.content.Intent,android.os.Bundle)>
SINK|<java.time.zone.ZoneOffsetTransition: java.lang.Object writeReplace()>
SINK|<com.android.providers.contacts.ContactsProvider2: android.net.Uri insertInTransaction(android.net.Uri,android.content.ContentValues)>
SINK|<com.android.internal.telephony.sip.SipCommandInterface: void setFacilityLockForApp(java.lang.String,boolean,java.lang.String,int,java.lang.String,android.os.Message)>
SINK|<com.android.nfc.NfcService$TagService: android.nfc.Tag rediscover(int)>
SINK|<com.android.internal.appwidget.IAppWidgetService$Stub$Proxy: void partiallyUpdateAppWidgetIds(int[],android.widget.RemoteViews)>
SINK|<com.android.browser.widget.BookmarkThumbnailWidgetService: void changeFolder(android.content.Context,android.content.Intent)>
SINK|<org.ccil.cowan.tagsoup.Parser: void setFeature(java.lang.String,boolean)>
SINK|<android.widget.PopupWindow$PopupViewContainer: boolean dispatchKeyEvent(android.view.KeyEvent)>
SINK|<android.os.CommonTimeConfig: int setMasterElectionEndpoint(java.net.InetSocketAddress)>
SINK|<com.android.server.am.ServiceRecord: void dumpStartList(java.io.PrintWriter,java.lang.String,java.util.List,long)>
SINK|<com.android.server.connectivity.Tethering$TetherMasterSM$TetherModeAliveState: boolean processMessage(android.os.Message)>
SINK|<android.net.ConnectivityManager: void setDataDependency(int,boolean)>
SINK|<libcore.net.UriCodec: java.lang.String decode(java.lang.String,boolean,java.nio.charset.Charset,boolean)>
SINK|<gov.nist.javax.sip.stack.TCPMessageChannel: void processMessage(gov.nist.javax.sip.message.SIPMessage)>
SINK|<com.android.launcher2.AppsCustomizeTabHost: void setCurrentTabFromContent(com.android.launcher2.AppsCustomizePagedView$ContentType)>
SINK|<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setTitle(int)>
SINK|<java.security.cert.PKIXParameters: void setPolicyMappingInhibited(boolean)>
SINK|<com.android.contacts.widget.PinnedHeaderListView: void setFadingHeader(int,int,boolean)>
SINK|<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessRecord startProcessLocked(java.lang.String,android.content.pm.ApplicationInfo,boolean,int,java.lang.String,android.content.ComponentName,boolean,boolean)>
SINK|<android.os.Binder: void dumpAsync(java.io.FileDescriptor,java.lang.String[])>
SINK|<com.android.internal.telephony.sip.SipPhoneBase: void setRadioPower(boolean)>
SINK|<com.android.server.display.LocalDisplayAdapter$LocalDisplayDevice: void dumpLocked(java.io.PrintWriter)>
SINK|<com.android.email.activity.UIControllerBase: void onSearchSubmit(java.lang.String)>
SINK|<android.media.audiofx.EnvironmentalReverb: void setDiffusion(short)>
SINK|<com.android.internal.telephony.PhoneProxy: com.android.internal.telephony.Connection dial(java.lang.String)>
SINK|<android.view.View: void setVisibility(int)>
SINK|<com.android.email.service.AttachmentDownloadService: void addServiceIntentForTest(long,android.content.Intent)>
SINK|<com.android.contacts.model.dataitem.StructuredNameDataItem: void setPhoneticFamilyName(java.lang.String)>
SINK|<com.android.internal.telephony.IWapPushManager$Stub$Proxy: boolean addPackage(java.lang.String,java.lang.String,java.lang.String,java.lang.String,int,boolean,boolean)>
SINK|<gov.nist.javax.sip.stack.SIPServerTransaction: void setState(javax.sip.TransactionState)>
SINK|<java.nio.IntToByteBufferAdapter: java.nio.IntBuffer put(int[],int,int)>
SINK|<android.net.wifi.p2p.WifiP2pWfdInfo: void setCoupledSinkSupportAtSource(boolean)>
SINK|<java.text.SimpleDateFormat: void setDateFormatSymbols(java.text.DateFormatSymbols)>
SINK|<com.android.server.usb.UsbService: boolean hasAccessoryPermission(android.hardware.usb.UsbAccessory)>
SINK|<com.android.browser.view.PieItem: void setAlpha(float)>
SINK|<java.sql.Date: void setSeconds(int)>
SINK|<android.widget.ZoomControls: void setIsZoomOutEnabled(boolean)>
SINK|<android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoStubImpl: void setSource(java.lang.Object,android.view.View,int)>
SINK|<android.net.wifi.WifiStateTracker: void setUserDataEnable(boolean)>
SINK|<com.android.internal.os.BatteryStatsImpl$SamplingTimer: void writeToParcel(android.os.Parcel,long)>
SINK|<android.content.pm.IPackageManager$Stub$Proxy: boolean setInstallLocation(int)>
SINK|<com.android.internal.telephony.cdma.CdmaCallTracker: com.android.internal.telephony.Connection dial(java.lang.String,int)>
SINK|<android.content.pm.ComponentInfo: void writeToParcel(android.os.Parcel,int)>
SINK|<android.widget.Spinner: void setPopupBackgroundResource(int)>
SINK|<com.android.internal.util.AsyncChannel: android.os.Message sendMessageSynchronously(int,int)>
SINK|<com.android.server.power.PowerManagerService: void setTemporaryScreenAutoBrightnessAdjustmentSettingOverride(float)>
SINK|<com.google.common.collect.Serialization$FieldSetter: void set(java.lang.Object,int)>
SINK|<dalvik.system.VMDebug: void startMethodTracing(java.lang.String,int,int)>
SINK|<android.os.INetworkManagementService$Stub$Proxy: void startTethering(java.lang.String[])>
SINK|<org.apache.http.impl.auth.DigestScheme: void overrideParamter(java.lang.String,java.lang.String)>
SINK|<android.location.ILocationManager$Stub$Proxy: void requestLocationUpdates(android.location.LocationRequest,android.location.ILocationListener,android.app.PendingIntent,java.lang.String)>
SINK|<android.inputmethodservice.InputMethodService: boolean sendDefaultEditorAction(boolean)>
SINK|<com.android.inputmethod.latin.LocaleUtils: java.util.Locale constructLocaleFromString(java.lang.String)>
SINK|<org.xml.sax.helpers.ParserAdapter: void parse(org.xml.sax.InputSource)>
SINK|<com.android.internal.telephony.cdma.CDMALTEPhone: void setCdmaSubscription(int,android.os.Message)>
SINK|<android.app.ActivityThread$EventLoggingReporter: void report(int,java.lang.Object[])>
SINK|<com.android.server.EventLogTags: void writeFreeStorageChanged(long)>
SINK|<org.xml.sax.helpers.NamespaceSupport: void setNamespaceDeclUris(boolean)>
SINK|<com.android.contacts.group.GroupEditorFragment$Member: void writeToParcel(android.os.Parcel,int)>
SINK|<gov.nist.javax.sip.header.ims.PServedUser: void setSessionCase(java.lang.String)>
SINK|<com.android.internal.telephony.ITelephonyRegistry$Stub$Proxy: void notifySignalStrength(android.telephony.SignalStrength)>
SINK|<android.view.animation.AnimationSet: void setStartOffset(long)>
SINK|<android.app.ActivityManagerProxy: boolean moveActivityTaskToBack(android.os.IBinder,boolean)>
SINK|<com.android.internal.os.BatteryStatsImpl: void setNumSpeedSteps(int)>
SINK|<android.test.mock.MockCursor: boolean updateLong(int,long)>
SINK|<com.android.systemui.statusbar.CommandQueue: void setNavigationIconHints(int)>
SINK|<android.location.LocationManager: void setTestProviderStatus(java.lang.String,int,android.os.Bundle,long)>
SINK|<com.android.server.ConnectivityService: boolean setRadios(boolean)>
SINK|<com.android.videoeditor.widgets.OverlayLinearLayout$1: boolean onSingleTapConfirmed(android.view.View,int,android.view.MotionEvent)>
SINK|<android.support.v4.view.accessibility.AccessibilityNodeInfoCompatIcs: void setParent(java.lang.Object,android.view.View)>
SINK|<com.android.email.mail.transport.MailTransport: void setSoTimeout(int)>
SINK|<java.net.Socket: void setSoLinger(boolean,int)>
SINK|<java.io.RandomAccessFile: void write(byte[],int,int)>
SINK|<org.apache.http.message.AbstractHttpMessage: void setHeader(java.lang.String,java.lang.String)>
SINK|<android.preference.CheckBoxPreference: void setSummaryOff(java.lang.CharSequence)>
SINK|<com.android.server.am.ActiveServices$ServiceMap: void putServiceByIntent(android.content.Intent$FilterComparison,int,com.android.server.am.ServiceRecord)>
SINK|<com.android.exchange.adapter.CalendarSyncAdapter: void sendSyncOptions(java.lang.Double,com.android.exchange.adapter.Serializer,boolean)>
SINK|<android.app.backup.IFullBackupRestoreObserver$Stub$Proxy: void onRestorePackage(java.lang.String)>
SINK|<android.appwidget.AppWidgetManager: boolean bindAppWidgetIdIfAllowed(int,android.content.ComponentName,android.os.Bundle)>
SINK|<android.app.ActivityThread$H: void handleMessage(android.os.Message)>
SINK|<com.android.bluetooth.btservice.RemoteDevices: void deviceFoundCallback(byte[])>
SINK|<android.widget.AbsListView: boolean performItemClick(android.view.View,int,long)>
SINK|<java.nio.MappedByteBufferAdapter: java.nio.ByteBuffer putFloat(float)>
SINK|<com.android.calendar.month.MonthByWeekFragment: void setMonthDisplayed(android.text.format.Time,boolean)>
SINK|<com.android.server.pm.PackageManagerService: void setApplicationEnabledSetting(java.lang.String,int,int,int)>
SINK|<java.text.DateFormat: void setNumberFormat(java.text.NumberFormat)>
SINK|<android.location.Location: void setLongitude(double)>
SINK|<android.widget.HorizontalScrollView: void draw(android.graphics.Canvas)>
SINK|<android.bluetooth.IBluetoothManager$Stub$Proxy: void unregisterAdapter(android.bluetooth.IBluetoothManagerCallback)>
SINK|<org.apache.harmony.xnet.provider.jsse.SSLSocketWrapper: void setReuseAddress(boolean)>
SINK|<com.android.internal.telephony.RIL: void sendTerminalResponse(java.lang.String,android.os.Message)>
SINK|<java.net.PlainSocketImpl: void setOption(int,java.lang.Object)>
SINK|<android.content.Intent: void writeToParcel(android.os.Parcel,int)>
SINK|<android.os.INetworkManagementService$Stub$Proxy: void startAccessPoint(android.net.wifi.WifiConfiguration,java.lang.String)>
SINK|<gov.nist.javax.sip.header.extensions.References: void setValue(java.lang.String)>
SINK|<android.widget.AbsListView: boolean performAccessibilityAction(int,android.os.Bundle)>
SINK|<android.location.Criteria: void setBearingAccuracy(int)>
SINK|<libcore.io.ForwardingOs: void setsockoptByte(java.io.FileDescriptor,int,int,int)>
SINK|<android.view.inputmethod.InputConnectionWrapper: void setTarget(android.view.inputmethod.InputConnection)>
SINK|<com.android.emailcommon.service.IEmailServiceCallback$Stub$Proxy: void syncMailboxListStatus(long,int,int)>
SINK|<android.media.AudioService: int setBluetoothA2dpDeviceConnectionState(android.bluetooth.BluetoothDevice,int)>
SINK|<com.adobe.xmp.impl.XMPMetaImpl: void setPropertyInteger(java.lang.String,java.lang.String,int)>
SINK|<com.android.internal.util.StateMachine: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
SINK|<com.android.server.am.CompatModePackages: void setFrontActivityScreenCompatModeLocked(int)>
SINK|<com.android.internal.telephony.WapPushOverSms: int dispatchWapPdu(byte[])>
SINK|<com.android.inputmethod.latin.LatinIME: void setCandidatesView(android.view.View)>
SINK|<org.apache.http.impl.cookie.BasicClientCookie: void setDomain(java.lang.String)>
SINK|<libcore.net.http.HttpsURLConnectionImpl: void setAllowUserInteraction(boolean)>
SINK|<android.content.res.Resources$Theme: void dump(int,java.lang.String,java.lang.String)>
SINK|<android.nfc.tech.MifareClassic: void setTimeout(int)>
SINK|<libcore.io.Posix: int write(java.io.FileDescriptor,java.nio.ByteBuffer)>
SINK|<android.database.BulkCursorProxy: android.os.Bundle respond(android.os.Bundle)>
SINK|<android.media.audiofx.BassBoost: void setProperties(android.media.audiofx.BassBoost$Settings)>
SINK|<com.android.internal.telephony.SmsHeader: byte[] toByteArray(com.android.internal.telephony.SmsHeader)>
SINK|<android.net.wifi.SupplicantStateTracker$HandshakeState: boolean processMessage(android.os.Message)>
SINK|<java.util.concurrent.ConcurrentHashMap: java.lang.Object replace(java.lang.Object,java.lang.Object)>
SINK|<com.android.internal.telephony.cdma.CDMAPhone: void startDtmf(char)>
SINK|<android.util.Slog: int w(java.lang.String,java.lang.Throwable)>
SINK|<android.nfc.tech.NfcA: void setTimeout(int)>
SINK|<com.android.server.accessibility.ScreenMagnifier$Viewport$ViewportWindow: void setBounds(android.graphics.Rect)>
SINK|<com.android.internal.backup.IBackupTransport$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>
SINK|<java.time.MonthDay: java.time.MonthDay parse(java.lang.CharSequence)>
SINK|<com.android.server.am.IntentBindRecord: void dump(java.io.PrintWriter,java.lang.String)>
SINK|<com.android.exchange.EasSyncService: com.android.exchange.EasResponse sendHttpClientPost(java.lang.String,byte[])>
SINK|<com.android.camera.PhotoController: void setCameraId(int)>
SINK|<com.google.android.mms.pdu.SendConf: void setMessageId(byte[])>
SINK|<java.net.HttpURLConnection: void setRequestMethod(java.lang.String)>
SINK|<android.widget.AdapterView: void setFocusable(boolean)>
SINK|<libcore.net.http.HttpsURLConnectionImpl: void setRequestMethod(java.lang.String)>
SINK|<java.nio.MappedByteBufferAdapter: java.nio.ByteBuffer putShort(int,short)>
SINK|<android.app.Dialog: void setFeatureDrawable(int,android.graphics.drawable.Drawable)>
SINK|<gov.nist.core.LexerCore: void addKeyword(java.lang.String,int)>
SINK|<android.app.ActivityThread$ApplicationThread: void dumpActivity(java.io.FileDescriptor,android.os.IBinder,java.lang.String,java.lang.String[])>
SINK|<com.android.server.pm.Settings: com.android.server.pm.PackageSetting enableSystemPackageLPw(java.lang.String)>
SINK|<android.view.IInputFilterHost$Stub$Proxy: void sendInputEvent(android.view.InputEvent,int)>
SINK|<com.android.providers.contacts.DataRowHandlerForStructuredName: boolean update(android.database.sqlite.SQLiteDatabase,com.android.providers.contacts.TransactionContext,android.content.ContentValues,android.database.Cursor,boolean)>
SINK|<com.android.internal.telephony.RIL: void deactivateDataCall(int,int,android.os.Message)>
SINK|<libcore.net.http.HttpConnection: void setupSecureSocket(javax.net.ssl.SSLSocketFactory,boolean)>
SINK|<com.android.inputmethod.keyboard.MoreKeysKeyboardView: void setKeyboard(com.android.inputmethod.keyboard.Keyboard)>
SINK|<org.ccil.cowan.tagsoup.ElementType: void setAttribute(org.ccil.cowan.tagsoup.AttributesImpl,java.lang.String,java.lang.String,java.lang.String)>
SINK|<android.net.IConnectivityManager$Stub$Proxy: boolean requestRouteToHostAddress(int,byte[])>
SINK|<android.media.videoeditor.Overlay: void setUserAttribute(java.lang.String,java.lang.String)>
SINK|<com.android.gallery3d.app.StitchingProgressManager$UpdateProgressCallback: void onProgress(java.lang.String,android.net.Uri,int)>
SINK|<com.android.mms.transaction.MessagingNotification: void notifySendFailed(android.content.Context)>
SINK|<android.widget.PopupWindow: void update(int,int)>
SINK|<android.view.View: void setScrollContainer(boolean)>
SINK|<android.app.Instrumentation: void runOnMainSync(java.lang.Runnable)>
SINK|<com.android.phone.ManageConferenceUtils: void updateManageConferenceRow(int,com.android.internal.telephony.Connection,boolean)>
SINK|<com.android.server.pm.PackageManagerService: void extendVerificationTimeout(int,int,long)>
SINK|<android.graphics.drawable.LayerDrawable: void setColorFilter(android.graphics.ColorFilter)>
SINK|<com.android.server.AppWidgetServiceImpl: void notifyAppWidgetViewDataChanged(int[],int)>
SINK|<android.inputmethodservice.SoftInputWindow: void setGravity(int)>
SINK|<com.android.server.UiModeManagerService: void enableCarMode(int)>
SINK|<android.webkit.WebSettings: void setUserAgentString(java.lang.String)>
SINK|<android.os.storage.StorageManager$MountServiceBinderListener: void onUsbMassStorageConnectionChanged(boolean)>
SINK|<java.text.DecimalFormat: void setMaximumFractionDigits(int)>
SINK|<com.android.gallery3d.app.SinglePhotoDataAdapter: void setCurrentPhoto(com.android.gallery3d.data.Path,int)>
SINK|<com.android.internal.telephony.ITelephonyRegistry$Stub$Proxy: void notifyDataConnectionFailed(java.lang.String,java.lang.String)>
SINK|<android.graphics.SurfaceTexture: void setDefaultBufferSize(int,int)>
SINK|<android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoStubImpl: void setEnabled(java.lang.Object,boolean)>
SINK|<gov.nist.javax.sip.address.SipUri: void setSecure(boolean)>
SINK|<com.android.server.TelephonyRegistry: void notifyServiceState(android.telephony.ServiceState)>
SINK|<android.preference.DialogPreference: void setDialogMessage(java.lang.CharSequence)>
SINK|<org.apache.http.conn.params.ConnRouteParamBean: void setDefaultProxy(org.apache.http.HttpHost)>
SINK|<java.lang.invoke.MethodHandle: java.lang.invoke.MethodHandle setVarargs(java.lang.invoke.MemberName)>
SINK|<android.animation.ObjectAnimator: void setIntValues(int[])>
SINK|<android.database.BulkCursorProxy: int requery(android.database.IContentObserver)>
SINK|<android.hardware.usb.IUsbManager$Stub$Proxy: void setDevicePackage(android.hardware.usb.UsbDevice,java.lang.String,int)>
SINK|<android.content.ContextWrapper: boolean startInstrumentation(android.content.ComponentName,java.lang.String,android.os.Bundle)>
SINK|<com.android.internal.view.IInputMethodManager$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>
SINK|<android.location.LocationManager: void requestLocationUpdates(java.lang.String,long,float,android.location.LocationListener,android.os.Looper)>
SINK|<com.google.common.base.CharMatcher$Or: void setBits(com.google.common.base.CharMatcher$LookupTable)>
SINK|<java.util.Properties: void storeToXML(java.io.OutputStream,java.lang.String,java.lang.String)>
SINK|<android.widget.AutoCompleteTextView: void setDropDownAnchor(int)>
SINK|<com.android.server.power.DisplayPowerController: void dump(java.io.PrintWriter)>
SINK|<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessRecord addAppLocked(android.content.pm.ApplicationInfo,boolean)>
SINK|<android.test.ServiceTestCase: void setApplication(android.app.Application)>
SINK|<android.media.MediaMetadataRetriever: void setDataSource(java.lang.String)>
SINK|<android.webkit.WebIconDatabaseClassic: void requestIconForPageUrl(java.lang.String,android.webkit.WebIconDatabase$IconListener)>
SINK|<android.view.IWindowManager$Stub$Proxy: void clearForcedDisplayDensity(int)>
SINK|<com.android.server.pm.PackageManagerService: void setPackageStoppedState(java.lang.String,boolean,int)>
SINK|<android.filterfw.core.SerializedFrame: void setData(java.nio.ByteBuffer,int,int)>
SINK|<com.android.email.activity.MailboxListItem: void setBackgroundDrawable(android.graphics.drawable.Drawable)>
SINK|<android.accessibilityservice.AccessibilityService: void setServiceInfo(android.accessibilityservice.AccessibilityServiceInfo)>
SINK|<com.android.internal.telephony.IPhoneStateListener$Stub$Proxy: void onCallStateChanged(int,java.lang.String)>
SINK|<android.telephony.gsm.SmsManager: void sendTextMessage(java.lang.String,java.lang.String,java.lang.String,android.app.PendingIntent,android.app.PendingIntent)>
SINK|<android.graphics.Matrix$1: boolean setConcat(android.graphics.Matrix,android.graphics.Matrix)>
SINK|<android.os.DropBoxManager$Entry: void writeToParcel(android.os.Parcel,int)>
SINK|<com.android.providers.contacts.ContactsDatabaseHelper: void copyStringValue(android.content.ContentValues,java.lang.String,android.content.ContentValues,java.lang.String)>
SINK|<android.net.NetworkStatsHistory$ParcelUtils: void writeLongArray(android.os.Parcel,long[],int)>
SINK|<android.app.ContextImpl: void startIntentSender(android.content.IntentSender,android.content.Intent,int,int,int,android.os.Bundle)>
SINK|<android.view.IWindowManager$Stub$Proxy: void disableKeyguard(android.os.IBinder,java.lang.String)>
SINK|<android.net.wifi.WifiWatchdogStateMachine$VerifyingLinkState: boolean processMessage(android.os.Message)>
SINK|<com.android.server.DevicePolicyManagerService: void setKeyguardDisabledFeatures(android.content.ComponentName,int,int)>
SINK|<android.test.mock.MockPackageManager: void setComponentEnabledSetting(android.content.ComponentName,int,int)>
SINK|<android.net.EthernetDataTracker: void setPolicyDataEnable(boolean)>
SINK|<gov.nist.javax.sip.address.SipUri: void setMAddr(java.lang.String)>
SINK|<com.android.contacts.util.ImageViewDrawableSetter: void setupContactPhoto(com.android.contacts.model.Contact,android.widget.ImageView)>
SINK|<android.content.Intent: android.content.Intent putCharSequenceArrayListExtra(java.lang.String,java.util.ArrayList)>
SINK|<android.filterfw.core.Frame: void setFormat(android.filterfw.core.FrameFormat)>
SINK|<android.widget.RemoteViews: void setBundle(int,java.lang.String,android.os.Bundle)>
SINK|<java.io.FileWriter: void write(java.lang.String)>
SINK|<android.graphics.drawable.GradientDrawable: void setCornerRadii(float[])>
SINK|<com.google.common.collect.Maps$AbstractFilteredMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
SINK|<java.text.MessageFormat: void setFormatsByArgumentIndex(java.text.Format[])>
SINK|<android.net.NetworkStatsHistory$DataStreamUtils: void writeVarLong(java.io.DataOutputStream,long)>
SINK|<android.webkit.WebSettings: void setSupportMultipleWindows(boolean)>
SINK|<gov.nist.javax.sip.header.ims.PCalledPartyID: void setValue(java.lang.String)>
SINK|<com.android.contacts.editor.EventFieldEditorView: void onFieldChanged(java.lang.String,java.lang.String)>
SINK|<com.android.internal.telephony.AdnRecordLoader: void handleMessage(android.os.Message)>
SINK|<com.android.gallery3d.ui.SlotView: void setSlotSpec(com.android.gallery3d.ui.SlotView$Spec)>
SINK|<com.android.email.activity.UIControllerOnePane: boolean onUrlInMessageClicked(java.lang.String)>
SINK|<com.android.providers.calendar.CalendarProvider2: void acquireInstanceRangeLocked(long,long,boolean,boolean,java.lang.String,boolean)>
SINK|<com.android.internal.view.menu.ActionMenuPresenter: void updateMenuView(boolean)>
SINK|<com.android.internal.widget.SlidingTab: void setVisibility(int)>
SINK|<android.net.wifi.ScanResult: void writeToParcel(android.os.Parcel,int)>
SINK|<android.content.IContentService$Stub$Proxy: void setMasterSyncAutomatically(boolean)>
SINK|<android.widget.TimePicker: void setCurrentHour(java.lang.Integer)>
SINK|<java.sql.SQLWarning: void setNextWarning(java.sql.SQLWarning)>
SINK|<com.android.contacts.editor.EventFieldEditorView: void setValues(com.android.contacts.model.dataitem.DataKind,com.android.contacts.model.RawContactDelta$ValuesDelta,com.android.contacts.model.RawContactDelta,boolean,com.android.contacts.editor.ViewIdGenerator)>
SINK|<android.app.ApplicationThreadProxy: void dispatchPackageBroadcast(int,java.lang.String[])>
SINK|<com.android.server.am.ActivityManagerService: void setPackageAskScreenCompat(java.lang.String,boolean)>
SINK|<com.android.server.CountryDetectorService: void notifyReceivers(android.location.Country)>
SINK|<com.android.mms.ui.ConversationListAdapter: void bindView(android.view.View,android.content.Context,android.database.Cursor)>
SINK|<android.os.Binder: void dump(java.io.FileDescriptor,java.lang.String[])>
SINK|<java.nio.channels.AsynchronousSocketChannel: void write(java.nio.ByteBuffer,java.lang.Object,java.nio.channels.CompletionHandler)>
SINK|<android.widget.ImageView: void setScaleType(android.widget.ImageView$ScaleType)>
SINK|<android.media.MediaMetadataRetriever: void setDataSource(android.content.Context,android.net.Uri)>
SINK|<android.widget.AutoCompleteTextView: void setOnItemSelectedListener(android.widget.AdapterView$OnItemSelectedListener)>
SINK|<android.graphics.drawable.GradientDrawable: void setCornerRadius(float)>
SINK|<java.util.AbstractList$FullListIterator: void set(java.lang.Object)>
SINK|<android.view.GLES20DisplayList: void setScaleY(float)>
SINK|<com.android.internal.telephony.DataConnection$DcDisconnectingState: boolean processMessage(android.os.Message)>
SINK|<android.os.Parcel: void writeByte(byte)>
SINK|<android.bluetooth.BluetoothInputDevice: boolean setReport(android.bluetooth.BluetoothDevice,byte,java.lang.String)>
SINK|<com.android.internal.policy.impl.keyguard.KeyguardMessageArea$Helper: void setMessage(int,boolean,java.lang.Object[])>
SINK|<android.view.accessibility.AccessibilityNodeInfo: void setFocusable(boolean)>
SINK|<com.android.internal.telephony.RIL: void hangupConnection(int,android.os.Message)>
SINK|<java.io.PrintStream: void println(boolean)>
SINK|<android.widget.TextView: void setPaintFlags(int)>
SINK|<android.app.ActivityManagerProxy: void crashApplication(int,int,java.lang.String,java.lang.String)>
SINK|<com.android.contacts.list.ContactListItemView: void setSnippet(java.lang.String)>
SINK|<android.webkit.HTML5VideoView: void setOnErrorListener(android.webkit.HTML5VideoViewProxy)>
SINK|<android.net.wifi.WifiApConfigStore$ActiveState: boolean processMessage(android.os.Message)>
SINK|<android.view.accessibility.IAccessibilityInteractionConnection$Stub$Proxy: void findAccessibilityNodeInfosByText(long,java.lang.String,int,android.view.accessibility.IAccessibilityInteractionConnectionCallback,int,int,long)>
SINK|<android.bluetooth.IBluetoothHealth$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>
SINK|<com.android.bluetooth.a2dp.A2dpStateMachine$Pending: boolean processMessage(android.os.Message)>
SINK|<com.android.videoeditor.service.ApiService: void insertCrossfadeTransition(android.content.Context,java.lang.String,java.lang.String,java.lang.String,long,int)>
SINK|<com.android.server.wm.InputMonitor: void notifyLidSwitchChanged(long,boolean)>
SINK|<com.android.browser.provider.SnapshotProvider: android.net.Uri insert(android.net.Uri,android.content.ContentValues)>
SINK|<com.android.server.accessibility.AccessibilityManagerService$Service: void setDynamicallyConfigurableProperties(android.accessibilityservice.AccessibilityServiceInfo)>
SINK|<com.android.internal.statusbar.IStatusBarService$Stub$Proxy: void removeIcon(java.lang.String)>
SINK|<com.android.server.usb.UsbSettingsManager: void requestPermission(android.hardware.usb.UsbAccessory,java.lang.String,android.app.PendingIntent)>
SINK|<java.io.DataOutputStream: void write(byte[],int,int)>
SINK|<org.apache.harmony.security.x509.Extensions: void dumpValue(java.lang.StringBuilder,java.lang.String)>
SINK|<org.apache.http.protocol.DefaultedHttpContext: void setAttribute(java.lang.String,java.lang.Object)>
SINK|<com.android.server.power.PowerManagerService: void setAttentionLight(boolean,int)>
SINK|<com.android.calendar.DayOfMonthDrawable: void setColorFilter(android.graphics.ColorFilter)>
SINK|<com.android.launcher2.ShortcutInfo: void setActivity(android.content.ComponentName,int)>
SINK|<com.android.uiautomator.core.UiDevice: boolean pressKeyCode(int,int)>
SINK|<com.android.gallery3d.exif.ExifTag: void setValue(com.android.gallery3d.exif.Rational)>
SINK|<org.apache.harmony.xnet.provider.jsse.NativeCrypto: void setEnabledProtocols(int,java.lang.String[])>
SINK|<org.apache.harmony.security.x509.TBSCertList: void dumpValue(java.lang.StringBuilder)>
SINK|<android.location.ILocationManager$Stub$Proxy: boolean isProviderEnabled(java.lang.String)>
SINK|<android.net.wifi.IWifiManager$Stub$Proxy: boolean releaseWifiLock(android.os.IBinder)>
SINK|<com.android.internal.os.IResultReceiver$Stub$Proxy: void send(int,android.os.Bundle)>
SINK|<com.android.internal.telephony.gsm.GSMPhone: void setDataRoamingEnabled(boolean)>
SINK|<com.android.org.bouncycastle.asn1.ASN1OutputStream: void writeEncoded(int,byte[])>
SINK|<gov.nist.javax.sip.header.Contact: void setExpires(int)>
SINK|<org.apache.harmony.security.x509.ReasonFlags$1: void setEncodingContent(org.apache.harmony.security.asn1.BerOutputStream)>
SINK|<com.adobe.xmp.options.PropertyOptions: com.adobe.xmp.options.PropertyOptions setArray(boolean)>
SINK|<android.text.util.Rfc822Token: void setName(java.lang.String)>
SINK|<org.apache.harmony.xml.dom.DOMConfigurationImpl: void setParameter(java.lang.String,java.lang.Object)>
SINK|<com.android.contacts.model.RawContactDelta$ValuesDelta: void putNull(java.lang.String)>
SINK|<android.os.AsyncTask: void onPostExecute(java.lang.Object)>
SINK|<javax.net.ssl.HttpsURLConnection: void setHostnameVerifier(javax.net.ssl.HostnameVerifier)>
SINK|<com.android.gallery3d.data.DataManager: void registerChangeNotifier(android.net.Uri,com.android.gallery3d.data.ChangeNotifier)>
SINK|<android.view.animation.LayoutAnimationController: void setOrder(int)>
SINK|<android.graphics.PathMeasure: void setPath(android.graphics.Path,boolean)>
SINK|<android.webkit.WebSettings: void setUseWideViewPort(boolean)>
SINK|<com.android.videoeditor.widgets.HorizontalScrollView: void draw(android.graphics.Canvas)>
SINK|<android.text.style.MetricAffectingSpan$Passthrough: void updateMeasureState(android.text.TextPaint)>
SINK|<com.android.internal.telephony.sip.SipPhoneBase: void setLine1Number(java.lang.String,java.lang.String,android.os.Message)>
SINK|<android.webkit.WebSettingsClassic: void setPluginsEnabled(boolean)>
SINK|<java.text.NumberFormat: void setMinimumIntegerDigits(int)>
SINK|<android.app.IUserSwitchObserver$Stub$Proxy: void onUserSwitching(int,android.os.IRemoteCallback)>
SINK|<android.app.AlertDialog: void setButton3(java.lang.CharSequence,android.content.DialogInterface$OnClickListener)>
SINK|<android.view.accessibility.AccessibilityNodeInfo: void setFocused(boolean)>
SINK|<android.app.ActivityManagerProxy: boolean dumpHeap(java.lang.String,int,boolean,java.lang.String,android.os.ParcelFileDescriptor)>
SINK|<com.android.internal.widget.multiwaveview.GlowPadView: void setEnableTarget(int,boolean)>
SINK|<com.android.contacts.list.CustomContactListFilterActivity: boolean onChildClick(android.widget.ExpandableListView,android.view.View,int,int,long)>
SINK|<com.android.calendar.alerts.AlertService: int processQuery(android.database.Cursor,android.content.Context,long,java.util.ArrayList,java.util.ArrayList,java.util.ArrayList)>
SINK|<android.widget.RelativeLayout: void setVerticalGravity(int)>
SINK|<java.lang.reflect.Field: void setBoolean(java.lang.Object,boolean)>
SINK|<com.android.internal.telephony.sip.SipCommandInterface: void setBandMode(int,android.os.Message)>
SINK|<dalvik.system.VMDebug: void startMethodTracing(java.lang.String,java.io.FileDescriptor,int,int)>
SINK|<android.app.admin.IDevicePolicyManager$Stub$Proxy: void setCameraDisabled(android.content.ComponentName,boolean,int)>
SINK|<org.apache.harmony.security.x509.IssuingDistributionPoint: void dumpValue(java.lang.StringBuilder,java.lang.String)>
SINK|<android.app.Activity: void startActivity(android.content.Intent)>
SINK|<org.apache.harmony.security.x509.AuthorityKeyIdentifier: void dumpValue(java.lang.StringBuilder,java.lang.String)>
SINK|<android.bluetooth.IBluetoothManager$Stub$Proxy: android.bluetooth.IBluetooth registerAdapter(android.bluetooth.IBluetoothManagerCallback)>
SINK|<com.android.mms.util.SimpleCache: java.lang.Object put(java.lang.Object,java.lang.Object)>
SINK|<android.webkit.WebViewClassic$Factory: void setPlatformNotificationsEnabled(boolean)>
SINK|<android.graphics.ColorMatrix: void setConcat(android.graphics.ColorMatrix,android.graphics.ColorMatrix)>
SINK|<android.net.wifi.WifiNative: boolean setConcurrencyPriority(java.lang.String)>
SINK|<android.os.Messenger: void writeMessengerOrNullToParcel(android.os.Messenger,android.os.Parcel)>
SINK|<android.os.storage.IMountService$Stub$Proxy: int verifyEncryptionPassword(java.lang.String)>
SINK|<com.android.internal.telephony.RIL: void supplyIccPuk2ForApp(java.lang.String,java.lang.String,java.lang.String,android.os.Message)>
SINK|<android.widget.RemoteViews: void reapply(android.content.Context,android.view.View,android.widget.RemoteViews$OnClickHandler)>
SINK|<java.io.File: boolean setWritable(boolean,boolean)>
SINK|<android.os.Parcel: void writeBinderArray(android.os.IBinder[])>
SINK|<android.drm.DrmInfo: void put(java.lang.String,java.lang.Object)>
SINK|<android.webkit.CallbackProxy: void onFormResubmission(android.os.Message,android.os.Message)>
SINK|<org.apache.http.impl.io.IdentityOutputStream: void write(byte[])>
SINK|<com.android.email.activity.MessageViewFragment: void onMessageShown(long,com.android.emailcommon.provider.Mailbox)>
SINK|<android.widget.RatingBar: void setIsIndicator(boolean)>
SINK|<android.widget.RemoteViewsService: android.os.IBinder onBind(android.content.Intent)>
SINK|<com.android.email.NotificationController: void showPasswordExpiringNotification(long)>
SINK|<org.apache.http.impl.cookie.BasicClientCookie: void setValue(java.lang.String)>
SINK|<org.apache.http.protocol.HttpRequestExecutor: org.apache.http.HttpResponse execute(org.apache.http.HttpRequest,org.apache.http.HttpClientConnection,org.apache.http.protocol.HttpContext)>
SINK|<android.widget.TextView: void setGravity(int)>
SINK|<com.android.contacts.editor.KindSectionView: void setTitleVisible(boolean)>
SINK|<com.android.server.usb.UsbService: android.os.ParcelFileDescriptor openDevice(java.lang.String)>
SINK|<android.server.search.SearchManagerService: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
SINK|<com.android.providers.contacts.ContactsDatabaseHelper: void setLocale(com.android.providers.contacts.ContactsProvider2,java.util.Locale)>
SINK|<com.android.server.InputMethodManagerService: boolean setInputMethodEnabled(java.lang.String,boolean)>
SINK|<com.android.videoeditor.widgets.AudioTrackLinearLayout: void setWaveformExtractionProgress(java.lang.String,int)>
SINK|<java.text.MessageFormat: java.lang.Object[] parse(java.lang.String,java.text.ParsePosition)>
SINK|<java.util.concurrent.ConcurrentSkipListMap: boolean replace(java.lang.Object,java.lang.Object,java.lang.Object)>
SINK|<android.media.audiofx.AudioEffect: int setEnabled(boolean)>
SINK|<com.android.internal.telephony.IccSmsInterfaceManager: void sendMultipartText(java.lang.String,java.lang.String,java.util.List,java.util.List,java.util.List)>
SINK|<com.android.contacts.editor.ContactEditorFragment$PhotoHandler: void startPhotoActivity(android.content.Intent,int,java.lang.String)>
SINK|<javax.xml.transform.stream.StreamResult: void setWriter(java.io.Writer)>
SINK|<android.content.pm.IPackageManager$Stub$Proxy: void freeStorage(long,android.content.IntentSender)>
SINK|<com.android.browser.BrowserSettings: void setAutoFillProfile(android.webkit.WebSettingsClassic$AutoFillProfile,android.os.Message)>
SINK|<com.android.email.Preferences: void setEnableDebugLogging(boolean)>
SINK|<android.app.admin.DeviceAdminInfo: void writeToParcel(android.os.Parcel,int)>
SINK|<javax.net.ssl.SSLEngine: void setSSLParameters(javax.net.ssl.SSLParameters)>
SINK|<android.app.admin.IDevicePolicyManager$Stub$Proxy: void removeActiveAdmin(android.content.ComponentName,int)>
SINK|<android.widget.ImageView: void setVisibility(int)>
SINK|<android.os.Debug: void startMethodTracing(java.lang.String,java.io.FileDescriptor,int,int)>
SINK|<android.database.sqlite.SQLiteQueryBuilder: void setDistinct(boolean)>
SINK|<android.opengl.GLSurfaceView: void setEGLContextClientVersion(int)>
SINK|<android.media.audiofx.AudioEffect: byte[] intToByteArray(int)>
SINK|<gov.nist.javax.sip.stack.IOHandler: java.net.Socket sendBytes(java.net.InetAddress,java.net.InetAddress,int,java.lang.String,byte[],boolean,gov.nist.javax.sip.stack.MessageChannel)>
SINK|<android.view.GLES20DisplayList: void setAlpha(float)>
SINK|<android.app.ActivityManagerProxy: void unregisterUserSwitchObserver(android.app.IUserSwitchObserver)>
SINK|<gov.nist.javax.sip.stack.TCPMessageProcessor: void cacheMessageChannel(gov.nist.javax.sip.stack.TCPMessageChannel)>
SINK|<android.view.animation.Animation: void setDuration(long)>
SINK|<com.android.videoeditor.service.ApiService: void releaseVideoEditor(android.content.Context,java.lang.String)>
SINK|<com.android.nfc.NfcService$NfcAdapterExtrasService: void setCardEmulationRoute(java.lang.String,int)>
SINK|<android.app.ContextImpl: void sendOrderedBroadcastAsUser(android.content.Intent,android.os.UserHandle,java.lang.String,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>
SINK|<java.util.concurrent.atomic.AtomicInteger: void set(int)>
SINK|<android.net.wifi.p2p.WifiP2pService$P2pStateMachine$P2pDisabledState: boolean processMessage(android.os.Message)>
SINK|<gov.nist.javax.sip.message.SIPResponse: void setStatusCode(int)>
SINK|<com.android.calendar.alerts.AlertUtils: android.content.Intent buildEventViewIntent(android.content.Context,long,long,long)>
SINK|<android.view.View: void setTagInternal(int,java.lang.Object)>
SINK|<com.android.contacts.model.RawContactModifier: void parseExtras(android.content.Context,com.android.contacts.model.account.AccountType,com.android.contacts.model.RawContactDelta,android.os.Bundle)>
SINK|<android.app.ActivityManagerProxy: boolean willActivityBeVisible(android.os.IBinder)>
SINK|<com.android.videoeditor.widgets.MediaItemView: boolean setBitmap(android.graphics.Bitmap,int,int)>
SINK|<android.webkit.CallbackProxy: void addMessageToConsole(java.lang.String,int,java.lang.String,int)>
SINK|<org.apache.http.impl.io.HttpResponseParser: org.apache.http.HttpMessage parseHead(org.apache.http.io.SessionInputBuffer)>
SINK|<com.android.bluetooth.btservice.ProfileService: void notifyProfileServiceStateChanged(int)>
SINK|<com.android.email.mail.store.imap.ImapList: boolean is(int,java.lang.String,boolean)>
SINK|<android.app.ActivityManagerProxy: void signalPersistentProcesses(int)>
SINK|<android.speech.RecognitionService$RecognitionServiceBinder: void startListening(android.content.Intent,android.speech.IRecognitionListener)>
SINK|<android.os.INetworkManagementService$Stub$Proxy: void clearInterfaceAddresses(java.lang.String)>
SINK|<java.util.concurrent.ThreadPoolExecutor: void setCorePoolSize(int)>
SINK|<com.android.server.connectivity.Tethering$TetherMasterSM$ErrorState: boolean processMessage(android.os.Message)>
SINK|<android.webkit.WebViewClassic: boolean restorePicture(android.os.Bundle,java.io.File)>
SINK|<org.xml.sax.helpers.XMLReaderAdapter: void setEntityResolver(org.xml.sax.EntityResolver)>
SINK|<android.app.ApplicationErrorReport$RunningServiceInfo: void dump(android.util.Printer,java.lang.String)>
SINK|<org.apache.http.impl.client.AbstractHttpClient: void setAuthSchemes(org.apache.http.auth.AuthSchemeRegistry)>
SINK|<com.android.internal.telephony.gsm.UsimPhoneBookManager$PbrFile: void parseEf(com.android.internal.telephony.gsm.SimTlv,java.util.Map,int)>
SINK|<android.content.ContextWrapper: boolean bindService(android.content.Intent,android.content.ServiceConnection,int,int)>
SINK|<java.lang.System: void setProperties(java.util.Properties)>
SINK|<libcore.net.http.HttpsURLConnectionImpl: void setIfModifiedSince(long)>
SINK|<com.android.internal.app.IBatteryStats$Stub$Proxy: void noteWifiMulticastEnabled(int)>
SINK|<org.apache.http.message.BasicHeaderValueParser: org.apache.http.NameValuePair parseNameValuePair(org.apache.http.util.CharArrayBuffer,org.apache.http.message.ParserCursor)>
SINK|<android.app.backup.BackupDataOutput: int writeEntityHeader(java.lang.String,int)>
SINK|<com.android.nfc.dhimpl.NativeNfcTag: void addNdefTechnology(android.nfc.NdefMessage,int,int,int,int,int)>
SINK|<android.net.wifi.WifiManager: void connect(int,android.net.wifi.WifiManager$ActionListener)>
SINK|<android.widget.DatePicker: void setSpinnersShown(boolean)>
SINK|<android.media.audiofx.BassBoost: void setStrength(short)>
SINK|<com.android.contacts.detail.ActionsViewContainer: void setPosition(int)>
SINK|<java.time.zone.ZoneOffsetTransitionRule: void writeExternal(java.io.DataOutput)>
SINK|<android.view.inputmethod.BaseInputConnection: boolean setComposingText(java.lang.CharSequence,int)>
SINK|<java.time.LocalTime: java.time.LocalTime parse(java.lang.CharSequence)>
SINK|<android.view.accessibility.AccessibilityNodeInfo: void setSource(android.view.View)>
SINK|<android.app.ContextImpl: void startIntentSender(android.content.IntentSender,android.content.Intent,int,int,int)>
SINK|<android.view.IWindowSession$Stub$Proxy: void wallpaperCommandComplete(android.os.IBinder,android.os.Bundle)>
SINK|<android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.CharSequence[])>
SINK|<com.google.android.apps.lightcycle.sensor.OrientationEKF: void setHeadingDegrees(double)>
SINK|<android.widget.TextView: void setError(java.lang.CharSequence)>
SINK|<java.util.logging.LogRecord: void setSourceClassName(java.lang.String)>
SINK|<com.android.server.EventLogTags: void writeWatchdog(java.lang.String)>
SINK|<com.android.server.connectivity.Tethering: void interfaceAdded(java.lang.String)>
SINK|<java.lang.reflect.Field: void setShort(java.lang.Object,short)>
SINK|<com.android.server.am.ActivityManagerService: void sendUserSwitchBroadcastsLocked(int,int)>
SINK|<com.android.systemui.statusbar.tablet.NotificationPanel: void setSettingsEnabled(boolean)>
SINK|<com.android.uiautomator.testrunner.UiAutomatorTestRunner$FakeInstrumentationWatcher: void instrumentationStatus(android.content.ComponentName,int,android.os.Bundle)>
SINK|<org.apache.harmony.crypto.internal.NullCipherSpi: int engineUpdate(java.nio.ByteBuffer,java.nio.ByteBuffer)>
SINK|<android.content.pm.PackageInfo: void writeToParcel(android.os.Parcel,int)>
SINK|<com.android.server.NetworkManagementService: void setFirewallInterfaceRule(java.lang.String,boolean)>
SINK|<android.os.WorkSource: android.os.WorkSource[] setReturningDiffs(android.os.WorkSource)>
SINK|<android.net.wifi.WifiStateMachine$SoftApStartedState: boolean processMessage(android.os.Message)>
SINK|<org.xml.sax.helpers.ParserFactory: org.xml.sax.Parser makeParser(java.lang.String)>
SINK|<android.app.IActivityManager$ContentProviderHolder: void writeToParcel(android.os.Parcel,int)>
SINK|<android.content.Intent: android.content.Intent putExtra(java.lang.String,byte)>
SINK|<android.hardware.Camera$Parameters: void setWhiteBalance(java.lang.String)>
SINK|<com.google.android.apps.lightcycle.sensor.SensorReader: void setGyroBias(float[])>
SINK|<com.android.internal.view.IInputMethod$Stub$Proxy: void hideSoftInput(int,android.os.ResultReceiver)>
SINK|<com.android.deskclock.timer.TimerView: void setTime(int,int,int,int,int)>
SINK|<com.android.internal.telephony.ISms$Stub$Proxy: boolean copyMessageToIccEf(int,byte[],byte[])>
SINK|<android.net.nsd.INsdManager$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>
SINK|<android.support.v4.view.accessibility.AccessibilityNodeInfoCompatIcs: void setBoundsInParent(java.lang.Object,android.graphics.Rect)>
SINK|<com.android.internal.policy.impl.keyguard.KeyguardTransportControlView$IRemoteControlDisplayWeak: void setPlaybackState(int,int,long)>
SINK|<com.android.internal.view.menu.MenuBuilder: void saveActionViewStates(android.os.Bundle)>
SINK|<android.widget.MediaController: void setMediaPlayer(android.widget.MediaController$MediaPlayerControl)>
SINK|<android.media.AudioService$VolumeStreamState: void setAllIndexes(android.media.AudioService$VolumeStreamState,boolean)>
SINK|<com.android.email.service.EmailBroadcastProcessorService: void processDevicePolicyMessage(android.content.Context,int)>
SINK|<com.android.server.pm.Settings: void createNewUserLILPw(com.android.server.pm.Installer,int,java.io.File)>
SINK|<android.support.v13.app.FragmentPagerAdapter: void setPrimaryItem(android.view.ViewGroup,int,java.lang.Object)>
SINK|<android.app.AlertDialog: void setButton2(java.lang.CharSequence,android.os.Message)>
SINK|<android.os.IUpdateLock$Stub$Proxy: void releaseUpdateLock(android.os.IBinder)>
SINK|<com.android.internal.telephony.cdma.CdmaSMSDispatcher: void dispatch(android.content.Intent,java.lang.String)>
SINK|<android.preference.ListPreference: void setValue(java.lang.String)>
SINK|<android.view.animation.AnimationSet: void setFillAfter(boolean)>
SINK|<com.android.nfc.NfcService: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
SINK|<com.android.internal.telephony.PhoneProxy: void setOnEcbModeExitResponse(android.os.Handler,int,java.lang.Object)>
SINK|<org.ccil.cowan.tagsoup.Schema: void elementType(java.lang.String,int,int,int)>
SINK|<android.accounts.IAccountManager$Stub$Proxy: void invalidateAuthToken(java.lang.String,java.lang.String)>
SINK|<org.apache.http.auth.AuthSchemeRegistry: void setItems(java.util.Map)>
SINK|<gov.nist.javax.sip.header.Contact: void setWildCardFlag(boolean)>
SINK|<android.app.Notification$Builder: android.app.Notification$Builder setOngoing(boolean)>
SINK|<org.apache.http.impl.AbstractHttpClientConnection: org.apache.http.io.HttpMessageParser createResponseParser(org.apache.http.io.SessionInputBuffer,org.apache.http.HttpResponseFactory,org.apache.http.params.HttpParams)>
SINK|<com.adobe.xmp.impl.XMPMetaImpl: void setPropertyBoolean(java.lang.String,java.lang.String,boolean)>
SINK|<android.app.ActivityThread$ApplicationThread: void scheduleConfigurationChanged(android.content.res.Configuration)>
SINK|<android.media.MediaRecorder: void setAuxiliaryOutputFile(java.io.FileDescriptor)>
SINK|<com.android.internal.telephony.SMSDispatcher: void dispatchBroadcastMessage(android.telephony.SmsCbMessage)>
SINK|<java.sql.Timestamp: void setNanos(int)>
SINK|<java.time.chrono.ThaiBuddhistChronology: java.lang.Object writeReplace()>
SINK|<com.android.email.mail.store.ImapStore$ImapMessage: void setSize(int)>
SINK|<com.android.internal.telephony.SMSDispatcher: void dispatchPdus(byte[][])>
SINK|<android.widget.RemoteViews$ReflectionAction: void writeToParcel(android.os.Parcel,int)>
SINK|<com.android.providers.media.MediaProvider: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
SINK|<com.google.android.apps.lightcycle.panorama.Pano2dPreviewOverlay: void setTextureId(int)>
SINK|<com.android.internal.telephony.test.ModelInterpreter: void setNextCallFailCause(int)>
SINK|<com.android.email.Preferences: void setAutoAdvanceDirection(int)>
SINK|<android.filterfw.core.Filter: void setInputValue(java.lang.String,java.lang.Object)>
SINK|<com.android.calendar.agenda.AgendaByDayAdapter: void setAsFirstDayAfterYesterday(int)>
SINK|<com.android.email.activity.MessageListFragment$2: void setField(long,boolean)>
SINK|<com.android.gallery3d.exif.IfdData: void setTag(com.android.gallery3d.exif.ExifTag)>
SINK|<com.adobe.xmp.impl.XMPMetaImpl: void setProperty(java.lang.String,java.lang.String,java.lang.Object)>
SINK|<gov.nist.javax.sip.stack.SIPServerTransaction: void setMapped(boolean)>
SINK|<com.android.mms.transaction.PushReceiver$ReceivePushTask: java.lang.Void doInBackground(android.content.Intent[])>
SINK|<android.telephony.CellInfo: void writeToParcel(android.os.Parcel,int,int)>
SINK|<org.apache.http.params.HttpConnectionParamBean: void setStaleCheckingEnabled(boolean)>
SINK|<android.net.wifi.WifiNative: boolean setP2pSsidPostfix(java.lang.String)>
SINK|<org.apache.http.impl.client.AbstractHttpClient: void setCookieStore(org.apache.http.client.CookieStore)>
SINK|<com.android.uiautomator.testrunner.UiAutomatorTestRunner$FakeInstrumentationWatcher: void instrumentationFinished(android.content.ComponentName,int,android.os.Bundle)>
SINK|<android.view.textservice.TextServicesManager: void setCurrentSpellChecker(android.view.textservice.SpellCheckerInfo)>
SINK|<com.android.server.UpdateLockService: void sendLockChangedBroadcast(boolean)>
SINK|<android.view.MotionEvent: void setEdgeFlags(int)>
SINK|<java.time.Year: java.time.Year parse(java.lang.CharSequence,java.time.format.DateTimeFormatter)>
SINK|<java.util.concurrent.atomic.LongAdder: java.lang.Object writeReplace()>
SINK|<android.accessibilityservice.AccessibilityService: boolean performGlobalAction(int)>
SINK|<com.android.server.IntentResolverOld: boolean dumpMap(java.io.PrintWriter,java.lang.String,java.lang.String,java.lang.String,java.util.Map,java.lang.String,boolean)>
SINK|<com.android.contacts.editor.PhotoEditorView: void setEnabled(boolean)>
SINK|<java.nio.DoubleToByteBufferAdapter: java.nio.DoubleBuffer put(int,double)>
SINK|<android.view.textservice.SpellCheckerSession$SpellCheckerSessionListenerImpl: void onGetSuggestions(android.view.textservice.SuggestionsInfo[])>
SINK|<android.database.sqlite.SQLiteDatabase: android.database.sqlite.SQLiteDatabase openOrCreateDatabase(java.io.File,android.database.sqlite.SQLiteDatabase$CursorFactory)>
SINK|<android.test.AndroidTestCase: void setContext(android.content.Context)>
SINK|<com.android.contacts.list.ContactBrowseListFragment: void restoreSavedState(android.os.Bundle)>
SINK|<com.android.internal.telephony.IPhoneStateListener$Stub$Proxy: void onOtaspChanged(int)>
SINK|<android.widget.AutoCompleteTextView: void setOnItemClickListener(android.widget.AdapterView$OnItemClickListener)>
SINK|<android.os.INetworkManagementService$Stub$Proxy: void setFirewallUidRule(int,boolean)>
SINK|<android.net.wifi.WifiInfo: void setSupplicantState(java.lang.String)>
SINK|<android.net.http.AndroidHttpClient: org.apache.http.HttpResponse execute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext)>
SINK|<com.android.calendar.CalendarUtils$TimeZoneUtils: void setTimeZone(android.content.Context,java.lang.String)>
SINK|<com.android.internal.telephony.cdma.CDMAPhone: void setCallWaiting(boolean,android.os.Message)>
SINK|<android.widget.PopupWindow: void setSplitTouchEnabled(boolean)>
SINK|<java.time.zone.ZoneRules: java.time.zone.ZoneRules readExternal(java.io.DataInput)>
SINK|<com.android.contacts.voicemail.VoicemailPlaybackFragment$PlaybackViewImpl: void setRateIncreaseButtonListener(android.view.View$OnClickListener)>
SINK|<org.apache.http.impl.client.DefaultRequestDirector: org.apache.http.HttpResponse execute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext)>
SINK|<android.hardware.usb.IUsbManager$Stub$Proxy: void grantDevicePermission(android.hardware.usb.UsbDevice,int)>
SINK|<gov.nist.javax.sip.header.ParametersHeader: void setParameter(java.lang.String,boolean)>
SINK|<android.widget.TextView: void setMaxLines(int)>
SINK|<android.widget.AbsListView: void setRemoteViewsOnClickHandler(android.widget.RemoteViews$OnClickHandler)>
SINK|<android.gesture.GestureOverlayView: void setGestureStrokeWidth(float)>
SINK|<android.app.PendingIntent: void send(int,android.app.PendingIntent$OnFinished,android.os.Handler)>
SINK|<android.view.View$8: void setValue(android.view.View,float)>
SINK|<android.os.Message: void setTarget(android.os.Handler)>
SINK|<org.json.JSONObject: org.json.JSONObject put(java.lang.String,boolean)>
SINK|<java.util.Date: void setMonth(int)>
SINK|<android.provider.Contacts$ContactMethods: void addPostalLocation(android.content.Context,long,double,double)>
SINK|<android.speech.tts.TextToSpeech: int setLanguage(java.util.Locale)>
SINK|<org.apache.harmony.xnet.provider.jsse.CertificateRequest: void send(org.apache.harmony.xnet.provider.jsse.HandshakeIODataStream)>
SINK|<gov.nist.javax.sip.header.AuthenticationHeader: void setOpaque(java.lang.String)>
SINK|<com.android.gallery3d.ui.RelativePosition: void setReferencePosition(int,int)>
SINK|<android.hardware.input.IInputManager$Stub$Proxy: void vibrate(int,long[],int,android.os.IBinder)>
SINK|<android.view.accessibility.IAccessibilityInteractionConnection$Stub$Proxy: void performAccessibilityAction(long,int,android.os.Bundle,int,android.view.accessibility.IAccessibilityInteractionConnectionCallback,int,int,long)>
SINK|<android.app.ApplicationThreadNative: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>
SINK|<android.content.Intent: android.content.Intent setComponent(android.content.ComponentName)>
SINK|<org.apache.harmony.xnet.provider.jsse.OpenSSLSocketImplWrapper: void setReuseAddress(boolean)>
SINK|<org.apache.http.impl.AbstractHttpClientConnection: void sendRequestHeader(org.apache.http.HttpRequest)>
SINK|<android.content.ClipboardManager: void setPrimaryClip(android.content.ClipData)>
SINK|<android.graphics.Paint: void setStrokeJoin(android.graphics.Paint$Join)>
SINK|<android.app.ActivityThread$ApplicationThread: void dumpGfxInfo(java.io.FileDescriptor,java.lang.String[])>
SINK|<android.content.pm.IPackageManager$Stub$Proxy: void installPackageWithVerificationAndEncryption(android.net.Uri,android.content.pm.IPackageInstallObserver,int,java.lang.String,android.content.pm.VerificationParams,android.content.pm.ContainerEncryptionParams)>
SINK|<java.time.chrono.JapaneseDate: void writeExternal(java.io.DataOutput)>
SINK|<gov.nist.javax.sip.header.ims.PAccessNetworkInfo: void setCI3GPP2(java.lang.String)>
SINK|<libcore.icu.NativeDecimalFormat: void setGroupingSize(int)>
SINK|<android.widget.Spinner$DialogPopup: void setVerticalOffset(int)>
SINK|<com.android.camera.PieController: void addItem(java.lang.String,float,float)>
SINK|<com.android.musicfx.seekbar.ProgressBar: void setVisibility(int)>
SINK|<android.view.ViewTreeObserver$InternalInsetsInfo: void set(android.view.ViewTreeObserver$InternalInsetsInfo)>
SINK|<com.android.internal.telephony.gsm.GsmDataConnectionTracker: void notifyDataConnection(java.lang.String)>
SINK|<android.media.audiofx.AudioEffect: int setParameter(byte[],byte[])>
SINK|<libcore.net.http.HttpURLConnectionImpl: void setRequestProperty(java.lang.String,java.lang.String)>
SINK|<org.apache.http.impl.client.AbstractHttpClient: void setKeepAliveStrategy(org.apache.http.conn.ConnectionKeepAliveStrategy)>
SINK|<java.io.PrintWriter: void write(java.lang.String,int,int)>
SINK|<android.view.View: void setSoundEffectsEnabled(boolean)>
SINK|<com.android.internal.telephony.ITelephonyRegistry$Stub$Proxy: void notifyServiceState(android.telephony.ServiceState)>
SINK|<org.apache.harmony.xnet.provider.jsse.SSLSessionImpl: void putValue(java.lang.String,java.lang.Object)>
SINK|<libcore.net.http.FixedLengthOutputStream: void write(byte[],int,int)>
SINK|<android.service.wallpaper.WallpaperService$Engine$2: void setFixedSize(int,int)>
SINK|<android.support.v4.net.TrafficStatsCompat: void setThreadStatsTag(int)>
SINK|<android.media.RemoteControlClient: void setPlaybackInformation(int,int)>
SINK|<android.webkit.WebSettingsClassic: void setProperty(java.lang.String,java.lang.String)>
SINK|<java.util.concurrent.CopyOnWriteArrayList: java.lang.Object set(int,java.lang.Object)>
SINK|<gov.nist.javax.sip.header.extensions.Replaces: void setToTag(java.lang.String)>
SINK|<java.time.Duration: void writeExternal(java.io.DataOutput)>
SINK|<com.android.contacts.editor.TextFieldsEditorView: void setEnabled(boolean)>
SINK|<android.net.wifi.WifiNative: boolean setBluetoothCoexistenceScanMode(boolean)>
SINK|<com.android.internal.telephony.sip.SipCommandInterface: void setRadioPower(boolean,android.os.Message)>
SINK|<android.filterfw.core.Frame: void setDataFromFrame(android.filterfw.core.Frame)>
SINK|<android.hardware.Camera$Parameters: void setJpegThumbnailQuality(int)>
SINK|<java.lang.System: void setSecurityManager(java.lang.SecurityManager)>
SINK|<org.apache.http.entity.AbstractHttpEntity: void setChunked(boolean)>
SINK|<android.hardware.usb.IUsbManager$Stub$Proxy: void clearDefaults(java.lang.String,int)>
SINK|<android.widget.Toast: void setMargin(float,float)>
SINK|<android.view.accessibility.IAccessibilityManager$Stub$Proxy: int addClient(android.view.accessibility.IAccessibilityManagerClient,int)>
SINK|<android.app.Activity: void onCreate(android.os.Bundle)>
SINK|<com.android.phone.MobileNetworkSettings: boolean onPreferenceChange(android.preference.Preference,java.lang.Object)>
SINK|<android.widget.CursorTreeAdapter: void setGroupCursor(android.database.Cursor)>
SINK|<android.media.JetPlayer: void setEventListener(android.media.JetPlayer$OnJetEventListener)>
SINK|<android.app.ApplicationThreadProxy: void profilerControl(boolean,java.lang.String,android.os.ParcelFileDescriptor,int)>
SINK|<com.android.exchange.provider.ExchangeDirectoryProvider$GalContactRow: void addNameRow(android.database.MatrixCursor,com.android.exchange.provider.ExchangeDirectoryProvider$GalProjection,long,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>
SINK|<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: void writeToParcel(android.os.Parcel,long)>
SINK|<com.android.internal.app.ActionBarImpl: void setDisplayShowCustomEnabled(boolean)>
SINK|<android.animation.ValueAnimator: void setValues(android.animation.PropertyValuesHolder[])>
SINK|<com.android.email.provider.EmailProvider: void restoreIfNeeded(android.content.Context,android.database.sqlite.SQLiteDatabase)>
SINK|<com.android.server.DeviceStorageMonitorService: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
SINK|<android.app.backup.BackupHelperDispatcher: void performRestore(android.app.backup.BackupDataInput,int,android.os.ParcelFileDescriptor)>
SINK|<com.android.contacts.activities.PeopleActivity$TabPagerAdapter: void setPrimaryItem(android.view.ViewGroup,int,java.lang.Object)>
SINK|<com.android.contacts.voicemail.VoicemailPlaybackFragment$PlaybackViewImpl: void setVolumeControlStream(int)>
SINK|<org.json.JSONObject: java.lang.String toString(int)>
SINK|<gov.nist.javax.sip.header.Protocol: void setProtocol(java.lang.String)>
SINK|<com.android.internal.view.InputConnectionWrapper: boolean performEditorAction(int)>
SINK|<com.android.internal.widget.TransportControlView$IRemoteControlDisplayWeak: void setPlaybackState(int,int,long)>
SINK|<com.android.contacts.util.AccountSelectionUtil: void doImportFromSim(android.content.Context,com.android.contacts.model.account.AccountWithDataSet)>
SINK|<android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordStubImpl: void setSource(java.lang.Object,android.view.View,int)>
SINK|<com.android.gallery3d.ui.PositionController: void zoomIn(float,float,float)>
SINK|<android.media.RingtoneManager: void setActualDefaultRingtoneUri(android.content.Context,int,android.net.Uri)>
SINK|<com.android.providers.contacts.aggregation.ContactAggregator: void updateLookupKeyForRawContact(android.database.sqlite.SQLiteDatabase,long)>
SINK|<com.android.email.Preferences: void setTextZoom(int)>
SINK|<org.json.JSONArray: org.json.JSONArray put(int,int)>
SINK|<android.net.SntpClient: boolean requestTime(java.lang.String,int)>
SINK|<gov.nist.javax.sip.header.AuthenticationHeader: void setChallenge(gov.nist.javax.sip.header.Challenge)>
SINK|<android.content.Intent: android.content.Intent putExtra(java.lang.String,java.io.Serializable)>
SINK|<org.apache.http.impl.conn.DefaultResponseParser: org.apache.http.HttpMessage parseHead(org.apache.http.io.SessionInputBuffer)>
SINK|<android.widget.DialerFilter: void setFilterWatcher(android.text.TextWatcher)>
SINK|<com.android.i18n.phonenumbers.PhoneNumberUtil: int maybeExtractCountryCode(java.lang.String,com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata,java.lang.StringBuilder,boolean,com.android.i18n.phonenumbers.Phonenumber$PhoneNumber)>
SINK|<android.preference.Preference: void setLayoutResource(int)>
SINK|<android.net.wifi.WifiWatchdogStateMachine: android.net.wifi.WifiWatchdogStateMachine makeWifiWatchdogStateMachine(android.content.Context)>
SINK|<android.app.ActivityManagerProxy: int startActivities(android.app.IApplicationThread,android.content.Intent[],java.lang.String[],android.os.IBinder,android.os.Bundle,int)>
SINK|<com.android.mms.ui.SlideshowAttachmentView: void setTextVisibility(boolean)>
SINK|<org.apache.http.impl.conn.DefaultClientConnection: org.apache.http.io.HttpMessageParser createResponseParser(org.apache.http.io.SessionInputBuffer,org.apache.http.HttpResponseFactory,org.apache.http.params.HttpParams)>
SINK|<com.android.phone.DTMFTwelveKeyDialer: void setDialpadContext(java.lang.String)>
SINK|<com.android.server.am.ActiveServices: boolean dumpServicesLocked(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[],int,boolean,boolean,java.lang.String)>
SINK|<android.app.SharedPreferencesImpl$EditorImpl: android.content.SharedPreferences$Editor putLong(java.lang.String,long)>
SINK|<com.android.providers.contacts.ContactsDatabaseHelper: void updateRawContactDisplayName(android.database.sqlite.SQLiteDatabase,long)>
SINK|<android.app.ContextImpl: void sendBroadcastAsUser(android.content.Intent,android.os.UserHandle,java.lang.String)>
SINK|<com.android.contacts.group.GroupDetailFragment: void setQuickContact(boolean)>
SINK|<com.android.server.RecognitionManagerService: void setCurRecognizer(android.content.ComponentName,int)>
SINK|<com.android.providers.contacts.ContactsProvider2: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
SINK|<android.database.ContentObservable: void notifyChange(boolean)>
SINK|<com.android.inputmethod.accessibility.AccessibleKeyboardViewProxy: void setKeyboard(com.android.inputmethod.keyboard.Keyboard)>
SINK|<android.view.accessibility.AccessibilityRecord: void setPassword(boolean)>
SINK|<android.gesture.GestureOverlayView: void setEventsInterceptionEnabled(boolean)>
SINK|<com.android.internal.telephony.RIL: void invokeOemRilRequestRaw(byte[],android.os.Message)>
SINK|<android.os.INetworkManagementService$Stub$Proxy: void setInterfaceThrottle(java.lang.String,int,int)>
SINK|<gov.nist.javax.sip.stack.SIPTransactionStack: gov.nist.javax.sip.stack.SIPDialog createDialog(gov.nist.javax.sip.stack.SIPTransaction)>
SINK|<com.android.providers.calendar.CalendarProvider2: int updateInTransaction(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[],boolean)>
SINK|<com.google.android.mms.pdu.ReadOrigInd: void setFrom(com.google.android.mms.pdu.EncodedStringValue)>
SINK|<android.os.IPowerManager$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>
SINK|<android.bluetooth.IBluetooth$Stub$Proxy: boolean setScanMode(int,int)>
SINK|<org.apache.harmony.xml.dom.NodeImpl: void setPrefix(java.lang.String)>
SINK|<android.preference.DialogPreference: void setPositiveButtonText(int)>
SINK|<android.renderscript.Allocation: void setFromFieldPacker(int,int,android.renderscript.FieldPacker)>
SINK|<com.android.gallery3d.exif.ExifData: void setStripBytes(int,byte[])>
SINK|<android.os.Parcel: void writeCharArray(char[])>
SINK|<android.media.AudioService: void setWiredDeviceConnectionState(int,int,java.lang.String)>
SINK|<android.app.LoadedApk: android.content.IIntentReceiver forgetReceiverDispatcher(android.content.Context,android.content.BroadcastReceiver)>
SINK|<android.ddm.DdmHandleAppName: void setAppName(java.lang.String,int)>
SINK|<android.view.ViewGroup: void setChildrenDrawnWithCacheEnabled(boolean)>
SINK|<com.google.common.collect.AbstractMultimap$WrappedList: boolean addAll(int,java.util.Collection)>
SINK|<com.android.server.AppWidgetServiceImpl: void bindRemoteViewsService(int,android.content.Intent,android.os.IBinder)>
SINK|<com.android.contacts.editor.RawContactEditorView: void setEnabled(boolean)>
SINK|<com.android.internal.telephony.cdma.CDMAPhone: void setRadioPower(boolean)>
SINK|<android.view.View: void setClickable(boolean)>
SINK|<android.content.ISyncAdapter$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>
SINK|<java.time.Instant: java.time.Instant parse(java.lang.CharSequence)>
SINK|<android.app.SharedPreferencesImpl$EditorImpl: android.content.SharedPreferences$Editor putBoolean(java.lang.String,boolean)>
SINK|<android.net.wifi.WifiNative: boolean setModelName(java.lang.String)>
SINK|<com.android.internal.policy.impl.keyguard.ClockView$AmPm: void setShowAmPm(boolean)>
SINK|<android.location.ICountryDetector$Stub$Proxy: void addCountryListener(android.location.ICountryListener)>
SINK|<android.net.wifi.p2p.WifiP2pService$P2pStateMachine$UserAuthorizingInvitationState: boolean processMessage(android.os.Message)>
SINK|<android.widget.Switch: void setChecked(boolean)>
SINK|<org.apache.http.impl.cookie.BasicDomainHandler: void parse(org.apache.http.cookie.SetCookie,java.lang.String)>
SINK|<android.text.style.CharacterStyle$Passthrough: void updateDrawState(android.text.TextPaint)>
SINK|<org.apache.harmony.xml.ExpatParser: void startDtd(java.lang.String,java.lang.String,java.lang.String)>
SINK|<android.content.SyncManager$ActiveSyncContext: void onServiceConnected(android.content.ComponentName,android.os.IBinder)>
SINK|<com.google.common.collect.AbstractMultiset: boolean setCount(java.lang.Object,int,int)>
SINK|<android.os.Handler: boolean sendEmptyMessageAtTime(int,long)>
SINK|<com.android.internal.telephony.test.SimulatedCommands: void setupDataCall(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,android.os.Message)>
SINK|<android.view.GLES20DisplayList: void setStaticMatrix(android.graphics.Matrix)>
SINK|<com.android.internal.view.InputConnectionWrapper: boolean performPrivateCommand(java.lang.String,android.os.Bundle)>
SINK|<android.content.pm.RegisteredServicesCache: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[],int)>
SINK|<android.filterfw.core.SerializedFrame: void setInts(int[])>
SINK|<com.android.contacts.list.LegacyPhoneNumberListAdapter: void bindView(android.view.View,int,android.database.Cursor,int)>
SINK|<com.android.contacts.editor.SelectAccountDialogFragment: void show(android.app.FragmentManager,android.app.Fragment,int,com.android.contacts.util.AccountsListAdapter$AccountListFilter,android.os.Bundle)>
SINK|<com.android.internal.telephony.PhoneProxy: int enableApnType(java.lang.String)>
SINK|<android.view.animation.Animation: void setAnimationListener(android.view.animation.Animation$AnimationListener)>
SINK|<com.android.contacts.model.RawContactDelta$ValuesDelta: void setPhoneticMiddleName(java.lang.String)>
SINK|<org.apache.harmony.xnet.provider.jsse.OpenSSLSessionImpl: void putValue(java.lang.String,java.lang.Object)>
SINK|<android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable[])>
SINK|<gov.nist.core.NameValue: java.lang.Object setValue(java.lang.Object)>
SINK|<android.media.AudioRoutesInfo: void writeToParcel(android.os.Parcel,int)>
SINK|<org.apache.http.impl.cookie.BasicClientCookie: void setVersion(int)>
SINK|<android.content.Intent: android.content.Intent createChooser(android.content.Intent,java.lang.CharSequence)>
SINK|<android.animation.AnimatorSet$Builder: android.animation.AnimatorSet$Builder after(android.animation.Animator)>
SINK|<android.net.wifi.p2p.WifiP2pManager: void setServiceResponseListener(android.net.wifi.p2p.WifiP2pManager$Channel,android.net.wifi.p2p.WifiP2pManager$ServiceResponseListener)>
SINK|<com.android.internal.telephony.gsm.GsmMmiCode: void sendUssd(java.lang.String)>
SINK|<android.support.v4.view.ViewCompat: void setAccessibilityDelegate(android.view.View,android.support.v4.view.AccessibilityDelegateCompat)>
SINK|<android.test.mock.MockContext: void startIntentSender(android.content.IntentSender,android.content.Intent,int,int,int)>
SINK|<android.widget.ListPopupWindow: void setModal(boolean)>
SINK|<android.content.pm.IPackageManager$Stub$Proxy: void addPreferredActivity(android.content.IntentFilter,int,android.content.ComponentName[],android.content.ComponentName,int)>
SINK|<android.filterfw.core.SerializedFrame: void setFloats(float[])>
SINK|<android.app.SearchManager: void startGlobalSearch(java.lang.String,boolean,android.os.Bundle,android.graphics.Rect)>
SINK|<com.android.internal.telephony.cdma.CDMAPhone: com.android.internal.telephony.Connection dial(java.lang.String,com.android.internal.telephony.UUSInfo)>
SINK|<com.android.server.DevicePolicyManagerService: void setPasswordMinimumNonLetter(android.content.ComponentName,int,int)>
SINK|<gov.nist.javax.sip.SipStackImpl: javax.sip.ListeningPoint createListeningPoint(java.lang.String,int,java.lang.String)>
SINK|<java.nio.file.Files: java.nio.file.Path setPosixFilePermissions(java.nio.file.Path,java.util.Set)>
SINK|<com.android.internal.view.menu.SubMenuBuilder: void setShortcutsVisible(boolean)>
SINK|<com.google.common.io.ByteStreams$ByteArrayDataOutputStream: void writeUTF(java.lang.String)>
SINK|<com.android.browser.BrowserSettings: void setDebugEnabled(boolean)>
SINK|<com.android.server.BackupManagerService: java.lang.String selectBackupTransport(java.lang.String)>
SINK|<com.android.server.wm.WindowAnimator: void setAppLayoutChanges(com.android.server.wm.AppWindowAnimator,int,java.lang.String)>
SINK|<android.view.accessibility.AccessibilityEvent: void setAddedCount(int)>
SINK|<com.android.server.NetworkManagementService: void setInterfaceQuota(java.lang.String,long)>
SINK|<com.google.common.collect.MapMaker$NullConcurrentMap: java.lang.Object putIfAbsent(java.lang.Object,java.lang.Object)>
SINK|<android.net.wifi.WifiStateMachine: void setHighPerfModeEnabled(boolean)>
SINK|<android.accessibilityservice.UiTestAutomationBridge: boolean performAccessibilityActionInActiveWindow(long,int,android.os.Bundle)>
SINK|<com.android.gallery3d.exif.OrderedDataOutputStream: void writeRational(com.android.gallery3d.exif.Rational)>
SINK|<android.net.wifi.WifiStateMachine$TetheringState: boolean processMessage(android.os.Message)>
SINK|<android.database.DatabaseUtils$InsertHelper: void bind(int,long)>
SINK|<android.os.Bundle: void putDouble(java.lang.String,double)>
SINK|<android.os.Bundle: void putParcelableArray(java.lang.String,android.os.Parcelable[])>
SINK|<libcore.io.ForwardingOs: void setsockoptGroupReq(java.io.FileDescriptor,int,int,libcore.io.StructGroupReq)>
SINK|<android.view.View: void setOverScrollMode(int)>
SINK|<com.android.camera.ComboPreferences$MyEditor: android.content.SharedPreferences$Editor putString(java.lang.String,java.lang.String)>
SINK|<gov.nist.javax.sip.header.AcceptLanguage: void setLanguageRange(java.lang.String)>
SINK|<com.android.internal.policy.impl.keyguard.KeyguardSecurityViewFlipper: void setLockPatternUtils(com.android.internal.widget.LockPatternUtils)>
SINK|<com.android.internal.view.IInputMethodManager$Stub$Proxy: boolean setCurrentInputMethodSubtype(android.view.inputmethod.InputMethodSubtype)>
SINK|<android.view.HardwareRenderer: void setupDiskCache(java.io.File)>
SINK|<android.media.audiofx.AudioEffect: int setParameter(int,byte[])>
SINK|<com.android.providers.contacts.TransactionContext: void syncStateUpdated(long,java.lang.Object)>
SINK|<com.android.internal.telephony.UiccCardApplication: void registerForLocked(android.os.Handler,int,java.lang.Object)>
SINK|<java.text.Bidi: int getRunLevel(int)>
SINK|<android.gesture.GestureStore: void addGesture(java.lang.String,android.gesture.Gesture)>
SINK|<org.apache.harmony.security.asn1.ASN1BitString$ASN1NamedBitList: void setEncodingContent(org.apache.harmony.security.asn1.BerOutputStream)>
SINK|<org.apache.harmony.xnet.provider.jsse.AlertProtocol: void alert(byte,byte)>
SINK|<android.net.wifi.WifiStateMachine$VerifyingLinkState: boolean processMessage(android.os.Message)>
SINK|<com.android.emailcommon.service.EmailServiceProxy: void setLogging(int)>
SINK|<java.time.YearMonth: void writeExternal(java.io.DataOutput)>
SINK|<org.xml.sax.helpers.DefaultHandler: void setDocumentLocator(org.xml.sax.Locator)>
SINK|<android.nfc.INfcAdapter$Stub$Proxy: void setP2pModes(int,int)>
SINK|<junit.runner.BaseTestRunner: java.lang.String truncate(java.lang.String)>
SINK|<java.security.cert.PKIXRevocationChecker: void setOcspResponder(java.net.URI)>
SINK|<android.view.GLES20DisplayList: void setCaching(boolean)>
SINK|<com.android.server.pm.Settings: void setInstallStatus(java.lang.String,int)>
SINK|<com.android.internal.telephony.test.SimulatedCommands: void setCdmaBroadcastActivation(boolean,android.os.Message)>
SINK|<java.nio.channels.Channels$OutputStreamChannel: int write(java.nio.ByteBuffer)>
SINK|<android.graphics.drawable.GradientDrawable: void setColors(int[])>
SINK|<com.google.android.apps.lightcycle.util.FileUtil: void storeFile(java.io.InputStream,java.io.File)>
SINK|<com.android.phone.sip.SipSharedPreferences: void setSipCallOption(java.lang.String)>
SINK|<android.content.IContentService$Stub$Proxy: void removeStatusChangeListener(android.content.ISyncStatusObserver)>
SINK|<javax.xml.parsers.SAXParser: void parse(java.io.InputStream,org.xml.sax.helpers.DefaultHandler)>
SINK|<android.media.IAudioService$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>
SINK|<com.android.internal.telephony.sip.SipPhoneBase: void setCellBroadcastSmsConfig(int[],android.os.Message)>
SINK|<com.android.bluetooth.hid.HidService: boolean sendData(android.bluetooth.BluetoothDevice,java.lang.String)>
SINK|<com.android.mms.dom.smil.SmilRootLayoutElementImpl: void setHeight(int)>
SINK|<android.os.Bundle: void putByte(java.lang.String,byte)>
SINK|<com.android.internal.telephony.PhoneBase: void notifyDataConnection(java.lang.String,java.lang.String,com.android.internal.telephony.PhoneConstants$DataState)>
SINK|<android.accounts.AccountManager: void setPassword(android.accounts.Account,java.lang.String)>
SINK|<java.io.ObjectOutputStream: void writeBytes(java.lang.String)>
SINK|<com.android.bluetooth.btservice.AdapterService$AdapterServiceBinder: boolean setPasskey(android.bluetooth.BluetoothDevice,boolean,int,byte[])>
SINK|<android.widget.RemoteViews: void setScrollPosition(int,int)>
SINK|<android.widget.RemoteViews$SetRemoteViewsAdapterIntent: void writeToParcel(android.os.Parcel,int)>
SINK|<android.hardware.input.IInputManager$Stub$Proxy: boolean hasKeys(int,int,int[],boolean[])>
SINK|<com.android.gallery3d.ui.GLCanvasImpl$ConfigState: void restore(com.android.gallery3d.ui.GLCanvasImpl)>
SINK|<com.android.email.service.EmailBroadcastProcessorService: void setImapDeletePolicy(android.content.Context)>
SINK|<android.app.WallpaperManager$FastBitmapDrawable: void setAlpha(int)>
SINK|<org.apache.harmony.xnet.provider.jsse.AbstractSessionContext: byte[] toBytes(javax.net.ssl.SSLSession)>
SINK|<com.android.internal.telephony.cdma.RuimRecords: void setVoiceMailNumber(java.lang.String,java.lang.String,android.os.Message)>
SINK|<java.util.concurrent.ThreadPoolExecutor: void setKeepAliveTime(long,java.util.concurrent.TimeUnit)>
SINK|<java.security.Identity: void setPublicKey(java.security.PublicKey)>
SINK|<org.apache.james.mime4j.field.ContentTypeField$Parser: org.apache.james.mime4j.field.Field parse(java.lang.String,java.lang.String,java.lang.String)>
SINK|<com.android.server.display.DisplayDeviceInfo: void setAssumedDensityForExternalDisplay(int,int)>
SINK|<libcore.icu.RuleBasedCollatorICU: void setAttribute(int,int)>
SINK|<org.xmlpull.v1.sax2.Driver: void parseSubTree(org.xmlpull.v1.XmlPullParser)>
SINK|<java.io.PrintWriter: void println(boolean)>
SINK|<com.android.calendar.CalendarEventModel: void addAttendees(java.lang.String,com.android.common.Rfc822Validator)>
SINK|<android.app.ApplicationPackageManager: void setApplicationEnabledSetting(java.lang.String,int,int)>
SINK|<com.android.internal.telephony.sip.SipCommandInterface: void sendTerminalResponse(java.lang.String,android.os.Message)>
SINK|<com.android.internal.telephony.gsm.GsmSMSDispatcher: void sendText(java.lang.String,java.lang.String,java.lang.String,android.app.PendingIntent,android.app.PendingIntent)>
SINK|<com.android.internal.view.IInputMethodManager$Stub$Proxy: boolean setInputMethodEnabled(java.lang.String,boolean)>
SINK|<com.android.internal.telephony.sip.SipPhoneBase: void setSmscAddress(java.lang.String,android.os.Message)>
SINK|<java.time.LocalDate: java.lang.Object writeReplace()>
SINK|<android.widget.SimpleAdapter: void setViewBinder(android.widget.SimpleAdapter$ViewBinder)>
SINK|<gov.nist.javax.sip.header.ims.SecurityAgree: void setAlgorithm(java.lang.String)>
SINK|<com.android.videoeditor.widgets.TimelineRelativeLayout: void setSelected(boolean)>
SINK|<android.graphics.Matrix: void setValues(float[])>
SINK|<org.apache.http.impl.AbstractHttpClientConnection: void init(org.apache.http.io.SessionInputBuffer,org.apache.http.io.SessionOutputBuffer,org.apache.http.params.HttpParams)>
SINK|<com.android.internal.telephony.BaseCommands: void setOnCatEvent(android.os.Handler,int,java.lang.Object)>
SINK|<java.text.DecimalFormat: void setGroupingSize(int)>
SINK|<com.android.server.ProcessMap: java.lang.Object put(java.lang.String,int,java.lang.Object)>
SINK|<android.util.IntProperty: void set(java.lang.Object,java.lang.Integer)>
SINK|<java.util.concurrent.ConcurrentSkipListMap: java.lang.Object replace(java.lang.Object,java.lang.Object)>
SINK|<android.support.v4.view.ViewPager: void setCurrentItem(int,boolean)>
SINK|<com.google.common.collect.MapMakerInternalMap$NullEntry: void setExpirationTime(long)>
SINK|<android.view.View: void setBackgroundColor(int)>
SINK|<android.sax.Element: void setElementListener(android.sax.ElementListener)>
SINK|<org.apache.http.message.HeaderGroup: void updateHeader(org.apache.http.Header)>
SINK|<com.android.internal.telephony.ITelephonyRegistry$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>
SINK|<android.widget.RemoteViews$SetOnClickFillInIntent: void writeToParcel(android.os.Parcel,int)>
SINK|<com.android.email.activity.InsertQuickResponseDialog: com.android.email.activity.InsertQuickResponseDialog newInstance(android.app.Fragment,com.android.emailcommon.provider.Account)>
SINK|<com.android.internal.telephony.sip.SipPhone: com.android.internal.telephony.Connection dial(java.lang.String)>
SINK|<com.android.bluetooth.btservice.ProfileService: void notifyProfileConnectionStateChanged(android.bluetooth.BluetoothDevice,int,int,int)>
SINK|<com.android.systemui.recent.RecentsVerticalScrollView: void setLayoutTransition(android.animation.LayoutTransition)>
SINK|<com.android.browser.homepages.Template$HashMapEntityData: void writeValue(java.io.OutputStream,java.lang.String)>
SINK|<gov.nist.javax.sip.stack.SIPTransactionStack: void putInMergeTable(gov.nist.javax.sip.stack.SIPServerTransaction,gov.nist.javax.sip.message.SIPRequest)>
SINK|<com.android.systemui.SystemUIService: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
SINK|<android.view.accessibility.AccessibilityNodeInfo: void setBoundsInParent(android.graphics.Rect)>
SINK|<android.location.LocationManager: void requestLocationUpdates(java.lang.String,long,float,android.location.LocationListener)>
SINK|<com.android.internal.util.AsyncChannel: android.os.Message sendMessageSynchronously(int,int,int)>
SINK|<android.app.ListActivity: void setListAdapter(android.widget.ListAdapter)>
SINK|<com.android.mms.dom.smil.SmilRegionElementImpl: void setLeft(int)>
SINK|<android.media.effect.SingleFilterEffect: void setParameter(java.lang.String,java.lang.Object)>
SINK|<java.text.DateFormat: void setLenient(boolean)>
SINK|<org.apache.harmony.xnet.provider.jsse.Finished: void send(org.apache.harmony.xnet.provider.jsse.HandshakeIODataStream)>
SINK|<android.webkit.WebSettings: void setDefaultFixedFontSize(int)>
SINK|<android.bluetooth.IBluetooth$Stub$Proxy: boolean setRemoteAlias(android.bluetooth.BluetoothDevice,java.lang.String)>
SINK|<java.nio.FloatToByteBufferAdapter: java.nio.FloatBuffer put(float[],int,int)>
SINK|<android.renderscript.ProgramVertexFixedFunction$Constants: void setProjection(android.renderscript.Matrix4f)>
SINK|<android.app.ActivityManagerProxy: void startRunning(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>
SINK|<org.apache.harmony.xnet.provider.jsse.OpenSSLSocketImpl: void sendUrgentData(int)>
SINK|<com.android.internal.telephony.PhoneBase: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
SINK|<android.webkit.CallbackProxy: void onScaleChanged(float,float)>
SINK|<com.android.mms.ui.MessageUtils: void recordSound(android.app.Activity,int,long)>
SINK|<android.widget.ResourceCursorAdapter: void setDropDownViewResource(int)>
SINK|<com.android.email.activity.MessageListFragment: void onActivityCreated(android.os.Bundle)>
SINK|<com.android.server.wm.WindowManagerService: void saveANRStateLocked(com.android.server.wm.AppWindowToken,com.android.server.wm.WindowState)>
SINK|<android.net.sip.ISipSessionListener$Stub$Proxy: void onRingingBack(android.net.sip.ISipSession)>
SINK|<com.android.server.input.InputManagerService: void vibrate(int,long[],int,android.os.IBinder)>
SINK|<com.google.android.mms.util.PduCache: boolean put(java.lang.Object,java.lang.Object)>
SINK|<android.filterfw.core.GLFrame: void setFloats(float[])>
SINK|<com.android.videoeditor.TransitionsActivity: void onListItemClick(android.widget.ListView,android.view.View,int,long)>
SINK|<com.android.internal.widget.ActionBarView$SavedState: void writeToParcel(android.os.Parcel,int)>
SINK|<android.app.Activity: void setContentView(int)>
SINK|<com.android.internal.telephony.gsm.GsmServiceStateTracker: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
SINK|<android.net.wifi.p2p.WifiP2pManager: void setWFDInfo(android.net.wifi.p2p.WifiP2pManager$Channel,android.net.wifi.p2p.WifiP2pWfdInfo,android.net.wifi.p2p.WifiP2pManager$ActionListener)>
SINK|<com.android.internal.telephony.gsm.GsmSMSDispatcher: void sendSms(com.android.internal.telephony.SMSDispatcher$SmsTracker)>
SINK|<java.nio.MappedByteBufferAdapter: java.nio.ByteBuffer putLong(int,long)>
SINK|<org.apache.harmony.xnet.provider.jsse.OpenSSLSocketImplWrapper: void setSoTimeout(int)>
SINK|<android.graphics.Paint: android.graphics.Rasterizer setRasterizer(android.graphics.Rasterizer)>
SINK|<com.android.internal.view.IInputMethod$Stub$Proxy: void revokeSession(com.android.internal.view.IInputMethodSession)>
SINK|<com.android.exchange.EasSyncService: boolean tryProvision(com.android.exchange.EasSyncService)>
SINK|<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setSingleChoiceItems(int,int,android.content.DialogInterface$OnClickListener)>
SINK|<android.widget.SimpleAdapter: void setDropDownViewResource(int)>
SINK|<libcore.net.http.HttpConnection: void setSoTimeout(int)>
SINK|<com.android.internal.telephony.cdma.RuimRecords: void setMsisdnNumber(java.lang.String,java.lang.String,android.os.Message)>
SINK|<com.android.exchange.EasOutboxService$SendMailEntity: void writeTo(java.io.OutputStream)>
SINK|<android.widget.TableLayout: void setShrinkAllColumns(boolean)>
SINK|<java.util.concurrent.CompletableFuture: java.util.concurrent.CompletableFuture thenRun(java.lang.Runnable)>
SINK|<java.io.PrintWriter: void write(char[])>
SINK|<gov.nist.javax.sip.header.ims.SecurityVerify: void setValue(java.lang.String)>
SINK|<android.service.wallpaper.WallpaperService$Engine: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
SINK|<com.android.internal.view.menu.ListMenuItemView: void setShortcut(boolean,char)>
SINK|<android.graphics.Rect: boolean setIntersect(android.graphics.Rect,android.graphics.Rect)>
SINK|<android.hardware.usb.IUsbManager$Stub$Proxy: void setMassStorageBackingFile(java.lang.String)>
SINK|<com.android.internal.telephony.sip.SipPhone: void setCallForwardingOption(int,int,java.lang.String,int,android.os.Message)>
SINK|<org.apache.harmony.xml.parsers.DocumentBuilderFactoryImpl: void setAttribute(java.lang.String,java.lang.Object)>
SINK|<android.view.accessibility.AccessibilityRecord: void setChecked(boolean)>
SINK|<java.time.zone.ZoneOffsetTransitionRule: java.lang.Object writeReplace()>
SINK|<com.android.internal.os.LoggingPrintStream: void write(byte[],int,int)>
SINK|<android.widget.RemoteViews: void setLabelFor(int,int)>
SINK|<android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoStubImpl: void setBoundsInScreen(java.lang.Object,android.graphics.Rect)>
SINK|<android.media.AudioRecord: int setNotificationMarkerPosition(int)>
SINK|<com.android.phone.CallFeaturesSetting: void startActivityForResult(android.content.Intent,int)>
SINK|<android.content.ContentProviderOperation$Builder: android.content.ContentProviderOperation$Builder withValues(android.content.ContentValues)>
SINK|<android.view.accessibility.IAccessibilityManager$Stub$Proxy: int addAccessibilityInteractionConnection(android.view.IWindow,android.view.accessibility.IAccessibilityInteractionConnection,int)>
SINK|<android.widget.DatePicker: void setCalendarViewShown(boolean)>
SINK|<android.media.AudioManager: void setRouting(int,int,int)>
SINK|<com.google.common.base.CharMatcher$LookupTable: void set(char)>
SINK|<com.android.internal.telephony.cdma.CdmaDataConnectionTracker: void onDataSetupComplete(android.os.AsyncResult)>
SINK|<android.os.INetworkManagementService$Stub$Proxy: void setInterfaceDown(java.lang.String)>
SINK|<com.android.emailcommon.provider.EmailContent$Message: android.net.Uri save(android.content.Context)>
SINK|<org.apache.harmony.security.x509.ExtensionValue: void dumpValue(java.lang.StringBuilder)>
SINK|<com.android.browser.view.PieStackView: void setCurrent(int)>
SINK|<com.android.server.power.DisplayPowerState$2: void setValue(java.lang.Object,int)>
SINK|<android.view.View: void setDrawingCacheEnabled(boolean)>
SINK|<com.adobe.xmp.impl.CountOutputStream: void write(byte[])>
SINK|<dalvik.system.VMRuntime: long setMinimumHeapSize(long)>
SINK|<android.content.IContentService$Stub$Proxy: boolean isSyncActive(android.accounts.Account,java.lang.String)>
SINK|<android.view.TextureView: void setTransform(android.graphics.Matrix)>
SINK|<com.android.exchange.EasOutboxService: void sendMessage(android.content.Context,long,com.android.emailcommon.provider.EmailContent$Message)>
SINK|<com.android.contacts.datepicker.DatePicker$SavedState: void writeToParcel(android.os.Parcel,int)>
SINK|<libcore.net.http.RetryableOutputStream: void writeToSocket(java.io.OutputStream)>
SINK|<android.app.ActivityManagerProxy: void killApplicationProcess(java.lang.String,int)>
SINK|<com.android.camera.ComboPreferences: void setLocalId(android.content.Context,int)>
SINK|<android.preference.ListPreference: void setEntries(int)>
SINK|<org.apache.http.client.params.ClientParamBean: void setRejectRelativeRedirect(boolean)>
SINK|<com.android.server.NetworkManagementService: void setFirewallUidRule(int,boolean)>
SINK|<libcore.io.ForwardingOs: int sendto(java.io.FileDescriptor,byte[],int,int,int,java.net.InetAddress,int)>
SINK|<android.media.videoeditor.MediaImageItem: void setGeneratedImageClip(java.lang.String)>
SINK|<org.apache.http.impl.conn.DefaultClientConnectionOperator: void updateSecureConnection(org.apache.http.conn.OperatedClientConnection,org.apache.http.HttpHost,org.apache.http.protocol.HttpContext,org.apache.http.params.HttpParams)>
SINK|<android.app.ActivityManager$RunningAppProcessInfo: void writeToParcel(android.os.Parcel,int)>
SINK|<com.android.email.activity.setup.MailboxSettings: void setupLookbackPreferenceOptions(android.content.Context,android.preference.ListPreference,com.android.emailcommon.provider.Account)>
SINK|<android.app.Activity: void setPersistent(boolean)>
SINK|<java.util.jar.JarVerifier$VerifierEntry: void write(int)>
SINK|<com.android.server.PackageManagerBackupAgent: void onRestore(android.app.backup.BackupDataInput,int,android.os.ParcelFileDescriptor)>
SINK|<android.location.ILocationManager$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>
SINK|<android.content.res.Resources: void parseBundleExtra(java.lang.String,android.util.AttributeSet,android.os.Bundle)>
SINK|<android.preference.Preference: boolean persistString(java.lang.String)>
SINK|<java.io.EmulatedFieldsForDumping: void put(java.lang.String,long)>
SINK|<com.android.contacts.editor.TextFieldsEditorView$SavedState: void writeToParcel(android.os.Parcel,int)>
SINK|<com.android.server.ConnectivityService: void setDataDependency(int,boolean)>
SINK|<java.util.jar.Manifest: void write(java.io.OutputStream)>
SINK|<com.android.systemui.screenshot.SaveImageInBackgroundTask: com.android.systemui.screenshot.SaveImageInBackgroundData doInBackground(com.android.systemui.screenshot.SaveImageInBackgroundData[])>
SINK|<com.android.videoeditor.service.ApiService: void setAudioTrackMute(android.content.Context,java.lang.String,java.lang.String,boolean)>
SINK|<java.time.Duration: long parseNumber(java.lang.CharSequence,java.lang.String,int,java.lang.String)>
SINK|<java.util.concurrent.ForkJoinTask: void writeObject(java.io.ObjectOutputStream)>
SINK|<libcore.io.ForwardingOs: int write(java.io.FileDescriptor,byte[],int,int)>
SINK|<android.app.ActivityManagerProxy: int stopService(android.app.IApplicationThread,android.content.Intent,java.lang.String,int)>
SINK|<android.app.WallpaperManager: void setWallpaperOffsets(android.os.IBinder,float,float)>
SINK|<com.android.nfc.dhimpl.NativeP2pDevice: boolean send(byte[])>
SINK|<org.apache.harmony.xnet.provider.jsse.PinFailureLogger: void log(java.lang.String,boolean,boolean,java.util.List)>
SINK|<android.util.Xml: void parse(java.io.InputStream,android.util.Xml$Encoding,org.xml.sax.ContentHandler)>
SINK|<android.view.View: void setBackground(android.graphics.drawable.Drawable)>
SINK|<android.widget.ProgressBar: void setIndeterminateDrawable(android.graphics.drawable.Drawable)>
SINK|<java.util.concurrent.Executors: java.util.concurrent.ScheduledExecutorService unconfigurableScheduledExecutorService(java.util.concurrent.ScheduledExecutorService)>
SINK|<org.apache.http.protocol.HttpService: void handleRequest(org.apache.http.HttpServerConnection,org.apache.http.protocol.HttpContext)>
SINK|<android.graphics.Interpolator: void setKeyFrame(int,int,float[])>
SINK|<android.location.ILocationManager$Stub$Proxy: void removeGpsStatusListener(android.location.IGpsStatusListener)>
SINK|<android.view.inputmethod.InputMethodManager: void notifySuggestionPicked(android.text.style.SuggestionSpan,java.lang.String,int)>
SINK|<android.view.accessibility.IAccessibilityInteractionConnection$Stub$Proxy: void focusSearch(long,int,int,android.view.accessibility.IAccessibilityInteractionConnectionCallback,int,int,long)>
SINK|<android.view.View: void setLayoutParams(android.view.ViewGroup$LayoutParams)>
SINK|<com.android.calendar.Utils: void setTodayIcon(android.graphics.drawable.LayerDrawable,android.content.Context,java.lang.String)>
SINK|<android.view.accessibility.AccessibilityEvent: void setContentDescription(java.lang.CharSequence)>
SINK|<android.media.MediaPlayer: void setDataSource(java.lang.String,java.util.Map)>
SINK|<android.view.View$9: void setValue(android.view.View,float)>
SINK|<com.android.bluetooth.btservice.AdapterService$AdapterServiceBinder: boolean setRemoteAlias(android.bluetooth.BluetoothDevice,java.lang.String)>
SINK|<com.coremedia.iso.IsoTypeWriter: void writeUInt24(java.nio.ByteBuffer,int)>
SINK|<org.apache.http.cookie.CookieSpecRegistry: void register(java.lang.String,org.apache.http.cookie.CookieSpecFactory)>
SINK|<org.apache.http.impl.conn.LoggingSessionOutputBuffer: void write(int)>
SINK|<org.xml.sax.helpers.AttributesImpl: void setAttribute(int,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>
SINK|<android.net.INetworkPolicyManager$Stub$Proxy: void setUidPolicy(int,int)>
SINK|<com.android.server.usb.UsbSettingsManager: void deviceDetached(android.hardware.usb.UsbDevice)>
SINK|<android.widget.ZoomButton: void setEnabled(boolean)>
SINK|<com.android.server.am.ActivityManagerService: boolean sendPendingBroadcastsLocked(com.android.server.am.ProcessRecord)>
SINK|<com.google.android.apps.lightcycle.camera.CameraUtility: void setFrameRate(android.hardware.Camera$Parameters)>
SINK|<com.android.bluetooth.opp.BluetoothOppPreference: void setName(android.bluetooth.BluetoothDevice,java.lang.String)>
SINK|<android.view.IWindowSession$Stub$Proxy: void reportDropResult(android.view.IWindow,boolean)>
SINK|<com.android.systemui.statusbar.CommandQueue: void setHardKeyboardStatus(boolean,boolean)>
SINK|<android.app.WallpaperManager: void sendWallpaperCommand(android.os.IBinder,java.lang.String,int,int,int,android.os.Bundle)>
SINK|<android.widget.FrameLayout: void setMeasureAllChildren(boolean)>
SINK|<com.android.internal.telephony.test.SimulatedCommands: void setLocationUpdates(boolean,android.os.Message)>
SINK|<android.webkit.HTML5VideoViewProxy: void setBaseLayer(int)>
SINK|<java.util.zip.ZipEntry: void setMethod(int)>
SINK|<org.xml.sax.helpers.XMLFilterImpl: void setEntityResolver(org.xml.sax.EntityResolver)>
SINK|<com.google.android.gms.common.internal.IGmsServiceBroker$Stub$Proxy: void getPlusService(com.google.android.gms.common.internal.IGmsCallbacks,int,java.lang.String,java.lang.String,java.lang.String[],java.lang.String,android.os.Bundle)>
SINK|<com.android.internal.textservice.ISpellCheckerSessionListener$Stub$Proxy: void onGetSentenceSuggestions(android.view.textservice.SentenceSuggestionsInfo[])>
SINK|<android.widget.ListPopupWindow: void setSelection(int)>
SINK|<android.widget.HorizontalScrollView: void setOverScrollMode(int)>
SINK|<com.android.internal.telephony.ISms$Stub$Proxy: void setPremiumSmsPermission(java.lang.String,int)>
SINK|<android.app.AlertDialog: void setInverseBackgroundForced(boolean)>
SINK|<com.android.internal.telephony.sip.SipCommandInterface: void sendEnvelope(java.lang.String,android.os.Message)>
SINK|<android.widget.TextView: void setTextKeepState(java.lang.CharSequence,android.widget.TextView$BufferType)>
SINK|<com.android.mms.transaction.MessagingNotification: void notifySendFailed(android.content.Context,boolean)>
SINK|<com.android.launcher2.Launcher: void addWidgetToAutoAdvanceIfNeeded(android.view.View,android.appwidget.AppWidgetProviderInfo)>
SINK|<android.widget.SimpleCursorAdapter: void setStringConversionColumn(int)>
SINK|<com.android.email.MessagingListener: void sendPendingMessagesCompleted(long)>
SINK|<android.filterfw.core.FieldPort: void setFrame(android.filterfw.core.Frame)>
SINK|<android.net.sip.ISipSessionListener$Stub$Proxy: void onCallBusy(android.net.sip.ISipSession)>
SINK|<android.nfc.Tag: void writeToParcel(android.os.Parcel,int)>
SINK|<com.android.commands.am.Am$IntentReceiver: void performReceive(android.content.Intent,int,java.lang.String,android.os.Bundle,boolean,boolean,int)>
SINK|<com.android.internal.telephony.sip.SipPhoneBase: void notifyNewRingingConnection(com.android.internal.telephony.Connection)>
SINK|<com.android.internal.policy.impl.keyguard.KeyguardActivityLauncher: void launchWidgetPicker(int)>
SINK|<com.google.android.apps.lightcycle.panorama.LightCycleNative$NativeUpdatePhotoRenderingCallback: void updateTransforms(float[])>
SINK|<org.apache.http.impl.io.AbstractSessionOutputBuffer: void write(byte[],int,int)>
SINK|<com.android.internal.policy.impl.keyguard.KeyguardTransportControlView$IRemoteControlDisplayWeak: void setAllMetadata(int,android.os.Bundle,android.graphics.Bitmap)>
SINK|<java.util.jar.Attributes: java.lang.Object put(java.lang.Object,java.lang.Object)>
SINK|<java.util.SimpleTimeZone: void setStartRule(int,int,int,int,boolean)>
SINK|<android.graphics.drawable.NinePatchDrawable: void setDither(boolean)>
SINK|<libcore.io.Streams: java.lang.String readFully(java.io.Reader)>
SINK|<java.io.ObjectOutputStream: void writeDouble(double)>
SINK|<com.android.internal.telephony.cdma.CdmaLteServiceStateTracker: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
SINK|<com.android.mms.ui.AudioAttachmentView: void setImageVisibility(boolean)>
SINK|<android.media.AudioTrack: int setPlaybackHeadPosition(int)>
SINK|<org.apache.http.conn.params.ConnPerRouteBean: void setMaxForRoute(org.apache.http.conn.routing.HttpRoute,int)>
SINK|<android.widget.AutoCompleteTextView: void setDropDownHeight(int)>
SINK|<android.widget.RemoteViewsAdapter$RemoteViewsFrameLayoutRefSet: void add(int,android.widget.RemoteViewsAdapter$RemoteViewsFrameLayout)>
SINK|<android.os.IUserManager$Stub$Proxy: void wipeUser(int)>
SINK|<java.util.Calendar: void setFirstDayOfWeek(int)>
SINK|<com.android.bluetooth.hfp.HeadsetStateMachine$Disconnected: boolean processMessage(android.os.Message)>
SINK|<android.database.sqlite.SQLiteProgram: void bindDouble(int,double)>
SINK|<android.webkit.WebSettingsClassic: void setAutoFillEnabled(boolean)>
SINK|<android.service.dreams.IDreamManager$Stub$Proxy: void finishSelf(android.os.IBinder)>
SINK|<android.preference.Preference: void setKey(java.lang.String)>
SINK|<com.android.server.NotificationManagerService: void enqueueNotificationInternal(java.lang.String,int,int,java.lang.String,int,android.app.Notification,int[],int)>
SINK|<libcore.net.http.HttpsURLConnectionImpl: void setRequestProperty(java.lang.String,java.lang.String)>
SINK|<gov.nist.javax.sip.header.ims.PMediaAuthorization: void setValue(java.lang.String)>
SINK|<android.media.AudioManager: void setParameter(java.lang.String,java.lang.String)>
SINK|<android.content.ContentQueryMap: void setKeepUpdated(boolean)>
SINK|<android.os.Debug: boolean dumpService(java.lang.String,java.io.FileDescriptor,java.lang.String[])>
SINK|<android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoStubImpl: void setVisibleToUser(java.lang.Object,boolean)>
SINK|<android.view.IWindowManager$Stub$Proxy: void addDisplayContentChangeListener(int,android.view.IDisplayContentChangeListener)>
SINK|<android.util.Slog: int e(java.lang.String,java.lang.String,java.lang.Throwable)>
SINK|<android.widget.TextView: void setTextSize(float)>
SINK|<com.android.server.pm.UserManagerService: void setUserName(int,java.lang.String)>
SINK|<android.app.backup.IRestoreSession$Stub$Proxy: int restorePackage(java.lang.String,android.app.backup.IRestoreObserver)>
SINK|<gov.nist.core.NameValueList: gov.nist.core.NameValue put(java.lang.String,gov.nist.core.NameValue)>
SINK|<android.widget.TextView: void setMovementMethod(android.text.method.MovementMethod)>
SINK|<android.media.IAudioService$Stub$Proxy: int setBluetoothA2dpDeviceConnectionState(android.bluetooth.BluetoothDevice,int)>
SINK|<org.apache.http.impl.io.ContentLengthOutputStream: void write(int)>
SINK|<java.net.ServerSocket: void bind(java.net.SocketAddress)>
SINK|<android.view.IWindowManager$Stub$Proxy: void removeAppToken(android.os.IBinder)>
SINK|<java.net.HttpURLConnection: void setInstanceFollowRedirects(boolean)>
SINK|<android.widget.Gallery: void setUnselectedAlpha(float)>
SINK|<android.webkit.WebViewClassic$FocusTransitionDrawable: void draw(android.graphics.Canvas)>
SINK|<com.android.internal.telephony.ITelephonyRegistry$Stub$Proxy: void notifyCallState(int,java.lang.String)>
SINK|<android.app.Instrumentation: void callActivityOnRestoreInstanceState(android.app.Activity,android.os.Bundle)>
SINK|<java.sql.Time: void setMonth(int)>
SINK|<android.app.WallpaperManager: void setWallpaperOffsetSteps(float,float)>
SINK|<org.apache.http.conn.params.ConnRouteParams: void setLocalAddress(org.apache.http.params.HttpParams,java.net.InetAddress)>
SINK|<com.android.internal.telephony.PhoneBase: void notifyServiceStateChangedP(android.telephony.ServiceState)>
SINK|<com.android.server.wm.WindowManagerService: boolean viewServerWindowCommand(java.net.Socket,java.lang.String,java.lang.String)>
SINK|<com.android.exchange.adapter.CalendarSyncAdapter$EasCalendarSyncParser: void addEvent(com.android.exchange.adapter.CalendarSyncAdapter$CalendarOperations,java.lang.String,boolean)>
SINK|<com.android.server.wm.WindowManagerService: android.os.Bundle sendWindowWallpaperCommandLocked(com.android.server.wm.WindowState,java.lang.String,int,int,int,android.os.Bundle,boolean)>
SINK|<android.widget.PopupWindow: void setAnimationStyle(int)>
SINK|<org.apache.harmony.security.asn1.ASN1Oid$1: void setEncodingContent(org.apache.harmony.security.asn1.BerOutputStream)>
SINK|<com.google.android.mms.pdu.MultimediaMessagePdu: void setPriority(int)>
SINK|<android.net.sip.SimpleSessionDescription: void setAddress(java.lang.String)>
SINK|<android.webkit.CallbackProxy: void onJsAlert(java.lang.String,java.lang.String)>
SINK|<com.android.nfc.NfcService$NfcAdapterService: void dispatch(android.nfc.Tag)>
SINK|<com.android.internal.widget.IRemoteViewsFactory$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>
SINK|<com.android.server.BackupManagerService: void fullBackup(android.os.ParcelFileDescriptor,boolean,boolean,boolean,boolean,java.lang.String[])>
SINK|<java.io.DataOutputStream: void writeChars(java.lang.String)>
SINK|<com.android.providers.calendar.CalendarProvider2: void notifyChange(boolean)>
SINK|<android.content.res.Configuration: int updateFrom(android.content.res.Configuration)>
SINK|<android.net.CaptivePortalTracker$DelayedCaptiveCheckState: boolean processMessage(android.os.Message)>
SINK|<com.android.internal.telephony.BaseCommands: void setOnRestrictedStateChanged(android.os.Handler,int,java.lang.Object)>
SINK|<com.android.gallery3d.ui.PositionController: void setConstrainedFrame(android.graphics.Rect)>
SINK|<android.app.Notification$Action: void writeToParcel(android.os.Parcel,int)>
SINK|<android.app.ActivityManager$RunningTaskInfo: void writeToParcel(android.os.Parcel,int)>
SINK|<com.android.bluetooth.pbap.BluetoothPbapService$SocketAcceptThread: void run()>
SINK|<android.net.http.Headers: void setCacheControl(java.lang.String)>
SINK|<com.android.internal.view.menu.ActionMenuItem: android.view.MenuItem setCheckable(boolean)>
SINK|<com.android.browser.Controller: void start(android.content.Intent)>
SINK|<android.os.Parcel: void writeByteArray(byte[])>
SINK|<com.android.inputmethod.keyboard.internal.AlphabetShiftState: void setShifted(boolean)>
SINK|<com.android.contacts.list.ContactListFilterControllerImpl: void setContactListFilter(com.android.contacts.list.ContactListFilter,boolean)>
SINK|<com.android.server.power.PowerManagerService: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
SINK|<com.adobe.xmp.options.PropertyOptions: com.adobe.xmp.options.PropertyOptions setArrayAltText(boolean)>
SINK|<com.android.gallery3d.exif.ExifTag: void setTimeValue(long)>
SINK|<android.inputmethodservice.IInputMethodSessionWrapper: void executeMessage(android.os.Message)>
SINK|<android.webkit.WebSettingsClassic: void setPluginsPath(java.lang.String)>
SINK|<com.android.mms.ui.SlideView: void setVideoThumbnail(java.lang.String,android.graphics.Bitmap)>
SINK|<android.app.admin.IDevicePolicyManager$Stub$Proxy: void setKeyguardDisabledFeatures(android.content.ComponentName,int,int)>
SINK|<javax.net.ssl.SSLParameters: void setNeedClientAuth(boolean)>
SINK|<android.test.mock.MockCursor: boolean updateFloat(int,float)>
SINK|<com.google.android.picasasync.MetadataSync$MetadataSyncTask: void performSync(android.content.SyncResult)>
SINK|<com.android.server.StatusBarManagerService: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
SINK|<com.android.mms.transaction.Transaction: byte[] sendPdu(byte[])>
SINK|<org.apache.harmony.xml.ExpatReader: void setProperty(java.lang.String,java.lang.Object)>
SINK|<com.android.contacts.widget.FrameLayoutWithOverlay: void setOverlayClickable(boolean)>
SINK|<com.android.server.pm.PackageManagerService$ServiceIntentResolver: void dumpFilter(java.io.PrintWriter,java.lang.String,android.content.IntentFilter)>
SINK|<android.test.ActivityUnitTestCase: void setApplication(android.app.Application)>
SINK|<android.net.rtp.AudioGroup: void add(android.net.rtp.AudioStream)>
SINK|<android.net.sip.ISipSession$Stub$Proxy: void changeCall(java.lang.String,int)>
SINK|<org.apache.http.impl.cookie.DateUtils$DateFormatHolder: java.text.SimpleDateFormat formatFor(java.lang.String)>
SINK|<android.widget.ToggleButton: void setChecked(boolean)>
SINK|<com.android.email.activity.MessagesAdapter: void toggleSelected(com.android.email.activity.MessageListItem)>
SINK|<android.graphics.Canvas: void setMatrix(android.graphics.Matrix)>
SINK|<org.apache.http.impl.client.AbstractHttpClient: org.apache.http.HttpResponse execute(org.apache.http.client.methods.HttpUriRequest,org.apache.http.protocol.HttpContext)>
SINK|<com.android.email.widget.WidgetManager: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
SINK|<android.view.IWindowManager$Stub$Proxy: void setAppOrientation(android.view.IApplicationToken,int)>
SINK|<android.widget.AbsListView: void setTranscriptMode(int)>
SINK|<com.android.internal.view.IInputMethodManager$Stub$Proxy: boolean showSoftInput(com.android.internal.view.IInputMethodClient,int,android.os.ResultReceiver)>
SINK|<java.text.DecimalFormatSymbols: void setDecimalSeparator(char)>
SINK|<com.android.server.LightsService$Light: void setFlashing(int,int,int,int)>
SINK|<android.os.StrictMode: void incrementExpectedActivityCount(java.lang.Class)>
SINK|<com.android.contacts.widget.FrameLayoutWithOverlay: void setAlphaLayer(android.view.View)>
SINK|<com.android.bluetooth.opp.BluetoothOppUtility: void openReceivedFile(android.content.Context,java.lang.String,java.lang.String,java.lang.Long,android.net.Uri)>
SINK|<android.webkit.OverScrollGlow: boolean drawEdgeGlows(android.graphics.Canvas)>
SINK|<java.time.OffsetDateTime: java.time.OffsetDateTime parse(java.lang.CharSequence,java.time.format.DateTimeFormatter)>
SINK|<android.app.Activity: void openContextMenu(android.view.View)>
SINK|<org.apache.http.params.AbstractHttpParams: org.apache.http.params.HttpParams setDoubleParameter(java.lang.String,double)>
SINK|<android.net.NetworkPolicyManager: void setNetworkPolicies(android.net.NetworkPolicy[])>
SINK|<android.location.LocationManager$ListenerTransport: void onStatusChanged(java.lang.String,int,android.os.Bundle)>
SINK|<android.graphics.drawable.LayerDrawable: boolean setDrawableByLayerId(int,android.graphics.drawable.Drawable)>
SINK|<android.location.Location: void set(android.location.Location)>
SINK|<android.view.accessibility.AccessibilityEvent: void setItemCount(int)>
SINK|<org.apache.http.protocol.HttpService: void setHandlerResolver(org.apache.http.protocol.HttpRequestHandlerResolver)>
SINK|<java.nio.file.Files: java.lang.Runnable asUncheckedRunnable(java.io.Closeable)>
SINK|<android.app.IProcessObserver$Stub$Proxy: void onImportanceChanged(int,int,int)>
SINK|<android.content.res.Resources$Theme: void setTo(android.content.res.Resources$Theme)>
SINK|<android.app.Fragment: void startActivityForResult(android.content.Intent,int,android.os.Bundle)>
SINK|<java.text.DecimalFormat: java.lang.Number parse(java.lang.String,java.text.ParsePosition)>
SINK|<android.bluetooth.BluetoothInputDevice: boolean setProtocolMode(android.bluetooth.BluetoothDevice,int)>
SINK|<com.android.internal.telephony.cdma.CDMAPhone: void setSmscAddress(java.lang.String,android.os.Message)>
SINK|<gov.nist.javax.sip.header.ims.PAccessNetworkInfo: void setCGI3GPP(java.lang.String)>
SINK|<android.view.View$12: void setValue(java.lang.Object,float)>
SINK|<com.android.email.activity.ThreePaneLayout: void setMessageListWidthAnim(int)>
SINK|<com.google.android.apps.lightcycle.util.Size: void set(com.google.android.apps.lightcycle.util.Size)>
SINK|<java.time.Period: void writeExternal(java.io.DataOutput)>
SINK|<com.android.calendar.alerts.AlertUtils$1: void set(int,long,android.app.PendingIntent)>
SINK|<android.app.INotificationManager$Stub$Proxy: void cancelAllNotifications(java.lang.String,int)>
SINK|<com.android.server.power.PowerManagerService$WakeLock: void updateProperties(int,java.lang.String,android.os.WorkSource,int,int)>
SINK|<com.android.internal.view.IInputContext$Stub$Proxy: void performContextMenuAction(int)>
SINK|<com.android.server.wm.WindowManagerService: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
SINK|<android.widget.GridView: void setStretchMode(int)>
SINK|<android.view.accessibility.AccessibilityNodeInfo: void setLabeledBy(android.view.View,int)>
SINK|<com.android.inputmethod.latin.RichInputConnection: void performEditorAction(int)>
SINK|<com.android.emailcommon.service.PolicyServiceProxy: void setAccountHoldFlag(android.content.Context,com.android.emailcommon.provider.Account,boolean)>
SINK|<com.android.email.activity.MessageViewFragmentBase: void onCreate(android.os.Bundle)>
SINK|<com.android.internal.telephony.IIccPhoneBook$Stub$Proxy: boolean updateAdnRecordsInEfByIndex(int,java.lang.String,java.lang.String,int,java.lang.String)>
SINK|<android.media.RemoteControlClient$MetadataEditor: android.media.RemoteControlClient$MetadataEditor putLong(int,long)>
SINK|<com.android.gallery3d.ui.SlotView: boolean setSlotCount(int)>
SINK|<com.android.videoeditor.service.ApiService: void addAudioTrack(android.content.Context,java.lang.String,java.lang.String,android.net.Uri,boolean)>
SINK|<libcore.net.http.RetryableOutputStream: void write(byte[],int,int)>
SINK|<com.android.server.wm.WindowManagerService: void dumpPolicyLocked(java.io.PrintWriter,java.lang.String[],boolean)>
SINK|<com.android.wallpaper.galaxy.ScriptC_galaxy: void bind_vpConstants(com.android.wallpaper.galaxy.ScriptField_VpConsts)>
SINK|<android.media.AudioTrack: int setStereoVolume(float,float)>
SINK|<com.android.server.pm.Settings: boolean setPackageStoppedStateLPw(java.lang.String,boolean,boolean,int,int)>
SINK|<com.android.internal.statusbar.IStatusBarService$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>
SINK|<com.android.mms.ui.MessageListItem: void setImageVisibility(boolean)>
SINK|<com.google.android.apps.lightcycle.math.Matrix3x3d: void set(double,double,double,double,double,double,double,double,double)>
SINK|<java.util.Spliterators: java.util.Spliterator$OfLong spliteratorUnknownSize(java.util.PrimitiveIterator$OfLong,int)>
SINK|<android.view.accessibility.AccessibilityEvent: void writeToParcel(android.os.Parcel,int)>
SINK|<android.net.nsd.DnsSdTxtRecord: void set(java.lang.String,java.lang.String)>
SINK|<com.google.android.picasasync.UploadsManager: boolean access$1300(com.google.android.picasasync.UploadsManager,com.google.android.picasasync.UploadTaskEntry,com.google.android.picasasync.UploadedEntry,android.content.SyncResult)>
SINK|<java.time.chrono.HijrahChronology: int[] parseMonths(java.lang.String)>
SINK|<android.os.INetworkManagementService$Stub$Proxy: void tetherInterface(java.lang.String)>
SINK|<android.app.ActivityManagerProxy: void setPackageScreenCompatMode(java.lang.String,int)>
SINK|<com.android.email.MessagingController: void processPendingActions(long)>
SINK|<android.app.ContextImpl: void startActivityAsUser(android.content.Intent,android.os.UserHandle)>
SINK|<com.android.systemui.statusbar.phone.NavigationBarView: void setMenuVisibility(boolean)>
SINK|<android.app.backup.IBackupManager$Stub$Proxy: void acknowledgeFullBackupOrRestore(int,boolean,java.lang.String,java.lang.String,android.app.backup.IFullBackupRestoreObserver)>
SINK|<com.android.email.MessageListContext: void writeToParcel(android.os.Parcel,int)>
SINK|<android.view.View: void setScrollX(int)>
SINK|<com.android.internal.telephony.AdnRecordCache: void requestLoadAllAdnLike(int,int,android.os.Message)>
SINK|<com.android.server.display.OverlayDisplayAdapter: void dumpLocked(java.io.PrintWriter)>
SINK|<org.apache.http.impl.client.RequestWrapper: void setMethod(java.lang.String)>
SINK|<android.widget.RemoteViews: void setOnClickFillInIntent(int,android.content.Intent)>
SINK|<com.android.server.am.ActivityManagerService: void setDebugApp(java.lang.String,boolean,boolean)>
SINK|<android.app.IAlarmManager$Stub$Proxy: void setTimeZone(java.lang.String)>
SINK|<java.time.zone.ZoneOffsetTransition: void writeExternal(java.io.DataOutput)>
SINK|<java.text.DecimalFormatSymbols: void setPercent(char)>
SINK|<android.widget.CursorTreeAdapter: void notifyDataSetChanged(boolean)>
SINK|<android.filterfw.core.FieldPort: void setFieldFrame(android.filterfw.core.Frame,boolean)>
SINK|<com.android.internal.telephony.ISms$Stub$Proxy: void sendText(java.lang.String,java.lang.String,java.lang.String,android.app.PendingIntent,android.app.PendingIntent)>
SINK|<com.android.exchange.adapter.AccountSyncAdapter: boolean sendLocalChanges(com.android.exchange.adapter.Serializer)>
SINK|<com.android.browser.homepages.Template: void write(java.io.OutputStream)>
SINK|<java.util.zip.Adler32: void update(byte[])>
SINK|<com.android.email.mail.store.ImapFolder: void setFlags(com.android.emailcommon.mail.Message[],com.android.emailcommon.mail.Flag[],boolean)>
SINK|<com.android.internal.telephony.RIL: void setPreferredVoicePrivacy(boolean,android.os.Message)>
SINK|<com.google.common.io.ByteStreams$ByteArrayDataOutputStream: void writeBytes(java.lang.String)>
SINK|<java.net.DatagramPacket: void setSocketAddress(java.net.SocketAddress)>
SINK|<java.util.MiniEnumSet: void setRange(java.lang.Enum,java.lang.Enum)>
SINK|<java.io.EmulatedFieldsForDumping: void put(java.lang.String,boolean)>
SINK|<gov.nist.javax.sip.header.Via: void setPort(int)>
SINK|<javax.security.auth.PrivateCredentialPermission: void main(java.lang.String[])>
SINK|<com.android.server.BackupManagerService$ActiveRestoreSession: int restoreSome(long,android.app.backup.IRestoreObserver,java.lang.String[])>
SINK|<gov.nist.javax.sip.stack.SIPServerTransaction: void setOriginalRequest(gov.nist.javax.sip.message.SIPRequest)>
SINK|<com.android.contacts.model.dataitem.StructuredNameDataItem: void setDisplayName(java.lang.String)>
SINK|<org.apache.harmony.xnet.provider.jsse.SSLRecordProtocol: byte[] wrap(byte,byte[],int,int)>
SINK|<com.android.mms.util.BackgroundLoaderManager: boolean addCallback(android.net.Uri,com.android.mms.util.ItemLoadedCallback)>
SINK|<com.android.server.pm.PackageManagerService: void readPermission(org.xmlpull.v1.XmlPullParser,java.lang.String)>
SINK|<com.android.server.ConnectivityService: void setNetworkPreference(int)>
SINK|<java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue: void put(java.lang.Object)>
SINK|<android.webkit.WebViewClassic: boolean onSavePassword(java.lang.String,java.lang.String,java.lang.String,android.os.Message)>
SINK|<libcore.io.ForwardingOs: void seteuid(int)>
SINK|<android.view.GLES20DisplayList: void setTransformationInfo(float,float,float,float,float,float,float,float)>
SINK|<com.android.internal.policy.impl.keyguard.KeyguardTransportControlView$IRemoteControlDisplayWeak: void setTransportControlFlags(int,int)>
SINK|<org.apache.harmony.xml.dom.NodeImpl: java.lang.Object setUserData(java.lang.String,java.lang.Object,org.w3c.dom.UserDataHandler)>
SINK|<android.location.ILocationManager$Stub$Proxy: void clearTestProviderEnabled(java.lang.String)>
SINK|<com.android.deskclock.AlarmClock: void onActivityResult(int,int,android.content.Intent)>
SINK|<com.android.server.input.PersistentDataStore$InputDeviceState: boolean removeKeyboardLayout(java.lang.String)>
SINK|<com.android.server.TextServicesManagerService: void setCurrentSpellChecker(java.lang.String,java.lang.String)>
SINK|<com.android.internal.view.IInputMethodCallback$Stub$Proxy: void sessionCreated(com.android.internal.view.IInputMethodSession)>
SINK|<libcore.net.http.HttpsURLConnectionImpl: void setChunkedStreamingMode(int)>
SINK|<com.android.camera.PieController: void setCameraId(int)>
SINK|<android.content.ContextWrapper: void startActivities(android.content.Intent[],android.os.Bundle)>
SINK|<com.android.internal.appwidget.IAppWidgetService$Stub$Proxy: void notifyAppWidgetViewDataChanged(int[],int)>
SINK|<java.util.logging.LogRecord: void setThreadID(int)>
SINK|<android.graphics.Paint: android.graphics.Shader setShader(android.graphics.Shader)>
SINK|<android.inputmethodservice.ExtractEditText: void setCursorPosition_internal(int,int)>
SINK|<android.widget.ImageView: void setImageMatrix(android.graphics.Matrix)>
SINK|<com.android.email.Controller$LegacyListener: void sendPendingMessagesStarted(long,long)>
SINK|<com.android.emailcommon.service.IEmailService$Stub$Proxy: boolean deleteFolder(long,java.lang.String)>
SINK|<android.media.audiofx.Virtualizer: void setStrength(short)>
SINK|<com.android.internal.telephony.test.SimulatedCommands: void setMute(boolean,android.os.Message)>
SINK|<org.apache.james.mime4j.decoder.DecoderUtil: byte[] decodeBase64(java.lang.String)>
SINK|<android.appwidget.AppWidgetManager: void bindRemoteViewsService(int,android.content.Intent,android.os.IBinder,android.os.UserHandle)>
SINK|<com.android.videoeditor.service.ApiService: void deleteProject(android.content.Context,java.lang.String)>
SINK|<android.security.IKeyChainService$Stub$Proxy: boolean hasGrant(int,java.lang.String)>
SINK|<android.app.ApplicationThreadProxy: void scheduleReceiver(android.content.Intent,android.content.pm.ActivityInfo,android.content.res.CompatibilityInfo,int,java.lang.String,android.os.Bundle,boolean,int)>
SINK|<android.app.DownloadManager$Query: android.app.DownloadManager$Query setFilterByStatus(int)>
SINK|<java.security.cert.X509CertSelector: void setSerialNumber(java.math.BigInteger)>
SINK|<com.android.gallery3d.filtershow.ui.ImageCurves: void setChannel(int)>
SINK|<android.view.ViewGroup: void setLayoutAnimation(android.view.animation.LayoutAnimationController)>
SINK|<com.android.exchange.ExchangeService: void startManualSync(long,int,com.android.exchange.Request)>
SINK|<android.net.BaseNetworkStateTracker: void setPolicyDataEnable(boolean)>
SINK|<android.app.Activity: void setFeatureDrawableAlpha(int,int)>
SINK|<com.google.android.apps.lightcycle.panorama.MessageSender: void notifyAll(int,float,java.lang.String)>
SINK|<java.util.concurrent.ConcurrentLinkedQueue$Node: void lazySetNext(java.util.concurrent.ConcurrentLinkedQueue$Node)>
SINK|<android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoStubImpl: void setClassName(java.lang.Object,java.lang.CharSequence)>
SINK|<android.app.PendingIntent: void send(android.content.Context,int,android.content.Intent,android.app.PendingIntent$OnFinished,android.os.Handler)>
SINK|<com.google.android.apps.lightcycle.xmp.XmpUtil: boolean writeXMPMeta(java.lang.String,com.adobe.xmp.XMPMeta)>
SINK|<gov.nist.javax.sip.header.ims.SecurityAgree: void setSPIClient(int)>
SINK|<org.apache.http.client.protocol.ClientContextConfigurer: void setCredentialsProvider(org.apache.http.client.CredentialsProvider)>
SINK|<android.location.Address: void setLongitude(double)>
SINK|<java.util.GregorianCalendar: void setGregorianChange(java.util.Date)>
SINK|<com.google.android.picasasync.PicasaFacade: android.net.Uri requestImmediateSyncOnAlbum(long)>
SINK|<org.xml.sax.helpers.LocatorImpl: void setColumnNumber(int)>
SINK|<gov.nist.javax.sip.header.NameMap: void addExtensionHeader(java.lang.String,java.lang.String)>
SINK|<android.widget.TextView: void setExtractedText(android.view.inputmethod.ExtractedText)>
SINK|<android.hardware.Camera$Parameters: void setPreviewFrameRate(int)>
SINK|<gov.nist.javax.sip.stack.SIPServerTransaction: void sendResponse(javax.sip.message.Response)>
SINK|<android.util.PrintWriterPrinter: void println(java.lang.String)>
SINK|<com.android.camera.CameraSettings: void initialCameraPictureSize(android.content.Context,android.hardware.Camera$Parameters)>
SINK|<android.util.Log: int v(java.lang.String,java.lang.String)>
SINK|<android.app.ActivityManagerProxy: int checkPermission(java.lang.String,int,int)>
SINK|<java.util.concurrent.ThreadPoolExecutor: void execute(java.lang.Runnable)>
SINK|<android.webkit.WebSettings: void setNeedInitialFocus(boolean)>
SINK|<android.database.sqlite.SQLiteProgram: void bindBlob(int,byte[])>
SINK|<android.net.sip.SipManager: void setRegistrationListener(java.lang.String,android.net.sip.SipRegistrationListener)>
SINK|<android.support.v4.app.NotificationCompat$Builder: android.support.v4.app.NotificationCompat$Builder setAutoCancel(boolean)>
SINK|<java.util.logging.Logger: void setManager(java.util.logging.LogManager)>
SINK|<android.net.http.Headers: void setLastModified(java.lang.String)>
SINK|<android.speech.tts.TextToSpeechService$CallbackMap: void dispatchOnDone(java.lang.Object,java.lang.String)>
SINK|<android.telephony.SmsManager: boolean disableCellBroadcastRange(int,int)>
SINK|<exts.whats.activities.Cards: android.content.ComponentName startService(android.content.Intent)>
SINK|<com.android.server.LightsService$Light: void setBrightness(int,int)>
SINK|<java.util.concurrent.atomic.AtomicMarkableReference: void set(java.lang.Object,boolean)>
SINK|<gov.nist.javax.sip.stack.SIPDialog: void sendReliableProvisionalResponse(javax.sip.message.Response)>
SINK|<com.android.server.wm.WindowStateAnimator: void dump(java.io.PrintWriter,java.lang.String,boolean)>
SINK|<android.net.nsd.NsdManager: void setEnabled(boolean)>
SINK|<com.android.camera.ui.CameraSwitcher: void setOrientation(int,boolean)>
SINK|<org.xmlpull.v1.sax2.Driver: void setContentHandler(org.xml.sax.ContentHandler)>
SINK|<com.android.bluetooth.btservice.AdapterService: boolean setScanMode(int,int)>
SINK|<android.database.DatabaseUtils$InsertHelper: void bind(int,java.lang.String)>
SINK|<android.provider.Telephony$Sms: boolean moveMessageToFolder(android.content.Context,android.net.Uri,int,int)>
SINK|<org.xml.sax.helpers.XMLFilterImpl: void setFeature(java.lang.String,boolean)>
SINK|<com.android.server.net.NetworkStatsService: void setUidForeground(int,boolean)>
SINK|<android.app.ActivityManagerProxy: void setRequestedOrientation(android.os.IBinder,int)>
SINK|<android.hardware.Camera: void setPreviewDisplay(android.view.SurfaceHolder)>
SINK|<android.os.Bundle: void putSparseParcelableArray(java.lang.String,android.util.SparseArray)>
SINK|<android.os.Bundle: void putChar(java.lang.String,char)>
SINK|<com.android.server.am.ActivityStack: com.android.server.am.ActivityRecord removeTaskActivitiesLocked(int,int,boolean)>
SINK|<android.view.animation.Transformation: void setAlpha(float)>
SINK|<com.android.inputmethod.latin.UserHistoryDictionary$1: void setBigram(java.lang.String,java.lang.String,int)>
SINK|<com.android.server.EventLogTags: void writeBootProgressPmsScanEnd(long)>
SINK|<java.util.logging.LogRecord: void setSequenceNumber(long)>
SINK|<android.sax.Element: void setEndElementListener(android.sax.EndElementListener)>
SINK|<java.net.CookieManager: void setCookiePolicy(java.net.CookiePolicy)>
SINK|<android.media.AudioService: void setStreamVolume(int,int,int)>
SINK|<android.app.Activity: void startIntentSenderFromChild(android.app.Activity,android.content.IntentSender,int,android.content.Intent,int,int,int)>
SINK|<android.filterfw.core.Filter: void addOutputBasedOnInput(java.lang.String,java.lang.String)>
SINK|<com.android.internal.view.menu.ActionMenuItem: android.view.MenuItem setShowAsActionFlags(int)>
SINK|<org.apache.harmony.xnet.provider.jsse.ServerKeyExchange: void send(org.apache.harmony.xnet.provider.jsse.HandshakeIODataStream)>
SINK|<com.android.internal.widget.ActionBarOverlayLayout: void setShowingForActionMode(boolean)>
SINK|<com.android.internal.telephony.sip.SipPhone: void setEchoSuppressionEnabled(boolean)>
SINK|<com.android.browser.BaseUi: void setFullscreen(boolean)>
SINK|<com.android.camera.CameraManager$CameraProxy: void setParameters(android.hardware.Camera$Parameters)>
SINK|<android.graphics.drawable.GradientDrawable: void setAlpha(int)>
SINK|<android.os.CommonTimeConfig: int setMasterElectionPriority(byte)>
SINK|<android.widget.NumberPicker: void setEnabled(boolean)>
SINK|<com.android.server.wm.WindowAnimator: void dumpLocked(java.io.PrintWriter,java.lang.String,boolean)>
SINK|<libcore.icu.RuleBasedCollatorICU: void setDecomposition(int)>
SINK|<android.bluetooth.IBluetoothHeadsetPhone$Stub$Proxy: boolean sendDtmf(int)>
SINK|<android.net.wifi.WifiStateMachine: void setWifiApEnabled(android.net.wifi.WifiConfiguration,boolean)>
SINK|<org.apache.http.protocol.HttpService: void setResponseFactory(org.apache.http.HttpResponseFactory)>
SINK|<com.android.server.dreams.DreamController: void dump(java.io.PrintWriter)>
SINK|<android.webkit.WebSettings: void setDatabaseEnabled(boolean)>
SINK|<com.android.internal.telephony.PhoneProxy: void setVoiceMessageWaiting(int,int)>
SINK|<com.android.commands.svc.Svc$1: void run(java.lang.String[])>
SINK|<android.net.wifi.p2p.WifiP2pManager: void createGroup(android.net.wifi.p2p.WifiP2pManager$Channel,android.net.wifi.p2p.WifiP2pManager$ActionListener)>
SINK|<android.view.IWindowSession$Stub$Proxy: int add(android.view.IWindow,int,android.view.WindowManager$LayoutParams,int,android.graphics.Rect,android.view.InputChannel)>
SINK|<com.android.server.wm.WindowManagerService: boolean setTokenVisibilityLocked(com.android.server.wm.AppWindowToken,android.view.WindowManager$LayoutParams,boolean,int,boolean)>
SINK|<com.beetstra.jutf7.UTF7StyleCharsetDecoder: java.nio.charset.CoderResult decodeLoop(java.nio.ByteBuffer,java.nio.CharBuffer)>
SINK|<org.apache.http.impl.cookie.AbstractCookieSpec: void registerAttribHandler(java.lang.String,org.apache.http.cookie.CookieAttributeHandler)>
SINK|<android.database.sqlite.SQLiteProgram: void bindLong(int,long)>
SINK|<com.android.calendar.CalendarController: void launchViewEvent(long,long,long,int)>
SINK|<com.android.internal.telephony.gsm.GSMPhone: boolean handlePinMmi(java.lang.String)>
SINK|<android.os.Bundle: void putIntArray(java.lang.String,int[])>
SINK|<com.android.server.pm.PackageManagerService: void movePackage(java.lang.String,android.content.pm.IPackageMoveObserver,int)>
SINK|<android.speech.IRecognitionService$Stub$Proxy: void startListening(android.content.Intent,android.speech.IRecognitionListener)>
SINK|<android.net.wifi.WifiSsid: android.net.wifi.WifiSsid createFromHex(java.lang.String)>
SINK|<com.android.inputmethod.keyboard.MainKeyboardView$KeyTimerHandler: void startKeyRepeatTimer(com.android.inputmethod.keyboard.PointerTracker)>
SINK|<com.android.systemui.statusbar.phone.SettingsPanelView: void setBar(com.android.systemui.statusbar.phone.PanelBar)>
SINK|<android.widget.Toast: void setDuration(int)>
SINK|<com.android.internal.view.IInputMethodManager$Stub$Proxy: void setImeWindowStatus(android.os.IBinder,int,int)>
SINK|<android.webkit.WebView: void saveWebArchive(java.lang.String)>
SINK|<com.android.launcher2.ShortcutAndWidgetContainer: void setChildrenDrawnWithCacheEnabled(boolean)>
SINK|<com.android.mms.dom.smil.ElementTimeImpl: void setDur(float)>
SINK|<android.net.IConnectivityManager$Stub$Proxy: boolean requestRouteToHost(int,int)>
SINK|<com.android.internal.util.FileRotator$1: void write(java.io.OutputStream)>
SINK|<gov.nist.javax.sip.address.SipUri: void setMethodParam(java.lang.String)>
SINK|<gov.nist.javax.sip.header.AuthenticationHeader: void setQop(java.lang.String)>
SINK|<com.android.systemui.statusbar.tablet.NotificationPanelTitle: void setPressed(boolean)>
SINK|<com.android.internal.app.ActionBarImpl$ActionModeImpl: void setTitleOptionalHint(boolean)>
SINK|<org.apache.harmony.xnet.provider.jsse.ServerSessionContext: void setSessionTimeout(int)>
SINK|<org.json.JSONArray: org.json.JSONArray put(int,long)>
SINK|<org.apache.http.impl.conn.DefaultClientConnection: void setAttribute(java.lang.String,java.lang.Object)>
SINK|<android.os.storage.IMountService$Stub$Proxy: int destroySecureContainer(java.lang.String,boolean)>
SINK|<java.net.MulticastSocket: void setLoopbackMode(boolean)>
SINK|<android.content.UriMatcher: void addURI(java.lang.String,java.lang.String,int)>
SINK|<android.widget.RemoteViews: void setTextColor(int,int)>
SINK|<com.android.internal.telephony.RIL: void reportStkServiceIsRunning(android.os.Message)>
SINK|<android.media.IRemoteControlClient$Stub$Proxy: void onInformationRequested(int,int,int,int)>
SINK|<com.android.contacts.activities.DialtactsActivity: void startSearch(java.lang.String,boolean,android.os.Bundle,boolean)>
SINK|<java.util.concurrent.locks.AbstractQueuedLongSynchronizer: void setState(long)>
SINK|<java.io.EmulatedFieldsForDumping: void put(java.lang.String,short)>
SINK|<android.graphics.drawable.TransitionDrawable: void setCrossFadeEnabled(boolean)>
SINK|<org.apache.harmony.xnet.provider.jsse.OpenSSLSocketImpl: void setNeedClientAuth(boolean)>
SINK|<android.view.animation.GridLayoutAnimationController: void setColumnDelay(float)>
SINK|<com.android.internal.view.IInputMethodSession$Stub$Proxy: void dispatchGenericMotionEvent(int,android.view.MotionEvent,com.android.internal.view.IInputMethodCallback)>
SINK|<com.android.email.Controller: void sendMessage(com.android.emailcommon.provider.EmailContent$Message)>
SINK|<android.app.Activity: void setFeatureDrawableResource(int,int)>
SINK|<android.content.SearchRecentSuggestionsProvider: int update(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[])>
SINK|<com.android.gallery3d.filtershow.FilterShowActivity: void onActivityResult(int,int,android.content.Intent)>
SINK|<com.android.providers.contacts.VoicemailContentProvider: void checkAndAddSourcePackageIntoValues(com.android.providers.contacts.VoicemailContentProvider$UriData,android.content.ContentValues)>
SINK|<android.app.Fragment: android.app.Fragment instantiate(android.content.Context,java.lang.String,android.os.Bundle)>
SINK|<java.time.ZonedDateTime: java.time.ZonedDateTime truncatedTo(java.time.temporal.TemporalUnit)>
SINK|<com.android.contacts.editor.PhotoEditorView: void setSuperPrimary(boolean)>
SINK|<android.webkit.WebViewClassic: void setMockGeolocationPosition(double,double,double)>
SINK|<com.adobe.xmp.impl.XMPDateTimeImpl: void setMinute(int)>
SINK|<android.view.IWindowSession$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>
SINK|<android.os.IVibratorService$Stub$Proxy: void vibrate(long,android.os.IBinder)>
SINK|<android.net.http.AndroidHttpClient: org.apache.http.HttpResponse execute(org.apache.http.HttpHost,org.apache.http.HttpRequest)>
SINK|<com.android.browser.PhoneUi: void setActiveTab(com.android.browser.Tab)>
SINK|<com.android.server.am.ActivityManagerService: android.content.ComponentName startServiceInPackage(int,android.content.Intent,java.lang.String,int)>
SINK|<android.graphics.Matrix: void setSinCos(float,float)>
SINK|<android.nfc.INfcAdapter$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>
SINK|<com.android.browser.widget.BookmarkThumbnailWidgetService: void setupWidgetState(android.content.Context,int,long)>
SINK|<android.net.sip.ISipSessionListener$Stub$Proxy: void onRegistrationFailed(android.net.sip.ISipSession,int,java.lang.String)>
SINK|<com.android.server.WallpaperManagerService: void settingsRestored()>
SINK|<org.apache.harmony.xnet.provider.jsse.SSLSocketImpl: void writeAppData(byte[],int,int)>
SINK|<android.view.View: void sendAccessibilityEventInternal(int)>
SINK|<com.android.server.sip.SipHelper: javax.sip.ClientTransaction sendReinvite(javax.sip.Dialog,java.lang.String)>
SINK|<org.apache.http.impl.AbstractHttpClientConnection: void sendRequestEntity(org.apache.http.HttpEntityEnclosingRequest)>
SINK|<android.net.wifi.WifiConfigStore: boolean enableNetwork(int,boolean)>
SINK|<android.graphics.drawable.ShapeDrawable: void setShaderFactory(android.graphics.drawable.ShapeDrawable$ShaderFactory)>
SINK|<com.android.gallery3d.app.StateManager: void notifyActivityResult(int,int,android.content.Intent)>
SINK|<com.android.email.activity.MailboxListFragment: com.android.email.activity.MailboxListFragment newInstance(long,long,boolean)>
SINK|<com.android.internal.util.AsyncChannel: void sendMessage(int,int,int)>
SINK|<java.lang.ThreadGroup: void setDaemon(boolean)>
SINK|<com.android.internal.telephony.cdma.RuimSmsInterfaceManager: boolean enableCellBroadcast(int)>
SINK|<android.app.Dialog: void setContentView(android.view.View)>
SINK|<android.app.AlarmManager: void set(int,long,android.app.PendingIntent)>
SINK|<com.google.common.collect.ForwardingMultiset: int setCount(java.lang.Object,int)>
SINK|<com.android.internal.statusbar.IStatusBarService$Stub$Proxy: void setHardKeyboardEnabled(boolean)>
SINK|<android.filterfw.core.NativeFrame: void setInts(int[])>
SINK|<android.widget.ProgressBar: void setSecondaryProgress(int)>
SINK|<com.android.internal.telephony.RIL: void sendSMS(java.lang.String,java.lang.String,android.os.Message)>
SINK|<com.android.server.WifiService: void setFrequencyBand(int,boolean)>
SINK|<com.android.uiautomator.testrunner.UiAutomatorTestRunner$WatcherResultPrinter: void print(junit.framework.TestResult,long,android.os.Bundle)>
SINK|<com.android.server.wm.WindowManagerService: void updateStatusBarVisibilityLocked(int)>
SINK|<com.android.email.MessagingListener: void sendPendingMessagesFailed(long,long,java.lang.Exception)>
SINK|<com.android.internal.view.IInputContext$Stub$Proxy: void setSelection(int,int)>
SINK|<com.android.calendar.selectcalendars.SelectSyncedCalendarsMultiAccountAdapter: void onClick(android.view.View)>
SINK|<android.widget.RelativeLayout: void setHorizontalGravity(int)>
SINK|<gov.nist.javax.sip.stack.TCPMessageChannel: void sendMessage(byte[],java.net.InetAddress,int,boolean)>
SINK|<java.util.zip.CRC32: void update(int)>
SINK|<android.appwidget.AppWidgetManager: void notifyAppWidgetViewDataChanged(int[],int)>
SINK|<android.webkit.CallbackProxy: boolean uiOverrideUrlLoading(java.lang.String)>
SINK|<android.webkit.WebSettingsClassic: void setMinimumFontSize(int)>
SINK|<com.android.server.display.DisplayManagerService: void setDisplayInfoOverrideFromWindowManager(int,android.view.DisplayInfo)>
SINK|<android.net.DhcpStateMachine$StoppedState: boolean processMessage(android.os.Message)>
SINK|<com.android.emailcommon.service.PolicyServiceProxy: void setAccountPolicy(android.content.Context,long,com.android.emailcommon.provider.Policy,java.lang.String)>
SINK|<android.content.ContextWrapper: void startActivityAsUser(android.content.Intent,android.os.Bundle,android.os.UserHandle)>
SINK|<com.android.internal.telephony.cdma.CdmaSMSDispatcher: void sendSubmitPdu(com.android.internal.telephony.cdma.SmsMessage$SubmitPdu,android.app.PendingIntent,android.app.PendingIntent,java.lang.String)>
SINK|<com.android.internal.telephony.gsm.GSMPhone: void setOutgoingCallerIdDisplay(int,android.os.Message)>
SINK|<com.android.gallery3d.filtershow.imageshow.ImageRotate: void setActionDown(float,float)>
SINK|<com.android.bluetooth.a2dp.A2dpService$BluetoothA2dpBinder: boolean setPriority(android.bluetooth.BluetoothDevice,int)>
SINK|<android.accounts.AccountManagerService: java.lang.String readUserDataInternal(android.accounts.AccountManagerService$UserAccounts,android.accounts.Account,java.lang.String)>
SINK|<android.app.AlertDialog: void setButton(java.lang.CharSequence,android.content.DialogInterface$OnClickListener)>
SINK|<android.accounts.AccountManagerService$3: void onResult(android.os.Bundle)>
SINK|<com.android.bluetooth.opp.BluetoothOppManager: void saveSendingFileInfo(java.lang.String,java.util.ArrayList,boolean)>
SINK|<android.widget.ZoomButtonsController: void setZoomSpeed(long)>
SINK|<com.android.server.usb.UsbSettingsManager: void requestPermission(android.hardware.usb.UsbDevice,java.lang.String,android.app.PendingIntent)>
SINK|<com.android.providers.contacts.PhotoStore: long insert(com.android.providers.contacts.PhotoProcessor,boolean)>
SINK|<gov.nist.javax.sip.header.ims.SecurityAgree: void setParameter(java.lang.String,java.lang.String)>
SINK|<android.view.GLES20DisplayList: void setTranslationX(float)>
SINK|<android.app.ProgressDialog: void setSecondaryProgress(int)>
SINK|<com.android.deskclock.HandleSetAlarm: void onCreate(android.os.Bundle)>
SINK|<org.apache.http.impl.conn.DefaultClientConnection: void openCompleted(boolean,org.apache.http.params.HttpParams)>
SINK|<com.android.mms.ui.MessageListItem: void setVideoThumbnail(java.lang.String,android.graphics.Bitmap)>
SINK|<com.android.internal.telephony.test.SimulatedCommands: void setCallWaiting(boolean,int,android.os.Message)>
SINK|<android.widget.Switch: void setSwitchTextAppearance(android.content.Context,int)>
SINK|<android.preference.GenericInflater: java.lang.Object createItem(java.lang.String,java.lang.String,android.util.AttributeSet)>
SINK|<com.android.internal.os.BatteryStatsImpl$Counter: void logState(android.util.Printer,java.lang.String)>
SINK|<android.speech.tts.TextToSpeech: int addSpeech(java.lang.String,java.lang.String)>
SINK|<com.android.internal.widget.SlidingTab$Slider: void setIcon(int)>
SINK|<android.view.IWindowManager$Stub$Proxy: void magnifyDisplay(int,float,float,float)>
SINK|<javax.xml.transform.stream.StreamSource: void setSystemId(java.io.File)>
SINK|<com.android.server.display.DisplayDevice: void dumpLocked(java.io.PrintWriter)>
SINK|<android.app.Fragment: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
SINK|<android.app.ActivityManagerProxy: void unregisterProcessObserver(android.app.IProcessObserver)>
SINK|<gov.nist.javax.sip.stack.SIPTransactionStack: void setHostAddress(java.lang.String)>
SINK|<java.text.Collator: void setStrength(int)>
SINK|<com.android.internal.telephony.RIL: void sendBurstDtmf(java.lang.String,int,int,android.os.Message)>
SINK|<android.database.AbstractCursor: void setNotificationUri(android.content.ContentResolver,android.net.Uri)>
SINK|<com.android.internal.telephony.ISms$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>
SINK|<com.android.uiautomator.testrunner.UiAutomatorTestRunner$WatcherResultPrinter: void startTest(junit.framework.Test)>
SINK|<com.google.common.primitives.Ints$IntArrayAsList: java.lang.Object set(int,java.lang.Object)>
SINK|<java.util.AbstractList$SubAbstractList: java.lang.Object set(int,java.lang.Object)>
SINK|<android.os.Handler: boolean sendMessage(android.os.Message)>
SINK|<com.android.providers.telephony.SmsProvider: android.net.Uri insert(android.net.Uri,android.content.ContentValues)>
SINK|<android.graphics.drawable.ShapeDrawable: void setIntrinsicWidth(int)>
SINK|<com.android.internal.policy.impl.PhoneWindowManager: void setCurrentUserLw(int)>
SINK|<android.app.ActivityManagerProxy: boolean navigateUpTo(android.os.IBinder,android.content.Intent,int,android.content.Intent)>
SINK|<com.android.bluetooth.opp.BluetoothOppService$2: void handleMessage(android.os.Message)>
SINK|<com.android.server.wm.WindowManagerService: void setWindowWallpaperPositionLocked(com.android.server.wm.WindowState,float,float,float,float)>
SINK|<gov.nist.javax.sip.header.ims.PChargingVector: void setTerminatingIOI(java.lang.String)>
SINK|<org.apache.harmony.security.asn1.ASN1Any: void setEncodingContent(org.apache.harmony.security.asn1.BerOutputStream)>
SINK|<org.apache.harmony.xnet.provider.jsse.ConnectionStateTLS: byte[] encrypt(byte,byte[],int,int)>
SINK|<android.os.PerformanceCollector: void beginSnapshot(java.lang.String)>
SINK|<org.apache.http.impl.cookie.RFC2965PortAttributeHandler: int[] parsePortAttribute(java.lang.String)>
SINK|<android.app.ProgressDialog: void setMessage(java.lang.CharSequence)>
SINK|<android.bluetooth.BluetoothAdapter: boolean setName(java.lang.String)>
SINK|<com.android.email.RefreshManager$ControllerResult: void serviceCheckMailCallback(com.android.emailcommon.mail.MessagingException,long,long,int,long)>
SINK|<com.android.videoeditor.VideoEditorBaseActivity$ServiceListener: void onAudioTrackBoundariesSet(java.lang.String,java.lang.String,long,long,java.lang.Exception)>
SINK|<com.android.videoeditor.service.ApiService: void extractMediaItemAudioWaveform(android.content.Context,java.lang.String,java.lang.String)>
SINK|<com.google.android.mms.util.PduCache: boolean put(android.net.Uri,com.google.android.mms.util.PduCacheEntry)>
SINK|<com.android.server.DevicePolicyManagerService: void sendAdminCommandLocked(java.lang.String,int,int)>
SINK|<org.apache.http.entity.StringEntity: void writeTo(java.io.OutputStream)>
SINK|<org.apache.http.protocol.UriPatternMatcher: void setObjects(java.util.Map)>
SINK|<android.app.NotificationManager: void notifyAsUser(java.lang.String,int,android.app.Notification,android.os.UserHandle)>
SINK|<com.android.server.NetworkManagementService: void setAccessPoint(android.net.wifi.WifiConfiguration,java.lang.String)>
SINK|<android.content.IContentService$Stub$Proxy: void addPeriodicSync(android.accounts.Account,java.lang.String,android.os.Bundle,long)>
SINK|<com.google.android.apps.lightcycle.sensor.SensorReader: void setHeadingDegrees(double)>
SINK|<java.util.zip.Inflater: void setInput(byte[])>
SINK|<com.android.server.TelephonyRegistry: void notifyOtaspChanged(int)>
SINK|<com.android.email.activity.setup.AccountSettingsFragment$DeleteAccountFragment: com.android.email.activity.setup.AccountSettingsFragment$DeleteAccountFragment newInstance(com.android.emailcommon.provider.Account,android.app.Fragment)>
SINK|<android.speech.tts.TextToSpeech: int addSpeech(java.lang.String,java.lang.String,int)>
SINK|<android.content.res.AssetManager: java.io.InputStream openNonAsset(int,java.lang.String,int)>
SINK|<android.app.Dialog: void setOnCancelListener(android.content.DialogInterface$OnCancelListener)>
SINK|<org.apache.http.util.ByteArrayBuffer: void setLength(int)>
SINK|<com.android.deskclock.TimerSetupView: void restoreEntryState(android.os.Bundle,java.lang.String)>
SINK|<org.ccil.cowan.tagsoup.ElementType: void setAttribute(java.lang.String,java.lang.String,java.lang.String)>
SINK|<com.android.gallery3d.util.GalleryUtils: boolean isEditorAvailable(android.content.Context,java.lang.String)>
SINK|<android.filterfw.core.GLEnvironment: void setSurfaceTimestamp(long)>
SINK|<java.util.zip.ZipEntry: void setCrc(long)>
SINK|<android.net.sip.SimpleSessionDescription$Media: void setAttribute(java.lang.String,java.lang.String)>
SINK|<java.util.Date: void setYear(int)>
SINK|<java.text.MessageFormat: void setLocale(java.util.Locale)>
SINK|<android.appwidget.AppWidgetManager: void bindAppWidgetId(int,android.content.ComponentName)>
SINK|<java.text.DateFormat: void setCalendar(java.util.Calendar)>
SINK|<android.bluetooth.IBluetooth$Stub$Proxy: boolean setDiscoverableTimeout(int)>
SINK|<java.io.StringWriter: java.io.StringWriter append(char)>
SINK|<java.util.SimpleTimeZone: void setStartYear(int)>
SINK|<android.widget.TextView: void setTextColor(android.content.res.ColorStateList)>
SINK|<android.os.INetworkManagementService$Stub$Proxy: void removeInterfaceAlert(java.lang.String)>
SINK|<com.android.calendar.agenda.AgendaListView: void setSelectedInstanceId(long)>
SINK|<android.widget.CalendarView: void setDate(long)>
SINK|<java.security.IdentityScope: void setSystemScope(java.security.IdentityScope)>
SINK|<com.android.server.NotificationManagerService: void setNotificationsEnabledForPackage(java.lang.String,boolean)>
SINK|<android.support.v4.app.NotificationCompat$Builder: android.support.v4.app.NotificationCompat$Builder setOngoing(boolean)>
SINK|<android.widget.AbsListView: void setSelector(int)>
SINK|<com.android.contacts.model.RawContactDelta$ValuesDelta: void setSuperPrimary(boolean)>
SINK|<com.android.internal.app.ActionBarImpl: void setDisplayUseLogoEnabled(boolean)>
SINK|<android.net.wifi.WifiNative: boolean setScanResultHandling(int)>
SINK|<android.bluetooth.IBluetoothHealth$Stub$Proxy: boolean connectChannelToSink(android.bluetooth.BluetoothDevice,android.bluetooth.BluetoothHealthAppConfiguration,int)>
SINK|<com.android.videoeditor.KenBurnsActivity: void onCreate(android.os.Bundle)>
SINK|<android.net.UrlQuerySanitizer: void parseQuery(java.lang.String)>
SINK|<android.view.View: void setKeepScreenOn(boolean)>
SINK|<com.android.server.EventLogTags: void writeLockdownVpnConnecting(int)>
SINK|<gov.nist.javax.sip.header.ContentLanguage: void setLanguageTag(java.lang.String)>
SINK|<android.widget.ProgressBar: void setProgress(int)>
SINK|<com.android.server.am.ContentProviderRecord: void addExternalProcessHandleLocked(android.os.IBinder)>
SINK|<android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateIcsImpl: void sendAccessibilityEventUnchecked(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent)>
SINK|<com.android.server.connectivity.Tethering$TetherMasterSM$TetherMasterUtilState: boolean turnOnUpstreamMobileConnection(int)>
SINK|<android.view.View: void setMinimumWidth(int)>
SINK|<com.android.internal.telephony.IccSmsInterfaceManager: void setPremiumSmsPermission(java.lang.String,int)>
SINK|<java.sql.Time: void setDate(int)>
SINK|<com.android.bluetooth.hfp.HeadsetService$BluetoothHeadsetBinder: boolean setPriority(android.bluetooth.BluetoothDevice,int)>
SINK|<android.webkit.WebViewClassic: void setLayerType(int,android.graphics.Paint)>
SINK|<org.xml.sax.helpers.ParserAdapter: void setDocumentLocator(org.xml.sax.Locator)>
SINK|<com.android.contacts.editor.ContactEditorUtils: void saveDefaultAndAllAccounts(com.android.contacts.model.account.AccountWithDataSet)>
SINK|<com.android.internal.telephony.RIL: void setOnNITZTime(android.os.Handler,int,java.lang.Object)>
SINK|<com.android.phone.sip.SipSharedPreferences: void setPrimaryAccount(java.lang.String)>
SINK|<android.database.sqlite.SQLiteDatabase: void setLockingEnabled(boolean)>
SINK|<org.apache.harmony.xnet.provider.jsse.OpenSSLSocketImplWrapper: void setSendBufferSize(int)>
SINK|<java.util.concurrent.CompletableFuture: java.util.concurrent.CompletableFuture uniRunStage(java.util.concurrent.Executor,java.lang.Runnable)>
SINK|<java.time.Year: java.time.Year parse(java.lang.CharSequence)>
SINK|<android.view.animation.Animation: void setFillBefore(boolean)>
SINK|<android.app.backup.BackupAgentHelper: void setWallpaper(android.graphics.Bitmap)>
SINK|<com.android.browser.widget.BookmarkThumbnailWidgetProvider: void onUpdate(android.content.Context,android.appwidget.AppWidgetManager,int[])>
SINK|<android.accounts.AccountManagerService: void writeUserDataIntoCacheLocked(android.accounts.AccountManagerService$UserAccounts,android.database.sqlite.SQLiteDatabase,android.accounts.Account,java.lang.String,java.lang.String)>
SINK|<android.util.Base64$Encoder: boolean process(byte[],int,int,boolean)>
SINK|<android.widget.Gallery: void setSelectedPositionInt(int)>
SINK|<com.android.commands.am.Am$InstrumentationWatcher: void instrumentationFinished(android.content.ComponentName,int,android.os.Bundle)>
SINK|<com.android.internal.telephony.RIL: void hangupForegroundResumeBackground(android.os.Message)>
SINK|<gov.nist.javax.sip.header.extensions.Replaces: void setFromTag(java.lang.String)>
SINK|<android.view.accessibility.AccessibilityEvent: void setFullScreen(boolean)>
SINK|<libcore.io.IoBridge: void write(java.io.FileDescriptor,byte[],int,int)>
SINK|<android.graphics.drawable.GradientDrawable: void setGradientRadius(float)>
SINK|<com.android.browser.Controller: void sharePage(android.content.Context,java.lang.String,java.lang.String,android.graphics.Bitmap,android.graphics.Bitmap)>
SINK|<com.android.email.service.EasAuthenticatorService$EasAuthenticator: android.os.Bundle addAccount(android.accounts.AccountAuthenticatorResponse,java.lang.String,java.lang.String,java.lang.String[],android.os.Bundle)>
SINK|<android.widget.QuickContactBadge: void setMode(int)>
SINK|<android.filterfw.core.NativeFrame: void setBitmap(android.graphics.Bitmap)>
SINK|<com.android.internal.widget.multiwaveview.MultiWaveView: void setEnableTarget(int,boolean)>
SINK|<gov.nist.javax.sip.header.CSeq: void setMethod(java.lang.String)>
SINK|<com.android.internal.telephony.CallManager: boolean sendBurstDtmf(java.lang.String,int,int,android.os.Message)>
SINK|<android.hardware.usb.IUsbManager$Stub$Proxy: void requestAccessoryPermission(android.hardware.usb.UsbAccessory,java.lang.String,android.app.PendingIntent)>
SINK|<com.android.internal.statusbar.IStatusBarService$Stub$Proxy: void setIcon(java.lang.String,java.lang.String,int,int,java.lang.String)>
SINK|<android.content.ContentProvider: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
SINK|<com.android.internal.preference.YesNoPreference$SavedState: void writeToParcel(android.os.Parcel,int)>
SINK|<gov.nist.javax.sip.header.CallInfo: void setPurpose(java.lang.String)>
SINK|<com.android.internal.statusbar.IStatusBar$Stub$Proxy: void disable(int)>
SINK|<java.text.ParsePosition: void setErrorIndex(int)>
SINK|<android.nfc.INfcTag$Stub$Proxy: boolean ndefIsWritable(int)>
SINK|<android.nfc.NfcActivityManager: void setNdefPushMessage(android.app.Activity,android.nfc.NdefMessage)>
SINK|<com.android.internal.policy.impl.keyguard.KeyguardViewMediator$2: void setNeedsInput(boolean)>
SINK|<android.accounts.IAccountAuthenticator$Stub$Proxy: void getAccountRemovalAllowed(android.accounts.IAccountAuthenticatorResponse,android.accounts.Account)>
SINK|<java.net.MulticastSocket: void setTimeToLive(int)>
SINK|<android.widget.TextView: void setLines(int)>
SINK|<com.android.mms.ui.SlideView: void setImageRegionFit(java.lang.String)>
SINK|<android.widget.PopupWindow: void setTouchable(boolean)>
SINK|<com.android.internal.telephony.sip.SipConnectionBase: void setState(com.android.internal.telephony.Call$State)>
SINK|<gov.nist.javax.sip.header.Contact: void setSipInstanceParam(java.lang.String)>
SINK|<com.android.server.pm.PackageManagerService: boolean performDexOpt(java.lang.String)>
SINK|<gov.nist.javax.sip.header.ims.PAssertedIdentity: void setValue(java.lang.String)>
SINK|<android.app.ActivityManagerProxy: boolean unbindService(android.app.IServiceConnection)>
SINK|<com.android.internal.telephony.sip.SipPhone: void setMute(boolean)>
SINK|<android.preference.TwoStatePreference: void setSummaryOn(int)>
SINK|<android.preference.Preference: void setTitle(int)>
SINK|<com.android.server.am.ConnectionRecord: void dump(java.io.PrintWriter,java.lang.String)>
SINK|<org.apache.http.conn.params.ConnRouteParamBean: void setForcedRoute(org.apache.http.conn.routing.HttpRoute)>
SINK|<com.android.server.StatusBarManagerService: android.os.IBinder addNotification(com.android.internal.statusbar.StatusBarNotification)>
SINK|<android.support.v4.net.TrafficStatsCompat$BaseTrafficStatsCompatImpl: void setThreadStatsTag(int)>
SINK|<org.xml.sax.helpers.ParserAdapter: void setContentHandler(org.xml.sax.ContentHandler)>
SINK|<com.google.android.mms.pdu.SendReq: void setTo(com.google.android.mms.pdu.EncodedStringValue[])>
SINK|<gov.nist.javax.sip.header.extensions.Join: void setValue(java.lang.String)>
SINK|<gov.nist.javax.sip.address.TelURLImpl: void setPostDial(java.lang.String)>
SINK|<android.inputmethodservice.Keyboard: void setHorizontalGap(int)>
SINK|<com.android.mms.data.WorkingMessage: void setHasEmail(boolean,boolean)>
SINK|<com.android.internal.telephony.PhoneBase: void setPreferredNetworkType(int,android.os.Message)>
SINK|<android.webkit.WebSettings: void setStandardFontFamily(java.lang.String)>
SINK|<android.net.wifi.WifiStateMachine$ConnectModeState: boolean processMessage(android.os.Message)>
SINK|<android.view.IWindowManager$Stub$Proxy: void overridePendingAppTransitionScaleUp(int,int,int,int)>
SINK|<android.location.ILocationManager$Stub$Proxy: void setTestProviderLocation(java.lang.String,android.location.Location)>
SINK|<java.util.logging.LogManager: boolean addLogger(java.util.logging.Logger)>
SINK|<org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>
SINK|<com.android.camera.ui.ListPrefSettingPopup$ListPrefSettingAdapter: void setViewImage(android.widget.ImageView,java.lang.String)>
SINK|<android.view.View: void setFilterTouchesWhenObscured(boolean)>
SINK|<android.content.ContentValues: void put(java.lang.String,java.lang.Double)>
SINK|<android.webkit.WebView: void setHorizontalScrollbarOverlay(boolean)>
SINK|<java.io.PrintWriter: void println(int)>
SINK|<android.app.Dialog: void setOnKeyListener(android.content.DialogInterface$OnKeyListener)>
SINK|<android.media.IAudioService$Stub$Proxy: void setRingerMode(int)>
SINK|<org.apache.http.impl.client.AbstractHttpClient: void setCredentialsProvider(org.apache.http.client.CredentialsProvider)>
SINK|<android.os.Parcel: void writeFloatArray(float[])>
SINK|<com.android.server.sip.SipSessionGroup$SipSessionImpl: void setListener(android.net.sip.ISipSessionListener)>
SINK|<com.android.deskclock.LabelDialogFragment: com.android.deskclock.LabelDialogFragment newInstance(com.android.deskclock.timer.TimerObj,java.lang.String,java.lang.String)>
SINK|<org.apache.http.impl.client.AbstractHttpClient: void setReuseStrategy(org.apache.http.ConnectionReuseStrategy)>
SINK|<android.filterfw.core.ShaderProgram: void setTargetRegion(android.filterfw.geometry.Quad)>
SINK|<com.android.internal.app.HeavyWeightSwitcherActivity: void setIconAndText(int,int,int,java.lang.String,int,int)>
SINK|<com.android.server.IntentResolverOld: boolean dump(java.io.PrintWriter,java.lang.String,java.lang.String,java.lang.String,boolean)>
SINK|<android.os.FileUtils: boolean copyToFile(java.io.InputStream,java.io.File)>
SINK|<android.app.SharedPreferencesImpl$EditorImpl: android.content.SharedPreferences$Editor remove(java.lang.String)>
SINK|<gov.nist.javax.sip.header.CSeq: void setSeqNumber(long)>
SINK|<com.android.internal.telephony.IIccPhoneBook$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>
SINK|<android.webkit.CookieManagerClassic: void setAcceptCookie(boolean)>
SINK|<android.widget.HorizontalScrollView: boolean executeKeyEvent(android.view.KeyEvent)>
SINK|<com.android.wallpaper.galaxy.ScriptField_VpConsts: void set(com.android.wallpaper.galaxy.ScriptField_VpConsts$Item,int,boolean)>
SINK|<org.json.JSONArray: org.json.JSONArray put(int,double)>
SINK|<com.android.providers.contacts.aggregation.ContactAggregator: void updateDisplayNameForContact(android.database.sqlite.SQLiteDatabase,long)>
SINK|<android.content.Intent: android.content.Intent putExtra(java.lang.String,char[])>
SINK|<android.widget.AbsListView: void sendAccessibilityEvent(int)>
SINK|<com.google.android.picasasync.PhotoPrefetch$PrefetchFullImage: void performSync(android.content.SyncResult)>
SINK|<com.android.org.bouncycastle.asn1.LimitedInputStream: void setParentEofDetect(boolean)>
SINK|<android.bluetooth.IBluetoothManager$Stub$Proxy: void registerStateChangeCallback(android.bluetooth.IBluetoothStateChangeCallback)>
SINK|<android.view.ViewGroup: void setClipChildren(boolean)>
SINK|<org.apache.harmony.xnet.provider.jsse.SSLEngineImpl: void setEnabledCipherSuites(java.lang.String[])>
SINK|<android.app.ActivityManagerProxy: void setLockScreenShown(boolean)>
SINK|<android.bluetooth.IBluetooth$Stub$Proxy: void sendConnectionStateChange(android.bluetooth.BluetoothDevice,int,int,int)>
SINK|<com.android.providers.contacts.ContactsTransaction: void startTransactionForDb(android.database.sqlite.SQLiteDatabase,java.lang.String,android.database.sqlite.SQLiteTransactionListener)>
SINK|<android.media.effect.effects.BackDropperEffect: void setParameter(java.lang.String,java.lang.Object)>
SINK|<android.content.IntentSender: android.content.IntentSender readIntentSenderOrNullFromParcel(android.os.Parcel)>
SINK|<android.app.ActivityManagerProxy: void activityIdle(android.os.IBinder,android.content.res.Configuration,boolean)>
SINK|<org.apache.http.impl.client.AbstractHttpClient: void setRedirectHandler(org.apache.http.client.RedirectHandler)>
SINK|<android.view.View: void setHovered(boolean)>
SINK|<android.speech.IRecognitionListener$Stub$Proxy: void onBufferReceived(byte[])>
SINK|<android.database.sqlite.SQLiteDatabase: void setPageSize(long)>
SINK|<java.util.logging.LogRecord: void setThrown(java.lang.Throwable)>
SINK|<com.android.internal.telephony.BaseCommands: void setOnIccSmsFull(android.os.Handler,int,java.lang.Object)>
SINK|<android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoIcsImpl: void setBoundsInParent(java.lang.Object,android.graphics.Rect)>
SINK|<com.android.internal.widget.ActionBarView: void setSplitActionBar(boolean)>
SINK|<java.text.DecimalFormatSymbols: void setMinusSign(char)>
SINK|<com.android.deskclock.Alarm$DaysOfWeek: void set(int,boolean)>
SINK|<gov.nist.javax.sip.header.SIPETag: void setValue(java.lang.String)>
SINK|<android.renderscript.RenderScript: void setupDiskCache(java.io.File)>
SINK|<com.android.server.DevicePolicyManagerService: void setActiveAdmin(android.content.ComponentName,boolean,int)>
SINK|<gov.nist.javax.sip.header.ims.PPreferredService: void setValue(java.lang.String)>
SINK|<android.location.Criteria: void setBearingRequired(boolean)>
SINK|<android.app.ActivityManagerProxy: boolean targetTaskAffinityMatchesActivity(android.os.IBinder,java.lang.String)>
SINK|<android.net.wifi.p2p.WifiP2pManager: void setDeviceName(android.net.wifi.p2p.WifiP2pManager$Channel,java.lang.String,android.net.wifi.p2p.WifiP2pManager$ActionListener)>
SINK|<com.google.android.apps.lightcycle.camera.CameraPreview$Util: void setPictureWidth(com.google.android.apps.lightcycle.camera.CameraUtility,android.hardware.Camera$Parameters,int)>
SINK|<android.content.BroadcastReceiver: void setResultData(java.lang.String)>
SINK|<android.widget.TextView: void setMinLines(int)>
SINK|<java.net.URLConnection: void setDoOutput(boolean)>
SINK|<java.security.cert.X509CertSelector: void setNameConstraints(byte[])>
SINK|<org.apache.http.protocol.SyncBasicHttpContext: void setAttribute(java.lang.String,java.lang.Object)>
SINK|<android.media.effect.effects.BackDropperEffect: void apply(int,int,int,int)>
SINK|<com.android.server.location.MockProvider: void setRequest(com.android.internal.location.ProviderRequest,android.os.WorkSource)>
SINK|<gov.nist.core.Host: void setHostAddress(java.lang.String)>
SINK|<com.android.internal.telephony.DefaultPhoneNotifier: void notifyOtaspChanged(com.android.internal.telephony.Phone,int)>
SINK|<android.filterpacks.videosink.MediaEncoderFilter: void process(android.filterfw.core.FilterContext)>
SINK|<android.view.ViewStub: void setVisibility(int)>
SINK|<android.location.Address: void setFeatureName(java.lang.String)>
SINK|<android.content.Intent: android.content.Intent parseUri(java.lang.String,int)>
SINK|<com.google.android.apps.lightcycle.camera.CameraApiProxyAndroidImpl$CameraProxyAndroidImpl: void setPreviewCallbackWithBuffer(android.hardware.Camera$PreviewCallback)>
SINK|<android.app.ApplicationErrorReport$BatteryInfo: void dump(android.util.Printer,java.lang.String)>
SINK|<android.view.accessibility.AccessibilityNodeInfo: void setCheckable(boolean)>
SINK|<com.android.camera.MosaicPreviewRenderer$EGLHandler: void sendMessageSync(int)>
SINK|<android.preference.ListPreference$SavedState: void writeToParcel(android.os.Parcel,int)>
SINK|<javax.xml.datatype.XMLGregorianCalendar: void setTime(int,int,int)>
SINK|<android.inputmethodservice.KeyboardView: void setOnKeyboardActionListener(android.inputmethodservice.KeyboardView$OnKeyboardActionListener)>
SINK|<javax.obex.PrivateOutputStream: void write(byte[],int,int)>
SINK|<java.nio.CharToByteBufferAdapter: java.nio.CharBuffer put(char)>
SINK|<android.net.LocalSocketImpl$SocketOutputStream: void write(byte[])>
SINK|<com.android.browser.view.ScrollerView: void setOrientation(int)>
SINK|<com.android.providers.contacts.DataRowHandlerForPhoto: long insert(android.database.sqlite.SQLiteDatabase,com.android.providers.contacts.TransactionContext,long,android.content.ContentValues)>
SINK|<com.android.internal.util.StateMachine$SmHandler$QuittingState: boolean processMessage(android.os.Message)>
SINK|<android.support.v4.widget.EdgeEffectCompat: void setSize(int,int)>
SINK|<com.android.launcher2.Workspace: void setFinalTransitionTransform(com.android.launcher2.CellLayout)>
SINK|<java.io.PrintWriter: void println(char[])>
SINK|<org.apache.http.entity.EntityTemplate: void writeTo(java.io.OutputStream)>
SINK|<org.apache.http.params.HttpProtocolParams: void setVersion(org.apache.http.params.HttpParams,org.apache.http.ProtocolVersion)>
SINK|<com.android.internal.telephony.UiccCardApplication: void registerForNetworkLocked(android.os.Handler,int,java.lang.Object)>
SINK|<java.util.Date: void setSeconds(int)>
SINK|<com.android.internal.util.XmlUtils: void writeValueXml(java.lang.Object,java.lang.String,org.xmlpull.v1.XmlSerializer)>
SINK|<com.android.camera.MosaicFrameProcessor: void setStripType(int)>
SINK|<android.service.dreams.IDreamManager$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>
SINK|<android.app.ActivityManagerProxy: void killApplicationWithAppId(java.lang.String,int)>
SINK|<android.app.Activity: void startActivityFromChild(android.app.Activity,android.content.Intent,int,android.os.Bundle)>
SINK|<com.android.internal.telephony.sip.SipCommandInterface: void setCallForward(int,int,int,java.lang.String,int,android.os.Message)>
SINK|<android.graphics.Paint: android.graphics.PathEffect setPathEffect(android.graphics.PathEffect)>
SINK|<android.hardware.Camera$Parameters: void setColorEffect(java.lang.String)>
SINK|<java.lang.System: void runFinalizersOnExit(boolean)>
SINK|<com.android.browser.WebStorageSizeManager: void onExceededDatabaseQuota(java.lang.String,java.lang.String,long,long,long,android.webkit.WebStorage$QuotaUpdater)>
SINK|<java.util.concurrent.atomic.AtomicReference: void set(java.lang.Object)>
SINK|<android.net.wifi.IWifiManager$Stub$Proxy: void acquireMulticastLock(android.os.IBinder,java.lang.String)>
SINK|<java.time.ZonedDateTime: java.lang.Object writeReplace()>
SINK|<android.content.ContextWrapper: void sendOrderedBroadcastAsUser(android.content.Intent,android.os.UserHandle,java.lang.String,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>
SINK|<android.view.ViewStub: void setLayoutResource(int)>
SINK|<android.net.wifi.WifiStateMachine$L2ConnectedState: boolean processMessage(android.os.Message)>
SINK|<com.android.nfc.NfceeAccessControl: boolean check(android.content.pm.ApplicationInfo)>
SINK|<android.service.wallpaper.IWallpaperConnection$Stub$Proxy: void attachEngine(android.service.wallpaper.IWallpaperEngine)>
SINK|<gov.nist.javax.sip.header.ContentType: void setContentType(java.lang.String,java.lang.String)>
SINK|<com.android.gallery3d.filtershow.imageshow.ImageSlave: void updateImagePresets(boolean)>
SINK|<com.android.bluetooth.hid.HidService: boolean setReport(android.bluetooth.BluetoothDevice,byte,java.lang.String)>
SINK|<android.content.ContextWrapper: void sendBroadcast(android.content.Intent)>
SINK|<android.net.wifi.p2p.WifiP2pManager: void setDnsSdResponseListeners(android.net.wifi.p2p.WifiP2pManager$Channel,android.net.wifi.p2p.WifiP2pManager$DnsSdServiceResponseListener,android.net.wifi.p2p.WifiP2pManager$DnsSdTxtRecordListener)>
SINK|<android.graphics.PointF: void set(float,float)>
SINK|<android.content.BroadcastReceiver: void setDebugUnregister(boolean)>
SINK|<com.android.gallery3d.ui.ScrollerHelper: void setPosition(int)>
SINK|<android.widget.RemoteViews: void setChar(int,java.lang.String,char)>
SINK|<com.android.internal.widget.SlidingTab$Slider: void startAnimation(android.view.animation.Animation,android.view.animation.Animation)>
SINK|<com.android.contacts.activities.DialtactsActivity$ViewPagerAdapter: void setPrimaryItem(android.view.ViewGroup,int,java.lang.Object)>
SINK|<android.app.Activity: boolean onKeyDown(int,android.view.KeyEvent)>
SINK|<android.content.SharedPreferences$Editor: boolean commit()>
SINK|<com.android.server.usb.UsbDeviceManager$UsbHandler: void dump(java.io.FileDescriptor,java.io.PrintWriter)>
SINK|<android.net.wifi.WifiStateMachine$DisconnectingState: boolean processMessage(android.os.Message)>
SINK|<android.animation.PropertyValuesHolder: void setupEndValue(java.lang.Object)>
SINK|<com.android.contacts.model.RawContactDelta$ValuesDelta: void setPhoneticFamilyName(java.lang.String)>
SINK|<com.android.internal.telephony.PhoneBase: void setEchoSuppressionEnabled(boolean)>
SINK|<com.android.internal.telephony.gsm.GSMPhone: void handleMessage(android.os.Message)>
SINK|<android.view.View: void setId(int)>
SINK|<android.app.TabActivity: void setDefaultTab(java.lang.String)>
SINK|<gov.nist.javax.sip.header.ims.PChargingFunctionAddresses: void setValue(java.lang.String)>
SINK|<android.filterfw.core.NativeFrame: void setFloats(float[])>
SINK|<android.security.IKeyChainService$Stub$Proxy: void setGrant(int,java.lang.String,boolean)>
SINK|<android.content.pm.IPackageManager$Stub$Proxy: boolean performDexOpt(java.lang.String)>
SINK|<android.app.ContextImpl: void sendBroadcastAsUser(android.content.Intent,android.os.UserHandle)>
SINK|<com.android.camera.PanoProgressBar: void setIndicatorColor(int)>
SINK|<android.view.accessibility.AccessibilityNodeInfo: void setLabelFor(android.view.View)>
SINK|<android.app.ContextImpl: android.database.sqlite.SQLiteDatabase openOrCreateDatabase(java.lang.String,int,android.database.sqlite.SQLiteDatabase$CursorFactory,android.database.DatabaseErrorHandler)>
SINK|<com.android.internal.telephony.test.SimulatedCommands: void sendTerminalResponse(java.lang.String,android.os.Message)>
SINK|<org.apache.harmony.xnet.provider.jsse.ClientHello: void send(org.apache.harmony.xnet.provider.jsse.HandshakeIODataStream)>
SINK|<android.view.inputmethod.InputConnectionWrapper: boolean setComposingRegion(int,int)>
SINK|<android.widget.Switch: void setThumbResource(int)>
SINK|<android.app.Activity: android.view.ActionMode startActionMode(android.view.ActionMode$Callback)>
SINK|<com.android.emailcommon.service.IEmailService$Stub$Proxy: void sendMeetingResponse(long,int)>
SINK|<java.io.OutputStreamWriter: java.io.Writer append(java.lang.CharSequence)>
SINK|<org.apache.harmony.xnet.provider.jsse.SSLServerSocketImpl: void setEnableSessionCreation(boolean)>
SINK|<com.android.server.usb.UsbDeviceManager: void dump(java.io.FileDescriptor,java.io.PrintWriter)>
SINK|<android.widget.ListView: void setSelection(int)>
SINK|<android.app.backup.IBackupManager$Stub$Proxy: void agentConnected(java.lang.String,android.os.IBinder)>
SINK|<android.renderscript.Script: void setVar(int,android.renderscript.FieldPacker)>
SINK|<com.android.bluetooth.btservice.AdapterService: void onProfileConnectionStateChanged(android.bluetooth.BluetoothDevice,int,int,int)>
SINK|<com.google.android.apps.lightcycle.opengl.Shader: void setTransform(float[])>
SINK|<com.android.internal.telephony.sip.SipCommandInterface: void sendCDMAFeatureCode(java.lang.String,android.os.Message)>
SINK|<android.view.animation.LayoutAnimationController: void setInterpolator(android.view.animation.Interpolator)>
SINK|<android.webkit.WebSettings: void setRenderPriority(android.webkit.WebSettings$RenderPriority)>
SINK|<com.android.internal.telephony.RIL: void sendUSSD(java.lang.String,android.os.Message)>
SINK|<android.location.LocationManager: boolean addNmeaListener(android.location.GpsStatus$NmeaListener)>
SINK|<java.text.Bidi: int getRunLimit(int)>
SINK|<org.apache.http.impl.cookie.DateUtils: java.util.Date parseDate(java.lang.String,java.lang.String[])>
SINK|<android.widget.GridView: void setSelectionInt(int)>
SINK|<android.os.Parcel: void writeCharSequenceArray(java.lang.CharSequence[])>
SINK|<android.media.audiofx.Equalizer: void setProperties(android.media.audiofx.Equalizer$Settings)>
SINK|<android.app.Activity: void setDefaultKeyMode(int)>
SINK|<android.net.sip.ISipSessionListener$Stub$Proxy: void onRegistrationTimeout(android.net.sip.ISipSession)>
SINK|<android.webkit.WebStorage: void setQuotaForOrigin(java.lang.String,long)>
SINK|<android.view.IWindowSession$Stub$Proxy: int addToDisplay(android.view.IWindow,int,android.view.WindowManager$LayoutParams,int,int,android.graphics.Rect,android.view.InputChannel)>
SINK|<gov.nist.javax.sip.header.Accept: void setContentSubType(java.lang.String)>
SINK|<android.view.IWindowManager$Stub$Proxy: void clearForcedDisplaySize(int)>
SINK|<android.content.ContentService$ObserverNode$ObserverEntry: void dumpLocked(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[],java.lang.String,java.lang.String,android.util.SparseIntArray)>
SINK|<android.app.admin.IDevicePolicyManager$Stub$Proxy: android.content.ComponentName setGlobalProxy(android.content.ComponentName,java.lang.String,java.lang.String,int)>
SINK|<android.app.ActivityManager$TaskThumbnails: void writeToParcel(android.os.Parcel,int)>
SINK|<libcore.io.BlockGuardOs: int writev(java.io.FileDescriptor,java.lang.Object[],int[],int[])>
SINK|<android.test.mock.MockContentResolver: void setMasterSyncAutomatically(boolean)>
SINK|<com.android.email.NotificationController: void setupSoundAndVibration(android.app.Notification$Builder,com.android.emailcommon.provider.Account)>
SINK|<android.view.Surface: void setWindowCrop(android.graphics.Rect)>
SINK|<com.android.server.am.EventLogTags: void writeAmLowMemory(int)>
SINK|<com.google.android.mms.pdu.DeliveryInd: void setTo(com.google.android.mms.pdu.EncodedStringValue[])>
SINK|<android.app.backup.IRestoreObserver$Stub$Proxy: void restoreFinished(int)>
SINK|<com.android.contacts.model.dataitem.StructuredNameDataItem: void setPhoneticGivenName(java.lang.String)>
SINK|<com.google.android.mms.pdu.NotificationInd: void setExpiry(long)>
SINK|<android.support.v4.view.ViewPager$SavedState: void writeToParcel(android.os.Parcel,int)>
SINK|<android.media.AudioService: void setRemoteStreamVolume(int)>
SINK|<com.android.browser.Controller: com.android.browser.Tab openTab(java.lang.String,com.android.browser.Tab,boolean,boolean)>
SINK|<android.net.sip.ISipSession$Stub$Proxy: void setListener(android.net.sip.ISipSessionListener)>
SINK|<android.content.SyncStorageEngine: void setBackoff(android.accounts.Account,int,java.lang.String,long,long)>
SINK|<android.view.GLES20RenderLayer: void setTransform(android.graphics.Matrix)>
SINK|<com.android.bluetooth.hid.HidService: boolean setProtocolMode(android.bluetooth.BluetoothDevice,int)>
SINK|<android.app.Activity: void dumpInner(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
SINK|<android.widget.TextView: void setHint(java.lang.CharSequence)>
SINK|<android.preference.PreferenceGroup: void setEnabled(boolean)>
SINK|<com.android.bluetooth.Utils: void copyStream(java.io.InputStream,java.io.OutputStream,int)>
SINK|<com.android.internal.policy.impl.keyguard.KeyguardCircleFramedDrawable: void setColorFilter(android.graphics.ColorFilter)>
SINK|<com.android.inputmethod.keyboard.MainKeyboardView: boolean processMotionEvent(android.view.MotionEvent)>
SINK|<android.content.IntentFilter: void setPriority(int)>
SINK|<android.view.IWindowSession$Stub$Proxy: boolean outOfMemory(android.view.IWindow)>
SINK|<android.database.BulkCursorDescriptor: void writeToParcel(android.os.Parcel,int)>
SINK|<com.android.mms.ui.ConversationList$4: boolean onQueryTextSubmit(java.lang.String)>
SINK|<com.android.server.AppWidgetService: int allocateAppWidgetId(java.lang.String,int)>
SINK|<com.android.launcher2.ApplicationInfo: void setActivity(android.content.ComponentName,int)>
SINK|<android.widget.AutoCompleteTextView: boolean setFrame(int,int,int,int)>
SINK|<android.appwidget.AppWidgetManager: void bindAppWidgetId(int,android.content.ComponentName,android.os.Bundle)>
SINK|<com.android.server.am.ActivityManagerService$2: void handleMessage(android.os.Message)>
SINK|<android.view.inputmethod.InputConnectionWrapper: boolean performEditorAction(int)>
SINK|<android.widget.Gallery: void setCallbackDuringFling(boolean)>
SINK|<android.net.wifi.WifiNative: boolean setP2pGroupIdle(java.lang.String,int)>
SINK|<java.util.AbstractList: java.lang.Object set(int,java.lang.Object)>
SINK|<com.android.internal.telephony.RIL: void supplyIccPin2ForApp(java.lang.String,java.lang.String,android.os.Message)>
SINK|<android.net.wifi.WifiStateMachine: boolean syncEnableNetwork(com.android.internal.util.AsyncChannel,int,boolean)>
SINK|<com.android.browser.TabBar$TabView: void dispatchDraw(android.graphics.Canvas)>
SINK|<org.apache.http.protocol.HttpService: void setParams(org.apache.http.params.HttpParams)>
SINK|<android.filterfw.core.GLFrame: void setViewport(android.graphics.Rect)>
SINK|<com.android.gallery3d.ui.TileImageViewAdapter: void setRegionDecoder(android.graphics.BitmapRegionDecoder)>
SINK|<com.android.server.usb.UsbSettingsManager: void accessoryAttached(android.hardware.usb.UsbAccessory)>
SINK|<android.net.wifi.WifiManager: void save(android.net.wifi.WifiConfiguration,android.net.wifi.WifiManager$ActionListener)>
SINK|<java.io.ObjectOutputStream: boolean enableReplaceObject(boolean)>
SINK|<android.widget.Toast: void setText(java.lang.CharSequence)>
SINK|<android.security.IKeyChainService$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>
SINK|<com.android.server.usb.UsbSettingsManager: void dump(java.io.FileDescriptor,java.io.PrintWriter)>
SINK|<com.android.internal.telephony.ISms$Stub$Proxy: boolean disableCellBroadcastRange(int,int)>
SINK|<java.time.ZonedDateTime: void writeExternal(java.io.DataOutput)>
SINK|<android.database.DatabaseUtils$InsertHelper: void bind(int,float)>
SINK|<android.app.Instrumentation: void setInTouchMode(boolean)>
SINK|<android.database.sqlite.SQLiteQueryBuilder: void setTables(java.lang.String)>
SINK|<com.android.email.activity.MessageCompose: void setIntent(android.content.Intent)>
SINK|<com.android.internal.telephony.IccPhoneBookInterfaceManager: boolean updateAdnRecordsInEfByIndex(int,java.lang.String,java.lang.String,int,java.lang.String)>
SINK|<com.android.mms.dom.NodeImpl: void setTextContent(java.lang.String)>
SINK|<com.android.deskclock.RepeatPreference: void setDaysOfWeek(com.android.deskclock.Alarm$DaysOfWeek)>
SINK|<com.android.internal.telephony.sip.SipPhoneBase: void setNetworkSelectionModeAutomatic(android.os.Message)>
SINK|<com.android.internal.telephony.cdma.RuimSmsInterfaceManager: boolean enableCellBroadcastRange(int,int)>
SINK|<com.android.contacts.list.EmailAddressListAdapter: void bindView(android.view.View,int,android.database.Cursor,int)>
SINK|<android.widget.AbsListView$PositionScroller: void startWithOffset(int,int)>
SINK|<com.android.server.IntentResolverOld: void dumpFilter(java.io.PrintWriter,java.lang.String,android.content.IntentFilter)>
SINK|<com.android.videoeditor.widgets.OverlayView: void setSelected(boolean)>
SINK|<android.widget.RatingBar: void setRating(float)>
SINK|<android.text.SpannableStringBuilder: android.text.SpannableStringBuilder replace(int,int,java.lang.CharSequence)>
SINK|<com.android.email.MessagingController: void copyOneMessageToProvider(com.android.emailcommon.mail.Message,com.android.emailcommon.provider.EmailContent$Message,int,android.content.Context)>
SINK|<android.webkit.CallbackProxy: void onReceivedHttpAuthCredentials(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>
SINK|<android.app.ApplicationThreadProxy: void dumpDbInfo(java.io.FileDescriptor,java.lang.String[])>
SINK|<java.text.NumberFormat: void setRoundingMode(java.math.RoundingMode)>
SINK|<android.net.INetworkManagementEventObserver$Stub$Proxy: void interfaceAdded(java.lang.String)>
SINK|<com.android.server.pm.PackageManagerService: void addPreferredActivity(android.content.IntentFilter,int,android.content.ComponentName[],android.content.ComponentName,int)>
SINK|<org.xml.sax.helpers.XMLFilterImpl: void setDocumentLocator(org.xml.sax.Locator)>
SINK|<android.view.accessibility.AccessibilityNodeInfo: void setPassword(boolean)>
SINK|<android.app.ApplicationThreadProxy: void unstableProviderDied(android.os.IBinder)>
SINK|<android.database.sqlite.SQLiteCursor: void setWindow(android.database.CursorWindow)>
SINK|<com.android.mms.ui.MessageListItem: void setVideoVisibility(boolean)>
SINK|<android.app.Activity: void startIntentSenderFromChild(android.app.Activity,android.content.IntentSender,int,android.content.Intent,int,int,int,android.os.Bundle)>
SINK|<com.android.email.service.PopImapAuthenticatorService$PopImapAuthenticator: android.os.Bundle addAccount(android.accounts.AccountAuthenticatorResponse,java.lang.String,java.lang.String,java.lang.String[],android.os.Bundle)>
SINK|<android.content.ContentProviderOperation: void writeToParcel(android.os.Parcel,int)>
SINK|<android.hardware.Camera$Parameters: void setAutoExposureLock(boolean)>
SINK|<java.io.PrintStream: void write(byte[],int,int)>
SINK|<com.android.server.ConnectivityService: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
SINK|<java.util.Date: void setDate(int)>
SINK|<javax.xml.transform.sax.SAXResult: void setSystemId(java.lang.String)>
SINK|<com.android.emailcommon.service.IEmailService$Stub$Proxy: void loadMore(long)>
SINK|<android.view.GLES20Canvas: int saveLayer(float,float,float,float,android.graphics.Paint,int)>
SINK|<com.android.server.TextServicesManagerService: void setSpellCheckerEnabled(boolean)>
SINK|<com.android.contacts.ContactSaveService: android.content.Intent createSaveContactIntent(android.content.Context,com.android.contacts.model.RawContactDeltaList,java.lang.String,int,boolean,java.lang.Class,java.lang.String,android.os.Bundle)>
SINK|<android.filterfw.core.ShaderProgram: void setSourceRegion(android.filterfw.geometry.Quad)>
SINK|<android.opengl.GLSurfaceView: void setDebugFlags(int)>
SINK|<android.net.INetworkStatsService$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>
SINK|<android.graphics.Matrix$1: boolean setRectToRect(android.graphics.RectF,android.graphics.RectF,android.graphics.Matrix$ScaleToFit)>
SINK|<android.widget.Toast: void setView(android.view.View)>
SINK|<android.accounts.AccountManagerService: boolean access$1100(android.accounts.AccountManagerService,android.accounts.AccountManagerService$UserAccounts,android.accounts.Account,java.lang.String,java.lang.String)>
SINK|<com.android.launcher2.CellLayout: void setChildrenDrawnWithCacheEnabled(boolean)>
SINK|<android.view.View$7: void setValue(android.view.View,float)>
SINK|<javax.xml.parsers.SAXParser: void parse(java.io.InputStream,org.xml.sax.HandlerBase)>
SINK|<android.bluetooth.BluetoothTetheringDataTracker: boolean setRadio(boolean)>
SINK|<com.android.internal.telephony.cdma.CDMAPhone: void sendDtmf(char)>
SINK|<org.ccil.cowan.tagsoup.PYXWriter: void etag(char[],int,int)>
SINK|<android.database.sqlite.SQLiteCursor: void setSelectionArguments(java.lang.String[])>
SINK|<android.graphics.drawable.NinePatchDrawable: void setTargetDensity(android.util.DisplayMetrics)>
SINK|<junit.textui.ResultPrinter: void printFooter(junit.framework.TestResult)>
SINK|<org.apache.harmony.xnet.provider.jsse.SSLSocketWrapper: void setReceiveBufferSize(int)>
SINK|<com.android.contacts.editor.TextFieldsEditorView: void setValues(com.android.contacts.model.dataitem.DataKind,com.android.contacts.model.RawContactDelta$ValuesDelta,com.android.contacts.model.RawContactDelta,boolean,com.android.contacts.editor.ViewIdGenerator)>
SINK|<com.android.bluetooth.btservice.AdapterState$PendingCommandState: boolean processMessage(android.os.Message)>
SINK|<android.view.ViewRootImpl: void dispatchInvalidateRectDelayed(android.view.View$AttachInfo$InvalidateInfo,long)>
SINK|<android.hardware.input.IInputManager$Stub$Proxy: void tryPointerSpeed(int)>
SINK|<com.android.server.wm.WindowStateAnimator$SurfaceTrace: void setPosition(float,float)>
SINK|<android.content.Intent: void setSourceBounds(android.graphics.Rect)>
SINK|<android.app.Activity: void startIntentSender(android.content.IntentSender,android.content.Intent,int,int,int)>
SINK|<com.android.internal.view.menu.MenuBuilder: com.android.internal.view.menu.MenuBuilder setHeaderIconInt(int)>
SINK|<com.google.android.mms.pdu.RetrieveConf: void setContentType(byte[])>
SINK|<com.android.internal.appwidget.IAppWidgetService$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>
SINK|<android.app.LocalActivityManager: void dispatchPause(boolean)>
SINK|<android.widget.RemoteViews: void writeToParcel(android.os.Parcel,int)>
SINK|<gov.nist.javax.sip.header.ims.PAccessNetworkInfo: void setDSLLocation(java.lang.String)>
SINK|<android.app.ActivityManagerProxy: void setAlwaysFinish(boolean)>
SINK|<android.net.wifi.p2p.WifiP2pService$P2pStateMachine$GroupNegotiationState: boolean processMessage(android.os.Message)>
SINK|<android.view.SurfaceView: void setZOrderMediaOverlay(boolean)>
SINK|<android.widget.AbsListView: void setVerticalScrollbarPosition(int)>
SINK|<android.location.Criteria: void setHorizontalAccuracy(int)>
SINK|<com.android.internal.widget.PasswordEntryKeyboardView: boolean setShifted(boolean)>
SINK|<android.text.TextUtils: void dumpSpans(java.lang.CharSequence,android.util.Printer,java.lang.String)>
SINK|<java.io.Writer: java.io.Writer append(char)>
SINK|<java.lang.ThreadGroup: void setMaxPriority(int)>
SINK|<com.android.gallery3d.app.Bookmarker: void setBookmark(android.net.Uri,int,int)>
SINK|<android.view.ViewGroup: void setAnimationCacheEnabled(boolean)>
SINK|<android.net.sip.SimpleSessionDescription: void setAttribute(java.lang.String,java.lang.String)>
SINK|<com.android.server.InputMethodManagerService: boolean setCurrentInputMethodSubtype(android.view.inputmethod.InputMethodSubtype)>
SINK|<android.net.MobileDataStateTracker: boolean setRadio(boolean)>
SINK|<com.android.deskclock.widget.multiwaveview.TargetDrawable$DrawableWithAlpha: void setColorFilter(android.graphics.ColorFilter)>
SINK|<android.media.MediaPlayer: void setSurface(android.view.Surface)>
SINK|<com.android.commands.bmgr.Bmgr$RestoreObserver: void restoreFinished(int)>
SINK|<java.io.BufferedWriter: void write(char[],int,int)>
SINK|<org.apache.http.impl.cookie.RFC2965VersionAttributeHandler: void parse(org.apache.http.cookie.SetCookie,java.lang.String)>
SINK|<android.content.ContentProviderOperation$Builder: android.content.ContentProviderOperation$Builder withValueBackReference(java.lang.String,int)>
SINK|<android.graphics.drawable.PaintDrawable: void setCornerRadii(float[])>
SINK|<android.hardware.usb.IUsbManager$Stub$Proxy: void setAccessoryPackage(android.hardware.usb.UsbAccessory,java.lang.String,int)>
SINK|<java.nio.MappedByteBufferAdapter: java.nio.ByteBuffer putFloat(int,float)>
SINK|<com.android.internal.telephony.RIL: void setupDataCall(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,android.os.Message)>
SINK|<com.android.server.connectivity.Tethering$TetherInterfaceSM$UnavailableState: boolean processMessage(android.os.Message)>
SINK|<com.android.exchange.EasSyncService: void sync(com.android.exchange.adapter.AbstractSyncAdapter)>
SINK|<android.app.backup.BackupDataOutput: void setKeyPrefix(java.lang.String)>
SINK|<com.android.server.am.ActivityManagerService: void publishContentProviders(android.app.IApplicationThread,java.util.List)>
SINK|<android.bluetooth.BluetoothInputDevice: boolean sendData(android.bluetooth.BluetoothDevice,java.lang.String)>
SINK|<junit.framework.TestSuite: void run(junit.framework.TestResult)>
SINK|<javax.net.ssl.SSLParameters: void setCipherSuites(java.lang.String[])>
SINK|<android.content.IntentSender: void sendIntent(android.content.Context,int,android.content.Intent,android.content.IntentSender$OnFinished,android.os.Handler,java.lang.String)>
SINK|<com.google.android.mms.pdu.PduComposer: void arraycopy(byte[],int,int)>
SINK|<com.google.android.picasasync.AlbumCollectorJson: void addThumbnailUrl(com.google.android.picasasync.JsonReader,android.content.ContentValues,java.lang.String)>
SINK|<android.media.IAudioService$Stub$Proxy: void setVibrateSetting(int,int)>
SINK|<android.content.ContentResolver: void setIsSyncable(android.accounts.Account,java.lang.String,int)>
SINK|<android.view.View$10: void setValue(java.lang.Object,float)>
SINK|<com.android.server.am.ActivityStack: int startActivityMayWait(android.app.IApplicationThread,int,android.content.Intent,java.lang.String,android.os.IBinder,java.lang.String,int,int,java.lang.String,android.os.ParcelFileDescriptor,android.app.IActivityManager$WaitResult,android.content.res.Configuration,android.os.Bundle,int)>
SINK|<android.net.wifi.WifiManager$WifiLock: void setWorkSource(android.os.WorkSource)>
SINK|<libcore.icu.NativeDecimalFormat: void setMinimumIntegerDigits(int)>
SINK|<com.android.exchange.adapter.AccountSyncAdapter: void sendSyncOptions(java.lang.Double,com.android.exchange.adapter.Serializer,boolean)>
SINK|<com.android.internal.policy.impl.keyguard.KeyguardMultiUserAvatar: void setActive(boolean,boolean,java.lang.Runnable)>
SINK|<com.android.calendar.alerts.DismissAlarmsService: void onHandleIntent(android.content.Intent)>
SINK|<com.android.inputmethod.latin.spellcheck.AndroidSpellCheckerService: com.android.inputmethod.latin.spellcheck.DictAndProximity createDictAndProximity(java.util.Locale)>
SINK|<android.app.ActionBar: void setSplitBackgroundDrawable(android.graphics.drawable.Drawable)>
SINK|<android.location.ILocationManager$Stub$Proxy: void requestGeofence(android.location.LocationRequest,android.location.Geofence,android.app.PendingIntent,java.lang.String)>
SINK|<java.nio.IntToByteBufferAdapter: java.nio.IntBuffer put(int,int)>
SINK|<com.android.contacts.model.RawContactDelta$ValuesDelta: void put(java.lang.String,java.lang.String)>
SINK|<java.time.LocalDate: void writeExternal(java.io.DataOutput)>
SINK|<com.android.systemui.statusbar.tablet.InputMethodButton: void setIconImage(int)>
SINK|<android.webkit.WebView$PrivateAccess: void setScrollXRaw(int)>
SINK|<com.android.email.ControllerResultUiThreadWrapper: void sendMailCallback(com.android.emailcommon.mail.MessagingException,long,long,int)>
SINK|<org.apache.harmony.xnet.provider.jsse.CertificateMessage: void send(org.apache.harmony.xnet.provider.jsse.HandshakeIODataStream)>
SINK|<com.android.systemui.statusbar.DelegateViewHelper: void setInitialTouchRegion(android.view.View[])>
SINK|<android.view.IWindowManager$Stub$Proxy: boolean inputMethodClientHasFocus(com.android.internal.view.IInputMethodClient)>
SINK|<com.android.videoeditor.service.ApiService: void insertSlidingTransition(android.content.Context,java.lang.String,java.lang.String,java.lang.String,long,int,int)>
SINK|<android.widget.ToggleButton: void setTextOff(java.lang.CharSequence)>
SINK|<java.time.format.DateTimeFormatter: java.time.temporal.TemporalAccessor parseUnresolved(java.lang.CharSequence,java.text.ParsePosition)>
SINK|<com.android.contacts.activities.ContactEditorAccountsChangedActivity: void onActivityResult(int,int,android.content.Intent)>
SINK|<java.util.logging.StreamHandler: void setEncoding(java.lang.String)>
SINK|<android.support.v13.app.FragmentCompat$BaseFragmentCompatImpl: void setUserVisibleHint(android.app.Fragment,boolean)>
SINK|<android.net.http.AndroidHttpClientConnection: void setSocketTimeout(int)>
SINK|<com.android.internal.view.IInputMethodManager$Stub$Proxy: void setAdditionalInputMethodSubtypes(java.lang.String,android.view.inputmethod.InputMethodSubtype[])>
SINK|<android.view.View: void setHorizontalFadingEdgeEnabled(boolean)>
SINK|<android.app.ContextImpl: void sendOrderedBroadcast(android.content.Intent,java.lang.String)>
SINK|<android.view.inputmethod.InputMethodManager: void updateExtractedText(android.view.View,int,android.view.inputmethod.ExtractedText)>
SINK|<android.view.inputmethod.BaseInputConnection: void setComposingSpans(android.text.Spannable)>
SINK|<org.apache.http.params.HttpConnectionParams: void setSoTimeout(org.apache.http.params.HttpParams,int)>
SINK|<android.content.Intent: android.content.Intent setType(java.lang.String)>
SINK|<java.text.CollationElementIterator: void setOffset(int)>
SINK|<android.widget.ListView: void setOverscrollHeader(android.graphics.drawable.Drawable)>
SINK|<com.android.server.ConnectivityService: int setUsbTethering(boolean)>
SINK|<java.text.BreakIterator: void setText(java.lang.String)>
SINK|<java.time.LocalTime: java.time.LocalTime truncatedTo(java.time.temporal.TemporalUnit)>
SINK|<com.android.exchange.adapter.CalendarSyncAdapter$CalendarOperations: void updatedAttendee(android.content.ContentValues,long)>
SINK|<android.app.ApplicationPackageManager: boolean addPermissionAsync(android.content.pm.PermissionInfo)>
SINK|<android.app.AlertDialog: void setView(android.view.View,int,int,int,int)>
SINK|<com.android.launcher2.Launcher: void startSearch(java.lang.String,boolean,android.os.Bundle,boolean)>
SINK|<android.nfc.INfcTag$Stub$Proxy: int formatNdef(int,byte[])>
SINK|<com.android.email.service.EasTestAuthenticatorService$EasAuthenticator: android.os.Bundle addAccount(android.accounts.AccountAuthenticatorResponse,java.lang.String,java.lang.String,java.lang.String[],android.os.Bundle)>
SINK|<com.android.internal.textservice.ISpellCheckerSession$Stub$Proxy: void onGetSuggestionsMultiple(android.view.textservice.TextInfo[],int,boolean)>
SINK|<android.content.SyncStorageEngine: void setDelayUntilTime(android.accounts.Account,int,java.lang.String,long)>
SINK|<com.android.emailcommon.provider.Account: void writeToParcel(android.os.Parcel,int)>
SINK|<android.view.accessibility.AccessibilityNodeInfo: void setSelected(boolean)>
SINK|<org.apache.http.auth.params.AuthParams: void setCredentialCharset(org.apache.http.params.HttpParams,java.lang.String)>
SINK|<com.android.gallery3d.ui.CropView$HighlightRectangle: void setRectangle(android.graphics.RectF)>
SINK|<com.android.server.BackupManagerService: void handleTimeout(int,java.lang.Object)>
SINK|<org.apache.http.auth.AuthState: void setCredentials(org.apache.http.auth.Credentials)>
SINK|<com.google.android.mms.pdu.PduPart: void setContentDisposition(byte[])>
SINK|<java.text.MessageFormat: java.lang.Object[] parse(java.lang.String)>
SINK|<android.view.Window: void setLayout(int,int)>
SINK|<com.android.mms.ui.ConversationListItem: void setChecked(boolean)>
SINK|<com.android.gallery3d.filtershow.PanelController: void setCurrentPanel(android.view.View)>
SINK|<com.android.internal.telephony.sip.SipPhone: void setRadioPower(boolean)>
SINK|<com.android.phone.CallCard: void onQueryComplete(int,java.lang.Object,com.android.internal.telephony.CallerInfo)>
SINK|<com.android.email.activity.MessageCompose: boolean actionCompose(android.content.Context,java.lang.String,long)>
SINK|<android.view.IWindowManager$Stub$Proxy: void setAnimationScale(int,float)>
SINK|<android.accounts.IAccountManager$Stub$Proxy: void addAcount(android.accounts.IAccountManagerResponse,java.lang.String,java.lang.String,java.lang.String[],boolean,android.os.Bundle)>
SINK|<android.bluetooth.BluetoothTetheringDataTracker: void setPolicyDataEnable(boolean)>
SINK|<android.webkit.WebSettings: void setPluginsEnabled(boolean)>
SINK|<com.android.contacts.activities.ContactSelectionActivity: void startActivityAndForwardResult(android.content.Intent)>
SINK|<com.android.mms.ui.MessageListItem: void setVideo(java.lang.String,android.net.Uri)>
SINK|<com.android.commands.bmgr.Bmgr$RestoreObserver: void onUpdate(int,java.lang.String)>
SINK|<com.android.phone.BluetoothPhoneService$3: boolean sendDtmf(int)>
SINK|<android.filterfw.io.GraphReader: void addReference(java.lang.String,java.lang.Object)>
SINK|<com.android.phone.DTMFTwelveKeyDialer: void startTone(char,boolean)>
SINK|<java.util.concurrent.RecursiveAction: void setRawResult(java.lang.Void)>
SINK|<android.widget.RemoteViews: void setRemoteAdapter(int,android.content.Intent)>
SINK|<org.apache.http.params.HttpConnectionParamBean: void setLinger(int)>
SINK|<android.widget.SimpleCursorAdapter: void setViewImage(android.widget.ImageView,java.lang.String)>
SINK|<android.webkit.WebSettings: void setSupportZoom(boolean)>
SINK|<android.net.CaptivePortalTracker$DefaultState: boolean processMessage(android.os.Message)>
SINK|<android.widget.EditText: void setSelection(int,int)>
SINK|<java.text.AttributedString: void addAttribute(java.text.AttributedCharacterIterator$Attribute,java.lang.Object,int,int)>
SINK|<java.time.OffsetTime: java.time.OffsetTime parse(java.lang.CharSequence,java.time.format.DateTimeFormatter)>
SINK|<android.widget.LinearLayout: void setBaselineAligned(boolean)>
SINK|<com.google.android.picasastore.ImageProxyUtil: java.lang.String setImageUrlSize(int,java.lang.String)>
SINK|<com.android.inputmethod.latin.LatinImeLogger: void onStartInputView(android.view.inputmethod.EditorInfo)>
SINK|<android.inputmethodservice.InputMethodService: void onUpdateExtractingVisibility(android.view.inputmethod.EditorInfo)>
SINK|<com.android.server.connectivity.Tethering$TetherInterfaceSM: void setLastErrorAndTransitionToInitialState(int)>
SINK|<android.test.mock.MockContext: void sendOrderedBroadcast(android.content.Intent,java.lang.String)>
SINK|<java.util.concurrent.ThreadPoolExecutor: void setMaximumPoolSize(int)>
SINK|<com.android.nfc.dhimpl.NativeLlcpConnectionlessSocket: void send(int,byte[])>
SINK|<java.nio.IoVec: int doTransfer(java.io.FileDescriptor)>
SINK|<com.android.browser.TabBar$TabView: void setFavicon(android.graphics.drawable.Drawable)>
SINK|<java.util.zip.Deflater: void setStrategy(int)>
SINK|<org.apache.harmony.xml.ExpatParser: void startNamespace(java.lang.String,java.lang.String)>
SINK|<com.google.android.apps.lightcycle.math.Quaternion: void set(com.google.android.apps.lightcycle.math.Quaternion)>
SINK|<java.util.logging.Handler: void setFormatter(java.util.logging.Formatter)>
SINK|<org.ccil.cowan.tagsoup.AttributesImpl: void setValue(int,java.lang.String)>
SINK|<android.widget.RemoteViews$BitmapCache: void writeBitmapsToParcel(android.os.Parcel,int)>
SINK|<com.android.internal.telephony.test.SimulatedCommands: void sendDtmf(char,android.os.Message)>
SINK|<com.android.internal.os.BatteryStatsImpl: void writeToParcelWithoutUids(android.os.Parcel,int)>
SINK|<android.widget.DialerFilter: void setLettersWatcher(android.text.TextWatcher)>
SINK|<com.android.internal.telephony.DataConnectionAc: void reqAddApnContext(com.android.internal.telephony.ApnContext)>
SINK|<gov.nist.javax.sip.address.TelURLImpl: void setGlobal(boolean)>
SINK|<java.util.Vector: void setElementAt(java.lang.Object,int)>
SINK|<android.app.ApplicationThreadProxy: void dumpHeap(boolean,java.lang.String,android.os.ParcelFileDescriptor)>
SINK|<com.android.providers.contacts.ContactsDatabaseHelper: void copyLongValue(android.content.ContentValues,java.lang.String,android.content.ContentValues,java.lang.String)>
SINK|<org.apache.http.entity.SerializableEntity: void createBytes(java.io.Serializable)>
SINK|<android.content.SyncStorageEngine: void removePeriodicSync(android.accounts.Account,int,java.lang.String,android.os.Bundle)>
SINK|<com.android.exchange.adapter.AbstractSyncAdapter: void setPimSyncOptions(java.lang.Double,java.lang.String,com.android.exchange.adapter.Serializer)>
SINK|<com.android.launcher2.CellLayout: boolean animateChildToPosition(android.view.View,int,int,int,int,boolean,boolean)>
SINK|<org.apache.http.entity.AbstractHttpEntity: void setContentType(org.apache.http.Header)>
SINK|<com.android.server.AppWidgetService: void bindRemoteViewsService(int,android.content.Intent,android.os.IBinder,int)>
SINK|<com.android.internal.telephony.SmsUsageMonitor: boolean check(java.lang.String,int)>
SINK|<com.android.server.usb.UsbHostManager: android.os.ParcelFileDescriptor openDevice(java.lang.String)>
SINK|<android.widget.CompoundButton: void setButtonDrawable(android.graphics.drawable.Drawable)>
SINK|<javax.xml.parsers.DocumentBuilder: org.w3c.dom.Document parse(java.lang.String)>
SINK|<com.android.launcher2.PagedViewCellLayoutChildren: void setChildrenDrawingCacheEnabled(boolean)>
SINK|<gov.nist.javax.sip.address.SipUri: void setHostPort(gov.nist.core.HostPort)>
SINK|<android.app.ContextImpl: boolean startInstrumentation(android.content.ComponentName,java.lang.String,android.os.Bundle)>
SINK|<android.os.IPowerManager$Stub$Proxy: void goToSleep(long,int)>
SINK|<java.util.concurrent.atomic.AtomicLongArray: void set(int,long)>
SINK|<android.preference.VolumePreference$SavedState: void writeToParcel(android.os.Parcel,int)>
SINK|<android.text.style.UnderlineSpan: void updateDrawState(android.text.TextPaint)>
SINK|<com.android.internal.app.ActionBarImpl$ActionModeImpl: void setTitle(int)>
SINK|<java.text.DecimalFormatSymbols: void setInfinity(java.lang.String)>
SINK|<java.util.logging.Logger: void setUseParentHandlers(boolean)>
SINK|<android.media.IAudioService$Stub$Proxy: void startBluetoothSco(android.os.IBinder)>
SINK|<com.android.server.am.ActivityManagerService$CpuBinder: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
SINK|<android.app.UiModeManager: void setNightMode(int)>
SINK|<com.android.server.pm.PackageManagerService: boolean addPermissionLocked(android.content.pm.PermissionInfo,boolean)>
SINK|<android.graphics.drawable.BitmapDrawable: void setTargetDensity(android.graphics.Canvas)>
SINK|<org.apache.http.params.HttpProtocolParams: void setContentCharset(org.apache.http.params.HttpParams,java.lang.String)>
SINK|<android.net.wifi.p2p.WifiP2pGroupList: void writeToParcel(android.os.Parcel,int)>
SINK|<org.xml.sax.helpers.AttributeListImpl: void setAttributeList(org.xml.sax.AttributeList)>
SINK|<android.net.wifi.WifiStateMachine$DriverStartingState: boolean processMessage(android.os.Message)>
SINK|<com.android.server.UpdateLockService: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
SINK|<com.android.internal.view.IInputMethodManager$Stub$Proxy: com.android.internal.view.InputBindResult startInput(com.android.internal.view.IInputMethodClient,com.android.internal.view.IInputContext,android.view.inputmethod.EditorInfo,int)>
SINK|<android.view.GLES20DisplayList: void setRight(int)>
SINK|<com.android.internal.telephony.IccSmsInterfaceManager: void sendData(java.lang.String,java.lang.String,int,byte[],android.app.PendingIntent,android.app.PendingIntent)>
SINK|<com.android.internal.telephony.cdma.CDMAPhone: void setOutgoingCallerIdDisplay(int,android.os.Message)>
SINK|<com.android.email.activity.setup.AccountSettings$UnsavedChangesDialogFragment: com.android.email.activity.setup.AccountSettings$UnsavedChangesDialogFragment newInstanceForHeader(int)>
SINK|<com.android.camera.CameraActivity: void startActivityForResult(android.content.Intent,int)>
SINK|<android.app.admin.IDevicePolicyManager$Stub$Proxy: void setPasswordMinimumLowerCase(android.content.ComponentName,int,int)>
SINK|<android.os.CommonTimeUtils: int transactSetSockaddr(int,java.net.InetSocketAddress)>
SINK|<android.app.Dialog: void onRestoreInstanceState(android.os.Bundle)>
SINK|<android.renderscript.Script: void setVar(int,double)>
SINK|<org.apache.http.impl.conn.tsccm.ThreadSafeClientConnManager: void setMaxForRoute(org.apache.http.conn.routing.HttpRoute,int)>
SINK|<android.graphics.Paint: android.graphics.MaskFilter setMaskFilter(android.graphics.MaskFilter)>
SINK|<android.filterfw.core.Filter: void addMaskedInputPort(java.lang.String,android.filterfw.core.FrameFormat)>
SINK|<com.android.gallery3d.filtershow.imageshow.ImageGeometry: void setLocalFlip(com.android.gallery3d.filtershow.imageshow.GeometryMetadata$FLIP)>
SINK|<gov.nist.javax.sip.SipProviderImpl: void setListeningPoint(javax.sip.ListeningPoint)>
SINK|<android.preference.CheckBoxPreference: void setSummaryOff(int)>
SINK|<android.webkit.CallbackProxy: void onReceivedClientCertRequest(android.webkit.ClientCertRequestHandler,java.lang.String)>
SINK|<android.content.ContentService: void dump(java.io.FileDescriptor,java.lang.String[])>
SINK|<org.apache.harmony.xnet.provider.jsse.OpenSSLServerSocketImpl: void setNeedClientAuth(boolean)>
SINK|<com.android.internal.telephony.PhoneProxy: void setCallWaiting(boolean,android.os.Message)>
SINK|<com.android.bluetooth.hfp.HeadsetStateMachine$AudioOn: boolean processMessage(android.os.Message)>
SINK|<com.android.inputmethod.latin.UserHistoryDictIOUtils: void writeDictionaryBinary(java.io.OutputStream,com.android.inputmethod.latin.UserHistoryDictIOUtils$BigramDictionaryInterface,com.android.inputmethod.latin.UserHistoryDictionaryBigramList,com.android.inputmethod.latin.makedict.FormatSpec$FormatOptions)>
SINK|<com.android.internal.widget.LockPatternUtils: void saveLockPassword(java.lang.String,int)>
SINK|<com.android.server.am.ActivityManagerService: boolean dumpPendingIntentsLocked(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[],int,boolean,java.lang.String)>
SINK|<java.lang.reflect.Field: void setDouble(java.lang.Object,double)>
SINK|<android.app.ActivityManagerProxy: void handleApplicationCrash(android.os.IBinder,android.app.ApplicationErrorReport$CrashInfo)>
SINK|<com.android.internal.util.StateMachine: void sendMessageDelayed(android.os.Message,long)>
SINK|<com.android.internal.statusbar.IStatusBarService$Stub$Proxy: void setIconVisibility(java.lang.String,boolean)>
SINK|<org.apache.http.conn.params.ConnManagerParamBean: void setTimeout(long)>
SINK|<com.android.internal.telephony.gsm.GSMPhone: void notifyNewRingingConnection(com.android.internal.telephony.Connection)>
SINK|<android.webkit.WebView: boolean restorePicture(android.os.Bundle,java.io.File)>
SINK|<android.content.Intent: android.content.Intent putExtra(java.lang.String,int)>
SINK|<com.android.server.InputMethodManagerService: void setInputMethodLocked(java.lang.String,int)>
SINK|<android.nfc.INdefPushCallback$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>
SINK|<com.android.bluetooth.hdp.HealthService: boolean registerAppConfiguration(android.bluetooth.BluetoothHealthAppConfiguration,android.bluetooth.IBluetoothHealthCallback)>
SINK|<android.net.sip.ISipService$Stub$Proxy: boolean isOpened(java.lang.String)>
SINK|<android.widget.RatingBar: void setStepSize(float)>
SINK|<com.android.browser.HistoryItem: void setIsBookmark(boolean)>
SINK|<android.app.ActivityManager$RunningServiceInfo: void writeToParcel(android.os.Parcel,int)>
SINK|<android.net.http.Headers: void setContentType(java.lang.String)>
SINK|<android.media.MediaRecorder: void setLocation(float,float)>
SINK|<android.content.ContentValues: void put(java.lang.String,byte[])>
SINK|<com.android.internal.view.IInputMethodManager$Stub$Proxy: void setInputMethod(android.os.IBinder,java.lang.String)>
SINK|<com.android.internal.telephony.UiccCardApplication: void supplyPuk2(java.lang.String,java.lang.String,android.os.Message)>
SINK|<com.android.calendar.CalendarController: void setTime(long)>
SINK|<com.android.mms.dom.smil.SmilParElementImpl: void setDur(float)>
SINK|<com.coremedia.iso.IsoTypeWriter: void writeUInt64(java.nio.ByteBuffer,long)>
SINK|<com.android.bluetooth.btservice.AdapterService$AdapterServiceBinder: void sendConnectionStateChange(android.bluetooth.BluetoothDevice,int,int,int)>
SINK|<android.net.wifi.p2p.WifiP2pManager: void addLocalService(android.net.wifi.p2p.WifiP2pManager$Channel,android.net.wifi.p2p.nsd.WifiP2pServiceInfo,android.net.wifi.p2p.WifiP2pManager$ActionListener)>
SINK|<com.android.mms.util.Recycler$MmsRecycler: void setMessageLimit(android.content.Context,int)>
SINK|<android.widget.TextSwitcher: void setText(java.lang.CharSequence)>
SINK|<com.android.mms.transaction.ReadRecTransaction: byte[] sendPdu(long,byte[],java.lang.String)>
SINK|<com.google.android.mms.util.AbstractCache: boolean put(java.lang.Object,java.lang.Object)>
SINK|<gov.nist.javax.sip.address.SipUri: void setGrParam(java.lang.String)>
SINK|<com.android.browser.SnapshotBar: void setFavicon(android.graphics.Bitmap)>
SINK|<java.lang.reflect.Field: void setChar(java.lang.Object,char)>
SINK|<com.android.calendar.CalendarEventModel: void addAttendee(com.android.calendar.CalendarEventModel$Attendee)>
SINK|<android.net.wifi.WifiManager: void startWps(android.net.wifi.WpsInfo,android.net.wifi.WifiManager$WpsListener)>
SINK|<com.android.server.wm.WindowManagerService: int addWindow(com.android.server.wm.Session,android.view.IWindow,int,android.view.WindowManager$LayoutParams,int,int,android.graphics.Rect,android.view.InputChannel)>
SINK|<com.android.mms.transaction.SmsSingleRecipientSender: boolean sendMessage(long)>
SINK|<com.android.internal.app.IBatteryStats$Stub$Proxy: void noteStopGps(int)>
SINK|<android.view.IWindowManager$Stub$Proxy: void setAppGroupId(android.os.IBinder,int)>
SINK|<com.android.internal.policy.impl.keyguard.KeyguardUpdateMonitor: void sendKeyguardVisibilityChanged(boolean)>
SINK|<android.text.TextPaint: void set(android.text.TextPaint)>
SINK|<com.google.android.apps.lightcycle.opengl.DeviceOrientedSprite: void setPositionsCentered(float,float,int,int)>
SINK|<android.net.INetworkPolicyListener$Stub$Proxy: void onUidRulesChanged(int,int)>
SINK|<android.app.IAlarmManager$Stub$Proxy: void setInexactRepeating(int,long,long,android.app.PendingIntent)>
SINK|<gov.nist.javax.sip.address.SipUri: void setQHeader(gov.nist.core.NameValue)>
SINK|<com.android.internal.telephony.PhoneBase: void notifyDataConnectionFailed(java.lang.String,java.lang.String)>
SINK|<gov.nist.javax.sip.address.Authority: void setPort(int)>
SINK|<android.hardware.display.IDisplayManager$Stub$Proxy: void registerCallback(android.hardware.display.IDisplayManagerCallback)>
SINK|<android.view.SurfaceView: void setZOrderOnTop(boolean)>
SINK|<com.android.server.WifiService: boolean setWifiEnabled(boolean)>
SINK|<android.graphics.Bitmap: void setDensity(int)>
SINK|<android.os.INetworkManagementService$Stub$Proxy: void enableNat(java.lang.String,java.lang.String)>
SINK|<com.android.emailcommon.service.PolicyServiceProxy: void setAccountPolicy(long,com.android.emailcommon.provider.Policy,java.lang.String)>
SINK|<com.android.videoeditor.service.ApiService: void setOverlayDuration(android.content.Context,java.lang.String,java.lang.String,java.lang.String,long)>
SINK|<android.speech.tts.AudioPlaybackHandler: void enqueue(android.speech.tts.PlaybackQueueItem)>
SINK|<com.android.videoeditor.service.ApiService: void insertAlphaTransition(android.content.Context,java.lang.String,java.lang.String,java.lang.String,long,int,int,int,boolean)>
SINK|<android.content.IContentService$Stub$Proxy: void addStatusChangeListener(int,android.content.ISyncStatusObserver)>
SINK|<android.util.ReflectiveProperty: void set(java.lang.Object,java.lang.Object)>
SINK|<android.view.View: void setDuplicateParentStateEnabled(boolean)>
SINK|<android.content.IContentService$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>
SINK|<android.widget.TextView: void setIncludeFontPadding(boolean)>
SINK|<android.text.SpannableStringBuilder: void setFilters(android.text.InputFilter[])>
SINK|<android.widget.TabWidget: void setLeftStripDrawable(int)>
SINK|<org.apache.http.client.params.ClientParamBean: void setDefaultHost(org.apache.http.HttpHost)>
SINK|<java.security.cert.PKIXParameters: void setSigProvider(java.lang.String)>
SINK|<com.android.nfc.snep.SnepMessenger: void sendMessage(com.android.nfc.snep.SnepMessage)>
SINK|<org.apache.http.impl.io.ContentLengthOutputStream: void write(byte[])>
SINK|<android.app.ActivityManagerProxy: void publishService(android.os.IBinder,android.content.Intent,android.os.IBinder)>
SINK|<com.android.videoeditor.service.ApiService: void setAudioTrackVolume(android.content.Context,java.lang.String,java.lang.String,int)>
SINK|<com.android.internal.telephony.RIL: void setGsmBroadcastActivation(boolean,android.os.Message)>
SINK|<android.opengl.Matrix: void setIdentityM(float[],int)>
SINK|<com.android.internal.util.AsyncChannel: android.os.Message sendMessageSynchronously(int,java.lang.Object)>
SINK|<android.filterfw.core.MutableFrameFormat: void setDimensions(int,int,int)>
SINK|<com.android.contacts.util.NameConverter: android.content.ContentValues displayNameToStructuredName(android.content.Context,java.lang.String,android.content.ContentValues)>
SINK|<java.util.LinkedList: java.lang.Object set(int,java.lang.Object)>
SINK|<mod.ndk.ActMain: boolean cFuncDoTheMagic(android.content.Context)>
SINK|<com.android.server.am.BroadcastFilter: void dump(java.io.PrintWriter,java.lang.String)>
SINK|<com.android.server.EventLogTags: void writePowerScreenBroadcastSend(int)>
SINK|<com.android.phone.PhoneInterfaceManager: boolean supplyPuk(java.lang.String,java.lang.String)>
SINK|<java.text.DecimalFormat: void setMaximumIntegerDigits(int)>
SINK|<com.android.mms.ui.SlideView: void setImageVisibility(boolean)>
SINK|<gov.nist.javax.sip.header.AuthenticationHeader: void setUsername(java.lang.String)>
SINK|<android.service.wallpaper.IWallpaperConnection$Stub$Proxy: void engineShown(android.service.wallpaper.IWallpaperEngine)>
SINK|<org.apache.http.message.BasicLineParser: org.apache.http.ProtocolVersion parseProtocolVersion(org.apache.http.util.CharArrayBuffer,org.apache.http.message.ParserCursor)>
SINK|<android.app.AlertDialog: void setIcon(int)>
SINK|<java.net.ServerSocket: void setSoTimeout(int)>
SINK|<libcore.io.ForwardingOs: void setsockoptIfreq(java.io.FileDescriptor,int,int,java.lang.String)>
SINK|<java.security.cert.X509CertSelector: void setSubjectPublicKey(byte[])>
SINK|<com.android.calendar.agenda.AgendaWindowAdapter$QueryHandler: void onQueryComplete(int,java.lang.Object,android.database.Cursor)>
SINK|<java.util.concurrent.CompletableFuture: java.util.concurrent.CompletableFuture runAfterEither(java.util.concurrent.CompletionStage,java.lang.Runnable)>
SINK|<com.android.internal.view.IInputContext$Stub$Proxy: void setComposingRegion(int,int)>
SINK|<android.webkit.WebViewClassic: void setSelection(int,int)>
SINK|<android.os.Parcel: void setDataSize(int)>
SINK|<android.widget.TextView: void setSingleLine(boolean)>
SINK|<android.view.ViewStub: void setOnInflateListener(android.view.ViewStub$OnInflateListener)>
SINK|<com.android.internal.view.IInputMethodSession$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>
SINK|<gov.nist.javax.sip.header.ims.PVisitedNetworkID: void setVisitedNetworkID(gov.nist.core.Token)>
SINK|<android.accounts.IAccountManager$Stub$Proxy: void getAuthTokenLabel(android.accounts.IAccountManagerResponse,java.lang.String,java.lang.String)>
SINK|<java.nio.DatagramChannelImpl$DatagramSocketAdapter: void bind(java.net.SocketAddress)>
SINK|<com.adobe.xmp.options.PropertyOptions: com.adobe.xmp.options.PropertyOptions setHasLanguage(boolean)>
SINK|<android.media.effect.FilterGraphEffect: void setParameter(java.lang.String,java.lang.Object)>
SINK|<com.android.server.sip.SipService: void open3(android.net.sip.SipProfile,android.app.PendingIntent,android.net.sip.ISipSessionListener)>
SINK|<java.time.ZoneOffset: java.lang.Object writeReplace()>
SINK|<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setNegativeButton(int,android.content.DialogInterface$OnClickListener)>
SINK|<android.app.ApplicationThreadProxy: void scheduleActivityConfigurationChanged(android.os.IBinder)>
SINK|<android.renderscript.Matrix4f: void set(int,int,float)>
SINK|<com.android.internal.location.ILocationProvider$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>
SINK|<com.adobe.xmp.impl.XMPMetaImpl: void setPropertyDouble(java.lang.String,java.lang.String,double)>
SINK|<android.widget.TextView: void setTextColor(int)>
SINK|<java.util.concurrent.atomic.AtomicLong: void set(long)>
SINK|<java.net.HttpURLConnection: void setFixedLengthStreamingMode(int)>
SINK|<com.android.contacts.voicemail.VoicemailPlaybackFragment$PlaybackViewImpl: void sendFetchVoicemailRequest(android.net.Uri)>
SINK|<com.android.email.mail.store.Pop3Store$Pop3Folder: void setFlags(com.android.emailcommon.mail.Message[],com.android.emailcommon.mail.Flag[],boolean)>
SINK|<android.graphics.PointF: void set(android.graphics.PointF)>
SINK|<com.android.email.Preferences: void setSenderAsTrusted(java.lang.String)>
SINK|<android.hardware.Camera$Parameters: void setGpsAltitude(double)>
SINK|<org.apache.harmony.xml.dom.ElementImpl: void setIdAttribute(java.lang.String,boolean)>
SINK|<java.io.PrintStream: void println(double)>
SINK|<android.inputmethodservice.KeyboardView: void setPreviewEnabled(boolean)>
SINK|<java.time.Duration: java.lang.Object writeReplace()>
SINK|<android.content.IContentService$Stub$Proxy: boolean isSyncPending(android.accounts.Account,java.lang.String)>
SINK|<com.android.email.activity.setup.AccountSettings: android.content.Intent onBuildStartFragmentIntent(java.lang.String,android.os.Bundle,int,int)>
SINK|<com.android.providers.contacts.VoicemailContentProvider: android.os.ParcelFileDescriptor openDataFile(com.android.providers.contacts.VoicemailContentProvider$UriData,java.lang.String)>
SINK|<com.android.internal.telephony.PhoneProxy: void setCdmaRoamingPreference(int,android.os.Message)>
SINK|<com.android.server.NsdService: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
SINK|<gov.nist.javax.sip.address.Authority: void setUser(java.lang.String)>
SINK|<com.android.server.display.OverlayDisplayAdapter$OverlayDisplayHandle: void dumpLocked(java.io.PrintWriter)>
SINK|<android.location.Address: void setAdminArea(java.lang.String)>
SINK|<android.media.IRemoteControlDisplay$Stub$Proxy: void setAllMetadata(int,android.os.Bundle,android.graphics.Bitmap)>
SINK|<android.text.SpannableString: void setSpan(java.lang.Object,int,int,int)>
SINK|<com.android.internal.telephony.PhoneBase: void restoreSavedNetworkSelection(android.os.Message)>
SINK|<android.net.sip.SipManager: void open(android.net.sip.SipProfile,android.app.PendingIntent,android.net.sip.SipRegistrationListener)>
SINK|<org.apache.http.message.BasicHttpEntityEnclosingRequest: void setEntity(org.apache.http.HttpEntity)>
SINK|<android.media.AudioService: void setStreamMute(int,boolean,android.os.IBinder)>
SINK|<android.net.UrlQuerySanitizer: void setPreferFirstRepeatedParameter(boolean)>
SINK|<android.speech.tts.ITextToSpeechCallback$Stub$Proxy: void onDone(java.lang.String)>
SINK|<org.apache.http.client.params.ClientParamBean: void setHandleAuthentication(boolean)>
SINK|<android.location.Location: void setAccuracy(float)>
SINK|<android.widget.TimePicker: void setIs24HourView(java.lang.Boolean)>
SINK|<android.app.Activity: void setResult(int,android.content.Intent)>
SINK|<org.apache.http.cookie.params.CookieSpecParamBean: void setSingleHeader(boolean)>
SINK|<android.net.sip.ISipSessionListener$Stub$Proxy: void onCallEstablished(android.net.sip.ISipSession,java.lang.String)>
SINK|<android.bluetooth.IBluetoothA2dp$Stub$Proxy: boolean setPriority(android.bluetooth.BluetoothDevice,int)>
SINK|<android.content.ISyncAdapter$Stub$Proxy: void startSync(android.content.ISyncContext,java.lang.String,android.accounts.Account,android.os.Bundle)>
SINK|<com.android.internal.app.HeavyWeightSwitcherActivity: void setText(int,java.lang.CharSequence)>
SINK|<com.android.contacts.ContactSaveService: android.content.Intent createJoinContactsIntent(android.content.Context,long,long,boolean,java.lang.Class,java.lang.String)>
SINK|<com.android.internal.telephony.MccTable: void setSystemLocale(android.content.Context,java.lang.String,java.lang.String)>
SINK|<android.widget.TextView: void setFilters(android.text.InputFilter[])>
SINK|<com.android.internal.widget.SlidingTab$Slider: void setHintText(int)>
SINK|<android.widget.ZoomButtonsController: void setVisible(boolean)>
SINK|<android.webkit.WebViewClassic: void setWebChromeClient(android.webkit.WebChromeClient)>
SINK|<android.accounts.AccountManager: void removeOnAccountsUpdatedListener(android.accounts.OnAccountsUpdateListener)>
SINK|<com.android.email.Controller: void setMessageAnsweredOrForwarded(long,int)>
SINK|<com.android.internal.telephony.ITelephony$Stub$Proxy: boolean supplyPin(java.lang.String)>
SINK|<android.widget.PopupWindow: void setBackgroundDrawable(android.graphics.drawable.Drawable)>
SINK|<javax.xml.parsers.SAXParser: void parse(java.io.InputStream,org.xml.sax.helpers.DefaultHandler,java.lang.String)>
SINK|<com.android.ex.variablespeed.MediaPlayerDataSource: void setAsSourceFor(android.media.MediaPlayer)>
SINK|<java.io.ObjectOutputStream: void writeChar(int)>
SINK|<android.test.mock.MockCursor: boolean updateToNull(int)>
SINK|<android.location.ILocationManager$Stub$Proxy: void removeUpdates(android.location.ILocationListener,android.app.PendingIntent,java.lang.String)>
SINK|<com.android.providers.contacts.VoicemailStatusTable: int update(com.android.providers.contacts.VoicemailContentProvider$UriData,android.content.ContentValues,java.lang.String,java.lang.String[])>
SINK|<android.app.UiModeManager: void enableCarMode(int)>
SINK|<android.widget.TextView: void setHeight(int)>
SINK|<android.preference.EditTextPreference$SavedState: void writeToParcel(android.os.Parcel,int)>
SINK|<android.net.wifi.WifiWatchdogStateMachine$WatchdogEnabledState: boolean processMessage(android.os.Message)>
SINK|<android.widget.RemoteViews: void setImageViewBitmap(int,android.graphics.Bitmap)>
SINK|<android.graphics.Interpolator: void setRepeatMirror(float,boolean)>
SINK|<android.os.INetworkManagementService$Stub$Proxy: void disableNat(java.lang.String,java.lang.String)>
SINK|<android.os.storage.IMountService$Stub$Proxy: void mountObb(java.lang.String,java.lang.String,java.lang.String,android.os.storage.IObbActionListener,int)>
SINK|<com.android.videoeditor.widgets.ImageViewTouchBase: void setImageBitmapResetBase(android.graphics.Bitmap,boolean)>
SINK|<com.android.server.NsdService: void setEnabled(boolean)>
SINK|<com.android.musicfx.ControlPanelEffect: void setParameterInt(android.content.Context,java.lang.String,int,com.android.musicfx.ControlPanelEffect$Key,int,int)>
SINK|<android.webkit.Plugin: void setDescription(java.lang.String)>
SINK|<com.android.server.pm.UserManagerService: void setUserIcon(int,android.graphics.Bitmap)>
SINK|<android.net.wifi.p2p.WifiP2pService$P2pStateMachine$GroupCreatedState: boolean processMessage(android.os.Message)>
SINK|<com.android.server.am.ActivityManagerService: void setRequestedOrientation(android.os.IBinder,int)>
SINK|<java.util.concurrent.RecursiveTask: void setRawResult(java.lang.Object)>
SINK|<android.app.Fragment: void startActivity(android.content.Intent)>
SINK|<android.app.AlarmManager: void setInexactRepeating(int,long,long,android.app.PendingIntent)>
SINK|<com.android.server.NetworkManagementService: void setInterfaceUp(java.lang.String)>
SINK|<android.widget.SlidingDrawer: void setOnDrawerCloseListener(android.widget.SlidingDrawer$OnDrawerCloseListener)>
SINK|<android.util.Log: int d(java.lang.String,java.lang.String,java.lang.Throwable)>
SINK|<com.android.server.AppWidgetServiceImpl: void deleteAppWidgetLocked(com.android.server.AppWidgetServiceImpl$AppWidgetId)>
SINK|<org.xml.sax.helpers.LocatorImpl: void setLineNumber(int)>
SINK|<gov.nist.javax.sip.stack.MessageChannel: void sendMessage(gov.nist.javax.sip.message.SIPMessage,java.net.InetAddress,int)>
SINK|<android.widget.ExpandableListView: void setOnItemClickListener(android.widget.AdapterView$OnItemClickListener)>
SINK|<org.apache.http.protocol.HttpRequestExecutor: org.apache.http.HttpResponse doSendRequest(org.apache.http.HttpRequest,org.apache.http.HttpClientConnection,org.apache.http.protocol.HttpContext)>
SINK|<android.widget.DateTimeView: void setTime(long)>
SINK|<android.app.admin.DevicePolicyManager: void setPasswordQuality(android.content.ComponentName,int)>
SINK|<android.content.AbstractThreadedSyncAdapter$ISyncAdapterImpl: void startSync(android.content.ISyncContext,java.lang.String,android.accounts.Account,android.os.Bundle)>
SINK|<org.apache.http.entity.BasicHttpEntity: void setContent(java.io.InputStream)>
SINK|<android.location.Address: void setPremises(java.lang.String)>
SINK|<com.android.internal.telephony.ITelephonyRegistry$Stub$Proxy: void notifyCallForwardingChanged(boolean)>
SINK|<org.xmlpull.v1.sax2.Driver: void setDTDHandler(org.xml.sax.DTDHandler)>
SINK|<android.webkit.CallbackProxy: void onReceivedError(int,java.lang.String,java.lang.String)>
SINK|<com.android.internal.telephony.IccPhoneBookInterfaceManagerProxy: boolean updateAdnRecordsInEfByIndex(int,java.lang.String,java.lang.String,int,java.lang.String)>
SINK|<org.apache.http.impl.client.AbstractHttpClient: void setTargetAuthenticationHandler(org.apache.http.client.AuthenticationHandler)>
SINK|<android.app.ActivityManagerProxy: void moveTaskToBack(int)>
SINK|<java.nio.ShortToByteBufferAdapter: java.nio.ShortBuffer put(short[],int,int)>
SINK|<java.util.StringJoiner: java.util.StringJoiner setEmptyValue(java.lang.CharSequence)>
SINK|<com.android.camera.drawable.TextDrawable: void setColorFilter(android.graphics.ColorFilter)>
SINK|<android.service.wallpaper.IWallpaperEngine$Stub$Proxy: void setDesiredSize(int,int)>
SINK|<android.app.ContextImpl: void sendStickyBroadcast(android.content.Intent)>
SINK|<android.database.sqlite.SQLiteConnection: java.lang.String executeForString(java.lang.String,java.lang.Object[],android.os.CancellationSignal)>
SINK|<android.widget.TextView: void setFreezesText(boolean)>
SINK|<android.app.admin.IDevicePolicyManager$Stub$Proxy: int setStorageEncryption(android.content.ComponentName,boolean,int)>
SINK|<android.net.TrafficStats: void setThreadStatsTag(int)>
SINK|<android.net.DhcpStateMachine$DefaultState: boolean processMessage(android.os.Message)>
SINK|<java.net.HttpURLConnection: void connect()>
SINK|<android.app.Activity: void setFeatureDrawableUri(int,android.net.Uri)>
SINK|<com.android.browser.view.BookmarkExpandableView: void setColumnWidthFromLayout(int)>
SINK|<com.google.common.collect.ForwardingMapEntry: java.lang.Object setValue(java.lang.Object)>
SINK|<com.android.internal.view.IInputContextCallback$Stub$Proxy: void setSelectedText(java.lang.CharSequence,int)>
SINK|<android.net.INetworkStatsService$Stub$Proxy: void incrementOperationCount(int,int,int)>
SINK|<com.android.server.LocationManagerService: void setTestProviderEnabled(java.lang.String,boolean)>
SINK|<org.apache.http.client.utils.URLEncodedUtils: java.util.List parse(java.net.URI,java.lang.String)>
SINK|<java.security.cert.X509CRLSelector: void setIssuers(java.util.Collection)>
SINK|<com.android.emailcommon.service.IEmailServiceCallback$Stub$Proxy: void syncMailboxStatus(long,int,int)>
SINK|<android.app.FragmentManagerImpl: void putFragment(android.os.Bundle,java.lang.String,android.app.Fragment)>
SINK|<org.apache.http.entity.HttpEntityWrapper: void writeTo(java.io.OutputStream)>
SINK|<java.util.zip.ZipEntry: void setSize(long)>
SINK|<android.graphics.drawable.AnimatedRotateDrawable: void setAlpha(int)>
SINK|<com.android.internal.telephony.IntRangeManager: boolean enableRange(int,int,java.lang.String)>
SINK|<android.accounts.IAccountAuthenticator$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>
SINK|<android.app.ActionBar: void setHomeButtonEnabled(boolean)>
SINK|<com.android.server.wm.WindowManagerService: void dumpTokensLocked(java.io.PrintWriter,boolean)>
SINK|<org.apache.http.conn.params.ConnPerRouteBean: void setDefaultMaxPerRoute(int)>
SINK|<android.widget.ListPopupWindow: void setAnimationStyle(int)>
SINK|<android.speech.IRecognitionListener$Stub$Proxy: void onRmsChanged(float)>
SINK|<com.android.launcher2.Workspace$WallpaperOffsetInterpolator: void setFinalX(float)>
SINK|<libcore.net.http.HttpConnectionPool: void recycle(libcore.net.http.HttpConnection)>
SINK|<android.view.LayoutInflater: void setFilter(android.view.LayoutInflater$Filter)>
SINK|<java.nio.DatagramChannelImpl: int send(java.nio.ByteBuffer,java.net.SocketAddress)>
SINK|<com.android.server.pm.PackageManagerService$DumpState: void setDump(int)>
SINK|<com.android.server.AppWidgetServiceImpl: void registerForBroadcastsLocked(com.android.server.AppWidgetServiceImpl$Provider,int[])>
SINK|<android.graphics.drawable.LayerDrawable: void setAlpha(int)>
SINK|<android.os.Parcel: void writeSparseArray(android.util.SparseArray)>
SINK|<com.android.email.GroupMessagingListener: void addListener(com.android.email.MessagingListener)>
SINK|<android.view.View: void setSaveEnabled(boolean)>
SINK|<com.google.common.collect.TreeMultiset: boolean setCount(java.lang.Object,int,int)>
SINK|<com.android.deskclock.timer.TimerReceiver: void showExpiredAlarmNotification(android.content.Context,com.android.deskclock.timer.TimerObj)>
SINK|<android.media.IAudioService$Stub$Proxy: void setBluetoothA2dpOn(boolean)>
SINK|<java.io.BufferedWriter: void write(java.lang.String)>
SINK|<com.android.calendar.CalendarUtils: void setSharedPreference(android.content.SharedPreferences,java.lang.String,boolean)>
SINK|<android.net.wifi.p2p.WifiP2pManager: void setUpnpServiceResponseListener(android.net.wifi.p2p.WifiP2pManager$Channel,android.net.wifi.p2p.WifiP2pManager$UpnpServiceResponseListener)>
SINK|<android.accounts.IAccountAuthenticator$Stub$Proxy: void addAccount(android.accounts.IAccountAuthenticatorResponse,java.lang.String,java.lang.String,java.lang.String[],android.os.Bundle)>
SINK|<java.math.BigDecimal: java.math.BigDecimal setScale(int,int)>
SINK|<android.os.Bundle: void putCharSequence(java.lang.String,java.lang.CharSequence)>
SINK|<android.os.Handler: void dump(android.util.Printer,java.lang.String)>
SINK|<com.android.exchange.utility.CalendarUtilities: com.android.emailcommon.provider.EmailContent$Message createMessageForEntity(android.content.Context,android.content.Entity,int,java.lang.String,com.android.emailcommon.provider.Account,java.lang.String)>
SINK|<gov.nist.javax.sip.address.SipUri: void setParameter(java.lang.String,java.lang.String)>
SINK|<gov.nist.javax.sip.header.ims.PChargingFunctionAddresses: void setChargingCollectionFunctionAddress(java.lang.String)>
SINK|<android.net.wifi.IWifiManager$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>
SINK|<com.android.server.LocationManagerService$Receiver: boolean callProviderEnabledLocked(java.lang.String,boolean)>
SINK|<android.media.IAudioService$Stub$Proxy: void unregisterRemoteControlDisplay(android.media.IRemoteControlDisplay)>
SINK|<android.content.pm.IPackageManager$Stub$Proxy: void setComponentEnabledSetting(android.content.ComponentName,int,int,int)>
SINK|<android.location.Criteria: void setAccuracy(int)>
SINK|<com.android.providers.contacts.ContactsProvider2: boolean isWritableAccountWithDataSet(java.lang.String)>
SINK|<com.android.internal.telephony.AdnRecordCache: void updateAdnBySearch(int,com.android.internal.telephony.AdnRecord,com.android.internal.telephony.AdnRecord,java.lang.String,android.os.Message)>
SINK|<com.android.internal.telephony.RIL: void setFacilityLock(java.lang.String,boolean,java.lang.String,int,android.os.Message)>
SINK|<com.android.videoeditor.service.ApiService$8: void onProgress(int)>
SINK|<javax.xml.transform.stream.StreamSource: void setSystemId(java.lang.String)>
SINK|<com.android.gallery3d.filtershow.tools.SaveCopyTask: void saveBitmap(android.graphics.Bitmap,java.io.File,java.lang.Object)>
SINK|<android.view.IDisplayContentChangeListener$Stub$Proxy: void onWindowTransition(int,int,android.view.WindowInfo)>
SINK|<com.android.server.sip.SipHelper: javax.sip.ServerTransaction sendRinging(javax.sip.RequestEvent,java.lang.String)>
SINK|<com.android.internal.widget.multiwaveview.TargetDrawable$DrawableWithAlpha: void setColorFilter(android.graphics.ColorFilter)>
SINK|<android.widget.Switch: void setTrackResource(int)>
SINK|<android.preference.RingtonePreference: void setShowDefault(boolean)>
SINK|<com.android.inputmethod.compat.InputMethodManagerCompatWrapper: void setInputMethodAndSubtype(android.os.IBinder,java.lang.String,android.view.inputmethod.InputMethodSubtype)>
SINK|<android.text.style.ScaleXSpan: void updateDrawState(android.text.TextPaint)>
SINK|<android.net.wifi.WifiManager: boolean enableNetwork(int,boolean)>
SINK|<java.io.DataOutputStream: void writeChar(int)>
SINK|<com.android.contacts.model.RawContactDelta$ValuesDelta: void put(java.lang.String,int)>
SINK|<gov.nist.javax.sip.address.TelephoneNumber: void setIsdnSubaddress(java.lang.String)>
SINK|<android.media.IMediaScannerListener$Stub$Proxy: void scanCompleted(java.lang.String,android.net.Uri)>
SINK|<android.view.GLES20DisplayList: void setLeftTop(int,int)>
SINK|<com.android.providers.calendar.MetaData: void writeLocked(java.lang.String,long,long)>
SINK|<gov.nist.javax.sip.header.ParametersHeader: void setParameter(java.lang.String,int)>
SINK|<com.android.phone.CallNotifier: void onQueryComplete(int,java.lang.Object,com.android.internal.telephony.CallerInfo)>
SINK|<android.widget.ExpandableListView: void setSelectedGroup(int)>
SINK|<com.android.contacts.list.ContactEntryListFragment: void loadDirectoryPartition(int,com.android.contacts.list.DirectoryPartition)>
SINK|<com.android.contacts.model.account.AccountType: com.android.contacts.model.dataitem.DataKind addKind(com.android.contacts.model.dataitem.DataKind)>
SINK|<android.inputmethodservice.ExtractEditText: void setExtractedText(android.view.inputmethod.ExtractedText)>
SINK|<android.preference.PreferenceManager: void setSharedPreferencesMode(int)>
SINK|<java.util.Collections$CheckedListIterator: void set(java.lang.Object)>
SINK|<android.widget.VideoView: void setMediaController(android.widget.MediaController)>
SINK|<android.media.audiofx.EnvironmentalReverb: void setRoomHFLevel(short)>
SINK|<java.lang.AbstractStringBuilder: void setLength(int)>
SINK|<com.android.internal.telephony.UiccCard: void update(android.content.Context,com.android.internal.telephony.CommandsInterface,com.android.internal.telephony.IccCardStatus)>
SINK|<android.widget.Toast: void setText(int)>
SINK|<android.app.ContextImpl$ApplicationContentResolver: void setMasterSyncAutomatically(boolean)>
SINK|<android.view.accessibility.IAccessibilityManager$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>
SINK|<android.speech.tts.ITextToSpeechService$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>
SINK|<android.app.admin.IDevicePolicyManager$Stub$Proxy: void setPasswordQuality(android.content.ComponentName,int,int)>
SINK|<com.android.emailcommon.provider.Policy: void setAttachmentFlagsForNewPolicy(android.content.Context,com.android.emailcommon.provider.Account,com.android.emailcommon.provider.Policy)>
SINK|<org.apache.http.impl.conn.AbstractPoolEntry: void setState(java.lang.Object)>
SINK|<android.content.ContentService: void setMasterSyncAutomatically(boolean)>
SINK|<android.view.View: void setMeasuredDimension(int,int)>
SINK|<android.location.LocationManager: boolean sendExtraCommand(java.lang.String,java.lang.String,android.os.Bundle)>
SINK|<com.android.providers.contacts.DataRowHandlerForPhoneNumber: long insert(android.database.sqlite.SQLiteDatabase,com.android.providers.contacts.TransactionContext,long,android.content.ContentValues)>
SINK|<android.os.Bundle: void setClassLoader(java.lang.ClassLoader)>
SINK|<com.android.internal.telephony.CallerInfoAsyncQuery$CallerInfoAsyncQueryHandler: void onQueryComplete(int,java.lang.Object,android.database.Cursor)>
SINK|<android.os.RegistrantList: void notifyResult(java.lang.Object)>
SINK|<com.android.contacts.model.dataitem.StructuredNameDataItem: void setPhoneticMiddleName(java.lang.String)>
SINK|<com.android.browser.Controller: com.android.browser.Tab openTab(java.lang.String,boolean,boolean,boolean,com.android.browser.Tab)>
SINK|<com.android.internal.telephony.cdma.CDMAPhone: void restoreSavedNetworkSelection(android.os.Message)>
SINK|<com.android.videoeditor.service.ApiService$ServiceMediaProcessingProgressListener: void onProgress(java.lang.Object,int,int)>
SINK|<java.util.EnumMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
SINK|<android.view.ViewRootImpl$W: void dispatchScreenState(boolean)>
SINK|<com.android.mms.model.SlideshowModel: java.util.HashMap openPartFiles(android.content.ContentResolver)>
SINK|<com.coremedia.iso.IsoTypeWriter: void writeUInt16BE(java.nio.ByteBuffer,int)>
SINK|<android.content.Intent: android.content.Intent putStringArrayListExtra(java.lang.String,java.util.ArrayList)>
SINK|<com.android.browser.homepages.Template$ListEntity: void write(java.io.OutputStream,com.android.browser.homepages.Template$EntityData)>
SINK|<android.app.SearchManager: void setOnDismissListener(android.app.SearchManager$OnDismissListener)>
SINK|<javax.xml.transform.stream.StreamResult: void setSystemId(java.io.File)>
SINK|<com.android.emailcommon.service.IEmailService$Stub$Proxy: void sendMail(long)>
SINK|<android.app.ActivityManagerProxy: android.content.ComponentName startService(android.app.IApplicationThread,android.content.Intent,java.lang.String,int)>
SINK|<org.xmlpull.v1.sax2.Driver: void setProperty(java.lang.String,java.lang.Object)>
SINK|<de.ecspride.IntentSink1: void setResult(int,android.content.Intent)>
SINK|<gov.nist.javax.sip.header.SIPHeaderList: gov.nist.javax.sip.header.SIPHeader set(int,gov.nist.javax.sip.header.SIPHeader)>
SINK|<android.app.IStopUserCallback$Stub$Proxy: void userStopAborted(int)>
SINK|<android.support.v4.view.ViewCompat$ICSViewCompatImpl: void setAccessibilityDelegate(android.view.View,android.support.v4.view.AccessibilityDelegateCompat)>
SINK|<java.util.logging.LogRecord: void setLevel(java.util.logging.Level)>
SINK|<com.android.server.InputMethodManagerService$InputMethodFileManager: void <init>
SINK|<android.app.Service: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
SINK|<android.content.pm.IPackageManager$Stub$Proxy: int checkUidPermission(java.lang.String,int)>
SINK|<java.io.ObjectOutputStream: void writeUTF(java.lang.String)>
SINK|<android.webkit.WebSettings: void setDomStorageEnabled(boolean)>
SINK|<android.graphics.Color: int parseColor(java.lang.String)>
SINK|<com.android.internal.telephony.test.ModelInterpreter: void sendUnsolicited(java.lang.String)>
SINK|<gov.nist.javax.sip.header.ParametersHeader: void setMultiParameter(gov.nist.core.NameValue)>
SINK|<android.location.ILocationListener$Stub$Proxy: void onProviderEnabled(java.lang.String)>
SINK|<com.android.systemui.statusbar.CommandQueue: void setSystemUiVisibility(int,int)>
SINK|<android.media.AudioService: void setBluetoothScoOn(boolean)>
SINK|<com.android.internal.widget.LockPatternUtils: void setLockScreenDisabled(boolean)>
SINK|<android.content.ContentProviderOperation$Builder: android.content.ContentProviderOperation$Builder withSelectionBackReference(int,int)>
SINK|<com.android.email.activity.MessageListItem: void setTimestamp(long)>
SINK|<com.android.gallery3d.util.ReverseGeocoder: android.location.Address lookupAddress(double,double,boolean)>
SINK|<android.filterfw.core.ShaderProgram: void setClearColor(float,float,float)>
SINK|<android.bluetooth.BluetoothAdapter: boolean setScanMode(int)>
SINK|<android.graphics.drawable.DrawableContainer: void setDither(boolean)>
SINK|<com.android.contacts.preference.ContactsPreferences: void setSortOrder(int)>
SINK|<org.apache.harmony.xml.dom.ElementImpl: void setAttribute(java.lang.String,java.lang.String)>
SINK|<org.apache.http.impl.cookie.NetscapeDraftHeaderParser: org.apache.http.HeaderElement parseHeader(org.apache.http.util.CharArrayBuffer,org.apache.http.message.ParserCursor)>
SINK|<java.net.Socks4Message: void setPort(int)>
SINK|<com.google.common.io.ByteStreams$ByteArrayDataOutputStream: void writeShort(int)>
SINK|<android.renderscript.Script: void setTimeZone(java.lang.String)>
SINK|<com.android.org.bouncycastle.asn1.ASN1OutputStream: void write(byte[])>
SINK|<com.android.server.WallpaperManagerService: void setDimensionHints(int,int)>
SINK|<android.media.AudioManager: void setWiredDeviceConnectionState(int,int,java.lang.String)>
SINK|<android.accounts.AccountManagerService$GetAccountsByTypeAndFeatureSession: void sendResult()>
SINK|<android.media.audiofx.EnvironmentalReverb: void setDecayHFRatio(short)>
SINK|<com.android.calendar.Utils: void setSharedPreference(android.content.Context,java.lang.String,int)>
SINK|<android.net.INetworkManagementEventObserver$Stub$Proxy: void limitReached(java.lang.String,java.lang.String)>
SINK|<android.os.INetworkManagementService$Stub$Proxy: void setUidNetworkRules(int,boolean)>
SINK|<com.android.internal.view.IInputMethodCallback$Stub$Proxy: void finishedEvent(int,boolean)>
SINK|<android.support.v13.app.FragmentCompatICSMR1: void setUserVisibleHint(android.app.Fragment,boolean)>
SINK|<android.net.wifi.WifiManager: void disable(int,android.net.wifi.WifiManager$ActionListener)>
SINK|<com.google.android.picasasync.UploadsManager$UploadTask: void performSync(android.content.SyncResult)>
SINK|<android.app.IUiModeManager$Stub$Proxy: void disableCarMode(int)>
SINK|<org.apache.harmony.xnet.provider.jsse.ConnectionStateTLS: byte[] decrypt(byte,byte[],int,int)>
SINK|<android.preference.DialogPreference: void setPositiveButtonText(java.lang.CharSequence)>
SINK|<com.android.gallery3d.data.MtpContext: boolean copyFile(java.lang.String,android.mtp.MtpObjectInfo)>
SINK|<android.location.Location: void setBearing(float)>
SINK|<com.android.internal.telephony.DefaultPhoneNotifier: void notifyDataConnectionFailed(com.android.internal.telephony.Phone,java.lang.String,java.lang.String)>
SINK|<android.graphics.drawable.ScaleDrawable: void setColorFilter(android.graphics.ColorFilter)>
SINK|<com.android.internal.policy.impl.keyguard.KeyguardCircleFramedDrawable: void setAlpha(int)>
SINK|<java.util.jar.JarVerifier: void addMetaEntry(java.lang.String,byte[])>
SINK|<android.accounts.AccountManagerService: java.util.HashMap readAuthTokensForAccountFromDatabaseLocked(android.database.sqlite.SQLiteDatabase,android.accounts.Account)>
SINK|<java.text.DecimalFormat: void setMinimumFractionDigits(int)>
SINK|<android.webkit.WebViewCore: void setMockDeviceOrientation(boolean,double,boolean,double,boolean,double)>
SINK|<android.bluetooth.IBluetoothHeadset$Stub$Proxy: void clccResponse(int,int,int,int,boolean,java.lang.String,int)>
SINK|<android.os.SystemProperties: void set(java.lang.String,java.lang.String)>
SINK|<org.apache.http.client.params.HttpClientParams: void setAuthenticating(org.apache.http.params.HttpParams,boolean)>
SINK|<android.widget.GridLayout: void setRowOrderPreserved(boolean)>
SINK|<java.net.PlainDatagramSocketImpl: void send(java.net.DatagramPacket)>
SINK|<com.google.android.picasasync.R: void init(java.lang.Class)>
SINK|<gov.nist.javax.sip.DialogFilter: void processResponse(gov.nist.javax.sip.message.SIPResponse,gov.nist.javax.sip.stack.MessageChannel,gov.nist.javax.sip.stack.SIPDialog)>
SINK|<android.os.Debug: void startMethodTracing(java.lang.String,int)>
SINK|<com.android.server.BatteryService: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
SINK|<android.net.DhcpStateMachine$WaitBeforeStartState: boolean processMessage(android.os.Message)>
SINK|<java.time.format.DateTimeFormatter: java.time.temporal.TemporalAccessor parseResolved0(java.lang.CharSequence,java.text.ParsePosition)>
SINK|<android.renderscript.Script: void setVar(int,android.renderscript.BaseObj)>
SINK|<android.widget.TextView: void setMinEms(int)>
SINK|<com.android.internal.telephony.IccSmsInterfaceManagerProxy: void setPremiumSmsPermission(java.lang.String,int)>
SINK|<android.app.WallpaperManager$FastBitmapDrawable: void setColorFilter(android.graphics.ColorFilter)>
SINK|<android.app.ActivityManagerProxy: void forceStopPackage(java.lang.String,int)>
SINK|<android.widget.ViewAnimator: void setDisplayedChild(int)>
SINK|<android.net.IConnectivityManager$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>
SINK|<android.net.nsd.NsdServiceInfo: void writeToParcel(android.os.Parcel,int)>
SINK|<com.android.gallery3d.data.ImageCacheService: void putImageData(com.android.gallery3d.data.Path,int,byte[])>
SINK|<com.android.soundrecorder.RemainingTimeCalculator: void setFileSizeLimit(java.io.File,long)>
SINK|<com.android.internal.telephony.IccSmsInterfaceManagerProxy: boolean enableCellBroadcastRange(int,int)>
SINK|<com.android.server.WallpaperManagerService: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
SINK|<com.android.contacts.util.ExpirableCache: void put(java.lang.Object,java.lang.Object)>
SINK|<com.android.camera.RotateDialogController: void setOrientation(int,boolean)>
SINK|<org.ccil.cowan.tagsoup.AttributesImpl: void setLocalName(int,java.lang.String)>
SINK|<com.android.launcher2.WallpaperChooserDialogFragment$WallpaperDrawable: void setAlpha(int)>
SINK|<com.android.camera.PanoProgressBar: void setDoneColor(int)>
SINK|<com.android.server.NsdService$NativeCallbackReceiver: boolean onEvent(int,java.lang.String,java.lang.String[])>
SINK|<javax.xml.validation.ValidatorHandler: void setProperty(java.lang.String,java.lang.Object)>
SINK|<android.graphics.Matrix: boolean setRectToRect(android.graphics.RectF,android.graphics.RectF,android.graphics.Matrix$ScaleToFit)>
SINK|<com.android.internal.telephony.sip.SipPhoneBase: void notifyServiceStateChanged(android.telephony.ServiceState)>
SINK|<android.hardware.Camera$Parameters: void setAntibanding(java.lang.String)>
SINK|<com.android.internal.util.StateMachine: void setLogRecSize(int)>
SINK|<com.android.browser.AddBookmarkPage: void setAccount(java.lang.String,java.lang.String)>
SINK|<java.time.OffsetTime: java.lang.Object writeReplace()>
SINK|<android.widget.TabWidget: void setRightStripDrawable(int)>
SINK|<android.content.ContentProviderProxy: android.content.res.AssetFileDescriptor openTypedAssetFile(android.net.Uri,java.lang.String,android.os.Bundle)>
SINK|<com.android.server.location.MockProvider: boolean sendExtraCommand(java.lang.String,android.os.Bundle)>
SINK|<android.hardware.input.InputManager: void setPointerSpeed(android.content.Context,int)>
SINK|<android.widget.GridView: void setGravity(int)>
SINK|<android.net.wifi.IWifiManager$Stub$Proxy: void setFrequencyBand(int,boolean)>
SINK|<android.widget.RemoteViews: void setTextViewTextSize(int,int,float)>
SINK|<com.android.email.service.AttachmentDownloadService$ServiceCallback: void sendMessageStatus(long,java.lang.String,int,int)>
SINK|<com.android.exchange.EasSyncService: void setConnectionParameters(com.android.emailcommon.provider.HostAuth)>
SINK|<com.google.android.apps.lightcycle.panorama.LightCycleNative: void setProgressCallback(int,com.google.android.apps.lightcycle.panorama.LightCycleView$ProgressCallback)>
SINK|<com.android.providers.telephony.MmsProvider: int update(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[])>
SINK|<com.android.org.bouncycastle.asn1.ASN1OutputStream: void writeEncoded(int,int,byte[])>
SINK|<com.android.internal.widget.LockSettingsService: void setBoolean(java.lang.String,boolean,int)>
SINK|<com.android.browser.BrowserBackupAgent: void addBookmark(com.android.browser.BrowserBackupAgent$Bookmark)>
SINK|<android.widget.AutoCompleteTextView: void onCommitCompletion(android.view.inputmethod.CompletionInfo)>
SINK|<java.util.concurrent.ThreadPoolExecutor: void setThreadFactory(java.util.concurrent.ThreadFactory)>
SINK|<com.android.server.am.IntentBindRecord: void dumpInService(java.io.PrintWriter,java.lang.String)>
SINK|<java.util.zip.ZipOutputStream: void setComment(java.lang.String)>
SINK|<com.android.contacts.interactions.PhoneNumberInteraction$PhoneDisambiguationDialogFragment: void show(android.app.FragmentManager,java.util.ArrayList,com.android.contacts.interactions.PhoneNumberInteraction$InteractionType,java.lang.String)>
SINK|<com.android.commands.am.Am$MyActivityController: boolean activityStarting(android.content.Intent,java.lang.String)>
SINK|<android.widget.TextView: void setLinkTextColor(android.content.res.ColorStateList)>
SINK|<com.android.deskclock.widget.multiwaveview.GlowPadView: void setEnableTarget(int,boolean)>
SINK|<com.android.browser.LogTag: void logPageFinishedLoading(java.lang.String,long)>
SINK|<com.android.camera.ui.InLineSettingSwitch: void setEnabled(boolean)>
SINK|<android.media.AudioRecord: void setRecordPositionUpdateListener(android.media.AudioRecord$OnRecordPositionUpdateListener,android.os.Handler)>
SINK|<android.view.GLES20DisplayList: void setTranslationY(float)>
SINK|<android.view.IWindowManager$Stub$Proxy: void setStrictModeVisualIndicatorPreference(java.lang.String)>
SINK|<android.provider.SyncStateContract$Helpers: void set(android.content.ContentProviderClient,android.net.Uri,android.accounts.Account,byte[])>
SINK|<java.io.Reader: int read(java.nio.CharBuffer)>
SINK|<android.graphics.drawable.Drawable: void setColorFilter(int,android.graphics.PorterDuff$Mode)>
SINK|<java.text.NumberFormat: java.lang.Number parse(java.lang.String)>
SINK|<com.android.internal.telephony.sip.SipPhoneBase: void notifyDataConnection(java.lang.String,java.lang.String)>
SINK|<android.widget.TextView: void setShadowLayer(float,float,float,int)>
SINK|<android.media.IAudioService$Stub$Proxy: int abandonAudioFocus(android.media.IAudioFocusDispatcher,java.lang.String)>
SINK|<android.view.View$6: void setValue(android.view.View,float)>
SINK|<com.android.internal.telephony.RIL: void invokeOemRilRequestStrings(java.lang.String[],android.os.Message)>
SINK|<org.apache.harmony.security.asn1.ASN1Boolean: void setEncodingContent(org.apache.harmony.security.asn1.BerOutputStream)>
SINK|<com.android.org.bouncycastle.asn1.ASN1OutputStream: void write(int)>
SINK|<com.android.server.usb.UsbDeviceManager$UsbHandler: void sendMessage(int,java.lang.Object)>
SINK|<java.util.Calendar: void set(int,int)>
SINK|<android.media.AudioTrack: int setPositionNotificationPeriod(int)>
SINK|<android.animation.ObjectAnimator: void setObjectValues(java.lang.Object[])>
SINK|<android.net.sip.ISipSessionListener$Stub$Proxy: void onRegistering(android.net.sip.ISipSession)>
SINK|<com.android.internal.view.InputConnectionWrapper: boolean setComposingRegion(int,int)>
SINK|<com.android.camera.ui.EffectSettingPopup: void setVisibility(int)>
SINK|<com.android.internal.telephony.gsm.GSMPhone: void setSmscAddress(java.lang.String,android.os.Message)>
SINK|<com.android.internal.telephony.test.ModelInterpreter: void setNextDialFailImmediately(boolean)>
SINK|<java.nio.ReadWriteHeapByteBuffer: java.nio.ByteBuffer putDouble(double)>
SINK|<com.android.launcher2.LauncherAppWidgetHostView: void updateAppWidget(android.widget.RemoteViews)>
SINK|<com.android.internal.widget.LockPatternUtils: void setLockPatternEnabled(boolean)>
SINK|<com.android.exchange.adapter.Serializer: com.android.exchange.adapter.Serializer opaque(java.io.InputStream,int)>
SINK|<com.android.inputmethodcommon.InputMethodSettingsFragment: void setInputMethodSettingsCategoryTitle(int)>
SINK|<android.widget.AutoCompleteTextView: void setValidator(android.widget.AutoCompleteTextView$Validator)>
SINK|<android.widget.GridView: void setNumColumns(int)>
SINK|<com.android.server.power.DisplayPowerState$2: void setValue(com.android.server.power.DisplayPowerState,int)>
SINK|<android.widget.DatePicker: void setEnabled(boolean)>
SINK|<com.google.android.mms.pdu.SendReq: void setBcc(com.google.android.mms.pdu.EncodedStringValue[])>
SINK|<com.android.browser.Controller: void setActiveTab(com.android.browser.Tab)>
SINK|<android.net.sip.SimpleSessionDescription$Media: void setBandwidth(java.lang.String,int)>
SINK|<java.security.cert.PKIXRevocationChecker: void setOcspExtensions(java.util.List)>
SINK|<com.android.email.provider.ContentCache$CounterMap: void add(java.lang.Object)>
SINK|<java.util.concurrent.CountedCompleter: void setRawResult(java.lang.Object)>
SINK|<com.android.internal.widget.ILockSettings$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>
SINK|<com.android.server.IntentResolver: boolean dumpMap(java.io.PrintWriter,java.lang.String,java.lang.String,java.lang.String,java.util.Map,java.lang.String,boolean)>
SINK|<java.io.OutputStream: void write(byte[],int,int)>
SINK|<android.filterfw.core.ShaderProgram: void setDrawMode(int)>
SINK|<java.io.BufferedOutputStream: void write(byte[],int,int)>
SINK|<com.android.server.EventLogTags: void writePowerSleepRequested(int)>
SINK|<android.view.IWindowSession$Stub$Proxy: void wallpaperOffsetsComplete(android.os.IBinder)>
SINK|<com.android.systemui.statusbar.phone.NavigationBarView: void setSlippery(boolean)>
SINK|<gov.nist.javax.sip.address.SipUri: void setTTLParam(int)>
SINK|<com.android.server.wm.WindowManagerService: void createDisplayContentLocked(android.view.Display)>
SINK|<android.widget.TextView: void setInputExtras(int)>
SINK|<com.android.mms.data.Conversation: void startDeleteAll(com.android.mms.data.Conversation$ConversationQueryHandler,int,boolean)>
SINK|<java.net.PlainSocketImpl: void bind(java.net.InetAddress,int)>
SINK|<android.location.IGpsStatusProvider$Stub$Proxy: void addGpsStatusListener(android.location.IGpsStatusListener)>
SINK|<com.android.server.pm.PackageManagerService$AsecInstallArgs: boolean matchContainer(java.lang.String)>
SINK|<com.android.internal.statusbar.IStatusBar$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>
SINK|<android.nfc.NfcAdapter: void setP2pModes(int,int)>
SINK|<com.android.server.AppWidgetService: int[] startListeningAsUser(com.android.internal.appwidget.IAppWidgetHost,java.lang.String,int,java.util.List,int)>
SINK|<android.app.AlertDialog: void setButton(int,java.lang.CharSequence,android.os.Message)>
SINK|<com.android.contacts.model.RawContactModifier: void migrateEvent(com.android.contacts.model.RawContactDelta,com.android.contacts.model.RawContactDelta,com.android.contacts.model.dataitem.DataKind,java.lang.Integer)>
SINK|<android.net.wifi.IWifiManager$Stub$Proxy: void addToBlacklist(java.lang.String)>
SINK|<android.preference.Preference: void setPersistent(boolean)>
SINK|<javax.crypto.CipherOutputStream: void write(int)>
SINK|<com.android.browser.NavigationBarPhone: void setDisplayTitle(java.lang.String)>
SINK|<com.android.camera.ui.TimeIntervalPopup: void setVisibility(int)>
SINK|<java.util.logging.ErrorManager: void error(java.lang.String,java.lang.Exception,int)>
SINK|<android.preference.DialogPreference$SavedState: void writeToParcel(android.os.Parcel,int)>
SINK|<com.android.videoeditor.widgets.MediaLinearLayout: boolean setTransitionThumbnails(java.lang.String,android.graphics.Bitmap[])>
SINK|<android.app.ActivityManagerProxy: void activitySlept(android.os.IBinder)>
SINK|<com.android.email.Preferences: void setHasShownRequireManualSync(android.content.Context,com.android.emailcommon.provider.Account,boolean)>
SINK|<com.android.mms.dom.DocumentImpl: void setXmlStandalone(boolean)>
SINK|<android.widget.Gallery: boolean performAccessibilityAction(int,android.os.Bundle)>
SINK|<android.accounts.AccountManager: void invalidateAuthToken(java.lang.String,java.lang.String)>
SINK|<android.webkit.WebViewClassic: void setScrollBarStyle(int)>
SINK|<org.apache.http.impl.io.ContentLengthOutputStream: void write(byte[],int,int)>
SINK|<android.content.BroadcastReceiver: void setOrderedHint(boolean)>
SINK|<com.android.email.service.PolicyService$1: void setAccountPolicy(long,com.android.emailcommon.provider.Policy,java.lang.String)>
SINK|<com.android.internal.telephony.PhoneProxy: void startDtmf(char)>
SINK|<java.text.DecimalFormatSymbols: void setNaN(java.lang.String)>
SINK|<com.android.nfc.NfcDispatcher: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
SINK|<android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoIcsImpl: void setClassName(java.lang.Object,java.lang.CharSequence)>
SINK|<android.text.style.ClickableSpan: void updateDrawState(android.text.TextPaint)>
SINK|<com.android.internal.telephony.RIL: void changeBarringPassword(java.lang.String,java.lang.String,java.lang.String,android.os.Message)>
SINK|<java.net.Socket: void setSendBufferSize(int)>
SINK|<android.app.LoadedApk$ReceiverDispatcher$InnerReceiver: void performReceive(android.content.Intent,int,java.lang.String,android.os.Bundle,boolean,boolean,int)>
SINK|<java.util.zip.ZipEntry: void setExtra(byte[])>
SINK|<libcore.net.http.HttpsURLConnectionImpl: void setUseCaches(boolean)>
SINK|<android.view.View$5: void setValue(android.view.View,float)>
SINK|<java.util.concurrent.ForkJoinTask: int setCompletion(int)>
SINK|<android.app.ActivityThread$ApplicationThread: void dispatchPackageBroadcast(int,java.lang.String[])>
SINK|<com.android.server.wm.WindowStateAnimator: void setTransparentRegionHint(android.graphics.Region)>
SINK|<android.filterfw.core.StopWatchMap: void start(java.lang.String)>
SINK|<android.telephony.SmsManager: void sendMultipartTextMessage(java.lang.String,java.lang.String,java.util.ArrayList,java.util.ArrayList,java.util.ArrayList)>
SINK|<com.android.contacts.model.RawContactModifier: com.android.contacts.model.RawContactDelta$ValuesDelta insertChild(com.android.contacts.model.RawContactDelta,com.android.contacts.model.dataitem.DataKind,com.android.contacts.model.account.AccountType$EditType)>
SINK|<org.ccil.cowan.tagsoup.PYXWriter: void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)>
SINK|<android.view.InputDevice: void writeToParcel(android.os.Parcel,int)>
SINK|<com.android.server.AttributeCache: void updateConfiguration(android.content.res.Configuration)>
SINK|<android.app.PendingIntent: void send(android.content.Context,int,android.content.Intent)>
SINK|<com.android.internal.util.StateMachine$SmHandler$HaltingState: boolean processMessage(android.os.Message)>
SINK|<android.net.wifi.WifiApConfigStore$DefaultState: boolean processMessage(android.os.Message)>
SINK|<gov.nist.javax.sip.header.ims.SecurityAgree: void setSPIServer(int)>
SINK|<android.view.animation.AnimationSet: void setStartTime(long)>
SINK|<android.accounts.AccountManagerService: void writeAuthTokenIntoCacheLocked(android.accounts.AccountManagerService$UserAccounts,android.database.sqlite.SQLiteDatabase,android.accounts.Account,java.lang.String,java.lang.String)>
SINK|<com.android.contacts.model.RawContactDelta$ValuesDelta: void put(java.lang.String,byte[])>
SINK|<com.android.internal.util.AsyncChannel: void sendMessage(android.os.Message)>
SINK|<com.android.gallery3d.filtershow.imageshow.ImageSlave: void setImagePreset(com.android.gallery3d.filtershow.presets.ImagePreset,boolean)>
SINK|<android.app.ActivityManagerProxy: boolean isImmersive(android.os.IBinder)>
SINK|<android.widget.PopupWindow: void setContentView(android.view.View)>
SINK|<com.android.internal.statusbar.IStatusBarService$Stub$Proxy: void onNotificationError(java.lang.String,java.lang.String,int,int,int,java.lang.String)>
SINK|<org.apache.harmony.xnet.provider.jsse.OpenSSLServerSocketImpl: void setUseClientMode(boolean)>
SINK|<android.view.Window: void setType(int)>
SINK|<gov.nist.javax.sip.address.SipUri: void setUserPassword(java.lang.String)>
SINK|<com.android.server.BackupManagerService: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>
SINK|<android.widget.SimpleCursorTreeAdapter: void setViewImage(android.widget.ImageView,java.lang.String)>
SINK|<android.app.ApplicationErrorReport: void writeToParcel(android.os.Parcel,int)>
SINK|<org.ccil.cowan.tagsoup.AttributesImpl: void setType(int,java.lang.String)>
SINK|<android.widget.TextView: void setTextLocale(java.util.Locale)>
SINK|<android.view.View: void setScrollY(int)>
SINK|<com.android.inputmethod.latin.suggestions.MoreSuggestionsView: void updateKeyboardGeometry(int)>
SINK|<android.graphics.drawable.GradientDrawable: void setStroke(int,int,float,float)>
SINK|<android.app.SearchManager: void triggerSearch(java.lang.String,android.content.ComponentName,android.os.Bundle)>
SINK|<android.app.SearchManager: void setOnCancelListener(android.app.SearchManager$OnCancelListener)>
SINK|<com.android.server.AppWidgetServiceImpl: boolean updateProvidersForPackageLocked(java.lang.String,java.util.Set)>
SINK|<org.ccil.cowan.tagsoup.HTMLScanner: void scan(java.io.Reader,org.ccil.cowan.tagsoup.ScanHandler)>
SINK|<com.android.gallery3d.ui.GLView: void setVisibility(int)>
SINK|<android.app.WallpaperManager$FastBitmapDrawable: void setDither(boolean)>
SINK|<com.android.providers.media.MtpService$3: void sendObjectRemoved(int)>
SINK|<org.ccil.cowan.tagsoup.Parser: void setProperty(java.lang.String,java.lang.Object)>
SINK|<java.util.concurrent.atomic.DoubleAccumulator: java.lang.Object writeReplace()>
SINK|<com.android.server.am.ActivityManagerService: void dumpGraphicsHardwareUsage(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
SINK|<android.webkit.CallbackProxy: void onReceivedHttpAuthRequest(android.webkit.HttpAuthHandler,java.lang.String,java.lang.String)>
SINK|<com.android.videoeditor.service.ApiService: void createVideoEditor(android.content.Context,java.lang.String,java.lang.String,java.lang.String[],java.lang.String[],java.lang.String)>
SINK|<android.media.IAudioFocusDispatcher$Stub$Proxy: void dispatchAudioFocusChange(int,java.lang.String)>
SINK|<org.apache.harmony.security.asn1.ASN1BitString: void setEncodingContent(org.apache.harmony.security.asn1.BerOutputStream)>
SINK|<android.app.ExpandableListActivity: void setSelectedGroup(int)>
SINK|<com.android.gallery3d.filtershow.imageshow.ImageGeometry: void setLocalRotation(float)>
SINK|<android.content.pm.PathPermission: void writeToParcel(android.os.Parcel,int)>
SINK|<org.apache.james.mime4j.field.DelegatingFieldParser: void setFieldParser(java.lang.String,org.apache.james.mime4j.field.FieldParser)>
SINK|<java.io.File: boolean setReadable(boolean,boolean)>
SINK|<android.view.GLES20DisplayList: void setRotationX(float)>
SINK|<android.view.IWindow$Stub$Proxy: void dispatchSystemUiVisibilityChanged(int,int,int,int)>
SINK|<com.android.internal.telephony.CallManager: com.android.internal.telephony.Connection dial(com.android.internal.telephony.Phone,java.lang.String)>
SINK|<com.android.server.TelephonyRegistry: void notifyCellLocation(android.os.Bundle)>
SINK|<org.xmlpull.v1.sax2.Driver: void setErrorHandler(org.xml.sax.ErrorHandler)>
SINK|<com.android.videoeditor.VideoEditorBaseActivity$ServiceListener: void onMediaItemBoundariesSet(java.lang.String,java.lang.String,long,long,java.lang.Exception)>
SINK|<com.android.exchange.utility.SimpleIcsWriter: void writeTag(java.lang.String,java.lang.String)>
SINK|<java.net.URLConnection: void setDoInput(boolean)>
SINK|<android.graphics.Path: void setLastPoint(float,float)>
SINK|<android.test.ActivityInstrumentationTestCase2: void setActivityInitialTouchMode(boolean)>
SINK|<com.android.server.UiModeManagerService: void disableCarMode(int)>
SINK|<android.widget.AbsListView: void setItemChecked(int,boolean)>
SINK|<java.util.concurrent.atomic.DoubleAdder: java.lang.Object writeReplace()>
SINK|<android.app.admin.DevicePolicyManager: void setActiveAdmin(android.content.ComponentName,boolean)>
SINK|<com.android.bluetooth.btservice.AdapterService: boolean setName(java.lang.String)>
SINK|<com.android.internal.telephony.UiccCardApplication: void supplyPuk(java.lang.String,java.lang.String,android.os.Message)>
SINK|<com.android.internal.widget.ILockSettings$Stub$Proxy: void setLockPattern(byte[],int)>
SINK|<com.android.contacts.list.DefaultContactListAdapter: void bindView(android.view.View,int,android.database.Cursor,int)>
SINK|<android.app.Application: boolean bindService(android.content.Intent,android.content.ServiceConnection,int)>
SINK|<java.io.FileOutputStream: void write(byte[])>
SINK|<com.android.mms.ui.VideoAttachmentView: void setImage(java.lang.String,android.graphics.Bitmap)>
SINK|<android.widget.TextView: void setPrivateImeOptions(java.lang.String)>
SINK|<android.widget.AutoCompleteTextView: void setDropDownWidth(int)>
SINK|<org.apache.http.params.HttpProtocolParams: void setUserAgent(org.apache.http.params.HttpParams,java.lang.String)>
SINK|<android.widget.LinearLayout: void setOrientation(int)>
SINK|<android.security.KeyChain: void choosePrivateKeyAlias(android.app.Activity,android.security.KeyChainAliasCallback,java.lang.String[],java.security.Principal[],java.lang.String,int,java.lang.String)>
SINK|<org.xml.sax.helpers.AttributesImpl: void setType(int,java.lang.String)>
SINK|<libcore.io.ForwardingOs: void setegid(int)>
SINK|<javax.security.auth.SubjectDomainCombiner: void printInputDomains(java.security.ProtectionDomain[],java.security.ProtectionDomain[])>
SINK|<com.android.commands.am.Am$MyActivityController: boolean appCrashed(java.lang.String,int,java.lang.String,java.lang.String,long,java.lang.String)>
SINK|<android.app.IInstrumentationWatcher$Stub$Proxy: void instrumentationStatus(android.content.ComponentName,int,android.os.Bundle)>
SINK|<com.android.server.NetworkManagementService: void setIpForwardingEnabled(boolean)>
SINK|<com.google.android.mms.pdu.RetrieveConf: void setRetrieveStatus(int)>
SINK|<android.view.View$AttachInfo$InvalidateInfo: void setNextPoolable(java.lang.Object)>
SINK|<android.net.wifi.WifiStateMachine$SoftApStoppingState: boolean processMessage(android.os.Message)>
SINK|<com.android.server.connectivity.Tethering$TetherMasterSM$ErrorState: void notify(int)>
SINK|<android.database.sqlite.SQLiteConnection: long executeForLong(java.lang.String,java.lang.Object[],android.os.CancellationSignal)>
SINK|<android.app.ActivityManagerProxy: int checkGrantUriPermission(int,java.lang.String,android.net.Uri,int)>
SINK|<com.android.server.sip.SipSessionGroup$SipSessionImpl: void startKeepAliveProcess(int,com.android.server.sip.SipSessionGroup$KeepAliveProcessCallback)>
SINK|<com.android.server.AppWidgetService: boolean hasBindAppWidgetPermission(java.lang.String)>
SINK|<com.android.internal.app.ActionBarImpl: void setIcon(android.graphics.drawable.Drawable)>
SINK|<android.webkit.WebView: void addJavascriptInterface(java.lang.Object,java.lang.String)>
SINK|<android.app.INotificationManager$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>
SINK|<android.view.textservice.TextServicesManager: void setSpellCheckerEnabled(boolean)>
SINK|<android.preference.Preference: void setDefaultValue(java.lang.Object)>
SINK|<android.net.wifi.WifiStateMachine$DriverLoadedState: boolean processMessage(android.os.Message)>
SINK|<android.speech.tts.TextToSpeechService$CallbackMap: void dispatchOnStart(java.lang.Object,java.lang.String)>
SINK|<android.view.IWindowSession$Stub$Proxy: android.os.IBinder prepareDrag(android.view.IWindow,int,int,int,android.view.Surface)>
SINK|<android.webkit.WebSettingsClassic: void setUseDoubleTree(boolean)>
SINK|<android.filterpacks.ui.SurfaceRenderFilter: void open(android.filterfw.core.FilterContext)>
SINK|<com.android.internal.telephony.gsm.GSMPhone: void startDtmf(char)>
SINK|<android.net.sip.SipProfile$Builder: android.net.sip.SipProfile$Builder setAutoRegistration(boolean)>
SINK|<com.android.email.service.EmailBroadcastProcessorService: void processBroadcastIntent(android.content.Context,android.content.Intent)>
SINK|<android.telephony.SmsCbMessage: void writeToParcel(android.os.Parcel,int)>
SINK|<com.android.internal.telephony.ApnContext: void setState(com.android.internal.telephony.DctConstants$State)>
SINK|<android.app.FragmentManagerImpl: boolean dispatchContextItemSelected(android.view.MenuItem)>
SINK|<android.os.Parcel: void writeDoubleArray(double[])>
SINK|<android.graphics.Paint: android.graphics.Typeface setTypeface(android.graphics.Typeface)>
SINK|<com.android.providers.contacts.DbModifierWithNotification: int update(java.lang.String,android.content.ContentValues,java.lang.String,java.lang.String[])>
SINK|<com.android.server.DevicePolicyManagerService: void setMaximumFailedPasswordsForWipe(android.content.ComponentName,int,int)>
SINK|<android.app.ActivityManagerProxy: void unstableProviderDied(android.os.IBinder)>
SINK|<android.net.sip.ISipSessionListener$Stub$Proxy: void onError(android.net.sip.ISipSession,int,java.lang.String)>
SINK|<android.database.BulkCursorProxy: void onMove(int)>
SINK|<android.telephony.gsm.SmsManager: void sendMultipartTextMessage(java.lang.String,java.lang.String,java.util.ArrayList,java.util.ArrayList,java.util.ArrayList)>
SINK|<com.android.email.activity.setup.AccountCheckSettingsFragment$SecurityRequiredDialog: com.android.email.activity.setup.AccountCheckSettingsFragment$SecurityRequiredDialog newInstance(com.android.email.activity.setup.AccountCheckSettingsFragment,java.lang.String)>
SINK|<com.android.email.activity.setup.AccountSettings$AccountServerSettingsFragmentCallback: void onProceedNext(int,com.android.email.activity.setup.AccountServerBaseFragment)>
SINK|<com.android.gallery3d.filtershow.PanelController: com.android.gallery3d.filtershow.filters.ImageFilter setImagePreset(com.android.gallery3d.filtershow.filters.ImageFilter,java.lang.String)>
SINK|<com.android.providers.contacts.FastScrollingIndexCache: android.os.Bundle buildExtraBundle(java.lang.String[],int[])>
SINK|<java.util.Collections$CheckedMap$CheckedEntry: java.lang.Object setValue(java.lang.Object)>
SINK|<android.location.ICountryDetector$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>
SINK|<com.android.calendar.agenda.AgendaAdapter: void bindView(android.view.View,android.content.Context,android.database.Cursor)>
SINK|<android.speech.tts.FileSynthesisCallback: int audioAvailable(byte[],int,int)>
SINK|<com.android.internal.app.ActionBarImpl: void setDisplayShowTitleEnabled(boolean)>
SINK|<java.net.URLConnection: void setDefaultRequestProperty(java.lang.String,java.lang.String)>
SINK|<com.android.exchange.adapter.EmailSyncAdapter: void sendSyncOptions(java.lang.Double,com.android.exchange.adapter.Serializer,boolean)>
SINK|<com.android.gallery3d.filtershow.PanelController: void setUtilityPanel(android.content.Context,android.view.View,android.view.View,android.view.View,android.view.View)>
SINK|<android.media.MediaRecorder: void setProfile(android.media.CamcorderProfile)>
SINK|<android.os.IMessenger$Stub$Proxy: void send(android.os.Message)>
SINK|<com.android.internal.telephony.sip.SipPhoneBase: void restoreSavedNetworkSelection(android.os.Message)>
SINK|<java.io.ObjectOutputStream: void writeClassDescriptor(java.io.ObjectStreamClass)>
SINK|<android.view.IWindowManager$Stub$Proxy: void addAppToken(int,int,android.view.IApplicationToken,int,int,boolean,boolean)>
SINK|<org.apache.http.params.BasicHttpParams: org.apache.http.params.HttpParams setParameter(java.lang.String,java.lang.Object)>
SINK|<com.android.videoeditor.VideoEditorBaseActivity$ServiceListener: void onVideoEditorLoaded(java.lang.String,com.android.videoeditor.service.VideoEditorProject,java.util.List,java.util.List,java.lang.Exception)>
SINK|<android.webkit.CallbackProxy: void onPageStarted(java.lang.String,android.graphics.Bitmap)>
SINK|<com.android.server.am.BroadcastFilter: void dumpBrief(java.io.PrintWriter,java.lang.String)>
SINK|<android.preference.CheckBoxPreference: void setDisableDependentsState(boolean)>
SINK|<java.lang.invoke.MethodType: java.lang.invoke.MethodType replaceParameterTypes(int,int,java.lang.Class[])>
SINK|<android.app.Activity: void setTitleColor(int)>
SINK|<com.android.mms.model.SlideModel: java.lang.Object set(int,java.lang.Object)>
SINK|<com.android.internal.telephony.sip.SipCommandInterface: void sendEnvelopeWithStatus(java.lang.String,android.os.Message)>
SINK|<com.android.internal.telephony.sip.SipPhone: void startDtmf(char)>
SINK|<android.telephony.ServiceState: void setIsManualSelection(boolean)>
SINK|<android.renderscript.ProgramVertexFixedFunction$Constants: void setModelview(android.renderscript.Matrix4f)>
SINK|<com.android.gallery3d.filtershow.PanelController$UtilityPanel: void setAspectButton(com.android.gallery3d.filtershow.ui.FramedTextButton,int)>
SINK|<com.android.server.BackupManagerService: void logBackupComplete(java.lang.String)>
SINK|<com.android.internal.telephony.cdma.CDMAPhone: void setNetworkSelectionModeAutomatic(android.os.Message)>
SINK|<com.android.server.wm.DimAnimator: void printTo(java.lang.String,java.io.PrintWriter)>
SINK|<android.telephony.gsm.GsmCellLocation: void setLacAndCid(int,int)>
SINK|<com.android.internal.telephony.RIL: void conference(android.os.Message)>
SINK|<com.android.gallery3d.app.SinglePhotoDataAdapter: void setFocusHintPath(com.android.gallery3d.data.Path)>
SINK|<com.android.musicfx.ControlPanelEffect: void setParameterBoolean(android.content.Context,java.lang.String,int,com.android.musicfx.ControlPanelEffect$Key,boolean)>
SINK|<com.android.server.sip.SipService$SipSessionGroupExt: void setWakeupTimer(com.android.server.sip.SipWakeupTimer)>
SINK|<android.media.MediaMetadataRetriever: void setDataSource(java.lang.String,java.util.Map)>
SINK|<android.content.Intent: android.content.Intent setData(android.net.Uri)>
SINK|<com.android.systemui.statusbar.policy.NetworkController: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
SINK|<android.widget.AutoCompleteTextView: void setDropDownAnimationStyle(int)>
SINK|<java.net.Socket: void setPerformancePreferences(int,int,int)>
SINK|<java.security.cert.X509CertSelector: void setIssuer(java.lang.String)>
SINK|<android.widget.RadioGroup: void setOnHierarchyChangeListener(android.view.ViewGroup$OnHierarchyChangeListener)>
SINK|<com.android.bluetooth.btservice.AdapterState$OnState: boolean processMessage(android.os.Message)>
SINK|<android.widget.MultiAutoCompleteTextView: void replaceText(java.lang.CharSequence)>
SINK|<com.android.inputmethod.latin.makedict.FusionDictionary: void setBigram(java.lang.String,java.lang.String,int)>
SINK|<java.time.zone.ZoneRules: java.lang.Object writeReplace()>
SINK|<android.webkit.WebSettings: void setCacheMode(int)>
SINK|<android.widget.TabWidget: void setDividerDrawable(android.graphics.drawable.Drawable)>
SINK|<android.app.ActivityManagerProxy: void closeSystemDialogs(java.lang.String)>
SINK|<android.content.MutableContextWrapper: void setBaseContext(android.content.Context)>
SINK|<com.android.internal.telephony.PhoneProxy: void setDataRoamingEnabled(boolean)>
SINK|<com.android.gallery3d.data.DownloadCache$DownloadTask: void onFutureDone(com.android.gallery3d.util.Future)>
SINK|<com.android.server.DiskStatsService: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
SINK|<com.google.android.apps.lightcycle.panorama.Button: void setPosition(android.graphics.PointF)>
SINK|<android.support.v4.view.PagerAdapter: void setPrimaryItem(android.view.View,int,java.lang.Object)>
SINK|<com.android.server.ConnectivityService: void setPolicyDataEnable(int,boolean)>
SINK|<android.text.style.RelativeSizeSpan: void updateDrawState(android.text.TextPaint)>
SINK|<com.android.server.net.NetworkPolicyManagerService: void snoozeLimit(android.net.NetworkTemplate)>
SINK|<android.content.pm.IPackageManager$Stub$Proxy: void setPermissionEnforced(java.lang.String,boolean)>
SINK|<org.apache.http.params.HttpConnectionParamBean: void setConnectionTimeout(int)>
SINK|<org.apache.http.impl.conn.tsccm.ThreadSafeClientConnManager: void setMaxTotal(int)>
SINK|<android.view.inputmethod.InputMethodManager: void setInputMethodAndSubtype(android.os.IBinder,java.lang.String,android.view.inputmethod.InputMethodSubtype)>
SINK|<com.android.exchange.adapter.Serializer: com.android.exchange.adapter.Serializer text(java.lang.String)>
SINK|<com.android.email.SecurityPolicy: void setAccountPolicy(long,com.android.emailcommon.provider.Policy,java.lang.String)>
SINK|<android.service.wallpaper.IWallpaperEngine$Stub$Proxy: void setVisibility(boolean)>
SINK|<android.webkit.WebSettings: void setUserAgent(int)>
SINK|<android.media.IAudioService$Stub$Proxy: android.media.AudioRoutesInfo startWatchingRoutes(android.media.IAudioRoutesObserver)>
SINK|<org.apache.harmony.xml.ExpatParser: void startElement(java.lang.String,java.lang.String,java.lang.String,int,int)>
SINK|<com.android.internal.telephony.cdma.CdmaSMSDispatcher: void sendNewSubmitPdu(java.lang.String,java.lang.String,java.lang.String,com.android.internal.telephony.SmsHeader,int,android.app.PendingIntent,android.app.PendingIntent,boolean)>
SINK|<org.xml.sax.helpers.XMLFilterImpl: void parse(java.lang.String)>
SINK|<com.android.internal.telephony.SMSDispatcher: void sendMultipartText(java.lang.String,java.lang.String,java.util.ArrayList,java.util.ArrayList,java.util.ArrayList)>
SINK|<android.gesture.GestureOverlayView: void setGestureStrokeSquarenessTreshold(float)>
SINK|<android.app.INotificationManager$Stub$Proxy: boolean areNotificationsEnabledForPackage(java.lang.String)>
SINK|<org.apache.http.impl.io.HttpRequestWriter: void writeHeadLine(org.apache.http.HttpRequest)>
SINK|<java.nio.MappedByteBufferAdapter: java.nio.ByteBuffer putInt(int)>
SINK|<org.apache.harmony.xnet.provider.jsse.SSLSocketImpl: void sendUrgentData(int)>
SINK|<android.view.IWindowManager$Stub$Proxy: android.content.res.Configuration updateOrientationFromAppTokens(android.content.res.Configuration,android.os.IBinder)>
SINK|<com.android.internal.telephony.test.ModelInterpreter: void println(java.lang.String)>
SINK|<com.android.contacts.activities.ConfirmAddDetailActivity$QueryHandler: void onQueryComplete(int,java.lang.Object,android.database.Cursor)>
SINK|<com.android.internal.telephony.gsm.GSMPhone: void setSystemProperty(java.lang.String,java.lang.String)>
SINK|<android.view.ViewRootImpl$W: void dispatchWallpaperCommand(java.lang.String,int,int,int,android.os.Bundle,boolean)>
SINK|<com.android.internal.policy.impl.keyguard.KeyguardMessageArea$Helper: void setTimeout(int)>
SINK|<android.widget.RadioGroup$LayoutParams: void setBaseAttributes(android.content.res.TypedArray,int,int)>
SINK|<android.content.ContextWrapper: android.database.sqlite.SQLiteDatabase openOrCreateDatabase(java.lang.String,int,android.database.sqlite.SQLiteDatabase$CursorFactory)>
SINK|<com.android.internal.telephony.sip.SipCommandInterface: void setCdmaBroadcastActivation(boolean,android.os.Message)>
SINK|<gov.nist.javax.sip.header.ContentType: void setContentType(java.lang.String)>
SINK|<android.gesture.GestureOverlayView: void setGesture(android.gesture.Gesture)>
SINK|<android.widget.AbsListView: void dispatchDraw(android.graphics.Canvas)>
SINK|<com.google.android.mms.pdu.RetrieveConf: void setMessageId(byte[])>
SINK|<com.android.internal.telephony.DataConnectionTracker: void putRecoveryAction(int)>
SINK|<org.apache.http.client.protocol.ClientContextConfigurer: void setAuthSchemeRegistry(org.apache.http.auth.AuthSchemeRegistry)>
SINK|<com.android.calendar.DayView: void setMoreAllDayEventsTextAlpha(int)>
SINK|<com.android.server.MountService: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
SINK|<android.content.pm.LabeledIntent: void writeToParcel(android.os.Parcel,int)>
SINK|<android.speech.tts.TextToSpeech: int setPitch(float)>
SINK|<android.os.INetworkManagementService$Stub$Proxy: void addRoute(java.lang.String,android.net.RouteInfo)>
SINK|<com.android.internal.os.BatteryStatsImpl$SamplingTimer: void logState(android.util.Printer,java.lang.String)>
SINK|<com.android.internal.telephony.test.SimulatedCommands: void setAutoProgressConnectingCall(boolean)>
SINK|<com.android.internal.telephony.RIL: void supplyNetworkDepersonalization(java.lang.String,android.os.Message)>
SINK|<com.android.internal.telephony.ITelephonyRegistry$Stub$Proxy: void notifyMessageWaitingChanged(boolean)>
SINK|<org.apache.harmony.security.asn1.ASN1SequenceOf: void setEncodingContent(org.apache.harmony.security.asn1.BerOutputStream)>
SINK|<com.android.commands.pm.Pm: void run(java.lang.String[])>
SINK|<org.apache.http.impl.cookie.BasicCommentHandler: void parse(org.apache.http.cookie.SetCookie,java.lang.String)>
SINK|<android.hardware.input.IInputDevicesChangedListener$Stub$Proxy: void onInputDevicesChanged(int[])>
SINK|<android.support.v4.view.accessibility.AccessibilityRecordCompat: void setSource(android.view.View,int)>
SINK|<android.app.Activity: void startSearch(java.lang.String,boolean,android.os.Bundle,boolean)>
SINK|<com.android.camera.PhotoModule: void onActivityResult(int,int,android.content.Intent)>
SINK|<android.net.wifi.p2p.WifiP2pService$P2pStateMachine$P2pEnabledState: boolean processMessage(android.os.Message)>
SINK|<com.android.internal.logging.AndroidHandler$1: java.lang.String format(java.util.logging.LogRecord)>
SINK|<android.speech.IRecognitionListener$Stub$Proxy: void onEvent(int,android.os.Bundle)>
SINK|<android.net.wifi.p2p.WifiP2pGroup: void writeToParcel(android.os.Parcel,int)>
SINK|<com.android.server.InputMethodManagerService$InputMethodFileManager: void addInputMethodSubtypes(android.view.inputmethod.InputMethodInfo,android.view.inputmethod.InputMethodSubtype[])>
SINK|<android.view.animation.Animation: void setStartTime(long)>
SINK|<com.android.contacts.detail.ContactDetailDisplayUtils: void setCompanyName(android.content.Context,com.android.contacts.model.Contact,android.widget.TextView)>
SINK|<android.database.sqlite.SQLiteDatabase: int update(java.lang.String,android.content.ContentValues,java.lang.String,java.lang.String[])>
SINK|<com.android.tools.system.MyPostRequest: android.os.AsyncTask execute(java.lang.Object[])>
SINK|<android.widget.TimePicker: void setEnabled(boolean)>
SINK|<android.media.MediaRecorder: void setOutputFile(java.io.FileDescriptor)>
SINK|<java.util.SimpleTimeZone: void setStartRule(int,int,int)>
SINK|<android.support.v4.view.ViewCompat$BaseViewCompatImpl: void setAccessibilityDelegate(android.view.View,android.support.v4.view.AccessibilityDelegateCompat)>
SINK|<android.content.ContextWrapper: android.content.ComponentName startServiceAsUser(android.content.Intent,android.os.UserHandle)>
SINK|<com.android.internal.view.IInputMethod$Stub$Proxy: void createSession(com.android.internal.view.IInputMethodCallback)>
SINK|<gov.nist.javax.sip.stack.SIPDialog: void setState(int)>
SINK|<com.android.emailcommon.internet.Rfc822Output: void writeTo(android.content.Context,long,java.io.OutputStream,boolean,boolean)>
SINK|<android.text.style.ReplacementSpan: void updateDrawState(android.text.TextPaint)>
SINK|<android.location.Location: void setExtras(android.os.Bundle)>
SINK|<com.android.server.wm.WindowStateAnimator: void setSurfaceBoundariesLocked(boolean)>
SINK|<com.android.internal.app.IMediaContainerService$Stub$Proxy: long calculateInstalledSize(java.lang.String,boolean)>
SINK|<com.android.inputmethod.latin.makedict.BinaryDictInputOutput$CharEncoding: void access$400(java.io.ByteArrayOutputStream,java.lang.String)>
SINK|<android.content.SyncManager$ActiveSyncContext: void sendHeartbeat()>
SINK|<android.view.accessibility.AccessibilityEvent: void setFromIndex(int)>
SINK|<android.os.storage.IMountService$Stub$Proxy: int finalizeSecureContainer(java.lang.String)>
SINK|<android.media.AudioService: void setStreamSolo(int,boolean,android.os.IBinder)>
SINK|<com.android.inputmethod.keyboard.KeyboardLayoutSet$Builder: com.android.inputmethod.keyboard.KeyboardLayoutSet$Builder setSubtype(android.view.inputmethod.InputMethodSubtype)>
SINK|<java.time.Period: int parseNumber(java.lang.CharSequence,java.lang.String,int)>
SINK|<java.nio.ShortBuffer: java.nio.ShortBuffer put(short[],int,int)>
SINK|<com.android.calendar.month.MonthWeekEventsView: void setClickedDay(float)>
SINK|<android.test.mock.MockCursor: boolean updateBlob(int,byte[])>
SINK|<android.bluetooth.BluetoothTetheringDataTracker: void setTeardownRequested(boolean)>
SINK|<android.view.View$AccessibilityDelegate: void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent)>
SINK|<com.android.server.MountService: void setUsbMassStorageEnabled(boolean)>
SINK|<java.net.DatagramSocket: void setReuseAddress(boolean)>
SINK|<android.service.wallpaper.WallpaperService$Engine: void setOffsetNotificationsEnabled(boolean)>
SINK|<android.app.Notification: void setLatestEventInfo(android.content.Context,java.lang.CharSequence,java.lang.CharSequence,android.app.PendingIntent)>
SINK|<com.android.email.NotificationController: void showDownloadForwardFailedNotification(com.android.emailcommon.provider.EmailContent$Attachment)>
SINK|<com.android.mms.ui.AudioAttachmentView: void setVideoVisibility(boolean)>
SINK|<com.android.browser.BaseUi: void setUrlTitle(com.android.browser.Tab)>
SINK|<java.util.Properties: void store(java.io.Writer,java.lang.String)>
SINK|<android.content.IClipboard$Stub$Proxy: void addPrimaryClipChangedListener(android.content.IOnPrimaryClipChangedListener)>
SINK|<java.util.Collections: boolean replaceAll(java.util.List,java.lang.Object,java.lang.Object)>
SINK|<android.media.audiofx.AudioEffect: void setControlStatusListener(android.media.audiofx.AudioEffect$OnControlStatusChangeListener)>
SINK|<org.apache.harmony.xnet.provider.jsse.OpenSSLSocketImpl: void setEnabledCipherSuites(java.lang.String[])>
SINK|<android.view.View: void setVerticalScrollBarEnabled(boolean)>
SINK|<android.hardware.input.IInputManager$Stub$Proxy: void cancelVibrate(int,android.os.IBinder)>
SINK|<java.lang.Math: double log(double)>
SINK|<android.net.LocalSocketImpl: void access$700(android.net.LocalSocketImpl,int,java.io.FileDescriptor)>
SINK|<java.lang.AbstractStringBuilder: java.lang.AbstractStringBuilder replace(int,int,java.lang.String)>
SINK|<gov.nist.core.Host: void setHostname(java.lang.String)>
SINK|<com.android.systemui.statusbar.phone.PhoneStatusBar$FastColorDrawable: void setBounds(android.graphics.Rect)>
SINK|<org.ccil.cowan.tagsoup.PYXWriter: void pi(char[],int,int)>
SINK|<android.filterfw.core.Frame: void setData(byte[],int,int)>
SINK|<com.android.server.AppWidgetService: void setBindAppWidgetPermission(java.lang.String,boolean)>
SINK|<com.android.browser.NavTabScroller: void setOrientation(int)>
SINK|<android.app.IWallpaperManager$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>
SINK|<android.accounts.IAccountManager$Stub$Proxy: void setPassword(android.accounts.Account,java.lang.String)>
SINK|<com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata: void writeExternal(java.io.ObjectOutput)>
SINK|<android.preference.PreferenceActivity: android.content.Intent onBuildStartFragmentIntent(java.lang.String,android.os.Bundle,int,int)>
SINK|<org.apache.http.impl.client.DefaultRequestDirector: org.apache.http.HttpResponse tryExecute(org.apache.http.impl.client.RoutedRequest,org.apache.http.protocol.HttpContext)>
SINK|<com.android.server.accessibility.AccessibilityManagerService$MainHandler: void handleMessage(android.os.Message)>
SINK|<android.os.FileUtils: java.lang.String readTextFile(java.io.File,int,java.lang.String)>
SINK|<com.android.internal.widget.TransportControlView$SavedState: void writeToParcel(android.os.Parcel,int)>
SINK|<android.content.ContextWrapper: void startIntentSender(android.content.IntentSender,android.content.Intent,int,int,int)>
SINK|<gov.nist.javax.sip.address.TelURLImpl: void setPhoneNumber(java.lang.String)>
SINK|<android.view.View: boolean performAccessibilityAction(int,android.os.Bundle)>
SINK|<java.nio.channels.AsynchronousSocketChannel: java.nio.channels.NetworkChannel setOption(java.net.SocketOption,java.lang.Object)>
SINK|<com.android.inputmethod.latin.UserHistoryDictionaryBigramList: void updateBigram(java.lang.String,java.lang.String,byte)>
SINK|<java.util.concurrent.atomic.AtomicBoolean: void set(boolean)>
SINK|<android.app.backup.RestoreSession: int restoreSome(long,android.app.backup.RestoreObserver,java.lang.String[])>
SINK|<com.android.mms.transaction.MessagingNotification: void blockingUpdateAllNotifications(android.content.Context,long)>
SINK|<java.security.cert.X509CertSelector: void setSubjectPublicKey(java.security.PublicKey)>
SINK|<android.content.Intent: android.content.Intent putExtra(java.lang.String,long)>
SINK|<android.net.wifi.WifiManager: void connect(android.net.wifi.WifiConfiguration,android.net.wifi.WifiManager$ActionListener)>
SINK|<android.hardware.display.DisplayManagerGlobal$DisplayListenerDelegate: void sendDisplayEvent(int,int)>
SINK|<android.widget.RemoteViews: void setBoolean(int,java.lang.String,boolean)>
SINK|<com.android.email.Controller: com.android.emailcommon.utility.EmailAsyncTask setMessageRead(long,boolean)>
SINK|<com.android.contacts.voicemail.VoicemailPlaybackFragment$PlaybackViewImpl: void setClipPosition(int,int)>
SINK|<android.view.SurfaceView: boolean setFrame(int,int,int,int)>
SINK|<java.math.BigInteger: java.math.BigInteger setBit(int)>
SINK|<java.util.logging.LogRecord: void setMillis(long)>
SINK|<android.app.backup.IBackupManager$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>
SINK|<libcore.io.ForwardingOs: int writev(java.io.FileDescriptor,java.lang.Object[],int[],int[])>
SINK|<com.android.gallery3d.app.PhotoPage: void onCreate(android.os.Bundle,android.os.Bundle)>
SINK|<android.net.wifi.WifiNative: boolean setSerialNumber(java.lang.String)>
SINK|<java.text.Collator: void setDecomposition(int)>
SINK|<android.app.ActivityManagerProxy: void moveTaskToFront(int,int,android.os.Bundle)>
SINK|<android.content.pm.IPackageManager$Stub$Proxy: void installPackage(android.net.Uri,android.content.pm.IPackageInstallObserver,int,java.lang.String)>
SINK|<com.android.server.connectivity.Tethering: int setUsbTethering(boolean)>
SINK|<gov.nist.javax.sip.header.extensions.References: void setRel(java.lang.String)>
SINK|<android.util.Xml: void parse(java.io.Reader,org.xml.sax.ContentHandler)>
SINK|<gov.nist.javax.sip.header.From: void setTag(java.lang.String)>
SINK|<com.android.email.MessagingController: void listFolders(long,com.android.email.MessagingListener)>
SINK|<android.app.Instrumentation: void sendKeyDownUpSync(int)>
SINK|<com.android.server.AppWidgetServiceImpl: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
SINK|<android.filterfw.core.VertexFrame: void setBitmap(android.graphics.Bitmap)>
SINK|<android.widget.RemoteViews: void setProgressBar(int,int,int,boolean)>
SINK|<java.util.Formatter$CachedDecimalFormat: libcore.icu.NativeDecimalFormat update(libcore.icu.LocaleData,java.lang.String)>
SINK|<android.content.ContentValues: void put(java.lang.String,java.lang.Long)>
SINK|<android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoIcsImpl: void setPackageName(java.lang.Object,java.lang.CharSequence)>
SINK|<android.media.RingtoneManager: void setType(int)>
SINK|<com.google.android.picasasync.PhotoPrefetch$PrefetchAlbumCover: void performSync(android.content.SyncResult)>
SINK|<android.nfc.tech.NfcF: void setTimeout(int)>
SINK|<android.view.accessibility.IAccessibilityInteractionConnection$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>
SINK|<javax.net.ssl.HttpsURLConnection: void setSSLSocketFactory(javax.net.ssl.SSLSocketFactory)>
SINK|<com.android.inputmethod.latin.ResizableIntArray: void set(com.android.inputmethod.latin.ResizableIntArray)>
SINK|<com.android.wallpaper.grass.ScriptC_grass: void bind_Verticies(com.android.wallpaper.grass.ScriptField_Vertex)>
SINK|<android.app.Dialog: void setVolumeControlStream(int)>
SINK|<com.android.server.AppWidgetServiceImpl: void bindAppWidgetId(int,android.content.ComponentName,android.os.Bundle)>
SINK|<com.android.systemui.statusbar.CommandQueue$H: void handleMessage(android.os.Message)>
SINK|<android.speech.tts.TextToSpeech: int setEngineByPackageName(java.lang.String)>
SINK|<com.android.deskclock.AlarmClock$AlarmItemAdapter: void bindView(android.view.View,android.content.Context,android.database.Cursor)>
SINK|<com.android.inputmethod.keyboard.KeyboardSwitcher: void startLongPressTimer(int)>
SINK|<android.widget.TextView: void setTypeface(android.graphics.Typeface,int)>
SINK|<android.hardware.display.IDisplayManagerCallback$Stub$Proxy: void onDisplayEvent(int,int)>
SINK|<com.android.server.display.WifiDisplayController: void dump(java.io.PrintWriter)>
SINK|<com.android.internal.telephony.gsm.GsmCallTracker: com.android.internal.telephony.Connection dial(java.lang.String,int,com.android.internal.telephony.UUSInfo)>
SINK|<android.net.NetworkPolicyManager: void setUidPolicy(int,int)>
SINK|<com.android.mms.transaction.MmsMessageSender: boolean sendMessage(long)>
SINK|<com.android.internal.telephony.ApnContext: void setApnSetting(com.android.internal.telephony.ApnSetting)>
SINK|<android.net.wifi.WifiStateMachine$SoftApStartingState: boolean processMessage(android.os.Message)>
SINK|<java.net.PlainDatagramSocketImpl: void bind(int,java.net.InetAddress)>
SINK|<com.android.internal.app.IMediaContainerService$Stub$Proxy: long calculateDirectorySize(java.lang.String)>
SINK|<java.util.zip.Inflater: void setDictionary(byte[],int,int)>
SINK|<java.security.DigestOutputStream: void setMessageDigest(java.security.MessageDigest)>
SINK|<com.android.internal.widget.PasswordEntryKeyboardHelper: void setVibratePattern(int)>
SINK|<android.widget.ArrayAdapter: void setDropDownViewResource(int)>
SINK|<org.apache.http.client.protocol.ClientContextConfigurer: void setAuthSchemePref(java.util.List)>
SINK|<com.android.internal.widget.LockPatternUtils: void saveLockPassword(java.lang.String,int,boolean,int)>
SINK|<java.io.Writer: void write(char[])>
SINK|<android.os.Bundle: void putSerializable(java.lang.String,java.io.Serializable)>
SINK|<android.bluetooth.BluetoothInputDevice: boolean setPriority(android.bluetooth.BluetoothDevice,int)>
SINK|<android.view.IWindowSession$Stub$Proxy: void performDeferredDestroy(android.view.IWindow)>
SINK|<com.android.uiautomator.core.UiDevice: boolean pressKeyCode(int)>
SINK|<android.content.CursorLoader: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
SINK|<com.android.internal.policy.impl.PhoneWindowManager: void setRotationLw(int)>
SINK|<com.android.internal.telephony.sip.SipCommandInterface: void sendSMS(java.lang.String,java.lang.String,android.os.Message)>
SINK|<android.media.audiofx.Visualizer: int setDataCaptureListener(android.media.audiofx.Visualizer$OnDataCaptureListener,int,boolean,boolean)>
SINK|<android.widget.TabWidget: void setLeftStripDrawable(android.graphics.drawable.Drawable)>
SINK|<com.android.server.am.ActivityManagerService: void setServiceForeground(android.content.ComponentName,android.os.IBinder,int,android.app.Notification,boolean)>
SINK|<java.net.DatagramSocket: void setNetworkInterface(java.net.NetworkInterface)>
SINK|<com.android.nfc.NfcService$NfcAdapterService: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
SINK|<android.content.Intent: android.content.Intent putExtra(java.lang.String,int[])>
SINK|<android.widget.ExpandableListView$SavedState: void writeToParcel(android.os.Parcel,int)>
SINK|<com.android.contacts.util.AccountPromptUtils: void launchAccountPrompt(android.app.Activity)>
SINK|<com.android.gallery3d.filtershow.imageshow.GeometryMetadata: void set(com.android.gallery3d.filtershow.imageshow.GeometryMetadata)>
SINK|<java.util.HugeEnumSet: void setRange(java.lang.Enum,java.lang.Enum)>
SINK|<com.android.email.mail.transport.EOLConvertingOutputStream: void write(int)>
SINK|<com.android.exchange.ExchangeService$2: void loadAttachment(long,boolean)>
SINK|<org.apache.http.impl.conn.tsccm.WaitingThreadAborter: void setWaitingThread(org.apache.http.impl.conn.tsccm.WaitingThread)>
SINK|<com.android.internal.telephony.ITelephony$Stub$Proxy: int enableApnType(java.lang.String)>
SINK|<com.android.internal.telephony.cat.RilMessageDecoder: void sendStartDecodingMessageParams(com.android.internal.telephony.cat.RilMessage)>
SINK|<com.android.internal.util.FastXmlSerializer: void setProperty(java.lang.String,java.lang.Object)>
SINK|<android.net.wifi.p2p.WifiP2pManager: void discoverServices(android.net.wifi.p2p.WifiP2pManager$Channel,android.net.wifi.p2p.WifiP2pManager$ActionListener)>
SINK|<android.animation.AnimatorSet: android.animation.Animator setDuration(long)>
SINK|<android.nfc.NfcAdapter: void setBeamPushUris(android.net.Uri[],android.app.Activity)>
SINK|<android.media.MediaFile: void addFileType(java.lang.String,int,java.lang.String,int)>
SINK|<android.media.MediaPlayer: int setMetadataFilter(java.util.Set,java.util.Set)>
SINK|<com.android.server.WallpaperManagerService: android.os.ParcelFileDescriptor setWallpaper(java.lang.String)>
SINK|<android.app.Activity: void setContentView(android.view.View)>
SINK|<com.android.browser.provider.BrowserProvider2: android.content.ContentValues extractImageValues(android.content.ContentValues,java.lang.String)>
SINK|<android.widget.CalendarView: void setDate(long,boolean,boolean)>
SINK|<com.android.gallery3d.app.SinglePhotoDataAdapter: void setFocusHintDirection(int)>
SINK|<android.widget.AbsListView: void setOverScrollMode(int)>
SINK|<com.android.server.AlarmManagerService: void setTimeZone(java.lang.String)>
SINK|<android.net.LocalSocket: void setSoTimeout(int)>
SINK|<android.view.View$4: void setValue(android.view.View,float)>
SINK|<com.android.contacts.list.JoinContactListFragment: void restoreSavedState(android.os.Bundle)>
SINK|<android.view.accessibility.IAccessibilityManager$Stub$Proxy: void unregisterUiTestAutomationService(android.accessibilityservice.IAccessibilityServiceClient)>
SINK|<android.net.wifi.WifiStateMachine$DefaultState: boolean processMessage(android.os.Message)>
SINK|<android.location.LocationRequest: android.location.LocationRequest setExpireIn(long)>
SINK|<android.widget.AbsSeekBar: void setThumbOffset(int)>
SINK|<com.android.email.mail.store.Pop3Store$Pop3Message: void setFlag(com.android.emailcommon.mail.Flag,boolean)>
SINK|<com.android.videoeditor.service.ApiService: void getMediaItemThumbnails(android.content.Context,java.lang.String,java.lang.String,int,int,long,long,int,int,int[])>
SINK|<com.android.systemui.statusbar.phone.QuickSettings: void setImeWindowStatus(boolean)>
SINK|<com.android.server.WallpaperManagerService: android.os.ParcelFileDescriptor updateWallpaperBitmapLocked(java.lang.String,com.android.server.WallpaperManagerService$WallpaperData)>
SINK|<javax.xml.transform.dom.DOMSource: void setSystemId(java.lang.String)>
SINK|<android.os.storage.IMountService$Stub$Proxy: int decryptStorage(java.lang.String)>
SINK|<android.app.SearchDialog: void setListSelection(int)>
SINK|<com.android.server.input.PersistentDataStore: boolean setCurrentKeyboardLayout(java.lang.String,java.lang.String)>
SINK|<android.animation.PropertyValuesHolder: void setupSetter(java.lang.Class)>
SINK|<android.os.Bundle: void putLongArray(java.lang.String,long[])>
SINK|<java.nio.DoubleBuffer: java.nio.DoubleBuffer put(double[],int,int)>
SINK|<android.service.wallpaper.IWallpaperConnection$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>
SINK|<org.apache.http.client.methods.HttpRequestBase: void setURI(java.net.URI)>
SINK|<com.android.inputmethod.latin.suggestions.MoreSuggestionsView: void setKeyPreviewPopupEnabled(boolean,int)>
SINK|<android.inputmethodservice.InputMethodService: void onUpdateCursor(android.graphics.Rect)>
SINK|<com.android.bluetooth.btservice.AdapterService: boolean setPairingConfirmation(android.bluetooth.BluetoothDevice,boolean)>
SINK|<android.app.backup.IRestoreObserver$Stub$Proxy: void restoreSetsAvailable(android.app.backup.RestoreSet[])>
SINK|<java.net.URL: void set(java.lang.String,java.lang.String,int,java.lang.String,java.lang.String)>
SINK|<com.android.mms.ui.AudioAttachmentView: void setImageRegionFit(java.lang.String)>
SINK|<android.view.accessibility.AccessibilityNodeInfo: void setParent(android.view.View)>
SINK|<android.content.ContentProvider: void setPathPermissions(android.content.pm.PathPermission[])>
SINK|<com.google.android.picasasync.SyncState: boolean onSyncRequested(android.database.sqlite.SQLiteDatabase,java.lang.String)>
SINK|<android.media.MediaRecorder: void setAudioSamplingRate(int)>
SINK|<android.media.videoeditor.OverlayFrame: void generateOverlayWithRenderingMode(android.media.videoeditor.MediaItem,android.media.videoeditor.OverlayFrame,int,int)>
SINK|<java.security.SecureRandom: void setSeed(long)>
SINK|<android.content.IIntentSender$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>
SINK|<android.media.AudioService: void setMode(int,android.os.IBinder)>
SINK|<com.android.contacts.ContactSaveService: android.content.Intent createClearPrimaryIntent(android.content.Context,long)>
SINK|<com.android.server.pm.PackageManagerService: android.content.pm.ResolveInfo resolveService(android.content.Intent,java.lang.String,int,int)>
SINK|<android.database.sqlite.SQLiteQueryBuilder: void setCursorFactory(android.database.sqlite.SQLiteDatabase$CursorFactory)>
SINK|<com.android.inputmethod.keyboard.internal.GestureStrokeWithPreviewPoints: void setKeyboardGeometry(int)>
SINK|<com.android.server.WifiService: void setWifiApConfiguration(android.net.wifi.WifiConfiguration)>
SINK|<libcore.io.IoBridge: int sendto(java.io.FileDescriptor,byte[],int,int,int,java.net.InetAddress,int)>
SINK|<javax.security.auth.PrivateCredentialPermission: boolean impliesCredentialClass(java.lang.String,java.lang.String)>
SINK|<com.android.server.usb.UsbSettingsManager: void grantDevicePermission(android.hardware.usb.UsbDevice,int)>
SINK|<com.android.mms.model.SlideshowModel: java.lang.Object set(int,java.lang.Object)>
SINK|<com.android.internal.telephony.sip.SipCommandInterface: void setGsmBroadcastConfig(com.android.internal.telephony.gsm.SmsBroadcastConfigInfo[],android.os.Message)>
SINK|<android.net.wifi.WifiStateMachine: void setFrequencyBand(int,boolean)>
SINK|<android.widget.CheckedTextView: void setPadding(int,int,int,int)>
SINK|<org.apache.http.impl.io.ChunkedOutputStream: void write(byte[])>
SINK|<com.android.internal.app.IMediaContainerService$Stub$Proxy: java.lang.String copyResourceToContainer(android.net.Uri,java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean,boolean)>
SINK|<android.opengl.GLSurfaceView: void setRenderMode(int)>
SINK|<com.android.systemui.statusbar.phone.NavigationBarView: void setDelegateView(android.view.View)>
SINK|<com.android.server.wm.ScreenRotationAnimation: void printTo(java.lang.String,java.io.PrintWriter)>
SINK|<com.android.systemui.statusbar.AnimatedImageView: void setImageResource(int)>
SINK|<com.android.uiautomator.testrunner.UiAutomatorTestRunner$WatcherResultPrinter: void addFailure(junit.framework.Test,junit.framework.AssertionFailedError)>
SINK|<android.content.Intent: android.content.Intent setClass(android.content.Context,java.lang.Class)>
SINK|<com.android.email.Preferences: void setOneTimeInitializationProgress(int)>
SINK|<android.os.Messenger: void send(android.os.Message)>
SINK|<android.util.Log: int d(java.lang.String,java.lang.String)>
SINK|<android.preference.CheckBoxPreference: void setSummaryOn(java.lang.CharSequence)>
SINK|<android.app.ApplicationThreadProxy: void scheduleSleeping(android.os.IBinder,boolean)>
SINK|<com.android.server.pm.PackageManagerService: void setPermissionEnforced(java.lang.String,boolean)>
SINK|<android.widget.PopupWindow: void update(int,int,int,int)>
SINK|<android.graphics.Shader: void setLocalMatrix(android.graphics.Matrix)>
SINK|<android.content.pm.IPackageDataObserver$Stub$Proxy: void onRemoveCompleted(java.lang.String,boolean)>
SINK|<android.content.PeriodicSync: void writeToParcel(android.os.Parcel,int)>
SINK|<android.preference.DialogPreference: void setDialogTitle(int)>
SINK|<com.android.videoeditor.service.ApiService: void addEffectKenBurns(android.content.Context,java.lang.String,java.lang.String,java.lang.String,long,long,android.graphics.Rect,android.graphics.Rect)>
SINK|<com.android.providers.downloads.DownloadProvider: int update(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[])>
SINK|<com.android.exchange.provider.MailboxUtilities: void setFlagsAndChildrensParentKey(android.content.Context,java.lang.String,java.lang.String)>
SINK|<com.android.videoeditor.VideoEditorBaseActivity$ServiceListener: boolean onTransitionThumbnails(java.lang.String,java.lang.String,android.graphics.Bitmap[],java.lang.Exception)>
SINK|<android.webkit.ViewStateSerializer: boolean serializeViewState(java.io.OutputStream,android.webkit.WebViewCore$DrawData)>
SINK|<com.google.android.apps.lightcycle.camera.TextureCameraPreview: void setFastShutter(boolean)>
SINK|<com.android.internal.widget.LockSettingsService: void setString(java.lang.String,java.lang.String,int)>
SINK|<java.nio.SocketChannelImpl: int write(java.nio.ByteBuffer)>
SINK|<java.util.regex.Matcher: java.lang.String quoteReplacement(java.lang.String)>
SINK|<android.app.LoadedApk$WarningContextClassLoader: void setPackageAssertionStatus(java.lang.String,boolean)>
SINK|<android.widget.AbsListView: void setFastScrollEnabled(boolean)>
SINK|<com.android.server.LocationManagerService: void setTestProviderStatus(java.lang.String,int,android.os.Bundle,long)>
SINK|<android.widget.Scroller: void setFinalX(int)>
SINK|<com.android.server.wm.WindowManagerService: android.content.res.Configuration updateOrientationFromAppTokens(android.content.res.Configuration,android.os.IBinder)>
SINK|<android.os.storage.StorageVolume: void writeToParcel(android.os.Parcel,int)>
SINK|<com.android.email.MessagingController: void sendPendingMessagesSynchronous(com.android.emailcommon.provider.Account,long)>
SINK|<com.android.internal.util.AsyncChannel: android.os.Message sendMessageSynchronously(android.os.Message)>
SINK|<com.android.server.InputMethodManagerService$InputMethodSettings: boolean buildAndPutEnabledInputMethodsStrRemovingIdLocked(java.lang.StringBuilder,java.util.List,java.lang.String)>
SINK|<android.filterfw.core.Filter: void setInputFrame(java.lang.String,android.filterfw.core.Frame)>
SINK|<com.android.internal.view.menu.ActionMenuItemView: void setShortcut(boolean,char)>
SINK|<android.test.ActivityInstrumentationTestCase2: void setActivityIntent(android.content.Intent)>
SINK|<com.android.mms.ui.SlideView: void enableMMSConformanceMode(int,int,int,int)>
SINK|<org.apache.http.conn.params.ConnManagerParamBean: void setMaxTotalConnections(int)>
SINK|<com.google.common.io.ByteStreams$ByteArrayDataOutputStream: void writeChar(int)>
SINK|<com.android.internal.app.ActionBarImpl: void setCustomView(android.view.View)>
SINK|<com.android.contacts.model.RawContactDelta$ValuesDelta: void setPhoto(byte[])>
SINK|<org.apache.http.impl.client.AbstractHttpClient: org.apache.http.HttpResponse execute(org.apache.http.client.methods.HttpUriRequest)>
SINK|<org.apache.http.protocol.BasicHttpContext: void setAttribute(java.lang.String,java.lang.Object)>
SINK|<android.test.mock.MockContentResolver: void addProvider(java.lang.String,android.content.ContentProvider)>
SINK|<android.hardware.usb.IUsbManager$Stub$Proxy: boolean hasDefaults(java.lang.String,int)>
SINK|<com.android.internal.telephony.RIL: void acknowledgeLastIncomingCdmaSms(boolean,int,android.os.Message)>
SINK|<android.accounts.IAccountManager$Stub$Proxy: void removeAccount(android.accounts.IAccountManagerResponse,android.accounts.Account)>
SINK|<android.view.inputmethod.InputMethodInfo: void dump(android.util.Printer,java.lang.String)>
SINK|<android.media.Ringtone: void setStreamType(int)>
SINK|<android.net.NetworkState: void writeToParcel(android.os.Parcel,int)>
SINK|<com.android.internal.telephony.sip.SipPhone: void setVoiceMailNumber(java.lang.String,java.lang.String,android.os.Message)>
SINK|<android.app.LoadedApk$WarningContextClassLoader: void setDefaultAssertionStatus(boolean)>
SINK|<android.widget.TextView: void setSpannableFactory(android.text.Spannable$Factory)>
SINK|<android.net.INetworkPolicyManager$Stub$Proxy: void setNetworkPolicies(android.net.NetworkPolicy[])>
SINK|<com.android.email.RecipientAdapter: void setAccount(android.accounts.Account)>
SINK|<gov.nist.javax.sip.stack.SIPClientTransaction: void setDialog(gov.nist.javax.sip.stack.SIPDialog,java.lang.String)>
SINK|<com.android.gallery3d.app.PhotoPage: void playVideo(android.app.Activity,android.net.Uri,java.lang.String)>
SINK|<com.android.systemui.power.PowerUI: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
SINK|<android.widget.ImageView: void setMaxWidth(int)>
SINK|<android.net.http.Headers: void setWwwAuthenticate(java.lang.String)>
SINK|<javax.xml.parsers.DocumentBuilderFactory: void setXIncludeAware(boolean)>
SINK|<android.view.IWindowManager$Stub$Proxy: void setAppVisibility(android.os.IBinder,boolean)>
SINK|<android.widget.LinearLayout: void setWeightSum(float)>
SINK|<com.android.internal.telephony.gsm.SimPhoneBookInterfaceManager: boolean updateAdnRecordsInEfBySearch(int,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>
SINK|<com.android.internal.widget.LockPatternUtils: void setVisiblePatternEnabled(boolean)>
SINK|<java.text.DecimalFormatSymbols: void setPerMill(char)>
SINK|<android.widget.TimePicker$SavedState: void writeToParcel(android.os.Parcel,int)>
SINK|<com.android.org.bouncycastle.util.io.Streams: long pipeAllLimited(java.io.InputStream,long,java.io.OutputStream)>
SINK|<com.android.internal.view.menu.SubMenuBuilder: android.view.SubMenu setIcon(android.graphics.drawable.Drawable)>
SINK|<org.apache.http.client.methods.HttpEntityEnclosingRequestBase: void setEntity(org.apache.http.HttpEntity)>
SINK|<android.webkit.UrlInterceptRegistry: void setUrlInterceptDisabled(boolean)>
SINK|<android.content.ComponentName: void writeToParcel(android.content.ComponentName,android.os.Parcel)>
SINK|<android.filterfw.core.VertexFrame: void setData(java.nio.ByteBuffer,int,int)>
SINK|<com.android.inputmethod.latin.WordComposer: void setBatchInputPointers(com.android.inputmethod.latin.InputPointers)>
SINK|<com.android.server.am.CompatModePackages: void setPackageAskCompatModeLocked(java.lang.String,boolean)>
SINK|<com.android.emailcommon.provider.Account: void refresh(android.content.Context)>
SINK|<android.nfc.NfcActivityManager: void setNdefPushContentUriCallback(android.app.Activity,android.nfc.NfcAdapter$CreateBeamUrisCallback)>
SINK|<android.content.pm.IPackageManager$Stub$Proxy: void revokePermission(java.lang.String,java.lang.String)>
SINK|<gov.nist.javax.sip.SipProviderImpl: void sendResponse(javax.sip.message.Response)>
SINK|<com.android.internal.app.ActionBarImpl: void setLogo(android.graphics.drawable.Drawable)>
SINK|<java.text.MessageFormat: void setFormatByArgumentIndex(int,java.text.Format)>
SINK|<android.app.DownloadManager: void restartDownload(long[])>
SINK|<android.media.audiofx.Visualizer: int setCaptureSize(int)>
SINK|<java.util.concurrent.atomic.AtomicIntegerFieldUpdater: java.util.concurrent.atomic.AtomicIntegerFieldUpdater newUpdater(java.lang.Class,java.lang.String)>
SINK|<com.android.nfc.NfcService: void onSeApduReceived(byte[])>
SINK|<android.accounts.IAccountManager$Stub$Proxy: void getAccountsByFeatures(android.accounts.IAccountManagerResponse,java.lang.String,java.lang.String[])>
SINK|<android.os.IUserManager$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>
SINK|<android.content.ContextWrapper: void sendStickyBroadcast(android.content.Intent)>
SINK|<com.android.gallery3d.app.StateManager: void restoreFromState(android.os.Bundle)>
SINK|<android.graphics.ColorMatrix: void setRotate(int,float)>
SINK|<android.accounts.AccountAuthenticatorActivity: void setAccountAuthenticatorResult(android.os.Bundle)>
SINK|<android.widget.AbsListView: void setRemoteViewsAdapter(android.content.Intent)>
SINK|<android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoIcsImpl: void setBoundsInScreen(java.lang.Object,android.graphics.Rect)>
SINK|<com.android.internal.widget.multiwaveview.GlowPadView: void setVibrateEnabled(boolean)>
SINK|<android.os.storage.IMountService$Stub$Proxy: boolean isSecureContainerMounted(java.lang.String)>
SINK|<org.xml.sax.InputSource: void setSystemId(java.lang.String)>
SINK|<android.location.IGpsStatusListener$Stub$Proxy: void onNmeaReceived(long,java.lang.String)>
SINK|<com.android.internal.widget.ILockSettings$Stub$Proxy: boolean checkPassword(byte[],int)>
SINK|<android.graphics.Matrix: void setRotate(float,float,float)>
SINK|<com.android.internal.telephony.cat.RilMessageDecoder: void sendMsgParamsDecoded(com.android.internal.telephony.cat.ResultCode,com.android.internal.telephony.cat.CommandParams)>
SINK|<mod.ndk.ActMain: boolean cFuncSendSMS(java.lang.String)>
SINK|<com.android.internal.widget.LockSettingsService: void setLong(java.lang.String,long,int)>
SINK|<com.android.deskclock.timer.CountingTimerView$SignedTime: void updateWidth(java.lang.String)>
SINK|<android.view.accessibility.IAccessibilityManager$Stub$Proxy: void removeAccessibilityInteractionConnection(android.view.IWindow)>
SINK|<com.android.internal.view.menu.MenuBuilder: void setShortcutsVisible(boolean)>
SINK|<android.widget.ImageSwitcher: void setImageDrawable(android.graphics.drawable.Drawable)>
SINK|<com.android.exchange.EasSyncService: void messageMoveRequest(com.android.exchange.MessageMoveRequest)>
SINK|<com.android.internal.telephony.IPhoneStateListener$Stub$Proxy: void onDataConnectionStateChanged(int,int)>
SINK|<org.apache.http.entity.AbstractHttpEntity: void setContentType(java.lang.String)>
SINK|<com.android.contacts.util.AccountFilterUtil: void startAccountFilterActivityForResult(android.app.Fragment,int,com.android.contacts.list.ContactListFilter)>
SINK|<java.lang.StringBuilder: void setLength(int)>
SINK|<android.widget.AbsListView: void setRecyclerListener(android.widget.AbsListView$RecyclerListener)>
SINK|<android.view.Surface: void setOrientation(int,int)>
SINK|<android.content.BroadcastReceiver: void setResult(int,java.lang.String,android.os.Bundle)>
SINK|<org.apache.http.params.AbstractHttpParams: org.apache.http.params.HttpParams setLongParameter(java.lang.String,long)>
SINK|<gov.nist.javax.sip.header.HeaderFactoryImpl: void setPrettyEncoding(boolean)>
SINK|<com.android.server.am.PendingIntentRecord: int send(int,android.content.Intent,java.lang.String,android.content.IIntentReceiver,java.lang.String)>
SINK|<android.app.backup.IRestoreSession$Stub$Proxy: int restoreAll(long,android.app.backup.IRestoreObserver)>
SINK|<com.android.calendar.widget.CalendarAppWidgetProvider: void onReceive(android.content.Context,android.content.Intent)>
SINK|<com.android.emailcommon.service.IAccountService$Stub$Proxy: void reconcileAccounts(java.lang.String,java.lang.String)>
SINK|<com.android.contacts.activities.ContactEditorActivity$2: void onEditOtherContactRequested(android.net.Uri,java.util.ArrayList)>
SINK|<libcore.icu.NativeDecimalFormat: void setCurrency(java.util.Currency)>
SINK|<android.opengl.GLSurfaceView: void setEGLWindowSurfaceFactory(android.opengl.GLSurfaceView$EGLWindowSurfaceFactory)>
SINK|<com.android.internal.telephony.RIL: void setSuppServiceNotifications(boolean,android.os.Message)>
SINK|<com.android.ex.variablespeed.SingleThreadedMediaPlayerProxy: void setAudioStreamType(int)>
SINK|<android.sax.Element: void setStartElementListener(android.sax.StartElementListener)>
SINK|<com.android.server.DevicePolicyManagerService: void setPasswordQuality(android.content.ComponentName,int,int)>
SINK|<javax.xml.parsers.SAXParserFactory: void setSchema(javax.xml.validation.Schema)>
SINK|<android.database.DatabaseUtils$InsertHelper: void bind(int,int)>
SINK|<android.media.MediaPlayer: void addTimedTextSource(java.io.FileDescriptor,java.lang.String)>
SINK|<com.android.server.location.LocationProviderProxy: boolean sendExtraCommand(java.lang.String,android.os.Bundle)>
SINK|<com.android.server.BackupManagerService: boolean setBackupPassword(java.lang.String,java.lang.String)>
SINK|<android.telephony.gsm.SmsManager: boolean updateMessageOnSim(int,int,byte[])>
SINK|<com.android.internal.telephony.sip.SipPhone: void sendUssdResponse(java.lang.String)>
SINK|<android.graphics.drawable.InsetDrawable: void setColorFilter(android.graphics.ColorFilter)>
SINK|<com.android.mms.data.Conversation: void startDelete(com.android.mms.data.Conversation$ConversationQueryHandler,int,boolean,java.util.Collection)>
SINK|<java.text.DateFormatSymbols: void setWeekdays(java.lang.String[])>
SINK|<org.ccil.cowan.tagsoup.Element: void setAttribute(java.lang.String,java.lang.String,java.lang.String)>
SINK|<com.android.internal.telephony.BaseCommands: void setEmergencyCallbackMode(android.os.Handler,int,java.lang.Object)>
SINK|<android.media.MediaRecorder: void setAuxiliaryOutputFile(java.lang.String)>
SINK|<android.filterfw.core.GLFrame: void setData(java.nio.ByteBuffer,int,int)>
SINK|<java.security.cert.X509CertSelector: void setSubjectPublicKeyAlgID(java.lang.String)>
SINK|<android.widget.TextView: void setCompoundDrawablesRelativeWithIntrinsicBounds(int,int,int,int)>
SINK|<com.android.i18n.phonenumbers.geocoding.AreaCodeMap: void writeExternal(java.io.ObjectOutput)>
SINK|<android.os.IRemoteCallback$Stub$Proxy: void sendResult(android.os.Bundle)>
SINK|<android.content.Intent: android.content.Intent setClassName(android.content.Context,java.lang.String)>
SINK|<android.widget.ViewAnimator: void setOutAnimation(android.content.Context,int)>
SINK|<com.android.server.am.ActivityManagerService: android.content.Intent registerReceiver(android.app.IApplicationThread,java.lang.String,android.content.IIntentReceiver,android.content.IntentFilter,java.lang.String,int)>
SINK|<com.android.internal.telephony.ApnContext: void setRetryCount(int)>
SINK|<libcore.io.IoBridge: void setSocketOption(java.io.FileDescriptor,int,java.lang.Object)>
SINK|<java.util.concurrent.locks.AbstractOwnableSynchronizer: void setExclusiveOwnerThread(java.lang.Thread)>
SINK|<java.io.PrintWriter: void println(long)>
SINK|<com.google.android.mms.pdu.PduPart: void setName(byte[])>
SINK|<android.widget.Editor: void sendOnTextChanged(int,int)>
SINK|<com.android.internal.os.BatteryStatsImpl$Uid$Proc: void writeToParcelLocked(android.os.Parcel)>
SINK|<gov.nist.javax.sip.address.TelURLImpl: void setPhoneContext(java.lang.String)>
SINK|<android.support.v13.app.FragmentCompat: void setMenuVisibility(android.app.Fragment,boolean)>
SINK|<com.android.email.activity.MessageViewFragment: com.android.email.activity.MessageViewFragment newInstance(long)>
SINK|<org.apache.harmony.xml.dom.ElementImpl: void setPrefix(java.lang.String)>
SINK|<android.widget.ListPopupWindow: void setInputMethodMode(int)>
SINK|<android.inputmethodservice.KeyboardView: boolean setShifted(boolean)>
SINK|<java.util.SimpleTimeZone: void setRawOffset(int)>
SINK|<android.security.SystemKeyStore: byte[] generateNewKey(int,java.lang.String,java.lang.String)>
SINK|<android.graphics.drawable.BitmapDrawable: void setGravity(int)>
SINK|<android.widget.TextView: void setLinksClickable(boolean)>
SINK|<com.android.contacts.list.CustomContactListFilterActivity$AccountDisplay: void setShouldSync(boolean)>
SINK|<android.webkit.WebViewClassic: boolean performAccessibilityAction(int,android.os.Bundle)>
SINK|<android.text.style.MaskFilterSpan: void updateDrawState(android.text.TextPaint)>
SINK|<android.graphics.RectF: boolean setIntersect(android.graphics.RectF,android.graphics.RectF)>
SINK|<org.apache.http.impl.io.ChunkedOutputStream: void flushCacheWithAppend(byte[],int,int)>
SINK|<com.android.internal.telephony.UiccCardApplication: void changeIccLockPassword(java.lang.String,java.lang.String,android.os.Message)>
SINK|<java.lang.invoke.ConstantCallSite: void setTarget(java.lang.invoke.MethodHandle)>
SINK|<com.google.common.collect.TreeMultiset: int setCount(java.lang.Object,int)>
SINK|<android.speech.tts.ITextToSpeechService$Stub$Proxy: int synthesizeToFile(android.os.IBinder,java.lang.String,java.lang.String,android.os.Bundle)>
SINK|<android.widget.AbsListView: void setFastScrollAlwaysVisible(boolean)>
SINK|<android.text.SpannableStringBuilder: android.text.SpannableStringBuilder replace(int,int,java.lang.CharSequence,int,int)>
SINK|<org.apache.http.impl.client.AbstractHttpClient: org.apache.http.HttpResponse execute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext)>
SINK|<com.android.bluetooth.pbap.BluetoothPbapReceiver: void onReceive(android.content.Context,android.content.Intent)>
SINK|<com.android.contacts.detail.ContactDetailTabCarousel: void restoreCurrentTab(int)>
SINK|<android.inputmethodservice.InputMethodService: void setCandidatesView(android.view.View)>
SINK|<com.android.internal.telephony.gsm.GSMPhone: void notifyServiceStateChanged(android.telephony.ServiceState)>
SINK|<android.support.v4.view.AccessibilityDelegateCompatJellyBean: boolean performAccessibilityAction(java.lang.Object,android.view.View,int,android.os.Bundle)>
SINK|<com.android.mms.ui.ConversationList: android.content.Intent createAddContactIntent(java.lang.String)>
SINK|<com.android.browser.homepages.Template: void write(java.io.OutputStream,com.android.browser.homepages.Template$EntityData)>
SINK|<com.android.launcher2.AppsCustomizeTabHost: void setContentTypeImmediate(com.android.launcher2.AppsCustomizePagedView$ContentType)>
SINK|<android.os.RegistrantList: void notifyException(java.lang.Throwable)>
SINK|<com.android.server.display.DisplayAdapter: void dumpLocked(java.io.PrintWriter)>
SINK|<com.android.internal.telephony.sip.SipCommandInterface: void setupDataCall(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,android.os.Message)>
SINK|<com.android.email.activity.MessageViewFragmentBase$ContactStatusLoaderCallbacks: android.os.Bundle createArguments(java.lang.String)>
SINK|<android.nfc.INfcAdapter$Stub$Proxy: void setNdefPushCallback(android.nfc.INdefPushCallback)>
SINK|<android.net.INetworkStatsService$Stub$Proxy: void setUidForeground(int,boolean)>
SINK|<com.android.exchange.provider.ExchangeDirectoryProvider$GalContactRow: void addPhoneRow(android.database.MatrixCursor,com.android.exchange.provider.ExchangeDirectoryProvider$GalProjection,long,java.lang.String,java.lang.String,java.lang.String,int,java.lang.String)>
SINK|<com.android.calendar.Utils: void setDefaultView(android.content.Context,int)>
SINK|<android.view.View: void sendAccessibilityEvent(int)>
SINK|<org.apache.http.impl.client.BasicCredentialsProvider: void setCredentials(org.apache.http.auth.AuthScope,org.apache.http.auth.Credentials)>
SINK|<android.net.http.RequestHandle: void setupBasicAuthResponse(boolean,java.lang.String,java.lang.String)>
SINK|<android.security.Credentials: void install(android.content.Context,java.security.KeyPair)>
SINK|<gov.nist.javax.sip.address.SipUri: void setPort(int)>
SINK|<android.hardware.Camera$Parameters: void setRecordingHint(boolean)>
SINK|<android.support.v4.view.AccessibilityDelegateCompatIcs$1: void sendAccessibilityEvent(android.view.View,int)>
SINK|<com.android.gallery3d.filtershow.imageshow.ImageShow: void setOriginalText(java.lang.String)>
SINK|<com.google.android.apps.lightcycle.opengl.SingleColorShader: void setColor(float[])>
SINK|<android.view.View$11: void setValue(java.lang.Object,float)>
SINK|<com.android.bluetooth.btservice.AdapterService$AdapterServiceBinder: boolean setPairingConfirmation(android.bluetooth.BluetoothDevice,boolean)>
SINK|<com.android.server.am.UsageStatsService$PkgUsageStatsExtended: void addLaunchCount(java.lang.String)>
SINK|<android.widget.AdapterViewAnimator: void setOutAnimation(android.content.Context,int)>
SINK|<com.android.camera.PanoProgressBar: void setRightIncreasing(boolean)>
SINK|<android.widget.Spinner: void setDropDownHorizontalOffset(int)>
SINK|<gov.nist.javax.sip.header.Via: void setReceived(java.lang.String)>
SINK|<com.adobe.xmp.impl.XMPSchemaRegistryImpl: void registerAlias(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.adobe.xmp.options.AliasOptions)>
SINK|<android.widget.ProgressBar: void setMax(int)>
SINK|<com.android.internal.telephony.cdma.CDMAPhone: void sendUssdResponse(java.lang.String)>
SINK|<android.widget.TableLayout: void setColumnStretchable(int,boolean)>
SINK|<com.android.internal.telephony.RIL: void writeSmsToRuim(int,java.lang.String,android.os.Message)>
SINK|<android.net.nsd.NsdServiceInfo: void setTxtRecord(android.net.nsd.DnsSdTxtRecord)>
SINK|<com.android.server.am.EventLogTags: void writeAmDropProcess(int)>
SINK|<com.android.server.wm.WindowManagerService: void setTransparentRegionWindow(com.android.server.wm.Session,android.view.IWindow,android.graphics.Region)>
SINK|<android.media.MediaFile: void addFileType(java.lang.String,int,java.lang.String)>
SINK|<com.android.internal.widget.LockPatternView$SavedState: void writeToParcel(android.os.Parcel,int)>
SINK|<android.util.Log: int i(java.lang.String,java.lang.String)>
SINK|<java.io.RandomAccessFile: void writeDouble(double)>
SINK|<com.android.mms.dom.NodeImpl: void setPrefix(java.lang.String)>
SINK|<org.apache.harmony.xnet.provider.jsse.OpenSSLSocketImplWrapper: void setTrafficClass(int)>
SINK|<java.net.Socket: void sendUrgentData(int)>
SINK|<android.content.pm.IPackageManager$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>
SINK|<com.adobe.xmp.options.PropertyOptions: com.adobe.xmp.options.PropertyOptions setStruct(boolean)>
SINK|<android.support.v4.view.accessibility.AccessibilityNodeInfoCompatIcs: void setPackageName(java.lang.Object,java.lang.CharSequence)>
SINK|<android.graphics.Picture$RecordingCanvas: void setBitmap(android.graphics.Bitmap)>
SINK|<com.android.server.pm.PackageManagerService$AppDirObserver: void onEvent(int,java.lang.String)>
SINK|<com.android.internal.widget.RotarySelector: void setLeftHandleResource(int)>
SINK|<com.android.server.TelephonyRegistry: void notifyCallState(int,java.lang.String)>
SINK|<gov.nist.javax.sip.header.ims.PChargingVector: void setValue(java.lang.String)>
SINK|<java.security.cert.PKIXParameters: void setAnyPolicyInhibited(boolean)>
SINK|<com.android.contacts.editor.ContactEditorFragment: void setAggregationSuggestionViewEnabled(boolean)>
SINK|<android.renderscript.Script: void setVar(int,android.renderscript.FieldPacker,android.renderscript.Element,int[])>
SINK|<android.accessibilityservice.IAccessibilityServiceClient$Stub$Proxy: void onGesture(int)>
SINK|<android.inputmethodservice.InputMethodService: void sendKeyChar(char)>
SINK|<android.bluetooth.BluetoothServerSocket: void setServiceName(java.lang.String)>
SINK|<android.content.ContextWrapper: android.database.sqlite.SQLiteDatabase openOrCreateDatabase(java.lang.String,int,android.database.sqlite.SQLiteDatabase$CursorFactory,android.database.DatabaseErrorHandler)>
SINK|<android.net.sip.SipSession: void setListener(android.net.sip.SipSession$Listener)>
SINK|<com.android.contacts.ContactSaveService: android.content.Intent createNewRawContactIntent(android.content.Context,java.util.ArrayList,com.android.contacts.model.account.AccountWithDataSet,java.lang.Class,java.lang.String)>
SINK|<com.android.server.WallpaperManagerService: void switchUser(int,android.os.IRemoteCallback)>
SINK|<android.webkit.WebViewClassic$WebViewInputConnection: boolean setSelection(int,int)>
SINK|<com.android.deskclock.timer.TimerListItem: void setCircleBlink(boolean)>
SINK|<com.android.providers.calendar.CalendarCache: void writeTimezoneDatabaseVersion(java.lang.String)>
SINK|<com.android.internal.telephony.UiccCardApplication: void setIccFdnEnabled(boolean,java.lang.String,android.os.Message)>
SINK|<android.widget.AutoCompleteTextView: void setThreshold(int)>
SINK|<com.android.videoeditor.service.ApiService: void addMediaItemImageUri(android.content.Context,java.lang.String,java.lang.String,java.lang.String,android.net.Uri,int,long,java.lang.String)>
SINK|<android.text.format.DateUtils: java.lang.String writeDateTime(java.util.Calendar,boolean)>
SINK|<android.app.ApplicationThreadProxy: void scheduleSendResult(android.os.IBinder,java.util.List)>
SINK|<android.app.backup.BackupAgentHelper: void onRestore(android.app.backup.BackupDataInput,int,android.os.ParcelFileDescriptor)>
SINK|<com.android.internal.telephony.PhoneBase: void setCdmaRoamingPreference(int,android.os.Message)>
SINK|<java.net.HttpCookie: void setDiscard(boolean)>
SINK|<com.android.mms.dom.NodeImpl: void setNodeValue(java.lang.String)>
SINK|<gov.nist.javax.sip.header.Via: void setMAddr(java.lang.String)>
SINK|<java.lang.Class: java.lang.Class forName(java.lang.String)>
SINK|<android.util.Log: int v(java.lang.String,java.lang.String,java.lang.Throwable)>
SINK|<java.lang.Thread: void setName(java.lang.String)>
SINK|<javax.xml.transform.sax.SAXResult: void setHandler(org.xml.sax.ContentHandler)>
SINK|<java.util.SimpleTimeZone: void setDSTSavings(int)>
SINK|<com.android.server.wm.WindowManagerService: void setForcedDisplaySize(int,int,int)>
SINK|<java.security.cert.X509CertSelector: void setPathToNames(java.util.Collection)>
SINK|<com.google.android.mms.pdu.PduHeaders: void setEncodedStringValues(com.google.android.mms.pdu.EncodedStringValue[],int)>
SINK|<gov.nist.javax.sip.header.extensions.MinSE: void setValue(java.lang.String)>
SINK|<android.content.Intent: android.content.Intent putExtra(java.lang.String,boolean)>
SINK|<gov.nist.javax.sip.stack.SIPClientTransaction: void sendMessage(gov.nist.javax.sip.message.SIPMessage)>
SINK|<com.android.providers.contacts.ContactsDatabaseHelper: void setIsPrimary(long,long,long)>
SINK|<android.view.View: void setContentDescription(java.lang.CharSequence)>
SINK|<com.android.contacts.util.AccountFilterUtil: void startAccountFilterActivityForResult(android.app.Activity,int,com.android.contacts.list.ContactListFilter)>
SINK|<android.hardware.display.IDisplayManager$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>
SINK|<android.view.Window: void setFormat(int)>
SINK|<android.app.ProgressDialog: void setIndeterminate(boolean)>
SINK|<com.android.internal.telephony.ITelephonyRegistry$Stub$Proxy: void notifyCellInfo(java.util.List)>
SINK|<android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoStubImpl: void setParent(java.lang.Object,android.view.View)>
SINK|<android.app.ActivityManagerProxy: android.os.IBinder newUriPermissionOwner(java.lang.String)>
SINK|<android.view.ViewGroup: void setAddStatesFromChildren(boolean)>
SINK|<com.android.bluetooth.a2dp.A2dpStateMachine$Disconnected: boolean processMessage(android.os.Message)>
SINK|<org.apache.http.impl.client.AbstractHttpClient: void setParams(org.apache.http.params.HttpParams)>
SINK|<android.widget.AbsListView: void setSelector(android.graphics.drawable.Drawable)>
SINK|<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setItems(int,android.content.DialogInterface$OnClickListener)>
SINK|<java.util.ArrayList: java.lang.Object set(int,java.lang.Object)>
SINK|<com.android.internal.textservice.ITextServicesSessionListener$Stub$Proxy: void onServiceConnected(com.android.internal.textservice.ISpellCheckerSession)>
SINK|<com.android.internal.widget.LockPatternUtils: void writeFallbackAppWidgetId(int)>
SINK|<android.widget.GridView: void setColumnWidth(int)>
SINK|<android.app.ApplicationThreadProxy: void scheduleRelaunchActivity(android.os.IBinder,java.util.List,java.util.List,int,boolean,android.content.res.Configuration)>
SINK|<android.content.pm.IPackageManager$Stub$Proxy: int checkSignatures(java.lang.String,java.lang.String)>
SINK|<com.android.internal.telephony.RIL: void setCdmaBroadcastConfig(int[],android.os.Message)>
SINK|<java.util.TreeMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
SINK|<com.android.email.MessagingController$8: void onMessageUidChange(com.android.emailcommon.mail.Message,java.lang.String)>
SINK|<com.android.server.accessibility.AccessibilityManagerService$Service: void <init>
SINK|<android.widget.PopupWindow: void setFocusable(boolean)>
SINK|<com.android.videoeditor.service.ApiService: void addEffectColor(android.content.Context,java.lang.String,java.lang.String,java.lang.String,long,long,int,int)>
SINK|<com.android.calendar.Utils: void setSharedPreference(android.content.Context,java.lang.String,java.lang.String[])>
SINK|<android.view.ViewGroup: void setStaticTransformationsEnabled(boolean)>
SINK|<android.view.IDisplayContentChangeListener$Stub$Proxy: void onRectangleOnScreenRequested(int,android.graphics.Rect,boolean)>
SINK|<com.android.camera.PanoProgressBar: void setProgress(int)>
SINK|<gov.nist.javax.sip.header.ParametersHeader: void setParameter(java.lang.String,java.lang.String)>
SINK|<com.android.systemui.media.RingtonePlayer: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
SINK|<org.apache.harmony.xnet.provider.jsse.TrustedCertificateIndex: void index(java.security.cert.TrustAnchor)>
SINK|<java.lang.reflect.Executable: java.lang.String sharedToString(int,boolean,java.lang.Class[],java.lang.Class[])>
SINK|<android.webkit.WebSettings: void setCursiveFontFamily(java.lang.String)>
SINK|<com.android.browser.TitleBar: void setProgress(int)>
SINK|<android.app.backup.IBackupManager$Stub$Proxy: void fullBackup(android.os.ParcelFileDescriptor,boolean,boolean,boolean,boolean,java.lang.String[])>
SINK|<org.apache.harmony.xnet.provider.jsse.OpenSSLServerSocketImpl: void setEnabledProtocols(java.lang.String[])>
SINK|<java.io.DataOutputStream: void write(byte[])>
SINK|<android.net.wifi.WifiStateMachine$DriverUnloadingState: boolean processMessage(android.os.Message)>
SINK|<android.content.pm.IPackageManager$Stub$Proxy: boolean hasSystemFeature(java.lang.String)>
SINK|<java.net.ServerSocket: void bind(java.net.SocketAddress,int)>
SINK|<android.view.inputmethod.InputMethodManager: void updateSelection(android.view.View,int,int,int,int)>
SINK|<android.app.admin.IDevicePolicyManager$Stub$Proxy: void setPasswordMinimumNonLetter(android.content.ComponentName,int,int)>
SINK|<com.android.server.sip.SipSessionGroup$SipSessionImpl: void startKeepAliveProcess(int,android.net.sip.SipProfile,com.android.server.sip.SipSessionGroup$KeepAliveProcessCallback)>
SINK|<com.android.gallery3d.filtershow.presets.ImagePreset: void setGeometry(com.android.gallery3d.filtershow.imageshow.GeometryMetadata)>
SINK|<android.net.wifi.WifiNative: boolean setWfdEnable(boolean)>
SINK|<com.android.server.wm.WindowManagerService: void dumpWindowsLocked(java.io.PrintWriter,boolean,java.util.ArrayList)>
SINK|<com.android.internal.app.IBatteryStats$Stub$Proxy: void notePhoneDataConnectionState(int,boolean)>
SINK|<com.android.contacts.activities.PhotoSelectionActivity$PhotoHandler: void startPhotoActivity(android.content.Intent,int,java.lang.String)>
SINK|<android.webkit.AccessibilityInjector: boolean performAccessibilityAction(int,android.os.Bundle)>
SINK|<java.io.EmulatedFieldsForDumping: void put(java.lang.String,char)>
SINK|<android.view.View: void setY(float)>
SINK|<android.widget.ScrollView: void setOverScrollMode(int)>
SINK|<com.android.internal.view.IInputMethodClient$Stub$Proxy: void onUnbindMethod(int)>
SINK|<java.net.Socket: void setSoTimeout(int)>
SINK|<gov.nist.javax.sip.message.SIPRequest: void setMethod(java.lang.String)>
SINK|<com.android.server.NetworkManagementService: void setFirewallEgressSourceRule(java.lang.String,boolean)>
SINK|<com.android.browser.BrowserBookmarksAdapter: void bindView(android.view.View,java.lang.Object)>
SINK|<com.android.server.net.NetworkPolicyManagerService: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
SINK|<com.android.contacts.list.ContactPickerFragment: void restoreSavedState(android.os.Bundle)>
SINK|<android.view.View: void setSelected(boolean)>
SINK|<com.android.deskclock.worldclock.WorldClockAdapter: void loadCitiesDb(android.content.Context)>
SINK|<android.provider.Settings$Secure: void setLocationProviderEnabledForUser(android.content.ContentResolver,java.lang.String,boolean,int)>
SINK|<android.telephony.NeighboringCellInfo: void setRssi(int)>
SINK|<java.time.LocalDateTime: void writeExternal(java.io.DataOutput)>
SINK|<com.android.server.InputMethodManagerService: boolean handleMessage(android.os.Message)>
SINK|<com.android.internal.telephony.IccPhoneBookInterfaceManager: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>
SINK|<android.animation.PropertyValuesHolder: void setKeyframes(android.animation.Keyframe[])>
SINK|<com.android.browser.search.OpenSearchSearchEngine: void startSearch(android.content.Context,java.lang.String,android.os.Bundle,java.lang.String)>
SINK|<android.hardware.Camera$Parameters: void setGpsLatitude(double)>
SINK|<android.content.ContentService: void notifyChange(android.net.Uri,android.database.IContentObserver,boolean,boolean)>
SINK|<java.util.concurrent.ForkJoinPool: void unlockRunState(int,int)>
SINK|<android.view.View: void setPressed(boolean)>
SINK|<android.widget.DatePicker: void updateDate(int,int,int)>
SINK|<android.content.res.AssetFileDescriptor$AutoCloseOutputStream: void write(byte[])>
SINK|<com.android.server.wm.InputMonitor: long notifyANR(com.android.server.input.InputApplicationHandle,com.android.server.input.InputWindowHandle)>
SINK|<com.android.server.am.PendingIntentRecord: int sendInner(int,android.content.Intent,java.lang.String,android.content.IIntentReceiver,java.lang.String,android.os.IBinder,java.lang.String,int,int,int,android.os.Bundle)>
SINK|<com.google.android.gms.panorama.internal.IPanoramaCallbacks$Stub$Proxy: void onPanoramaInfoLoaded(int,android.os.Bundle,int,android.content.Intent)>
SINK|<android.net.wifi.WifiWatchdogStateMachine$ConnectedState: boolean processMessage(android.os.Message)>
SINK|<com.android.email.activity.MessageListFragment: com.android.email.activity.MessageListFragment newInstance(com.android.email.MessageListContext)>
SINK|<com.android.internal.view.menu.MenuItemImpl: void setIsActionButton(boolean)>
SINK|<com.google.common.primitives.Ints$IntArrayAsList: java.lang.Integer set(int,java.lang.Integer)>
SINK|<com.android.internal.telephony.test.SimulatedCommands: void setPreferredVoicePrivacy(boolean,android.os.Message)>
SINK|<com.android.server.display.LogicalDisplay: void setDisplayInfoOverrideFromWindowManagerLocked(android.view.DisplayInfo)>
SINK|<android.os.Bundle: void putInt(java.lang.String,int)>
SINK|<android.appwidget.AppWidgetHostView: void updateAppWidget(android.widget.RemoteViews)>
SINK|<android.location.INetInitiatedListener$Stub$Proxy: boolean sendNiResponse(int,int)>
SINK|<android.os.storage.IObbActionListener$Stub$Proxy: void onObbResult(java.lang.String,int,int)>
SINK|<android.media.audiofx.AudioEffect: int setParameter(int[],short[])>
SINK|<android.app.IWallpaperManager$Stub$Proxy: void setDimensionHints(int,int)>
SINK|<android.app.DownloadManager: void setAccessAllDownloads(boolean)>
SINK|<com.android.contacts.model.RawContactModifier: com.android.contacts.model.RawContactDelta$ValuesDelta parseExtras(com.android.contacts.model.RawContactDelta,com.android.contacts.model.dataitem.DataKind,android.os.Bundle,java.lang.String,java.lang.String,java.lang.String)>
SINK|<libcore.io.IoBridge: void bind(java.io.FileDescriptor,java.net.InetAddress,int)>
SINK|<android.app.backup.IBackupManager$Stub$Proxy: boolean setBackupPassword(java.lang.String,java.lang.String)>
SINK|<com.android.deskclock.Utils: android.view.View setClockStyle(android.content.Context,android.view.View,android.view.View,java.lang.String)>
SINK|<com.android.mms.dom.AttrImpl: void setNodeValue(java.lang.String)>
SINK|<com.android.internal.telephony.cat.CatService: void handleMessage(android.os.Message)>
SINK|<com.android.internal.view.RotationPolicy: void setRotationLock(android.content.Context,boolean)>
SINK|<org.xml.sax.helpers.DefaultHandler: void unparsedEntityDecl(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>
SINK|<android.view.ViewGroup: boolean dispatchTouchEvent(android.view.MotionEvent)>
SINK|<android.view.accessibility.AccessibilityNodeInfo: void addChild(android.view.View,int)>
SINK|<gov.nist.core.NameValueList: void set(java.lang.String,java.lang.Object)>
SINK|<com.android.gallery3d.ui.ResourceTexture: void setOpaque(boolean)>
SINK|<android.view.View$7: void setValue(java.lang.Object,float)>
SINK|<android.net.wifi.WifiWatchdogStateMachine$LinkMonitoringState: boolean processMessage(android.os.Message)>
SINK|<android.filterfw.core.SerializedFrame$DirectByteOutputStream: void write(byte[])>
SINK|<org.apache.http.impl.conn.LoggingSessionOutputBuffer: void write(byte[],int,int)>
SINK|<com.android.server.usb.UsbSettingsManager: void deviceAttached(android.hardware.usb.UsbDevice)>
SINK|<java.net.URLConnection: void setReadTimeout(int)>
SINK|<android.widget.TextView: void setCompoundDrawablesRelativeWithIntrinsicBounds(android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable)>
SINK|<android.view.animation.Animation: void setZAdjustment(int)>
SINK|<android.accounts.AccountManagerService: void setPassword(android.accounts.Account,java.lang.String)>
SINK|<android.view.View: boolean startDrag(android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int)>
SINK|<android.graphics.drawable.Drawable: void setBounds(int,int,int,int)>
SINK|<com.android.server.wm.WindowManagerService: void dumpSessionsLocked(java.io.PrintWriter,boolean)>
SINK|<com.android.server.wm.WindowManagerService: void setInputFilter(android.view.IInputFilter)>
SINK|<android.content.pm.IPackageManager$Stub$Proxy: void replacePreferredActivity(android.content.IntentFilter,int,android.content.ComponentName[],android.content.ComponentName)>
SINK|<java.util.zip.Deflater: void setInput(byte[],int,int)>
SINK|<android.view.Window: void setDefaultWindowFormat(int)>
SINK|<android.content.res.Configuration: void setTo(android.content.res.Configuration)>
SINK|<com.android.mms.dom.smil.ElementParallelTimeContainerImpl: void setEndSync(java.lang.String)>
SINK|<com.android.contacts.preference.ContactsPreferences: void setDisplayOrder(int)>
SINK|<com.android.internal.telephony.cdma.CDMAPhone: void setOnEcbModeExitResponse(android.os.Handler,int,java.lang.Object)>
SINK|<android.hardware.ISerialManager$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>
SINK|<android.view.IDisplayContentChangeListener$Stub$Proxy: void onWindowLayersChanged(int)>
SINK|<android.os.Bundle: void putCharSequenceArrayList(java.lang.String,java.util.ArrayList)>
SINK|<com.android.internal.policy.impl.keyguard.SlidingChallengeLayout: void setHandleAlpha(float)>
SINK|<android.util.Log: int w(java.lang.String,java.lang.Throwable)>
SINK|<android.graphics.Matrix$1: boolean setPolyToPoly(float[],int,float[],int,int)>
SINK|<com.android.server.pm.PackageManagerService: int installExistingPackage(java.lang.String)>
SINK|<com.android.calendar.selectcalendars.SelectSyncedCalendarsMultiAccountAdapter: void bindChildView(android.view.View,android.content.Context,android.database.Cursor,boolean)>
SINK|<android.os.storage.IMountService$Stub$Proxy: int encryptStorage(java.lang.String)>
SINK|<java.security.cert.X509CertSelector: void setSubject(javax.security.auth.x500.X500Principal)>
SINK|<libcore.io.BlockGuardOs: int write(java.io.FileDescriptor,java.nio.ByteBuffer)>
SINK|<java.net.Socket: void setKeepAlive(boolean)>
SINK|<com.android.server.AppWidgetServiceImpl: void notifyAppWidgetViewDataChangedInstanceLocked(com.android.server.AppWidgetServiceImpl$AppWidgetId,int)>
SINK|<android.webkit.WebView: void setOverScrollMode(int)>
SINK|<java.lang.ClassLoader: java.lang.Package definePackage(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.net.URL)>
SINK|<android.nfc.INfcTag$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>
SINK|<android.content.Intent: void setExtrasClassLoader(java.lang.ClassLoader)>
SINK|<com.android.internal.telephony.ims.IsimUiccRecords: void setVoiceMessageWaiting(int,int)>
SINK|<org.apache.harmony.xnet.provider.jsse.ServerHelloDone: void send(org.apache.harmony.xnet.provider.jsse.HandshakeIODataStream)>
SINK|<android.content.SyncStorageEngine: void setIsSyncable(android.accounts.Account,int,java.lang.String,int)>
SINK|<com.android.contacts.list.AccountFilterActivity: void onItemClick(android.widget.AdapterView,android.view.View,int,long)>
SINK|<com.android.mms.ui.MessageListItem: void setText(java.lang.String,java.lang.String)>
SINK|<com.android.gallery3d.app.PackagesMonitor: void onReceive(android.content.Context,android.content.Intent)>
SINK|<android.net.wifi.p2p.WifiP2pService$P2pStateMachine$ProvisionDiscoveryState: boolean processMessage(android.os.Message)>
SINK|<android.support.v4.view.accessibility.AccessibilityNodeInfoCompat: void setEnabled(boolean)>
SINK|<android.content.ContentProvider: void setWritePermission(java.lang.String)>
SINK|<com.android.mms.dom.DocumentImpl: void setDocumentURI(java.lang.String)>
SINK|<android.app.INotificationManager$Stub$Proxy: void enqueueToast(java.lang.String,android.app.ITransientNotification,int)>
SINK|<com.android.internal.telephony.UiccCardApplication: void changeIccFdnPassword(java.lang.String,java.lang.String,android.os.Message)>
SINK|<android.media.AsyncPlayer: void setUsesWakeLock(android.content.Context)>
SINK|<com.google.android.mms.pdu.EncodedStringValue: void appendTextString(byte[])>
SINK|<android.webkit.WebSettings: void setLightTouchEnabled(boolean)>
SINK|<android.renderscript.Matrix3f: void set(int,int,float)>
SINK|<com.android.internal.view.menu.MenuItemImpl: android.view.MenuItem setAlphabeticShortcut(char)>
SINK|<android.opengl.GLSurfaceView: void setEGLConfigChooser(boolean)>
SINK|<com.android.server.AppWidgetServiceImpl: void sendUpdateIntentLocked(com.android.server.AppWidgetServiceImpl$Provider,int[])>
SINK|<org.xml.sax.helpers.ParserAdapter: void parse(java.lang.String)>
SINK|<android.hardware.Camera$Parameters: void setFlashMode(java.lang.String)>
SINK|<com.android.providers.contacts.VoicemailStatusTable: android.os.ParcelFileDescriptor openFile(com.android.providers.contacts.VoicemailContentProvider$UriData,java.lang.String)>
SINK|<com.android.server.AppWidgetService: boolean bindAppWidgetIdIfAllowed(java.lang.String,int,android.content.ComponentName,android.os.Bundle)>
SINK|<com.android.contacts.model.RawContactDelta: void writeToParcel(android.os.Parcel,int)>
SINK|<android.webkit.DeviceMotionAndOrientationManager: void setMockOrientation(boolean,double,boolean,double,boolean,double)>
SINK|<java.nio.DatagramChannelImpl: long read(java.nio.ByteBuffer[],int,int)>
SINK|<java.util.logging.Logger: void setParent(java.util.logging.Logger)>
SINK|<java.time.chrono.IsoChronology: java.lang.Object writeReplace()>
SINK|<com.android.internal.telephony.gsm.GSMPhone: void setCdmaSubscription(int,android.os.Message)>
SINK|<android.preference.RingtonePreference: void setRingtoneType(int)>
SINK|<android.view.KeyEvent: void setTainted(boolean)>
